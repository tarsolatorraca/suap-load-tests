/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 213608.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 574.0], [7.9, 587.0], [8.0, 612.0], [8.1, 619.0], [8.2, 720.0], [8.3, 736.0], [8.4, 748.0], [8.5, 1002.0], [8.6, 1309.0], [8.7, 1468.0], [8.8, 1538.0], [8.9, 1545.0], [9.0, 1557.0], [9.1, 1820.0], [9.2, 2084.0], [9.3, 2161.0], [9.4, 2187.0], [9.5, 2206.0], [9.6, 2256.0], [9.7, 2329.0], [9.8, 2419.0], [9.9, 2452.0], [10.0, 2763.0], [10.1, 2836.0], [10.2, 2955.0], [10.3, 3059.0], [10.4, 3083.0], [10.5, 3194.0], [10.6, 3303.0], [10.7, 3464.0], [10.8, 3618.0], [10.9, 3624.0], [11.0, 3814.0], [11.1, 3944.0], [11.2, 4102.0], [11.3, 4212.0], [11.4, 4407.0], [11.5, 4519.0], [11.6, 4588.0], [11.7, 4660.0], [11.8, 4762.0], [11.9, 4827.0], [12.0, 5197.0], [12.1, 5648.0], [12.2, 5698.0], [12.3, 5810.0], [12.4, 5849.0], [12.5, 5911.0], [12.6, 6065.0], [12.7, 6222.0], [12.8, 6339.0], [12.9, 6352.0], [13.0, 6535.0], [13.1, 6718.0], [13.2, 7164.0], [13.3, 7166.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7171.0], [15.5, 7172.0], [15.6, 7172.0], [15.7, 7172.0], [15.8, 7173.0], [15.9, 7381.0], [16.0, 7420.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7427.0], [17.1, 7428.0], [17.2, 7428.0], [17.3, 7451.0], [17.4, 7582.0], [17.5, 7625.0], [17.6, 7675.0], [17.7, 7676.0], [17.8, 7677.0], [17.9, 7679.0], [18.0, 7679.0], [18.1, 7679.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7683.0], [19.7, 7683.0], [19.8, 7683.0], [19.9, 7684.0], [20.0, 7684.0], [20.1, 7909.0], [20.2, 7931.0], [20.3, 7932.0], [20.4, 7932.0], [20.5, 7934.0], [20.6, 7935.0], [20.7, 7935.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7939.0], [22.0, 7940.0], [22.1, 7940.0], [22.2, 8121.0], [22.3, 8185.0], [22.4, 8187.0], [22.5, 8188.0], [22.6, 8188.0], [22.7, 8188.0], [22.8, 8188.0], [22.9, 8188.0], [23.0, 8188.0], [23.1, 8191.0], [23.2, 8191.0], [23.3, 8191.0], [23.4, 8191.0], [23.5, 8191.0], [23.6, 8191.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8195.0], [24.6, 8414.0], [24.7, 8415.0], [24.8, 8447.0], [24.9, 8448.0], [25.0, 8452.0], [25.1, 8699.0], [25.2, 8699.0], [25.3, 8700.0], [25.4, 8700.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8703.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8705.0], [27.0, 8733.0], [27.1, 8770.0], [27.2, 8956.0], [27.3, 8960.0], [27.4, 8960.0], [27.5, 8960.0], [27.6, 8960.0], [27.7, 8960.0], [27.8, 8960.0], [27.9, 8963.0], [28.0, 9198.0], [28.1, 9211.0], [28.2, 9212.0], [28.3, 9212.0], [28.4, 9213.0], [28.5, 9215.0], [28.6, 9215.0], [28.7, 9215.0], [28.8, 9215.0], [28.9, 9215.0], [29.0, 9215.0], [29.1, 9216.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9216.0], [29.5, 9216.0], [29.6, 9216.0], [29.7, 9217.0], [29.8, 9219.0], [29.9, 9220.0], [30.0, 9222.0], [30.1, 9230.0], [30.2, 9288.0], [30.3, 9325.0], [30.4, 9404.0], [30.5, 9420.0], [30.6, 9428.0], [30.7, 9472.0], [30.8, 9472.0], [30.9, 9472.0], [31.0, 9472.0], [31.1, 9472.0], [31.2, 9472.0], [31.3, 9474.0], [31.4, 9533.0], [31.5, 9559.0], [31.6, 9627.0], [31.7, 9652.0], [31.8, 9703.0], [31.9, 9722.0], [32.0, 9723.0], [32.1, 9726.0], [32.2, 9726.0], [32.3, 9727.0], [32.4, 9727.0], [32.5, 9727.0], [32.6, 9727.0], [32.7, 9727.0], [32.8, 9728.0], [32.9, 9728.0], [33.0, 9728.0], [33.1, 9728.0], [33.2, 9728.0], [33.3, 9728.0], [33.4, 9728.0], [33.5, 9728.0], [33.6, 9728.0], [33.7, 9732.0], [33.8, 9732.0], [33.9, 9792.0], [34.0, 9799.0], [34.1, 9812.0], [34.2, 9834.0], [34.3, 9880.0], [34.4, 9904.0], [34.5, 9917.0], [34.6, 9967.0], [34.7, 9980.0], [34.8, 9983.0], [34.9, 9984.0], [35.0, 9984.0], [35.1, 9985.0], [35.2, 9989.0], [35.3, 9992.0], [35.4, 10016.0], [35.5, 10017.0], [35.6, 10048.0], [35.7, 10068.0], [35.8, 10083.0], [35.9, 10097.0], [36.0, 10110.0], [36.1, 10121.0], [36.2, 10176.0], [36.3, 10204.0], [36.4, 10235.0], [36.5, 10236.0], [36.6, 10239.0], [36.7, 10239.0], [36.8, 10240.0], [36.9, 10240.0], [37.0, 10240.0], [37.1, 10240.0], [37.2, 10242.0], [37.3, 10249.0], [37.4, 10258.0], [37.5, 10266.0], [37.6, 10278.0], [37.7, 10295.0], [37.8, 10310.0], [37.9, 10316.0], [38.0, 10361.0], [38.1, 10434.0], [38.2, 10455.0], [38.3, 10468.0], [38.4, 10475.0], [38.5, 10475.0], [38.6, 10480.0], [38.7, 10489.0], [38.8, 10496.0], [38.9, 10496.0], [39.0, 10499.0], [39.1, 10506.0], [39.2, 10524.0], [39.3, 10528.0], [39.4, 10532.0], [39.5, 10570.0], [39.6, 10580.0], [39.7, 10606.0], [39.8, 10639.0], [39.9, 10655.0], [40.0, 10658.0], [40.1, 10673.0], [40.2, 10692.0], [40.3, 10699.0], [40.4, 10720.0], [40.5, 10731.0], [40.6, 10737.0], [40.7, 10748.0], [40.8, 10751.0], [40.9, 10751.0], [41.0, 10752.0], [41.1, 10752.0], [41.2, 10752.0], [41.3, 10752.0], [41.4, 10752.0], [41.5, 10752.0], [41.6, 10756.0], [41.7, 10768.0], [41.8, 10780.0], [41.9, 10801.0], [42.0, 10824.0], [42.1, 10844.0], [42.2, 10859.0], [42.3, 10865.0], [42.4, 10870.0], [42.5, 10886.0], [42.6, 10909.0], [42.7, 10941.0], [42.8, 10953.0], [42.9, 10970.0], [43.0, 10998.0], [43.1, 11006.0], [43.2, 11007.0], [43.3, 11007.0], [43.4, 11007.0], [43.5, 11007.0], [43.6, 11008.0], [43.7, 11008.0], [43.8, 11008.0], [43.9, 11008.0], [44.0, 11016.0], [44.1, 11036.0], [44.2, 11052.0], [44.3, 11086.0], [44.4, 11091.0], [44.5, 11095.0], [44.6, 11127.0], [44.7, 11190.0], [44.8, 11252.0], [44.9, 11263.0], [45.0, 11263.0], [45.1, 11263.0], [45.2, 11263.0], [45.3, 11264.0], [45.4, 11264.0], [45.5, 11264.0], [45.6, 11264.0], [45.7, 11264.0], [45.8, 11265.0], [45.9, 11268.0], [46.0, 11275.0], [46.1, 11308.0], [46.2, 11330.0], [46.3, 11338.0], [46.4, 11364.0], [46.5, 11402.0], [46.6, 11419.0], [46.7, 11441.0], [46.8, 11444.0], [46.9, 11453.0], [47.0, 11462.0], [47.1, 11479.0], [47.2, 11487.0], [47.3, 11489.0], [47.4, 11519.0], [47.5, 11519.0], [47.6, 11520.0], [47.7, 11520.0], [47.8, 11520.0], [47.9, 11547.0], [48.0, 11569.0], [48.1, 11636.0], [48.2, 11658.0], [48.3, 11685.0], [48.4, 11709.0], [48.5, 11730.0], [48.6, 11751.0], [48.7, 11775.0], [48.8, 11775.0], [48.9, 11775.0], [49.0, 11775.0], [49.1, 11775.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11776.0], [49.5, 11776.0], [49.6, 11776.0], [49.7, 11776.0], [49.8, 11776.0], [49.9, 11776.0], [50.0, 11776.0], [50.1, 11776.0], [50.2, 11776.0], [50.3, 11776.0], [50.4, 11778.0], [50.5, 11801.0], [50.6, 11819.0], [50.7, 11843.0], [50.8, 11874.0], [50.9, 11934.0], [51.0, 11981.0], [51.1, 12009.0], [51.2, 12028.0], [51.3, 12045.0], [51.4, 12065.0], [51.5, 12095.0], [51.6, 12122.0], [51.7, 12138.0], [51.8, 12160.0], [51.9, 12224.0], [52.0, 12284.0], [52.1, 12287.0], [52.2, 12287.0], [52.3, 12288.0], [52.4, 12288.0], [52.5, 12288.0], [52.6, 12288.0], [52.7, 12288.0], [52.8, 12288.0], [52.9, 12292.0], [53.0, 12303.0], [53.1, 12344.0], [53.2, 12374.0], [53.3, 12430.0], [53.4, 12476.0], [53.5, 12512.0], [53.6, 12542.0], [53.7, 12543.0], [53.8, 12543.0], [53.9, 12543.0], [54.0, 12544.0], [54.1, 12544.0], [54.2, 12544.0], [54.3, 12544.0], [54.4, 12548.0], [54.5, 12602.0], [54.6, 12723.0], [54.7, 12741.0], [54.8, 12766.0], [54.9, 12799.0], [55.0, 12799.0], [55.1, 12800.0], [55.2, 12800.0], [55.3, 12800.0], [55.4, 12800.0], [55.5, 12800.0], [55.6, 12800.0], [55.7, 12800.0], [55.8, 12803.0], [55.9, 12817.0], [56.0, 12846.0], [56.1, 12886.0], [56.2, 12925.0], [56.3, 13056.0], [56.4, 13056.0], [56.5, 13117.0], [56.6, 13148.0], [56.7, 13177.0], [56.8, 13250.0], [56.9, 13307.0], [57.0, 13307.0], [57.1, 13307.0], [57.2, 13307.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13308.0], [57.9, 13308.0], [58.0, 13308.0], [58.1, 13308.0], [58.2, 13308.0], [58.3, 13308.0], [58.4, 13308.0], [58.5, 13308.0], [58.6, 13308.0], [58.7, 13308.0], [58.8, 13309.0], [58.9, 13309.0], [59.0, 13309.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13310.0], [59.4, 13310.0], [59.5, 13310.0], [59.6, 13310.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13313.0], [78.6, 13313.0], [78.7, 13314.0], [78.8, 13315.0], [78.9, 13315.0], [79.0, 13315.0], [79.1, 13315.0], [79.2, 13316.0], [79.3, 13316.0], [79.4, 13316.0], [79.5, 13316.0], [79.6, 13316.0], [79.7, 13316.0], [79.8, 13316.0], [79.9, 13316.0], [80.0, 13316.0], [80.1, 13317.0], [80.2, 13322.0], [80.3, 13382.0], [80.4, 13557.0], [80.5, 13568.0], [80.6, 13568.0], [80.7, 13568.0], [80.8, 13568.0], [80.9, 13584.0], [81.0, 13679.0], [81.1, 13707.0], [81.2, 13745.0], [81.3, 13769.0], [81.4, 13819.0], [81.5, 13820.0], [81.6, 13820.0], [81.7, 13820.0], [81.8, 13822.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13824.0], [84.0, 13824.0], [84.1, 13824.0], [84.2, 13826.0], [84.3, 13827.0], [84.4, 13828.0], [84.5, 13828.0], [84.6, 13828.0], [84.7, 13833.0], [84.8, 13875.0], [84.9, 14079.0], [85.0, 14080.0], [85.1, 14080.0], [85.2, 14080.0], [85.3, 14080.0], [85.4, 14080.0], [85.5, 14090.0], [85.6, 14331.0], [85.7, 14332.0], [85.8, 14332.0], [85.9, 14332.0], [86.0, 14332.0], [86.1, 14332.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14336.0], [88.0, 14336.0], [88.1, 14336.0], [88.2, 14336.0], [88.3, 14337.0], [88.4, 14338.0], [88.5, 14340.0], [88.6, 14501.0], [88.7, 14591.0], [88.8, 14591.0], [88.9, 14591.0], [89.0, 14595.0], [89.1, 14746.0], [89.2, 14782.0], [89.3, 14844.0], [89.4, 14847.0], [89.5, 14847.0], [89.6, 14847.0], [89.7, 14847.0], [89.8, 14847.0], [89.9, 14848.0], [90.0, 14848.0], [90.1, 14851.0], [90.2, 14852.0], [90.3, 15099.0], [90.4, 15104.0], [90.5, 15358.0], [90.6, 15360.0], [90.7, 15360.0], [90.8, 15360.0], [90.9, 15544.0], [91.0, 15616.0], [91.1, 16128.0], [91.2, 16128.0], [91.3, 16384.0], [91.4, 16423.0], [91.5, 17147.0], [91.6, 17152.0], [91.7, 17152.0], [91.8, 17152.0], [91.9, 17408.0], [92.0, 17758.0], [92.1, 17919.0], [92.2, 17998.0], [92.3, 18175.0], [92.4, 19252.0], [92.5, 19464.0], [92.6, 21777.0], [92.7, 22818.0], [92.8, 23196.0], [92.9, 25344.0], [93.0, 26364.0], [93.1, 26369.0], [93.2, 26371.0], [93.3, 26401.0], [93.4, 27134.0], [93.5, 27392.0], [93.6, 27392.0], [93.7, 27647.0], [93.8, 28672.0], [93.9, 29952.0], [94.0, 42752.0], [94.1, 42752.0], [94.2, 49152.0], [94.3, 53020.0], [94.4, 53277.0], [94.5, 53760.0], [94.6, 53885.0], [94.7, 54037.0], [94.8, 54045.0], [94.9, 54051.0], [95.0, 55089.0], [95.1, 55573.0], [95.2, 57422.0], [95.3, 73247.0], [95.4, 77846.0], [95.5, 81664.0], [95.6, 81664.0], [95.7, 94462.0], [95.8, 97280.0], [95.9, 99328.0], [96.0, 105470.0], [96.1, 105471.0], [96.2, 105471.0], [96.3, 105472.0], [96.4, 105726.0], [96.5, 105731.0], [96.6, 105983.0], [96.7, 106495.0], [96.8, 106751.0], [96.9, 107007.0], [97.0, 110336.0], [97.1, 112126.0], [97.2, 112128.0], [97.3, 112380.0], [97.4, 112380.0], [97.5, 112387.0], [97.6, 114430.0], [97.7, 114684.0], [97.8, 114944.0], [97.9, 118783.0], [98.0, 123904.0], [98.1, 127231.0], [98.2, 127231.0], [98.3, 131583.0], [98.4, 137728.0], [98.5, 137984.0], [98.6, 138752.0], [98.7, 138752.0], [98.8, 156923.0], [98.9, 193536.0], [99.0, 210175.0], [99.1, 210175.0], [99.2, 210432.0], [99.3, 210432.0], [99.4, 210688.0], [99.5, 210943.0], [99.6, 210943.0], [99.7, 210944.0], [99.8, 211195.0], [99.9, 212736.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 561.0], [3.0, 605.0], [3.1, 657.0], [3.2, 684.0], [3.3, 708.0], [3.4, 728.0], [3.5, 749.0], [3.6, 767.0], [3.7, 790.0], [3.8, 814.0], [3.9, 836.0], [4.0, 863.0], [4.1, 886.0], [4.2, 921.0], [4.3, 962.0], [4.4, 1003.0], [4.5, 1062.0], [4.6, 1082.0], [4.7, 1174.0], [4.8, 1225.0], [4.9, 1283.0], [5.0, 1314.0], [5.1, 1379.0], [5.2, 1422.0], [5.3, 1441.0], [5.4, 1474.0], [5.5, 1491.0], [5.6, 1526.0], [5.7, 1546.0], [5.8, 1565.0], [5.9, 1586.0], [6.0, 1608.0], [6.1, 1635.0], [6.2, 1654.0], [6.3, 1696.0], [6.4, 1731.0], [6.5, 1756.0], [6.6, 1791.0], [6.7, 1838.0], [6.8, 1866.0], [6.9, 1903.0], [7.0, 1931.0], [7.1, 1976.0], [7.2, 2031.0], [7.3, 2073.0], [7.4, 2096.0], [7.5, 2148.0], [7.6, 2178.0], [7.7, 2205.0], [7.8, 2236.0], [7.9, 2256.0], [8.0, 2293.0], [8.1, 2321.0], [8.2, 2348.0], [8.3, 2401.0], [8.4, 2453.0], [8.5, 2472.0], [8.6, 2494.0], [8.7, 2530.0], [8.8, 2580.0], [8.9, 2633.0], [9.0, 2678.0], [9.1, 2779.0], [9.2, 2816.0], [9.3, 2877.0], [9.4, 2936.0], [9.5, 2977.0], [9.6, 3040.0], [9.7, 3099.0], [9.8, 3149.0], [9.9, 3174.0], [10.0, 3206.0], [10.1, 3235.0], [10.2, 3277.0], [10.3, 3330.0], [10.4, 3354.0], [10.5, 3392.0], [10.6, 3425.0], [10.7, 3462.0], [10.8, 3503.0], [10.9, 3546.0], [11.0, 3567.0], [11.1, 3597.0], [11.2, 3633.0], [11.3, 3681.0], [11.4, 3714.0], [11.5, 3737.0], [11.6, 3772.0], [11.7, 3809.0], [11.8, 3836.0], [11.9, 3868.0], [12.0, 3906.0], [12.1, 3947.0], [12.2, 4006.0], [12.3, 4061.0], [12.4, 4087.0], [12.5, 4121.0], [12.6, 4159.0], [12.7, 4187.0], [12.8, 4235.0], [12.9, 4267.0], [13.0, 4342.0], [13.1, 4393.0], [13.2, 4460.0], [13.3, 4517.0], [13.4, 4567.0], [13.5, 4606.0], [13.6, 4680.0], [13.7, 4720.0], [13.8, 4791.0], [13.9, 4848.0], [14.0, 4937.0], [14.1, 4995.0], [14.2, 5084.0], [14.3, 5167.0], [14.4, 5289.0], [14.5, 5469.0], [14.6, 5608.0], [14.7, 5672.0], [14.8, 5720.0], [14.9, 5768.0], [15.0, 5810.0], [15.1, 5849.0], [15.2, 5890.0], [15.3, 5946.0], [15.4, 6006.0], [15.5, 6065.0], [15.6, 6108.0], [15.7, 6157.0], [15.8, 6193.0], [15.9, 6221.0], [16.0, 6282.0], [16.1, 6321.0], [16.2, 6379.0], [16.3, 6423.0], [16.4, 6466.0], [16.5, 6519.0], [16.6, 6569.0], [16.7, 6658.0], [16.8, 6752.0], [16.9, 6948.0], [17.0, 7051.0], [17.1, 7105.0], [17.2, 7164.0], [17.3, 7167.0], [17.4, 7167.0], [17.5, 7168.0], [17.6, 7168.0], [17.7, 7168.0], [17.8, 7168.0], [17.9, 7168.0], [18.0, 7171.0], [18.1, 7172.0], [18.2, 7215.0], [18.3, 7334.0], [18.4, 7390.0], [18.5, 7423.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7435.0], [19.0, 7502.0], [19.1, 7551.0], [19.2, 7584.0], [19.3, 7655.0], [19.4, 7676.0], [19.5, 7679.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7684.0], [20.1, 7705.0], [20.2, 7754.0], [20.3, 7792.0], [20.4, 7825.0], [20.5, 7872.0], [20.6, 7931.0], [20.7, 7935.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7937.0], [21.2, 7988.0], [21.3, 8075.0], [21.4, 8117.0], [21.5, 8177.0], [21.6, 8188.0], [21.7, 8189.0], [21.8, 8191.0], [21.9, 8192.0], [22.0, 8192.0], [22.1, 8192.0], [22.2, 8193.0], [22.3, 8237.0], [22.4, 8274.0], [22.5, 8322.0], [22.6, 8381.0], [22.7, 8443.0], [22.8, 8467.0], [22.9, 8539.0], [23.0, 8598.0], [23.1, 8687.0], [23.2, 8700.0], [23.3, 8703.0], [23.4, 8703.0], [23.5, 8704.0], [23.6, 8704.0], [23.7, 8704.0], [23.8, 8704.0], [23.9, 8705.0], [24.0, 8708.0], [24.1, 8770.0], [24.2, 8823.0], [24.3, 8896.0], [24.4, 8935.0], [24.5, 8960.0], [24.6, 8965.0], [24.7, 9106.0], [24.8, 9211.0], [24.9, 9216.0], [25.0, 9216.0], [25.1, 9216.0], [25.2, 9232.0], [25.3, 9307.0], [25.4, 9376.0], [25.5, 9416.0], [25.6, 9468.0], [25.7, 9472.0], [25.8, 9479.0], [25.9, 9502.0], [26.0, 9533.0], [26.1, 9552.0], [26.2, 9577.0], [26.3, 9600.0], [26.4, 9638.0], [26.5, 9663.0], [26.6, 9676.0], [26.7, 9690.0], [26.8, 9712.0], [26.9, 9722.0], [27.0, 9727.0], [27.1, 9727.0], [27.2, 9728.0], [27.3, 9728.0], [27.4, 9728.0], [27.5, 9737.0], [27.6, 9760.0], [27.7, 9772.0], [27.8, 9782.0], [27.9, 9792.0], [28.0, 9805.0], [28.1, 9831.0], [28.2, 9842.0], [28.3, 9852.0], [28.4, 9863.0], [28.5, 9874.0], [28.6, 9883.0], [28.7, 9894.0], [28.8, 9900.0], [28.9, 9909.0], [29.0, 9922.0], [29.1, 9929.0], [29.2, 9935.0], [29.3, 9943.0], [29.4, 9960.0], [29.5, 9966.0], [29.6, 9975.0], [29.7, 9983.0], [29.8, 9984.0], [29.9, 9986.0], [30.0, 9992.0], [30.1, 9996.0], [30.2, 10006.0], [30.3, 10014.0], [30.4, 10022.0], [30.5, 10029.0], [30.6, 10041.0], [30.7, 10045.0], [30.8, 10053.0], [30.9, 10059.0], [31.0, 10065.0], [31.1, 10072.0], [31.2, 10078.0], [31.3, 10087.0], [31.4, 10091.0], [31.5, 10098.0], [31.6, 10107.0], [31.7, 10115.0], [31.8, 10119.0], [31.9, 10124.0], [32.0, 10131.0], [32.1, 10138.0], [32.2, 10146.0], [32.3, 10154.0], [32.4, 10160.0], [32.5, 10165.0], [32.6, 10173.0], [32.7, 10176.0], [32.8, 10185.0], [32.9, 10189.0], [33.0, 10193.0], [33.1, 10199.0], [33.2, 10205.0], [33.3, 10208.0], [33.4, 10211.0], [33.5, 10215.0], [33.6, 10217.0], [33.7, 10223.0], [33.8, 10225.0], [33.9, 10229.0], [34.0, 10233.0], [34.1, 10235.0], [34.2, 10238.0], [34.3, 10239.0], [34.4, 10240.0], [34.5, 10243.0], [34.6, 10248.0], [34.7, 10251.0], [34.8, 10255.0], [34.9, 10260.0], [35.0, 10266.0], [35.1, 10270.0], [35.2, 10274.0], [35.3, 10281.0], [35.4, 10285.0], [35.5, 10291.0], [35.6, 10295.0], [35.7, 10299.0], [35.8, 10304.0], [35.9, 10310.0], [36.0, 10315.0], [36.1, 10319.0], [36.2, 10324.0], [36.3, 10330.0], [36.4, 10333.0], [36.5, 10338.0], [36.6, 10340.0], [36.7, 10345.0], [36.8, 10351.0], [36.9, 10354.0], [37.0, 10358.0], [37.1, 10362.0], [37.2, 10369.0], [37.3, 10371.0], [37.4, 10374.0], [37.5, 10378.0], [37.6, 10381.0], [37.7, 10384.0], [37.8, 10390.0], [37.9, 10395.0], [38.0, 10400.0], [38.1, 10404.0], [38.2, 10408.0], [38.3, 10409.0], [38.4, 10413.0], [38.5, 10417.0], [38.6, 10426.0], [38.7, 10432.0], [38.8, 10435.0], [38.9, 10439.0], [39.0, 10443.0], [39.1, 10449.0], [39.2, 10456.0], [39.3, 10461.0], [39.4, 10465.0], [39.5, 10468.0], [39.6, 10472.0], [39.7, 10477.0], [39.8, 10481.0], [39.9, 10485.0], [40.0, 10488.0], [40.1, 10495.0], [40.2, 10496.0], [40.3, 10498.0], [40.4, 10504.0], [40.5, 10506.0], [40.6, 10512.0], [40.7, 10514.0], [40.8, 10518.0], [40.9, 10520.0], [41.0, 10523.0], [41.1, 10527.0], [41.2, 10531.0], [41.3, 10536.0], [41.4, 10537.0], [41.5, 10539.0], [41.6, 10547.0], [41.7, 10550.0], [41.8, 10552.0], [41.9, 10555.0], [42.0, 10559.0], [42.1, 10561.0], [42.2, 10565.0], [42.3, 10568.0], [42.4, 10572.0], [42.5, 10574.0], [42.6, 10578.0], [42.7, 10582.0], [42.8, 10586.0], [42.9, 10590.0], [43.0, 10593.0], [43.1, 10597.0], [43.2, 10600.0], [43.3, 10604.0], [43.4, 10605.0], [43.5, 10609.0], [43.6, 10611.0], [43.7, 10615.0], [43.8, 10620.0], [43.9, 10622.0], [44.0, 10625.0], [44.1, 10629.0], [44.2, 10633.0], [44.3, 10637.0], [44.4, 10642.0], [44.5, 10643.0], [44.6, 10648.0], [44.7, 10650.0], [44.8, 10653.0], [44.9, 10656.0], [45.0, 10660.0], [45.1, 10663.0], [45.2, 10669.0], [45.3, 10672.0], [45.4, 10674.0], [45.5, 10676.0], [45.6, 10678.0], [45.7, 10680.0], [45.8, 10682.0], [45.9, 10685.0], [46.0, 10688.0], [46.1, 10691.0], [46.2, 10696.0], [46.3, 10699.0], [46.4, 10701.0], [46.5, 10703.0], [46.6, 10706.0], [46.7, 10708.0], [46.8, 10712.0], [46.9, 10714.0], [47.0, 10718.0], [47.1, 10722.0], [47.2, 10726.0], [47.3, 10731.0], [47.4, 10734.0], [47.5, 10737.0], [47.6, 10741.0], [47.7, 10743.0], [47.8, 10745.0], [47.9, 10747.0], [48.0, 10750.0], [48.1, 10751.0], [48.2, 10752.0], [48.3, 10752.0], [48.4, 10752.0], [48.5, 10755.0], [48.6, 10757.0], [48.7, 10760.0], [48.8, 10765.0], [48.9, 10767.0], [49.0, 10769.0], [49.1, 10773.0], [49.2, 10776.0], [49.3, 10779.0], [49.4, 10782.0], [49.5, 10786.0], [49.6, 10789.0], [49.7, 10794.0], [49.8, 10797.0], [49.9, 10800.0], [50.0, 10803.0], [50.1, 10807.0], [50.2, 10810.0], [50.3, 10814.0], [50.4, 10818.0], [50.5, 10822.0], [50.6, 10825.0], [50.7, 10828.0], [50.8, 10833.0], [50.9, 10835.0], [51.0, 10837.0], [51.1, 10839.0], [51.2, 10843.0], [51.3, 10847.0], [51.4, 10851.0], [51.5, 10855.0], [51.6, 10859.0], [51.7, 10863.0], [51.8, 10866.0], [51.9, 10868.0], [52.0, 10870.0], [52.1, 10875.0], [52.2, 10878.0], [52.3, 10882.0], [52.4, 10887.0], [52.5, 10889.0], [52.6, 10892.0], [52.7, 10895.0], [52.8, 10898.0], [52.9, 10900.0], [53.0, 10904.0], [53.1, 10909.0], [53.2, 10913.0], [53.3, 10918.0], [53.4, 10923.0], [53.5, 10926.0], [53.6, 10930.0], [53.7, 10933.0], [53.8, 10937.0], [53.9, 10939.0], [54.0, 10944.0], [54.1, 10946.0], [54.2, 10949.0], [54.3, 10951.0], [54.4, 10958.0], [54.5, 10959.0], [54.6, 10962.0], [54.7, 10967.0], [54.8, 10971.0], [54.9, 10975.0], [55.0, 10978.0], [55.1, 10981.0], [55.2, 10984.0], [55.3, 10986.0], [55.4, 10990.0], [55.5, 10992.0], [55.6, 10996.0], [55.7, 11000.0], [55.8, 11003.0], [55.9, 11005.0], [56.0, 11007.0], [56.1, 11008.0], [56.2, 11008.0], [56.3, 11010.0], [56.4, 11013.0], [56.5, 11016.0], [56.6, 11021.0], [56.7, 11023.0], [56.8, 11027.0], [56.9, 11031.0], [57.0, 11033.0], [57.1, 11036.0], [57.2, 11038.0], [57.3, 11041.0], [57.4, 11043.0], [57.5, 11045.0], [57.6, 11048.0], [57.7, 11050.0], [57.8, 11054.0], [57.9, 11056.0], [58.0, 11060.0], [58.1, 11064.0], [58.2, 11070.0], [58.3, 11078.0], [58.4, 11081.0], [58.5, 11086.0], [58.6, 11090.0], [58.7, 11093.0], [58.8, 11097.0], [58.9, 11103.0], [59.0, 11110.0], [59.1, 11113.0], [59.2, 11117.0], [59.3, 11122.0], [59.4, 11125.0], [59.5, 11129.0], [59.6, 11131.0], [59.7, 11134.0], [59.8, 11138.0], [59.9, 11141.0], [60.0, 11143.0], [60.1, 11145.0], [60.2, 11150.0], [60.3, 11155.0], [60.4, 11157.0], [60.5, 11162.0], [60.6, 11168.0], [60.7, 11171.0], [60.8, 11174.0], [60.9, 11179.0], [61.0, 11182.0], [61.1, 11185.0], [61.2, 11190.0], [61.3, 11194.0], [61.4, 11195.0], [61.5, 11198.0], [61.6, 11202.0], [61.7, 11208.0], [61.8, 11213.0], [61.9, 11219.0], [62.0, 11226.0], [62.1, 11231.0], [62.2, 11238.0], [62.3, 11242.0], [62.4, 11246.0], [62.5, 11251.0], [62.6, 11258.0], [62.7, 11261.0], [62.8, 11263.0], [62.9, 11264.0], [63.0, 11264.0], [63.1, 11269.0], [63.2, 11274.0], [63.3, 11278.0], [63.4, 11283.0], [63.5, 11287.0], [63.6, 11292.0], [63.7, 11297.0], [63.8, 11301.0], [63.9, 11306.0], [64.0, 11309.0], [64.1, 11316.0], [64.2, 11323.0], [64.3, 11329.0], [64.4, 11334.0], [64.5, 11340.0], [64.6, 11344.0], [64.7, 11351.0], [64.8, 11358.0], [64.9, 11362.0], [65.0, 11368.0], [65.1, 11373.0], [65.2, 11380.0], [65.3, 11386.0], [65.4, 11389.0], [65.5, 11394.0], [65.6, 11397.0], [65.7, 11405.0], [65.8, 11411.0], [65.9, 11417.0], [66.0, 11422.0], [66.1, 11428.0], [66.2, 11434.0], [66.3, 11439.0], [66.4, 11447.0], [66.5, 11452.0], [66.6, 11458.0], [66.7, 11462.0], [66.8, 11474.0], [66.9, 11479.0], [67.0, 11484.0], [67.1, 11489.0], [67.2, 11494.0], [67.3, 11508.0], [67.4, 11518.0], [67.5, 11520.0], [67.6, 11520.0], [67.7, 11526.0], [67.8, 11536.0], [67.9, 11544.0], [68.0, 11551.0], [68.1, 11557.0], [68.2, 11563.0], [68.3, 11570.0], [68.4, 11577.0], [68.5, 11586.0], [68.6, 11592.0], [68.7, 11598.0], [68.8, 11606.0], [68.9, 11613.0], [69.0, 11619.0], [69.1, 11631.0], [69.2, 11639.0], [69.3, 11644.0], [69.4, 11651.0], [69.5, 11659.0], [69.6, 11665.0], [69.7, 11671.0], [69.8, 11677.0], [69.9, 11685.0], [70.0, 11696.0], [70.1, 11710.0], [70.2, 11718.0], [70.3, 11724.0], [70.4, 11733.0], [70.5, 11744.0], [70.6, 11750.0], [70.7, 11758.0], [70.8, 11765.0], [70.9, 11770.0], [71.0, 11775.0], [71.1, 11775.0], [71.2, 11776.0], [71.3, 11776.0], [71.4, 11776.0], [71.5, 11780.0], [71.6, 11786.0], [71.7, 11796.0], [71.8, 11800.0], [71.9, 11806.0], [72.0, 11818.0], [72.1, 11835.0], [72.2, 11841.0], [72.3, 11845.0], [72.4, 11857.0], [72.5, 11868.0], [72.6, 11877.0], [72.7, 11890.0], [72.8, 11901.0], [72.9, 11916.0], [73.0, 11923.0], [73.1, 11938.0], [73.2, 11948.0], [73.3, 11957.0], [73.4, 11968.0], [73.5, 11985.0], [73.6, 11990.0], [73.7, 12003.0], [73.8, 12017.0], [73.9, 12025.0], [74.0, 12032.0], [74.1, 12044.0], [74.2, 12056.0], [74.3, 12068.0], [74.4, 12078.0], [74.5, 12095.0], [74.6, 12103.0], [74.7, 12115.0], [74.8, 12127.0], [74.9, 12147.0], [75.0, 12163.0], [75.1, 12178.0], [75.2, 12188.0], [75.3, 12206.0], [75.4, 12222.0], [75.5, 12235.0], [75.6, 12247.0], [75.7, 12257.0], [75.8, 12275.0], [75.9, 12285.0], [76.0, 12288.0], [76.1, 12288.0], [76.2, 12291.0], [76.3, 12298.0], [76.4, 12309.0], [76.5, 12320.0], [76.6, 12328.0], [76.7, 12336.0], [76.8, 12347.0], [76.9, 12361.0], [77.0, 12378.0], [77.1, 12391.0], [77.2, 12405.0], [77.3, 12431.0], [77.4, 12451.0], [77.5, 12464.0], [77.6, 12475.0], [77.7, 12490.0], [77.8, 12499.0], [77.9, 12523.0], [78.0, 12535.0], [78.1, 12544.0], [78.2, 12548.0], [78.3, 12563.0], [78.4, 12579.0], [78.5, 12602.0], [78.6, 12636.0], [78.7, 12653.0], [78.8, 12679.0], [78.9, 12695.0], [79.0, 12713.0], [79.1, 12734.0], [79.2, 12756.0], [79.3, 12767.0], [79.4, 12786.0], [79.5, 12799.0], [79.6, 12800.0], [79.7, 12800.0], [79.8, 12803.0], [79.9, 12824.0], [80.0, 12845.0], [80.1, 12865.0], [80.2, 12892.0], [80.3, 12914.0], [80.4, 12940.0], [80.5, 12961.0], [80.6, 12975.0], [80.7, 12995.0], [80.8, 13021.0], [80.9, 13046.0], [81.0, 13056.0], [81.1, 13067.0], [81.2, 13086.0], [81.3, 13096.0], [81.4, 13125.0], [81.5, 13156.0], [81.6, 13176.0], [81.7, 13187.0], [81.8, 13214.0], [81.9, 13228.0], [82.0, 13245.0], [82.1, 13265.0], [82.2, 13295.0], [82.3, 13307.0], [82.4, 13308.0], [82.5, 13308.0], [82.6, 13308.0], [82.7, 13308.0], [82.8, 13309.0], [82.9, 13310.0], [83.0, 13310.0], [83.1, 13311.0], [83.2, 13311.0], [83.3, 13311.0], [83.4, 13311.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13313.0], [88.6, 13313.0], [88.7, 13315.0], [88.8, 13315.0], [88.9, 13316.0], [89.0, 13316.0], [89.1, 13316.0], [89.2, 13316.0], [89.3, 13316.0], [89.4, 13330.0], [89.5, 13344.0], [89.6, 13351.0], [89.7, 13363.0], [89.8, 13381.0], [89.9, 13395.0], [90.0, 13405.0], [90.1, 13415.0], [90.2, 13440.0], [90.3, 13472.0], [90.4, 13509.0], [90.5, 13529.0], [90.6, 13567.0], [90.7, 13568.0], [90.8, 13594.0], [90.9, 13649.0], [91.0, 13700.0], [91.1, 13778.0], [91.2, 13820.0], [91.3, 13823.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13824.0], [92.0, 13825.0], [92.1, 13828.0], [92.2, 13848.0], [92.3, 13889.0], [92.4, 13954.0], [92.5, 14030.0], [92.6, 14079.0], [92.7, 14080.0], [92.8, 14105.0], [92.9, 14152.0], [93.0, 14227.0], [93.1, 14332.0], [93.2, 14332.0], [93.3, 14335.0], [93.4, 14335.0], [93.5, 14336.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14344.0], [93.9, 14410.0], [94.0, 14492.0], [94.1, 14560.0], [94.2, 14594.0], [94.3, 14633.0], [94.4, 14742.0], [94.5, 14817.0], [94.6, 14847.0], [94.7, 14848.0], [94.8, 14848.0], [94.9, 14876.0], [95.0, 14978.0], [95.1, 15090.0], [95.2, 15108.0], [95.3, 15219.0], [95.4, 15332.0], [95.5, 15359.0], [95.6, 15360.0], [95.7, 15364.0], [95.8, 15485.0], [95.9, 15580.0], [96.0, 15633.0], [96.1, 15777.0], [96.2, 15842.0], [96.3, 15946.0], [96.4, 16047.0], [96.5, 16159.0], [96.6, 16356.0], [96.7, 16384.0], [96.8, 16623.0], [96.9, 16900.0], [97.0, 17151.0], [97.1, 17713.0], [97.2, 17920.0], [97.3, 18255.0], [97.4, 18683.0], [97.5, 18806.0], [97.6, 20224.0], [97.7, 22303.0], [97.8, 26120.0], [97.9, 26367.0], [98.0, 27136.0], [98.1, 28416.0], [98.2, 32440.0], [98.3, 53934.0], [98.4, 54650.0], [98.5, 57034.0], [98.6, 73896.0], [98.7, 81914.0], [98.8, 94033.0], [98.9, 105536.0], [99.0, 105983.0], [99.1, 106624.0], [99.2, 107009.0], [99.3, 110336.0], [99.4, 112384.0], [99.5, 122182.0], [99.6, 133120.0], [99.7, 137984.0], [99.8, 154112.0], [99.9, 210432.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 2.0], [6.0, 2.0], [6.1, 19.0], [6.2, 20.0], [6.3, 27.0], [6.4, 28.0], [6.5, 28.0], [6.6, 29.0], [6.7, 37.0], [6.8, 39.0], [6.9, 50.0], [7.0, 140.0], [7.1, 223.0], [7.2, 266.0], [7.3, 698.0], [7.4, 722.0], [7.5, 786.0], [7.6, 811.0], [7.7, 840.0], [7.8, 964.0], [7.9, 1100.0], [8.0, 1199.0], [8.1, 1375.0], [8.2, 1479.0], [8.3, 1565.0], [8.4, 1676.0], [8.5, 1740.0], [8.6, 1899.0], [8.7, 2169.0], [8.8, 2279.0], [8.9, 2348.0], [9.0, 2471.0], [9.1, 2489.0], [9.2, 2652.0], [9.3, 2820.0], [9.4, 2974.0], [9.5, 3030.0], [9.6, 3060.0], [9.7, 3200.0], [9.8, 3228.0], [9.9, 3318.0], [10.0, 3483.0], [10.1, 3531.0], [10.2, 3803.0], [10.3, 4010.0], [10.4, 4354.0], [10.5, 4850.0], [10.6, 5006.0], [10.7, 5025.0], [10.8, 5052.0], [10.9, 5110.0], [11.0, 5247.0], [11.1, 5308.0], [11.2, 5448.0], [11.3, 5653.0], [11.4, 5744.0], [11.5, 5879.0], [11.6, 6132.0], [11.7, 6551.0], [11.8, 6761.0], [11.9, 6990.0], [12.0, 7061.0], [12.1, 7064.0], [12.2, 7081.0], [12.3, 7094.0], [12.4, 7122.0], [12.5, 7129.0], [12.6, 7159.0], [12.7, 7164.0], [12.8, 7164.0], [12.9, 7165.0], [13.0, 7166.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7169.0], [15.3, 7171.0], [15.4, 7172.0], [15.5, 7172.0], [15.6, 7172.0], [15.7, 7197.0], [15.8, 7202.0], [15.9, 7321.0], [16.0, 7356.0], [16.1, 7375.0], [16.2, 7388.0], [16.3, 7420.0], [16.4, 7423.0], [16.5, 7423.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7428.0], [17.5, 7486.0], [17.6, 7526.0], [17.7, 7600.0], [17.8, 7624.0], [17.9, 7650.0], [18.0, 7676.0], [18.1, 7676.0], [18.2, 7678.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7683.0], [19.9, 7684.0], [20.0, 7703.0], [20.1, 7780.0], [20.2, 7804.0], [20.3, 7893.0], [20.4, 7932.0], [20.5, 7932.0], [20.6, 7935.0], [20.7, 7935.0], [20.8, 7935.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7940.0], [22.1, 7940.0], [22.2, 7940.0], [22.3, 7975.0], [22.4, 8041.0], [22.5, 8155.0], [22.6, 8187.0], [22.7, 8188.0], [22.8, 8188.0], [22.9, 8188.0], [23.0, 8188.0], [23.1, 8188.0], [23.2, 8191.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8204.0], [24.8, 8228.0], [24.9, 8340.0], [25.0, 8379.0], [25.1, 8448.0], [25.2, 8452.0], [25.3, 8558.0], [25.4, 8655.0], [25.5, 8668.0], [25.6, 8700.0], [25.7, 8700.0], [25.8, 8700.0], [25.9, 8701.0], [26.0, 8702.0], [26.1, 8703.0], [26.2, 8703.0], [26.3, 8703.0], [26.4, 8703.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8705.0], [27.6, 8708.0], [27.7, 8708.0], [27.8, 8708.0], [27.9, 8711.0], [28.0, 8744.0], [28.1, 8822.0], [28.2, 8865.0], [28.3, 8893.0], [28.4, 8917.0], [28.5, 8956.0], [28.6, 8958.0], [28.7, 8959.0], [28.8, 8960.0], [28.9, 8960.0], [29.0, 8960.0], [29.1, 8963.0], [29.2, 8963.0], [29.3, 8972.0], [29.4, 9071.0], [29.5, 9103.0], [29.6, 9113.0], [29.7, 9133.0], [29.8, 9141.0], [29.9, 9186.0], [30.0, 9201.0], [30.1, 9212.0], [30.2, 9214.0], [30.3, 9215.0], [30.4, 9215.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9217.0], [31.4, 9218.0], [31.5, 9224.0], [31.6, 9271.0], [31.7, 9340.0], [31.8, 9363.0], [31.9, 9381.0], [32.0, 9408.0], [32.1, 9421.0], [32.2, 9461.0], [32.3, 9471.0], [32.4, 9471.0], [32.5, 9472.0], [32.6, 9472.0], [32.7, 9499.0], [32.8, 9513.0], [32.9, 9524.0], [33.0, 9533.0], [33.1, 9560.0], [33.2, 9599.0], [33.3, 9605.0], [33.4, 9657.0], [33.5, 9722.0], [33.6, 9724.0], [33.7, 9724.0], [33.8, 9724.0], [33.9, 9726.0], [34.0, 9727.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9727.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9729.0], [34.9, 9732.0], [35.0, 9732.0], [35.1, 9742.0], [35.2, 9761.0], [35.3, 9768.0], [35.4, 9781.0], [35.5, 9797.0], [35.6, 9803.0], [35.7, 9819.0], [35.8, 9857.0], [35.9, 9868.0], [36.0, 9938.0], [36.1, 9946.0], [36.2, 9955.0], [36.3, 9964.0], [36.4, 9983.0], [36.5, 9984.0], [36.6, 9984.0], [36.7, 10000.0], [36.8, 10038.0], [36.9, 10038.0], [37.0, 10041.0], [37.1, 10045.0], [37.2, 10047.0], [37.3, 10090.0], [37.4, 10101.0], [37.5, 10125.0], [37.6, 10144.0], [37.7, 10158.0], [37.8, 10164.0], [37.9, 10180.0], [38.0, 10187.0], [38.1, 10192.0], [38.2, 10199.0], [38.3, 10226.0], [38.4, 10239.0], [38.5, 10240.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10240.0], [38.9, 10243.0], [39.0, 10248.0], [39.1, 10264.0], [39.2, 10274.0], [39.3, 10277.0], [39.4, 10280.0], [39.5, 10298.0], [39.6, 10314.0], [39.7, 10338.0], [39.8, 10365.0], [39.9, 10399.0], [40.0, 10418.0], [40.1, 10450.0], [40.2, 10455.0], [40.3, 10478.0], [40.4, 10495.0], [40.5, 10495.0], [40.6, 10495.0], [40.7, 10496.0], [40.8, 10496.0], [40.9, 10496.0], [41.0, 10496.0], [41.1, 10496.0], [41.2, 10496.0], [41.3, 10500.0], [41.4, 10542.0], [41.5, 10583.0], [41.6, 10633.0], [41.7, 10688.0], [41.8, 10691.0], [41.9, 10693.0], [42.0, 10729.0], [42.1, 10748.0], [42.2, 10749.0], [42.3, 10751.0], [42.4, 10751.0], [42.5, 10752.0], [42.6, 10752.0], [42.7, 10752.0], [42.8, 10752.0], [42.9, 10752.0], [43.0, 10752.0], [43.1, 10752.0], [43.2, 10755.0], [43.3, 10769.0], [43.4, 10814.0], [43.5, 10876.0], [43.6, 10887.0], [43.7, 10938.0], [43.8, 10988.0], [43.9, 11003.0], [44.0, 11007.0], [44.1, 11007.0], [44.2, 11008.0], [44.3, 11008.0], [44.4, 11008.0], [44.5, 11008.0], [44.6, 11008.0], [44.7, 11009.0], [44.8, 11011.0], [44.9, 11012.0], [45.0, 11060.0], [45.1, 11067.0], [45.2, 11092.0], [45.3, 11119.0], [45.4, 11143.0], [45.5, 11151.0], [45.6, 11173.0], [45.7, 11184.0], [45.8, 11227.0], [45.9, 11251.0], [46.0, 11259.0], [46.1, 11263.0], [46.2, 11263.0], [46.3, 11264.0], [46.4, 11264.0], [46.5, 11264.0], [46.6, 11264.0], [46.7, 11264.0], [46.8, 11264.0], [46.9, 11268.0], [47.0, 11294.0], [47.1, 11322.0], [47.2, 11423.0], [47.3, 11519.0], [47.4, 11520.0], [47.5, 11529.0], [47.6, 11557.0], [47.7, 11675.0], [47.8, 11726.0], [47.9, 11738.0], [48.0, 11752.0], [48.1, 11772.0], [48.2, 11775.0], [48.3, 11775.0], [48.4, 11775.0], [48.5, 11775.0], [48.6, 11776.0], [48.7, 11776.0], [48.8, 11776.0], [48.9, 11776.0], [49.0, 11776.0], [49.1, 11776.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11776.0], [49.5, 11777.0], [49.6, 11801.0], [49.7, 11825.0], [49.8, 11856.0], [49.9, 11904.0], [50.0, 11971.0], [50.1, 12021.0], [50.2, 12031.0], [50.3, 12032.0], [50.4, 12036.0], [50.5, 12099.0], [50.6, 12192.0], [50.7, 12252.0], [50.8, 12277.0], [50.9, 12284.0], [51.0, 12287.0], [51.1, 12288.0], [51.2, 12288.0], [51.3, 12288.0], [51.4, 12288.0], [51.5, 12292.0], [51.6, 12306.0], [51.7, 12359.0], [51.8, 12382.0], [51.9, 12441.0], [52.0, 12543.0], [52.1, 12544.0], [52.2, 12544.0], [52.3, 12544.0], [52.4, 12608.0], [52.5, 12626.0], [52.6, 12634.0], [52.7, 12645.0], [52.8, 12670.0], [52.9, 12762.0], [53.0, 12796.0], [53.1, 12799.0], [53.2, 12799.0], [53.3, 12800.0], [53.4, 12800.0], [53.5, 12800.0], [53.6, 12823.0], [53.7, 12882.0], [53.8, 12952.0], [53.9, 13133.0], [54.0, 13162.0], [54.1, 13167.0], [54.2, 13168.0], [54.3, 13171.0], [54.4, 13174.0], [54.5, 13188.0], [54.6, 13191.0], [54.7, 13201.0], [54.8, 13221.0], [54.9, 13226.0], [55.0, 13228.0], [55.1, 13238.0], [55.2, 13251.0], [55.3, 13263.0], [55.4, 13269.0], [55.5, 13272.0], [55.6, 13277.0], [55.7, 13283.0], [55.8, 13283.0], [55.9, 13287.0], [56.0, 13291.0], [56.1, 13298.0], [56.2, 13304.0], [56.3, 13304.0], [56.4, 13306.0], [56.5, 13306.0], [56.6, 13307.0], [56.7, 13307.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13308.0], [57.9, 13308.0], [58.0, 13308.0], [58.1, 13309.0], [58.2, 13309.0], [58.3, 13309.0], [58.4, 13310.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13314.0], [75.2, 13314.0], [75.3, 13314.0], [75.4, 13314.0], [75.5, 13315.0], [75.6, 13315.0], [75.7, 13315.0], [75.8, 13315.0], [75.9, 13315.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13316.0], [76.8, 13316.0], [76.9, 13316.0], [77.0, 13316.0], [77.1, 13316.0], [77.2, 13316.0], [77.3, 13321.0], [77.4, 13327.0], [77.5, 13335.0], [77.6, 13340.0], [77.7, 13345.0], [77.8, 13350.0], [77.9, 13354.0], [78.0, 13356.0], [78.1, 13358.0], [78.2, 13363.0], [78.3, 13370.0], [78.4, 13375.0], [78.5, 13376.0], [78.6, 13389.0], [78.7, 13389.0], [78.8, 13393.0], [78.9, 13403.0], [79.0, 13406.0], [79.1, 13409.0], [79.2, 13415.0], [79.3, 13534.0], [79.4, 13565.0], [79.5, 13568.0], [79.6, 13568.0], [79.7, 13568.0], [79.8, 13575.0], [79.9, 13685.0], [80.0, 13725.0], [80.1, 13739.0], [80.2, 13751.0], [80.3, 13764.0], [80.4, 13801.0], [80.5, 13819.0], [80.6, 13820.0], [80.7, 13820.0], [80.8, 13822.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13825.0], [82.8, 13825.0], [82.9, 13825.0], [83.0, 13828.0], [83.1, 13828.0], [83.2, 13828.0], [83.3, 13904.0], [83.4, 14075.0], [83.5, 14079.0], [83.6, 14080.0], [83.7, 14080.0], [83.8, 14080.0], [83.9, 14080.0], [84.0, 14080.0], [84.1, 14080.0], [84.2, 14088.0], [84.3, 14202.0], [84.4, 14323.0], [84.5, 14332.0], [84.6, 14332.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14337.0], [86.0, 14337.0], [86.1, 14339.0], [86.2, 14471.0], [86.3, 14560.0], [86.4, 14591.0], [86.5, 14591.0], [86.6, 14592.0], [86.7, 14596.0], [86.8, 14847.0], [86.9, 14847.0], [87.0, 14847.0], [87.1, 14848.0], [87.2, 14848.0], [87.3, 14852.0], [87.4, 15047.0], [87.5, 15104.0], [87.6, 15359.0], [87.7, 15359.0], [87.8, 15359.0], [87.9, 15360.0], [88.0, 15360.0], [88.1, 15361.0], [88.2, 15550.0], [88.3, 15616.0], [88.4, 15616.0], [88.5, 16287.0], [88.6, 16335.0], [88.7, 16382.0], [88.8, 16384.0], [88.9, 16384.0], [89.0, 16384.0], [89.1, 17151.0], [89.2, 17151.0], [89.3, 17152.0], [89.4, 17152.0], [89.5, 17152.0], [89.6, 17277.0], [89.7, 17920.0], [89.8, 18157.0], [89.9, 18432.0], [90.0, 18687.0], [90.1, 19345.0], [90.2, 19367.0], [90.3, 19456.0], [90.4, 19884.0], [90.5, 20901.0], [90.6, 22016.0], [90.7, 22730.0], [90.8, 23554.0], [90.9, 25325.0], [91.0, 26304.0], [91.1, 26364.0], [91.2, 26367.0], [91.3, 26368.0], [91.4, 26442.0], [91.5, 26468.0], [91.6, 26758.0], [91.7, 27391.0], [91.8, 27648.0], [91.9, 27700.0], [92.0, 28671.0], [92.1, 28672.0], [92.2, 30720.0], [92.3, 31416.0], [92.4, 36148.0], [92.5, 41469.0], [92.6, 48897.0], [92.7, 52480.0], [92.8, 53139.0], [92.9, 53297.0], [93.0, 53298.0], [93.1, 53318.0], [93.2, 54038.0], [93.3, 54069.0], [93.4, 56224.0], [93.5, 62577.0], [93.6, 76835.0], [93.7, 81663.0], [93.8, 87195.0], [93.9, 94291.0], [94.0, 94467.0], [94.1, 100078.0], [94.2, 105389.0], [94.3, 105414.0], [94.4, 105470.0], [94.5, 105472.0], [94.6, 105483.0], [94.7, 105722.0], [94.8, 105769.0], [94.9, 105983.0], [95.0, 105984.0], [95.1, 105986.0], [95.2, 105987.0], [95.3, 105988.0], [95.4, 106151.0], [95.5, 106199.0], [95.6, 106389.0], [95.7, 106484.0], [95.8, 106492.0], [95.9, 106578.0], [96.0, 106626.0], [96.1, 106674.0], [96.2, 106751.0], [96.3, 107007.0], [96.4, 107009.0], [96.5, 107009.0], [96.6, 107149.0], [96.7, 107243.0], [96.8, 107247.0], [96.9, 107775.0], [97.0, 107776.0], [97.1, 108103.0], [97.2, 109769.0], [97.3, 110913.0], [97.4, 111484.0], [97.5, 112127.0], [97.6, 112127.0], [97.7, 112128.0], [97.8, 112128.0], [97.9, 112128.0], [98.0, 112386.0], [98.1, 114944.0], [98.2, 117700.0], [98.3, 118704.0], [98.4, 118842.0], [98.5, 122657.0], [98.6, 124392.0], [98.7, 127415.0], [98.8, 129027.0], [98.9, 130048.0], [99.0, 133120.0], [99.1, 133120.0], [99.2, 136192.0], [99.3, 154111.0], [99.4, 154112.0], [99.5, 193536.0], [99.6, 209920.0], [99.7, 210431.0], [99.8, 210432.0], [99.9, 211526.0], [100.0, 211712.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 784.0, "series": [{"data": [[0.0, 140.0], [210400.0, 5.0], [137700.0, 1.0], [136100.0, 1.0], [156900.0, 1.0], [105900.0, 2.0], [106700.0, 1.0], [112300.0, 5.0], [118700.0, 3.0], [210600.0, 1.0], [131500.0, 1.0], [137900.0, 2.0], [195500.0, 1.0], [53700.0, 1.0], [77800.0, 1.0], [114600.0, 3.0], [500.0, 2.0], [600.0, 5.0], [700.0, 4.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 4.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 4.0], [2300.0, 3.0], [2400.0, 2.0], [154100.0, 1.0], [2500.0, 1.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 4.0], [3100.0, 1.0], [3300.0, 3.0], [210100.0, 2.0], [211700.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 3.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 3.0], [4600.0, 3.0], [4400.0, 2.0], [4800.0, 1.0], [4700.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5600.0, 4.0], [5800.0, 3.0], [91300.0, 1.0], [5900.0, 3.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 2.0], [6300.0, 2.0], [99300.0, 2.0], [6500.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [105700.0, 3.0], [6700.0, 1.0], [7100.0, 49.0], [112100.0, 4.0], [7300.0, 1.0], [7400.0, 25.0], [7500.0, 3.0], [7600.0, 46.0], [7700.0, 1.0], [7900.0, 37.0], [8100.0, 44.0], [8400.0, 8.0], [8700.0, 34.0], [8500.0, 1.0], [8600.0, 2.0], [9000.0, 1.0], [9200.0, 40.0], [8900.0, 14.0], [9100.0, 1.0], [8800.0, 1.0], [9400.0, 18.0], [9300.0, 2.0], [9700.0, 40.0], [9500.0, 3.0], [9600.0, 4.0], [9800.0, 7.0], [10200.0, 26.0], [10000.0, 11.0], [9900.0, 17.0], [10100.0, 6.0], [10600.0, 12.0], [10300.0, 6.0], [10400.0, 17.0], [10700.0, 27.0], [10500.0, 12.0], [11200.0, 23.0], [11100.0, 4.0], [10900.0, 8.0], [10800.0, 13.0], [11000.0, 27.0], [11500.0, 14.0], [11400.0, 15.0], [11600.0, 5.0], [11700.0, 38.0], [11300.0, 8.0], [12100.0, 6.0], [11900.0, 5.0], [11800.0, 6.0], [12000.0, 8.0], [12200.0, 20.0], [12300.0, 5.0], [12500.0, 18.0], [12400.0, 4.0], [12700.0, 10.0], [12600.0, 1.0], [12800.0, 19.0], [13300.0, 422.0], [13200.0, 2.0], [13000.0, 5.0], [13100.0, 4.0], [12900.0, 1.0], [13700.0, 6.0], [13800.0, 62.0], [13500.0, 12.0], [13600.0, 1.0], [14000.0, 13.0], [14300.0, 54.0], [14200.0, 1.0], [14700.0, 3.0], [14500.0, 8.0], [14800.0, 18.0], [15000.0, 2.0], [15300.0, 8.0], [15100.0, 2.0], [15500.0, 1.0], [15600.0, 2.0], [16100.0, 3.0], [16300.0, 3.0], [17400.0, 2.0], [16400.0, 1.0], [19400.0, 2.0], [18600.0, 1.0], [19200.0, 2.0], [22800.0, 1.0], [24200.0, 1.0], [26400.0, 1.0], [26600.0, 1.0], [25800.0, 1.0], [27600.0, 1.0], [28600.0, 1.0], [28400.0, 1.0], [29400.0, 1.0], [34800.0, 1.0], [53200.0, 3.0], [54000.0, 6.0], [81600.0, 3.0], [94400.0, 2.0], [104800.0, 1.0], [106400.0, 2.0], [107200.0, 1.0], [114400.0, 1.0], [127200.0, 3.0], [110300.0, 1.0], [123900.0, 1.0], [138700.0, 3.0], [42700.0, 2.0], [49100.0, 2.0], [55500.0, 2.0], [105400.0, 7.0], [107000.0, 2.0], [210900.0, 6.0], [114900.0, 1.0], [17100.0, 7.0], [16700.0, 1.0], [17900.0, 2.0], [18100.0, 2.0], [17700.0, 2.0], [21700.0, 1.0], [23100.0, 2.0], [25300.0, 1.0], [26300.0, 5.0], [27100.0, 1.0], [27300.0, 4.0], [29900.0, 1.0], [193500.0, 2.0], [52200.0, 1.0], [211100.0, 1.0], [53000.0, 1.0], [212700.0, 2.0], [55000.0, 1.0], [53800.0, 2.0], [57400.0, 1.0], [73200.0, 3.0], [97200.0, 1.0], [130000.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 286.0], [210400.0, 5.0], [213600.0, 1.0], [137700.0, 3.0], [136100.0, 1.0], [73900.0, 1.0], [81900.0, 1.0], [93900.0, 1.0], [105900.0, 5.0], [107500.0, 1.0], [112300.0, 4.0], [118700.0, 3.0], [210600.0, 2.0], [137900.0, 6.0], [133100.0, 2.0], [54500.0, 3.0], [58500.0, 1.0], [65300.0, 1.0], [73800.0, 1.0], [400.0, 1.0], [106600.0, 2.0], [110600.0, 1.0], [111400.0, 1.0], [115400.0, 1.0], [500.0, 14.0], [128200.0, 1.0], [129000.0, 1.0], [600.0, 31.0], [700.0, 45.0], [800.0, 45.0], [900.0, 23.0], [1000.0, 23.0], [1100.0, 14.0], [1200.0, 20.0], [1300.0, 19.0], [1400.0, 37.0], [1500.0, 48.0], [1600.0, 33.0], [1700.0, 32.0], [1800.0, 26.0], [1900.0, 27.0], [2000.0, 27.0], [2100.0, 26.0], [2300.0, 28.0], [2200.0, 35.0], [2400.0, 32.0], [154100.0, 5.0], [2500.0, 25.0], [2600.0, 15.0], [2800.0, 19.0], [2700.0, 14.0], [2900.0, 18.0], [3000.0, 20.0], [3100.0, 26.0], [3200.0, 27.0], [3300.0, 30.0], [210100.0, 1.0], [211700.0, 1.0], [3400.0, 26.0], [3500.0, 32.0], [3600.0, 28.0], [3700.0, 31.0], [3800.0, 29.0], [3900.0, 20.0], [4000.0, 27.0], [4300.0, 15.0], [4200.0, 26.0], [4100.0, 28.0], [4500.0, 19.0], [4400.0, 18.0], [4600.0, 18.0], [4700.0, 17.0], [4800.0, 16.0], [5000.0, 11.0], [5100.0, 13.0], [4900.0, 12.0], [5200.0, 6.0], [5300.0, 7.0], [83300.0, 1.0], [5600.0, 18.0], [5500.0, 6.0], [5400.0, 5.0], [5700.0, 22.0], [5800.0, 25.0], [6000.0, 21.0], [6100.0, 26.0], [5900.0, 16.0], [6200.0, 23.0], [6300.0, 19.0], [6500.0, 23.0], [6400.0, 18.0], [6600.0, 10.0], [105700.0, 9.0], [6700.0, 6.0], [6900.0, 10.0], [6800.0, 4.0], [106500.0, 1.0], [108900.0, 1.0], [7000.0, 13.0], [7100.0, 110.0], [111300.0, 1.0], [113700.0, 1.0], [112100.0, 3.0], [7400.0, 60.0], [7300.0, 14.0], [7200.0, 9.0], [7500.0, 24.0], [7600.0, 88.0], [7900.0, 69.0], [7800.0, 23.0], [7700.0, 22.0], [8100.0, 88.0], [8000.0, 14.0], [8400.0, 21.0], [8300.0, 20.0], [8500.0, 15.0], [8700.0, 104.0], [8200.0, 22.0], [8600.0, 13.0], [9100.0, 9.0], [8800.0, 16.0], [8900.0, 32.0], [9000.0, 6.0], [9200.0, 51.0], [9500.0, 42.0], [9600.0, 46.0], [9400.0, 44.0], [9300.0, 16.0], [9700.0, 123.0], [9800.0, 84.0], [10200.0, 265.0], [10000.0, 141.0], [10100.0, 158.0], [9900.0, 138.0], [10400.0, 238.0], [10600.0, 321.0], [10300.0, 229.0], [10700.0, 358.0], [10500.0, 286.0], [10900.0, 288.0], [11100.0, 275.0], [11000.0, 319.0], [11200.0, 221.0], [10800.0, 302.0], [11600.0, 132.0], [11500.0, 150.0], [11400.0, 164.0], [11300.0, 190.0], [11700.0, 177.0], [11800.0, 100.0], [12200.0, 107.0], [12100.0, 71.0], [11900.0, 90.0], [12000.0, 92.0], [12500.0, 68.0], [12600.0, 46.0], [12700.0, 64.0], [12400.0, 63.0], [12300.0, 88.0], [13300.0, 784.0], [13000.0, 60.0], [12900.0, 49.0], [13100.0, 45.0], [12800.0, 68.0], [13200.0, 45.0], [13600.0, 17.0], [13800.0, 118.0], [13700.0, 16.0], [13400.0, 44.0], [13500.0, 45.0], [13900.0, 16.0], [14100.0, 14.0], [14000.0, 33.0], [14300.0, 88.0], [14200.0, 9.0], [14400.0, 12.0], [14700.0, 13.0], [14600.0, 14.0], [14800.0, 41.0], [14500.0, 22.0], [15100.0, 18.0], [15200.0, 6.0], [15300.0, 37.0], [15000.0, 10.0], [14900.0, 12.0], [15800.0, 7.0], [15700.0, 11.0], [15500.0, 13.0], [15600.0, 13.0], [15400.0, 8.0], [15900.0, 14.0], [16000.0, 8.0], [16100.0, 9.0], [16300.0, 15.0], [16200.0, 1.0], [16400.0, 6.0], [16600.0, 4.0], [17000.0, 3.0], [16800.0, 3.0], [17400.0, 1.0], [18000.0, 4.0], [18200.0, 3.0], [18400.0, 3.0], [17600.0, 1.0], [17800.0, 2.0], [18600.0, 13.0], [18800.0, 1.0], [19200.0, 2.0], [20400.0, 2.0], [20200.0, 3.0], [19600.0, 1.0], [19800.0, 1.0], [20000.0, 3.0], [21400.0, 1.0], [22000.0, 2.0], [23400.0, 1.0], [24000.0, 1.0], [24600.0, 1.0], [25400.0, 1.0], [26400.0, 2.0], [26200.0, 2.0], [26600.0, 1.0], [27600.0, 2.0], [26800.0, 1.0], [28400.0, 2.0], [29400.0, 2.0], [29600.0, 4.0], [29200.0, 1.0], [30400.0, 1.0], [32400.0, 1.0], [36800.0, 1.0], [37200.0, 1.0], [42400.0, 1.0], [53200.0, 1.0], [53600.0, 1.0], [54000.0, 2.0], [55200.0, 1.0], [56000.0, 2.0], [56400.0, 1.0], [81600.0, 4.0], [87200.0, 1.0], [94400.0, 3.0], [106400.0, 2.0], [107200.0, 1.0], [127200.0, 2.0], [71100.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [110300.0, 2.0], [147400.0, 1.0], [153800.0, 1.0], [211400.0, 1.0], [138700.0, 2.0], [42700.0, 1.0], [49100.0, 1.0], [53900.0, 4.0], [54700.0, 1.0], [56300.0, 1.0], [55500.0, 1.0], [58300.0, 1.0], [77400.0, 1.0], [106200.0, 1.0], [105400.0, 5.0], [107000.0, 10.0], [107800.0, 1.0], [116600.0, 1.0], [210900.0, 2.0], [70100.0, 2.0], [74100.0, 1.0], [82100.0, 6.0], [106900.0, 1.0], [107700.0, 2.0], [115700.0, 2.0], [122100.0, 1.0], [127700.0, 1.0], [16500.0, 3.0], [16700.0, 4.0], [16900.0, 3.0], [17100.0, 9.0], [17300.0, 1.0], [17700.0, 4.0], [18300.0, 2.0], [18100.0, 2.0], [17900.0, 6.0], [17500.0, 2.0], [18700.0, 1.0], [19700.0, 1.0], [20100.0, 2.0], [21900.0, 2.0], [22300.0, 2.0], [25500.0, 1.0], [25300.0, 1.0], [24900.0, 1.0], [25100.0, 1.0], [26300.0, 13.0], [26100.0, 1.0], [27100.0, 1.0], [27300.0, 6.0], [29900.0, 1.0], [193500.0, 4.0], [211100.0, 2.0], [212700.0, 1.0], [53800.0, 1.0], [54200.0, 2.0], [55000.0, 1.0], [54600.0, 2.0], [56200.0, 1.0], [57000.0, 1.0], [58200.0, 1.0], [63400.0, 1.0], [64600.0, 1.0], [74000.0, 1.0], [81200.0, 1.0], [94000.0, 1.0], [97200.0, 1.0], [106800.0, 1.0], [122800.0, 1.0], [130000.0, 3.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 131.0], [210400.0, 3.0], [136100.0, 2.0], [65900.0, 1.0], [105900.0, 8.0], [106700.0, 2.0], [108300.0, 1.0], [112300.0, 1.0], [118700.0, 1.0], [122700.0, 1.0], [124300.0, 1.0], [130700.0, 1.0], [100.0, 2.0], [133100.0, 3.0], [36100.0, 1.0], [195500.0, 1.0], [200.0, 3.0], [52500.0, 1.0], [211500.0, 1.0], [209900.0, 1.0], [53700.0, 1.0], [53300.0, 2.0], [62500.0, 1.0], [77800.0, 1.0], [101000.0, 1.0], [105800.0, 1.0], [106600.0, 3.0], [111400.0, 1.0], [117800.0, 1.0], [116200.0, 1.0], [122600.0, 1.0], [129000.0, 2.0], [127400.0, 1.0], [600.0, 2.0], [700.0, 4.0], [800.0, 3.0], [900.0, 3.0], [1100.0, 3.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 2.0], [1700.0, 3.0], [1800.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 4.0], [154100.0, 4.0], [2600.0, 2.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 4.0], [3100.0, 1.0], [3200.0, 3.0], [3300.0, 1.0], [210100.0, 1.0], [211700.0, 1.0], [3400.0, 2.0], [3500.0, 3.0], [3800.0, 2.0], [4000.0, 2.0], [4300.0, 1.0], [4400.0, 1.0], [4800.0, 1.0], [5000.0, 5.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 2.0], [5300.0, 3.0], [5500.0, 1.0], [5600.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [5700.0, 2.0], [6000.0, 1.0], [6100.0, 1.0], [6600.0, 1.0], [6500.0, 1.0], [6400.0, 1.0], [105700.0, 3.0], [6900.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [109700.0, 1.0], [108100.0, 1.0], [106500.0, 1.0], [107300.0, 1.0], [7000.0, 7.0], [7100.0, 64.0], [112100.0, 10.0], [7300.0, 7.0], [7200.0, 3.0], [7400.0, 24.0], [117700.0, 1.0], [7500.0, 3.0], [7600.0, 43.0], [119300.0, 1.0], [7700.0, 4.0], [7900.0, 37.0], [7800.0, 3.0], [8000.0, 2.0], [8100.0, 42.0], [8300.0, 3.0], [8700.0, 47.0], [8600.0, 4.0], [8400.0, 4.0], [8500.0, 2.0], [8200.0, 4.0], [9100.0, 9.0], [9200.0, 31.0], [8900.0, 20.0], [8800.0, 5.0], [9000.0, 2.0], [9700.0, 40.0], [9400.0, 15.0], [9500.0, 10.0], [9600.0, 3.0], [9300.0, 6.0], [10100.0, 16.0], [9800.0, 7.0], [9900.0, 14.0], [10200.0, 24.0], [10000.0, 13.0], [10600.0, 7.0], [10400.0, 25.0], [10300.0, 8.0], [10500.0, 5.0], [10700.0, 28.0], [11200.0, 24.0], [10900.0, 5.0], [11000.0, 26.0], [11100.0, 9.0], [10800.0, 4.0], [11500.0, 8.0], [11700.0, 35.0], [11300.0, 3.0], [11400.0, 1.0], [11600.0, 1.0], [11800.0, 6.0], [11900.0, 3.0], [12200.0, 18.0], [12000.0, 9.0], [12100.0, 2.0], [12600.0, 8.0], [12500.0, 8.0], [12300.0, 4.0], [12700.0, 8.0], [12400.0, 3.0], [13100.0, 16.0], [13300.0, 426.0], [13200.0, 27.0], [12800.0, 9.0], [12900.0, 2.0], [13700.0, 7.0], [13400.0, 9.0], [13500.0, 11.0], [13800.0, 55.0], [13600.0, 2.0], [14200.0, 2.0], [14100.0, 1.0], [13900.0, 2.0], [14000.0, 16.0], [14300.0, 33.0], [14800.0, 12.0], [14400.0, 2.0], [14500.0, 9.0], [15000.0, 1.0], [15100.0, 2.0], [15300.0, 10.0], [15200.0, 1.0], [15500.0, 2.0], [15600.0, 4.0], [16200.0, 1.0], [16300.0, 10.0], [15900.0, 1.0], [17200.0, 1.0], [17600.0, 1.0], [18400.0, 1.0], [19400.0, 2.0], [18600.0, 3.0], [19800.0, 1.0], [22000.0, 2.0], [26400.0, 4.0], [26600.0, 1.0], [27600.0, 1.0], [26800.0, 1.0], [28600.0, 3.0], [29800.0, 1.0], [31400.0, 1.0], [48800.0, 1.0], [52400.0, 1.0], [53200.0, 4.0], [54000.0, 3.0], [76800.0, 1.0], [81600.0, 1.0], [94400.0, 3.0], [100000.0, 1.0], [106400.0, 5.0], [107200.0, 2.0], [111200.0, 1.0], [127200.0, 1.0], [87100.0, 1.0], [91100.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 2.0], [35900.0, 1.0], [42700.0, 1.0], [53100.0, 1.0], [94200.0, 1.0], [106200.0, 1.0], [105400.0, 7.0], [107800.0, 1.0], [107000.0, 6.0], [82100.0, 1.0], [106100.0, 4.0], [105300.0, 1.0], [110100.0, 1.0], [107700.0, 3.0], [110900.0, 1.0], [114900.0, 2.0], [17100.0, 9.0], [17900.0, 1.0], [18100.0, 3.0], [19300.0, 3.0], [20500.0, 1.0], [20900.0, 2.0], [23500.0, 2.0], [22700.0, 1.0], [24300.0, 1.0], [25300.0, 1.0], [26300.0, 7.0], [26700.0, 1.0], [27300.0, 2.0], [27700.0, 1.0], [28100.0, 1.0], [30700.0, 1.0], [31300.0, 1.0], [37800.0, 1.0], [41400.0, 1.0], [193500.0, 1.0], [211100.0, 1.0], [55800.0, 1.0], [56200.0, 1.0], [106800.0, 1.0], [118800.0, 1.0], [130000.0, 1.0], [127600.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 213600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7893.0, "series": [{"data": [[1.0, 308.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5576.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 23.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7893.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 22.447368421052627, "minX": 1.539285E12, "maxY": 500.0, "series": [{"data": [[1.53928542E12, 434.2963585434179], [1.53928524E12, 255.34273318872033], [1.53928506E12, 72.39501039501032], [1.53928554E12, 500.0], [1.53928536E12, 372.3966220151421], [1.53928518E12, 193.36979166666669], [1.53928566E12, 22.447368421052627], [1.539285E12, 25.422400000000007], [1.53928548E12, 489.4065131948344], [1.5392853E12, 314.83427495291824], [1.53928512E12, 132.82205513784473], [1.5392856E12, 393.59718026183265]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928566E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 213608.0, "series": [{"data": [[2.0, 574.0], [5.0, 2204.0], [6.0, 2869.666666666667], [8.0, 3083.0], [9.0, 727.0], [10.0, 2054.6666666666665], [11.0, 612.0], [12.0, 169411.2], [13.0, 619.0], [14.0, 612.0], [16.0, 736.0], [17.0, 141119.5], [19.0, 1002.0], [20.0, 748.0], [21.0, 998.0], [23.0, 2419.0], [24.0, 1309.0], [25.0, 2044.0], [27.0, 77790.0], [28.0, 1538.0], [29.0, 1322.0], [30.0, 62694.5], [31.0, 1556.0], [32.0, 2187.0], [34.0, 2321.0], [36.0, 1959.0], [37.0, 1557.0], [39.0, 1820.0], [38.0, 136192.0], [40.0, 3464.0], [41.0, 1983.0], [42.0, 2084.0], [43.0, 2123.0], [44.0, 2241.0], [45.0, 77846.0], [46.0, 2206.0], [47.0, 3100.0], [50.0, 3150.0], [51.0, 2504.0], [52.0, 2763.0], [53.0, 2854.0], [55.0, 3059.0], [56.0, 3303.0], [58.0, 4588.0], [59.0, 2836.0], [60.0, 106977.0], [61.0, 4519.0], [62.0, 181058.7142857143], [63.0, 4105.0], [64.0, 3303.0], [65.0, 3624.0], [67.0, 3559.0], [68.0, 3668.0], [69.0, 3814.0], [70.0, 3618.0], [72.0, 4660.0], [74.0, 5085.0], [75.0, 4016.0], [77.0, 4464.5], [79.0, 4614.0], [80.0, 5301.5], [81.0, 4447.0], [83.0, 4149.0], [84.0, 4212.0], [85.0, 4407.0], [86.0, 4762.0], [87.0, 54062.0], [88.0, 5197.0], [89.0, 30293.0], [90.0, 5849.0], [91.0, 54048.0], [93.0, 22445.0], [95.0, 54037.0], [92.0, 54045.0], [96.0, 6289.0], [97.0, 60831.5], [98.0, 5810.0], [99.0, 6339.0], [100.0, 6352.0], [102.0, 6414.0], [103.0, 7239.5], [104.0, 5965.0], [105.0, 5648.0], [106.0, 5698.0], [107.0, 6222.0], [108.0, 30040.0], [109.0, 30301.5], [111.0, 7592.0], [113.0, 7582.0], [114.0, 9069.0], [115.0, 7510.0], [116.0, 7451.0], [117.0, 29960.5], [119.0, 30106.0], [118.0, 53277.0], [121.0, 31601.0], [122.0, 24202.666666666664], [123.0, 7744.0], [120.0, 53274.0], [124.0, 7909.0], [125.0, 8121.0], [126.0, 8196.0], [129.0, 9325.0], [130.0, 8415.0], [131.0, 9541.5], [133.0, 9428.0], [135.0, 9812.0], [134.0, 112381.0], [128.0, 112387.0], [136.0, 10242.0], [138.0, 10787.5], [139.0, 9790.0], [141.0, 41665.0], [143.0, 10499.0], [142.0, 73241.0], [140.0, 73249.0], [145.0, 57480.5], [146.0, 9288.0], [148.0, 10466.5], [149.0, 10444.0], [150.0, 10016.0], [153.0, 11426.5], [154.0, 11511.5], [156.0, 11035.0], [159.0, 11677.0], [161.0, 26632.333333333336], [162.0, 10639.0], [163.0, 10624.0], [166.0, 11292.5], [165.0, 19464.0], [169.0, 15079.5], [174.0, 11063.5], [172.0, 21777.0], [171.0, 22818.0], [170.0, 19252.0], [176.0, 14305.0], [179.0, 10806.0], [189.0, 9967.0], [191.0, 17758.0], [190.0, 17779.0], [192.0, 10375.0], [193.0, 10456.0], [196.0, 11431.0], [198.0, 11077.0], [206.0, 10835.5], [207.0, 107006.5], [201.0, 23187.0], [200.0, 24213.0], [212.0, 11441.0], [213.0, 11653.0], [215.0, 12925.0], [211.0, 13584.0], [216.0, 11402.0], [222.0, 11479.0], [221.0, 12828.0], [225.0, 13333.333333333334], [227.0, 10311.0], [229.0, 11843.0], [231.0, 12241.0], [226.0, 13826.0], [238.0, 12537.0], [239.0, 13745.0], [234.0, 12723.0], [233.0, 13769.0], [241.0, 1.0], [242.0, 12896.0], [243.0, 11275.0], [244.0, 11685.0], [245.0, 13308.0], [247.0, 11402.0], [248.0, 17497.0], [250.0, 11059.0], [251.0, 26388.0], [252.0, 12092.0], [263.0, 10868.0], [258.0, 9851.5], [256.0, 11713.0], [260.0, 34816.0], [261.0, 7168.0], [262.0, 11092.0], [264.0, 11024.0], [266.0, 26401.0], [265.0, 11778.0], [268.0, 10204.0], [270.0, 11854.0], [271.0, 7839.0], [284.0, 9560.166666666666], [272.0, 19965.5], [273.0, 9624.4], [285.0, 6401.0], [286.0, 11581.0], [287.0, 15623.5], [276.0, 17467.25], [277.0, 10752.0], [279.0, 7424.0], [280.0, 14655.0], [281.0, 11947.0], [282.0, 13120.5], [283.0, 2.0], [289.0, 9840.0], [288.0, 15568.727272727274], [290.0, 13988.0], [291.0, 10682.666666666666], [292.0, 9285.6], [293.0, 7972.666666666667], [294.0, 9725.0], [295.0, 11776.0], [296.0, 7836.8], [302.0, 13599.0], [300.0, 14276.666666666666], [301.0, 11120.0], [297.0, 7084.666666666666], [298.0, 10654.333333333334], [299.0, 9788.25], [306.0, 6656.5], [305.0, 36440.0], [307.0, 10649.6], [316.0, 10370.5], [317.0, 10752.0], [318.0, 8306.333333333334], [319.0, 34375.25], [308.0, 11030.555555555555], [309.0, 13066.300000000001], [311.0, 22058.777777777777], [312.0, 11519.5], [313.0, 11905.75], [314.0, 16124.0], [315.0, 8622.0], [321.0, 25620.166666666668], [320.0, 12883.0], [322.0, 10752.2], [323.0, 12396.166666666668], [324.0, 8477.5], [325.0, 21960.85714285714], [326.0, 9933.8], [327.0, 9205.25], [328.0, 10242.0], [334.0, 10322.25], [335.0, 13041.125], [332.0, 9813.75], [333.0, 11776.0], [329.0, 11052.0], [330.0, 10049.6], [331.0, 22400.166666666664], [337.0, 14335.75], [336.0, 13823.81818181818], [338.0, 7852.125], [339.0, 10956.3], [340.0, 9834.0], [341.0, 10058.0], [342.0, 10921.333333333334], [343.0, 9676.2], [344.0, 13408.181818181818], [350.0, 8107.846153846154], [351.0, 12178.235294117647], [348.0, 10230.0], [349.0, 7299.0], [345.0, 4352.5], [346.0, 12428.0], [347.0, 10240.333333333334], [353.0, 7591.499999999999], [352.0, 10138.2], [354.0, 11255.0], [355.0, 17152.0], [364.0, 11969.0], [365.0, 13140.0], [366.0, 8961.5], [356.0, 13694.0], [357.0, 5632.0], [359.0, 11209.5], [360.0, 10876.800000000001], [361.0, 12662.0], [362.0, 12476.0], [363.0, 10097.714285714286], [369.0, 11261.0], [368.0, 9944.666666666666], [370.0, 10367.333333333334], [371.0, 13232.166666666666], [372.0, 11774.874999999998], [373.0, 13337.545454545454], [374.0, 12247.75], [375.0, 5500.0], [376.0, 8087.333333333334], [380.0, 8194.666666666666], [381.0, 13317.5], [382.0, 9985.25], [379.0, 4095.75], [385.0, 7817.6], [384.0, 9602.0], [386.0, 12085.75], [387.0, 13525.333333333332], [388.0, 18263.11111111111], [389.0, 15066.0], [390.0, 8876.333333333332], [391.0, 12063.0], [392.0, 7083.0], [399.0, 9599.833333333332], [396.0, 6656.0], [397.0, 10984.999999999998], [393.0, 10356.363636363638], [394.0, 10689.0], [395.0, 9882.625], [401.0, 7835.666666666667], [400.0, 9875.5], [403.0, 9984.0], [412.0, 12343.5], [413.0, 12262.0], [414.0, 13141.0], [415.0, 5339.714285714285], [404.0, 14150.666666666666], [405.0, 7961.166666666667], [406.0, 10371.333333333334], [407.0, 13310.0], [408.0, 11373.5], [409.0, 9671.111111111111], [410.0, 12123.2], [411.0, 7168.0], [417.0, 11315.2], [416.0, 10264.5], [418.0, 9934.461538461537], [419.0, 10978.749999999998], [420.0, 1.0], [421.0, 12549.666666666666], [422.0, 9728.0], [424.0, 8061.0], [430.0, 10496.0], [431.0, 10929.0], [428.0, 13312.0], [429.0, 11819.000000000002], [425.0, 11141.5], [426.0, 9727.0], [427.0, 8874.666666666666], [433.0, 10650.0], [432.0, 12288.636363636364], [434.0, 6943.75], [435.0, 10048.0], [436.0, 12286.75], [437.0, 4352.0], [438.0, 9280.25], [439.0, 8120.5], [440.0, 9721.666666666666], [447.0, 13312.0], [445.0, 5253.5], [446.0, 15723.58333333333], [441.0, 8927.818181818182], [442.0, 13209.4], [443.0, 12201.666666666666], [450.0, 20160.6], [448.0, 12746.0], [451.0, 12070.4], [460.0, 40379.545454545456], [461.0, 9231.5], [462.0, 8567.333333333332], [463.0, 9068.285714285716], [452.0, 10715.42857142857], [453.0, 10798.09090909091], [454.0, 33586.8], [455.0, 1.0], [456.0, 9704.666666666666], [457.0, 11336.42857142857], [458.0, 22365.375], [459.0, 7957.416666666666], [465.0, 11263.0], [464.0, 11584.0], [466.0, 11776.0], [467.0, 98879.25], [468.0, 7932.0], [469.0, 6365.624999999999], [470.0, 10161.4], [471.0, 12699.400000000001], [472.0, 12311.4], [478.0, 10189.5], [479.0, 10496.0], [476.0, 10316.0], [477.0, 13312.0], [473.0, 12238.2], [474.0, 10838.333333333334], [475.0, 15616.0], [481.0, 54591.49999999999], [480.0, 10801.4], [482.0, 11189.0], [483.0, 105726.0], [484.0, 7428.0], [485.0, 13679.42857142857], [486.0, 14141.75], [487.0, 14077.0], [488.0, 6399.833333333334], [495.0, 26996.833333333332], [492.0, 9102.444444444445], [494.0, 10899.0], [489.0, 7272.4], [490.0, 11391.333333333334], [491.0, 114944.0], [496.0, 11687.0], [497.0, 99327.5], [498.0, 14048.5], [499.0, 11501.666666666668], [500.0, 19138.42887473463]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[380.2103505843066, 16911.856427378945]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 541.5], [4.0, 510.0], [5.0, 598.6666666666666], [6.0, 572.6666666666666], [7.0, 797.8], [8.0, 836.7142857142857], [9.0, 785.75], [10.0, 913.2857142857142], [11.0, 875.4615384615386], [12.0, 42886.46666666667], [13.0, 863.5714285714286], [14.0, 796.7333333333332], [15.0, 917.0588235294117], [16.0, 813.3076923076924], [17.0, 914.8333333333334], [18.0, 981.0555555555555], [19.0, 980.1249999999999], [20.0, 1008.5555555555555], [21.0, 1080.5], [22.0, 1293.235294117647], [23.0, 13072.23076923077], [24.0, 1442.8461538461536], [25.0, 1818.25], [26.0, 1466.1904761904761], [27.0, 52375.5], [28.0, 1813.9411764705887], [29.0, 1789.4615384615386], [30.0, 18452.875], [31.0, 7393.578947368421], [32.0, 9725.4], [33.0, 8035.882352941177], [34.0, 7658.333333333333], [35.0, 1746.875], [36.0, 1724.2631578947369], [37.0, 1983.2941176470588], [38.0, 9807.176470588234], [39.0, 2120.4705882352946], [40.0, 1991.8666666666668], [41.0, 2259.9411764705883], [42.0, 2236.529411764706], [43.0, 18806.1875], [44.0, 7337.866666666666], [45.0, 2425.7999999999997], [46.0, 14092.944444444445], [47.0, 2460.6363636363635], [48.0, 2843.3684210526317], [49.0, 2658.4666666666667], [50.0, 2506.533333333333], [51.0, 2762.923076923077], [52.0, 3038.3750000000005], [53.0, 3122.7999999999997], [54.0, 3181.2727272727275], [55.0, 3216.230769230769], [56.0, 3719.2500000000005], [57.0, 34603.0], [58.0, 17108.866666666665], [59.0, 16352.0625], [60.0, 16207.0], [61.0, 3407.705882352941], [62.0, 30997.066666666666], [63.0, 3270.4375000000005], [64.0, 3531.875], [65.0, 3786.571428571429], [66.0, 3675.2307692307695], [67.0, 3938.5], [68.0, 3877.2142857142853], [69.0, 3989.076923076923], [70.0, 4022.1764705882347], [71.0, 4127.214285714286], [72.0, 31603.736842105263], [73.0, 6910.999999999999], [74.0, 7128.117647058823], [75.0, 7165.6875], [76.0, 7885.076923076923], [77.0, 8665.25], [78.0, 7933.866666666667], [79.0, 7277.5294117647045], [80.0, 8080.529411764706], [81.0, 7313.25], [82.0, 7186.764705882353], [83.0, 7840.666666666666], [84.0, 7895.8], [85.0, 8481.928571428572], [86.0, 5066.357142857143], [87.0, 5016.666666666667], [88.0, 5276.142857142857], [89.0, 5999.923076923077], [90.0, 10022.933333333334], [91.0, 6219.230769230769], [92.0, 6363.090909090909], [93.0, 6421.928571428571], [94.0, 6416.5625], [95.0, 5649.538461538461], [96.0, 5818.888888888889], [97.0, 6222.444444444445], [98.0, 10904.5], [99.0, 9863.625], [100.0, 10905.0], [101.0, 9148.05], [102.0, 10056.733333333334], [103.0, 9288.533333333333], [104.0, 8955.9375], [105.0, 9739.692307692307], [106.0, 10553.18181818182], [107.0, 6576.307692307692], [108.0, 6451.545454545454], [109.0, 6715.0], [110.0, 12181.7], [111.0, 8415.928571428572], [112.0, 7959.777777777777], [113.0, 7979.727272727273], [114.0, 7871.999999999999], [115.0, 8121.333333333333], [116.0, 8100.357142857143], [117.0, 7638.666666666666], [118.0, 7879.88888888889], [119.0, 7545.615384615385], [120.0, 7838.909090909091], [121.0, 8127.500000000001], [122.0, 8745.466666666669], [123.0, 8309.9], [124.0, 10524.384615384615], [125.0, 8439.545454545454], [126.0, 8989.142857142857], [127.0, 8335.999999999998], [128.0, 27439.272727272724], [129.0, 9047.066666666668], [130.0, 8509.0], [131.0, 8900.333333333334], [132.0, 9371.875], [133.0, 9400.142857142857], [134.0, 27136.166666666668], [135.0, 11960.333333333334], [136.0, 12322.833333333334], [137.0, 14448.357142857143], [138.0, 14420.777777777777], [139.0, 11253.42857142857], [140.0, 10423.5], [141.0, 10899.307692307691], [142.0, 10260.222222222223], [143.0, 10467.090909090908], [144.0, 9789.000000000002], [145.0, 31444.333333333336], [146.0, 11135.538461538461], [147.0, 14292.636363636364], [148.0, 14550.272727272728], [149.0, 11899.666666666668], [150.0, 14783.545454545452], [151.0, 11513.0], [152.0, 11462.699999999999], [153.0, 12594.333333333334], [154.0, 12174.999999999998], [155.0, 11867.76923076923], [156.0, 11566.0], [157.0, 11153.000000000002], [158.0, 12402.785714285714], [159.0, 11612.666666666664], [160.0, 11867.4], [161.0, 10981.900000000001], [162.0, 12318.58333333333], [163.0, 12037.090909090908], [164.0, 12629.083333333334], [165.0, 10836.5], [166.0, 12608.923076923078], [167.0, 11601.083333333336], [168.0, 10813.538461538463], [169.0, 12627.636363636364], [170.0, 11563.076923076924], [171.0, 11482.333333333334], [172.0, 12087.8], [173.0, 11690.062500000002], [174.0, 11432.5], [175.0, 12364.571428571428], [176.0, 11156.615384615387], [177.0, 11118.8], [178.0, 10669.916666666666], [179.0, 12230.818181818182], [180.0, 12290.857142857143], [181.0, 11675.785714285716], [182.0, 11926.29411764706], [183.0, 11246.937499999998], [184.0, 11545.42857142857], [185.0, 11531.166666666666], [186.0, 12654.076923076922], [187.0, 11734.357142857145], [188.0, 11134.72222222222], [189.0, 11791.900000000001], [190.0, 11032.0], [191.0, 11301.75], [192.0, 12788.0], [193.0, 12366.3], [194.0, 11882.071428571428], [195.0, 12086.583333333332], [196.0, 11682.5], [197.0, 11475.416666666668], [198.0, 11899.166666666666], [199.0, 11916.866666666667], [200.0, 11516.1875], [201.0, 11052.583333333332], [202.0, 11406.75], [203.0, 11923.222222222223], [204.0, 21817.199999999997], [205.0, 11749.947368421053], [206.0, 11638.636363636362], [207.0, 20056.181818181816], [208.0, 11825.076923076922], [209.0, 11873.166666666666], [210.0, 11884.090909090908], [211.0, 12461.923076923074], [212.0, 11775.875], [213.0, 12063.066666666668], [214.0, 10782.0], [215.0, 12452.42857142857], [216.0, 11760.777777777777], [217.0, 11292.875], [218.0, 11838.437499999998], [219.0, 11693.714285714286], [220.0, 11650.636363636364], [221.0, 11434.416666666668], [222.0, 11646.636363636366], [223.0, 11602.277777777777], [224.0, 11406.857142857143], [225.0, 10898.555555555555], [226.0, 11972.5], [227.0, 11084.933333333332], [228.0, 10839.499999999998], [229.0, 11345.727272727274], [230.0, 11476.142857142855], [231.0, 11529.384615384613], [232.0, 11632.083333333332], [233.0, 10343.133333333335], [234.0, 11100.5], [235.0, 14264.944444444445], [236.0, 11727.4], [237.0, 12624.818181818182], [238.0, 11102.222222222223], [239.0, 11880.750000000002], [240.0, 11183.416666666666], [241.0, 11838.25], [242.0, 12649.888888888889], [243.0, 11197.083333333334], [244.0, 12658.846153846154], [245.0, 12459.466666666667], [246.0, 12132.571428571426], [247.0, 11621.062499999998], [248.0, 11380.076923076922], [249.0, 12229.800000000001], [250.0, 11538.999999999998], [251.0, 10876.066666666666], [252.0, 10815.416666666668], [253.0, 10638.0], [254.0, 10309.818181818182], [255.0, 11273.777777777776], [257.0, 14246.571428571428], [256.0, 14840.399999999998], [258.0, 14001.277777777777], [259.0, 9840.800000000001], [260.0, 22928.13333333333], [261.0, 11461.615384615385], [262.0, 10653.199999999999], [263.0, 10668.699999999999], [264.0, 18285.416666666668], [270.0, 17193.35714285714], [271.0, 12527.785714285716], [268.0, 11465.615384615385], [269.0, 12400.749999999998], [265.0, 10449.0], [266.0, 15071.500000000002], [267.0, 10761.384615384615], [273.0, 13230.307692307691], [272.0, 14195.142857142859], [274.0, 12397.357142857143], [275.0, 12133.454545454544], [276.0, 14898.875], [277.0, 12579.857142857145], [278.0, 19264.5625], [279.0, 11336.77777777778], [280.0, 17957.875], [286.0, 16222.64705882353], [287.0, 11190.0], [284.0, 9398.0], [285.0, 11709.125], [281.0, 12195.90909090909], [282.0, 15995.250000000002], [283.0, 12412.13043478261], [289.0, 9995.181818181814], [288.0, 19261.315789473687], [290.0, 10270.307692307693], [291.0, 10423.461538461537], [292.0, 16102.684210526313], [293.0, 9651.625], [294.0, 10295.11111111111], [295.0, 11105.157894736842], [296.0, 10372.038461538463], [302.0, 11403.916666666666], [303.0, 14966.785714285716], [300.0, 12642.941176470587], [301.0, 17412.562499999996], [297.0, 17561.82352941177], [298.0, 9545.611111111111], [299.0, 16506.823529411766], [305.0, 13507.411764705881], [304.0, 12181.333333333336], [306.0, 11136.105263157895], [307.0, 19770.315789473687], [308.0, 11321.590909090908], [309.0, 11078.925925925925], [310.0, 11614.615384615385], [311.0, 11218.388888888889], [312.0, 11318.526315789475], [318.0, 11376.153846153846], [319.0, 9861.454545454544], [316.0, 8893.769230769232], [317.0, 10404.941176470587], [313.0, 8908.857142857141], [314.0, 10966.099999999999], [315.0, 11575.312500000002], [321.0, 19296.416666666668], [320.0, 11104.944444444445], [322.0, 11548.84], [323.0, 15320.70588235294], [324.0, 11494.037037037036], [325.0, 9667.142857142857], [326.0, 10394.375], [327.0, 11298.529411764706], [328.0, 9506.222222222224], [334.0, 10665.444444444445], [335.0, 13715.23076923077], [332.0, 10276.285714285716], [333.0, 10483.850000000002], [329.0, 10619.166666666668], [330.0, 10138.307692307691], [331.0, 12166.666666666666], [337.0, 11374.72222222222], [336.0, 11601.843750000002], [338.0, 15550.16666666667], [339.0, 10939.214285714284], [340.0, 9706.571428571428], [341.0, 11393.166666666668], [342.0, 12127.315789473685], [343.0, 9498.434782608692], [344.0, 12950.848484848484], [350.0, 9618.705882352944], [351.0, 10085.034482758621], [348.0, 10558.076923076924], [349.0, 11336.421052631576], [345.0, 11408.35], [346.0, 12118.941176470587], [347.0, 9973.500000000002], [353.0, 8932.149999999998], [352.0, 9887.57142857143], [354.0, 9162.045454545456], [355.0, 10539.642857142857], [356.0, 12006.214285714286], [357.0, 9773.42857142857], [358.0, 9875.75], [359.0, 10832.607142857145], [360.0, 10003.466666666664], [366.0, 9462.75], [367.0, 11441.375], [364.0, 10870.27272727273], [365.0, 12326.714285714286], [361.0, 10082.2], [362.0, 11522.599999999999], [363.0, 11325.709677419354], [369.0, 10581.666666666666], [368.0, 11607.875], [370.0, 11440.076923076922], [371.0, 10426.866666666667], [372.0, 12209.0], [373.0, 11729.125], [374.0, 11162.851851851852], [375.0, 12254.454545454546], [376.0, 11592.416666666666], [382.0, 12154.333333333332], [383.0, 11994.583333333332], [380.0, 10146.041666666668], [381.0, 12539.624999999998], [377.0, 10918.70833333333], [378.0, 11107.909090909088], [379.0, 11125.454545454546], [385.0, 11594.666666666666], [384.0, 11970.947368421052], [386.0, 11506.833333333334], [387.0, 12378.956521739132], [388.0, 14680.099999999997], [389.0, 16505.631578947367], [390.0, 13012.375], [391.0, 12808.941176470587], [392.0, 11839.933333333332], [398.0, 11541.961538461539], [399.0, 11003.423076923078], [396.0, 10746.3125], [397.0, 11061.607142857143], [393.0, 11479.363636363636], [394.0, 12650.391304347826], [395.0, 11943.791666666666], [401.0, 9476.32], [400.0, 10974.076923076922], [402.0, 11132.636363636362], [403.0, 11192.136363636364], [404.0, 11633.533333333333], [405.0, 11894.199999999999], [406.0, 10672.2], [407.0, 11311.666666666666], [408.0, 10296.888888888889], [414.0, 11936.076923076924], [415.0, 11020.647058823528], [412.0, 12758.384615384615], [413.0, 12379.769230769229], [409.0, 11384.21052631579], [410.0, 11699.26923076923], [411.0, 10758.57142857143], [417.0, 10600.888888888887], [416.0, 11197.032258064517], [418.0, 10193.045454545454], [419.0, 10578.434782608698], [420.0, 11062.95], [421.0, 11776.588235294115], [422.0, 11783.363636363636], [423.0, 11575.357142857145], [424.0, 10183.217391304348], [430.0, 10321.333333333332], [431.0, 11891.72], [428.0, 10959.95652173913], [429.0, 11659.470588235296], [425.0, 11494.607142857143], [426.0, 10879.124999999998], [427.0, 10977.687499999998], [433.0, 11046.04], [432.0, 15499.3], [434.0, 10467.615384615385], [435.0, 9702.90909090909], [436.0, 11969.652173913044], [437.0, 10640.499999999998], [438.0, 11038.03125], [439.0, 10044.333333333334], [440.0, 9716.09090909091], [446.0, 13976.384615384613], [447.0, 10863.823529411764], [444.0, 11329.181818181818], [445.0, 10248.555555555555], [441.0, 10280.42857142857], [442.0, 11235.466666666667], [443.0, 10958.92857142857], [449.0, 11755.312500000002], [448.0, 12041.315789473683], [450.0, 22202.037037037033], [451.0, 10997.166666666664], [452.0, 9969.466666666667], [453.0, 11652.971428571429], [454.0, 19010.23076923077], [455.0, 10116.928571428572], [456.0, 10490.499999999998], [462.0, 10080.242424242426], [463.0, 9511.347826086956], [460.0, 19755.5], [461.0, 9689.1875], [457.0, 10931.551724137931], [458.0, 10492.039999999999], [459.0, 10834.6], [465.0, 10399.363636363636], [464.0, 10742.57142857143], [466.0, 10928.916666666666], [467.0, 26201.250000000007], [468.0, 10708.1875], [469.0, 9854.8], [470.0, 10272.277777777777], [471.0, 11799.727272727268], [472.0, 10960.78947368421], [478.0, 9817.958333333334], [479.0, 9565.866666666667], [476.0, 10729.555555555555], [477.0, 11364.647058823528], [473.0, 12551.366666666663], [474.0, 10693.692307692309], [475.0, 11363.380952380952], [481.0, 40408.21739130435], [480.0, 10598.57142857143], [482.0, 11597.739130434784], [483.0, 30718.958333333332], [484.0, 11596.7], [485.0, 11485.391304347824], [486.0, 11423.142857142859], [487.0, 17549.41176470588], [488.0, 9780.217391304348], [494.0, 11657.521739130436], [495.0, 17445.066666666666], [492.0, 10451.24], [493.0, 24886.75], [489.0, 17749.72222222222], [490.0, 11532.714285714286], [491.0, 19587.117647058825], [496.0, 11519.761904761905], [497.0, 12661.5], [498.0, 11992.461538461537], [499.0, 12285.468749999998], [500.0, 13609.797872340423], [1.0, 213608.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[322.80839506172737, 11718.958716049361]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 27.0], [3.0, 46.0], [4.0, 28.0], [5.0, 39.0], [6.0, 28.0], [7.0, 39.0], [8.0, 27.0], [9.0, 35.0], [10.0, 105870.5], [11.0, 105584.0], [12.0, 140297.33333333334], [13.0, 20.0], [14.0, 26.0], [15.0, 50.0], [16.0, 20.0], [17.0, 104978.5], [18.0, 140.0], [19.0, 252.0], [20.0, 195.0], [21.0, 223.0], [22.0, 266.0], [23.0, 668.0], [24.0, 811.0], [25.0, 790.0], [26.0, 722.0], [27.0, 154111.75], [28.0, 992.5], [29.0, 840.0], [30.0, 783.0], [31.0, 698.0], [32.0, 989.0], [33.0, 964.0], [34.0, 821.0], [36.0, 1009.5], [38.0, 91169.0], [39.0, 1327.0], [40.0, 1375.0], [41.0, 1524.0], [42.0, 1479.0], [43.0, 100250.25], [44.0, 1740.0], [45.0, 1565.0], [46.0, 1676.0], [47.0, 1795.0], [48.0, 1899.0], [49.0, 1731.0], [51.0, 2056.0], [52.0, 2169.0], [53.0, 2213.0], [54.0, 2318.0], [56.0, 3141.0], [57.0, 2471.0], [58.0, 2279.0], [59.0, 2459.0], [60.0, 2494.0], [61.0, 2489.0], [62.0, 106389.5], [63.0, 2686.0], [64.0, 2835.0], [65.0, 2652.0], [67.0, 3053.0], [68.0, 3181.0], [69.0, 3228.0], [70.0, 3060.0], [71.0, 3030.0], [72.0, 89726.66666666666], [73.0, 3200.0], [74.0, 3208.0], [75.0, 2994.0], [77.0, 3483.0], [79.0, 4010.0], [80.0, 3944.0], [81.0, 3518.0], [82.0, 3531.0], [83.0, 3580.0], [84.0, 3803.0], [86.0, 29211.5], [87.0, 4439.0], [89.0, 5052.0], [90.0, 5211.0], [91.0, 5300.0], [88.0, 54053.0], [92.0, 5515.0], [93.0, 5136.0], [94.0, 4850.0], [95.0, 54038.0], [96.0, 5025.0], [97.0, 5247.0], [98.0, 5349.0], [99.0, 5653.0], [100.0, 5879.0], [101.0, 5709.0], [102.0, 5448.0], [103.0, 5110.0], [104.0, 5006.0], [105.0, 5048.0], [106.0, 5098.0], [107.0, 30984.0], [109.0, 6085.0], [110.0, 6990.0], [111.0, 53318.0], [112.0, 22380.333333333336], [113.0, 29996.5], [115.0, 30210.25], [116.0, 29922.5], [117.0, 6132.0], [118.0, 6434.0], [120.0, 7122.0], [121.0, 7119.0], [122.0, 7169.0], [123.0, 65016.0], [124.0, 7501.0], [125.0, 7703.0], [126.0, 7251.0], [127.0, 7388.0], [128.0, 59904.5], [129.0, 7650.0], [131.0, 8022.0], [132.0, 8367.0], [134.0, 9103.0], [136.0, 9963.0], [137.0, 9819.0], [138.0, 9271.0], [139.0, 9458.0], [140.0, 9499.0], [141.0, 9111.5], [142.0, 8822.0], [143.0, 8711.0], [144.0, 8655.0], [145.0, 8893.0], [146.0, 8744.0], [148.0, 9533.0], [149.0, 9657.0], [150.0, 9518.0], [151.0, 9938.0], [152.0, 9955.0], [154.0, 10298.0], [156.0, 10277.0], [159.0, 10041.0], [157.0, 22730.0], [163.0, 10835.0], [165.0, 10634.0], [167.0, 19345.0], [168.0, 23554.0], [175.0, 18140.0], [174.0, 18157.0], [173.0, 18173.0], [179.0, 23538.0], [182.0, 23203.5], [178.0, 19367.0], [177.0, 19383.0], [184.0, 20576.0], [187.0, 13168.0], [195.0, 16610.333333333332], [201.0, 10081.5], [205.0, 10450.0], [206.0, 17653.0], [211.0, 9468.5], [212.0, 31416.0], [213.0, 10498.0], [216.0, 14250.0], [217.0, 11774.0], [219.0, 9843.0], [220.0, 10384.0], [223.0, 13847.0], [222.0, 12823.0], [218.0, 12382.0], [224.0, 22442.666666666668], [225.0, 28917.5], [227.0, 10633.0], [229.0, 13304.0], [230.0, 12103.5], [231.0, 7094.0], [232.0, 13106.0], [235.0, 11866.5], [239.0, 16287.0], [238.0, 13752.0], [240.0, 16772.666666666668], [241.0, 7076.0], [245.0, 40166.5], [242.0, 14482.0], [248.0, 43683.333333333336], [250.0, 11801.0], [251.0, 9461.0], [252.0, 8418.666666666666], [254.0, 62474.33333333333], [255.0, 17277.0], [253.0, 11233.0], [259.0, 10885.6], [257.0, 9302.0], [256.0, 96697.0], [262.0, 10021.0], [258.0, 43064.333333333336], [260.0, 71285.66666666667], [261.0, 10621.0], [264.0, 73636.66666666667], [271.0, 20392.5], [268.0, 74992.6], [269.0, 13226.0], [266.0, 49540.4], [267.0, 21506.666666666668], [273.0, 7927.0], [272.0, 65941.5], [274.0, 34657.6], [275.0, 8879.0], [276.0, 34904.25], [277.0, 13415.0], [278.0, 79716.5], [279.0, 11752.0], [280.0, 40114.857142857145], [286.0, 36653.28571428571], [287.0, 8753.0], [284.0, 50684.125], [285.0, 9656.0], [281.0, 1.0], [282.0, 37186.0], [283.0, 19189.5], [289.0, 15959.25], [288.0, 5308.428571428572], [290.0, 17152.0], [291.0, 10364.0], [292.0, 7433.333333333333], [293.0, 7252.666666666667], [294.0, 13822.666666666666], [295.0, 27292.5], [296.0, 12330.166666666668], [302.0, 13575.0], [303.0, 10349.0], [300.0, 8828.250000000002], [301.0, 34902.4], [297.0, 57160.5], [298.0, 10067.25], [299.0, 27605.4], [306.0, 11059.2], [305.0, 12072.0], [307.0, 40455.0], [316.0, 8880.333333333334], [317.0, 10752.0], [318.0, 7379.0], [319.0, 43494.66666666667], [308.0, 8547.166666666666], [309.0, 12021.714285714286], [310.0, 11989.5], [311.0, 22627.8], [312.0, 9297.0], [313.0, 12441.0], [315.0, 28275.4], [321.0, 22960.875], [320.0, 12362.5], [322.0, 12245.800000000003], [323.0, 44620.8], [324.0, 11604.0], [325.0, 9573.6], [326.0, 16673.25], [327.0, 13300.5], [328.0, 9357.5], [334.0, 11472.333333333334], [335.0, 9843.09090909091], [332.0, 8532.0], [333.0, 55095.5], [330.0, 9264.666666666666], [331.0, 14307.125], [337.0, 14656.000000000002], [336.0, 11288.0], [338.0, 50108.25], [339.0, 10489.23076923077], [340.0, 7370.5], [341.0, 9965.333333333334], [342.0, 33727.444444444445], [343.0, 6613.099999999999], [344.0, 21203.625], [350.0, 10277.4], [351.0, 12191.666666666666], [348.0, 11841.0], [349.0, 9732.0], [345.0, 9737.75], [346.0, 13316.0], [347.0, 8981.375], [353.0, 8667.4], [352.0, 10749.25], [354.0, 14848.0], [355.0, 13564.4], [356.0, 7040.5], [357.0, 8628.428571428572], [358.0, 10029.857142857143], [359.0, 9048.555555555555], [360.0, 10635.09090909091], [366.0, 11647.5], [364.0, 13861.0], [365.0, 10688.0], [361.0, 11902.25], [362.0, 13584.0], [363.0, 11291.615384615385], [370.0, 13055.0], [368.0, 9567.833333333332], [371.0, 9122.333333333334], [380.0, 11761.900000000001], [381.0, 9491.0], [382.0, 12143.333333333334], [383.0, 11184.0], [372.0, 13820.666666666666], [373.0, 13582.333333333332], [374.0, 11949.750000000002], [375.0, 15701.0], [376.0, 13340.666666666666], [377.0, 12303.333333333334], [378.0, 9216.0], [379.0, 8505.6], [385.0, 10636.454545454546], [384.0, 11721.125], [386.0, 14131.2], [387.0, 13312.0], [388.0, 8704.333333333332], [390.0, 13739.0], [391.0, 13251.0], [392.0, 11946.2], [398.0, 9980.6], [399.0, 10335.5], [396.0, 11406.25], [397.0, 10281.5], [393.0, 9316.5], [394.0, 11965.75], [395.0, 12203.888888888889], [401.0, 9934.25], [400.0, 5075.0], [403.0, 10111.5], [413.0, 13263.0], [414.0, 6772.0], [415.0, 25527.875000000004], [404.0, 13895.666666666666], [405.0, 12633.222222222223], [406.0, 13828.0], [407.0, 11750.333333333332], [408.0, 12038.5], [409.0, 13144.571428571428], [410.0, 9949.0], [411.0, 10751.666666666666], [417.0, 10493.142857142857], [416.0, 11105.699999999999], [418.0, 11087.300000000003], [419.0, 10402.7], [420.0, 10644.666666666666], [421.0, 10418.0], [422.0, 10101.0], [423.0, 10239.0], [424.0, 7714.0], [430.0, 9216.0], [431.0, 12619.818181818184], [428.0, 9983.75], [429.0, 10622.285714285714], [425.0, 12338.833333333334], [426.0, 32422.5], [427.0, 9991.5], [433.0, 10399.111111111111], [432.0, 33793.333333333336], [434.0, 10473.6], [435.0, 11202.75], [436.0, 15871.333333333334], [437.0, 6963.4], [438.0, 11433.333333333334], [439.0, 6757.333333333333], [440.0, 9984.0], [447.0, 12446.75], [445.0, 7679.0], [446.0, 10994.923076923076], [441.0, 9939.888888888889], [442.0, 8321.333333333334], [443.0, 12320.5], [449.0, 12726.5], [448.0, 13312.0], [450.0, 11768.0], [451.0, 10230.75], [452.0, 11088.0], [453.0, 9603.09090909091], [454.0, 9549.166666666668], [455.0, 7168.0], [457.0, 12595.2], [462.0, 11027.166666666668], [463.0, 5161.0], [460.0, 7471.2], [461.0, 7168.333333333334], [458.0, 20422.0], [459.0, 11001.75], [465.0, 13312.0], [464.0, 9232.5], [466.0, 10472.333333333334], [467.0, 46253.0], [469.0, 7037.333333333333], [470.0, 9763.4], [471.0, 12593.615384615385], [472.0, 12595.6], [478.0, 10494.0], [479.0, 7688.5], [476.0, 11743.0], [477.0, 13824.0], [473.0, 11098.846153846154], [475.0, 13069.0], [481.0, 51762.6], [480.0, 10082.777777777777], [482.0, 13118.818181818182], [483.0, 15471.0], [484.0, 18931.333333333332], [485.0, 11809.5], [486.0, 13854.8], [487.0, 13967.333333333334], [488.0, 9482.666666666666], [494.0, 13016.857142857143], [495.0, 8827.666666666668], [492.0, 10598.0], [493.0, 51673.75], [489.0, 58881.8], [491.0, 92829.0], [496.0, 13311.25], [499.0, 12847.0], [500.0, 19938.083333333347], [1.0, 91.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[379.26996805111776, 17995.93663471778]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 141.28333333333333, "minX": 1.539285E12, "maxY": 1025856.5333333333, "series": [{"data": [[1.53928542E12, 876169.2166666667], [1.53928524E12, 850481.9], [1.53928506E12, 1025856.5333333333], [1.53928554E12, 913939.5], [1.53928536E12, 829054.8333333334], [1.53928518E12, 871042.4833333333], [1.53928566E12, 6042.716666666666], [1.539285E12, 648625.5333333333], [1.53928548E12, 879146.3666666667], [1.5392853E12, 857761.6666666666], [1.53928512E12, 838182.5333333333], [1.5392856E12, 524198.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928542E12, 6926.483333333334], [1.53928524E12, 3673.5666666666666], [1.53928506E12, 3976.516666666667], [1.53928554E12, 7116.45], [1.53928536E12, 6715.95], [1.53928518E12, 3133.6], [1.53928566E12, 141.28333333333333], [1.539285E12, 2594.983333333333], [1.53928548E12, 6891.383333333333], [1.5392853E12, 6212.75], [1.53928512E12, 3319.4], [1.5392856E12, 3868.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928566E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 529.1428571428571, "minX": 1.539285E12, "maxY": 191301.7272727273, "series": [{"data": [[1.53928542E12, 12361.143322475571], [1.53928524E12, 12862.781250000002], [1.53928506E12, 4508.384615384616], [1.53928554E12, 22619.48375451263], [1.53928536E12, 10644.60854092527], [1.53928518E12, 10991.277777777777], [1.53928566E12, 191301.7272727273], [1.539285E12, 1732.8249999999998], [1.53928548E12, 16268.080291970793], [1.5392853E12, 13074.027667984186], [1.53928512E12, 9211.80392156863], [1.5392856E12, 33579.22485207099]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928542E12, 11667.164655172422], [1.53928524E12, 12785.17931937173], [1.53928506E12, 4323.5128805620625], [1.53928554E12, 14102.736718750013], [1.53928536E12, 11217.078328981745], [1.53928518E12, 11488.905219780234], [1.53928566E12, 154287.18749999997], [1.539285E12, 1462.9263351749553], [1.53928548E12, 13646.67520661158], [1.5392853E12, 12103.860927152315], [1.53928512E12, 9294.24103299856], [1.5392856E12, 19953.871064467763]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928542E12, 12193.399371069181], [1.53928524E12, 35811.574468085084], [1.53928506E12, 3529.446428571429], [1.53928554E12, 24099.74712643679], [1.53928536E12, 11151.45296167247], [1.53928518E12, 14908.454545454546], [1.53928566E12, 176588.7272727273], [1.539285E12, 529.1428571428571], [1.53928548E12, 14873.400673400678], [1.5392853E12, 18847.10247349824], [1.53928512E12, 8159.119999999999], [1.5392856E12, 28106.10191082802]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928566E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 529.1190476190476, "minX": 1.539285E12, "maxY": 191301.7272727273, "series": [{"data": [[1.53928542E12, 12361.130293159607], [1.53928524E12, 12862.781250000002], [1.53928506E12, 4508.384615384616], [1.53928554E12, 22619.45487364621], [1.53928536E12, 10644.60854092527], [1.53928518E12, 10991.277777777777], [1.53928566E12, 191301.7272727273], [1.539285E12, 1732.8249999999998], [1.53928548E12, 16268.054744525545], [1.5392853E12, 13074.019762845846], [1.53928512E12, 9211.80392156863], [1.5392856E12, 33579.189349112436]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928542E12, 11666.812068965528], [1.53928524E12, 12784.66492146597], [1.53928506E12, 4323.023419203744], [1.53928554E12, 14102.414062499982], [1.53928536E12, 11216.792863359413], [1.53928518E12, 11488.398351648368], [1.53928566E12, 154287.0625], [1.539285E12, 1462.4162062615076], [1.53928548E12, 13646.37355371901], [1.5392853E12, 12103.534531693469], [1.53928512E12, 9293.751793400283], [1.5392856E12, 19953.49325337331]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928542E12, 12193.389937106915], [1.53928524E12, 35811.574468085084], [1.53928506E12, 3529.446428571429], [1.53928554E12, 24099.73563218392], [1.53928536E12, 11151.44599303135], [1.53928518E12, 14908.454545454546], [1.53928566E12, 176588.63636363638], [1.539285E12, 529.1190476190476], [1.53928548E12, 14873.390572390572], [1.5392853E12, 18847.08833922263], [1.53928512E12, 8159.119999999999], [1.5392856E12, 28106.08917197452]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928566E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.539285E12, "maxY": 2.2619047619047623, "series": [{"data": [[1.53928542E12, 0.31596091205211724], [1.53928524E12, 0.8124999999999998], [1.53928506E12, 0.7884615384615383], [1.53928554E12, 0.24909747292418782], [1.53928536E12, 0.5124555160142351], [1.53928518E12, 0.9444444444444443], [1.53928566E12, 0.5454545454545454], [1.539285E12, 0.0], [1.53928548E12, 0.25547445255474455], [1.5392853E12, 0.5889328063241104], [1.53928512E12, 0.8431372549019609], [1.5392856E12, 0.25443786982248506]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928542E12, 0.34655172413793106], [1.53928524E12, 0.5484293193717275], [1.53928506E12, 0.6264637002341927], [1.53928554E12, 0.32421874999999994], [1.53928536E12, 0.4438642297650137], [1.53928518E12, 0.5549450549450563], [1.53928566E12, 0.4375], [1.539285E12, 0.37200736648250476], [1.53928548E12, 0.31157024793388427], [1.5392853E12, 0.5156102175969732], [1.53928512E12, 0.5638450502152078], [1.5392856E12, 0.3388305847076467]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928542E12, 0.3081761006289308], [1.53928524E12, 0.9574468085106387], [1.53928506E12, 0.982142857142857], [1.53928554E12, 0.31034482758620696], [1.53928536E12, 0.38675958188153314], [1.53928518E12, 0.9090909090909091], [1.53928566E12, 0.45454545454545453], [1.539285E12, 2.2619047619047623], [1.53928548E12, 0.7070707070707066], [1.5392853E12, 0.618374558303887], [1.53928512E12, 1.1], [1.5392856E12, 0.24840764331210188]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928566E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.539285E12, "maxY": 122182.0, "series": [{"data": [[1.53928542E12, 18067.0], [1.53928524E12, 64695.0], [1.53928506E12, 10909.0], [1.53928554E12, 21918.0], [1.53928536E12, 25325.0], [1.53928518E12, 37292.0], [1.53928566E12, 122182.0], [1.539285E12, 5693.0], [1.53928548E12, 17986.0], [1.5392853E12, 36148.0], [1.53928512E12, 15192.0], [1.5392856E12, 77412.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928542E12, 9079.0], [1.53928524E12, 8917.0], [1.53928506E12, 1565.0], [1.53928554E12, 9379.0], [1.53928536E12, 8155.0], [1.53928518E12, 9560.0], [1.53928566E12, 106547.0], [1.539285E12, 19.0], [1.53928548E12, 9524.0], [1.5392853E12, 8907.0], [1.53928512E12, 5006.0], [1.5392856E12, 9772.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928542E12, 12414.600000000006], [1.53928524E12, 12047.8], [1.53928506E12, 5950.4], [1.53928554E12, 12516.000000000002], [1.53928536E12, 12344.6], [1.53928518E12, 11478.5], [1.53928566E12, 12710.0], [1.539285E12, 2224.6000000000004], [1.53928548E12, 12523.0], [1.5392853E12, 12115.0], [1.53928512E12, 10442.8], [1.5392856E12, 12703.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928542E12, 15966.64], [1.53928524E12, 15665.870000000006], [1.53928506E12, 8336.080000000002], [1.53928554E12, 16113.119999999999], [1.53928536E12, 15977.679999999993], [1.53928518E12, 15091.050000000007], [1.53928566E12, 19873.0], [1.539285E12, 3781.6599999999935], [1.53928548E12, 16064.86], [1.5392853E12, 15805.829999999998], [1.53928512E12, 12695.779999999999], [1.5392856E12, 19379.64]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928542E12, 13330.8], [1.53928524E12, 12943.349999999999], [1.53928506E12, 6414.1], [1.53928554E12, 13400.599999999999], [1.53928536E12, 13212.449999999995], [1.53928518E12, 12413.75], [1.53928566E12, 13902.5], [1.539285E12, 2467.7999999999997], [1.53928548E12, 13397.0], [1.5392853E12, 13032.349999999999], [1.53928512E12, 10987.8], [1.5392856E12, 13865.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928566E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 182016.0, "series": [{"data": [[16.0, 5260.0], [0.0, 107788.0], [10.0, 1460.0], [12.0, 11194.0], [13.0, 9467.0], [26.0, 10703.5], [28.0, 11294.5], [29.0, 10949.5], [15.0, 11244.5], [30.0, 10751.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13311.0], [0.0, 182016.0], [10.0, 2.0], [12.0, 7321.0], [13.0, 1.0], [26.0, 12288.0], [28.0, 11776.0], [29.0, 13307.0], [15.0, 13397.0], [30.0, 13311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 182016.0, "series": [{"data": [[16.0, 5259.0], [0.0, 107787.0], [10.0, 1459.0], [12.0, 11193.0], [13.0, 9467.0], [26.0, 10703.0], [28.0, 11294.5], [29.0, 10948.5], [15.0, 11244.5], [30.0, 10751.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13311.0], [0.0, 182016.0], [10.0, 2.0], [12.0, 7321.0], [13.0, 1.0], [26.0, 12288.0], [28.0, 11776.0], [29.0, 13307.0], [15.0, 13397.0], [30.0, 13311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.85, "minX": 1.539285E12, "maxY": 30.75, "series": [{"data": [[1.53928542E12, 30.75], [1.53928524E12, 16.366666666666667], [1.53928506E12, 17.033333333333335], [1.53928554E12, 30.3], [1.53928536E12, 29.616666666666667], [1.53928518E12, 13.8], [1.539285E12, 11.133333333333333], [1.53928548E12, 30.3], [1.5392853E12, 27.55], [1.53928512E12, 14.3], [1.5392856E12, 8.85]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392856E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.539285E12, "maxY": 17.05, "series": [{"data": [[1.53928542E12, 12.4], [1.53928524E12, 12.233333333333333], [1.53928506E12, 15.066666666666666], [1.53928554E12, 12.816666666666666], [1.53928536E12, 12.0], [1.53928518E12, 12.383333333333333], [1.53928566E12, 0.06666666666666667], [1.539285E12, 9.683333333333334], [1.53928548E12, 12.433333333333334], [1.5392853E12, 12.4], [1.53928512E12, 12.416666666666666], [1.5392856E12, 7.816666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928542E12, 0.4166666666666667], [1.53928524E12, 0.36666666666666664], [1.53928506E12, 0.8666666666666667], [1.53928554E12, 0.3], [1.53928536E12, 0.6], [1.53928518E12, 0.3], [1.539285E12, 0.6666666666666666], [1.53928548E12, 0.25], [1.5392853E12, 0.6], [1.53928512E12, 0.85], [1.5392856E12, 0.13333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928542E12, 16.8], [1.53928524E12, 2.6333333333333333], [1.53928506E12, 0.1], [1.53928554E12, 17.05], [1.53928536E12, 15.733333333333333], [1.53928518E12, 0.11666666666666667], [1.53928566E12, 0.5666666666666667], [1.539285E12, 0.06666666666666667], [1.53928548E12, 16.85], [1.5392853E12, 13.283333333333333], [1.53928512E12, 0.03333333333333333], [1.5392856E12, 7.9]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928542E12, 0.13333333333333333], [1.53928524E12, 0.13333333333333333], [1.53928554E12, 0.13333333333333333], [1.53928536E12, 0.2833333333333333], [1.53928548E12, 0.15], [1.5392853E12, 0.26666666666666666], [1.5392856E12, 0.7]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928566E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.539285E12, "maxY": 14.133333333333333, "series": [{"data": [[1.53928542E12, 0.36666666666666664], [1.53928524E12, 0.4666666666666667], [1.53928506E12, 0.9333333333333333], [1.53928554E12, 0.2833333333333333], [1.53928536E12, 0.65], [1.53928518E12, 0.3], [1.539285E12, 0.7], [1.53928548E12, 0.3333333333333333], [1.5392853E12, 0.6333333333333333], [1.53928512E12, 0.8333333333333334], [1.5392856E12, 0.6833333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928542E12, 0.4166666666666667], [1.53928524E12, 0.36666666666666664], [1.53928506E12, 0.8666666666666667], [1.53928554E12, 0.3], [1.53928536E12, 0.6], [1.53928518E12, 0.3], [1.539285E12, 0.6666666666666666], [1.53928548E12, 0.25], [1.5392853E12, 0.6], [1.53928512E12, 0.85], [1.5392856E12, 0.13333333333333333]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928542E12, 12.033333333333333], [1.53928524E12, 11.766666666666667], [1.53928506E12, 14.133333333333333], [1.53928554E12, 12.533333333333333], [1.53928536E12, 11.35], [1.53928518E12, 12.083333333333334], [1.53928566E12, 0.06666666666666667], [1.539285E12, 8.983333333333333], [1.53928548E12, 12.1], [1.5392853E12, 11.766666666666667], [1.53928512E12, 11.583333333333334], [1.5392856E12, 7.133333333333334]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928542E12, 4.933333333333334], [1.53928524E12, 1.1], [1.53928554E12, 4.066666666666666], [1.53928536E12, 4.133333333333334], [1.53928518E12, 0.06666666666666667], [1.53928566E12, 0.18333333333333332], [1.53928548E12, 4.616666666666666], [1.5392853E12, 4.083333333333333], [1.5392856E12, 1.9333333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928542E12, 7.3], [1.53928524E12, 0.9666666666666667], [1.53928506E12, 0.1], [1.53928554E12, 8.8], [1.53928536E12, 7.8], [1.53928518E12, 0.05], [1.53928566E12, 0.2], [1.539285E12, 0.06666666666666667], [1.53928548E12, 8.066666666666666], [1.5392853E12, 5.85], [1.53928512E12, 0.03333333333333333], [1.5392856E12, 3.9833333333333334]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928542E12, 4.7], [1.53928524E12, 0.7], [1.53928554E12, 4.316666666666666], [1.53928536E12, 4.083333333333333], [1.53928566E12, 0.18333333333333332], [1.53928548E12, 4.316666666666666], [1.5392853E12, 3.6166666666666667], [1.5392856E12, 2.683333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928566E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
