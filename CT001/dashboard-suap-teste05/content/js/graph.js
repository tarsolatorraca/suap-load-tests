/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 213434.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 2.0], [7.1, 2.0], [7.2, 583.0], [7.3, 588.0], [7.4, 592.0], [7.5, 727.0], [7.6, 853.0], [7.7, 990.0], [7.8, 1060.0], [7.9, 1198.0], [8.0, 1335.0], [8.1, 1343.0], [8.2, 1402.0], [8.3, 1484.0], [8.4, 1807.0], [8.5, 1863.0], [8.6, 1959.0], [8.7, 1973.0], [8.8, 2194.0], [8.9, 2400.0], [9.0, 2708.0], [9.1, 2729.0], [9.2, 2777.0], [9.3, 2867.0], [9.4, 3073.0], [9.5, 3165.0], [9.6, 3230.0], [9.7, 3332.0], [9.8, 3393.0], [9.9, 3503.0], [10.0, 3583.0], [10.1, 3672.0], [10.2, 3724.0], [10.3, 3736.0], [10.4, 3784.0], [10.5, 3908.0], [10.6, 4464.0], [10.7, 4494.0], [10.8, 4504.0], [10.9, 4558.0], [11.0, 5035.0], [11.1, 5199.0], [11.2, 5271.0], [11.3, 5363.0], [11.4, 5513.0], [11.5, 5620.0], [11.6, 5668.0], [11.7, 6062.0], [11.8, 6166.0], [11.9, 6250.0], [12.0, 6316.0], [12.1, 6440.0], [12.2, 6595.0], [12.3, 6686.0], [12.4, 6709.0], [12.5, 6777.0], [12.6, 6862.0], [12.7, 7066.0], [12.8, 7163.0], [12.9, 7164.0], [13.0, 7164.0], [13.1, 7164.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7169.0], [15.3, 7171.0], [15.4, 7171.0], [15.5, 7171.0], [15.6, 7171.0], [15.7, 7172.0], [15.8, 7172.0], [15.9, 7172.0], [16.0, 7420.0], [16.1, 7420.0], [16.2, 7423.0], [16.3, 7423.0], [16.4, 7423.0], [16.5, 7423.0], [16.6, 7423.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7425.0], [17.5, 7427.0], [17.6, 7427.0], [17.7, 7427.0], [17.8, 7428.0], [17.9, 7428.0], [18.0, 7671.0], [18.1, 7678.0], [18.2, 7679.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7681.0], [20.2, 7681.0], [20.3, 7684.0], [20.4, 7870.0], [20.5, 7924.0], [20.6, 7932.0], [20.7, 7934.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7937.0], [22.0, 8124.0], [22.1, 8187.0], [22.2, 8188.0], [22.3, 8188.0], [22.4, 8188.0], [22.5, 8188.0], [22.6, 8191.0], [22.7, 8191.0], [22.8, 8191.0], [22.9, 8191.0], [23.0, 8191.0], [23.1, 8191.0], [23.2, 8191.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8193.0], [24.9, 8196.0], [25.0, 8347.0], [25.1, 8417.0], [25.2, 8444.0], [25.3, 8447.0], [25.4, 8447.0], [25.5, 8448.0], [25.6, 8448.0], [25.7, 8448.0], [25.8, 8448.0], [25.9, 8670.0], [26.0, 8699.0], [26.1, 8700.0], [26.2, 8700.0], [26.3, 8700.0], [26.4, 8702.0], [26.5, 8702.0], [26.6, 8703.0], [26.7, 8703.0], [26.8, 8703.0], [26.9, 8703.0], [27.0, 8703.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8704.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8705.0], [28.5, 8705.0], [28.6, 8706.0], [28.7, 8708.0], [28.8, 8708.0], [28.9, 8791.0], [29.0, 8834.0], [29.1, 8881.0], [29.2, 8956.0], [29.3, 8956.0], [29.4, 8959.0], [29.5, 8959.0], [29.6, 8959.0], [29.7, 8959.0], [29.8, 8960.0], [29.9, 8960.0], [30.0, 8960.0], [30.1, 8960.0], [30.2, 8960.0], [30.3, 8960.0], [30.4, 8964.0], [30.5, 8964.0], [30.6, 9046.0], [30.7, 9091.0], [30.8, 9158.0], [30.9, 9212.0], [31.0, 9212.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9217.0], [32.9, 9221.0], [33.0, 9281.0], [33.1, 9288.0], [33.2, 9387.0], [33.3, 9425.0], [33.4, 9468.0], [33.5, 9468.0], [33.6, 9472.0], [33.7, 9531.0], [33.8, 9582.0], [33.9, 9620.0], [34.0, 9668.0], [34.1, 9710.0], [34.2, 9721.0], [34.3, 9727.0], [34.4, 9727.0], [34.5, 9727.0], [34.6, 9727.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9728.0], [35.5, 9728.0], [35.6, 9728.0], [35.7, 9728.0], [35.8, 9728.0], [35.9, 9728.0], [36.0, 9729.0], [36.1, 9731.0], [36.2, 9732.0], [36.3, 9771.0], [36.4, 9820.0], [36.5, 9830.0], [36.6, 9899.0], [36.7, 9950.0], [36.8, 9973.0], [36.9, 9982.0], [37.0, 9982.0], [37.1, 9983.0], [37.2, 9984.0], [37.3, 9984.0], [37.4, 9984.0], [37.5, 9984.0], [37.6, 9984.0], [37.7, 9986.0], [37.8, 9987.0], [37.9, 10001.0], [38.0, 10030.0], [38.1, 10043.0], [38.2, 10061.0], [38.3, 10068.0], [38.4, 10088.0], [38.5, 10117.0], [38.6, 10157.0], [38.7, 10169.0], [38.8, 10180.0], [38.9, 10198.0], [39.0, 10212.0], [39.1, 10236.0], [39.2, 10237.0], [39.3, 10239.0], [39.4, 10239.0], [39.5, 10239.0], [39.6, 10240.0], [39.7, 10240.0], [39.8, 10240.0], [39.9, 10240.0], [40.0, 10240.0], [40.1, 10240.0], [40.2, 10240.0], [40.3, 10240.0], [40.4, 10240.0], [40.5, 10240.0], [40.6, 10241.0], [40.7, 10262.0], [40.8, 10282.0], [40.9, 10294.0], [41.0, 10297.0], [41.1, 10350.0], [41.2, 10364.0], [41.3, 10404.0], [41.4, 10407.0], [41.5, 10419.0], [41.6, 10439.0], [41.7, 10465.0], [41.8, 10495.0], [41.9, 10496.0], [42.0, 10596.0], [42.1, 10608.0], [42.2, 10613.0], [42.3, 10624.0], [42.4, 10628.0], [42.5, 10637.0], [42.6, 10660.0], [42.7, 10661.0], [42.8, 10672.0], [42.9, 10677.0], [43.0, 10681.0], [43.1, 10703.0], [43.2, 10704.0], [43.3, 10729.0], [43.4, 10751.0], [43.5, 10752.0], [43.6, 10752.0], [43.7, 10754.0], [43.8, 10755.0], [43.9, 10756.0], [44.0, 10756.0], [44.1, 10756.0], [44.2, 10762.0], [44.3, 10780.0], [44.4, 10809.0], [44.5, 10820.0], [44.6, 10823.0], [44.7, 10853.0], [44.8, 10861.0], [44.9, 10876.0], [45.0, 10879.0], [45.1, 10890.0], [45.2, 10911.0], [45.3, 10951.0], [45.4, 11007.0], [45.5, 11007.0], [45.6, 11008.0], [45.7, 11008.0], [45.8, 11022.0], [45.9, 11029.0], [46.0, 11046.0], [46.1, 11052.0], [46.2, 11078.0], [46.3, 11090.0], [46.4, 11114.0], [46.5, 11162.0], [46.6, 11185.0], [46.7, 11198.0], [46.8, 11213.0], [46.9, 11227.0], [47.0, 11259.0], [47.1, 11259.0], [47.2, 11263.0], [47.3, 11263.0], [47.4, 11263.0], [47.5, 11263.0], [47.6, 11263.0], [47.7, 11263.0], [47.8, 11264.0], [47.9, 11264.0], [48.0, 11264.0], [48.1, 11264.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11264.0], [48.5, 11264.0], [48.6, 11264.0], [48.7, 11264.0], [48.8, 11267.0], [48.9, 11267.0], [49.0, 11268.0], [49.1, 11316.0], [49.2, 11324.0], [49.3, 11332.0], [49.4, 11344.0], [49.5, 11357.0], [49.6, 11365.0], [49.7, 11385.0], [49.8, 11397.0], [49.9, 11446.0], [50.0, 11500.0], [50.1, 11504.0], [50.2, 11516.0], [50.3, 11519.0], [50.4, 11520.0], [50.5, 11523.0], [50.6, 11548.0], [50.7, 11593.0], [50.8, 11603.0], [50.9, 11654.0], [51.0, 11677.0], [51.1, 11715.0], [51.2, 11754.0], [51.3, 11772.0], [51.4, 11774.0], [51.5, 11775.0], [51.6, 11775.0], [51.7, 11775.0], [51.8, 11775.0], [51.9, 11775.0], [52.0, 11776.0], [52.1, 11776.0], [52.2, 11776.0], [52.3, 11776.0], [52.4, 11776.0], [52.5, 11777.0], [52.6, 11799.0], [52.7, 11822.0], [52.8, 11843.0], [52.9, 11847.0], [53.0, 11860.0], [53.1, 11893.0], [53.2, 12001.0], [53.3, 12018.0], [53.4, 12026.0], [53.5, 12028.0], [53.6, 12032.0], [53.7, 12038.0], [53.8, 12040.0], [53.9, 12050.0], [54.0, 12055.0], [54.1, 12111.0], [54.2, 12184.0], [54.3, 12204.0], [54.4, 12263.0], [54.5, 12284.0], [54.6, 12284.0], [54.7, 12285.0], [54.8, 12286.0], [54.9, 12287.0], [55.0, 12287.0], [55.1, 12287.0], [55.2, 12288.0], [55.3, 12288.0], [55.4, 12288.0], [55.5, 12291.0], [55.6, 12298.0], [55.7, 12305.0], [55.8, 12369.0], [55.9, 12379.0], [56.0, 12421.0], [56.1, 12459.0], [56.2, 12463.0], [56.3, 12481.0], [56.4, 12523.0], [56.5, 12562.0], [56.6, 12577.0], [56.7, 12636.0], [56.8, 12660.0], [56.9, 12769.0], [57.0, 12796.0], [57.1, 12798.0], [57.2, 12800.0], [57.3, 12800.0], [57.4, 12800.0], [57.5, 12803.0], [57.6, 12910.0], [57.7, 12946.0], [57.8, 12975.0], [57.9, 13031.0], [58.0, 13054.0], [58.1, 13056.0], [58.2, 13056.0], [58.3, 13140.0], [58.4, 13214.0], [58.5, 13246.0], [58.6, 13299.0], [58.7, 13304.0], [58.8, 13307.0], [58.9, 13307.0], [59.0, 13307.0], [59.1, 13307.0], [59.2, 13307.0], [59.3, 13308.0], [59.4, 13308.0], [59.5, 13308.0], [59.6, 13308.0], [59.7, 13308.0], [59.8, 13308.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13308.0], [60.7, 13308.0], [60.8, 13308.0], [60.9, 13308.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13308.0], [61.3, 13308.0], [61.4, 13308.0], [61.5, 13309.0], [61.6, 13310.0], [61.7, 13310.0], [61.8, 13310.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13313.0], [78.7, 13313.0], [78.8, 13313.0], [78.9, 13313.0], [79.0, 13313.0], [79.1, 13313.0], [79.2, 13313.0], [79.3, 13315.0], [79.4, 13315.0], [79.5, 13315.0], [79.6, 13315.0], [79.7, 13315.0], [79.8, 13315.0], [79.9, 13315.0], [80.0, 13316.0], [80.1, 13316.0], [80.2, 13316.0], [80.3, 13316.0], [80.4, 13316.0], [80.5, 13316.0], [80.6, 13316.0], [80.7, 13316.0], [80.8, 13316.0], [80.9, 13316.0], [81.0, 13316.0], [81.1, 13316.0], [81.2, 13316.0], [81.3, 13316.0], [81.4, 13316.0], [81.5, 13316.0], [81.6, 13317.0], [81.7, 13366.0], [81.8, 13567.0], [81.9, 13567.0], [82.0, 13568.0], [82.1, 13572.0], [82.2, 13616.0], [82.3, 13668.0], [82.4, 13820.0], [82.5, 13820.0], [82.6, 13820.0], [82.7, 13820.0], [82.8, 13823.0], [82.9, 13823.0], [83.0, 13823.0], [83.1, 13823.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13824.0], [84.0, 13824.0], [84.1, 13824.0], [84.2, 13824.0], [84.3, 13824.0], [84.4, 13824.0], [84.5, 13824.0], [84.6, 13824.0], [84.7, 13824.0], [84.8, 13824.0], [84.9, 13824.0], [85.0, 13824.0], [85.1, 13825.0], [85.2, 13827.0], [85.3, 13828.0], [85.4, 13855.0], [85.5, 13939.0], [85.6, 14079.0], [85.7, 14205.0], [85.8, 14275.0], [85.9, 14331.0], [86.0, 14332.0], [86.1, 14332.0], [86.2, 14334.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14335.0], [87.2, 14335.0], [87.3, 14335.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14336.0], [88.0, 14336.0], [88.1, 14336.0], [88.2, 14336.0], [88.3, 14336.0], [88.4, 14336.0], [88.5, 14336.0], [88.6, 14336.0], [88.7, 14336.0], [88.8, 14336.0], [88.9, 14336.0], [89.0, 14338.0], [89.1, 14585.0], [89.2, 14595.0], [89.3, 14640.0], [89.4, 14847.0], [89.5, 14848.0], [89.6, 14848.0], [89.7, 14848.0], [89.8, 14848.0], [89.9, 15025.0], [90.0, 15104.0], [90.1, 15359.0], [90.2, 15508.0], [90.3, 15615.0], [90.4, 15800.0], [90.5, 16362.0], [90.6, 16384.0], [90.7, 16388.0], [90.8, 16743.0], [90.9, 16790.0], [91.0, 16856.0], [91.1, 17152.0], [91.2, 17407.0], [91.3, 17927.0], [91.4, 18024.0], [91.5, 18160.0], [91.6, 18173.0], [91.7, 18240.0], [91.8, 18683.0], [91.9, 18688.0], [92.0, 18760.0], [92.1, 18810.0], [92.2, 18831.0], [92.3, 19199.0], [92.4, 20080.0], [92.5, 20335.0], [92.6, 20473.0], [92.7, 20480.0], [92.8, 21043.0], [92.9, 22528.0], [93.0, 24064.0], [93.1, 24580.0], [93.2, 24581.0], [93.3, 26364.0], [93.4, 26367.0], [93.5, 26367.0], [93.6, 26368.0], [93.7, 26368.0], [93.8, 26368.0], [93.9, 26369.0], [94.0, 26624.0], [94.1, 26725.0], [94.2, 27387.0], [94.3, 32819.0], [94.4, 39164.0], [94.5, 39168.0], [94.6, 53247.0], [94.7, 53248.0], [94.8, 56832.0], [94.9, 58133.0], [95.0, 60455.0], [95.1, 60497.0], [95.2, 65791.0], [95.3, 65792.0], [95.4, 65793.0], [95.5, 69014.0], [95.6, 78083.0], [95.7, 87040.0], [95.8, 94464.0], [95.9, 105474.0], [96.0, 105728.0], [96.1, 105728.0], [96.2, 105984.0], [96.3, 106240.0], [96.4, 106496.0], [96.5, 106496.0], [96.6, 106739.0], [96.7, 106751.0], [96.8, 106752.0], [96.9, 106752.0], [97.0, 107267.0], [97.1, 107516.0], [97.2, 107520.0], [97.3, 108800.0], [97.4, 109570.0], [97.5, 110992.0], [97.6, 111103.0], [97.7, 111673.0], [97.8, 113435.0], [97.9, 114944.0], [98.0, 126976.0], [98.1, 130047.0], [98.2, 132096.0], [98.3, 132875.0], [98.4, 132879.0], [98.5, 134655.0], [98.6, 136187.0], [98.7, 136188.0], [98.8, 136210.0], [98.9, 145406.0], [99.0, 164608.0], [99.1, 164863.0], [99.2, 164864.0], [99.3, 166911.0], [99.4, 169730.0], [99.5, 210944.0], [99.6, 210944.0], [99.7, 211967.0], [99.8, 212220.0], [99.9, 212220.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 544.0], [2.9, 596.0], [3.0, 631.0], [3.1, 664.0], [3.2, 682.0], [3.3, 708.0], [3.4, 731.0], [3.5, 771.0], [3.6, 807.0], [3.7, 839.0], [3.8, 860.0], [3.9, 890.0], [4.0, 937.0], [4.1, 969.0], [4.2, 1000.0], [4.3, 1022.0], [4.4, 1063.0], [4.5, 1105.0], [4.6, 1140.0], [4.7, 1175.0], [4.8, 1213.0], [4.9, 1264.0], [5.0, 1329.0], [5.1, 1398.0], [5.2, 1445.0], [5.3, 1471.0], [5.4, 1506.0], [5.5, 1545.0], [5.6, 1580.0], [5.7, 1618.0], [5.8, 1647.0], [5.9, 1669.0], [6.0, 1681.0], [6.1, 1696.0], [6.2, 1739.0], [6.3, 1766.0], [6.4, 1798.0], [6.5, 1829.0], [6.6, 1854.0], [6.7, 1874.0], [6.8, 1903.0], [6.9, 1923.0], [7.0, 1943.0], [7.1, 1963.0], [7.2, 1989.0], [7.3, 2015.0], [7.4, 2030.0], [7.5, 2077.0], [7.6, 2107.0], [7.7, 2134.0], [7.8, 2168.0], [7.9, 2233.0], [8.0, 2265.0], [8.1, 2300.0], [8.2, 2334.0], [8.3, 2385.0], [8.4, 2426.0], [8.5, 2487.0], [8.6, 2542.0], [8.7, 2580.0], [8.8, 2645.0], [8.9, 2713.0], [9.0, 2793.0], [9.1, 2842.0], [9.2, 2896.0], [9.3, 2916.0], [9.4, 2947.0], [9.5, 2975.0], [9.6, 3006.0], [9.7, 3051.0], [9.8, 3072.0], [9.9, 3122.0], [10.0, 3154.0], [10.1, 3187.0], [10.2, 3224.0], [10.3, 3241.0], [10.4, 3275.0], [10.5, 3304.0], [10.6, 3327.0], [10.7, 3346.0], [10.8, 3390.0], [10.9, 3426.0], [11.0, 3450.0], [11.1, 3475.0], [11.2, 3536.0], [11.3, 3598.0], [11.4, 3655.0], [11.5, 3701.0], [11.6, 3749.0], [11.7, 3776.0], [11.8, 3799.0], [11.9, 3866.0], [12.0, 3907.0], [12.1, 3946.0], [12.2, 3982.0], [12.3, 4052.0], [12.4, 4093.0], [12.5, 4127.0], [12.6, 4203.0], [12.7, 4273.0], [12.8, 4325.0], [12.9, 4373.0], [13.0, 4394.0], [13.1, 4413.0], [13.2, 4461.0], [13.3, 4513.0], [13.4, 4554.0], [13.5, 4601.0], [13.6, 4662.0], [13.7, 4682.0], [13.8, 4702.0], [13.9, 4760.0], [14.0, 4834.0], [14.1, 4923.0], [14.2, 5010.0], [14.3, 5060.0], [14.4, 5119.0], [14.5, 5248.0], [14.6, 5320.0], [14.7, 5372.0], [14.8, 5437.0], [14.9, 5499.0], [15.0, 5552.0], [15.1, 5621.0], [15.2, 5703.0], [15.3, 5765.0], [15.4, 5830.0], [15.5, 5880.0], [15.6, 5974.0], [15.7, 6105.0], [15.8, 6167.0], [15.9, 6224.0], [16.0, 6359.0], [16.1, 6408.0], [16.2, 6495.0], [16.3, 6538.0], [16.4, 6598.0], [16.5, 6656.0], [16.6, 6716.0], [16.7, 6734.0], [16.8, 6766.0], [16.9, 6797.0], [17.0, 6839.0], [17.1, 6857.0], [17.2, 6906.0], [17.3, 6936.0], [17.4, 6957.0], [17.5, 6974.0], [17.6, 7060.0], [17.7, 7103.0], [17.8, 7164.0], [17.9, 7167.0], [18.0, 7168.0], [18.1, 7168.0], [18.2, 7168.0], [18.3, 7168.0], [18.4, 7171.0], [18.5, 7180.0], [18.6, 7227.0], [18.7, 7277.0], [18.8, 7341.0], [18.9, 7420.0], [19.0, 7424.0], [19.1, 7424.0], [19.2, 7424.0], [19.3, 7427.0], [19.4, 7428.0], [19.5, 7484.0], [19.6, 7587.0], [19.7, 7618.0], [19.8, 7679.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7684.0], [20.3, 7787.0], [20.4, 7869.0], [20.5, 7932.0], [20.6, 7935.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7978.0], [21.2, 8079.0], [21.3, 8172.0], [21.4, 8188.0], [21.5, 8191.0], [21.6, 8192.0], [21.7, 8192.0], [21.8, 8192.0], [21.9, 8193.0], [22.0, 8196.0], [22.1, 8225.0], [22.2, 8308.0], [22.3, 8443.0], [22.4, 8448.0], [22.5, 8471.0], [22.6, 8554.0], [22.7, 8613.0], [22.8, 8673.0], [22.9, 8700.0], [23.0, 8703.0], [23.1, 8703.0], [23.2, 8703.0], [23.3, 8704.0], [23.4, 8704.0], [23.5, 8704.0], [23.6, 8704.0], [23.7, 8707.0], [23.8, 8734.0], [23.9, 8760.0], [24.0, 8797.0], [24.1, 8834.0], [24.2, 8876.0], [24.3, 8925.0], [24.4, 8957.0], [24.5, 8959.0], [24.6, 8960.0], [24.7, 8964.0], [24.8, 8984.0], [24.9, 9016.0], [25.0, 9039.0], [25.1, 9058.0], [25.2, 9088.0], [25.3, 9114.0], [25.4, 9151.0], [25.5, 9188.0], [25.6, 9215.0], [25.7, 9216.0], [25.8, 9216.0], [25.9, 9216.0], [26.0, 9216.0], [26.1, 9220.0], [26.2, 9243.0], [26.3, 9279.0], [26.4, 9307.0], [26.5, 9335.0], [26.6, 9357.0], [26.7, 9397.0], [26.8, 9420.0], [26.9, 9440.0], [27.0, 9459.0], [27.1, 9469.0], [27.2, 9473.0], [27.3, 9487.0], [27.4, 9499.0], [27.5, 9517.0], [27.6, 9532.0], [27.7, 9557.0], [27.8, 9569.0], [27.9, 9588.0], [28.0, 9618.0], [28.1, 9638.0], [28.2, 9655.0], [28.3, 9678.0], [28.4, 9697.0], [28.5, 9709.0], [28.6, 9721.0], [28.7, 9727.0], [28.8, 9727.0], [28.9, 9728.0], [29.0, 9728.0], [29.1, 9728.0], [29.2, 9729.0], [29.3, 9731.0], [29.4, 9732.0], [29.5, 9744.0], [29.6, 9756.0], [29.7, 9767.0], [29.8, 9775.0], [29.9, 9792.0], [30.0, 9804.0], [30.1, 9815.0], [30.2, 9832.0], [30.3, 9847.0], [30.4, 9860.0], [30.5, 9876.0], [30.6, 9888.0], [30.7, 9904.0], [30.8, 9918.0], [30.9, 9927.0], [31.0, 9958.0], [31.1, 9971.0], [31.2, 9980.0], [31.3, 9984.0], [31.4, 9984.0], [31.5, 9993.0], [31.6, 10004.0], [31.7, 10014.0], [31.8, 10024.0], [31.9, 10032.0], [32.0, 10044.0], [32.1, 10052.0], [32.2, 10059.0], [32.3, 10068.0], [32.4, 10085.0], [32.5, 10093.0], [32.6, 10107.0], [32.7, 10118.0], [32.8, 10126.0], [32.9, 10132.0], [33.0, 10137.0], [33.1, 10150.0], [33.2, 10158.0], [33.3, 10172.0], [33.4, 10174.0], [33.5, 10181.0], [33.6, 10190.0], [33.7, 10198.0], [33.8, 10206.0], [33.9, 10211.0], [34.0, 10218.0], [34.1, 10224.0], [34.2, 10228.0], [34.3, 10234.0], [34.4, 10236.0], [34.5, 10239.0], [34.6, 10240.0], [34.7, 10240.0], [34.8, 10240.0], [34.9, 10242.0], [35.0, 10249.0], [35.1, 10253.0], [35.2, 10258.0], [35.3, 10262.0], [35.4, 10266.0], [35.5, 10275.0], [35.6, 10283.0], [35.7, 10287.0], [35.8, 10291.0], [35.9, 10295.0], [36.0, 10306.0], [36.1, 10312.0], [36.2, 10318.0], [36.3, 10327.0], [36.4, 10335.0], [36.5, 10341.0], [36.6, 10345.0], [36.7, 10349.0], [36.8, 10354.0], [36.9, 10361.0], [37.0, 10370.0], [37.1, 10374.0], [37.2, 10382.0], [37.3, 10388.0], [37.4, 10394.0], [37.5, 10400.0], [37.6, 10407.0], [37.7, 10410.0], [37.8, 10415.0], [37.9, 10419.0], [38.0, 10424.0], [38.1, 10430.0], [38.2, 10434.0], [38.3, 10438.0], [38.4, 10444.0], [38.5, 10450.0], [38.6, 10457.0], [38.7, 10461.0], [38.8, 10466.0], [38.9, 10470.0], [39.0, 10474.0], [39.1, 10479.0], [39.2, 10484.0], [39.3, 10488.0], [39.4, 10492.0], [39.5, 10495.0], [39.6, 10497.0], [39.7, 10498.0], [39.8, 10503.0], [39.9, 10507.0], [40.0, 10511.0], [40.1, 10517.0], [40.2, 10525.0], [40.3, 10532.0], [40.4, 10538.0], [40.5, 10545.0], [40.6, 10549.0], [40.7, 10553.0], [40.8, 10562.0], [40.9, 10567.0], [41.0, 10571.0], [41.1, 10575.0], [41.2, 10580.0], [41.3, 10589.0], [41.4, 10591.0], [41.5, 10595.0], [41.6, 10599.0], [41.7, 10603.0], [41.8, 10606.0], [41.9, 10609.0], [42.0, 10615.0], [42.1, 10619.0], [42.2, 10623.0], [42.3, 10628.0], [42.4, 10630.0], [42.5, 10632.0], [42.6, 10636.0], [42.7, 10639.0], [42.8, 10644.0], [42.9, 10647.0], [43.0, 10650.0], [43.1, 10653.0], [43.2, 10658.0], [43.3, 10661.0], [43.4, 10667.0], [43.5, 10672.0], [43.6, 10676.0], [43.7, 10681.0], [43.8, 10686.0], [43.9, 10691.0], [44.0, 10693.0], [44.1, 10695.0], [44.2, 10700.0], [44.3, 10705.0], [44.4, 10708.0], [44.5, 10714.0], [44.6, 10720.0], [44.7, 10727.0], [44.8, 10732.0], [44.9, 10734.0], [45.0, 10740.0], [45.1, 10744.0], [45.2, 10746.0], [45.3, 10751.0], [45.4, 10752.0], [45.5, 10755.0], [45.6, 10756.0], [45.7, 10758.0], [45.8, 10761.0], [45.9, 10765.0], [46.0, 10769.0], [46.1, 10773.0], [46.2, 10778.0], [46.3, 10783.0], [46.4, 10786.0], [46.5, 10791.0], [46.6, 10796.0], [46.7, 10799.0], [46.8, 10803.0], [46.9, 10808.0], [47.0, 10816.0], [47.1, 10820.0], [47.2, 10823.0], [47.3, 10826.0], [47.4, 10832.0], [47.5, 10834.0], [47.6, 10840.0], [47.7, 10845.0], [47.8, 10850.0], [47.9, 10858.0], [48.0, 10864.0], [48.1, 10872.0], [48.2, 10878.0], [48.3, 10883.0], [48.4, 10885.0], [48.5, 10891.0], [48.6, 10897.0], [48.7, 10902.0], [48.8, 10906.0], [48.9, 10910.0], [49.0, 10917.0], [49.1, 10922.0], [49.2, 10927.0], [49.3, 10933.0], [49.4, 10936.0], [49.5, 10939.0], [49.6, 10942.0], [49.7, 10946.0], [49.8, 10951.0], [49.9, 10956.0], [50.0, 10963.0], [50.1, 10965.0], [50.2, 10969.0], [50.3, 10974.0], [50.4, 10978.0], [50.5, 10982.0], [50.6, 10987.0], [50.7, 10992.0], [50.8, 10999.0], [50.9, 11002.0], [51.0, 11006.0], [51.1, 11007.0], [51.2, 11008.0], [51.3, 11008.0], [51.4, 11012.0], [51.5, 11015.0], [51.6, 11021.0], [51.7, 11023.0], [51.8, 11030.0], [51.9, 11035.0], [52.0, 11039.0], [52.1, 11044.0], [52.2, 11052.0], [52.3, 11058.0], [52.4, 11062.0], [52.5, 11066.0], [52.6, 11073.0], [52.7, 11076.0], [52.8, 11083.0], [52.9, 11087.0], [53.0, 11092.0], [53.1, 11095.0], [53.2, 11099.0], [53.3, 11103.0], [53.4, 11112.0], [53.5, 11116.0], [53.6, 11120.0], [53.7, 11126.0], [53.8, 11128.0], [53.9, 11132.0], [54.0, 11139.0], [54.1, 11144.0], [54.2, 11150.0], [54.3, 11155.0], [54.4, 11158.0], [54.5, 11164.0], [54.6, 11171.0], [54.7, 11177.0], [54.8, 11182.0], [54.9, 11186.0], [55.0, 11191.0], [55.1, 11197.0], [55.2, 11203.0], [55.3, 11208.0], [55.4, 11213.0], [55.5, 11220.0], [55.6, 11227.0], [55.7, 11230.0], [55.8, 11236.0], [55.9, 11243.0], [56.0, 11248.0], [56.1, 11252.0], [56.2, 11257.0], [56.3, 11263.0], [56.4, 11263.0], [56.5, 11264.0], [56.6, 11264.0], [56.7, 11268.0], [56.8, 11272.0], [56.9, 11276.0], [57.0, 11280.0], [57.1, 11286.0], [57.2, 11290.0], [57.3, 11298.0], [57.4, 11302.0], [57.5, 11306.0], [57.6, 11311.0], [57.7, 11316.0], [57.8, 11326.0], [57.9, 11333.0], [58.0, 11336.0], [58.1, 11343.0], [58.2, 11349.0], [58.3, 11353.0], [58.4, 11355.0], [58.5, 11361.0], [58.6, 11365.0], [58.7, 11369.0], [58.8, 11374.0], [58.9, 11380.0], [59.0, 11385.0], [59.1, 11388.0], [59.2, 11394.0], [59.3, 11400.0], [59.4, 11404.0], [59.5, 11409.0], [59.6, 11414.0], [59.7, 11418.0], [59.8, 11424.0], [59.9, 11425.0], [60.0, 11430.0], [60.1, 11434.0], [60.2, 11440.0], [60.3, 11445.0], [60.4, 11452.0], [60.5, 11456.0], [60.6, 11460.0], [60.7, 11463.0], [60.8, 11467.0], [60.9, 11471.0], [61.0, 11476.0], [61.1, 11481.0], [61.2, 11487.0], [61.3, 11492.0], [61.4, 11496.0], [61.5, 11501.0], [61.6, 11505.0], [61.7, 11508.0], [61.8, 11512.0], [61.9, 11515.0], [62.0, 11519.0], [62.1, 11520.0], [62.2, 11525.0], [62.3, 11529.0], [62.4, 11534.0], [62.5, 11539.0], [62.6, 11544.0], [62.7, 11549.0], [62.8, 11553.0], [62.9, 11559.0], [63.0, 11563.0], [63.1, 11565.0], [63.2, 11572.0], [63.3, 11577.0], [63.4, 11579.0], [63.5, 11585.0], [63.6, 11589.0], [63.7, 11593.0], [63.8, 11600.0], [63.9, 11609.0], [64.0, 11614.0], [64.1, 11619.0], [64.2, 11626.0], [64.3, 11632.0], [64.4, 11637.0], [64.5, 11642.0], [64.6, 11649.0], [64.7, 11654.0], [64.8, 11662.0], [64.9, 11668.0], [65.0, 11674.0], [65.1, 11678.0], [65.2, 11684.0], [65.3, 11689.0], [65.4, 11697.0], [65.5, 11706.0], [65.6, 11710.0], [65.7, 11716.0], [65.8, 11725.0], [65.9, 11731.0], [66.0, 11738.0], [66.1, 11744.0], [66.2, 11748.0], [66.3, 11759.0], [66.4, 11764.0], [66.5, 11772.0], [66.6, 11775.0], [66.7, 11776.0], [66.8, 11776.0], [66.9, 11776.0], [67.0, 11780.0], [67.1, 11787.0], [67.2, 11797.0], [67.3, 11805.0], [67.4, 11809.0], [67.5, 11818.0], [67.6, 11824.0], [67.7, 11832.0], [67.8, 11839.0], [67.9, 11842.0], [68.0, 11847.0], [68.1, 11853.0], [68.2, 11862.0], [68.3, 11870.0], [68.4, 11876.0], [68.5, 11881.0], [68.6, 11885.0], [68.7, 11891.0], [68.8, 11897.0], [68.9, 11902.0], [69.0, 11912.0], [69.1, 11923.0], [69.2, 11932.0], [69.3, 11939.0], [69.4, 11947.0], [69.5, 11954.0], [69.6, 11964.0], [69.7, 11971.0], [69.8, 11980.0], [69.9, 11990.0], [70.0, 11997.0], [70.1, 12001.0], [70.2, 12012.0], [70.3, 12020.0], [70.4, 12025.0], [70.5, 12033.0], [70.6, 12044.0], [70.7, 12051.0], [70.8, 12060.0], [70.9, 12071.0], [71.0, 12083.0], [71.1, 12096.0], [71.2, 12099.0], [71.3, 12108.0], [71.4, 12118.0], [71.5, 12125.0], [71.6, 12129.0], [71.7, 12136.0], [71.8, 12144.0], [71.9, 12153.0], [72.0, 12163.0], [72.1, 12167.0], [72.2, 12174.0], [72.3, 12180.0], [72.4, 12184.0], [72.5, 12193.0], [72.6, 12201.0], [72.7, 12206.0], [72.8, 12210.0], [72.9, 12214.0], [73.0, 12222.0], [73.1, 12227.0], [73.2, 12234.0], [73.3, 12239.0], [73.4, 12248.0], [73.5, 12261.0], [73.6, 12262.0], [73.7, 12267.0], [73.8, 12277.0], [73.9, 12285.0], [74.0, 12288.0], [74.1, 12288.0], [74.2, 12289.0], [74.3, 12298.0], [74.4, 12307.0], [74.5, 12321.0], [74.6, 12332.0], [74.7, 12337.0], [74.8, 12348.0], [74.9, 12360.0], [75.0, 12367.0], [75.1, 12375.0], [75.2, 12383.0], [75.3, 12389.0], [75.4, 12397.0], [75.5, 12405.0], [75.6, 12419.0], [75.7, 12423.0], [75.8, 12434.0], [75.9, 12440.0], [76.0, 12455.0], [76.1, 12465.0], [76.2, 12477.0], [76.3, 12484.0], [76.4, 12495.0], [76.5, 12501.0], [76.6, 12514.0], [76.7, 12536.0], [76.8, 12543.0], [76.9, 12545.0], [77.0, 12556.0], [77.1, 12567.0], [77.2, 12581.0], [77.3, 12593.0], [77.4, 12610.0], [77.5, 12621.0], [77.6, 12627.0], [77.7, 12636.0], [77.8, 12656.0], [77.9, 12669.0], [78.0, 12685.0], [78.1, 12693.0], [78.2, 12706.0], [78.3, 12716.0], [78.4, 12726.0], [78.5, 12730.0], [78.6, 12737.0], [78.7, 12750.0], [78.8, 12761.0], [78.9, 12771.0], [79.0, 12781.0], [79.1, 12793.0], [79.2, 12796.0], [79.3, 12799.0], [79.4, 12800.0], [79.5, 12811.0], [79.6, 12824.0], [79.7, 12837.0], [79.8, 12844.0], [79.9, 12859.0], [80.0, 12886.0], [80.1, 12899.0], [80.2, 12915.0], [80.3, 12928.0], [80.4, 12951.0], [80.5, 12967.0], [80.6, 12982.0], [80.7, 12995.0], [80.8, 13007.0], [80.9, 13020.0], [81.0, 13035.0], [81.1, 13048.0], [81.2, 13059.0], [81.3, 13073.0], [81.4, 13091.0], [81.5, 13122.0], [81.6, 13151.0], [81.7, 13169.0], [81.8, 13183.0], [81.9, 13198.0], [82.0, 13216.0], [82.1, 13243.0], [82.2, 13249.0], [82.3, 13268.0], [82.4, 13289.0], [82.5, 13306.0], [82.6, 13307.0], [82.7, 13308.0], [82.8, 13308.0], [82.9, 13308.0], [83.0, 13308.0], [83.1, 13308.0], [83.2, 13309.0], [83.3, 13311.0], [83.4, 13311.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13311.0], [84.2, 13311.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13313.0], [88.1, 13313.0], [88.2, 13313.0], [88.3, 13313.0], [88.4, 13315.0], [88.5, 13316.0], [88.6, 13316.0], [88.7, 13316.0], [88.8, 13316.0], [88.9, 13316.0], [89.0, 13317.0], [89.1, 13327.0], [89.2, 13345.0], [89.3, 13361.0], [89.4, 13370.0], [89.5, 13390.0], [89.6, 13408.0], [89.7, 13424.0], [89.8, 13453.0], [89.9, 13473.0], [90.0, 13509.0], [90.1, 13530.0], [90.2, 13551.0], [90.3, 13567.0], [90.4, 13577.0], [90.5, 13609.0], [90.6, 13636.0], [90.7, 13665.0], [90.8, 13688.0], [90.9, 13705.0], [91.0, 13730.0], [91.1, 13764.0], [91.2, 13787.0], [91.3, 13808.0], [91.4, 13820.0], [91.5, 13823.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13825.0], [92.0, 13827.0], [92.1, 13828.0], [92.2, 13880.0], [92.3, 13921.0], [92.4, 13952.0], [92.5, 13982.0], [92.6, 14069.0], [92.7, 14080.0], [92.8, 14135.0], [92.9, 14176.0], [93.0, 14227.0], [93.1, 14269.0], [93.2, 14332.0], [93.3, 14335.0], [93.4, 14335.0], [93.5, 14335.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14338.0], [93.9, 14357.0], [94.0, 14402.0], [94.1, 14439.0], [94.2, 14504.0], [94.3, 14548.0], [94.4, 14582.0], [94.5, 14596.0], [94.6, 14674.0], [94.7, 14795.0], [94.8, 14843.0], [94.9, 14848.0], [95.0, 14902.0], [95.1, 15025.0], [95.2, 15088.0], [95.3, 15177.0], [95.4, 15263.0], [95.5, 15361.0], [95.6, 15471.0], [95.7, 15603.0], [95.8, 15690.0], [95.9, 15811.0], [96.0, 15899.0], [96.1, 16064.0], [96.2, 16204.0], [96.3, 16320.0], [96.4, 16388.0], [96.5, 16430.0], [96.6, 16654.0], [96.7, 16904.0], [96.8, 17122.0], [96.9, 17152.0], [97.0, 17384.0], [97.1, 17559.0], [97.2, 18174.0], [97.3, 18685.0], [97.4, 19302.0], [97.5, 20267.0], [97.6, 21331.0], [97.7, 23296.0], [97.8, 25852.0], [97.9, 26367.0], [98.0, 26368.0], [98.1, 27368.0], [98.2, 29700.0], [98.3, 53248.0], [98.4, 60028.0], [98.5, 65791.0], [98.6, 79472.0], [98.7, 84992.0], [98.8, 105474.0], [98.9, 106440.0], [99.0, 106748.0], [99.1, 106847.0], [99.2, 107267.0], [99.3, 110667.0], [99.4, 122144.0], [99.5, 130047.0], [99.6, 132876.0], [99.7, 136210.0], [99.8, 168964.0], [99.9, 211199.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 3.0], [6.1, 20.0], [6.2, 24.0], [6.3, 27.0], [6.4, 32.0], [6.5, 33.0], [6.6, 34.0], [6.7, 38.0], [6.8, 129.0], [6.9, 150.0], [7.0, 238.0], [7.1, 486.0], [7.2, 557.0], [7.3, 697.0], [7.4, 798.0], [7.5, 854.0], [7.6, 932.0], [7.7, 1023.0], [7.8, 1092.0], [7.9, 1145.0], [8.0, 1305.0], [8.1, 1356.0], [8.2, 1517.0], [8.3, 1756.0], [8.4, 2103.0], [8.5, 2203.0], [8.6, 2216.0], [8.7, 2237.0], [8.8, 2260.0], [8.9, 2451.0], [9.0, 2503.0], [9.1, 2627.0], [9.2, 2773.0], [9.3, 3032.0], [9.4, 3050.0], [9.5, 3142.0], [9.6, 3176.0], [9.7, 3565.0], [9.8, 3650.0], [9.9, 3734.0], [10.0, 3825.0], [10.1, 3885.0], [10.2, 4024.0], [10.3, 4552.0], [10.4, 4610.0], [10.5, 4825.0], [10.6, 5011.0], [10.7, 5137.0], [10.8, 5525.0], [10.9, 5574.0], [11.0, 5677.0], [11.1, 5838.0], [11.2, 6069.0], [11.3, 6119.0], [11.4, 6161.0], [11.5, 6210.0], [11.6, 6276.0], [11.7, 6768.0], [11.8, 7062.0], [11.9, 7079.0], [12.0, 7081.0], [12.1, 7146.0], [12.2, 7153.0], [12.3, 7164.0], [12.4, 7164.0], [12.5, 7164.0], [12.6, 7166.0], [12.7, 7166.0], [12.8, 7167.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7169.0], [14.5, 7169.0], [14.6, 7169.0], [14.7, 7169.0], [14.8, 7171.0], [14.9, 7171.0], [15.0, 7172.0], [15.1, 7240.0], [15.2, 7301.0], [15.3, 7367.0], [15.4, 7420.0], [15.5, 7420.0], [15.6, 7423.0], [15.7, 7423.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7425.0], [16.6, 7425.0], [16.7, 7425.0], [16.8, 7426.0], [16.9, 7427.0], [17.0, 7456.0], [17.1, 7473.0], [17.2, 7504.0], [17.3, 7592.0], [17.4, 7617.0], [17.5, 7675.0], [17.6, 7679.0], [17.7, 7679.0], [17.8, 7679.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7681.0], [18.7, 7682.0], [18.8, 7712.0], [18.9, 7723.0], [19.0, 7796.0], [19.1, 7818.0], [19.2, 7920.0], [19.3, 7932.0], [19.4, 7935.0], [19.5, 7935.0], [19.6, 7935.0], [19.7, 7936.0], [19.8, 7936.0], [19.9, 7936.0], [20.0, 7936.0], [20.1, 7936.0], [20.2, 7936.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7989.0], [21.0, 8003.0], [21.1, 8058.0], [21.2, 8094.0], [21.3, 8107.0], [21.4, 8148.0], [21.5, 8153.0], [21.6, 8187.0], [21.7, 8188.0], [21.8, 8188.0], [21.9, 8190.0], [22.0, 8191.0], [22.1, 8191.0], [22.2, 8191.0], [22.3, 8191.0], [22.4, 8192.0], [22.5, 8192.0], [22.6, 8192.0], [22.7, 8192.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8193.0], [23.2, 8193.0], [23.3, 8196.0], [23.4, 8244.0], [23.5, 8316.0], [23.6, 8338.0], [23.7, 8356.0], [23.8, 8366.0], [23.9, 8395.0], [24.0, 8407.0], [24.1, 8446.0], [24.2, 8448.0], [24.3, 8448.0], [24.4, 8448.0], [24.5, 8448.0], [24.6, 8453.0], [24.7, 8578.0], [24.8, 8599.0], [24.9, 8647.0], [25.0, 8695.0], [25.1, 8701.0], [25.2, 8701.0], [25.3, 8702.0], [25.4, 8702.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8703.0], [25.9, 8703.0], [26.0, 8703.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8705.0], [27.8, 8708.0], [27.9, 8708.0], [28.0, 8777.0], [28.1, 8799.0], [28.2, 8869.0], [28.3, 8874.0], [28.4, 8892.0], [28.5, 8953.0], [28.6, 8955.0], [28.7, 8957.0], [28.8, 8959.0], [28.9, 8960.0], [29.0, 8960.0], [29.1, 8960.0], [29.2, 8960.0], [29.3, 8962.0], [29.4, 8964.0], [29.5, 8964.0], [29.6, 8997.0], [29.7, 9059.0], [29.8, 9110.0], [29.9, 9138.0], [30.0, 9168.0], [30.1, 9213.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9217.0], [31.1, 9217.0], [31.2, 9217.0], [31.3, 9219.0], [31.4, 9225.0], [31.5, 9282.0], [31.6, 9295.0], [31.7, 9316.0], [31.8, 9345.0], [31.9, 9359.0], [32.0, 9437.0], [32.1, 9468.0], [32.2, 9470.0], [32.3, 9472.0], [32.4, 9472.0], [32.5, 9472.0], [32.6, 9472.0], [32.7, 9473.0], [32.8, 9494.0], [32.9, 9512.0], [33.0, 9555.0], [33.1, 9587.0], [33.2, 9610.0], [33.3, 9630.0], [33.4, 9672.0], [33.5, 9682.0], [33.6, 9718.0], [33.7, 9723.0], [33.8, 9724.0], [33.9, 9726.0], [34.0, 9726.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9727.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9728.0], [35.5, 9728.0], [35.6, 9728.0], [35.7, 9729.0], [35.8, 9729.0], [35.9, 9729.0], [36.0, 9730.0], [36.1, 9732.0], [36.2, 9732.0], [36.3, 9732.0], [36.4, 9740.0], [36.5, 9768.0], [36.6, 9786.0], [36.7, 9795.0], [36.8, 9823.0], [36.9, 9864.0], [37.0, 9876.0], [37.1, 9894.0], [37.2, 9895.0], [37.3, 9906.0], [37.4, 9916.0], [37.5, 9936.0], [37.6, 9951.0], [37.7, 9977.0], [37.8, 9984.0], [37.9, 9984.0], [38.0, 9984.0], [38.1, 9984.0], [38.2, 9984.0], [38.3, 9984.0], [38.4, 9985.0], [38.5, 9985.0], [38.6, 9985.0], [38.7, 9986.0], [38.8, 10026.0], [38.9, 10038.0], [39.0, 10163.0], [39.1, 10172.0], [39.2, 10200.0], [39.3, 10236.0], [39.4, 10239.0], [39.5, 10240.0], [39.6, 10240.0], [39.7, 10240.0], [39.8, 10240.0], [39.9, 10240.0], [40.0, 10240.0], [40.1, 10240.0], [40.2, 10240.0], [40.3, 10240.0], [40.4, 10240.0], [40.5, 10243.0], [40.6, 10244.0], [40.7, 10253.0], [40.8, 10261.0], [40.9, 10264.0], [41.0, 10281.0], [41.1, 10292.0], [41.2, 10331.0], [41.3, 10343.0], [41.4, 10365.0], [41.5, 10378.0], [41.6, 10408.0], [41.7, 10417.0], [41.8, 10468.0], [41.9, 10492.0], [42.0, 10496.0], [42.1, 10496.0], [42.2, 10496.0], [42.3, 10532.0], [42.4, 10562.0], [42.5, 10578.0], [42.6, 10610.0], [42.7, 10624.0], [42.8, 10649.0], [42.9, 10658.0], [43.0, 10698.0], [43.1, 10752.0], [43.2, 10752.0], [43.3, 10752.0], [43.4, 10755.0], [43.5, 10756.0], [43.6, 10756.0], [43.7, 10757.0], [43.8, 10785.0], [43.9, 10822.0], [44.0, 10836.0], [44.1, 10867.0], [44.2, 10876.0], [44.3, 10884.0], [44.4, 10908.0], [44.5, 10913.0], [44.6, 10929.0], [44.7, 10955.0], [44.8, 10978.0], [44.9, 10996.0], [45.0, 11007.0], [45.1, 11008.0], [45.2, 11012.0], [45.3, 11024.0], [45.4, 11100.0], [45.5, 11108.0], [45.6, 11129.0], [45.7, 11165.0], [45.8, 11170.0], [45.9, 11234.0], [46.0, 11252.0], [46.1, 11260.0], [46.2, 11263.0], [46.3, 11263.0], [46.4, 11263.0], [46.5, 11264.0], [46.6, 11264.0], [46.7, 11264.0], [46.8, 11264.0], [46.9, 11264.0], [47.0, 11264.0], [47.1, 11264.0], [47.2, 11268.0], [47.3, 11268.0], [47.4, 11268.0], [47.5, 11268.0], [47.6, 11283.0], [47.7, 11341.0], [47.8, 11379.0], [47.9, 11497.0], [48.0, 11516.0], [48.1, 11516.0], [48.2, 11519.0], [48.3, 11520.0], [48.4, 11520.0], [48.5, 11534.0], [48.6, 11582.0], [48.7, 11624.0], [48.8, 11685.0], [48.9, 11710.0], [49.0, 11771.0], [49.1, 11775.0], [49.2, 11775.0], [49.3, 11775.0], [49.4, 11776.0], [49.5, 11776.0], [49.6, 11776.0], [49.7, 11776.0], [49.8, 11776.0], [49.9, 11776.0], [50.0, 11776.0], [50.1, 11776.0], [50.2, 11776.0], [50.3, 11777.0], [50.4, 11778.0], [50.5, 11810.0], [50.6, 11893.0], [50.7, 11898.0], [50.8, 11999.0], [50.9, 12271.0], [51.0, 12284.0], [51.1, 12284.0], [51.2, 12286.0], [51.3, 12288.0], [51.4, 12288.0], [51.5, 12288.0], [51.6, 12288.0], [51.7, 12288.0], [51.8, 12288.0], [51.9, 12292.0], [52.0, 12373.0], [52.1, 12543.0], [52.2, 12544.0], [52.3, 12544.0], [52.4, 12642.0], [52.5, 12799.0], [52.6, 12799.0], [52.7, 12799.0], [52.8, 12800.0], [52.9, 12800.0], [53.0, 12800.0], [53.1, 12800.0], [53.2, 12801.0], [53.3, 12810.0], [53.4, 12821.0], [53.5, 12826.0], [53.6, 12928.0], [53.7, 13056.0], [53.8, 13056.0], [53.9, 13057.0], [54.0, 13142.0], [54.1, 13164.0], [54.2, 13173.0], [54.3, 13180.0], [54.4, 13182.0], [54.5, 13182.0], [54.6, 13190.0], [54.7, 13194.0], [54.8, 13200.0], [54.9, 13206.0], [55.0, 13214.0], [55.1, 13218.0], [55.2, 13220.0], [55.3, 13224.0], [55.4, 13231.0], [55.5, 13242.0], [55.6, 13250.0], [55.7, 13268.0], [55.8, 13270.0], [55.9, 13274.0], [56.0, 13285.0], [56.1, 13293.0], [56.2, 13297.0], [56.3, 13307.0], [56.4, 13307.0], [56.5, 13307.0], [56.6, 13307.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13309.0], [57.6, 13309.0], [57.7, 13310.0], [57.8, 13310.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13314.0], [72.7, 13315.0], [72.8, 13315.0], [72.9, 13315.0], [73.0, 13316.0], [73.1, 13316.0], [73.2, 13316.0], [73.3, 13316.0], [73.4, 13316.0], [73.5, 13316.0], [73.6, 13316.0], [73.7, 13316.0], [73.8, 13316.0], [73.9, 13316.0], [74.0, 13316.0], [74.1, 13316.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13317.0], [75.3, 13317.0], [75.4, 13317.0], [75.5, 13335.0], [75.6, 13337.0], [75.7, 13339.0], [75.8, 13340.0], [75.9, 13347.0], [76.0, 13358.0], [76.1, 13360.0], [76.2, 13363.0], [76.3, 13367.0], [76.4, 13382.0], [76.5, 13389.0], [76.6, 13391.0], [76.7, 13400.0], [76.8, 13406.0], [76.9, 13410.0], [77.0, 13422.0], [77.1, 13454.0], [77.2, 13456.0], [77.3, 13564.0], [77.4, 13567.0], [77.5, 13568.0], [77.6, 13572.0], [77.7, 13630.0], [77.8, 13744.0], [77.9, 13778.0], [78.0, 13796.0], [78.1, 13820.0], [78.2, 13820.0], [78.3, 13820.0], [78.4, 13820.0], [78.5, 13820.0], [78.6, 13820.0], [78.7, 13821.0], [78.8, 13822.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13825.0], [80.6, 13825.0], [80.7, 13827.0], [80.8, 13828.0], [80.9, 13828.0], [81.0, 13829.0], [81.1, 13841.0], [81.2, 13872.0], [81.3, 13908.0], [81.4, 13930.0], [81.5, 13949.0], [81.6, 14081.0], [81.7, 14223.0], [81.8, 14334.0], [81.9, 14335.0], [82.0, 14335.0], [82.1, 14335.0], [82.2, 14335.0], [82.3, 14335.0], [82.4, 14335.0], [82.5, 14335.0], [82.6, 14336.0], [82.7, 14336.0], [82.8, 14336.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14336.0], [83.7, 14337.0], [83.8, 14337.0], [83.9, 14338.0], [84.0, 14339.0], [84.1, 14427.0], [84.2, 14484.0], [84.3, 14586.0], [84.4, 14591.0], [84.5, 14591.0], [84.6, 14592.0], [84.7, 14592.0], [84.8, 14592.0], [84.9, 14611.0], [85.0, 14777.0], [85.1, 14828.0], [85.2, 14847.0], [85.3, 14847.0], [85.4, 14848.0], [85.5, 14848.0], [85.6, 14849.0], [85.7, 14884.0], [85.8, 14899.0], [85.9, 14926.0], [86.0, 15104.0], [86.1, 15172.0], [86.2, 15233.0], [86.3, 15360.0], [86.4, 15674.0], [86.5, 15871.0], [86.6, 15872.0], [86.7, 15970.0], [86.8, 16040.0], [86.9, 16275.0], [87.0, 16349.0], [87.1, 16387.0], [87.2, 16388.0], [87.3, 16896.0], [87.4, 16896.0], [87.5, 17152.0], [87.6, 17566.0], [87.7, 17911.0], [87.8, 18014.0], [87.9, 18221.0], [88.0, 18684.0], [88.1, 18688.0], [88.2, 18787.0], [88.3, 18822.0], [88.4, 19200.0], [88.5, 19200.0], [88.6, 19459.0], [88.7, 19968.0], [88.8, 20223.0], [88.9, 20224.0], [89.0, 20224.0], [89.1, 20301.0], [89.2, 20350.0], [89.3, 20408.0], [89.4, 20454.0], [89.5, 20480.0], [89.6, 22527.0], [89.7, 22528.0], [89.8, 23191.0], [89.9, 24064.0], [90.0, 26225.0], [90.1, 26230.0], [90.2, 26255.0], [90.3, 26319.0], [90.4, 26365.0], [90.5, 26368.0], [90.6, 26368.0], [90.7, 26368.0], [90.8, 26368.0], [90.9, 26388.0], [91.0, 26455.0], [91.1, 26485.0], [91.2, 26651.0], [91.3, 28642.0], [91.4, 29700.0], [91.5, 29700.0], [91.6, 32547.0], [91.7, 39134.0], [91.8, 39168.0], [91.9, 52415.0], [92.0, 52801.0], [92.1, 53128.0], [92.2, 53605.0], [92.3, 54087.0], [92.4, 54828.0], [92.5, 56737.0], [92.6, 59417.0], [92.7, 59419.0], [92.8, 59431.0], [92.9, 59433.0], [93.0, 60472.0], [93.1, 65126.0], [93.2, 67274.0], [93.3, 71618.0], [93.4, 72980.0], [93.5, 72981.0], [93.6, 73375.0], [93.7, 77092.0], [93.8, 80640.0], [93.9, 81235.0], [94.0, 83003.0], [94.1, 84479.0], [94.2, 87040.0], [94.3, 88188.0], [94.4, 92100.0], [94.5, 95488.0], [94.6, 98620.0], [94.7, 105337.0], [94.8, 105622.0], [94.9, 105716.0], [95.0, 105906.0], [95.1, 105984.0], [95.2, 106096.0], [95.3, 106195.0], [95.4, 106239.0], [95.5, 106241.0], [95.6, 106463.0], [95.7, 106495.0], [95.8, 106496.0], [95.9, 106496.0], [96.0, 106573.0], [96.1, 106751.0], [96.2, 106752.0], [96.3, 106752.0], [96.4, 107002.0], [96.5, 107147.0], [96.6, 107242.0], [96.7, 107776.0], [96.8, 110813.0], [96.9, 111103.0], [97.0, 111479.0], [97.1, 111575.0], [97.2, 111621.0], [97.3, 111654.0], [97.4, 115481.0], [97.5, 115968.0], [97.6, 117702.0], [97.7, 121799.0], [97.8, 124814.0], [97.9, 125949.0], [98.0, 125949.0], [98.1, 130048.0], [98.2, 130048.0], [98.3, 132876.0], [98.4, 133376.0], [98.5, 134654.0], [98.6, 136210.0], [98.7, 145409.0], [98.8, 149534.0], [98.9, 152901.0], [99.0, 164863.0], [99.1, 166911.0], [99.2, 168964.0], [99.3, 169983.0], [99.4, 192508.0], [99.5, 210943.0], [99.6, 211195.0], [99.7, 211199.0], [99.8, 211199.0], [99.9, 212220.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 694.0, "series": [{"data": [[0.0, 130.0], [132000.0, 1.0], [136100.0, 5.0], [169700.0, 1.0], [93900.0, 1.0], [105900.0, 3.0], [106700.0, 7.0], [107500.0, 2.0], [110700.0, 1.0], [125100.0, 1.0], [212200.0, 4.0], [58100.0, 1.0], [69000.0, 1.0], [500.0, 5.0], [600.0, 1.0], [700.0, 2.0], [800.0, 2.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 2.0], [1300.0, 4.0], [1400.0, 3.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 2.0], [166900.0, 1.0], [2800.0, 1.0], [2700.0, 5.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 3.0], [3300.0, 3.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 3.0], [3600.0, 2.0], [3700.0, 5.0], [3800.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [65700.0, 5.0], [4500.0, 3.0], [4400.0, 3.0], [4800.0, 1.0], [5100.0, 1.0], [5000.0, 2.0], [5300.0, 2.0], [5200.0, 2.0], [5600.0, 4.0], [5500.0, 1.0], [6100.0, 3.0], [6000.0, 1.0], [5900.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 2.0], [6500.0, 2.0], [105700.0, 3.0], [6800.0, 1.0], [6700.0, 4.0], [6900.0, 1.0], [7100.0, 59.0], [7000.0, 1.0], [7400.0, 37.0], [7600.0, 43.0], [7800.0, 2.0], [7900.0, 28.0], [8100.0, 54.0], [8600.0, 5.0], [8400.0, 14.0], [8300.0, 2.0], [8700.0, 52.0], [9000.0, 3.0], [8800.0, 3.0], [9200.0, 43.0], [9100.0, 2.0], [8900.0, 26.0], [145400.0, 1.0], [9400.0, 8.0], [9500.0, 3.0], [9600.0, 4.0], [9700.0, 42.0], [9300.0, 1.0], [9800.0, 5.0], [9900.0, 23.0], [10100.0, 9.0], [10000.0, 10.0], [10200.0, 38.0], [10600.0, 19.0], [10300.0, 5.0], [10700.0, 23.0], [10400.0, 12.0], [10500.0, 2.0], [164600.0, 1.0], [10900.0, 4.0], [11000.0, 17.0], [10800.0, 15.0], [11200.0, 43.0], [11100.0, 7.0], [11300.0, 14.0], [11600.0, 6.0], [11500.0, 14.0], [11700.0, 28.0], [11400.0, 3.0], [12000.0, 16.0], [11800.0, 9.0], [12200.0, 25.0], [12100.0, 4.0], [11900.0, 1.0], [12600.0, 3.0], [12300.0, 6.0], [12700.0, 5.0], [12500.0, 7.0], [12400.0, 6.0], [13300.0, 422.0], [13000.0, 6.0], [12900.0, 6.0], [13200.0, 4.0], [12800.0, 8.0], [13100.0, 3.0], [13800.0, 57.0], [13600.0, 3.0], [13500.0, 8.0], [14300.0, 60.0], [14100.0, 1.0], [14200.0, 2.0], [13900.0, 1.0], [14000.0, 2.0], [14500.0, 3.0], [14800.0, 9.0], [14600.0, 1.0], [15100.0, 1.0], [15300.0, 2.0], [15000.0, 2.0], [14900.0, 1.0], [15200.0, 1.0], [15600.0, 2.0], [15500.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [16300.0, 6.0], [16800.0, 1.0], [17400.0, 2.0], [18400.0, 1.0], [18200.0, 1.0], [18000.0, 1.0], [18600.0, 4.0], [19400.0, 1.0], [18800.0, 4.0], [20400.0, 3.0], [20000.0, 1.0], [21000.0, 1.0], [23200.0, 1.0], [24000.0, 1.0], [26600.0, 2.0], [32800.0, 1.0], [149500.0, 1.0], [168700.0, 1.0], [53200.0, 5.0], [211900.0, 2.0], [56800.0, 1.0], [60400.0, 3.0], [94400.0, 1.0], [106400.0, 4.0], [108800.0, 3.0], [107200.0, 3.0], [132800.0, 3.0], [164800.0, 5.0], [211200.0, 1.0], [70300.0, 1.0], [109500.0, 1.0], [111100.0, 2.0], [134600.0, 2.0], [136200.0, 1.0], [39100.0, 3.0], [63100.0, 1.0], [83000.0, 1.0], [87000.0, 1.0], [106200.0, 1.0], [105400.0, 2.0], [111000.0, 1.0], [113400.0, 1.0], [210900.0, 3.0], [110900.0, 1.0], [114900.0, 2.0], [126900.0, 2.0], [17100.0, 3.0], [16700.0, 3.0], [17900.0, 2.0], [18100.0, 4.0], [19100.0, 1.0], [18700.0, 1.0], [20300.0, 3.0], [22500.0, 2.0], [24500.0, 3.0], [26300.0, 13.0], [27300.0, 2.0], [26700.0, 2.0], [31700.0, 1.0], [59400.0, 1.0], [78000.0, 1.0], [111600.0, 1.0], [130000.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 266.0], [131300.0, 2.0], [136100.0, 2.0], [201700.0, 1.0], [77100.0, 1.0], [105900.0, 5.0], [106700.0, 10.0], [107500.0, 1.0], [110700.0, 1.0], [112300.0, 1.0], [125900.0, 6.0], [125100.0, 1.0], [153000.0, 1.0], [212200.0, 5.0], [169900.0, 1.0], [52100.0, 1.0], [57300.0, 1.0], [58500.0, 1.0], [60100.0, 1.0], [79400.0, 1.0], [90600.0, 1.0], [95400.0, 1.0], [400.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [110600.0, 1.0], [500.0, 16.0], [128200.0, 2.0], [600.0, 35.0], [700.0, 31.0], [800.0, 33.0], [900.0, 26.0], [1000.0, 28.0], [1100.0, 25.0], [1200.0, 21.0], [1300.0, 15.0], [1400.0, 25.0], [1500.0, 27.0], [1600.0, 47.0], [1700.0, 29.0], [1800.0, 37.0], [1900.0, 47.0], [2000.0, 28.0], [2100.0, 26.0], [133300.0, 2.0], [2200.0, 26.0], [2300.0, 23.0], [139700.0, 1.0], [2400.0, 17.0], [2500.0, 23.0], [2600.0, 14.0], [2700.0, 12.0], [2800.0, 21.0], [2900.0, 32.0], [3000.0, 29.0], [3100.0, 29.0], [3300.0, 33.0], [3200.0, 33.0], [3400.0, 30.0], [3500.0, 17.0], [3700.0, 31.0], [3600.0, 18.0], [3800.0, 15.0], [3900.0, 26.0], [4000.0, 20.0], [4300.0, 30.0], [4100.0, 16.0], [4200.0, 13.0], [65700.0, 4.0], [4600.0, 30.0], [4400.0, 22.0], [4500.0, 21.0], [73700.0, 2.0], [4800.0, 12.0], [4700.0, 16.0], [5000.0, 20.0], [4900.0, 11.0], [5100.0, 4.0], [81700.0, 1.0], [5300.0, 15.0], [5200.0, 14.0], [84900.0, 3.0], [5500.0, 15.0], [5400.0, 17.0], [5600.0, 13.0], [5800.0, 17.0], [5700.0, 15.0], [5900.0, 9.0], [6100.0, 17.0], [6000.0, 6.0], [6200.0, 11.0], [6300.0, 12.0], [100900.0, 1.0], [6500.0, 18.0], [6600.0, 18.0], [6400.0, 13.0], [105700.0, 2.0], [6800.0, 28.0], [6700.0, 31.0], [6900.0, 35.0], [106500.0, 1.0], [7100.0, 86.0], [7000.0, 12.0], [7400.0, 65.0], [7300.0, 13.0], [7200.0, 16.0], [7600.0, 56.0], [7500.0, 12.0], [119300.0, 1.0], [7800.0, 12.0], [7900.0, 66.0], [7700.0, 10.0], [8000.0, 9.0], [8100.0, 84.0], [8400.0, 27.0], [8200.0, 11.0], [8700.0, 110.0], [8600.0, 22.0], [8500.0, 13.0], [8300.0, 7.0], [8900.0, 57.0], [9000.0, 40.0], [8800.0, 22.0], [9100.0, 29.0], [9200.0, 80.0], [145400.0, 1.0], [9400.0, 65.0], [9300.0, 37.0], [9700.0, 148.0], [9600.0, 48.0], [9500.0, 55.0], [10200.0, 216.0], [10000.0, 96.0], [9900.0, 87.0], [10100.0, 115.0], [9800.0, 69.0], [10400.0, 219.0], [10300.0, 150.0], [10500.0, 185.0], [10700.0, 247.0], [10600.0, 249.0], [164600.0, 1.0], [11100.0, 186.0], [10800.0, 189.0], [11000.0, 233.0], [11200.0, 213.0], [10900.0, 214.0], [11600.0, 160.0], [11300.0, 191.0], [11500.0, 225.0], [11700.0, 179.0], [11400.0, 213.0], [11900.0, 119.0], [11800.0, 156.0], [12000.0, 110.0], [12100.0, 135.0], [12200.0, 170.0], [12600.0, 83.0], [12300.0, 109.0], [12400.0, 101.0], [12700.0, 111.0], [12500.0, 81.0], [13000.0, 68.0], [12800.0, 78.0], [13100.0, 46.0], [13200.0, 53.0], [12900.0, 62.0], [13300.0, 694.0], [13500.0, 48.0], [13400.0, 41.0], [13700.0, 37.0], [13600.0, 38.0], [13800.0, 100.0], [13900.0, 25.0], [14200.0, 21.0], [14100.0, 20.0], [14300.0, 82.0], [14000.0, 20.0], [14400.0, 20.0], [14500.0, 33.0], [14600.0, 8.0], [14800.0, 27.0], [14700.0, 10.0], [15100.0, 14.0], [15200.0, 8.0], [15000.0, 11.0], [15300.0, 12.0], [14900.0, 9.0], [15600.0, 12.0], [15700.0, 7.0], [15400.0, 8.0], [15800.0, 11.0], [15500.0, 6.0], [16300.0, 19.0], [15900.0, 6.0], [16200.0, 8.0], [16100.0, 8.0], [16000.0, 5.0], [16400.0, 8.0], [17200.0, 3.0], [17400.0, 6.0], [16600.0, 7.0], [17000.0, 2.0], [16800.0, 2.0], [18400.0, 1.0], [17800.0, 1.0], [18000.0, 1.0], [18200.0, 1.0], [18600.0, 6.0], [19400.0, 4.0], [19200.0, 5.0], [19000.0, 1.0], [20400.0, 5.0], [19600.0, 2.0], [20200.0, 1.0], [21000.0, 1.0], [21400.0, 1.0], [21200.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [23200.0, 1.0], [24000.0, 2.0], [25000.0, 2.0], [24800.0, 1.0], [26200.0, 1.0], [26400.0, 1.0], [25800.0, 1.0], [26600.0, 1.0], [27400.0, 2.0], [27000.0, 1.0], [27200.0, 1.0], [28600.0, 1.0], [28400.0, 1.0], [29400.0, 1.0], [36800.0, 1.0], [168700.0, 1.0], [52800.0, 1.0], [53200.0, 3.0], [211900.0, 2.0], [60000.0, 3.0], [61200.0, 1.0], [71200.0, 1.0], [95200.0, 1.0], [106400.0, 8.0], [107200.0, 10.0], [110400.0, 2.0], [132800.0, 4.0], [164800.0, 1.0], [172800.0, 1.0], [211200.0, 2.0], [168900.0, 2.0], [75100.0, 1.0], [78300.0, 1.0], [83100.0, 1.0], [109500.0, 2.0], [111100.0, 2.0], [115900.0, 1.0], [134600.0, 2.0], [136200.0, 3.0], [53100.0, 1.0], [55900.0, 1.0], [59900.0, 1.0], [61100.0, 1.0], [60300.0, 1.0], [80600.0, 1.0], [82200.0, 1.0], [87000.0, 1.0], [87800.0, 1.0], [105400.0, 1.0], [117400.0, 1.0], [210900.0, 2.0], [83700.0, 1.0], [106900.0, 1.0], [107700.0, 1.0], [122100.0, 1.0], [131800.0, 1.0], [16700.0, 4.0], [17300.0, 4.0], [17100.0, 16.0], [16900.0, 6.0], [16500.0, 1.0], [17900.0, 4.0], [18100.0, 2.0], [17500.0, 4.0], [17700.0, 1.0], [18300.0, 1.0], [19100.0, 2.0], [19300.0, 1.0], [18500.0, 1.0], [19900.0, 1.0], [19500.0, 2.0], [21500.0, 3.0], [21100.0, 1.0], [21300.0, 1.0], [22500.0, 1.0], [22700.0, 1.0], [23100.0, 1.0], [24500.0, 3.0], [23700.0, 1.0], [26300.0, 23.0], [27300.0, 3.0], [27900.0, 1.0], [30500.0, 1.0], [29700.0, 3.0], [137500.0, 1.0], [39800.0, 1.0], [211100.0, 5.0], [55400.0, 2.0], [59000.0, 1.0], [61400.0, 2.0], [60600.0, 1.0], [77200.0, 1.0], [81200.0, 1.0], [83600.0, 1.0], [90800.0, 1.0], [97200.0, 1.0], [106800.0, 3.0], [111600.0, 1.0], [112400.0, 1.0], [130000.0, 5.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 131.0], [150500.0, 1.0], [105900.0, 4.0], [106700.0, 6.0], [111500.0, 2.0], [125900.0, 4.0], [212200.0, 2.0], [100.0, 4.0], [169900.0, 1.0], [200.0, 2.0], [54900.0, 1.0], [77800.0, 1.0], [77000.0, 1.0], [95400.0, 1.0], [98600.0, 1.0], [400.0, 1.0], [105000.0, 1.0], [106600.0, 1.0], [111400.0, 1.0], [115400.0, 1.0], [122600.0, 1.0], [500.0, 1.0], [128200.0, 1.0], [600.0, 2.0], [700.0, 2.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 4.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 4.0], [1500.0, 2.0], [1700.0, 2.0], [2100.0, 2.0], [133300.0, 2.0], [2200.0, 6.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 2.0], [166900.0, 3.0], [2700.0, 2.0], [3000.0, 3.0], [192500.0, 2.0], [3100.0, 4.0], [3300.0, 1.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [68900.0, 1.0], [65700.0, 1.0], [4600.0, 1.0], [4500.0, 2.0], [72900.0, 4.0], [4700.0, 1.0], [4800.0, 2.0], [5100.0, 1.0], [5000.0, 2.0], [84900.0, 1.0], [5500.0, 3.0], [5400.0, 1.0], [5600.0, 2.0], [88100.0, 1.0], [5800.0, 2.0], [92100.0, 1.0], [5900.0, 1.0], [6100.0, 3.0], [6000.0, 2.0], [6200.0, 3.0], [6300.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [107300.0, 1.0], [106500.0, 2.0], [110500.0, 1.0], [7000.0, 5.0], [7100.0, 59.0], [7400.0, 35.0], [7200.0, 2.0], [7300.0, 3.0], [117700.0, 1.0], [7500.0, 3.0], [7600.0, 27.0], [121700.0, 1.0], [7800.0, 3.0], [7700.0, 6.0], [7900.0, 35.0], [8100.0, 40.0], [8000.0, 5.0], [8200.0, 3.0], [8300.0, 9.0], [8500.0, 4.0], [8600.0, 4.0], [8400.0, 13.0], [8700.0, 60.0], [8800.0, 6.0], [8900.0, 23.0], [9100.0, 5.0], [9200.0, 30.0], [9000.0, 3.0], [145400.0, 1.0], [9300.0, 6.0], [9700.0, 62.0], [9400.0, 18.0], [9600.0, 7.0], [9500.0, 6.0], [9900.0, 28.0], [9800.0, 10.0], [10200.0, 38.0], [10100.0, 4.0], [10000.0, 5.0], [10300.0, 7.0], [10400.0, 15.0], [10600.0, 8.0], [10500.0, 6.0], [10700.0, 17.0], [164600.0, 1.0], [10900.0, 11.0], [11200.0, 34.0], [11100.0, 9.0], [10800.0, 9.0], [11000.0, 9.0], [11300.0, 5.0], [11700.0, 31.0], [11600.0, 5.0], [11500.0, 13.0], [11400.0, 1.0], [11900.0, 2.0], [12000.0, 1.0], [12200.0, 21.0], [11800.0, 5.0], [12500.0, 6.0], [12700.0, 7.0], [12600.0, 1.0], [12400.0, 1.0], [12300.0, 1.0], [13000.0, 6.0], [13200.0, 29.0], [13300.0, 394.0], [12900.0, 2.0], [13100.0, 15.0], [12800.0, 15.0], [13600.0, 1.0], [13700.0, 6.0], [13800.0, 63.0], [13400.0, 10.0], [13500.0, 9.0], [13900.0, 4.0], [14200.0, 1.0], [14300.0, 45.0], [14100.0, 1.0], [14000.0, 2.0], [14500.0, 12.0], [14600.0, 1.0], [14800.0, 15.0], [14700.0, 2.0], [14400.0, 4.0], [15300.0, 3.0], [15100.0, 4.0], [14900.0, 3.0], [15200.0, 1.0], [15800.0, 5.0], [15600.0, 1.0], [16300.0, 5.0], [16000.0, 2.0], [15900.0, 1.0], [16100.0, 1.0], [16200.0, 1.0], [16800.0, 3.0], [18400.0, 1.0], [18000.0, 1.0], [18200.0, 1.0], [17600.0, 1.0], [18600.0, 3.0], [19400.0, 2.0], [19200.0, 3.0], [18800.0, 2.0], [20200.0, 7.0], [20400.0, 5.0], [21000.0, 1.0], [24000.0, 1.0], [26200.0, 4.0], [26400.0, 4.0], [26600.0, 2.0], [28600.0, 1.0], [28400.0, 1.0], [29400.0, 1.0], [149500.0, 2.0], [52800.0, 2.0], [52400.0, 1.0], [54000.0, 1.0], [53600.0, 1.0], [54800.0, 1.0], [60400.0, 1.0], [67200.0, 1.0], [72000.0, 1.0], [90400.0, 1.0], [97600.0, 1.0], [94400.0, 1.0], [105600.0, 2.0], [106400.0, 6.0], [107200.0, 1.0], [114400.0, 1.0], [124800.0, 1.0], [132800.0, 2.0], [164800.0, 1.0], [152900.0, 1.0], [168900.0, 2.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 2.0], [111100.0, 2.0], [115900.0, 3.0], [134600.0, 1.0], [136200.0, 2.0], [39100.0, 3.0], [52300.0, 1.0], [52700.0, 1.0], [53100.0, 1.0], [53900.0, 1.0], [56700.0, 1.0], [61900.0, 1.0], [65100.0, 1.0], [80600.0, 2.0], [83000.0, 2.0], [87000.0, 1.0], [106200.0, 4.0], [107000.0, 2.0], [111000.0, 1.0], [210900.0, 3.0], [73300.0, 1.0], [74900.0, 1.0], [82900.0, 1.0], [106100.0, 2.0], [105300.0, 1.0], [107700.0, 1.0], [118900.0, 1.0], [213400.0, 1.0], [16700.0, 1.0], [17100.0, 3.0], [17900.0, 2.0], [18100.0, 1.0], [17500.0, 1.0], [19100.0, 1.0], [18700.0, 2.0], [19900.0, 1.0], [20300.0, 4.0], [22500.0, 4.0], [23500.0, 1.0], [23100.0, 1.0], [24500.0, 1.0], [26300.0, 14.0], [29700.0, 3.0], [32500.0, 1.0], [37000.0, 1.0], [211100.0, 5.0], [53400.0, 1.0], [54600.0, 1.0], [59400.0, 8.0], [71600.0, 1.0], [81200.0, 1.0], [84400.0, 1.0], [106000.0, 2.0], [110800.0, 1.0], [111600.0, 3.0], [130000.0, 4.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 213400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7788.0, "series": [{"data": [[1.0, 296.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5399.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 25.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7788.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.53928572E12, "maxY": 499.43149038461576, "series": [{"data": [[1.53928638E12, 137.7851851851853], [1.53928572E12, 7.939024390243899], [1.53928602E12, 284.04686192468614], [1.53928632E12, 484.0916923076923], [1.53928596E12, 221.59371221281742], [1.53928626E12, 499.43149038461576], [1.5392859E12, 160.72528883183557], [1.5392862E12, 463.57665505226475], [1.53928584E12, 100.34691501746202], [1.53928614E12, 401.8378537735849], [1.53928644E12, 1.0], [1.53928578E12, 41.91724137931029], [1.53928608E12, 342.0146644106036]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928644E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 172820.0, "series": [{"data": [[2.0, 583.0], [3.0, 125184.0], [4.0, 961.5], [6.0, 603.0], [7.0, 1280.5], [8.0, 3942.0], [10.0, 1484.0], [11.0, 592.0], [13.0, 3165.0], [14.0, 1619.0], [15.0, 126976.0], [16.0, 865.0], [17.0, 2777.0], [18.0, 37052.0], [21.0, 1849.0], [22.0, 1060.0], [23.0, 1042.0], [24.0, 1180.0], [25.0, 1343.0], [27.0, 1198.0], [28.0, 1778.0], [29.0, 1431.0], [32.0, 3608.0], [33.0, 2345.0], [34.0, 2194.0], [35.0, 4515.0], [36.0, 73627.0], [37.0, 3448.0], [39.0, 2372.3333333333335], [41.0, 1335.0], [42.0, 2344.5], [44.0, 1863.0], [45.0, 2050.0], [46.0, 2951.5], [48.0, 2303.0], [49.0, 2411.0], [50.0, 2787.0], [53.0, 69967.0], [54.0, 5363.0], [56.0, 4244.333333333333], [57.0, 100990.5], [58.0, 3177.0], [59.0, 100989.5], [60.0, 2970.0], [61.0, 4458.0], [62.0, 3393.0], [63.0, 3166.0], [64.0, 3073.0], [65.0, 3133.0], [66.0, 3519.0], [68.0, 4493.0], [69.0, 3672.0], [70.0, 3784.0], [72.0, 3822.0], [73.0, 3776.0], [76.0, 4357.0], [77.0, 5335.0], [78.0, 100863.75], [81.0, 5351.5], [83.0, 4494.0], [84.0, 6175.0], [85.0, 5263.0], [86.0, 4558.0], [87.0, 5069.0], [89.0, 5636.0], [90.0, 5620.0], [91.0, 5513.0], [93.0, 32925.5], [94.0, 32856.5], [95.0, 5271.0], [97.0, 24087.0], [99.0, 6137.0], [98.0, 60455.0], [101.0, 6862.0], [102.0, 6686.0], [105.0, 33001.5], [106.0, 7317.5], [107.0, 6504.0], [109.0, 6722.0], [110.0, 6703.0], [111.0, 6250.0], [112.0, 6161.0], [113.0, 7066.0], [114.0, 6595.0], [115.0, 6709.0], [117.0, 6969.0], [119.0, 8358.5], [120.0, 8169.0], [121.0, 7835.0], [123.0, 83022.0], [124.0, 9273.0], [128.0, 62055.0], [129.0, 8869.0], [130.0, 10011.0], [131.0, 9288.0], [133.0, 9297.0], [134.0, 9425.0], [137.0, 10029.0], [138.0, 10001.0], [139.0, 59797.5], [140.0, 8382.0], [141.0, 8124.0], [142.0, 8331.0], [143.0, 20473.0], [136.0, 111022.0], [144.0, 8729.0], [145.0, 8670.0], [146.0, 13979.0], [147.0, 9582.0], [148.0, 14188.5], [149.0, 9973.0], [150.0, 9639.0], [151.0, 13868.0], [153.0, 10352.0], [155.0, 61663.5], [156.0, 11052.0], [157.0, 10198.0], [159.0, 11424.0], [154.0, 17994.0], [161.0, 10626.0], [162.0, 11046.0], [164.0, 14970.333333333334], [166.0, 15038.0], [172.0, 11523.0], [173.0, 11332.0], [175.0, 110992.0], [176.0, 11489.5], [177.0, 10638.0], [188.0, 11792.0], [190.0, 12291.666666666666], [189.0, 20317.0], [186.0, 20335.0], [184.0, 20372.0], [195.0, 10614.0], [202.0, 9935.0], [204.0, 39223.5], [206.0, 11185.0], [207.0, 15760.0], [212.0, 9956.25], [215.0, 10661.0], [214.0, 15203.0], [209.0, 26709.0], [223.0, 10954.0], [221.0, 18185.0], [217.0, 18240.0], [228.0, 10721.0], [230.0, 13637.0], [231.0, 16790.0], [229.0, 15800.0], [225.0, 15025.0], [237.0, 16097.0], [232.0, 18814.0], [240.0, 11635.5], [245.0, 11338.5], [247.0, 27387.0], [248.0, 9721.0], [250.0, 10144.5], [251.0, 10297.0], [249.0, 169219.0], [269.0, 18409.5], [258.0, 6254.0], [259.0, 13316.0], [270.0, 12776.0], [271.0, 13312.0], [260.0, 1.0], [262.0, 10001.0], [263.0, 9216.0], [264.0, 11120.0], [265.0, 12602.0], [266.0, 10189.0], [267.0, 21406.0], [279.0, 9956.0], [273.0, 26368.0], [272.0, 11385.0], [274.0, 16743.0], [276.0, 17664.0], [277.0, 11865.8], [278.0, 17246.0], [280.0, 6527.5], [282.0, 10030.0], [283.0, 13311.333333333334], [284.0, 14271.5], [285.0, 7678.5], [286.0, 18770.4], [287.0, 9973.333333333334], [289.0, 10427.333333333334], [288.0, 10410.166666666668], [290.0, 26367.0], [291.0, 11946.5], [292.0, 11928.0], [294.0, 61823.0], [295.0, 10075.5], [298.0, 8578.666666666666], [300.0, 24064.0], [302.0, 13311.666666666666], [303.0, 10364.0], [297.0, 166911.0], [299.0, 10236.8], [305.0, 11199.5], [304.0, 16794.75], [306.0, 13313.0], [307.0, 12726.25], [308.0, 9084.25], [309.0, 24064.5], [310.0, 12889.0], [311.0, 17216.0], [312.0, 7985.8], [319.0, 16745.0], [317.0, 7731.000000000001], [318.0, 1.0], [313.0, 24134.5], [314.0, 13360.285714285714], [315.0, 12671.5], [321.0, 8420.4], [320.0, 9335.0], [322.0, 11434.166666666666], [323.0, 10494.0], [324.0, 13312.714285714284], [325.0, 7936.0], [326.0, 9384.124999999998], [327.0, 13107.2], [328.0, 11341.5], [334.0, 9585.444444444445], [335.0, 13311.333333333334], [332.0, 9043.333333333334], [333.0, 34526.75], [329.0, 16615.777777777777], [330.0, 7999.5], [331.0, 10407.0], [337.0, 8855.125], [336.0, 14122.833333333332], [338.0, 10205.0], [339.0, 9058.111111111111], [340.0, 12617.538461538463], [341.0, 13092.57142857143], [342.0, 12354.6], [344.0, 16392.142857142855], [350.0, 6882.285714285714], [351.0, 11686.0], [348.0, 9700.636363636364], [349.0, 13312.0], [345.0, 7808.0], [346.0, 14111.0], [347.0, 10981.57142857143], [354.0, 13311.666666666666], [352.0, 9728.0], [355.0, 13820.0], [364.0, 12860.5], [365.0, 7168.0], [366.0, 8274.250000000002], [367.0, 10666.166666666666], [356.0, 8816.666666666666], [357.0, 9955.222222222224], [358.0, 9792.374999999998], [359.0, 10704.800000000001], [360.0, 11265.0], [361.0, 8191.833333333333], [362.0, 9575.5], [363.0, 10023.842105263157], [369.0, 12198.0], [368.0, 9489.8], [370.0, 13067.142857142857], [371.0, 9722.333333333334], [372.0, 7005.5], [373.0, 10444.8], [374.0, 12577.0], [375.0, 12449.0], [376.0, 13312.0], [382.0, 10082.214285714286], [383.0, 9874.833333333334], [380.0, 11339.5], [381.0, 10497.166666666668], [377.0, 11995.285714285716], [378.0, 13235.0], [379.0, 7526.1], [385.0, 5847.333333333333], [384.0, 8192.0], [386.0, 8299.666666666666], [387.0, 32725.333333333336], [389.0, 10629.0], [390.0, 10123.0], [391.0, 12237.307692307691], [392.0, 8450.75], [398.0, 13312.0], [396.0, 10958.0], [397.0, 13312.0], [394.0, 11040.5], [395.0, 9962.555555555555], [401.0, 8966.5], [400.0, 13482.142857142859], [402.0, 11548.0], [413.0, 8737.5], [414.0, 11188.0], [404.0, 10899.57142857143], [405.0, 12770.285714285714], [406.0, 13143.0], [407.0, 13312.0], [408.0, 11407.571428571428], [409.0, 14123.0], [410.0, 10224.42857142857], [411.0, 10533.714285714286], [417.0, 10028.454545454546], [416.0, 13349.333333333334], [418.0, 11140.944444444443], [419.0, 11349.333333333332], [420.0, 8310.300000000001], [421.0, 9355.0], [422.0, 12661.0], [423.0, 9766.75], [424.0, 11961.0], [430.0, 10628.0], [431.0, 11918.0], [428.0, 9518.0], [429.0, 6972.666666666666], [425.0, 7680.0], [426.0, 6636.222222222223], [427.0, 8181.666666666667], [435.0, 26624.0], [433.0, 11135.833333333332], [432.0, 52944.8], [434.0, 11172.25], [437.0, 13651.666666666666], [439.0, 13204.57142857143], [440.0, 11498.57142857143], [447.0, 8389.75], [444.0, 15508.0], [445.0, 11264.0], [446.0, 10221.5], [441.0, 8961.222222222223], [442.0, 14079.083333333332], [443.0, 14335.571428571428], [451.0, 13123.0], [449.0, 8471.099999999999], [448.0, 7079.333333333333], [450.0, 11867.0], [452.0, 8483.8], [455.0, 11736.4], [456.0, 43592.333333333336], [462.0, 9711.25], [463.0, 13764.75], [460.0, 11838.75], [461.0, 12849.888888888889], [457.0, 10239.0], [458.0, 74189.2], [459.0, 18688.0], [465.0, 10169.0], [464.0, 7168.5], [466.0, 30520.666666666668], [467.0, 7892.666666666666], [468.0, 10383.333333333332], [469.0, 9547.0], [470.0, 7617.0], [471.0, 70961.75], [472.0, 10475.0], [478.0, 11605.333333333334], [476.0, 8405.25], [477.0, 12669.750000000002], [473.0, 9130.5], [475.0, 63856.22222222222], [481.0, 8874.666666666666], [480.0, 11016.249999999998], [482.0, 10349.642857142857], [483.0, 72421.75], [484.0, 9096.0], [485.0, 9242.0], [486.0, 13491.333333333334], [487.0, 9575.5], [488.0, 12418.333333333334], [494.0, 12447.5], [495.0, 12371.666666666666], [492.0, 9897.333333333334], [493.0, 12678.0], [489.0, 13311.0], [490.0, 10726.0], [491.0, 12479.0], [496.0, 8368.923076923076], [497.0, 8704.0], [498.0, 10410.888888888889], [499.0, 10450.7], [500.0, 20587.26539278135]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[382.4512061403503, 16405.031249999996]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 42073.0], [4.0, 516.0], [5.0, 602.6666666666667], [6.0, 683.25], [7.0, 705.8571428571428], [8.0, 678.75], [9.0, 953.2727272727274], [10.0, 809.1999999999999], [11.0, 744.7], [12.0, 32121.625], [13.0, 20074.923076923078], [14.0, 873.0714285714286], [15.0, 851.8421052631579], [16.0, 995.6666666666665], [17.0, 13557.0625], [18.0, 846.7647058823529], [19.0, 1102.7333333333333], [20.0, 13089.388888888889], [21.0, 1236.0714285714287], [22.0, 1289.9999999999998], [23.0, 6176.125], [24.0, 1324.3076923076924], [25.0, 1677.0000000000002], [26.0, 1651.1666666666665], [27.0, 1605.0909090909092], [28.0, 1711.714285714286], [29.0, 23666.78947368421], [30.0, 1601.642857142857], [31.0, 13627.642857142859], [32.0, 1853.6], [33.0, 1906.9473684210525], [34.0, 1661.153846153846], [35.0, 1809.5], [36.0, 17852.285714285717], [37.0, 1997.684210526316], [38.0, 1971.8666666666666], [39.0, 2043.0], [40.0, 2075.3999999999996], [41.0, 2376.8124999999995], [42.0, 2144.588235294118], [43.0, 2037.7222222222222], [44.0, 2150.9230769230767], [45.0, 2460.928571428571], [46.0, 2579.047619047619], [47.0, 2558.066666666666], [48.0, 2532.083333333333], [49.0, 2734.571428571429], [50.0, 2982.6363636363635], [51.0, 10395.736842105263], [52.0, 3156.142857142857], [53.0, 12087.0], [54.0, 3177.8888888888887], [55.0, 11179.470588235294], [56.0, 15161.235294117647], [57.0, 2993.9411764705883], [58.0, 3007.944444444445], [59.0, 19881.842105263157], [60.0, 10616.0625], [61.0, 10090.153846153846], [62.0, 4568.888888888889], [63.0, 6986.15], [64.0, 7164.888888888889], [65.0, 7466.571428571429], [66.0, 3430.25], [67.0, 3932.2142857142853], [68.0, 3880.1874999999995], [69.0, 4005.3125], [70.0, 4231.076923076924], [71.0, 3852.117647058824], [72.0, 4065.857142857143], [73.0, 3964.8750000000005], [74.0, 15063.75], [75.0, 4422.083333333334], [76.0, 4560.235294117647], [77.0, 4839.333333333333], [78.0, 27686.35294117647], [79.0, 5126.333333333334], [80.0, 20770.3125], [81.0, 8670.133333333335], [82.0, 7495.65], [83.0, 8232.9375], [84.0, 8478.571428571428], [85.0, 10360.6], [86.0, 9278.384615384617], [87.0, 9135.0], [88.0, 10457.166666666668], [89.0, 9261.6875], [90.0, 10208.076923076924], [91.0, 9751.466666666667], [92.0, 10500.916666666668], [93.0, 5691.35294117647], [94.0, 5727.7692307692305], [95.0, 5071.428571428572], [96.0, 6067.222222222223], [97.0, 6948.818181818182], [98.0, 7101.583333333333], [99.0, 6440.785714285715], [100.0, 6604.888888888889], [101.0, 7309.999999999999], [102.0, 6960.166666666666], [103.0, 7205.142857142857], [104.0, 6354.3], [105.0, 6946.600000000001], [106.0, 7383.250000000001], [107.0, 7941.200000000001], [108.0, 8044.933333333334], [109.0, 11179.285714285714], [110.0, 7918.705882352941], [111.0, 15499.615384615385], [112.0, 10218.785714285714], [113.0, 8139.363636363637], [114.0, 12418.0], [115.0, 12638.333333333336], [116.0, 11326.666666666666], [117.0, 8409.75], [118.0, 17221.90909090909], [119.0, 9143.083333333332], [120.0, 9962.666666666666], [121.0, 14950.5], [122.0, 18747.8], [123.0, 8649.727272727274], [124.0, 9024.900000000001], [125.0, 9394.5], [126.0, 9337.705882352942], [127.0, 9849.111111111111], [128.0, 9583.7], [129.0, 10480.23076923077], [130.0, 10025.416666666666], [131.0, 9619.888888888889], [132.0, 9878.800000000001], [133.0, 10583.222222222223], [134.0, 10928.285714285716], [135.0, 16831.13333333334], [136.0, 10046.142857142855], [137.0, 9675.642857142857], [138.0, 9593.062500000002], [139.0, 8956.384615384615], [140.0, 10026.57142857143], [141.0, 9984.999999999998], [142.0, 10165.9], [143.0, 9433.636363636362], [144.0, 9154.733333333334], [145.0, 10554.800000000001], [146.0, 9757.5], [147.0, 10129.75], [148.0, 9921.2], [149.0, 10376.058823529413], [150.0, 9939.222222222223], [151.0, 10087.307692307691], [152.0, 11535.166666666666], [153.0, 10782.999999999998], [154.0, 11058.363636363636], [155.0, 10889.111111111111], [156.0, 10911.75], [157.0, 11059.499999999998], [158.0, 11032.545454545456], [159.0, 11305.85714285714], [160.0, 11348.30769230769], [161.0, 12193.615384615385], [162.0, 11084.454545454546], [163.0, 12792.399999999998], [164.0, 11673.0], [165.0, 12787.076923076924], [166.0, 12065.699999999999], [167.0, 13260.727272727272], [168.0, 11664.666666666666], [169.0, 12439.800000000001], [170.0, 12534.285714285717], [171.0, 12365.133333333333], [172.0, 12249.2], [173.0, 12096.000000000002], [174.0, 12029.428571428572], [175.0, 10825.400000000001], [176.0, 11497.7], [177.0, 12937.909090909092], [178.0, 12288.000000000002], [179.0, 11739.818181818182], [180.0, 10989.57142857143], [181.0, 10624.000000000002], [182.0, 11835.0], [183.0, 11774.666666666664], [184.0, 11682.7], [185.0, 11987.249999999998], [186.0, 11992.75], [187.0, 11530.9375], [188.0, 12128.333333333334], [189.0, 11193.4], [190.0, 12083.333333333334], [191.0, 13456.277777777777], [192.0, 12304.133333333333], [193.0, 12908.384615384615], [194.0, 13034.199999999999], [195.0, 11429.1875], [196.0, 11214.076923076924], [197.0, 11729.928571428572], [198.0, 11323.57894736842], [199.0, 10615.466666666665], [200.0, 10136.833333333334], [201.0, 11747.166666666668], [202.0, 11021.272727272726], [203.0, 10918.611111111113], [204.0, 9974.363636363636], [205.0, 10237.0], [206.0, 10510.2], [207.0, 10566.285714285714], [208.0, 9996.916666666666], [209.0, 11070.111111111111], [210.0, 10874.411764705881], [211.0, 9854.733333333332], [212.0, 10156.4], [213.0, 9274.777777777777], [214.0, 10524.0], [215.0, 11375.375], [216.0, 10646.461538461537], [217.0, 10952.363636363636], [218.0, 11119.272727272728], [219.0, 11266.500000000002], [220.0, 11587.538461538461], [221.0, 11619.363636363636], [222.0, 12210.666666666668], [223.0, 11688.888888888889], [224.0, 11478.5], [225.0, 11604.5], [226.0, 12087.599999999999], [227.0, 11772.33333333333], [228.0, 12037.9375], [229.0, 11346.615384615385], [230.0, 10972.5], [231.0, 10964.857142857143], [232.0, 10477.272727272728], [233.0, 11127.666666666668], [234.0, 11141.2], [235.0, 11082.25], [236.0, 10806.583333333332], [237.0, 11558.899999999998], [238.0, 10891.25], [239.0, 15054.624999999998], [240.0, 11002.333333333334], [241.0, 14945.315789473685], [242.0, 11121.533333333333], [243.0, 14153.384615384615], [244.0, 10414.941176470587], [245.0, 10830.583333333334], [246.0, 10668.454545454544], [247.0, 10503.166666666668], [248.0, 27058.3], [249.0, 36856.583333333336], [250.0, 10860.90909090909], [251.0, 10906.333333333334], [252.0, 21957.733333333334], [253.0, 11189.333333333334], [254.0, 11105.714285714284], [255.0, 11493.555555555557], [257.0, 10199.066666666668], [256.0, 16155.222222222226], [258.0, 22897.4], [259.0, 9742.5], [260.0, 16183.700000000004], [261.0, 10546.166666666668], [262.0, 24005.058823529413], [263.0, 12956.444444444445], [264.0, 9511.285714285716], [270.0, 12464.9], [271.0, 11118.235294117643], [268.0, 17892.923076923078], [269.0, 11255.111111111111], [265.0, 10655.666666666666], [266.0, 18258.266666666666], [267.0, 10566.529411764706], [273.0, 11349.599999999999], [272.0, 10207.7], [274.0, 11283.066666666668], [275.0, 11246.0], [276.0, 17178.2], [277.0, 10595.166666666668], [278.0, 17119.600000000006], [279.0, 11228.235294117649], [280.0, 21056.55555555555], [286.0, 16581.73333333333], [287.0, 10738.625], [284.0, 11024.0], [285.0, 10401.857142857143], [281.0, 11450.470588235292], [282.0, 11307.222222222224], [283.0, 10986.250000000002], [289.0, 11486.0], [288.0, 17477.95652173913], [290.0, 14744.27777777778], [291.0, 10391.8], [292.0, 15156.6], [293.0, 11753.714285714286], [294.0, 20556.26315789474], [295.0, 12447.818181818184], [296.0, 13657.90909090909], [302.0, 11619.94117647059], [303.0, 11572.538461538461], [300.0, 13592.526315789475], [301.0, 18399.72], [297.0, 11466.818181818182], [298.0, 11659.5], [299.0, 17150.8125], [305.0, 16753.95238095238], [304.0, 10789.64705882353], [306.0, 11140.0], [307.0, 11781.153846153846], [308.0, 11805.066666666668], [309.0, 13315.214285714284], [310.0, 11782.428571428572], [311.0, 11748.142857142857], [312.0, 12005.642857142857], [318.0, 10757.846153846152], [319.0, 13625.88888888889], [316.0, 11027.615384615383], [317.0, 14439.608695652174], [313.0, 12685.565217391304], [314.0, 12119.624999999998], [315.0, 12381.277777777777], [321.0, 9827.350000000002], [320.0, 10850.411764705881], [322.0, 9731.285714285714], [323.0, 10762.23076923077], [324.0, 11044.548387096776], [325.0, 10114.75], [326.0, 9738.38095238095], [327.0, 17820.42857142857], [328.0, 11361.588235294117], [334.0, 10181.807692307693], [335.0, 10724.916666666666], [332.0, 11136.466666666665], [333.0, 16281.333333333332], [329.0, 11695.899999999998], [330.0, 9457.647058823528], [331.0, 16185.055555555557], [337.0, 9396.000000000002], [336.0, 10059.954545454546], [338.0, 9849.5], [339.0, 11504.933333333332], [340.0, 12062.260869565218], [341.0, 12173.624999999998], [342.0, 17871.124999999996], [343.0, 11807.307692307691], [344.0, 10333.099999999999], [350.0, 11674.75], [351.0, 12086.117647058822], [348.0, 12318.039999999999], [349.0, 11723.944444444443], [345.0, 11758.666666666668], [346.0, 11858.000000000002], [347.0, 11667.342857142854], [353.0, 11675.812500000002], [352.0, 10932.230769230768], [354.0, 10853.090909090908], [355.0, 11350.428571428572], [356.0, 9331.692307692305], [357.0, 11346.23076923077], [358.0, 12125.470588235294], [359.0, 9461.86956521739], [360.0, 10149.555555555557], [366.0, 10108.533333333336], [367.0, 9986.473684210529], [364.0, 10076.800000000001], [365.0, 9895.842105263158], [361.0, 10710.0], [362.0, 9018.333333333332], [363.0, 10066.29268292683], [369.0, 12025.6875], [368.0, 10304.750000000002], [370.0, 10971.142857142857], [371.0, 9866.5], [372.0, 9933.769230769229], [373.0, 12286.500000000002], [374.0, 11463.083333333332], [375.0, 11257.636363636362], [376.0, 11852.875], [382.0, 10363.541666666666], [383.0, 10536.599999999997], [380.0, 11752.5], [381.0, 10874.592592592593], [377.0, 11499.346153846154], [378.0, 11368.312499999998], [379.0, 12424.818181818182], [385.0, 10792.588235294119], [384.0, 10630.875], [386.0, 10476.785714285714], [387.0, 18882.083333333332], [388.0, 10958.142857142859], [389.0, 11990.866666666669], [390.0, 10827.90909090909], [391.0, 10346.76], [392.0, 11772.882352941175], [398.0, 10935.421052631578], [399.0, 11275.800000000001], [396.0, 11363.0], [397.0, 11487.062499999998], [393.0, 12103.25], [394.0, 10343.68], [395.0, 12034.954545454546], [401.0, 10983.76923076923], [400.0, 12401.047619047618], [402.0, 11655.944444444445], [403.0, 11456.23076923077], [404.0, 12383.636363636362], [405.0, 10589.869565217392], [406.0, 11726.125], [407.0, 11393.181818181818], [408.0, 12200.055555555555], [414.0, 11778.125], [415.0, 11422.400000000001], [412.0, 10443.636363636364], [413.0, 11873.384615384615], [409.0, 12767.115384615383], [410.0, 10630.57142857143], [411.0, 10899.59090909091], [417.0, 10474.0], [416.0, 12167.5], [418.0, 11354.66666666667], [419.0, 10669.343750000002], [420.0, 10445.185185185182], [421.0, 10999.8], [422.0, 10932.357142857143], [423.0, 10577.23076923077], [424.0, 10147.866666666667], [430.0, 11353.285714285716], [431.0, 13421.045454545456], [428.0, 9672.038461538463], [429.0, 10161.307692307691], [425.0, 10152.0625], [426.0, 9403.4], [427.0, 9308.62068965517], [433.0, 11006.36842105263], [432.0, 11697.214285714284], [434.0, 12058.923076923076], [435.0, 19594.857142857138], [436.0, 12408.90909090909], [437.0, 12450.214285714286], [438.0, 11731.583333333334], [439.0, 11361.35], [440.0, 12250.124999999998], [446.0, 11019.363636363636], [447.0, 12329.727272727272], [444.0, 12524.636363636364], [445.0, 11177.461538461539], [441.0, 9779.65625], [442.0, 12692.699999999999], [443.0, 12745.8125], [449.0, 10264.217391304348], [448.0, 9516.259259259261], [450.0, 11552.666666666668], [451.0, 12203.1875], [452.0, 11631.684210526317], [453.0, 12962.222222222223], [454.0, 12649.235294117643], [455.0, 13171.150000000003], [456.0, 23844.04], [462.0, 9847.115384615385], [463.0, 11110.95], [460.0, 10907.611111111111], [461.0, 11824.416666666666], [457.0, 14001.333333333334], [458.0, 13570.266666666666], [459.0, 10203.04347826087], [465.0, 10457.347826086956], [464.0, 10029.210526315788], [466.0, 26752.392857142855], [467.0, 10889.235294117645], [468.0, 10500.115384615385], [469.0, 10426.062499999998], [470.0, 10589.652173913046], [471.0, 33868.586206896565], [472.0, 11451.8], [478.0, 10150.35], [479.0, 11887.285714285716], [476.0, 10533.695652173912], [477.0, 10712.13043478261], [473.0, 10839.300000000001], [474.0, 11224.300000000001], [475.0, 19154.904761904767], [481.0, 10990.333333333334], [480.0, 11344.222222222223], [482.0, 11188.608695652176], [483.0, 26240.352941176472], [484.0, 11545.333333333332], [485.0, 10423.333333333332], [486.0, 11056.666666666666], [487.0, 9215.31111111111], [488.0, 11548.304347826086], [494.0, 11185.470588235294], [495.0, 11730.57142857143], [492.0, 9808.5625], [493.0, 11524.0625], [489.0, 11181.0], [490.0, 11453.636363636364], [491.0, 10283.722222222223], [496.0, 10528.387096774193], [497.0, 12079.77777777778], [498.0, 10883.115384615383], [499.0, 12042.100000000002], [500.0, 15291.56098843323], [1.0, 172820.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[317.53085913471404, 11839.90096370722]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 38.0], [3.0, 32.0], [4.0, 34.0], [5.0, 32.0], [6.0, 33.0], [7.0, 22.0], [8.0, 27.0], [9.0, 24.0], [10.0, 34.0], [11.0, 19.0], [12.0, 94470.5], [13.0, 29.0], [14.0, 20.0], [15.0, 62996.0], [16.0, 106729.0], [17.0, 150.0], [18.0, 129.0], [19.0, 238.0], [20.0, 176.0], [21.0, 486.0], [22.0, 293.0], [23.0, 53945.666666666664], [24.0, 622.0], [25.0, 848.0], [26.0, 697.0], [28.0, 1033.5], [29.0, 105146.25], [30.0, 854.0], [32.0, 49099.666666666664], [33.0, 768.0], [35.0, 1082.0], [36.0, 42739.5], [37.0, 1305.0], [38.0, 1023.0], [39.0, 1356.0], [40.0, 558.0], [42.0, 1357.0], [43.0, 1262.0], [44.0, 1517.0], [45.0, 1776.0], [46.0, 1756.0], [47.0, 1589.0], [49.0, 2203.0], [50.0, 2218.0], [51.0, 2237.0], [53.0, 2641.0], [54.0, 2627.0], [55.0, 91634.66666666667], [56.0, 2533.0], [57.0, 2216.0], [58.0, 2179.0], [59.0, 33947.0], [60.0, 2260.0], [61.0, 2773.0], [62.0, 2503.0], [63.0, 2451.0], [64.0, 2405.0], [65.0, 2650.0], [66.0, 37885.5], [67.0, 72981.0], [68.0, 3113.0], [69.0, 49664.0], [70.0, 3175.0], [71.0, 3050.0], [72.0, 3142.0], [73.0, 3326.0], [74.0, 3176.0], [75.0, 3650.0], [76.0, 3918.0], [78.0, 46858.0], [79.0, 3565.0], [77.0, 132880.0], [80.0, 3885.0], [81.0, 3833.0], [82.0, 3734.0], [83.0, 3578.0], [84.0, 3825.0], [86.0, 4112.0], [87.0, 4716.0], [89.0, 5137.0], [90.0, 4918.0], [91.0, 4610.0], [93.0, 4821.5], [94.0, 4552.0], [95.0, 32666.0], [97.0, 5574.0], [98.0, 5409.0], [99.0, 32679.0], [96.0, 59447.0], [101.0, 32794.5], [102.0, 23954.666666666668], [103.0, 5544.0], [100.0, 59431.0], [105.0, 6233.0], [106.0, 23849.333333333332], [104.0, 59417.0], [108.0, 6119.0], [109.0, 6210.0], [110.0, 5984.0], [111.0, 5525.0], [112.0, 5601.0], [114.0, 6069.0], [115.0, 6085.0], [116.0, 6276.0], [117.0, 6876.0], [119.0, 7079.0], [120.0, 7467.0], [121.0, 7277.0], [122.0, 7301.0], [124.0, 45555.5], [125.0, 45548.5], [126.0, 23618.0], [128.0, 8342.0], [129.0, 8356.0], [130.0, 8597.0], [131.0, 32670.5], [132.0, 31627.0], [133.0, 37000.0], [134.0, 8537.0], [135.0, 8997.0], [136.0, 8673.0], [137.0, 59666.0], [138.0, 8107.0], [139.0, 7881.5], [140.0, 7828.0], [141.0, 7592.0], [142.0, 7948.0], [144.0, 14314.0], [145.0, 8360.0], [146.0, 8924.0], [147.0, 13887.5], [149.0, 13990.0], [150.0, 9906.0], [151.0, 14002.0], [152.0, 9307.0], [153.0, 9168.0], [154.0, 9740.0], [158.0, 111621.0], [157.0, 111638.0], [156.0, 111654.0], [160.0, 62602.5], [161.0, 13739.0], [163.0, 13841.0], [166.0, 11124.0], [162.0, 21068.0], [174.0, 17566.0], [171.0, 17626.0], [169.0, 18716.0], [176.0, 15316.0], [177.0, 15186.5], [178.0, 11479.5], [183.0, 20390.0], [181.0, 20408.0], [180.0, 20425.0], [185.0, 15811.0], [190.0, 20301.0], [187.0, 20335.0], [192.0, 11356.0], [195.0, 13155.333333333334], [196.0, 20569.5], [198.0, 25960.5], [199.0, 14828.0], [200.0, 10378.0], [202.0, 13314.0], [203.0, 9494.0], [205.0, 39055.0], [212.0, 10434.0], [213.0, 26485.0], [211.0, 26651.0], [218.0, 15735.5], [219.0, 11842.0], [220.0, 13297.0], [221.0, 13317.0], [216.0, 15185.0], [224.0, 14378.5], [227.0, 7711.0], [229.0, 10561.0], [231.0, 13299.0], [233.0, 40668.0], [234.0, 9610.0], [235.0, 13389.0], [238.0, 11518.0], [239.0, 12952.0], [236.0, 16275.0], [240.0, 10282.5], [241.0, 65304.0], [243.0, 8578.0], [245.0, 13883.0], [246.0, 9028.0], [247.0, 26422.0], [249.0, 125980.5], [252.0, 89585.5], [254.0, 39877.25], [253.0, 17911.0], [248.0, 168964.0], [259.0, 26455.0], [257.0, 13400.0], [256.0, 107147.0], [258.0, 58133.25], [260.0, 76983.75], [263.0, 26186.0], [264.0, 76928.2], [270.0, 22220.333333333336], [271.0, 17584.333333333332], [268.0, 32798.5], [269.0, 9406.333333333332], [265.0, 10331.0], [266.0, 48449.0], [267.0, 13388.25], [273.0, 19839.0], [272.0, 106529.0], [274.0, 13293.0], [275.0, 26319.0], [276.0, 30919.545454545456], [277.0, 6680.0], [278.0, 46205.5], [280.0, 56328.0], [286.0, 25144.666666666664], [287.0, 18346.666666666668], [284.0, 13291.0], [285.0, 7679.0], [282.0, 40335.25], [283.0, 16896.0], [289.0, 13359.0], [288.0, 36402.5], [290.0, 57132.4], [291.0, 9231.666666666666], [292.0, 26842.714285714286], [293.0, 12156.5], [294.0, 41916.333333333336], [295.0, 8779.666666666666], [296.0, 8267.0], [302.0, 12135.833333333334], [303.0, 59775.5], [300.0, 12409.8], [301.0, 33917.0], [297.0, 68006.4], [298.0, 13312.0], [299.0, 22126.8], [305.0, 20368.571428571428], [304.0, 8235.333333333332], [307.0, 13273.0], [316.0, 9824.0], [317.0, 23253.0], [318.0, 10532.0], [319.0, 26352.0], [308.0, 13312.0], [309.0, 4949.666666666666], [310.0, 11804.0], [311.0, 10918.1], [312.0, 10688.42857142857], [313.0, 85360.0], [314.0, 9502.5], [315.0, 42301.333333333336], [321.0, 39720.666666666664], [320.0, 9363.666666666666], [322.0, 8711.999999999998], [323.0, 12204.333333333334], [324.0, 11810.000000000002], [325.0, 10478.333333333334], [326.0, 8195.142857142857], [327.0, 32531.571428571428], [328.0, 11773.166666666666], [334.0, 7400.25], [332.0, 9878.444444444445], [333.0, 30753.4], [329.0, 13057.5], [330.0, 8446.5], [331.0, 56918.5], [337.0, 6246.6], [336.0, 9559.222222222223], [338.0, 7846.5], [339.0, 13747.0], [340.0, 11711.5], [341.0, 12127.6], [342.0, 13337.0], [344.0, 21243.0], [350.0, 12052.818181818182], [351.0, 10993.8], [348.0, 10446.692307692309], [349.0, 12292.4], [345.0, 4204.0], [347.0, 10543.058823529413], [353.0, 13057.25], [352.0, 9181.0], [354.0, 11192.0], [355.0, 11097.0], [356.0, 8832.25], [357.0, 9400.777777777777], [358.0, 11887.76923076923], [359.0, 11946.666666666666], [360.0, 10348.0], [366.0, 8666.833333333332], [367.0, 10722.6], [364.0, 10470.8], [365.0, 7167.0], [361.0, 8935.666666666668], [362.0, 9108.5], [363.0, 10635.642857142855], [369.0, 9787.0], [368.0, 10060.7], [370.0, 8874.833333333332], [371.0, 7450.0], [372.0, 9401.777777777776], [373.0, 11314.875], [375.0, 13253.0], [376.0, 13312.5], [382.0, 11370.2], [383.0, 9216.0], [380.0, 12346.25], [381.0, 12242.583333333336], [377.0, 12351.384615384615], [378.0, 11849.5], [379.0, 10936.400000000001], [387.0, 17549.125], [385.0, 11604.75], [384.0, 8191.0], [386.0, 5440.0], [390.0, 13331.57142857143], [391.0, 8748.4], [392.0, 11432.0], [398.0, 11691.666666666666], [399.0, 10038.0], [396.0, 10172.0], [397.0, 12577.333333333334], [393.0, 15168.5], [394.0, 11990.636363636364], [395.0, 12972.777777777776], [401.0, 7167.8], [400.0, 11285.0], [402.0, 12677.0], [412.0, 13197.0], [413.0, 11611.0], [415.0, 10775.5], [404.0, 13076.083333333334], [405.0, 13311.2], [406.0, 11906.375000000002], [407.0, 10429.5], [408.0, 13321.0], [409.0, 13322.5], [410.0, 9219.6], [411.0, 9636.42857142857], [417.0, 5461.666666666666], [416.0, 10597.0], [418.0, 11371.272727272728], [419.0, 11293.5], [420.0, 8920.285714285716], [421.0, 9417.0], [422.0, 8538.333333333334], [423.0, 8935.8], [424.0, 13824.0], [431.0, 13642.2], [428.0, 8747.499999999998], [429.0, 9136.799999999997], [425.0, 7504.0], [426.0, 8150.599999999999], [427.0, 8130.142857142857], [434.0, 38262.666666666664], [433.0, 12901.0], [432.0, 13312.0], [435.0, 15674.0], [444.0, 12291.5], [445.0, 9471.0], [446.0, 9216.0], [436.0, 11083.0], [437.0, 13440.0], [438.0, 7651.666666666666], [439.0, 12973.285714285714], [440.0, 12078.0], [441.0, 9872.555555555557], [442.0, 6473.333333333334], [443.0, 10453.5], [449.0, 8716.454545454546], [448.0, 9357.222222222223], [450.0, 10879.5], [451.0, 11305.0], [452.0, 66840.0], [453.0, 10357.0], [454.0, 12299.5], [455.0, 12657.42857142857], [456.0, 13130.666666666666], [462.0, 9575.0], [463.0, 14635.285714285716], [460.0, 11649.4], [461.0, 12690.0], [457.0, 16308.666666666666], [458.0, 49155.66666666667], [459.0, 11840.0], [465.0, 11722.6], [464.0, 10248.4], [466.0, 38611.857142857145], [467.0, 9983.0], [468.0, 7296.111111111111], [469.0, 9026.0], [470.0, 11485.857142857143], [471.0, 51879.8888888889], [472.0, 10150.0], [478.0, 9698.2], [479.0, 11287.333333333334], [476.0, 12448.0], [477.0, 11027.0], [473.0, 10034.2], [474.0, 8647.0], [475.0, 31443.0], [481.0, 12982.714285714284], [480.0, 11816.714285714286], [482.0, 12033.75], [483.0, 29724.333333333336], [484.0, 7424.0], [485.0, 9703.285714285714], [486.0, 11302.875], [487.0, 8438.83333333333], [488.0, 13064.599999999999], [494.0, 8949.333333333334], [495.0, 1.0], [492.0, 10943.0], [493.0, 9223.0], [489.0, 9574.333333333332], [491.0, 11786.125], [496.0, 11717.928571428572], [497.0, 7426.0], [498.0, 13371.181818181818], [499.0, 13281.333333333334], [500.0, 23758.98233995584], [1.0, 136.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[374.9217616580316, 18802.225388601026]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4.05, "minX": 1.53928572E12, "maxY": 1075850.0, "series": [{"data": [[1.53928638E12, 119075.85], [1.53928572E12, 72613.9], [1.53928602E12, 874748.15], [1.53928632E12, 800231.4], [1.53928596E12, 911268.65], [1.53928626E12, 797107.3666666667], [1.5392859E12, 849808.8833333333], [1.5392862E12, 814378.0333333333], [1.53928584E12, 909151.75], [1.53928614E12, 865659.25], [1.53928644E12, 5.5], [1.53928578E12, 1075850.0], [1.53928608E12, 881907.8333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928638E12, 989.9], [1.53928572E12, 345.3666666666667], [1.53928602E12, 4654.8], [1.53928632E12, 6363.816666666667], [1.53928596E12, 3353.95], [1.53928626E12, 6459.6], [1.5392859E12, 3234.5666666666666], [1.5392862E12, 6704.833333333333], [1.53928584E12, 3554.2166666666667], [1.53928614E12, 6558.966666666666], [1.53928644E12, 4.05], [1.53928578E12, 4200.3], [1.53928608E12, 6853.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928644E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 38.83333333333333, "minX": 1.53928572E12, "maxY": 172820.0, "series": [{"data": [[1.5392859E12, 10393.125], [1.53928638E12, 69499.12280701754], [1.53928572E12, 1563.0], [1.5392862E12, 17506.809859154928], [1.53928602E12, 14251.795774647886], [1.53928584E12, 6583.7400000000025], [1.53928632E12, 24286.91129032259], [1.53928614E12, 10398.530821917815], [1.53928596E12, 11362.679999999998], [1.53928578E12, 2659.678571428572], [1.53928626E12, 16899.201365187728], [1.53928608E12, 11501.82262996942]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928638E12, 58934.38518518517], [1.53928572E12, 750.1166666666667], [1.53928602E12, 13491.365406643765], [1.53928632E12, 15387.90322580646], [1.53928596E12, 11136.687172774871], [1.53928626E12, 14311.317005545268], [1.5392859E12, 10923.651558073656], [1.5392862E12, 12825.985977212971], [1.53928584E12, 6576.433687002656], [1.53928614E12, 11112.653775322273], [1.53928644E12, 172820.0], [1.53928578E12, 2351.6962305986694], [1.53928608E12, 11238.905711695375]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392859E12, 9951.12121212121], [1.53928638E12, 65786.02564102564], [1.53928572E12, 38.83333333333333], [1.5392862E12, 14577.94276094275], [1.53928602E12, 28196.633333333317], [1.53928584E12, 5640.0363636363645], [1.53928632E12, 24152.665217391303], [1.53928614E12, 10737.364779874217], [1.53928596E12, 23120.526315789477], [1.53928578E12, 1484.2456140350876], [1.53928626E12, 22827.408304498265], [1.53928608E12, 13361.483965014584]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928644E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 38.75, "minX": 1.53928572E12, "maxY": 172820.0, "series": [{"data": [[1.5392859E12, 10393.125], [1.53928638E12, 69499.12280701754], [1.53928572E12, 1563.0], [1.5392862E12, 17506.806338028164], [1.53928602E12, 14251.795774647886], [1.53928584E12, 6583.7400000000025], [1.53928632E12, 24286.91129032259], [1.53928614E12, 10398.520547945209], [1.53928596E12, 11362.679999999998], [1.53928578E12, 2659.678571428572], [1.53928626E12, 16899.197952218434], [1.53928608E12, 11501.819571865448]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928638E12, 58934.02962962965], [1.53928572E12, 749.7833333333333], [1.53928602E12, 13490.995418098524], [1.53928632E12, 15387.544027898879], [1.53928596E12, 11136.129581151836], [1.53928626E12, 14310.977818853982], [1.5392859E12, 10923.147308781861], [1.5392862E12, 12825.673093777375], [1.53928584E12, 6575.905835543763], [1.53928614E12, 11112.290055248612], [1.53928644E12, 172820.0], [1.53928578E12, 2351.1596452328176], [1.53928608E12, 11238.568449682678]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392859E12, 9951.12121212121], [1.53928638E12, 65786.02564102564], [1.53928572E12, 38.75], [1.5392862E12, 14577.936026936026], [1.53928602E12, 28196.633333333317], [1.53928584E12, 5640.018181818182], [1.53928632E12, 24152.66086956522], [1.53928614E12, 10737.352201257863], [1.53928596E12, 23120.526315789477], [1.53928578E12, 1484.175438596491], [1.53928626E12, 22827.40484429066], [1.53928608E12, 13361.483965014584]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928644E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928572E12, "maxY": 8.249999999999998, "series": [{"data": [[1.5392859E12, 0.625], [1.53928638E12, 0.4736842105263156], [1.53928572E12, 0.0], [1.5392862E12, 0.4823943661971833], [1.53928602E12, 0.7112676056338025], [1.53928584E12, 1.0799999999999998], [1.53928632E12, 0.4596774193548386], [1.53928614E12, 0.6198630136986303], [1.53928596E12, 0.64], [1.53928578E12, 0.375], [1.53928626E12, 0.5051194539249146], [1.53928608E12, 0.6697247706422016]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928638E12, 0.3703703703703705], [1.53928572E12, 0.24999999999999997], [1.53928602E12, 0.5819014891179842], [1.53928632E12, 0.3591979075850045], [1.53928596E12, 0.536649214659687], [1.53928626E12, 0.37060998151571195], [1.5392859E12, 0.5679886685552409], [1.5392862E12, 0.3707274320771254], [1.53928584E12, 0.6273209549071619], [1.53928614E12, 0.4208103130755065], [1.53928644E12, 0.0], [1.53928578E12, 0.5509977827050998], [1.53928608E12, 0.546690843155033]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392859E12, 1.6060606060606057], [1.53928638E12, 0.46153846153846145], [1.53928572E12, 8.249999999999998], [1.5392862E12, 0.43097643097643124], [1.53928602E12, 0.6166666666666665], [1.53928584E12, 0.9272727272727269], [1.53928632E12, 0.41739130434782606], [1.53928614E12, 0.5974842767295597], [1.53928596E12, 1.1315789473684215], [1.53928578E12, 1.4210526315789478], [1.53928626E12, 0.47058823529411764], [1.53928608E12, 0.6501457725947529]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928644E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.53928572E12, "maxY": 119327.0, "series": [{"data": [[1.5392859E12, 24586.0], [1.53928638E12, 112414.0], [1.53928572E12, 7157.0], [1.5392862E12, 105932.0], [1.53928602E12, 23523.0], [1.53928584E12, 13551.0], [1.53928632E12, 19028.0], [1.53928614E12, 30514.0], [1.53928596E12, 37074.0], [1.53928578E12, 7895.0], [1.53928626E12, 119327.0], [1.53928608E12, 17836.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5392859E12, 7592.0], [1.53928638E12, 11394.0], [1.53928572E12, 19.0], [1.5392862E12, 9713.0], [1.53928602E12, 8882.0], [1.53928584E12, 3142.0], [1.53928632E12, 10163.0], [1.53928614E12, 9218.0], [1.53928596E12, 9028.0], [1.53928578E12, 20.0], [1.53928626E12, 10236.0], [1.53928608E12, 8777.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5392859E12, 11385.800000000001], [1.53928638E12, 13040.0], [1.53928572E12, 1169.7], [1.5392862E12, 12308.600000000002], [1.53928602E12, 11822.0], [1.53928584E12, 7869.6], [1.53928632E12, 12851.0], [1.53928614E12, 12047.599999999999], [1.53928596E12, 11615.2], [1.53928578E12, 3717.8], [1.53928626E12, 12625.0], [1.53928608E12, 11956.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5392859E12, 13836.160000000003], [1.53928638E12, 21253.399999999972], [1.53928572E12, 7157.0], [1.5392862E12, 15389.26], [1.53928602E12, 14485.919999999995], [1.53928584E12, 10511.519999999993], [1.53928632E12, 16199.199999999997], [1.53928614E12, 15144.039999999999], [1.53928596E12, 14103.869999999994], [1.53928578E12, 5268.400000000011], [1.53928626E12, 15899.27], [1.53928608E12, 14581.44000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5392859E12, 11938.8], [1.53928638E12, 14318.0], [1.53928572E12, 1580.0499999999993], [1.5392862E12, 13081.0], [1.53928602E12, 12569.8], [1.53928584E12, 8989.6], [1.53928632E12, 13767.0], [1.53928614E12, 12897.999999999989], [1.53928596E12, 12261.099999999999], [1.53928578E12, 4046.300000000001], [1.53928626E12, 13512.399999999998], [1.53928608E12, 12756.900000000001]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928638E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 172820.0, "series": [{"data": [[1.0, 648.5], [16.0, 2232.0], [4.0, 20436.0], [19.0, 10848.0], [12.0, 10879.5], [13.0, 10767.0], [27.0, 12239.0], [14.0, 6481.5], [28.0, 11153.0], [29.0, 10774.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 2.0], [4.0, 112554.0], [0.0, 172820.0], [19.0, 13312.0], [12.0, 1.0], [13.0, 13337.5], [27.0, 13302.5], [14.0, 1.0], [28.0, 11772.0], [29.0, 11264.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 172820.0, "series": [{"data": [[1.0, 648.0], [16.0, 2231.0], [4.0, 20435.5], [19.0, 10847.0], [12.0, 10879.0], [13.0, 10767.0], [27.0, 12239.0], [14.0, 6481.0], [28.0, 11152.0], [29.0, 10774.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 2.0], [4.0, 112554.0], [0.0, 172820.0], [19.0, 13312.0], [12.0, 1.0], [13.0, 13337.5], [27.0, 13302.5], [14.0, 1.0], [28.0, 11772.0], [29.0, 11264.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.5666666666666667, "minX": 1.53928572E12, "maxY": 30.55, "series": [{"data": [[1.5392859E12, 13.983333333333333], [1.53928572E12, 1.5666666666666667], [1.5392862E12, 29.7], [1.53928602E12, 20.933333333333334], [1.53928584E12, 15.316666666666666], [1.53928632E12, 23.266666666666666], [1.53928614E12, 29.266666666666666], [1.53928596E12, 14.75], [1.53928578E12, 17.916666666666668], [1.53928626E12, 27.883333333333333], [1.53928608E12, 30.55]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928632E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928572E12, "maxY": 16.316666666666666, "series": [{"data": [[1.5392859E12, 12.3], [1.53928638E12, 2.4833333333333334], [1.53928572E12, 1.2], [1.5392862E12, 11.733333333333333], [1.53928602E12, 12.45], [1.53928584E12, 13.466666666666667], [1.53928632E12, 11.2], [1.53928614E12, 12.416666666666666], [1.53928596E12, 12.95], [1.53928578E12, 15.8], [1.53928626E12, 11.216666666666667], [1.53928608E12, 12.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5392859E12, 0.6666666666666666], [1.53928638E12, 0.016666666666666666], [1.53928572E12, 0.16666666666666666], [1.5392862E12, 0.45], [1.53928602E12, 0.3], [1.53928584E12, 0.8333333333333334], [1.53928632E12, 0.25], [1.53928614E12, 0.48333333333333334], [1.53928596E12, 0.3333333333333333], [1.53928578E12, 0.9166666666666666], [1.53928626E12, 0.35], [1.53928608E12, 0.5166666666666667]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.5392859E12, 0.016666666666666666], [1.53928638E12, 1.4166666666666667], [1.5392862E12, 16.316666666666666], [1.53928602E12, 6.966666666666667], [1.53928584E12, 0.016666666666666666], [1.53928632E12, 15.433333333333334], [1.53928614E12, 15.166666666666666], [1.53928596E12, 0.43333333333333335], [1.53928644E12, 0.016666666666666666], [1.53928578E12, 0.18333333333333332], [1.53928626E12, 16.066666666666666], [1.53928608E12, 16.15]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928638E12, 0.5833333333333334], [1.5392862E12, 0.2], [1.53928602E12, 0.2], [1.53928632E12, 0.2], [1.53928614E12, 0.2], [1.53928596E12, 0.06666666666666667], [1.53928578E12, 0.016666666666666666], [1.53928626E12, 0.1], [1.53928608E12, 0.23333333333333334]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928644E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928572E12, "maxY": 14.866666666666667, "series": [{"data": [[1.5392859E12, 0.55], [1.53928638E12, 0.9166666666666666], [1.53928572E12, 0.2], [1.5392862E12, 0.55], [1.53928602E12, 0.38333333333333336], [1.53928584E12, 0.9166666666666666], [1.53928632E12, 0.26666666666666666], [1.53928614E12, 0.5166666666666667], [1.53928596E12, 0.3333333333333333], [1.53928578E12, 0.9333333333333333], [1.53928626E12, 0.3333333333333333], [1.53928608E12, 0.5333333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.5392859E12, 0.6666666666666666], [1.53928638E12, 0.016666666666666666], [1.53928572E12, 0.16666666666666666], [1.5392862E12, 0.45], [1.53928602E12, 0.3], [1.53928584E12, 0.8333333333333334], [1.53928632E12, 0.25], [1.53928614E12, 0.48333333333333334], [1.53928596E12, 0.3333333333333333], [1.53928578E12, 0.9166666666666666], [1.53928626E12, 0.35], [1.53928608E12, 0.5166666666666667]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.5392859E12, 11.75], [1.53928638E12, 1.5666666666666667], [1.53928572E12, 1.0], [1.5392862E12, 11.183333333333334], [1.53928602E12, 12.066666666666666], [1.53928584E12, 12.55], [1.53928632E12, 10.933333333333334], [1.53928614E12, 11.9], [1.53928596E12, 12.616666666666667], [1.53928578E12, 14.866666666666667], [1.53928626E12, 10.883333333333333], [1.53928608E12, 12.116666666666667]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928638E12, 0.38333333333333336], [1.5392862E12, 4.4], [1.53928602E12, 2.6166666666666667], [1.53928632E12, 3.566666666666667], [1.53928614E12, 4.783333333333333], [1.53928596E12, 0.3], [1.53928578E12, 0.016666666666666666], [1.53928626E12, 4.483333333333333], [1.53928608E12, 5.183333333333334]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5392859E12, 0.016666666666666666], [1.53928638E12, 0.6833333333333333], [1.5392862E12, 7.833333333333333], [1.53928602E12, 2.4833333333333334], [1.53928584E12, 0.016666666666666666], [1.53928632E12, 8.183333333333334], [1.53928614E12, 6.2], [1.53928596E12, 0.11666666666666667], [1.53928644E12, 0.016666666666666666], [1.53928578E12, 0.16666666666666666], [1.53928626E12, 7.15], [1.53928608E12, 6.266666666666667]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928638E12, 0.9333333333333333], [1.5392862E12, 4.283333333333333], [1.53928602E12, 2.066666666666667], [1.53928632E12, 3.8833333333333333], [1.53928614E12, 4.383333333333334], [1.53928596E12, 0.08333333333333333], [1.53928578E12, 0.016666666666666666], [1.53928626E12, 4.533333333333333], [1.53928608E12, 4.933333333333334]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928644E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
