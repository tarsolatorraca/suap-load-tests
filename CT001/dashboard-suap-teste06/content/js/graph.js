/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 219540.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 581.0], [7.5, 624.0], [7.6, 800.0], [7.7, 1185.0], [7.8, 1187.0], [7.9, 1285.0], [8.0, 1348.0], [8.1, 1364.0], [8.2, 1398.0], [8.3, 1405.0], [8.4, 1479.0], [8.5, 1582.0], [8.6, 1734.0], [8.7, 2172.0], [8.8, 2175.0], [8.9, 2234.0], [9.0, 2290.0], [9.1, 2339.0], [9.2, 2425.0], [9.3, 2454.0], [9.4, 2625.0], [9.5, 2648.0], [9.6, 2723.0], [9.7, 2833.0], [9.8, 2882.0], [9.9, 2968.0], [10.0, 3154.0], [10.1, 3289.0], [10.2, 3343.0], [10.3, 3530.0], [10.4, 3756.0], [10.5, 3815.0], [10.6, 4052.0], [10.7, 4099.0], [10.8, 4174.0], [10.9, 4346.0], [11.0, 4515.0], [11.1, 4646.0], [11.2, 4715.0], [11.3, 5045.0], [11.4, 5279.0], [11.5, 5351.0], [11.6, 5487.0], [11.7, 5498.0], [11.8, 5571.0], [11.9, 5670.0], [12.0, 5883.0], [12.1, 5908.0], [12.2, 6047.0], [12.3, 6360.0], [12.4, 6522.0], [12.5, 6578.0], [12.6, 7164.0], [12.7, 7164.0], [12.8, 7166.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7171.0], [15.6, 7171.0], [15.7, 7171.0], [15.8, 7172.0], [15.9, 7172.0], [16.0, 7172.0], [16.1, 7173.0], [16.2, 7269.0], [16.3, 7332.0], [16.4, 7420.0], [16.5, 7420.0], [16.6, 7420.0], [16.7, 7421.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7428.0], [18.3, 7428.0], [18.4, 7428.0], [18.5, 7428.0], [18.6, 7429.0], [18.7, 7676.0], [18.8, 7679.0], [18.9, 7679.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7736.0], [20.4, 7741.0], [20.5, 7837.0], [20.6, 7913.0], [20.7, 7932.0], [20.8, 7932.0], [20.9, 7932.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7939.0], [22.8, 7940.0], [22.9, 7940.0], [23.0, 7940.0], [23.1, 7947.0], [23.2, 8187.0], [23.3, 8188.0], [23.4, 8188.0], [23.5, 8191.0], [23.6, 8191.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8193.0], [25.1, 8196.0], [25.2, 8196.0], [25.3, 8394.0], [25.4, 8444.0], [25.5, 8446.0], [25.6, 8447.0], [25.7, 8448.0], [25.8, 8448.0], [25.9, 8448.0], [26.0, 8448.0], [26.1, 8448.0], [26.2, 8700.0], [26.3, 8703.0], [26.4, 8703.0], [26.5, 8703.0], [26.6, 8703.0], [26.7, 8703.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8705.0], [28.2, 8708.0], [28.3, 8708.0], [28.4, 8708.0], [28.5, 8757.0], [28.6, 8786.0], [28.7, 8841.0], [28.8, 8916.0], [28.9, 8956.0], [29.0, 8958.0], [29.1, 8959.0], [29.2, 8959.0], [29.3, 8960.0], [29.4, 8960.0], [29.5, 8960.0], [29.6, 8960.0], [29.7, 8960.0], [29.8, 8960.0], [29.9, 8960.0], [30.0, 8964.0], [30.1, 8973.0], [30.2, 9005.0], [30.3, 9054.0], [30.4, 9159.0], [30.5, 9198.0], [30.6, 9204.0], [30.7, 9212.0], [30.8, 9212.0], [30.9, 9215.0], [31.0, 9215.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9215.0], [31.6, 9215.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9219.0], [33.5, 9220.0], [33.6, 9220.0], [33.7, 9224.0], [33.8, 9320.0], [33.9, 9348.0], [34.0, 9371.0], [34.1, 9374.0], [34.2, 9389.0], [34.3, 9464.0], [34.4, 9468.0], [34.5, 9471.0], [34.6, 9471.0], [34.7, 9472.0], [34.8, 9472.0], [34.9, 9472.0], [35.0, 9472.0], [35.1, 9472.0], [35.2, 9473.0], [35.3, 9480.0], [35.4, 9563.0], [35.5, 9572.0], [35.6, 9606.0], [35.7, 9630.0], [35.8, 9659.0], [35.9, 9688.0], [36.0, 9691.0], [36.1, 9723.0], [36.2, 9724.0], [36.3, 9724.0], [36.4, 9726.0], [36.5, 9727.0], [36.6, 9728.0], [36.7, 9728.0], [36.8, 9728.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9732.0], [37.9, 9737.0], [38.0, 9745.0], [38.1, 9780.0], [38.2, 9822.0], [38.3, 9836.0], [38.4, 9842.0], [38.5, 9867.0], [38.6, 9894.0], [38.7, 9907.0], [38.8, 9937.0], [38.9, 9947.0], [39.0, 9966.0], [39.1, 9983.0], [39.2, 9984.0], [39.3, 9984.0], [39.4, 9984.0], [39.5, 9984.0], [39.6, 9984.0], [39.7, 9984.0], [39.8, 9984.0], [39.9, 9984.0], [40.0, 9984.0], [40.1, 9985.0], [40.2, 9993.0], [40.3, 10032.0], [40.4, 10033.0], [40.5, 10043.0], [40.6, 10061.0], [40.7, 10071.0], [40.8, 10075.0], [40.9, 10089.0], [41.0, 10103.0], [41.1, 10113.0], [41.2, 10115.0], [41.3, 10120.0], [41.4, 10171.0], [41.5, 10179.0], [41.6, 10240.0], [41.7, 10240.0], [41.8, 10240.0], [41.9, 10240.0], [42.0, 10240.0], [42.1, 10240.0], [42.2, 10244.0], [42.3, 10244.0], [42.4, 10285.0], [42.5, 10288.0], [42.6, 10312.0], [42.7, 10334.0], [42.8, 10335.0], [42.9, 10370.0], [43.0, 10372.0], [43.1, 10383.0], [43.2, 10386.0], [43.3, 10396.0], [43.4, 10417.0], [43.5, 10444.0], [43.6, 10453.0], [43.7, 10453.0], [43.8, 10469.0], [43.9, 10481.0], [44.0, 10489.0], [44.1, 10495.0], [44.2, 10496.0], [44.3, 10496.0], [44.4, 10496.0], [44.5, 10496.0], [44.6, 10496.0], [44.7, 10508.0], [44.8, 10546.0], [44.9, 10561.0], [45.0, 10572.0], [45.1, 10574.0], [45.2, 10579.0], [45.3, 10587.0], [45.4, 10609.0], [45.5, 10624.0], [45.6, 10641.0], [45.7, 10643.0], [45.8, 10651.0], [45.9, 10732.0], [46.0, 10748.0], [46.1, 10751.0], [46.2, 10751.0], [46.3, 10752.0], [46.4, 10752.0], [46.5, 10773.0], [46.6, 10799.0], [46.7, 10801.0], [46.8, 10829.0], [46.9, 10834.0], [47.0, 10860.0], [47.1, 10878.0], [47.2, 10895.0], [47.3, 10916.0], [47.4, 10979.0], [47.5, 10984.0], [47.6, 10989.0], [47.7, 11004.0], [47.8, 11007.0], [47.9, 11008.0], [48.0, 11008.0], [48.1, 11008.0], [48.2, 11008.0], [48.3, 11008.0], [48.4, 11011.0], [48.5, 11048.0], [48.6, 11055.0], [48.7, 11062.0], [48.8, 11090.0], [48.9, 11107.0], [49.0, 11140.0], [49.1, 11189.0], [49.2, 11243.0], [49.3, 11263.0], [49.4, 11264.0], [49.5, 11264.0], [49.6, 11264.0], [49.7, 11264.0], [49.8, 11264.0], [49.9, 11282.0], [50.0, 11286.0], [50.1, 11315.0], [50.2, 11356.0], [50.3, 11373.0], [50.4, 11379.0], [50.5, 11381.0], [50.6, 11421.0], [50.7, 11469.0], [50.8, 11500.0], [50.9, 11519.0], [51.0, 11519.0], [51.1, 11520.0], [51.2, 11520.0], [51.3, 11520.0], [51.4, 11520.0], [51.5, 11523.0], [51.6, 11524.0], [51.7, 11579.0], [51.8, 11583.0], [51.9, 11625.0], [52.0, 11640.0], [52.1, 11662.0], [52.2, 11680.0], [52.3, 11771.0], [52.4, 11772.0], [52.5, 11772.0], [52.6, 11776.0], [52.7, 11776.0], [52.8, 11776.0], [52.9, 11780.0], [53.0, 11785.0], [53.1, 11816.0], [53.2, 11891.0], [53.3, 11899.0], [53.4, 11906.0], [53.5, 11934.0], [53.6, 11935.0], [53.7, 11969.0], [53.8, 12030.0], [53.9, 12032.0], [54.0, 12032.0], [54.1, 12066.0], [54.2, 12101.0], [54.3, 12112.0], [54.4, 12120.0], [54.5, 12140.0], [54.6, 12156.0], [54.7, 12206.0], [54.8, 12242.0], [54.9, 12252.0], [55.0, 12287.0], [55.1, 12287.0], [55.2, 12287.0], [55.3, 12287.0], [55.4, 12288.0], [55.5, 12288.0], [55.6, 12288.0], [55.7, 12288.0], [55.8, 12288.0], [55.9, 12288.0], [56.0, 12288.0], [56.1, 12289.0], [56.2, 12312.0], [56.3, 12453.0], [56.4, 12453.0], [56.5, 12543.0], [56.6, 12543.0], [56.7, 12543.0], [56.8, 12543.0], [56.9, 12544.0], [57.0, 12544.0], [57.1, 12544.0], [57.2, 12657.0], [57.3, 12691.0], [57.4, 12727.0], [57.5, 12744.0], [57.6, 12752.0], [57.7, 12791.0], [57.8, 12798.0], [57.9, 12799.0], [58.0, 12799.0], [58.1, 12799.0], [58.2, 12800.0], [58.3, 12800.0], [58.4, 12800.0], [58.5, 12800.0], [58.6, 12800.0], [58.7, 12801.0], [58.8, 12802.0], [58.9, 12803.0], [59.0, 12804.0], [59.1, 12877.0], [59.2, 12938.0], [59.3, 12987.0], [59.4, 13026.0], [59.5, 13056.0], [59.6, 13058.0], [59.7, 13146.0], [59.8, 13168.0], [59.9, 13271.0], [60.0, 13296.0], [60.1, 13303.0], [60.2, 13306.0], [60.3, 13307.0], [60.4, 13307.0], [60.5, 13307.0], [60.6, 13308.0], [60.7, 13308.0], [60.8, 13308.0], [60.9, 13308.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13308.0], [61.3, 13308.0], [61.4, 13308.0], [61.5, 13308.0], [61.6, 13308.0], [61.7, 13308.0], [61.8, 13308.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13309.0], [62.2, 13310.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13313.0], [78.7, 13313.0], [78.8, 13313.0], [78.9, 13314.0], [79.0, 13315.0], [79.1, 13315.0], [79.2, 13316.0], [79.3, 13316.0], [79.4, 13316.0], [79.5, 13316.0], [79.6, 13316.0], [79.7, 13316.0], [79.8, 13316.0], [79.9, 13316.0], [80.0, 13316.0], [80.1, 13316.0], [80.2, 13316.0], [80.3, 13316.0], [80.4, 13316.0], [80.5, 13316.0], [80.6, 13316.0], [80.7, 13316.0], [80.8, 13317.0], [80.9, 13345.0], [81.0, 13465.0], [81.1, 13502.0], [81.2, 13568.0], [81.3, 13568.0], [81.4, 13572.0], [81.5, 13618.0], [81.6, 13678.0], [81.7, 13773.0], [81.8, 13820.0], [81.9, 13820.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13823.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13824.0], [84.0, 13824.0], [84.1, 13824.0], [84.2, 13824.0], [84.3, 13824.0], [84.4, 13824.0], [84.5, 13825.0], [84.6, 13827.0], [84.7, 13827.0], [84.8, 13829.0], [84.9, 13937.0], [85.0, 14079.0], [85.1, 14080.0], [85.2, 14083.0], [85.3, 14130.0], [85.4, 14298.0], [85.5, 14331.0], [85.6, 14331.0], [85.7, 14332.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14337.0], [87.8, 14339.0], [87.9, 14339.0], [88.0, 14340.0], [88.1, 14340.0], [88.2, 14591.0], [88.3, 14591.0], [88.4, 14592.0], [88.5, 14592.0], [88.6, 14592.0], [88.7, 14592.0], [88.8, 14593.0], [88.9, 14844.0], [89.0, 14847.0], [89.1, 14847.0], [89.2, 14848.0], [89.3, 14848.0], [89.4, 14848.0], [89.5, 14848.0], [89.6, 14890.0], [89.7, 15615.0], [89.8, 15616.0], [89.9, 15620.0], [90.0, 16128.0], [90.1, 16244.0], [90.2, 16383.0], [90.3, 16384.0], [90.4, 16384.0], [90.5, 16396.0], [90.6, 16904.0], [90.7, 17151.0], [90.8, 17152.0], [90.9, 17152.0], [91.0, 17152.0], [91.1, 17152.0], [91.2, 17404.0], [91.3, 17664.0], [91.4, 17924.0], [91.5, 17924.0], [91.6, 17952.0], [91.7, 18243.0], [91.8, 18264.0], [91.9, 18432.0], [92.0, 18688.0], [92.1, 18944.0], [92.2, 19204.0], [92.3, 20479.0], [92.4, 20480.0], [92.5, 23296.0], [92.6, 26368.0], [92.7, 26368.0], [92.8, 26368.0], [92.9, 26368.0], [93.0, 26368.0], [93.1, 27136.0], [93.2, 27388.0], [93.3, 27396.0], [93.4, 28419.0], [93.5, 28420.0], [93.6, 28420.0], [93.7, 28420.0], [93.8, 28671.0], [93.9, 28672.0], [94.0, 29440.0], [94.1, 34300.0], [94.2, 42496.0], [94.3, 52501.0], [94.4, 52505.0], [94.5, 52757.0], [94.6, 53247.0], [94.7, 53248.0], [94.8, 53779.0], [94.9, 53785.0], [95.0, 54058.0], [95.1, 62263.0], [95.2, 78596.0], [95.3, 80641.0], [95.4, 86016.0], [95.5, 88576.0], [95.6, 95232.0], [95.7, 95743.0], [95.8, 96000.0], [95.9, 105211.0], [96.0, 105212.0], [96.1, 105472.0], [96.2, 105472.0], [96.3, 105728.0], [96.4, 106495.0], [96.5, 106495.0], [96.6, 106496.0], [96.7, 106496.0], [96.8, 106496.0], [96.9, 107008.0], [97.0, 108799.0], [97.1, 108800.0], [97.2, 109825.0], [97.3, 109825.0], [97.4, 116220.0], [97.5, 116483.0], [97.6, 116484.0], [97.7, 116484.0], [97.8, 116484.0], [97.9, 118272.0], [98.0, 119552.0], [98.1, 119552.0], [98.2, 120316.0], [98.3, 120575.0], [98.4, 123130.0], [98.5, 123132.0], [98.6, 123135.0], [98.7, 133632.0], [98.8, 145152.0], [98.9, 148480.0], [99.0, 148735.0], [99.1, 149504.0], [99.2, 154112.0], [99.3, 168192.0], [99.4, 173056.0], [99.5, 178944.0], [99.6, 212990.0], [99.7, 212991.0], [99.8, 212991.0], [99.9, 219393.0], [100.0, 219394.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 2.0], [2.7, 2.0], [2.8, 504.0], [2.9, 579.0], [3.0, 613.0], [3.1, 655.0], [3.2, 677.0], [3.3, 696.0], [3.4, 718.0], [3.5, 731.0], [3.6, 750.0], [3.7, 769.0], [3.8, 816.0], [3.9, 842.0], [4.0, 861.0], [4.1, 895.0], [4.2, 940.0], [4.3, 975.0], [4.4, 1022.0], [4.5, 1072.0], [4.6, 1105.0], [4.7, 1154.0], [4.8, 1184.0], [4.9, 1222.0], [5.0, 1241.0], [5.1, 1271.0], [5.2, 1298.0], [5.3, 1325.0], [5.4, 1368.0], [5.5, 1400.0], [5.6, 1428.0], [5.7, 1459.0], [5.8, 1495.0], [5.9, 1534.0], [6.0, 1558.0], [6.1, 1583.0], [6.2, 1601.0], [6.3, 1636.0], [6.4, 1657.0], [6.5, 1675.0], [6.6, 1687.0], [6.7, 1705.0], [6.8, 1738.0], [6.9, 1775.0], [7.0, 1797.0], [7.1, 1823.0], [7.2, 1852.0], [7.3, 1882.0], [7.4, 1924.0], [7.5, 1947.0], [7.6, 2022.0], [7.7, 2070.0], [7.8, 2098.0], [7.9, 2125.0], [8.0, 2169.0], [8.1, 2262.0], [8.2, 2312.0], [8.3, 2359.0], [8.4, 2423.0], [8.5, 2470.0], [8.6, 2524.0], [8.7, 2563.0], [8.8, 2624.0], [8.9, 2674.0], [9.0, 2719.0], [9.1, 2763.0], [9.2, 2825.0], [9.3, 2861.0], [9.4, 2876.0], [9.5, 2926.0], [9.6, 2974.0], [9.7, 2996.0], [9.8, 3030.0], [9.9, 3075.0], [10.0, 3132.0], [10.1, 3184.0], [10.2, 3225.0], [10.3, 3298.0], [10.4, 3356.0], [10.5, 3408.0], [10.6, 3446.0], [10.7, 3477.0], [10.8, 3519.0], [10.9, 3543.0], [11.0, 3615.0], [11.1, 3649.0], [11.2, 3718.0], [11.3, 3758.0], [11.4, 3799.0], [11.5, 3853.0], [11.6, 3872.0], [11.7, 3908.0], [11.8, 3948.0], [11.9, 4023.0], [12.0, 4063.0], [12.1, 4120.0], [12.2, 4157.0], [12.3, 4197.0], [12.4, 4256.0], [12.5, 4292.0], [12.6, 4339.0], [12.7, 4364.0], [12.8, 4389.0], [12.9, 4438.0], [13.0, 4477.0], [13.1, 4500.0], [13.2, 4543.0], [13.3, 4578.0], [13.4, 4645.0], [13.5, 4707.0], [13.6, 4765.0], [13.7, 4800.0], [13.8, 4841.0], [13.9, 4864.0], [14.0, 4926.0], [14.1, 4998.0], [14.2, 5028.0], [14.3, 5060.0], [14.4, 5130.0], [14.5, 5212.0], [14.6, 5257.0], [14.7, 5304.0], [14.8, 5356.0], [14.9, 5406.0], [15.0, 5481.0], [15.1, 5588.0], [15.2, 5657.0], [15.3, 5754.0], [15.4, 5854.0], [15.5, 5936.0], [15.6, 5988.0], [15.7, 6107.0], [15.8, 6165.0], [15.9, 6279.0], [16.0, 6351.0], [16.1, 6415.0], [16.2, 6460.0], [16.3, 6552.0], [16.4, 6668.0], [16.5, 6749.0], [16.6, 6838.0], [16.7, 6952.0], [16.8, 7072.0], [16.9, 7138.0], [17.0, 7164.0], [17.1, 7167.0], [17.2, 7168.0], [17.3, 7168.0], [17.4, 7168.0], [17.5, 7168.0], [17.6, 7168.0], [17.7, 7168.0], [17.8, 7168.0], [17.9, 7170.0], [18.0, 7172.0], [18.1, 7172.0], [18.2, 7177.0], [18.3, 7292.0], [18.4, 7353.0], [18.5, 7423.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7425.0], [19.2, 7432.0], [19.3, 7504.0], [19.4, 7559.0], [19.5, 7617.0], [19.6, 7644.0], [19.7, 7678.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7682.0], [20.2, 7722.0], [20.3, 7747.0], [20.4, 7799.0], [20.5, 7834.0], [20.6, 7906.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7940.0], [21.2, 7959.0], [21.3, 8023.0], [21.4, 8083.0], [21.5, 8129.0], [21.6, 8185.0], [21.7, 8191.0], [21.8, 8191.0], [21.9, 8192.0], [22.0, 8192.0], [22.1, 8192.0], [22.2, 8195.0], [22.3, 8243.0], [22.4, 8319.0], [22.5, 8390.0], [22.6, 8447.0], [22.7, 8448.0], [22.8, 8490.0], [22.9, 8560.0], [23.0, 8613.0], [23.1, 8643.0], [23.2, 8698.0], [23.3, 8703.0], [23.4, 8704.0], [23.5, 8704.0], [23.6, 8704.0], [23.7, 8712.0], [23.8, 8755.0], [23.9, 8782.0], [24.0, 8805.0], [24.1, 8843.0], [24.2, 8872.0], [24.3, 8925.0], [24.4, 8946.0], [24.5, 8956.0], [24.6, 8959.0], [24.7, 8960.0], [24.8, 8960.0], [24.9, 8971.0], [25.0, 8986.0], [25.1, 9003.0], [25.2, 9026.0], [25.3, 9050.0], [25.4, 9073.0], [25.5, 9089.0], [25.6, 9113.0], [25.7, 9135.0], [25.8, 9147.0], [25.9, 9157.0], [26.0, 9178.0], [26.1, 9195.0], [26.2, 9208.0], [26.3, 9213.0], [26.4, 9215.0], [26.5, 9215.0], [26.6, 9216.0], [26.7, 9216.0], [26.8, 9216.0], [26.9, 9216.0], [27.0, 9216.0], [27.1, 9217.0], [27.2, 9220.0], [27.3, 9235.0], [27.4, 9255.0], [27.5, 9267.0], [27.6, 9285.0], [27.7, 9299.0], [27.8, 9307.0], [27.9, 9321.0], [28.0, 9331.0], [28.1, 9346.0], [28.2, 9360.0], [28.3, 9366.0], [28.4, 9371.0], [28.5, 9380.0], [28.6, 9390.0], [28.7, 9400.0], [28.8, 9412.0], [28.9, 9426.0], [29.0, 9435.0], [29.1, 9443.0], [29.2, 9448.0], [29.3, 9452.0], [29.4, 9463.0], [29.5, 9468.0], [29.6, 9471.0], [29.7, 9472.0], [29.8, 9472.0], [29.9, 9474.0], [30.0, 9482.0], [30.1, 9491.0], [30.2, 9499.0], [30.3, 9505.0], [30.4, 9515.0], [30.5, 9523.0], [30.6, 9527.0], [30.7, 9534.0], [30.8, 9543.0], [30.9, 9548.0], [31.0, 9555.0], [31.1, 9560.0], [31.2, 9571.0], [31.3, 9578.0], [31.4, 9586.0], [31.5, 9595.0], [31.6, 9601.0], [31.7, 9605.0], [31.8, 9614.0], [31.9, 9619.0], [32.0, 9626.0], [32.1, 9631.0], [32.2, 9634.0], [32.3, 9636.0], [32.4, 9643.0], [32.5, 9650.0], [32.6, 9655.0], [32.7, 9662.0], [32.8, 9666.0], [32.9, 9673.0], [33.0, 9679.0], [33.1, 9683.0], [33.2, 9688.0], [33.3, 9691.0], [33.4, 9695.0], [33.5, 9702.0], [33.6, 9706.0], [33.7, 9711.0], [33.8, 9715.0], [33.9, 9720.0], [34.0, 9723.0], [34.1, 9724.0], [34.2, 9727.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9729.0], [34.6, 9735.0], [34.7, 9740.0], [34.8, 9744.0], [34.9, 9750.0], [35.0, 9756.0], [35.1, 9760.0], [35.2, 9766.0], [35.3, 9773.0], [35.4, 9776.0], [35.5, 9781.0], [35.6, 9788.0], [35.7, 9792.0], [35.8, 9798.0], [35.9, 9806.0], [36.0, 9809.0], [36.1, 9813.0], [36.2, 9817.0], [36.3, 9821.0], [36.4, 9825.0], [36.5, 9828.0], [36.6, 9836.0], [36.7, 9840.0], [36.8, 9844.0], [36.9, 9849.0], [37.0, 9854.0], [37.1, 9862.0], [37.2, 9866.0], [37.3, 9871.0], [37.4, 9876.0], [37.5, 9879.0], [37.6, 9884.0], [37.7, 9890.0], [37.8, 9893.0], [37.9, 9896.0], [38.0, 9904.0], [38.1, 9906.0], [38.2, 9911.0], [38.3, 9914.0], [38.4, 9918.0], [38.5, 9922.0], [38.6, 9927.0], [38.7, 9930.0], [38.8, 9935.0], [38.9, 9939.0], [39.0, 9942.0], [39.1, 9945.0], [39.2, 9952.0], [39.3, 9958.0], [39.4, 9962.0], [39.5, 9965.0], [39.6, 9973.0], [39.7, 9979.0], [39.8, 9980.0], [39.9, 9984.0], [40.0, 9984.0], [40.1, 9988.0], [40.2, 9991.0], [40.3, 9995.0], [40.4, 10001.0], [40.5, 10006.0], [40.6, 10009.0], [40.7, 10014.0], [40.8, 10020.0], [40.9, 10024.0], [41.0, 10030.0], [41.1, 10033.0], [41.2, 10038.0], [41.3, 10045.0], [41.4, 10054.0], [41.5, 10061.0], [41.6, 10064.0], [41.7, 10071.0], [41.8, 10076.0], [41.9, 10080.0], [42.0, 10087.0], [42.1, 10089.0], [42.2, 10095.0], [42.3, 10099.0], [42.4, 10104.0], [42.5, 10107.0], [42.6, 10113.0], [42.7, 10121.0], [42.8, 10124.0], [42.9, 10127.0], [43.0, 10133.0], [43.1, 10139.0], [43.2, 10144.0], [43.3, 10148.0], [43.4, 10152.0], [43.5, 10158.0], [43.6, 10162.0], [43.7, 10168.0], [43.8, 10172.0], [43.9, 10177.0], [44.0, 10181.0], [44.1, 10186.0], [44.2, 10191.0], [44.3, 10197.0], [44.4, 10202.0], [44.5, 10204.0], [44.6, 10209.0], [44.7, 10213.0], [44.8, 10216.0], [44.9, 10220.0], [45.0, 10224.0], [45.1, 10227.0], [45.2, 10232.0], [45.3, 10237.0], [45.4, 10240.0], [45.5, 10240.0], [45.6, 10240.0], [45.7, 10243.0], [45.8, 10246.0], [45.9, 10249.0], [46.0, 10252.0], [46.1, 10260.0], [46.2, 10263.0], [46.3, 10266.0], [46.4, 10272.0], [46.5, 10275.0], [46.6, 10280.0], [46.7, 10283.0], [46.8, 10288.0], [46.9, 10291.0], [47.0, 10294.0], [47.1, 10297.0], [47.2, 10301.0], [47.3, 10304.0], [47.4, 10309.0], [47.5, 10315.0], [47.6, 10318.0], [47.7, 10320.0], [47.8, 10326.0], [47.9, 10330.0], [48.0, 10335.0], [48.1, 10339.0], [48.2, 10344.0], [48.3, 10346.0], [48.4, 10352.0], [48.5, 10356.0], [48.6, 10358.0], [48.7, 10363.0], [48.8, 10368.0], [48.9, 10372.0], [49.0, 10376.0], [49.1, 10379.0], [49.2, 10383.0], [49.3, 10385.0], [49.4, 10390.0], [49.5, 10395.0], [49.6, 10398.0], [49.7, 10401.0], [49.8, 10405.0], [49.9, 10408.0], [50.0, 10411.0], [50.1, 10418.0], [50.2, 10420.0], [50.3, 10426.0], [50.4, 10429.0], [50.5, 10431.0], [50.6, 10434.0], [50.7, 10439.0], [50.8, 10442.0], [50.9, 10444.0], [51.0, 10446.0], [51.1, 10452.0], [51.2, 10455.0], [51.3, 10459.0], [51.4, 10465.0], [51.5, 10469.0], [51.6, 10472.0], [51.7, 10474.0], [51.8, 10478.0], [51.9, 10483.0], [52.0, 10486.0], [52.1, 10489.0], [52.2, 10491.0], [52.3, 10494.0], [52.4, 10497.0], [52.5, 10499.0], [52.6, 10504.0], [52.7, 10509.0], [52.8, 10512.0], [52.9, 10515.0], [53.0, 10521.0], [53.1, 10524.0], [53.2, 10526.0], [53.3, 10528.0], [53.4, 10532.0], [53.5, 10534.0], [53.6, 10537.0], [53.7, 10542.0], [53.8, 10546.0], [53.9, 10548.0], [54.0, 10553.0], [54.1, 10556.0], [54.2, 10563.0], [54.3, 10569.0], [54.4, 10576.0], [54.5, 10580.0], [54.6, 10582.0], [54.7, 10587.0], [54.8, 10591.0], [54.9, 10596.0], [55.0, 10600.0], [55.1, 10602.0], [55.2, 10605.0], [55.3, 10613.0], [55.4, 10618.0], [55.5, 10624.0], [55.6, 10626.0], [55.7, 10629.0], [55.8, 10635.0], [55.9, 10638.0], [56.0, 10644.0], [56.1, 10646.0], [56.2, 10650.0], [56.3, 10653.0], [56.4, 10658.0], [56.5, 10661.0], [56.6, 10664.0], [56.7, 10668.0], [56.8, 10672.0], [56.9, 10675.0], [57.0, 10680.0], [57.1, 10682.0], [57.2, 10686.0], [57.3, 10694.0], [57.4, 10702.0], [57.5, 10706.0], [57.6, 10709.0], [57.7, 10713.0], [57.8, 10717.0], [57.9, 10720.0], [58.0, 10723.0], [58.1, 10729.0], [58.2, 10734.0], [58.3, 10739.0], [58.4, 10744.0], [58.5, 10747.0], [58.6, 10750.0], [58.7, 10752.0], [58.8, 10754.0], [58.9, 10758.0], [59.0, 10760.0], [59.1, 10763.0], [59.2, 10769.0], [59.3, 10774.0], [59.4, 10778.0], [59.5, 10785.0], [59.6, 10789.0], [59.7, 10795.0], [59.8, 10799.0], [59.9, 10804.0], [60.0, 10808.0], [60.1, 10816.0], [60.2, 10821.0], [60.3, 10828.0], [60.4, 10833.0], [60.5, 10837.0], [60.6, 10840.0], [60.7, 10844.0], [60.8, 10848.0], [60.9, 10850.0], [61.0, 10854.0], [61.1, 10860.0], [61.2, 10865.0], [61.3, 10870.0], [61.4, 10876.0], [61.5, 10882.0], [61.6, 10887.0], [61.7, 10897.0], [61.8, 10902.0], [61.9, 10906.0], [62.0, 10912.0], [62.1, 10916.0], [62.2, 10922.0], [62.3, 10928.0], [62.4, 10933.0], [62.5, 10939.0], [62.6, 10943.0], [62.7, 10947.0], [62.8, 10950.0], [62.9, 10955.0], [63.0, 10960.0], [63.1, 10964.0], [63.2, 10969.0], [63.3, 10973.0], [63.4, 10978.0], [63.5, 10983.0], [63.6, 10990.0], [63.7, 10993.0], [63.8, 10998.0], [63.9, 11003.0], [64.0, 11007.0], [64.1, 11008.0], [64.2, 11008.0], [64.3, 11012.0], [64.4, 11015.0], [64.5, 11022.0], [64.6, 11026.0], [64.7, 11029.0], [64.8, 11037.0], [64.9, 11043.0], [65.0, 11046.0], [65.1, 11054.0], [65.2, 11060.0], [65.3, 11066.0], [65.4, 11071.0], [65.5, 11080.0], [65.6, 11090.0], [65.7, 11097.0], [65.8, 11101.0], [65.9, 11108.0], [66.0, 11114.0], [66.1, 11120.0], [66.2, 11124.0], [66.3, 11128.0], [66.4, 11133.0], [66.5, 11137.0], [66.6, 11141.0], [66.7, 11152.0], [66.8, 11156.0], [66.9, 11166.0], [67.0, 11169.0], [67.1, 11176.0], [67.2, 11180.0], [67.3, 11187.0], [67.4, 11190.0], [67.5, 11194.0], [67.6, 11200.0], [67.7, 11204.0], [67.8, 11210.0], [67.9, 11214.0], [68.0, 11222.0], [68.1, 11230.0], [68.2, 11234.0], [68.3, 11239.0], [68.4, 11243.0], [68.5, 11250.0], [68.6, 11256.0], [68.7, 11263.0], [68.8, 11264.0], [68.9, 11264.0], [69.0, 11268.0], [69.1, 11274.0], [69.2, 11280.0], [69.3, 11287.0], [69.4, 11294.0], [69.5, 11300.0], [69.6, 11306.0], [69.7, 11313.0], [69.8, 11319.0], [69.9, 11322.0], [70.0, 11327.0], [70.1, 11332.0], [70.2, 11339.0], [70.3, 11343.0], [70.4, 11347.0], [70.5, 11351.0], [70.6, 11354.0], [70.7, 11363.0], [70.8, 11371.0], [70.9, 11378.0], [71.0, 11385.0], [71.1, 11391.0], [71.2, 11396.0], [71.3, 11404.0], [71.4, 11414.0], [71.5, 11423.0], [71.6, 11431.0], [71.7, 11441.0], [71.8, 11444.0], [71.9, 11450.0], [72.0, 11457.0], [72.1, 11462.0], [72.2, 11473.0], [72.3, 11478.0], [72.4, 11483.0], [72.5, 11490.0], [72.6, 11497.0], [72.7, 11507.0], [72.8, 11514.0], [72.9, 11519.0], [73.0, 11520.0], [73.1, 11520.0], [73.2, 11526.0], [73.3, 11533.0], [73.4, 11545.0], [73.5, 11554.0], [73.6, 11564.0], [73.7, 11571.0], [73.8, 11584.0], [73.9, 11589.0], [74.0, 11598.0], [74.1, 11608.0], [74.2, 11614.0], [74.3, 11622.0], [74.4, 11636.0], [74.5, 11645.0], [74.6, 11657.0], [74.7, 11671.0], [74.8, 11678.0], [74.9, 11685.0], [75.0, 11689.0], [75.1, 11699.0], [75.2, 11713.0], [75.3, 11722.0], [75.4, 11733.0], [75.5, 11740.0], [75.6, 11747.0], [75.7, 11756.0], [75.8, 11763.0], [75.9, 11772.0], [76.0, 11776.0], [76.1, 11776.0], [76.2, 11791.0], [76.3, 11807.0], [76.4, 11824.0], [76.5, 11834.0], [76.6, 11845.0], [76.7, 11854.0], [76.8, 11865.0], [76.9, 11873.0], [77.0, 11887.0], [77.1, 11897.0], [77.2, 11919.0], [77.3, 11931.0], [77.4, 11942.0], [77.5, 11958.0], [77.6, 11970.0], [77.7, 11984.0], [77.8, 11993.0], [77.9, 12007.0], [78.0, 12019.0], [78.1, 12028.0], [78.2, 12038.0], [78.3, 12050.0], [78.4, 12063.0], [78.5, 12073.0], [78.6, 12089.0], [78.7, 12111.0], [78.8, 12126.0], [78.9, 12138.0], [79.0, 12155.0], [79.1, 12178.0], [79.2, 12195.0], [79.3, 12206.0], [79.4, 12226.0], [79.5, 12248.0], [79.6, 12267.0], [79.7, 12286.0], [79.8, 12287.0], [79.9, 12288.0], [80.0, 12293.0], [80.1, 12314.0], [80.2, 12336.0], [80.3, 12357.0], [80.4, 12370.0], [80.5, 12393.0], [80.6, 12413.0], [80.7, 12432.0], [80.8, 12450.0], [80.9, 12475.0], [81.0, 12508.0], [81.1, 12527.0], [81.2, 12540.0], [81.3, 12544.0], [81.4, 12544.0], [81.5, 12559.0], [81.6, 12576.0], [81.7, 12600.0], [81.8, 12624.0], [81.9, 12659.0], [82.0, 12681.0], [82.1, 12717.0], [82.2, 12741.0], [82.3, 12778.0], [82.4, 12798.0], [82.5, 12800.0], [82.6, 12800.0], [82.7, 12801.0], [82.8, 12810.0], [82.9, 12832.0], [83.0, 12861.0], [83.1, 12885.0], [83.2, 12931.0], [83.3, 12973.0], [83.4, 13011.0], [83.5, 13038.0], [83.6, 13056.0], [83.7, 13110.0], [83.8, 13130.0], [83.9, 13166.0], [84.0, 13184.0], [84.1, 13210.0], [84.2, 13227.0], [84.3, 13251.0], [84.4, 13284.0], [84.5, 13307.0], [84.6, 13307.0], [84.7, 13308.0], [84.8, 13308.0], [84.9, 13308.0], [85.0, 13308.0], [85.1, 13308.0], [85.2, 13309.0], [85.3, 13311.0], [85.4, 13311.0], [85.5, 13311.0], [85.6, 13311.0], [85.7, 13311.0], [85.8, 13311.0], [85.9, 13311.0], [86.0, 13311.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13313.0], [90.0, 13313.0], [90.1, 13313.0], [90.2, 13315.0], [90.3, 13315.0], [90.4, 13316.0], [90.5, 13316.0], [90.6, 13316.0], [90.7, 13316.0], [90.8, 13317.0], [90.9, 13345.0], [91.0, 13359.0], [91.1, 13376.0], [91.2, 13388.0], [91.3, 13410.0], [91.4, 13451.0], [91.5, 13505.0], [91.6, 13550.0], [91.7, 13568.0], [91.8, 13574.0], [91.9, 13658.0], [92.0, 13704.0], [92.1, 13755.0], [92.2, 13798.0], [92.3, 13820.0], [92.4, 13823.0], [92.5, 13824.0], [92.6, 13824.0], [92.7, 13824.0], [92.8, 13824.0], [92.9, 13824.0], [93.0, 13824.0], [93.1, 13825.0], [93.2, 13856.0], [93.3, 13897.0], [93.4, 13953.0], [93.5, 14010.0], [93.6, 14066.0], [93.7, 14089.0], [93.8, 14176.0], [93.9, 14302.0], [94.0, 14333.0], [94.1, 14335.0], [94.2, 14335.0], [94.3, 14335.0], [94.4, 14336.0], [94.5, 14336.0], [94.6, 14337.0], [94.7, 14340.0], [94.8, 14448.0], [94.9, 14572.0], [95.0, 14592.0], [95.1, 14604.0], [95.2, 14641.0], [95.3, 14816.0], [95.4, 14850.0], [95.5, 14941.0], [95.6, 15054.0], [95.7, 15105.0], [95.8, 15180.0], [95.9, 15306.0], [96.0, 15412.0], [96.1, 15562.0], [96.2, 15615.0], [96.3, 15753.0], [96.4, 15836.0], [96.5, 15974.0], [96.6, 16187.0], [96.7, 16384.0], [96.8, 16623.0], [96.9, 17026.0], [97.0, 17152.0], [97.1, 17582.0], [97.2, 17924.0], [97.3, 18606.0], [97.4, 18692.0], [97.5, 19204.0], [97.6, 21113.0], [97.7, 26368.0], [97.8, 27136.0], [97.9, 27636.0], [98.0, 28671.0], [98.1, 42496.0], [98.2, 52224.0], [98.3, 54376.0], [98.4, 56418.0], [98.5, 88575.0], [98.6, 94210.0], [98.7, 95998.0], [98.8, 105212.0], [98.9, 105728.0], [99.0, 105984.0], [99.1, 106496.0], [99.2, 107776.0], [99.3, 111872.0], [99.4, 120316.0], [99.5, 123132.0], [99.6, 130048.0], [99.7, 154112.0], [99.8, 170240.0], [99.9, 212993.0], [100.0, 219394.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 2.0], [5.8, 15.0], [5.9, 24.0], [6.0, 28.0], [6.1, 30.0], [6.2, 32.0], [6.3, 33.0], [6.4, 35.0], [6.5, 36.0], [6.6, 83.0], [6.7, 155.0], [6.8, 235.0], [6.9, 450.0], [7.0, 519.0], [7.1, 629.0], [7.2, 645.0], [7.3, 721.0], [7.4, 769.0], [7.5, 835.0], [7.6, 934.0], [7.7, 1028.0], [7.8, 1114.0], [7.9, 1290.0], [8.0, 1480.0], [8.1, 1545.0], [8.2, 1774.0], [8.3, 1990.0], [8.4, 2053.0], [8.5, 2097.0], [8.6, 2201.0], [8.7, 2377.0], [8.8, 2552.0], [8.9, 2681.0], [9.0, 2764.0], [9.1, 2906.0], [9.2, 2976.0], [9.3, 3187.0], [9.4, 3256.0], [9.5, 3357.0], [9.6, 3632.0], [9.7, 3738.0], [9.8, 3768.0], [9.9, 3769.0], [10.0, 3953.0], [10.1, 4018.0], [10.2, 4341.0], [10.3, 4380.0], [10.4, 4576.0], [10.5, 4663.0], [10.6, 4942.0], [10.7, 5308.0], [10.8, 5345.0], [10.9, 5584.0], [11.0, 5668.0], [11.1, 5995.0], [11.2, 6455.0], [11.3, 6574.0], [11.4, 6768.0], [11.5, 6795.0], [11.6, 6914.0], [11.7, 6963.0], [11.8, 7053.0], [11.9, 7098.0], [12.0, 7121.0], [12.1, 7164.0], [12.2, 7164.0], [12.3, 7165.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7169.0], [14.8, 7169.0], [14.9, 7172.0], [15.0, 7172.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7172.0], [15.4, 7172.0], [15.5, 7172.0], [15.6, 7177.0], [15.7, 7199.0], [15.8, 7259.0], [15.9, 7328.0], [16.0, 7343.0], [16.1, 7420.0], [16.2, 7420.0], [16.3, 7423.0], [16.4, 7423.0], [16.5, 7423.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7425.0], [18.6, 7425.0], [18.7, 7449.0], [18.8, 7517.0], [18.9, 7553.0], [19.0, 7556.0], [19.1, 7622.0], [19.2, 7675.0], [19.3, 7676.0], [19.4, 7676.0], [19.5, 7679.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7681.0], [20.8, 7681.0], [20.9, 7681.0], [21.0, 7682.0], [21.1, 7714.0], [21.2, 7773.0], [21.3, 7792.0], [21.4, 7802.0], [21.5, 7805.0], [21.6, 7835.0], [21.7, 7906.0], [21.8, 7932.0], [21.9, 7935.0], [22.0, 7935.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7936.0], [23.4, 7937.0], [23.5, 7937.0], [23.6, 7939.0], [23.7, 7939.0], [23.8, 7952.0], [23.9, 8067.0], [24.0, 8072.0], [24.1, 8154.0], [24.2, 8187.0], [24.3, 8188.0], [24.4, 8188.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8192.0], [25.8, 8192.0], [25.9, 8192.0], [26.0, 8192.0], [26.1, 8195.0], [26.2, 8258.0], [26.3, 8284.0], [26.4, 8299.0], [26.5, 8344.0], [26.6, 8383.0], [26.7, 8413.0], [26.8, 8428.0], [26.9, 8438.0], [27.0, 8446.0], [27.1, 8447.0], [27.2, 8447.0], [27.3, 8448.0], [27.4, 8488.0], [27.5, 8603.0], [27.6, 8616.0], [27.7, 8634.0], [27.8, 8648.0], [27.9, 8700.0], [28.0, 8701.0], [28.1, 8702.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8711.0], [29.8, 8724.0], [29.9, 8734.0], [30.0, 8758.0], [30.1, 8786.0], [30.2, 8799.0], [30.3, 8805.0], [30.4, 8813.0], [30.5, 8854.0], [30.6, 8886.0], [30.7, 8934.0], [30.8, 8957.0], [30.9, 8958.0], [31.0, 8959.0], [31.1, 8960.0], [31.2, 8960.0], [31.3, 8960.0], [31.4, 8960.0], [31.5, 8961.0], [31.6, 8961.0], [31.7, 8964.0], [31.8, 8966.0], [31.9, 8975.0], [32.0, 8992.0], [32.1, 9003.0], [32.2, 9006.0], [32.3, 9025.0], [32.4, 9046.0], [32.5, 9053.0], [32.6, 9062.0], [32.7, 9065.0], [32.8, 9068.0], [32.9, 9085.0], [33.0, 9131.0], [33.1, 9139.0], [33.2, 9164.0], [33.3, 9181.0], [33.4, 9193.0], [33.5, 9210.0], [33.6, 9214.0], [33.7, 9215.0], [33.8, 9215.0], [33.9, 9215.0], [34.0, 9215.0], [34.1, 9216.0], [34.2, 9216.0], [34.3, 9216.0], [34.4, 9216.0], [34.5, 9216.0], [34.6, 9216.0], [34.7, 9216.0], [34.8, 9216.0], [34.9, 9216.0], [35.0, 9216.0], [35.1, 9216.0], [35.2, 9216.0], [35.3, 9216.0], [35.4, 9216.0], [35.5, 9217.0], [35.6, 9220.0], [35.7, 9220.0], [35.8, 9220.0], [35.9, 9245.0], [36.0, 9284.0], [36.1, 9294.0], [36.2, 9304.0], [36.3, 9355.0], [36.4, 9373.0], [36.5, 9379.0], [36.6, 9382.0], [36.7, 9385.0], [36.8, 9424.0], [36.9, 9461.0], [37.0, 9471.0], [37.1, 9472.0], [37.2, 9472.0], [37.3, 9472.0], [37.4, 9472.0], [37.5, 9472.0], [37.6, 9472.0], [37.7, 9485.0], [37.8, 9536.0], [37.9, 9555.0], [38.0, 9586.0], [38.1, 9614.0], [38.2, 9654.0], [38.3, 9672.0], [38.4, 9685.0], [38.5, 9723.0], [38.6, 9723.0], [38.7, 9724.0], [38.8, 9724.0], [38.9, 9725.0], [39.0, 9726.0], [39.1, 9727.0], [39.2, 9728.0], [39.3, 9728.0], [39.4, 9728.0], [39.5, 9728.0], [39.6, 9728.0], [39.7, 9728.0], [39.8, 9728.0], [39.9, 9728.0], [40.0, 9728.0], [40.1, 9728.0], [40.2, 9728.0], [40.3, 9732.0], [40.4, 9733.0], [40.5, 9743.0], [40.6, 9750.0], [40.7, 9813.0], [40.8, 9829.0], [40.9, 9835.0], [41.0, 9857.0], [41.1, 9861.0], [41.2, 9881.0], [41.3, 9891.0], [41.4, 9923.0], [41.5, 9940.0], [41.6, 9976.0], [41.7, 9982.0], [41.8, 9983.0], [41.9, 9984.0], [42.0, 9984.0], [42.1, 9984.0], [42.2, 9984.0], [42.3, 9988.0], [42.4, 9993.0], [42.5, 10011.0], [42.6, 10045.0], [42.7, 10062.0], [42.8, 10088.0], [42.9, 10097.0], [43.0, 10174.0], [43.1, 10214.0], [43.2, 10217.0], [43.3, 10226.0], [43.4, 10240.0], [43.5, 10240.0], [43.6, 10240.0], [43.7, 10240.0], [43.8, 10240.0], [43.9, 10240.0], [44.0, 10240.0], [44.1, 10243.0], [44.2, 10255.0], [44.3, 10275.0], [44.4, 10287.0], [44.5, 10292.0], [44.6, 10320.0], [44.7, 10324.0], [44.8, 10361.0], [44.9, 10388.0], [45.0, 10409.0], [45.1, 10420.0], [45.2, 10465.0], [45.3, 10495.0], [45.4, 10496.0], [45.5, 10496.0], [45.6, 10496.0], [45.7, 10506.0], [45.8, 10538.0], [45.9, 10613.0], [46.0, 10623.0], [46.1, 10647.0], [46.2, 10658.0], [46.3, 10679.0], [46.4, 10732.0], [46.5, 10748.0], [46.6, 10751.0], [46.7, 10752.0], [46.8, 10752.0], [46.9, 10766.0], [47.0, 10814.0], [47.1, 10889.0], [47.2, 10928.0], [47.3, 10966.0], [47.4, 10978.0], [47.5, 11004.0], [47.6, 11008.0], [47.7, 11008.0], [47.8, 11008.0], [47.9, 11008.0], [48.0, 11012.0], [48.1, 11012.0], [48.2, 11080.0], [48.3, 11131.0], [48.4, 11184.0], [48.5, 11213.0], [48.6, 11229.0], [48.7, 11256.0], [48.8, 11263.0], [48.9, 11264.0], [49.0, 11264.0], [49.1, 11264.0], [49.2, 11264.0], [49.3, 11264.0], [49.4, 11264.0], [49.5, 11264.0], [49.6, 11269.0], [49.7, 11296.0], [49.8, 11311.0], [49.9, 11421.0], [50.0, 11461.0], [50.1, 11480.0], [50.2, 11516.0], [50.3, 11520.0], [50.4, 11520.0], [50.5, 11520.0], [50.6, 11520.0], [50.7, 11524.0], [50.8, 11569.0], [50.9, 11706.0], [51.0, 11737.0], [51.1, 11771.0], [51.2, 11772.0], [51.3, 11776.0], [51.4, 11776.0], [51.5, 11776.0], [51.6, 11776.0], [51.7, 11776.0], [51.8, 11776.0], [51.9, 11799.0], [52.0, 11829.0], [52.1, 11847.0], [52.2, 11898.0], [52.3, 11976.0], [52.4, 12032.0], [52.5, 12032.0], [52.6, 12032.0], [52.7, 12033.0], [52.8, 12061.0], [52.9, 12117.0], [53.0, 12130.0], [53.1, 12222.0], [53.2, 12259.0], [53.3, 12287.0], [53.4, 12287.0], [53.5, 12287.0], [53.6, 12287.0], [53.7, 12288.0], [53.8, 12288.0], [53.9, 12288.0], [54.0, 12288.0], [54.1, 12316.0], [54.2, 12324.0], [54.3, 12380.0], [54.4, 12483.0], [54.5, 12534.0], [54.6, 12543.0], [54.7, 12544.0], [54.8, 12544.0], [54.9, 12544.0], [55.0, 12544.0], [55.1, 12652.0], [55.2, 12708.0], [55.3, 12773.0], [55.4, 12796.0], [55.5, 12799.0], [55.6, 12800.0], [55.7, 12800.0], [55.8, 12800.0], [55.9, 12800.0], [56.0, 12800.0], [56.1, 12800.0], [56.2, 12800.0], [56.3, 12801.0], [56.4, 12803.0], [56.5, 12804.0], [56.6, 12829.0], [56.7, 12839.0], [56.8, 13001.0], [56.9, 13056.0], [57.0, 13056.0], [57.1, 13179.0], [57.2, 13186.0], [57.3, 13191.0], [57.4, 13196.0], [57.5, 13203.0], [57.6, 13207.0], [57.7, 13215.0], [57.8, 13229.0], [57.9, 13233.0], [58.0, 13245.0], [58.1, 13250.0], [58.2, 13260.0], [58.3, 13269.0], [58.4, 13273.0], [58.5, 13274.0], [58.6, 13276.0], [58.7, 13280.0], [58.8, 13281.0], [58.9, 13293.0], [59.0, 13294.0], [59.1, 13300.0], [59.2, 13305.0], [59.3, 13307.0], [59.4, 13307.0], [59.5, 13307.0], [59.6, 13308.0], [59.7, 13308.0], [59.8, 13308.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13308.0], [60.7, 13308.0], [60.8, 13308.0], [60.9, 13308.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13309.0], [61.3, 13310.0], [61.4, 13310.0], [61.5, 13310.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13313.0], [75.2, 13313.0], [75.3, 13313.0], [75.4, 13313.0], [75.5, 13314.0], [75.6, 13314.0], [75.7, 13314.0], [75.8, 13314.0], [75.9, 13315.0], [76.0, 13315.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13316.0], [76.8, 13316.0], [76.9, 13316.0], [77.0, 13316.0], [77.1, 13316.0], [77.2, 13316.0], [77.3, 13316.0], [77.4, 13316.0], [77.5, 13317.0], [77.6, 13323.0], [77.7, 13330.0], [77.8, 13338.0], [77.9, 13349.0], [78.0, 13349.0], [78.1, 13358.0], [78.2, 13362.0], [78.3, 13364.0], [78.4, 13366.0], [78.5, 13374.0], [78.6, 13389.0], [78.7, 13398.0], [78.8, 13411.0], [78.9, 13426.0], [79.0, 13508.0], [79.1, 13518.0], [79.2, 13529.0], [79.3, 13567.0], [79.4, 13667.0], [79.5, 13707.0], [79.6, 13757.0], [79.7, 13820.0], [79.8, 13820.0], [79.9, 13820.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13823.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13825.0], [82.4, 13825.0], [82.5, 13826.0], [82.6, 13852.0], [82.7, 13889.0], [82.8, 13905.0], [82.9, 13922.0], [83.0, 13978.0], [83.1, 14080.0], [83.2, 14080.0], [83.3, 14080.0], [83.4, 14084.0], [83.5, 14181.0], [83.6, 14245.0], [83.7, 14331.0], [83.8, 14332.0], [83.9, 14332.0], [84.0, 14333.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14336.0], [85.0, 14336.0], [85.1, 14339.0], [85.2, 14340.0], [85.3, 14340.0], [85.4, 14363.0], [85.5, 14528.0], [85.6, 14592.0], [85.7, 14592.0], [85.8, 14592.0], [85.9, 14592.0], [86.0, 14592.0], [86.1, 14595.0], [86.2, 14596.0], [86.3, 14596.0], [86.4, 14737.0], [86.5, 14847.0], [86.6, 14848.0], [86.7, 14848.0], [86.8, 14922.0], [86.9, 15104.0], [87.0, 15360.0], [87.1, 15479.0], [87.2, 15614.0], [87.3, 15738.0], [87.4, 15870.0], [87.5, 15872.0], [87.6, 15995.0], [87.7, 16116.0], [87.8, 16128.0], [87.9, 16384.0], [88.0, 16384.0], [88.1, 16384.0], [88.2, 16589.0], [88.3, 16911.0], [88.4, 17003.0], [88.5, 17151.0], [88.6, 17152.0], [88.7, 17301.0], [88.8, 17404.0], [88.9, 17869.0], [89.0, 17920.0], [89.1, 17924.0], [89.2, 17934.0], [89.3, 17938.0], [89.4, 18113.0], [89.5, 18618.0], [89.6, 18692.0], [89.7, 18692.0], [89.8, 18736.0], [89.9, 23207.0], [90.0, 26271.0], [90.1, 26368.0], [90.2, 26368.0], [90.3, 26380.0], [90.4, 26405.0], [90.5, 27381.0], [90.6, 28420.0], [90.7, 28928.0], [90.8, 30335.0], [90.9, 38696.0], [91.0, 42496.0], [91.1, 42496.0], [91.2, 43520.0], [91.3, 44016.0], [91.4, 52255.0], [91.5, 52510.0], [91.6, 52633.0], [91.7, 52758.0], [91.8, 52780.0], [91.9, 53592.0], [92.0, 53737.0], [92.1, 53784.0], [92.2, 53803.0], [92.3, 54054.0], [92.4, 58545.0], [92.5, 61798.0], [92.6, 65009.0], [92.7, 65493.0], [92.8, 69641.0], [92.9, 69688.0], [93.0, 71254.0], [93.1, 78490.0], [93.2, 84400.0], [93.3, 86874.0], [93.4, 88575.0], [93.5, 88576.0], [93.6, 90056.0], [93.7, 92160.0], [93.8, 93536.0], [93.9, 95233.0], [94.0, 96000.0], [94.1, 96000.0], [94.2, 103163.0], [94.3, 103164.0], [94.4, 105212.0], [94.5, 105405.0], [94.6, 105472.0], [94.7, 105473.0], [94.8, 105517.0], [94.9, 105728.0], [95.0, 105841.0], [95.1, 105982.0], [95.2, 105985.0], [95.3, 106095.0], [95.4, 106246.0], [95.5, 106495.0], [95.6, 106495.0], [95.7, 106648.0], [95.8, 106776.0], [95.9, 106893.0], [96.0, 106969.0], [96.1, 107008.0], [96.2, 107114.0], [96.3, 107142.0], [96.4, 107245.0], [96.5, 107257.0], [96.6, 108800.0], [96.7, 109635.0], [96.8, 109826.0], [96.9, 109826.0], [97.0, 111872.0], [97.1, 114617.0], [97.2, 116483.0], [97.3, 116484.0], [97.4, 116484.0], [97.5, 117593.0], [97.6, 117851.0], [97.7, 118968.0], [97.8, 119296.0], [97.9, 120575.0], [98.0, 122402.0], [98.1, 122776.0], [98.2, 123707.0], [98.3, 124353.0], [98.4, 126755.0], [98.5, 130048.0], [98.6, 134400.0], [98.7, 145152.0], [98.8, 148481.0], [98.9, 148736.0], [99.0, 149503.0], [99.1, 153599.0], [99.2, 153600.0], [99.3, 168192.0], [99.4, 201984.0], [99.5, 212992.0], [99.6, 212993.0], [99.7, 218364.0], [99.8, 218499.0], [99.9, 219499.0], [100.0, 219540.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 697.0, "series": [{"data": [[0.0, 132.0], [133600.0, 1.0], [168100.0, 1.0], [212900.0, 5.0], [219300.0, 2.0], [106700.0, 1.0], [119500.0, 2.0], [120300.0, 3.0], [52500.0, 3.0], [53700.0, 4.0], [80200.0, 1.0], [109800.0, 3.0], [116200.0, 1.0], [500.0, 1.0], [137200.0, 1.0], [600.0, 2.0], [148400.0, 2.0], [700.0, 1.0], [800.0, 2.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 6.0], [1400.0, 3.0], [1500.0, 2.0], [1700.0, 2.0], [1900.0, 1.0], [2100.0, 2.0], [2200.0, 5.0], [2300.0, 2.0], [2400.0, 3.0], [154100.0, 1.0], [147700.0, 1.0], [2600.0, 4.0], [165300.0, 1.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 3.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 2.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4300.0, 2.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 2.0], [4600.0, 1.0], [4700.0, 2.0], [5000.0, 1.0], [78500.0, 1.0], [5300.0, 2.0], [5200.0, 2.0], [85700.0, 1.0], [5500.0, 2.0], [5600.0, 2.0], [5400.0, 3.0], [5800.0, 2.0], [5700.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6500.0, 3.0], [6400.0, 1.0], [105700.0, 2.0], [7100.0, 65.0], [7300.0, 3.0], [7200.0, 1.0], [7400.0, 40.0], [7600.0, 30.0], [7900.0, 46.0], [7800.0, 2.0], [7700.0, 3.0], [8000.0, 1.0], [8100.0, 37.0], [8300.0, 1.0], [8400.0, 16.0], [8700.0, 44.0], [9000.0, 4.0], [8800.0, 2.0], [8900.0, 25.0], [9200.0, 57.0], [9100.0, 3.0], [9300.0, 9.0], [9700.0, 38.0], [9600.0, 9.0], [9400.0, 20.0], [9500.0, 3.0], [9900.0, 28.0], [10000.0, 12.0], [9800.0, 10.0], [10100.0, 12.0], [10200.0, 17.0], [10300.0, 14.0], [10600.0, 9.0], [10500.0, 13.0], [10700.0, 14.0], [10400.0, 24.0], [10900.0, 7.0], [10800.0, 11.0], [11200.0, 16.0], [11000.0, 22.0], [11100.0, 4.0], [11600.0, 7.0], [11300.0, 9.0], [11500.0, 19.0], [11400.0, 5.0], [11700.0, 15.0], [12100.0, 9.0], [11900.0, 8.0], [11800.0, 5.0], [12000.0, 7.0], [12200.0, 27.0], [12700.0, 15.0], [12600.0, 2.0], [12400.0, 2.0], [12500.0, 14.0], [12300.0, 2.0], [12900.0, 4.0], [13300.0, 375.0], [12800.0, 18.0], [13200.0, 4.0], [13000.0, 6.0], [13100.0, 2.0], [13700.0, 2.0], [13800.0, 55.0], [13500.0, 7.0], [13600.0, 4.0], [13400.0, 2.0], [14100.0, 1.0], [13900.0, 2.0], [14000.0, 6.0], [14200.0, 2.0], [14300.0, 49.0], [14500.0, 12.0], [14800.0, 14.0], [15100.0, 1.0], [15800.0, 1.0], [15600.0, 4.0], [16300.0, 7.0], [16100.0, 2.0], [16200.0, 1.0], [17400.0, 1.0], [18400.0, 2.0], [17600.0, 1.0], [18000.0, 1.0], [18200.0, 2.0], [17800.0, 1.0], [18600.0, 3.0], [19200.0, 1.0], [20400.0, 3.0], [23200.0, 1.0], [23000.0, 1.0], [28400.0, 6.0], [28600.0, 4.0], [29400.0, 1.0], [149500.0, 1.0], [42400.0, 1.0], [53200.0, 3.0], [54000.0, 1.0], [218300.0, 1.0], [89600.0, 1.0], [96000.0, 1.0], [95200.0, 1.0], [106400.0, 9.0], [108800.0, 2.0], [119200.0, 1.0], [153600.0, 1.0], [103100.0, 1.0], [108700.0, 1.0], [123100.0, 4.0], [173000.0, 1.0], [34300.0, 1.0], [145100.0, 1.0], [43500.0, 1.0], [52700.0, 3.0], [59900.0, 1.0], [80600.0, 1.0], [105400.0, 3.0], [107000.0, 2.0], [111800.0, 1.0], [118200.0, 1.0], [178900.0, 2.0], [88500.0, 2.0], [95700.0, 2.0], [120500.0, 2.0], [170200.0, 1.0], [16900.0, 1.0], [17100.0, 10.0], [16700.0, 1.0], [17900.0, 5.0], [19100.0, 1.0], [18900.0, 1.0], [26300.0, 10.0], [27100.0, 1.0], [27300.0, 3.0], [27900.0, 1.0], [29100.0, 1.0], [34200.0, 1.0], [148700.0, 1.0], [62200.0, 1.0], [86000.0, 1.0], [105200.0, 3.0], [116400.0, 8.0], [130000.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 285.0], [212900.0, 8.0], [219300.0, 2.0], [67500.0, 1.0], [82700.0, 1.0], [92300.0, 1.0], [93900.0, 1.0], [100300.0, 1.0], [105900.0, 9.0], [119500.0, 2.0], [120300.0, 3.0], [167400.0, 1.0], [201900.0, 1.0], [52900.0, 2.0], [53300.0, 2.0], [54500.0, 2.0], [54900.0, 1.0], [58900.0, 1.0], [62100.0, 1.0], [400.0, 2.0], [105800.0, 1.0], [109800.0, 1.0], [500.0, 16.0], [600.0, 37.0], [148400.0, 5.0], [700.0, 49.0], [800.0, 35.0], [900.0, 24.0], [1000.0, 25.0], [1100.0, 25.0], [1200.0, 38.0], [1300.0, 29.0], [1400.0, 35.0], [1500.0, 38.0], [1600.0, 45.0], [1700.0, 39.0], [1800.0, 36.0], [1900.0, 22.0], [2000.0, 23.0], [2100.0, 25.0], [2200.0, 13.0], [2300.0, 19.0], [2400.0, 18.0], [154100.0, 3.0], [2500.0, 25.0], [2600.0, 18.0], [2700.0, 23.0], [2800.0, 28.0], [2900.0, 29.0], [3000.0, 23.0], [3100.0, 22.0], [3200.0, 15.0], [3300.0, 17.0], [3400.0, 27.0], [3500.0, 26.0], [3700.0, 26.0], [3600.0, 17.0], [3800.0, 28.0], [3900.0, 19.0], [4000.0, 19.0], [4100.0, 27.0], [4300.0, 33.0], [4200.0, 20.0], [65700.0, 1.0], [4400.0, 28.0], [4500.0, 21.0], [4600.0, 20.0], [4800.0, 26.0], [4700.0, 21.0], [5000.0, 25.0], [4900.0, 16.0], [5100.0, 14.0], [78500.0, 1.0], [5200.0, 20.0], [5300.0, 19.0], [83300.0, 1.0], [5500.0, 12.0], [5400.0, 15.0], [5600.0, 12.0], [5800.0, 8.0], [5700.0, 11.0], [92100.0, 1.0], [6100.0, 12.0], [5900.0, 19.0], [6000.0, 9.0], [6300.0, 18.0], [6200.0, 10.0], [6400.0, 17.0], [6500.0, 9.0], [6600.0, 10.0], [105700.0, 6.0], [6700.0, 10.0], [6800.0, 12.0], [6900.0, 10.0], [106500.0, 2.0], [110500.0, 1.0], [7100.0, 142.0], [7000.0, 9.0], [7300.0, 10.0], [7400.0, 91.0], [7200.0, 10.0], [7500.0, 15.0], [7600.0, 73.0], [7700.0, 26.0], [7800.0, 19.0], [7900.0, 70.0], [8000.0, 19.0], [8100.0, 82.0], [8600.0, 24.0], [8700.0, 76.0], [8300.0, 16.0], [8500.0, 18.0], [8200.0, 11.0], [8400.0, 31.0], [9000.0, 48.0], [8800.0, 30.0], [9100.0, 61.0], [8900.0, 84.0], [9200.0, 164.0], [9600.0, 195.0], [9500.0, 141.0], [9700.0, 240.0], [9400.0, 155.0], [9300.0, 101.0], [9800.0, 220.0], [9900.0, 251.0], [10100.0, 208.0], [10200.0, 288.0], [10000.0, 202.0], [10600.0, 245.0], [10400.0, 296.0], [10300.0, 255.0], [10700.0, 252.0], [10500.0, 256.0], [10900.0, 210.0], [11000.0, 201.0], [10800.0, 199.0], [11200.0, 194.0], [11100.0, 190.0], [11500.0, 145.0], [11700.0, 118.0], [11600.0, 112.0], [11400.0, 141.0], [11300.0, 181.0], [11800.0, 88.0], [12200.0, 83.0], [12100.0, 59.0], [11900.0, 75.0], [12000.0, 85.0], [12500.0, 72.0], [12600.0, 34.0], [12400.0, 49.0], [12300.0, 49.0], [12700.0, 47.0], [13200.0, 39.0], [12800.0, 67.0], [13300.0, 697.0], [13000.0, 35.0], [13100.0, 40.0], [12900.0, 21.0], [13600.0, 15.0], [13500.0, 37.0], [13400.0, 27.0], [13700.0, 23.0], [13800.0, 114.0], [14100.0, 11.0], [14200.0, 8.0], [13900.0, 15.0], [14000.0, 25.0], [14300.0, 89.0], [14400.0, 7.0], [14600.0, 13.0], [14500.0, 27.0], [14700.0, 6.0], [14800.0, 20.0], [15200.0, 7.0], [15300.0, 9.0], [15000.0, 14.0], [15100.0, 16.0], [14900.0, 7.0], [15600.0, 17.0], [15700.0, 5.0], [15800.0, 12.0], [15400.0, 9.0], [15500.0, 6.0], [16000.0, 6.0], [16100.0, 5.0], [16200.0, 2.0], [15900.0, 5.0], [16300.0, 10.0], [16600.0, 3.0], [16400.0, 4.0], [16800.0, 3.0], [17000.0, 3.0], [17200.0, 3.0], [17400.0, 1.0], [18400.0, 6.0], [17600.0, 3.0], [17800.0, 1.0], [19000.0, 1.0], [18600.0, 12.0], [19400.0, 3.0], [19200.0, 2.0], [20400.0, 1.0], [20200.0, 1.0], [20800.0, 1.0], [21600.0, 2.0], [23200.0, 1.0], [23800.0, 1.0], [26600.0, 1.0], [26400.0, 1.0], [27600.0, 3.0], [28400.0, 6.0], [28600.0, 4.0], [29400.0, 3.0], [135100.0, 1.0], [36800.0, 1.0], [149500.0, 1.0], [42400.0, 9.0], [52800.0, 1.0], [55200.0, 1.0], [54800.0, 1.0], [218300.0, 5.0], [56400.0, 1.0], [96000.0, 1.0], [95200.0, 1.0], [106400.0, 8.0], [108800.0, 5.0], [119200.0, 1.0], [153600.0, 2.0], [213700.0, 3.0], [95900.0, 2.0], [105500.0, 1.0], [103100.0, 3.0], [114300.0, 1.0], [111100.0, 1.0], [116700.0, 1.0], [123100.0, 2.0], [43500.0, 3.0], [53500.0, 1.0], [54300.0, 3.0], [80600.0, 1.0], [94200.0, 6.0], [105400.0, 4.0], [107000.0, 2.0], [111800.0, 2.0], [126200.0, 1.0], [125400.0, 1.0], [178900.0, 1.0], [88500.0, 6.0], [95700.0, 6.0], [105300.0, 1.0], [107700.0, 3.0], [106900.0, 1.0], [114900.0, 1.0], [120500.0, 7.0], [128500.0, 3.0], [157400.0, 4.0], [170200.0, 3.0], [16700.0, 3.0], [16500.0, 3.0], [17100.0, 12.0], [17300.0, 1.0], [16900.0, 1.0], [17900.0, 7.0], [18100.0, 1.0], [17500.0, 2.0], [18300.0, 1.0], [18700.0, 2.0], [19100.0, 2.0], [18900.0, 2.0], [18500.0, 1.0], [19700.0, 2.0], [19900.0, 1.0], [21100.0, 1.0], [26300.0, 13.0], [26700.0, 1.0], [27100.0, 1.0], [27300.0, 8.0], [27900.0, 1.0], [29100.0, 1.0], [36200.0, 1.0], [147100.0, 1.0], [52200.0, 2.0], [53000.0, 1.0], [53400.0, 1.0], [54600.0, 3.0], [105200.0, 7.0], [116400.0, 4.0], [126800.0, 1.0], [130000.0, 3.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 126.0], [133600.0, 1.0], [204000.0, 1.0], [218400.0, 1.0], [168100.0, 1.0], [212900.0, 3.0], [219300.0, 1.0], [105900.0, 4.0], [106700.0, 2.0], [122700.0, 2.0], [124300.0, 1.0], [126700.0, 1.0], [100.0, 2.0], [201900.0, 1.0], [200.0, 1.0], [52500.0, 2.0], [53700.0, 4.0], [53300.0, 1.0], [219500.0, 1.0], [56500.0, 1.0], [58500.0, 1.0], [61700.0, 1.0], [65300.0, 1.0], [77800.0, 1.0], [80200.0, 1.0], [400.0, 3.0], [105800.0, 1.0], [106600.0, 1.0], [109000.0, 1.0], [109800.0, 4.0], [114600.0, 1.0], [116200.0, 1.0], [117800.0, 1.0], [126600.0, 1.0], [500.0, 2.0], [600.0, 3.0], [148400.0, 2.0], [700.0, 4.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 2.0], [2000.0, 4.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 1.0], [154100.0, 1.0], [2500.0, 2.0], [2600.0, 2.0], [2800.0, 1.0], [2700.0, 1.0], [2900.0, 4.0], [3100.0, 1.0], [3200.0, 3.0], [3300.0, 1.0], [3700.0, 4.0], [3600.0, 3.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 1.0], [4300.0, 3.0], [4200.0, 1.0], [4600.0, 2.0], [4500.0, 2.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5300.0, 2.0], [85700.0, 1.0], [5600.0, 2.0], [5500.0, 2.0], [5700.0, 1.0], [92100.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6500.0, 2.0], [6400.0, 1.0], [105700.0, 2.0], [6800.0, 1.0], [6700.0, 4.0], [6900.0, 3.0], [107300.0, 1.0], [7000.0, 3.0], [7100.0, 72.0], [7300.0, 4.0], [7400.0, 51.0], [7200.0, 2.0], [118500.0, 1.0], [7600.0, 39.0], [7500.0, 5.0], [7900.0, 42.0], [7800.0, 5.0], [7700.0, 6.0], [8000.0, 3.0], [8100.0, 39.0], [128900.0, 1.0], [8200.0, 6.0], [8400.0, 14.0], [8600.0, 7.0], [8700.0, 45.0], [8300.0, 5.0], [8500.0, 1.0], [8800.0, 7.0], [9200.0, 50.0], [9000.0, 16.0], [9100.0, 10.0], [8900.0, 28.0], [9300.0, 11.0], [9500.0, 5.0], [9700.0, 42.0], [9600.0, 7.0], [9400.0, 20.0], [10200.0, 28.0], [9900.0, 20.0], [10000.0, 9.0], [9800.0, 14.0], [10100.0, 3.0], [10400.0, 13.0], [10300.0, 8.0], [10700.0, 12.0], [10600.0, 9.0], [10500.0, 4.0], [11100.0, 3.0], [11200.0, 25.0], [10900.0, 6.0], [10800.0, 3.0], [11000.0, 15.0], [11400.0, 4.0], [11500.0, 14.0], [11700.0, 20.0], [11300.0, 3.0], [11900.0, 2.0], [12100.0, 4.0], [12000.0, 10.0], [11800.0, 6.0], [12200.0, 19.0], [12600.0, 1.0], [12500.0, 12.0], [12400.0, 2.0], [12700.0, 7.0], [12300.0, 5.0], [12800.0, 24.0], [13200.0, 31.0], [13300.0, 372.0], [13100.0, 7.0], [13000.0, 5.0], [13500.0, 8.0], [13800.0, 60.0], [13700.0, 3.0], [13400.0, 4.0], [13600.0, 1.0], [14300.0, 34.0], [13900.0, 5.0], [14100.0, 2.0], [14200.0, 2.0], [14000.0, 7.0], [14500.0, 16.0], [14700.0, 2.0], [14800.0, 6.0], [14400.0, 1.0], [15200.0, 1.0], [15300.0, 2.0], [14900.0, 1.0], [15000.0, 1.0], [15100.0, 1.0], [15800.0, 3.0], [15700.0, 1.0], [15500.0, 1.0], [15600.0, 2.0], [15400.0, 1.0], [16100.0, 3.0], [16300.0, 5.0], [15900.0, 2.0], [16200.0, 1.0], [16000.0, 1.0], [17000.0, 1.0], [17400.0, 2.0], [16400.0, 1.0], [18400.0, 1.0], [18000.0, 1.0], [17800.0, 1.0], [18600.0, 6.0], [23200.0, 1.0], [25000.0, 1.0], [26400.0, 2.0], [26200.0, 1.0], [28400.0, 2.0], [32000.0, 1.0], [149500.0, 1.0], [42400.0, 4.0], [44000.0, 1.0], [54000.0, 2.0], [218300.0, 2.0], [65600.0, 1.0], [69600.0, 2.0], [71200.0, 1.0], [78400.0, 1.0], [96000.0, 4.0], [95200.0, 2.0], [106400.0, 4.0], [107200.0, 3.0], [109600.0, 1.0], [108800.0, 1.0], [117600.0, 1.0], [122400.0, 1.0], [119200.0, 3.0], [134400.0, 2.0], [153600.0, 1.0], [93500.0, 1.0], [105500.0, 2.0], [103100.0, 3.0], [107100.0, 3.0], [117500.0, 1.0], [123100.0, 1.0], [219400.0, 1.0], [145100.0, 1.0], [43500.0, 2.0], [52300.0, 1.0], [52700.0, 4.0], [53500.0, 1.0], [58700.0, 1.0], [70200.0, 1.0], [90200.0, 1.0], [106200.0, 1.0], [105400.0, 5.0], [107000.0, 2.0], [111800.0, 3.0], [213200.0, 1.0], [88500.0, 5.0], [95700.0, 1.0], [106100.0, 1.0], [106900.0, 3.0], [118900.0, 1.0], [121300.0, 1.0], [120500.0, 1.0], [123700.0, 1.0], [170200.0, 1.0], [17300.0, 1.0], [16900.0, 1.0], [16500.0, 1.0], [17100.0, 5.0], [16700.0, 1.0], [17500.0, 1.0], [17900.0, 7.0], [18100.0, 1.0], [18700.0, 1.0], [22300.0, 1.0], [26300.0, 6.0], [27300.0, 2.0], [28900.0, 2.0], [30300.0, 1.0], [38600.0, 1.0], [148700.0, 3.0], [153500.0, 2.0], [52600.0, 1.0], [52200.0, 2.0], [53800.0, 1.0], [61800.0, 1.0], [65000.0, 1.0], [65400.0, 1.0], [84400.0, 1.0], [90000.0, 1.0], [86800.0, 1.0], [106000.0, 2.0], [105200.0, 3.0], [106800.0, 2.0], [116400.0, 5.0], [130000.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 219500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8053.0, "series": [{"data": [[1.0, 353.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5545.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 24.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 8053.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 28.51020408163265, "minX": 1.5392865E12, "maxY": 500.0, "series": [{"data": [[1.53928668E12, 202.25392670157063], [1.53928716E12, 28.51020408163265], [1.53928686E12, 381.1881188118808], [1.5392868E12, 322.6145772594751], [1.5392865E12, 29.614412136535993], [1.53928698E12, 492.8021680216802], [1.53928692E12, 442.8183894917187], [1.53928662E12, 140.5425400739828], [1.5392871E12, 348.52265861027166], [1.53928656E12, 80.26572668112807], [1.53928704E12, 500.0], [1.53928674E12, 264.78761061946886]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928716E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 170688.4, "series": [{"data": [[2.0, 581.0], [5.0, 2269.0], [6.0, 110842.0], [7.0, 1999.0], [8.0, 113360.5], [9.0, 2814.0], [10.0, 1348.0], [11.0, 1872.5], [12.0, 608.0], [13.0, 1744.5], [15.0, 624.0], [16.0, 109881.0], [18.0, 1808.0], [19.0, 840.0], [20.0, 2648.0], [21.0, 1582.0], [22.0, 800.0], [23.0, 1187.0], [24.0, 1285.0], [26.0, 2175.0], [27.0, 1351.5], [28.0, 1231.0], [31.0, 2208.5], [32.0, 107088.0], [33.0, 170688.4], [34.0, 1553.0], [35.0, 1405.0], [37.0, 74972.0], [38.0, 2079.5], [39.0, 61024.5], [42.0, 3269.0], [43.0, 2296.0], [45.0, 2757.5], [46.0, 2454.0], [48.0, 2469.0], [49.0, 90651.5], [51.0, 50139.666666666664], [53.0, 3158.0], [54.0, 2971.0], [55.0, 2833.0], [56.0, 2913.0], [59.0, 3774.0], [60.0, 3346.0], [63.0, 52633.666666666664], [65.0, 3694.0], [66.0, 4641.5], [67.0, 3789.0], [64.0, 148992.0], [68.0, 3920.0], [69.0, 3530.0], [72.0, 27318.0], [74.0, 5045.0], [75.0, 4174.0], [73.0, 95743.0], [77.0, 4579.0], [79.0, 5908.0], [80.0, 4646.0], [81.0, 5670.5], [82.0, 4515.0], [84.0, 5051.0], [85.0, 4346.0], [88.0, 5923.0], [89.0, 5143.0], [91.0, 5498.0], [92.0, 5279.0], [93.0, 5236.0], [94.0, 5487.0], [96.0, 57639.5], [97.0, 57747.5], [98.0, 5886.0], [99.0, 109825.0], [100.0, 6360.0], [101.0, 6522.0], [102.0, 6456.0], [103.0, 6578.0], [104.0, 6047.0], [105.0, 5704.0], [106.0, 105407.75], [108.0, 7934.0], [110.0, 7349.0], [111.0, 7947.0], [112.0, 8394.0], [114.0, 8760.0], [116.0, 8049.0], [117.0, 7397.0], [118.0, 7332.0], [120.0, 7114.0], [121.0, 7428.0], [122.0, 3919.0], [123.0, 30897.0], [125.0, 8624.0], [126.0, 30836.0], [128.0, 30785.5], [129.0, 9761.0], [130.0, 7913.0], [133.0, 9339.0], [135.0, 8841.0], [134.0, 85760.0], [132.0, 53779.5], [136.0, 8973.0], [137.0, 8985.0], [139.0, 9198.5], [140.0, 10355.5], [142.0, 9654.0], [143.0, 8786.0], [145.0, 9589.0], [147.0, 9200.5], [148.0, 9204.0], [149.0, 43974.2], [150.0, 31183.0], [151.0, 52501.0], [153.0, 10508.5], [154.0, 9822.0], [155.0, 9895.0], [156.0, 10179.0], [157.0, 10376.0], [159.0, 10370.0], [162.0, 12176.0], [163.0, 10946.5], [164.0, 10641.0], [165.0, 42496.0], [173.0, 12156.0], [178.0, 12752.0], [179.0, 12172.0], [180.0, 11469.0], [187.0, 11934.0], [185.0, 17886.0], [192.0, 10858.0], [199.0, 11662.0], [196.0, 18243.0], [195.0, 18264.0], [202.0, 15868.0], [203.0, 12018.0], [204.0, 15503.0], [200.0, 18030.0], [212.0, 11819.5], [222.0, 12297.0], [221.0, 12312.0], [219.0, 11897.0], [224.0, 10643.0], [225.0, 11466.0], [228.0, 10574.0], [229.0, 11680.0], [230.0, 11816.0], [233.0, 10651.0], [237.0, 11856.5], [239.0, 5605.5], [242.0, 12744.0], [245.0, 11665.0], [249.0, 11090.0], [250.0, 14154.5], [253.0, 9867.0], [268.0, 8708.0], [258.0, 9312.0], [259.0, 10326.0], [260.0, 11278.0], [261.0, 10609.0], [262.0, 58208.0], [265.0, 11776.0], [266.0, 9691.0], [269.0, 10732.0], [270.0, 13312.0], [271.0, 11667.5], [274.0, 8574.5], [272.0, 11546.666666666666], [275.0, 13279.25], [284.0, 26539.333333333336], [285.0, 11878.6], [286.0, 9729.0], [287.0, 14251.0], [276.0, 10383.0], [277.0, 13634.666666666666], [278.0, 9929.5], [280.0, 5276.5], [281.0, 6784.5], [282.0, 19376.0], [283.0, 13823.0], [289.0, 14164.0], [288.0, 10547.8], [290.0, 27801.6], [300.0, 6628.2], [301.0, 8692.333333333334], [302.0, 13312.0], [303.0, 15430.090909090908], [292.0, 53247.5], [293.0, 37183.75], [294.0, 11585.25], [295.0, 8064.0], [296.0, 4619.75], [297.0, 9891.25], [298.0, 24035.833333333332], [299.0, 13823.0], [305.0, 11679.833333333332], [304.0, 8364.75], [306.0, 11745.0], [307.0, 10980.0], [308.0, 11753.75], [309.0, 19045.833333333336], [310.0, 12702.25], [311.0, 9792.0], [312.0, 9599.5], [318.0, 7936.0], [319.0, 9053.714285714286], [316.0, 10878.0], [317.0, 13174.0], [313.0, 6501.6], [314.0, 11150.888888888889], [315.0, 8442.818181818182], [321.0, 23010.2], [320.0, 9664.666666666666], [322.0, 11716.6], [323.0, 10085.1], [324.0, 8007.8], [325.0, 11731.666666666666], [326.0, 13312.0], [327.0, 11851.0], [328.0, 9792.272727272728], [334.0, 9265.166666666668], [335.0, 16047.818181818184], [332.0, 7526.0], [333.0, 65432.71428571428], [329.0, 13312.0], [330.0, 10071.0], [331.0, 9452.23076923077], [337.0, 9708.75], [336.0, 10805.857142857143], [338.0, 11747.285714285716], [339.0, 9129.333333333334], [340.0, 8641.5], [341.0, 15100.0], [342.0, 13311.5], [343.0, 8951.2], [344.0, 6848.666666666667], [350.0, 16639.5], [351.0, 10073.5], [348.0, 12288.0], [349.0, 8315.5], [345.0, 12800.0], [346.0, 14109.0], [347.0, 11630.57142857143], [353.0, 12842.2], [352.0, 9993.166666666666], [354.0, 10831.75], [355.0, 15802.555555555555], [356.0, 11178.0], [357.0, 9130.0], [358.0, 7885.0], [359.0, 11047.75], [361.0, 14542.5], [367.0, 12499.0], [364.0, 12032.333333333332], [365.0, 13410.5], [362.0, 9613.555555555555], [363.0, 13784.0], [369.0, 9419.2], [368.0, 11831.4], [370.0, 6997.666666666667], [371.0, 9003.0], [372.0, 8978.199999999999], [373.0, 9048.5], [374.0, 12496.333333333334], [375.0, 10547.2], [376.0, 5972.333333333334], [382.0, 7172.0], [383.0, 9319.888888888889], [380.0, 9500.833333333332], [381.0, 7424.625], [377.0, 8192.0], [378.0, 13312.818181818182], [379.0, 8396.8], [385.0, 8087.75], [384.0, 10386.285714285714], [386.0, 4081.0], [387.0, 8243.90909090909], [388.0, 4478.0], [389.0, 25091.142857142855], [390.0, 8123.25], [391.0, 11294.375000000002], [392.0, 7684.0], [398.0, 7986.4], [399.0, 8191.75], [396.0, 10709.285714285714], [397.0, 6426.0], [393.0, 12284.0], [394.0, 18696.583333333332], [395.0, 68983.36363636363], [401.0, 12456.5], [400.0, 1.0], [402.0, 12505.4], [403.0, 9447.25], [404.0, 9216.0], [405.0, 5743.0], [406.0, 8219.2], [407.0, 11645.0], [408.0, 13093.571428571428], [414.0, 10029.444444444445], [415.0, 10589.5], [412.0, 8964.0], [413.0, 12191.0], [409.0, 11135.5], [410.0, 12856.0], [411.0, 12221.666666666666], [418.0, 18944.0], [417.0, 13450.5], [419.0, 11008.0], [428.0, 12204.333333333334], [429.0, 9463.0], [430.0, 8191.0], [431.0, 8447.0], [420.0, 13311.2], [421.0, 9606.0], [422.0, 11420.5], [423.0, 13823.5], [424.0, 10489.0], [425.0, 22029.428571428572], [426.0, 13312.0], [427.0, 23907.375000000004], [434.0, 12202.499999999998], [432.0, 11950.666666666666], [435.0, 10581.111111111111], [444.0, 7943.8], [445.0, 13824.0], [446.0, 5887.0999999999985], [447.0, 11151.333333333334], [436.0, 16662.8], [437.0, 9754.099999999999], [438.0, 12574.0], [439.0, 11946.666666666666], [440.0, 11861.333333333334], [441.0, 6115.0], [442.0, 32766.4], [443.0, 11389.2], [460.0, 80432.4], [450.0, 4096.5], [448.0, 12300.0], [451.0, 9796.875], [454.0, 9580.714285714284], [455.0, 12181.727272727272], [456.0, 17636.0], [457.0, 14848.0], [459.0, 11968.5], [461.0, 11136.199999999999], [462.0, 21470.666666666668], [463.0, 11574.0], [466.0, 11332.250000000002], [464.0, 11831.18181818182], [467.0, 10916.0], [476.0, 8358.6], [477.0, 38451.6], [478.0, 10189.0], [468.0, 8856.199999999999], [469.0, 13226.5], [471.0, 5379.25], [472.0, 5461.666666666666], [473.0, 8514.5], [474.0, 10911.666666666668], [475.0, 28244.0], [482.0, 12218.09090909091], [480.0, 10306.0], [483.0, 11051.666666666666], [492.0, 10924.0], [493.0, 11221.333333333334], [495.0, 22104.166666666668], [484.0, 13952.0], [485.0, 11007.833333333334], [486.0, 12357.642857142857], [487.0, 11065.285714285714], [488.0, 9012.8], [489.0, 79062.14285714286], [490.0, 13618.0], [491.0, 60245.0], [496.0, 11161.5], [497.0, 17186.2], [498.0, 11817.5], [499.0, 28501.666666666668], [500.0, 17582.542222222226]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[381.13712374581894, 16449.998885172812]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 582.5], [4.0, 541.5], [5.0, 583.3333333333334], [6.0, 88090.8], [7.0, 617.0], [8.0, 787.0], [9.0, 685.4285714285714], [10.0, 717.5], [11.0, 914.5454545454545], [12.0, 929.3846153846154], [13.0, 27967.125], [14.0, 852.0666666666666], [15.0, 867.75], [16.0, 33548.75], [17.0, 858.6842105263157], [18.0, 845.375], [19.0, 937.1111111111111], [20.0, 906.263157894737], [21.0, 1145.875], [22.0, 991.9166666666666], [23.0, 1373.529411764706], [24.0, 1420.1176470588234], [25.0, 1382.8], [26.0, 1275.5333333333335], [27.0, 28074.25], [28.0, 11578.52380952381], [29.0, 13170.277777777777], [30.0, 1647.1764705882354], [31.0, 1635.4375000000002], [32.0, 13316.722222222223], [33.0, 35123.57894736842], [34.0, 1691.1499999999999], [35.0, 1823.9999999999998], [36.0, 32044.476190476194], [37.0, 1733.7500000000002], [38.0, 8520.052631578947], [39.0, 1984.9444444444441], [40.0, 1805.5624999999998], [41.0, 2059.166666666667], [42.0, 2267.9375], [43.0, 2249.2941176470595], [44.0, 2215.529411764706], [45.0, 2319.25], [46.0, 2631.7692307692305], [47.0, 2583.294117647059], [48.0, 2683.3076923076924], [49.0, 23243.608695652176], [50.0, 2848.3846153846152], [51.0, 3077.1], [52.0, 3249.437500000001], [53.0, 2941.941176470588], [54.0, 3159.8749999999995], [55.0, 2947.384615384615], [56.0, 3215.8], [57.0, 16393.454545454544], [58.0, 2928.230769230769], [59.0, 14330.615384615385], [60.0, 3563.266666666667], [61.0, 18863.736842105263], [62.0, 3650.733333333333], [63.0, 3668.833333333333], [64.0, 17707.833333333336], [65.0, 3674.3], [66.0, 4238.5], [67.0, 4140.875], [68.0, 4199.894736842105], [69.0, 3937.0], [70.0, 3737.9285714285716], [71.0, 4083.1538461538466], [72.0, 4386.6], [73.0, 28386.478260869564], [74.0, 4493.9375], [75.0, 4691.25], [76.0, 4072.25], [77.0, 4242.0], [78.0, 4476.5], [79.0, 4747.076923076923], [80.0, 5303.153846153846], [81.0, 4983.357142857142], [82.0, 4459.238095238095], [83.0, 4495.454545454545], [84.0, 10305.117647058823], [85.0, 4574.533333333334], [86.0, 5044.083333333334], [87.0, 4971.642857142857], [88.0, 5061.9333333333325], [89.0, 5526.785714285715], [90.0, 12652.071428571428], [91.0, 5666.916666666666], [92.0, 5157.294117647059], [93.0, 11914.42857142857], [94.0, 5534.071428571428], [95.0, 27561.476190476194], [96.0, 5671.599999999999], [97.0, 6152.636363636364], [98.0, 6017.888888888889], [99.0, 7126.0], [100.0, 6689.25], [101.0, 6910.538461538462], [102.0, 7259.636363636364], [103.0, 6566.277777777778], [104.0, 17114.42105263158], [105.0, 14098.76923076923], [106.0, 46396.700000000004], [107.0, 6638.222222222223], [108.0, 16204.777777777777], [109.0, 13294.888888888889], [110.0, 13846.444444444445], [111.0, 13210.555555555555], [112.0, 12748.583333333334], [113.0, 11926.705882352942], [114.0, 12535.076923076922], [115.0, 12614.833333333334], [116.0, 11620.4375], [117.0, 11650.583333333332], [118.0, 10803.888888888889], [119.0, 11748.545454545454], [120.0, 12012.727272727272], [121.0, 12357.1], [122.0, 8550.63157894737], [123.0, 7966.384615384615], [124.0, 8312.846153846154], [125.0, 8118.583333333333], [126.0, 8149.555555555556], [127.0, 8535.999999999998], [128.0, 8213.214285714286], [129.0, 7890.272727272727], [130.0, 8523.916666666666], [131.0, 8090.25], [132.0, 8871.5], [133.0, 8973.333333333334], [134.0, 9757.545454545456], [135.0, 12344.666666666668], [136.0, 13639.0], [137.0, 9549.923076923076], [138.0, 12909.466666666667], [139.0, 12899.571428571428], [140.0, 9310.583333333332], [141.0, 9582.833333333334], [142.0, 9748.249999999998], [143.0, 8224.666666666666], [144.0, 10086.333333333334], [145.0, 10021.90909090909], [146.0, 9903.764705882355], [147.0, 9302.846153846152], [148.0, 10069.166666666668], [149.0, 9621.083333333334], [150.0, 9991.23076923077], [151.0, 10495.599999999999], [152.0, 9902.77777777778], [153.0, 10992.785714285716], [154.0, 10439.571428571431], [155.0, 13729.222222222223], [156.0, 8985.923076923074], [157.0, 10777.166666666666], [158.0, 11035.133333333333], [159.0, 10745.1], [160.0, 11239.176470588236], [161.0, 10770.083333333332], [162.0, 13475.272727272726], [163.0, 14718.099999999999], [164.0, 13594.833333333332], [165.0, 23177.46153846154], [166.0, 13134.6], [167.0, 12782.416666666668], [168.0, 12470.454545454544], [169.0, 13125.750000000002], [170.0, 13288.363636363638], [171.0, 13257.07142857143], [172.0, 13347.285714285714], [173.0, 13065.307692307691], [174.0, 12948.749999999998], [175.0, 12417.5], [176.0, 12672.153846153848], [177.0, 12564.888888888889], [178.0, 12756.083333333334], [179.0, 13724.9], [180.0, 12549.8], [181.0, 11959.466666666667], [182.0, 11381.25], [183.0, 11412.416666666668], [184.0, 12221.333333333332], [185.0, 12633.999999999998], [186.0, 12595.222222222223], [187.0, 13105.529411764706], [188.0, 11914.380952380952], [189.0, 11397.666666666666], [190.0, 10631.777777777777], [191.0, 10994.272727272728], [192.0, 11734.142857142855], [193.0, 11161.071428571431], [194.0, 13703.083333333334], [195.0, 10401.333333333334], [196.0, 10564.727272727274], [197.0, 11853.142857142857], [198.0, 12175.42857142857], [199.0, 11688.866666666667], [200.0, 12413.533333333331], [201.0, 12040.642857142859], [202.0, 11914.000000000002], [203.0, 12377.571428571428], [204.0, 11791.9], [205.0, 12991.846153846154], [206.0, 12422.846153846154], [207.0, 12189.090909090908], [208.0, 13488.916666666666], [209.0, 12326.333333333334], [210.0, 12209.999999999998], [211.0, 11851.375000000002], [212.0, 11822.307692307691], [213.0, 12144.5], [214.0, 11473.307692307691], [215.0, 11498.249999999998], [216.0, 10934.7], [217.0, 12070.461538461539], [218.0, 11487.562500000002], [219.0, 11257.181818181818], [220.0, 10954.384615384615], [221.0, 10966.714285714284], [222.0, 10547.25], [223.0, 11012.999999999998], [224.0, 11158.533333333331], [225.0, 11180.0], [226.0, 11369.555555555555], [227.0, 10735.25], [228.0, 11041.222222222223], [229.0, 10535.5], [230.0, 11296.333333333334], [231.0, 11598.916666666668], [232.0, 11743.375], [233.0, 11088.812499999998], [234.0, 11403.166666666666], [235.0, 10860.090909090908], [236.0, 11449.714285714284], [237.0, 11493.666666666668], [238.0, 11734.727272727274], [239.0, 11826.636363636364], [240.0, 12020.866666666667], [241.0, 11872.866666666663], [242.0, 11112.6], [243.0, 12006.3], [244.0, 12888.333333333332], [245.0, 11735.142857142857], [246.0, 12503.411764705881], [247.0, 11529.18181818182], [248.0, 12002.1875], [249.0, 11904.733333333334], [250.0, 11204.388888888889], [251.0, 10634.7], [252.0, 10995.470588235294], [253.0, 11109.357142857143], [254.0, 10212.0], [255.0, 10168.692307692309], [257.0, 20763.722222222223], [256.0, 10360.95], [258.0, 9465.333333333336], [259.0, 9917.818181818182], [260.0, 10137.266666666665], [261.0, 10702.384615384613], [262.0, 13301.64705882353], [263.0, 9919.266666666668], [264.0, 9981.384615384615], [270.0, 16746.941176470587], [271.0, 11721.846153846154], [268.0, 10438.199999999997], [269.0, 10424.888888888887], [265.0, 10614.133333333333], [266.0, 16376.375000000004], [267.0, 10283.846153846152], [273.0, 10439.750000000002], [272.0, 11036.2], [274.0, 20037.142857142862], [275.0, 10662.727272727274], [276.0, 11087.666666666666], [277.0, 11187.666666666666], [278.0, 18564.187499999996], [279.0, 10684.846153846154], [280.0, 19440.75], [286.0, 14104.48], [287.0, 10231.615384615385], [284.0, 18734.380952380954], [285.0, 10689.916666666666], [281.0, 10549.000000000002], [282.0, 10944.714285714284], [283.0, 11000.75], [289.0, 12726.0], [288.0, 10329.999999999998], [290.0, 25472.999999999996], [291.0, 18979.5], [292.0, 14580.25], [293.0, 16262.833333333332], [294.0, 11119.25], [295.0, 11303.526315789473], [296.0, 10128.777777777777], [302.0, 12424.166666666664], [303.0, 10955.000000000002], [300.0, 16588.375000000004], [301.0, 12860.933333333332], [297.0, 12081.5], [298.0, 19612.687500000004], [299.0, 11372.076923076924], [305.0, 10346.999999999998], [304.0, 11384.499999999998], [306.0, 11305.687500000002], [307.0, 13012.666666666666], [308.0, 11264.826086956524], [309.0, 11801.499999999998], [310.0, 11509.714285714286], [311.0, 16345.178571428576], [312.0, 9784.000000000002], [318.0, 10610.555555555555], [319.0, 9823.0], [316.0, 10607.375], [317.0, 15692.25], [313.0, 9890.066666666666], [314.0, 9766.384615384615], [315.0, 9823.944444444445], [321.0, 9475.359999999997], [320.0, 11630.545454545454], [322.0, 12213.416666666668], [323.0, 10054.520000000002], [324.0, 9545.3], [325.0, 15632.347826086954], [326.0, 11821.538461538463], [327.0, 19566.769230769227], [328.0, 10254.965517241379], [334.0, 10041.642857142859], [335.0, 9884.75], [332.0, 9420.863636363638], [333.0, 22943.466666666667], [329.0, 10196.916666666668], [330.0, 10241.384615384615], [331.0, 10234.718749999998], [337.0, 15996.333333333332], [336.0, 12401.76923076923], [338.0, 10427.031250000004], [339.0, 16378.64705882353], [340.0, 10857.388888888889], [341.0, 11127.777777777777], [342.0, 9150.478260869566], [343.0, 10056.826086956524], [344.0, 9591.357142857143], [350.0, 10597.272727272726], [351.0, 10754.4375], [348.0, 11004.25], [349.0, 9336.5625], [345.0, 9865.250000000004], [346.0, 10161.418604651164], [347.0, 9420.599999999999], [353.0, 9455.170731707318], [352.0, 11176.999999999998], [354.0, 9536.52380952381], [355.0, 12594.874999999998], [356.0, 11051.999999999998], [357.0, 10551.166666666666], [358.0, 10687.47619047619], [359.0, 11006.045454545456], [360.0, 10627.07142857143], [366.0, 11806.615384615383], [367.0, 10546.93939393939], [364.0, 12757.705882352942], [365.0, 11355.7], [361.0, 9986.904761904761], [362.0, 9579.695652173914], [363.0, 11802.521739130432], [369.0, 12001.884615384615], [368.0, 10901.1], [370.0, 12013.631578947368], [371.0, 11027.478260869566], [372.0, 10423.038461538463], [373.0, 10883.0], [374.0, 10426.863636363638], [375.0, 11646.363636363636], [376.0, 10918.538461538463], [382.0, 9817.913043478262], [383.0, 10890.173913043478], [380.0, 10499.041666666668], [381.0, 12372.925925925925], [377.0, 11222.599999999999], [378.0, 10846.61904761905], [379.0, 9309.36842105263], [385.0, 10584.277777777777], [384.0, 10806.592592592595], [386.0, 11714.900000000001], [387.0, 10422.608695652176], [388.0, 10290.0], [389.0, 10770.315789473683], [390.0, 14934.38095238095], [391.0, 11000.190476190477], [392.0, 9738.13333333333], [398.0, 8676.32], [399.0, 9849.894736842105], [396.0, 10506.583333333334], [397.0, 10351.653846153846], [393.0, 19260.583333333336], [394.0, 14678.258064516129], [395.0, 15102.90909090909], [401.0, 10364.5], [400.0, 10136.999999999998], [402.0, 9811.000000000002], [403.0, 8469.78947368421], [404.0, 10657.272727272726], [405.0, 10094.76923076923], [406.0, 11395.187500000002], [407.0, 11476.103448275862], [408.0, 12434.863636363634], [414.0, 10428.04347826087], [415.0, 10135.722222222223], [412.0, 10777.736842105262], [413.0, 11800.529411764706], [409.0, 12079.789473684214], [410.0, 12491.777777777777], [411.0, 11980.545454545454], [417.0, 10124.4], [416.0, 9905.909090909092], [418.0, 9884.29411764706], [419.0, 10339.695652173916], [420.0, 9763.76], [421.0, 10896.913043478258], [422.0, 11825.066666666668], [423.0, 10759.157894736843], [424.0, 10477.545454545456], [430.0, 10419.529411764708], [431.0, 8574.166666666666], [428.0, 10560.279999999999], [429.0, 9812.470588235296], [425.0, 15952.375], [426.0, 11801.684210526315], [427.0, 16526.333333333336], [433.0, 9902.866666666667], [432.0, 10456.555555555557], [434.0, 10885.241379310344], [435.0, 10676.499999999996], [436.0, 15518.800000000001], [437.0, 9888.5], [438.0, 11050.736842105263], [439.0, 11166.636363636362], [440.0, 13555.166666666668], [446.0, 8107.888888888888], [447.0, 10226.863636363636], [444.0, 9546.96], [445.0, 10406.538461538461], [441.0, 8685.615384615385], [442.0, 15216.55], [443.0, 10270.0], [449.0, 9923.428571428572], [448.0, 10581.500000000002], [450.0, 10339.13043478261], [451.0, 8327.272727272728], [452.0, 9903.0], [453.0, 11147.64705882353], [454.0, 10450.629629629628], [455.0, 11024.7], [456.0, 9658.3125], [462.0, 15120.21875], [463.0, 10752.933333333332], [460.0, 16763.45], [461.0, 11674.636363636362], [457.0, 10954.125], [458.0, 11610.375], [459.0, 11439.76923076923], [465.0, 10079.8125], [464.0, 10520.064516129032], [466.0, 11036.15], [467.0, 9536.81818181818], [468.0, 10919.129032258066], [469.0, 9973.937499999998], [470.0, 10842.714285714284], [471.0, 9524.35294117647], [472.0, 14872.434782608696], [478.0, 10199.636363636364], [479.0, 9809.142857142857], [476.0, 9786.526315789477], [477.0, 9810.03125], [473.0, 11465.037037037035], [474.0, 10292.19230769231], [475.0, 9380.884615384615], [481.0, 9759.714285714284], [480.0, 9276.083333333332], [482.0, 11673.600000000002], [483.0, 10417.684210526315], [484.0, 10740.56], [485.0, 10559.85], [486.0, 11031.242424242424], [487.0, 13097.678571428574], [488.0, 9536.48148148148], [494.0, 8954.352941176468], [495.0, 20719.083333333332], [492.0, 10056.285714285714], [493.0, 10824.142857142859], [489.0, 45067.2380952381], [490.0, 10767.70588235294], [491.0, 8909.869565217392], [496.0, 11994.473684210525], [497.0, 11200.800000000001], [498.0, 9902.000000000002], [499.0, 27710.090909090915], [500.0, 13802.107040913415]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[322.52968036529694, 11609.59603614105]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 31.0], [3.0, 32.0], [4.0, 27.0], [5.0, 28.0], [6.0, 109714.0], [7.0, 33.0], [8.0, 110131.0], [9.0, 24.0], [10.0, 109266.5], [11.0, 38.0], [12.0, 36.0], [13.0, 145585.66666666666], [14.0, 721.0], [15.0, 36.0], [16.0, 30.0], [17.0, 21.0], [18.0, 83.0], [19.0, 168.0], [20.0, 155.0], [21.0, 496.0], [22.0, 446.0], [23.0, 235.0], [24.0, 519.0], [25.0, 647.0], [26.0, 645.0], [27.0, 106897.0], [28.0, 142145.33333333334], [29.0, 106810.5], [30.0, 835.0], [31.0, 769.0], [32.0, 844.0], [33.0, 934.0], [34.0, 798.0], [36.0, 998.0], [38.0, 1155.0], [39.0, 1028.0], [40.0, 1114.0], [41.0, 1290.0], [42.0, 1399.0], [43.0, 1545.0], [44.0, 1480.0], [45.0, 1632.0], [46.0, 1774.0], [48.0, 2283.5], [49.0, 89969.5], [51.0, 73602.5], [52.0, 2552.0], [53.0, 2282.0], [54.0, 75263.0], [55.0, 2053.0], [56.0, 2201.0], [57.0, 2097.0], [58.0, 2142.0], [59.0, 2377.0], [60.0, 2906.0], [61.0, 2681.0], [62.0, 2532.0], [63.0, 75670.0], [64.0, 76239.5], [66.0, 3295.0], [67.0, 3252.0], [68.0, 3049.0], [69.0, 2764.0], [70.0, 2996.0], [72.0, 49757.0], [73.0, 3738.0], [74.0, 3607.0], [75.0, 3357.0], [76.0, 3256.0], [77.0, 3632.0], [78.0, 3953.0], [80.0, 4663.0], [81.0, 3999.0], [82.0, 3883.5], [83.0, 3637.0], [84.0, 3768.0], [85.0, 3864.0], [87.0, 4353.0], [88.0, 74635.33333333333], [89.0, 4341.0], [90.0, 4576.0], [91.0, 57103.0], [92.0, 4559.0], [93.0, 4647.0], [94.0, 4851.0], [95.0, 50087.5], [97.0, 5071.0], [98.0, 5603.0], [99.0, 5584.0], [100.0, 5705.0], [102.0, 6872.0], [103.0, 5831.5], [104.0, 5345.0], [105.0, 55646.0], [106.0, 69855.0], [108.0, 49194.0], [109.0, 6721.0], [111.0, 7622.0], [113.0, 8129.0], [114.0, 7835.0], [115.0, 7556.0], [116.0, 7149.5], [117.0, 6574.0], [118.0, 6500.0], [119.0, 6455.0], [121.0, 6995.0], [122.0, 22565.333333333336], [123.0, 6771.0], [124.0, 30409.0], [126.0, 7449.0], [127.0, 7199.0], [125.0, 54054.0], [128.0, 22624.666666666664], [130.0, 30659.25], [131.0, 7790.0], [133.0, 8070.0], [134.0, 47101.5], [135.0, 8299.0], [136.0, 8191.0], [137.0, 31014.0], [138.0, 8702.0], [139.0, 8603.0], [140.0, 30634.0], [141.0, 30319.0], [142.0, 30382.5], [143.0, 30415.0], [144.0, 8599.0], [145.0, 30598.0], [146.0, 8610.0], [147.0, 8616.0], [148.0, 8827.0], [149.0, 30782.5], [150.0, 8734.0], [152.0, 9376.0], [153.0, 9284.0], [154.0, 9053.0], [155.0, 9006.0], [161.0, 26452.5], [165.0, 34737.25], [167.0, 17301.0], [168.0, 11976.0], [175.0, 14344.0], [181.0, 13722.333333333334], [182.0, 17928.0], [188.0, 14289.333333333334], [191.0, 17003.0], [186.0, 17869.0], [184.0, 17906.0], [192.0, 11172.0], [199.0, 18048.0], [193.0, 18113.0], [200.0, 52633.0], [206.0, 13056.0], [214.0, 11692.0], [215.0, 25074.0], [217.0, 9993.0], [218.0, 11357.666666666666], [223.0, 10282.0], [225.0, 13294.0], [226.0, 10062.0], [227.0, 14496.0], [229.0, 11121.5], [231.0, 23181.5], [224.0, 12130.0], [233.0, 39018.0], [237.0, 13426.0], [239.0, 33532.5], [236.0, 11279.0], [235.0, 11296.0], [241.0, 23207.0], [243.0, 13889.0], [247.0, 10889.0], [248.0, 10730.0], [249.0, 32712.0], [250.0, 11421.0], [253.0, 66029.66666666667], [255.0, 60411.0], [251.0, 12801.0], [257.0, 42720.0], [256.0, 7952.0], [258.0, 15738.0], [259.0, 11137.5], [260.0, 40442.6], [261.0, 20660.0], [262.0, 78028.75], [263.0, 9730.0], [264.0, 106095.0], [270.0, 93748.0], [268.0, 30312.166666666668], [269.0, 13233.0], [265.0, 14144.0], [266.0, 74201.0], [267.0, 24383.5], [274.0, 29848.0], [272.0, 34103.25], [275.0, 12970.5], [284.0, 84339.6], [285.0, 12492.0], [286.0, 38294.16666666667], [287.0, 11980.666666666668], [276.0, 84400.0], [278.0, 13354.0], [279.0, 11219.333333333334], [280.0, 83156.66666666667], [281.0, 9682.0], [282.0, 54871.666666666664], [283.0, 11507.0], [289.0, 12314.4], [288.0, 44331.83333333333], [290.0, 44541.428571428565], [300.0, 60324.5], [301.0, 15797.8], [302.0, 13312.0], [303.0, 10869.857142857143], [292.0, 79108.33333333333], [293.0, 8594.5], [294.0, 7582.4], [295.0, 11707.5], [296.0, 25255.222222222223], [297.0, 13417.75], [298.0, 8856.5], [305.0, 9352.666666666666], [304.0, 10911.0], [306.0, 12078.0], [307.0, 44218.5], [308.0, 9277.625], [309.0, 13482.0], [310.0, 12465.0], [311.0, 23870.499999999996], [312.0, 9328.57142857143], [319.0, 38484.0], [316.0, 9962.2], [317.0, 48482.0], [313.0, 25122.666666666664], [314.0, 8845.888888888889], [315.0, 10635.0], [321.0, 7167.0], [320.0, 9877.0], [322.0, 12370.800000000001], [323.0, 10201.545454545454], [324.0, 13259.0], [325.0, 9359.111111111111], [326.0, 10276.714285714284], [327.0, 10730.25], [328.0, 7307.25], [334.0, 8459.8], [335.0, 10019.923076923076], [332.0, 9498.666666666666], [333.0, 42574.33333333333], [329.0, 58511.5], [330.0, 10049.0], [331.0, 16705.666666666668], [337.0, 31262.5], [336.0, 8150.25], [338.0, 8935.0], [339.0, 30435.5], [340.0, 8956.333333333334], [341.0, 11520.0], [342.0, 9883.25], [343.0, 10860.166666666666], [344.0, 10717.666666666666], [350.0, 14084.0], [351.0, 9073.0], [348.0, 10966.166666666666], [349.0, 8453.0], [345.0, 9920.5], [346.0, 13305.0], [347.0, 11628.571428571428], [353.0, 9600.714285714286], [352.0, 6741.666666666666], [354.0, 8046.272727272727], [355.0, 11904.0], [356.0, 11414.75], [357.0, 10422.0], [358.0, 14080.0], [359.0, 11059.833333333332], [360.0, 9282.666666666666], [367.0, 13311.5], [364.0, 15653.857142857143], [365.0, 12957.166666666668], [361.0, 7829.75], [362.0, 7285.0], [363.0, 12846.5], [369.0, 12507.285714285714], [368.0, 9453.25], [370.0, 13752.714285714284], [371.0, 14535.5], [372.0, 9996.666666666666], [373.0, 11230.5], [374.0, 11776.0], [375.0, 13267.333333333334], [376.0, 7409.333333333333], [382.0, 8066.0], [383.0, 10735.363636363638], [380.0, 10222.25], [381.0, 10770.636363636364], [377.0, 8192.0], [378.0, 10052.111111111111], [379.0, 9334.285714285714], [385.0, 10794.25], [384.0, 11239.727272727272], [386.0, 10854.25], [387.0, 5921.545454545455], [388.0, 13001.0], [389.0, 9578.5], [390.0, 11522.5], [391.0, 9333.545454545454], [392.0, 10643.0], [398.0, 7342.11111111111], [399.0, 9218.666666666668], [396.0, 9408.833333333334], [397.0, 8398.5], [393.0, 7121.0], [394.0, 17733.428571428572], [395.0, 63164.125], [401.0, 7494.5], [400.0, 9166.5], [402.0, 13316.75], [403.0, 8260.875], [404.0, 9216.0], [405.0, 8191.5], [406.0, 7469.2], [407.0, 13312.8], [408.0, 10523.363636363636], [414.0, 12619.2], [415.0, 11683.75], [412.0, 9695.0], [413.0, 11029.0], [409.0, 13204.0], [410.0, 13824.0], [411.0, 13305.333333333334], [418.0, 11892.0], [419.0, 13284.333333333334], [428.0, 11434.666666666668], [429.0, 14472.0], [430.0, 12013.25], [431.0, 8111.5], [420.0, 11832.888888888887], [421.0, 17385.777777777777], [422.0, 9955.888888888889], [423.0, 8246.0], [424.0, 11276.333333333334], [425.0, 13341.0], [426.0, 12044.666666666666], [427.0, 23018.4], [433.0, 8945.5], [432.0, 12800.0], [434.0, 13887.0], [435.0, 12551.75], [436.0, 32301.0], [437.0, 12647.5], [438.0, 8981.5], [439.0, 12856.857142857143], [440.0, 9945.75], [446.0, 9319.75], [447.0, 13316.0], [444.0, 8082.571428571428], [445.0, 11072.8], [441.0, 8027.25], [442.0, 35833.25], [443.0, 13313.0], [450.0, 8192.0], [448.0, 11749.800000000001], [451.0, 9962.75], [460.0, 47554.66666666667], [461.0, 13775.0], [462.0, 29519.0], [452.0, 8509.0], [453.0, 9756.5], [454.0, 10496.2], [455.0, 8192.166666666668], [456.0, 12138.0], [457.0, 11008.0], [458.0, 9446.5], [459.0, 12852.333333333334], [466.0, 7306.6], [464.0, 11223.333333333334], [467.0, 11782.333333333334], [476.0, 10155.4], [477.0, 45397.416666666664], [478.0, 10317.0], [479.0, 9051.0], [468.0, 11562.384615384613], [469.0, 10791.199999999999], [470.0, 9300.5], [471.0, 9701.250000000002], [472.0, 8361.666666666666], [473.0, 11904.199999999999], [474.0, 11409.7], [475.0, 10124.3], [482.0, 9984.0], [481.0, 134400.0], [483.0, 10230.454545454546], [492.0, 4867.0], [493.0, 12257.333333333334], [494.0, 7424.0], [495.0, 59097.42857142857], [484.0, 11746.0], [485.0, 10305.666666666666], [486.0, 9870.923076923078], [487.0, 10068.6], [488.0, 10005.0], [489.0, 76775.00000000001], [490.0, 13823.0], [491.0, 8581.666666666668], [496.0, 12507.333333333334], [497.0, 20426.35714285714], [498.0, 11563.999999999998], [499.0, 32107.166666666668], [500.0, 19424.2910798122], [1.0, 109816.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[375.87976694915284, 18919.690677966115]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 182.63333333333333, "minX": 1.5392865E12, "maxY": 979858.0833333334, "series": [{"data": [[1.53928668E12, 871405.5166666667], [1.53928716E12, 269.5], [1.53928686E12, 885570.2], [1.5392868E12, 871552.1166666667], [1.5392865E12, 830451.0833333334], [1.53928698E12, 910390.4166666666], [1.53928692E12, 954802.8333333334], [1.53928662E12, 858243.9], [1.5392871E12, 379990.65], [1.53928656E12, 979858.0833333334], [1.53928704E12, 915651.85], [1.53928674E12, 915557.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928668E12, 3117.483333333333], [1.53928716E12, 182.63333333333333], [1.53928686E12, 7080.666666666667], [1.5392868E12, 6682.8], [1.5392865E12, 3279.0666666666666], [1.53928698E12, 7160.9], [1.53928692E12, 6835.133333333333], [1.53928662E12, 3367.0], [1.5392871E12, 2570.1833333333334], [1.53928656E12, 3812.8333333333335], [1.53928704E12, 7176.166666666667], [1.53928674E12, 4031.7166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928716E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 698.5714285714284, "minX": 1.5392865E12, "maxY": 194847.8695652174, "series": [{"data": [[1.53928668E12, 11690.05882352941], [1.53928716E12, 180773.92307692312], [1.53928686E12, 10203.059405940596], [1.5392868E12, 11667.120401337788], [1.5392865E12, 2016.0425531914893], [1.53928698E12, 17974.813114754088], [1.53928692E12, 13765.769230769225], [1.53928662E12, 9069.458333333334], [1.5392871E12, 48852.96774193549], [1.53928656E12, 5027.27450980392], [1.53928704E12, 17788.267148014434], [1.53928674E12, 13135.024691358025]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928668E12, 11730.25034387897], [1.53928716E12, 194847.8695652174], [1.53928686E12, 10755.819166666664], [1.5392868E12, 11422.329379562034], [1.5392865E12, 1623.4316546762602], [1.53928698E12, 13970.668036154464], [1.53928692E12, 11035.913793103467], [1.53928662E12, 9676.64804469273], [1.5392871E12, 24168.430703624752], [1.53928656E12, 4871.4411764705865], [1.53928704E12, 13196.41898148147], [1.53928674E12, 12376.66219512197]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928668E12, 15786.3], [1.53928716E12, 194136.53846153847], [1.53928686E12, 10242.587301587298], [1.5392868E12, 15506.96875000001], [1.5392865E12, 698.5714285714284], [1.53928698E12, 20456.640866873062], [1.53928692E12, 13695.919413919428], [1.53928662E12, 8343.617021276596], [1.5392871E12, 42918.67], [1.53928656E12, 4023.218181818182], [1.53928704E12, 18907.03891050585], [1.53928674E12, 39199.27586206897]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928716E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 698.5102040816328, "minX": 1.5392865E12, "maxY": 194847.8695652174, "series": [{"data": [[1.53928668E12, 11690.05882352941], [1.53928716E12, 180773.92307692312], [1.53928686E12, 10203.056105610563], [1.5392868E12, 11667.120401337788], [1.5392865E12, 2016.0212765957442], [1.53928698E12, 17974.813114754088], [1.53928692E12, 13765.769230769225], [1.53928662E12, 9069.458333333334], [1.5392871E12, 48852.956989247316], [1.53928656E12, 5027.27450980392], [1.53928704E12, 17788.267148014434], [1.53928674E12, 13135.024691358025]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928668E12, 11729.781292984868], [1.53928716E12, 194847.8695652174], [1.53928686E12, 10755.50833333335], [1.5392868E12, 11422.004562043769], [1.5392865E12, 1622.930935251799], [1.53928698E12, 13970.328677074778], [1.53928692E12, 11035.544334975368], [1.53928662E12, 9676.171787709496], [1.5392871E12, 24167.968017057567], [1.53928656E12, 4870.995098039219], [1.53928704E12, 13196.072530864198], [1.53928674E12, 12376.209756097554]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928668E12, 15786.3], [1.53928716E12, 194136.53846153847], [1.53928686E12, 10242.587301587298], [1.5392868E12, 15506.965625000003], [1.5392865E12, 698.5102040816328], [1.53928698E12, 20456.640866873062], [1.53928692E12, 13695.919413919428], [1.53928662E12, 8343.595744680852], [1.5392871E12, 42918.64999999999], [1.53928656E12, 4023.218181818182], [1.53928704E12, 18907.03112840467], [1.53928674E12, 39199.27586206897]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928716E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.02127659574468085, "minX": 1.5392865E12, "maxY": 1.9387755102040818, "series": [{"data": [[1.53928668E12, 0.47058823529411764], [1.53928716E12, 0.46153846153846156], [1.53928686E12, 0.4752475247524752], [1.5392868E12, 0.7558528428093652], [1.5392865E12, 0.02127659574468085], [1.53928698E12, 0.5016393442622948], [1.53928692E12, 0.5269230769230768], [1.53928662E12, 0.8333333333333331], [1.5392871E12, 0.4623655913978495], [1.53928656E12, 0.8823529411764703], [1.53928704E12, 0.5306859205776177], [1.53928674E12, 0.8024691358024689]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928668E12, 0.5612104539202202], [1.53928716E12, 0.5652173913043478], [1.53928686E12, 0.44583333333333336], [1.5392868E12, 0.5784671532846714], [1.5392865E12, 0.4474820143884894], [1.53928698E12, 0.405916187345932], [1.53928692E12, 0.3784893267651892], [1.53928662E12, 0.5949720670391058], [1.5392871E12, 0.39445628997867827], [1.53928656E12, 0.5772058823529419], [1.53928704E12, 0.3858024691358025], [1.53928674E12, 0.5256097560975609]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928668E12, 0.7999999999999999], [1.53928716E12, 0.4615384615384615], [1.53928686E12, 0.6126984126984125], [1.5392868E12, 0.7156250000000003], [1.5392865E12, 1.9387755102040818], [1.53928698E12, 0.4489164086687306], [1.53928692E12, 0.45054945054945084], [1.53928662E12, 1.297872340425532], [1.5392871E12, 0.31000000000000005], [1.53928656E12, 0.7454545454545453], [1.53928704E12, 0.3852140077821014], [1.53928674E12, 0.767241379310345]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928716E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.5392865E12, "maxY": 109016.0, "series": [{"data": [[1.53928668E12, 52633.0], [1.53928686E12, 18106.0], [1.5392868E12, 16300.0], [1.5392865E12, 7328.0], [1.53928698E12, 21699.0], [1.53928692E12, 109016.0], [1.53928662E12, 17301.0], [1.5392871E12, 58953.0], [1.53928656E12, 11091.0], [1.53928704E12, 67548.0], [1.53928674E12, 65630.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928668E12, 9586.0], [1.53928686E12, 8883.0], [1.5392868E12, 8310.0], [1.5392865E12, 21.0], [1.53928698E12, 8122.0], [1.53928692E12, 8674.0], [1.53928662E12, 6455.0], [1.5392871E12, 10018.0], [1.53928656E12, 2045.0], [1.53928704E12, 8434.0], [1.53928674E12, 8966.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928668E12, 11941.4], [1.53928686E12, 12125.8], [1.5392868E12, 12053.900000000001], [1.5392865E12, 2640.8], [1.53928698E12, 12065.7], [1.53928692E12, 12073.3], [1.53928662E12, 10318.400000000003], [1.5392871E12, 12245.7], [1.53928656E12, 6213.0], [1.53928704E12, 12097.2], [1.53928674E12, 11974.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928668E12, 15047.620000000006], [1.53928686E12, 15642.07999999999], [1.5392868E12, 15587.669999999998], [1.5392865E12, 3983.22], [1.53928698E12, 15632.489999999998], [1.53928692E12, 15613.650000000001], [1.53928662E12, 13142.640000000003], [1.5392871E12, 17049.080000000016], [1.53928656E12, 8659.67], [1.53928704E12, 15742.919999999998], [1.53928674E12, 15605.119999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928668E12, 12558.4], [1.53928686E12, 13006.199999999997], [1.5392868E12, 12871.25], [1.5392865E12, 2868.7], [1.53928698E12, 12977.149999999994], [1.53928692E12, 12958.249999999998], [1.53928662E12, 11278.8], [1.5392871E12, 13366.349999999999], [1.53928656E12, 6837.549999999999], [1.53928704E12, 13040.399999999998], [1.53928674E12, 12675.199999999995]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392871E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 212993.0, "series": [{"data": [[16.0, 10530.5], [11.0, 11348.0], [12.0, 11578.0], [13.0, 6979.0], [28.0, 10569.0], [29.0, 10065.0], [15.0, 4619.0], [30.0, 10638.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13568.0], [0.0, 212993.0], [11.0, 13316.0], [12.0, 10172.5], [13.0, 2.0], [28.0, 10240.0], [29.0, 13311.0], [15.0, 1.0], [30.0, 12288.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 212993.0, "series": [{"data": [[16.0, 10530.0], [11.0, 11348.0], [12.0, 11578.0], [13.0, 6979.0], [28.0, 10568.0], [29.0, 10064.0], [15.0, 4619.0], [30.0, 10637.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13568.0], [0.0, 212993.0], [11.0, 13316.0], [12.0, 10172.5], [13.0, 2.0], [28.0, 10240.0], [29.0, 13311.0], [15.0, 1.0], [30.0, 12288.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.5166666666666666, "minX": 1.5392865E12, "maxY": 31.3, "series": [{"data": [[1.53928668E12, 13.733333333333333], [1.53928686E12, 31.3], [1.5392868E12, 29.583333333333332], [1.5392865E12, 14.05], [1.53928698E12, 31.216666666666665], [1.53928692E12, 30.183333333333334], [1.53928662E12, 14.516666666666667], [1.5392871E12, 3.5166666666666666], [1.53928656E12, 16.366666666666667], [1.53928704E12, 30.5], [1.53928674E12, 17.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392871E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.5392865E12, "maxY": 17.166666666666668, "series": [{"data": [[1.53928668E12, 12.35], [1.53928686E12, 12.516666666666667], [1.5392868E12, 12.683333333333334], [1.5392865E12, 12.3], [1.53928698E12, 12.966666666666667], [1.53928692E12, 13.483333333333333], [1.53928662E12, 12.633333333333333], [1.5392871E12, 5.733333333333333], [1.53928656E12, 14.433333333333334], [1.53928704E12, 12.9], [1.53928674E12, 13.05]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928668E12, 0.2833333333333333], [1.53928686E12, 0.5], [1.5392868E12, 0.6333333333333333], [1.5392865E12, 0.7833333333333333], [1.53928698E12, 0.4666666666666667], [1.53928692E12, 0.43333333333333335], [1.53928662E12, 0.7833333333333333], [1.5392871E12, 0.05], [1.53928656E12, 0.85], [1.53928704E12, 0.2833333333333333], [1.53928674E12, 0.38333333333333336]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928668E12, 0.1], [1.53928716E12, 0.8166666666666667], [1.53928686E12, 17.066666666666666], [1.5392868E12, 14.983333333333333], [1.5392865E12, 0.1], [1.53928698E12, 17.066666666666666], [1.53928692E12, 15.1], [1.53928662E12, 0.1], [1.5392871E12, 4.866666666666666], [1.53928656E12, 0.08333333333333333], [1.53928704E12, 17.166666666666668], [1.53928674E12, 3.3666666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928686E12, 0.21666666666666667], [1.5392868E12, 0.2833333333333333], [1.53928698E12, 0.25], [1.53928692E12, 0.16666666666666666], [1.5392871E12, 0.38333333333333336], [1.53928704E12, 0.15], [1.53928674E12, 0.15]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928716E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5392865E12, "maxY": 13.516666666666667, "series": [{"data": [[1.53928668E12, 0.3], [1.53928686E12, 0.48333333333333334], [1.5392868E12, 0.8], [1.5392865E12, 0.8166666666666667], [1.53928698E12, 0.48333333333333334], [1.53928692E12, 0.4166666666666667], [1.53928662E12, 0.7833333333333333], [1.5392871E12, 0.5333333333333333], [1.53928656E12, 0.9166666666666666], [1.53928704E12, 0.31666666666666665], [1.53928674E12, 0.4166666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928668E12, 0.2833333333333333], [1.53928686E12, 0.5], [1.5392868E12, 0.6333333333333333], [1.5392865E12, 0.7833333333333333], [1.53928698E12, 0.4666666666666667], [1.53928692E12, 0.43333333333333335], [1.53928662E12, 0.7833333333333333], [1.5392871E12, 0.05], [1.53928656E12, 0.85], [1.53928704E12, 0.2833333333333333], [1.53928674E12, 0.38333333333333336]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928668E12, 12.05], [1.53928686E12, 12.033333333333333], [1.5392868E12, 11.883333333333333], [1.5392865E12, 11.483333333333333], [1.53928698E12, 12.483333333333333], [1.53928692E12, 13.066666666666666], [1.53928662E12, 11.85], [1.5392871E12, 5.2], [1.53928656E12, 13.516666666666667], [1.53928704E12, 12.583333333333334], [1.53928674E12, 12.633333333333333]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928668E12, 0.03333333333333333], [1.53928716E12, 0.21666666666666667], [1.53928686E12, 4.766666666666667], [1.5392868E12, 4.533333333333333], [1.53928698E12, 4.9], [1.53928692E12, 4.133333333333334], [1.5392871E12, 1.1333333333333333], [1.53928704E12, 3.966666666666667], [1.53928674E12, 1.5166666666666666]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928668E12, 0.06666666666666667], [1.53928716E12, 0.38333333333333336], [1.53928686E12, 7.966666666666667], [1.5392868E12, 6.383333333333334], [1.5392865E12, 0.1], [1.53928698E12, 7.8], [1.53928692E12, 7.233333333333333], [1.53928662E12, 0.08333333333333333], [1.5392871E12, 2.6166666666666667], [1.53928656E12, 0.08333333333333333], [1.53928704E12, 9.016666666666667], [1.53928674E12, 1.0333333333333334]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928716E12, 0.21666666666666667], [1.53928686E12, 4.55], [1.5392868E12, 4.35], [1.53928698E12, 4.616666666666666], [1.53928692E12, 3.9], [1.53928662E12, 0.016666666666666666], [1.5392871E12, 1.5], [1.53928704E12, 4.333333333333333], [1.53928674E12, 0.9666666666666667]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928716E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
