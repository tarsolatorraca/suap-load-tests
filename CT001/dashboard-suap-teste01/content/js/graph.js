/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 211712.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 589.0], [5.6, 598.0], [5.7, 608.0], [5.8, 616.0], [5.9, 623.0], [6.0, 731.0], [6.1, 946.0], [6.2, 1165.0], [6.3, 1189.0], [6.4, 1339.0], [6.5, 1474.0], [6.6, 1588.0], [6.7, 1681.0], [6.8, 1744.0], [6.9, 1827.0], [7.0, 1893.0], [7.1, 1985.0], [7.2, 1986.0], [7.3, 2116.0], [7.4, 2331.0], [7.5, 2365.0], [7.6, 2389.0], [7.7, 2412.0], [7.8, 2544.0], [7.9, 2939.0], [8.0, 2984.0], [8.1, 3034.0], [8.2, 3098.0], [8.3, 3103.0], [8.4, 3173.0], [8.5, 3241.0], [8.6, 3306.0], [8.7, 3388.0], [8.8, 3488.0], [8.9, 3562.0], [9.0, 3850.0], [9.1, 4261.0], [9.2, 4639.0], [9.3, 4777.0], [9.4, 4868.0], [9.5, 5050.0], [9.6, 5128.0], [9.7, 5666.0], [9.8, 5841.0], [9.9, 6024.0], [10.0, 6177.0], [10.1, 6324.0], [10.2, 6380.0], [10.3, 6602.0], [10.4, 6925.0], [10.5, 6949.0], [10.6, 7166.0], [10.7, 7167.0], [10.8, 7167.0], [10.9, 7167.0], [11.0, 7167.0], [11.1, 7167.0], [11.2, 7167.0], [11.3, 7168.0], [11.4, 7168.0], [11.5, 7168.0], [11.6, 7168.0], [11.7, 7168.0], [11.8, 7168.0], [11.9, 7168.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7169.0], [12.6, 7171.0], [12.7, 7172.0], [12.8, 7172.0], [12.9, 7386.0], [13.0, 7419.0], [13.1, 7419.0], [13.2, 7419.0], [13.3, 7422.0], [13.4, 7423.0], [13.5, 7423.0], [13.6, 7423.0], [13.7, 7423.0], [13.8, 7423.0], [13.9, 7423.0], [14.0, 7423.0], [14.1, 7424.0], [14.2, 7424.0], [14.3, 7424.0], [14.4, 7424.0], [14.5, 7424.0], [14.6, 7424.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7559.0], [15.1, 7674.0], [15.2, 7675.0], [15.3, 7676.0], [15.4, 7676.0], [15.5, 7677.0], [15.6, 7679.0], [15.7, 7679.0], [15.8, 7679.0], [15.9, 7680.0], [16.0, 7680.0], [16.1, 7680.0], [16.2, 7680.0], [16.3, 7680.0], [16.4, 7680.0], [16.5, 7680.0], [16.6, 7680.0], [16.7, 7682.0], [16.8, 7684.0], [16.9, 7824.0], [17.0, 7879.0], [17.1, 7911.0], [17.2, 7934.0], [17.3, 7934.0], [17.4, 7935.0], [17.5, 7935.0], [17.6, 7935.0], [17.7, 7935.0], [17.8, 7935.0], [17.9, 7935.0], [18.0, 7935.0], [18.1, 7935.0], [18.2, 7936.0], [18.3, 7936.0], [18.4, 7936.0], [18.5, 7936.0], [18.6, 7936.0], [18.7, 7936.0], [18.8, 7939.0], [18.9, 7939.0], [19.0, 7940.0], [19.1, 8026.0], [19.2, 8185.0], [19.3, 8185.0], [19.4, 8188.0], [19.5, 8189.0], [19.6, 8190.0], [19.7, 8191.0], [19.8, 8191.0], [19.9, 8191.0], [20.0, 8191.0], [20.1, 8191.0], [20.2, 8191.0], [20.3, 8192.0], [20.4, 8192.0], [20.5, 8192.0], [20.6, 8192.0], [20.7, 8192.0], [20.8, 8192.0], [20.9, 8192.0], [21.0, 8192.0], [21.1, 8195.0], [21.2, 8195.0], [21.3, 8196.0], [21.4, 8196.0], [21.5, 8348.0], [21.6, 8446.0], [21.7, 8447.0], [21.8, 8447.0], [21.9, 8447.0], [22.0, 8448.0], [22.1, 8452.0], [22.2, 8520.0], [22.3, 8540.0], [22.4, 8681.0], [22.5, 8699.0], [22.6, 8699.0], [22.7, 8700.0], [22.8, 8700.0], [22.9, 8703.0], [23.0, 8703.0], [23.1, 8703.0], [23.2, 8703.0], [23.3, 8703.0], [23.4, 8704.0], [23.5, 8704.0], [23.6, 8704.0], [23.7, 8704.0], [23.8, 8704.0], [23.9, 8704.0], [24.0, 8704.0], [24.1, 8704.0], [24.2, 8704.0], [24.3, 8707.0], [24.4, 8708.0], [24.5, 8756.0], [24.6, 8824.0], [24.7, 8860.0], [24.8, 8932.0], [24.9, 8959.0], [25.0, 8959.0], [25.1, 8960.0], [25.2, 8960.0], [25.3, 8960.0], [25.4, 8995.0], [25.5, 9013.0], [25.6, 9078.0], [25.7, 9212.0], [25.8, 9214.0], [25.9, 9214.0], [26.0, 9215.0], [26.1, 9215.0], [26.2, 9215.0], [26.3, 9215.0], [26.4, 9215.0], [26.5, 9215.0], [26.6, 9215.0], [26.7, 9215.0], [26.8, 9215.0], [26.9, 9216.0], [27.0, 9216.0], [27.1, 9216.0], [27.2, 9216.0], [27.3, 9216.0], [27.4, 9216.0], [27.5, 9216.0], [27.6, 9216.0], [27.7, 9216.0], [27.8, 9216.0], [27.9, 9216.0], [28.0, 9216.0], [28.1, 9216.0], [28.2, 9219.0], [28.3, 9219.0], [28.4, 9220.0], [28.5, 9267.0], [28.6, 9267.0], [28.7, 9284.0], [28.8, 9306.0], [28.9, 9334.0], [29.0, 9444.0], [29.1, 9468.0], [29.2, 9468.0], [29.3, 9469.0], [29.4, 9471.0], [29.5, 9472.0], [29.6, 9472.0], [29.7, 9475.0], [29.8, 9476.0], [29.9, 9476.0], [30.0, 9476.0], [30.1, 9476.0], [30.2, 9484.0], [30.3, 9490.0], [30.4, 9510.0], [30.5, 9519.0], [30.6, 9539.0], [30.7, 9608.0], [30.8, 9669.0], [30.9, 9723.0], [31.0, 9723.0], [31.1, 9724.0], [31.2, 9724.0], [31.3, 9727.0], [31.4, 9727.0], [31.5, 9727.0], [31.6, 9727.0], [31.7, 9727.0], [31.8, 9728.0], [31.9, 9728.0], [32.0, 9728.0], [32.1, 9728.0], [32.2, 9728.0], [32.3, 9728.0], [32.4, 9728.0], [32.5, 9728.0], [32.6, 9728.0], [32.7, 9729.0], [32.8, 9739.0], [32.9, 9754.0], [33.0, 9764.0], [33.1, 9772.0], [33.2, 9818.0], [33.3, 9842.0], [33.4, 9905.0], [33.5, 9961.0], [33.6, 9968.0], [33.7, 9982.0], [33.8, 9983.0], [33.9, 9983.0], [34.0, 9983.0], [34.1, 9983.0], [34.2, 9984.0], [34.3, 9984.0], [34.4, 9984.0], [34.5, 9984.0], [34.6, 9984.0], [34.7, 9984.0], [34.8, 10003.0], [34.9, 10015.0], [35.0, 10040.0], [35.1, 10061.0], [35.2, 10071.0], [35.3, 10087.0], [35.4, 10126.0], [35.5, 10132.0], [35.6, 10160.0], [35.7, 10198.0], [35.8, 10205.0], [35.9, 10216.0], [36.0, 10219.0], [36.1, 10222.0], [36.2, 10236.0], [36.3, 10236.0], [36.4, 10237.0], [36.5, 10238.0], [36.6, 10239.0], [36.7, 10239.0], [36.8, 10239.0], [36.9, 10239.0], [37.0, 10239.0], [37.1, 10240.0], [37.2, 10240.0], [37.3, 10240.0], [37.4, 10240.0], [37.5, 10243.0], [37.6, 10243.0], [37.7, 10266.0], [37.8, 10278.0], [37.9, 10299.0], [38.0, 10308.0], [38.1, 10315.0], [38.2, 10324.0], [38.3, 10343.0], [38.4, 10354.0], [38.5, 10354.0], [38.6, 10363.0], [38.7, 10381.0], [38.8, 10387.0], [38.9, 10408.0], [39.0, 10446.0], [39.1, 10449.0], [39.2, 10470.0], [39.3, 10495.0], [39.4, 10495.0], [39.5, 10496.0], [39.6, 10499.0], [39.7, 10517.0], [39.8, 10523.0], [39.9, 10551.0], [40.0, 10596.0], [40.1, 10615.0], [40.2, 10630.0], [40.3, 10658.0], [40.4, 10685.0], [40.5, 10718.0], [40.6, 10747.0], [40.7, 10748.0], [40.8, 10750.0], [40.9, 10751.0], [41.0, 10751.0], [41.1, 10751.0], [41.2, 10751.0], [41.3, 10751.0], [41.4, 10751.0], [41.5, 10752.0], [41.6, 10752.0], [41.7, 10752.0], [41.8, 10753.0], [41.9, 10755.0], [42.0, 10783.0], [42.1, 10889.0], [42.2, 10909.0], [42.3, 10941.0], [42.4, 10949.0], [42.5, 10961.0], [42.6, 10982.0], [42.7, 10987.0], [42.8, 10995.0], [42.9, 11003.0], [43.0, 11003.0], [43.1, 11004.0], [43.2, 11006.0], [43.3, 11007.0], [43.4, 11007.0], [43.5, 11007.0], [43.6, 11007.0], [43.7, 11008.0], [43.8, 11008.0], [43.9, 11008.0], [44.0, 11008.0], [44.1, 11038.0], [44.2, 11045.0], [44.3, 11060.0], [44.4, 11138.0], [44.5, 11168.0], [44.6, 11196.0], [44.7, 11231.0], [44.8, 11247.0], [44.9, 11261.0], [45.0, 11263.0], [45.1, 11263.0], [45.2, 11263.0], [45.3, 11264.0], [45.4, 11264.0], [45.5, 11264.0], [45.6, 11265.0], [45.7, 11267.0], [45.8, 11268.0], [45.9, 11287.0], [46.0, 11356.0], [46.1, 11404.0], [46.2, 11411.0], [46.3, 11511.0], [46.4, 11515.0], [46.5, 11520.0], [46.6, 11523.0], [46.7, 11525.0], [46.8, 11543.0], [46.9, 11643.0], [47.0, 11645.0], [47.1, 11666.0], [47.2, 11695.0], [47.3, 11702.0], [47.4, 11720.0], [47.5, 11731.0], [47.6, 11754.0], [47.7, 11775.0], [47.8, 11775.0], [47.9, 11775.0], [48.0, 11776.0], [48.1, 11776.0], [48.2, 11776.0], [48.3, 11776.0], [48.4, 11776.0], [48.5, 11776.0], [48.6, 11776.0], [48.7, 11786.0], [48.8, 11802.0], [48.9, 11815.0], [49.0, 11816.0], [49.1, 11851.0], [49.2, 11856.0], [49.3, 11875.0], [49.4, 11886.0], [49.5, 11910.0], [49.6, 11947.0], [49.7, 11968.0], [49.8, 11985.0], [49.9, 12031.0], [50.0, 12113.0], [50.1, 12130.0], [50.2, 12166.0], [50.3, 12201.0], [50.4, 12252.0], [50.5, 12282.0], [50.6, 12284.0], [50.7, 12285.0], [50.8, 12286.0], [50.9, 12287.0], [51.0, 12287.0], [51.1, 12287.0], [51.2, 12287.0], [51.3, 12288.0], [51.4, 12288.0], [51.5, 12288.0], [51.6, 12290.0], [51.7, 12291.0], [51.8, 12303.0], [51.9, 12343.0], [52.0, 12421.0], [52.1, 12540.0], [52.2, 12542.0], [52.3, 12543.0], [52.4, 12547.0], [52.5, 12559.0], [52.6, 12620.0], [52.7, 12718.0], [52.8, 12721.0], [52.9, 12792.0], [53.0, 12796.0], [53.1, 12796.0], [53.2, 12798.0], [53.3, 12799.0], [53.4, 12799.0], [53.5, 12799.0], [53.6, 12799.0], [53.7, 12799.0], [53.8, 12799.0], [53.9, 12799.0], [54.0, 12800.0], [54.1, 12800.0], [54.2, 12800.0], [54.3, 12848.0], [54.4, 12848.0], [54.5, 12911.0], [54.6, 13021.0], [54.7, 13055.0], [54.8, 13056.0], [54.9, 13056.0], [55.0, 13056.0], [55.1, 13056.0], [55.2, 13059.0], [55.3, 13060.0], [55.4, 13078.0], [55.5, 13211.0], [55.6, 13265.0], [55.7, 13298.0], [55.8, 13306.0], [55.9, 13307.0], [56.0, 13307.0], [56.1, 13307.0], [56.2, 13307.0], [56.3, 13307.0], [56.4, 13307.0], [56.5, 13307.0], [56.6, 13307.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13308.0], [57.9, 13308.0], [58.0, 13308.0], [58.1, 13308.0], [58.2, 13308.0], [58.3, 13308.0], [58.4, 13309.0], [58.5, 13309.0], [58.6, 13309.0], [58.7, 13310.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13310.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13310.0], [59.4, 13310.0], [59.5, 13310.0], [59.6, 13310.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13313.0], [73.8, 13314.0], [73.9, 13315.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13315.0], [74.4, 13315.0], [74.5, 13315.0], [74.6, 13315.0], [74.7, 13315.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13383.0], [75.8, 13435.0], [75.9, 13490.0], [76.0, 13567.0], [76.1, 13567.0], [76.2, 13567.0], [76.3, 13567.0], [76.4, 13567.0], [76.5, 13568.0], [76.6, 13568.0], [76.7, 13585.0], [76.8, 13616.0], [76.9, 13816.0], [77.0, 13820.0], [77.1, 13820.0], [77.2, 13820.0], [77.3, 13821.0], [77.4, 13822.0], [77.5, 13822.0], [77.6, 13823.0], [77.7, 13823.0], [77.8, 13823.0], [77.9, 13823.0], [78.0, 13823.0], [78.1, 13823.0], [78.2, 13823.0], [78.3, 13823.0], [78.4, 13823.0], [78.5, 13823.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13825.0], [80.9, 13827.0], [81.0, 13827.0], [81.1, 13827.0], [81.2, 13828.0], [81.3, 14061.0], [81.4, 14075.0], [81.5, 14079.0], [81.6, 14080.0], [81.7, 14080.0], [81.8, 14083.0], [81.9, 14084.0], [82.0, 14200.0], [82.1, 14306.0], [82.2, 14330.0], [82.3, 14331.0], [82.4, 14331.0], [82.5, 14331.0], [82.6, 14331.0], [82.7, 14332.0], [82.8, 14332.0], [82.9, 14332.0], [83.0, 14334.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14337.0], [86.6, 14339.0], [86.7, 14340.0], [86.8, 14422.0], [86.9, 14587.0], [87.0, 14591.0], [87.1, 14591.0], [87.2, 14592.0], [87.3, 14592.0], [87.4, 14592.0], [87.5, 14843.0], [87.6, 14844.0], [87.7, 14845.0], [87.8, 14847.0], [87.9, 14847.0], [88.0, 14847.0], [88.1, 14848.0], [88.2, 14848.0], [88.3, 14848.0], [88.4, 14849.0], [88.5, 14851.0], [88.6, 14851.0], [88.7, 15070.0], [88.8, 15104.0], [88.9, 15201.0], [89.0, 15305.0], [89.1, 15356.0], [89.2, 15358.0], [89.3, 15614.0], [89.4, 15614.0], [89.5, 15616.0], [89.6, 15616.0], [89.7, 15872.0], [89.8, 15934.0], [89.9, 16128.0], [90.0, 16336.0], [90.1, 16379.0], [90.2, 16382.0], [90.3, 16383.0], [90.4, 16384.0], [90.5, 16384.0], [90.6, 16481.0], [90.7, 16750.0], [90.8, 17099.0], [90.9, 17152.0], [91.0, 17152.0], [91.1, 17407.0], [91.2, 17900.0], [91.3, 17935.0], [91.4, 18176.0], [91.5, 18318.0], [91.6, 18981.0], [91.7, 20354.0], [91.8, 20479.0], [91.9, 20480.0], [92.0, 25344.0], [92.1, 26368.0], [92.2, 26370.0], [92.3, 26372.0], [92.4, 26373.0], [92.5, 26624.0], [92.6, 26624.0], [92.7, 27392.0], [92.8, 27392.0], [92.9, 27395.0], [93.0, 27652.0], [93.1, 28672.0], [93.2, 29552.0], [93.3, 31282.0], [93.4, 43004.0], [93.5, 44032.0], [93.6, 50278.0], [93.7, 51128.0], [93.8, 52150.0], [93.9, 53013.0], [94.0, 53528.0], [94.1, 53760.0], [94.2, 54201.0], [94.3, 55320.0], [94.4, 55323.0], [94.5, 57364.0], [94.6, 57364.0], [94.7, 62695.0], [94.8, 67368.0], [94.9, 69635.0], [95.0, 69651.0], [95.1, 71679.0], [95.2, 71679.0], [95.3, 73984.0], [95.4, 75287.0], [95.5, 88840.0], [95.6, 95234.0], [95.7, 95235.0], [95.8, 96512.0], [95.9, 98068.0], [96.0, 98074.0], [96.1, 103675.0], [96.2, 103675.0], [96.3, 105467.0], [96.4, 105471.0], [96.5, 106752.0], [96.6, 107263.0], [96.7, 107263.0], [96.8, 107264.0], [96.9, 107264.0], [97.0, 108030.0], [97.1, 109055.0], [97.2, 110332.0], [97.3, 110336.0], [97.4, 110663.0], [97.5, 111329.0], [97.6, 111359.0], [97.7, 111695.0], [97.8, 113663.0], [97.9, 113664.0], [98.0, 114154.0], [98.1, 114224.0], [98.2, 114944.0], [98.3, 115712.0], [98.4, 117758.0], [98.5, 119040.0], [98.6, 123391.0], [98.7, 123392.0], [98.8, 123392.0], [98.9, 124413.0], [99.0, 132606.0], [99.1, 132607.0], [99.2, 136188.0], [99.3, 145152.0], [99.4, 153599.0], [99.5, 153599.0], [99.6, 157184.0], [99.7, 158207.0], [99.8, 158208.0], [99.9, 210432.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 2.0], [2.7, 515.0], [2.8, 578.0], [2.9, 632.0], [3.0, 664.0], [3.1, 683.0], [3.2, 709.0], [3.3, 729.0], [3.4, 756.0], [3.5, 789.0], [3.6, 811.0], [3.7, 840.0], [3.8, 859.0], [3.9, 875.0], [4.0, 901.0], [4.1, 924.0], [4.2, 943.0], [4.3, 958.0], [4.4, 1035.0], [4.5, 1067.0], [4.6, 1091.0], [4.7, 1139.0], [4.8, 1174.0], [4.9, 1221.0], [5.0, 1249.0], [5.1, 1330.0], [5.2, 1356.0], [5.3, 1383.0], [5.4, 1415.0], [5.5, 1440.0], [5.6, 1476.0], [5.7, 1497.0], [5.8, 1533.0], [5.9, 1560.0], [6.0, 1600.0], [6.1, 1620.0], [6.2, 1634.0], [6.3, 1665.0], [6.4, 1680.0], [6.5, 1700.0], [6.6, 1737.0], [6.7, 1763.0], [6.8, 1784.0], [6.9, 1796.0], [7.0, 1823.0], [7.1, 1837.0], [7.2, 1851.0], [7.3, 1882.0], [7.4, 1919.0], [7.5, 1950.0], [7.6, 1989.0], [7.7, 2005.0], [7.8, 2036.0], [7.9, 2069.0], [8.0, 2097.0], [8.1, 2126.0], [8.2, 2166.0], [8.3, 2203.0], [8.4, 2240.0], [8.5, 2266.0], [8.6, 2309.0], [8.7, 2359.0], [8.8, 2421.0], [8.9, 2459.0], [9.0, 2474.0], [9.1, 2485.0], [9.2, 2527.0], [9.3, 2553.0], [9.4, 2588.0], [9.5, 2619.0], [9.6, 2667.0], [9.7, 2688.0], [9.8, 2722.0], [9.9, 2793.0], [10.0, 2833.0], [10.1, 2910.0], [10.2, 2969.0], [10.3, 3008.0], [10.4, 3065.0], [10.5, 3088.0], [10.6, 3119.0], [10.7, 3153.0], [10.8, 3187.0], [10.9, 3221.0], [11.0, 3265.0], [11.1, 3279.0], [11.2, 3319.0], [11.3, 3373.0], [11.4, 3419.0], [11.5, 3441.0], [11.6, 3480.0], [11.7, 3498.0], [11.8, 3541.0], [11.9, 3576.0], [12.0, 3606.0], [12.1, 3625.0], [12.2, 3649.0], [12.3, 3687.0], [12.4, 3711.0], [12.5, 3792.0], [12.6, 3849.0], [12.7, 3905.0], [12.8, 3953.0], [12.9, 3984.0], [13.0, 4124.0], [13.1, 4225.0], [13.2, 4289.0], [13.3, 4412.0], [13.4, 4482.0], [13.5, 4584.0], [13.6, 4628.0], [13.7, 4764.0], [13.8, 4838.0], [13.9, 4963.0], [14.0, 5061.0], [14.1, 5108.0], [14.2, 5146.0], [14.3, 5192.0], [14.4, 5263.0], [14.5, 5327.0], [14.6, 5357.0], [14.7, 5414.0], [14.8, 5473.0], [14.9, 5556.0], [15.0, 5601.0], [15.1, 5671.0], [15.2, 5716.0], [15.3, 5779.0], [15.4, 5813.0], [15.5, 5886.0], [15.6, 5930.0], [15.7, 5997.0], [15.8, 6057.0], [15.9, 6106.0], [16.0, 6182.0], [16.1, 6241.0], [16.2, 6332.0], [16.3, 6406.0], [16.4, 6490.0], [16.5, 6621.0], [16.6, 6705.0], [16.7, 6837.0], [16.8, 7011.0], [16.9, 7112.0], [17.0, 7159.0], [17.1, 7167.0], [17.2, 7167.0], [17.3, 7168.0], [17.4, 7168.0], [17.5, 7168.0], [17.6, 7168.0], [17.7, 7168.0], [17.8, 7169.0], [17.9, 7172.0], [18.0, 7212.0], [18.1, 7304.0], [18.2, 7395.0], [18.3, 7423.0], [18.4, 7423.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7425.0], [18.9, 7476.0], [19.0, 7590.0], [19.1, 7645.0], [19.2, 7676.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7683.0], [19.6, 7759.0], [19.7, 7820.0], [19.8, 7850.0], [19.9, 7902.0], [20.0, 7935.0], [20.1, 7935.0], [20.2, 7936.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7940.0], [20.7, 7964.0], [20.8, 8005.0], [20.9, 8034.0], [21.0, 8087.0], [21.1, 8128.0], [21.2, 8186.0], [21.3, 8191.0], [21.4, 8191.0], [21.5, 8192.0], [21.6, 8192.0], [21.7, 8193.0], [21.8, 8196.0], [21.9, 8269.0], [22.0, 8335.0], [22.1, 8372.0], [22.2, 8431.0], [22.3, 8443.0], [22.4, 8447.0], [22.5, 8448.0], [22.6, 8451.0], [22.7, 8494.0], [22.8, 8553.0], [22.9, 8595.0], [23.0, 8640.0], [23.1, 8665.0], [23.2, 8698.0], [23.3, 8700.0], [23.4, 8703.0], [23.5, 8703.0], [23.6, 8704.0], [23.7, 8704.0], [23.8, 8704.0], [23.9, 8707.0], [24.0, 8713.0], [24.1, 8757.0], [24.2, 8803.0], [24.3, 8819.0], [24.4, 8838.0], [24.5, 8868.0], [24.6, 8899.0], [24.7, 8933.0], [24.8, 8947.0], [24.9, 8959.0], [25.0, 8964.0], [25.1, 8995.0], [25.2, 9029.0], [25.3, 9075.0], [25.4, 9102.0], [25.5, 9138.0], [25.6, 9163.0], [25.7, 9206.0], [25.8, 9214.0], [25.9, 9215.0], [26.0, 9215.0], [26.1, 9216.0], [26.2, 9216.0], [26.3, 9216.0], [26.4, 9219.0], [26.5, 9226.0], [26.6, 9250.0], [26.7, 9267.0], [26.8, 9289.0], [26.9, 9312.0], [27.0, 9325.0], [27.1, 9345.0], [27.2, 9362.0], [27.3, 9399.0], [27.4, 9424.0], [27.5, 9446.0], [27.6, 9468.0], [27.7, 9471.0], [27.8, 9476.0], [27.9, 9489.0], [28.0, 9506.0], [28.1, 9528.0], [28.2, 9543.0], [28.3, 9555.0], [28.4, 9584.0], [28.5, 9603.0], [28.6, 9623.0], [28.7, 9640.0], [28.8, 9665.0], [28.9, 9677.0], [29.0, 9704.0], [29.1, 9724.0], [29.2, 9724.0], [29.3, 9727.0], [29.4, 9727.0], [29.5, 9728.0], [29.6, 9728.0], [29.7, 9731.0], [29.8, 9743.0], [29.9, 9760.0], [30.0, 9782.0], [30.1, 9800.0], [30.2, 9809.0], [30.3, 9824.0], [30.4, 9836.0], [30.5, 9849.0], [30.6, 9871.0], [30.7, 9879.0], [30.8, 9891.0], [30.9, 9905.0], [31.0, 9914.0], [31.1, 9921.0], [31.2, 9935.0], [31.3, 9942.0], [31.4, 9951.0], [31.5, 9956.0], [31.6, 9961.0], [31.7, 9968.0], [31.8, 9979.0], [31.9, 9982.0], [32.0, 9984.0], [32.1, 9985.0], [32.2, 9995.0], [32.3, 10002.0], [32.4, 10012.0], [32.5, 10021.0], [32.6, 10027.0], [32.7, 10034.0], [32.8, 10039.0], [32.9, 10042.0], [33.0, 10047.0], [33.1, 10056.0], [33.2, 10062.0], [33.3, 10067.0], [33.4, 10073.0], [33.5, 10078.0], [33.6, 10083.0], [33.7, 10088.0], [33.8, 10094.0], [33.9, 10102.0], [34.0, 10108.0], [34.1, 10115.0], [34.2, 10122.0], [34.3, 10129.0], [34.4, 10135.0], [34.5, 10145.0], [34.6, 10152.0], [34.7, 10158.0], [34.8, 10161.0], [34.9, 10166.0], [35.0, 10169.0], [35.1, 10174.0], [35.2, 10177.0], [35.3, 10182.0], [35.4, 10189.0], [35.5, 10193.0], [35.6, 10201.0], [35.7, 10208.0], [35.8, 10217.0], [35.9, 10220.0], [36.0, 10227.0], [36.1, 10232.0], [36.2, 10237.0], [36.3, 10239.0], [36.4, 10240.0], [36.5, 10240.0], [36.6, 10241.0], [36.7, 10244.0], [36.8, 10251.0], [36.9, 10255.0], [37.0, 10262.0], [37.1, 10268.0], [37.2, 10274.0], [37.3, 10279.0], [37.4, 10282.0], [37.5, 10287.0], [37.6, 10290.0], [37.7, 10295.0], [37.8, 10299.0], [37.9, 10307.0], [38.0, 10310.0], [38.1, 10313.0], [38.2, 10316.0], [38.3, 10322.0], [38.4, 10324.0], [38.5, 10330.0], [38.6, 10334.0], [38.7, 10339.0], [38.8, 10342.0], [38.9, 10348.0], [39.0, 10353.0], [39.1, 10358.0], [39.2, 10361.0], [39.3, 10365.0], [39.4, 10372.0], [39.5, 10376.0], [39.6, 10381.0], [39.7, 10383.0], [39.8, 10388.0], [39.9, 10391.0], [40.0, 10394.0], [40.1, 10396.0], [40.2, 10401.0], [40.3, 10405.0], [40.4, 10410.0], [40.5, 10415.0], [40.6, 10417.0], [40.7, 10421.0], [40.8, 10424.0], [40.9, 10430.0], [41.0, 10434.0], [41.1, 10438.0], [41.2, 10443.0], [41.3, 10446.0], [41.4, 10450.0], [41.5, 10454.0], [41.6, 10460.0], [41.7, 10464.0], [41.8, 10467.0], [41.9, 10470.0], [42.0, 10473.0], [42.1, 10476.0], [42.2, 10484.0], [42.3, 10488.0], [42.4, 10493.0], [42.5, 10497.0], [42.6, 10499.0], [42.7, 10503.0], [42.8, 10506.0], [42.9, 10510.0], [43.0, 10514.0], [43.1, 10519.0], [43.2, 10521.0], [43.3, 10527.0], [43.4, 10533.0], [43.5, 10538.0], [43.6, 10542.0], [43.7, 10548.0], [43.8, 10553.0], [43.9, 10559.0], [44.0, 10564.0], [44.1, 10568.0], [44.2, 10575.0], [44.3, 10580.0], [44.4, 10582.0], [44.5, 10587.0], [44.6, 10592.0], [44.7, 10599.0], [44.8, 10602.0], [44.9, 10610.0], [45.0, 10619.0], [45.1, 10622.0], [45.2, 10625.0], [45.3, 10628.0], [45.4, 10630.0], [45.5, 10632.0], [45.6, 10635.0], [45.7, 10640.0], [45.8, 10645.0], [45.9, 10649.0], [46.0, 10654.0], [46.1, 10659.0], [46.2, 10662.0], [46.3, 10665.0], [46.4, 10673.0], [46.5, 10675.0], [46.6, 10681.0], [46.7, 10685.0], [46.8, 10689.0], [46.9, 10693.0], [47.0, 10697.0], [47.1, 10701.0], [47.2, 10707.0], [47.3, 10712.0], [47.4, 10715.0], [47.5, 10720.0], [47.6, 10724.0], [47.7, 10729.0], [47.8, 10734.0], [47.9, 10736.0], [48.0, 10741.0], [48.1, 10744.0], [48.2, 10747.0], [48.3, 10749.0], [48.4, 10751.0], [48.5, 10752.0], [48.6, 10755.0], [48.7, 10757.0], [48.8, 10760.0], [48.9, 10764.0], [49.0, 10767.0], [49.1, 10771.0], [49.2, 10775.0], [49.3, 10778.0], [49.4, 10782.0], [49.5, 10786.0], [49.6, 10793.0], [49.7, 10798.0], [49.8, 10800.0], [49.9, 10804.0], [50.0, 10811.0], [50.1, 10816.0], [50.2, 10818.0], [50.3, 10824.0], [50.4, 10827.0], [50.5, 10833.0], [50.6, 10838.0], [50.7, 10840.0], [50.8, 10842.0], [50.9, 10845.0], [51.0, 10851.0], [51.1, 10853.0], [51.2, 10858.0], [51.3, 10862.0], [51.4, 10867.0], [51.5, 10873.0], [51.6, 10879.0], [51.7, 10886.0], [51.8, 10891.0], [51.9, 10897.0], [52.0, 10900.0], [52.1, 10904.0], [52.2, 10907.0], [52.3, 10911.0], [52.4, 10915.0], [52.5, 10918.0], [52.6, 10922.0], [52.7, 10929.0], [52.8, 10932.0], [52.9, 10937.0], [53.0, 10943.0], [53.1, 10946.0], [53.2, 10949.0], [53.3, 10954.0], [53.4, 10960.0], [53.5, 10965.0], [53.6, 10968.0], [53.7, 10973.0], [53.8, 10977.0], [53.9, 10981.0], [54.0, 10984.0], [54.1, 10990.0], [54.2, 10993.0], [54.3, 10998.0], [54.4, 11001.0], [54.5, 11004.0], [54.6, 11006.0], [54.7, 11007.0], [54.8, 11008.0], [54.9, 11009.0], [55.0, 11013.0], [55.1, 11016.0], [55.2, 11021.0], [55.3, 11027.0], [55.4, 11031.0], [55.5, 11034.0], [55.6, 11041.0], [55.7, 11045.0], [55.8, 11051.0], [55.9, 11055.0], [56.0, 11060.0], [56.1, 11063.0], [56.2, 11069.0], [56.3, 11074.0], [56.4, 11078.0], [56.5, 11083.0], [56.6, 11089.0], [56.7, 11093.0], [56.8, 11098.0], [56.9, 11103.0], [57.0, 11108.0], [57.1, 11114.0], [57.2, 11117.0], [57.3, 11121.0], [57.4, 11123.0], [57.5, 11126.0], [57.6, 11129.0], [57.7, 11133.0], [57.8, 11140.0], [57.9, 11144.0], [58.0, 11150.0], [58.1, 11154.0], [58.2, 11159.0], [58.3, 11163.0], [58.4, 11167.0], [58.5, 11171.0], [58.6, 11174.0], [58.7, 11179.0], [58.8, 11183.0], [58.9, 11187.0], [59.0, 11192.0], [59.1, 11195.0], [59.2, 11199.0], [59.3, 11205.0], [59.4, 11212.0], [59.5, 11219.0], [59.6, 11222.0], [59.7, 11227.0], [59.8, 11238.0], [59.9, 11243.0], [60.0, 11248.0], [60.1, 11251.0], [60.2, 11254.0], [60.3, 11258.0], [60.4, 11263.0], [60.5, 11264.0], [60.6, 11265.0], [60.7, 11267.0], [60.8, 11268.0], [60.9, 11270.0], [61.0, 11274.0], [61.1, 11278.0], [61.2, 11282.0], [61.3, 11285.0], [61.4, 11287.0], [61.5, 11291.0], [61.6, 11294.0], [61.7, 11298.0], [61.8, 11303.0], [61.9, 11307.0], [62.0, 11313.0], [62.1, 11322.0], [62.2, 11329.0], [62.3, 11333.0], [62.4, 11340.0], [62.5, 11343.0], [62.6, 11347.0], [62.7, 11354.0], [62.8, 11357.0], [62.9, 11364.0], [63.0, 11367.0], [63.1, 11373.0], [63.2, 11379.0], [63.3, 11382.0], [63.4, 11386.0], [63.5, 11392.0], [63.6, 11394.0], [63.7, 11401.0], [63.8, 11407.0], [63.9, 11412.0], [64.0, 11418.0], [64.1, 11421.0], [64.2, 11427.0], [64.3, 11431.0], [64.4, 11438.0], [64.5, 11443.0], [64.6, 11448.0], [64.7, 11459.0], [64.8, 11465.0], [64.9, 11472.0], [65.0, 11480.0], [65.1, 11483.0], [65.2, 11490.0], [65.3, 11499.0], [65.4, 11506.0], [65.5, 11514.0], [65.6, 11519.0], [65.7, 11526.0], [65.8, 11532.0], [65.9, 11541.0], [66.0, 11548.0], [66.1, 11553.0], [66.2, 11557.0], [66.3, 11564.0], [66.4, 11568.0], [66.5, 11576.0], [66.6, 11581.0], [66.7, 11587.0], [66.8, 11592.0], [66.9, 11596.0], [67.0, 11602.0], [67.1, 11607.0], [67.2, 11613.0], [67.3, 11618.0], [67.4, 11626.0], [67.5, 11633.0], [67.6, 11638.0], [67.7, 11645.0], [67.8, 11651.0], [67.9, 11656.0], [68.0, 11664.0], [68.1, 11676.0], [68.2, 11684.0], [68.3, 11688.0], [68.4, 11694.0], [68.5, 11697.0], [68.6, 11708.0], [68.7, 11711.0], [68.8, 11717.0], [68.9, 11725.0], [69.0, 11730.0], [69.1, 11741.0], [69.2, 11748.0], [69.3, 11755.0], [69.4, 11765.0], [69.5, 11771.0], [69.6, 11775.0], [69.7, 11775.0], [69.8, 11776.0], [69.9, 11779.0], [70.0, 11784.0], [70.1, 11790.0], [70.2, 11796.0], [70.3, 11801.0], [70.4, 11808.0], [70.5, 11817.0], [70.6, 11826.0], [70.7, 11833.0], [70.8, 11840.0], [70.9, 11848.0], [71.0, 11853.0], [71.1, 11861.0], [71.2, 11870.0], [71.3, 11881.0], [71.4, 11887.0], [71.5, 11896.0], [71.6, 11902.0], [71.7, 11906.0], [71.8, 11915.0], [71.9, 11923.0], [72.0, 11934.0], [72.1, 11941.0], [72.2, 11956.0], [72.3, 11961.0], [72.4, 11970.0], [72.5, 11980.0], [72.6, 11992.0], [72.7, 12001.0], [72.8, 12009.0], [72.9, 12019.0], [73.0, 12026.0], [73.1, 12031.0], [73.2, 12041.0], [73.3, 12047.0], [73.4, 12053.0], [73.5, 12061.0], [73.6, 12069.0], [73.7, 12077.0], [73.8, 12091.0], [73.9, 12099.0], [74.0, 12107.0], [74.1, 12111.0], [74.2, 12121.0], [74.3, 12124.0], [74.4, 12135.0], [74.5, 12147.0], [74.6, 12158.0], [74.7, 12162.0], [74.8, 12169.0], [74.9, 12177.0], [75.0, 12184.0], [75.1, 12197.0], [75.2, 12206.0], [75.3, 12220.0], [75.4, 12237.0], [75.5, 12248.0], [75.6, 12254.0], [75.7, 12262.0], [75.8, 12272.0], [75.9, 12283.0], [76.0, 12286.0], [76.1, 12288.0], [76.2, 12288.0], [76.3, 12298.0], [76.4, 12316.0], [76.5, 12327.0], [76.6, 12340.0], [76.7, 12354.0], [76.8, 12363.0], [76.9, 12380.0], [77.0, 12388.0], [77.1, 12397.0], [77.2, 12410.0], [77.3, 12424.0], [77.4, 12439.0], [77.5, 12452.0], [77.6, 12470.0], [77.7, 12488.0], [77.8, 12499.0], [77.9, 12508.0], [78.0, 12519.0], [78.1, 12534.0], [78.2, 12539.0], [78.3, 12544.0], [78.4, 12556.0], [78.5, 12568.0], [78.6, 12581.0], [78.7, 12609.0], [78.8, 12626.0], [78.9, 12642.0], [79.0, 12666.0], [79.1, 12681.0], [79.2, 12701.0], [79.3, 12721.0], [79.4, 12743.0], [79.5, 12760.0], [79.6, 12781.0], [79.7, 12798.0], [79.8, 12799.0], [79.9, 12800.0], [80.0, 12817.0], [80.1, 12843.0], [80.2, 12861.0], [80.3, 12873.0], [80.4, 12887.0], [80.5, 12901.0], [80.6, 12919.0], [80.7, 12940.0], [80.8, 12960.0], [80.9, 12983.0], [81.0, 13015.0], [81.1, 13040.0], [81.2, 13055.0], [81.3, 13057.0], [81.4, 13083.0], [81.5, 13109.0], [81.6, 13136.0], [81.7, 13159.0], [81.8, 13200.0], [81.9, 13216.0], [82.0, 13230.0], [82.1, 13250.0], [82.2, 13271.0], [82.3, 13281.0], [82.4, 13305.0], [82.5, 13307.0], [82.6, 13307.0], [82.7, 13308.0], [82.8, 13308.0], [82.9, 13308.0], [83.0, 13308.0], [83.1, 13309.0], [83.2, 13310.0], [83.3, 13311.0], [83.4, 13311.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13311.0], [84.2, 13311.0], [84.3, 13311.0], [84.4, 13311.0], [84.5, 13311.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13313.0], [87.5, 13313.0], [87.6, 13314.0], [87.7, 13315.0], [87.8, 13315.0], [87.9, 13316.0], [88.0, 13316.0], [88.1, 13316.0], [88.2, 13317.0], [88.3, 13337.0], [88.4, 13344.0], [88.5, 13350.0], [88.6, 13362.0], [88.7, 13375.0], [88.8, 13408.0], [88.9, 13427.0], [89.0, 13446.0], [89.1, 13480.0], [89.2, 13513.0], [89.3, 13543.0], [89.4, 13567.0], [89.5, 13569.0], [89.6, 13590.0], [89.7, 13620.0], [89.8, 13640.0], [89.9, 13661.0], [90.0, 13694.0], [90.1, 13731.0], [90.2, 13757.0], [90.3, 13791.0], [90.4, 13820.0], [90.5, 13823.0], [90.6, 13823.0], [90.7, 13824.0], [90.8, 13824.0], [90.9, 13824.0], [91.0, 13824.0], [91.1, 13824.0], [91.2, 13824.0], [91.3, 13824.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13827.0], [91.8, 13828.0], [91.9, 13875.0], [92.0, 13917.0], [92.1, 13960.0], [92.2, 14016.0], [92.3, 14079.0], [92.4, 14081.0], [92.5, 14123.0], [92.6, 14163.0], [92.7, 14216.0], [92.8, 14283.0], [92.9, 14330.0], [93.0, 14334.0], [93.1, 14335.0], [93.2, 14335.0], [93.3, 14335.0], [93.4, 14336.0], [93.5, 14336.0], [93.6, 14336.0], [93.7, 14340.0], [93.8, 14387.0], [93.9, 14502.0], [94.0, 14561.0], [94.1, 14592.0], [94.2, 14632.0], [94.3, 14755.0], [94.4, 14844.0], [94.5, 14847.0], [94.6, 14848.0], [94.7, 14907.0], [94.8, 15005.0], [94.9, 15104.0], [95.0, 15196.0], [95.1, 15247.0], [95.2, 15300.0], [95.3, 15414.0], [95.4, 15475.0], [95.5, 15578.0], [95.6, 15616.0], [95.7, 15665.0], [95.8, 15761.0], [95.9, 15843.0], [96.0, 15969.0], [96.1, 16046.0], [96.2, 16208.0], [96.3, 16370.0], [96.4, 16384.0], [96.5, 16442.0], [96.6, 16650.0], [96.7, 16878.0], [96.8, 17100.0], [96.9, 17341.0], [97.0, 17971.0], [97.1, 18884.0], [97.2, 20176.0], [97.3, 20765.0], [97.4, 21749.0], [97.5, 25856.0], [97.6, 26371.0], [97.7, 27391.0], [97.8, 27697.0], [97.9, 31044.0], [98.0, 41934.0], [98.1, 51892.0], [98.2, 53791.0], [98.3, 56291.0], [98.4, 61857.0], [98.5, 69261.0], [98.6, 72278.0], [98.7, 93965.0], [98.8, 104817.0], [98.9, 106243.0], [99.0, 106752.0], [99.1, 107775.0], [99.2, 110336.0], [99.3, 111360.0], [99.4, 113573.0], [99.5, 117758.0], [99.6, 120122.0], [99.7, 130560.0], [99.8, 145151.0], [99.9, 165376.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 2.0], [6.0, 2.0], [6.1, 4.0], [6.2, 20.0], [6.3, 23.0], [6.4, 25.0], [6.5, 27.0], [6.6, 28.0], [6.7, 32.0], [6.8, 34.0], [6.9, 38.0], [7.0, 68.0], [7.1, 118.0], [7.2, 324.0], [7.3, 552.0], [7.4, 605.0], [7.5, 667.0], [7.6, 735.0], [7.7, 763.0], [7.8, 901.0], [7.9, 997.0], [8.0, 1081.0], [8.1, 1140.0], [8.2, 1183.0], [8.3, 1243.0], [8.4, 1290.0], [8.5, 1596.0], [8.6, 1674.0], [8.7, 1772.0], [8.8, 1850.0], [8.9, 2010.0], [9.0, 2449.0], [9.1, 2460.0], [9.2, 2495.0], [9.3, 2521.0], [9.4, 2736.0], [9.5, 2796.0], [9.6, 2839.0], [9.7, 2899.0], [9.8, 3067.0], [9.9, 3188.0], [10.0, 4040.0], [10.1, 4213.0], [10.2, 4340.0], [10.3, 4445.0], [10.4, 4508.0], [10.5, 4622.0], [10.6, 5005.0], [10.7, 5013.0], [10.8, 5141.0], [10.9, 5230.0], [11.0, 5304.0], [11.1, 5491.0], [11.2, 5724.0], [11.3, 6261.0], [11.4, 6359.0], [11.5, 6575.0], [11.6, 7097.0], [11.7, 7110.0], [11.8, 7111.0], [11.9, 7163.0], [12.0, 7164.0], [12.1, 7165.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7169.0], [14.4, 7169.0], [14.5, 7170.0], [14.6, 7171.0], [14.7, 7172.0], [14.8, 7223.0], [14.9, 7233.0], [15.0, 7246.0], [15.1, 7268.0], [15.2, 7294.0], [15.3, 7357.0], [15.4, 7367.0], [15.5, 7390.0], [15.6, 7413.0], [15.7, 7419.0], [15.8, 7420.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7428.0], [17.5, 7438.0], [17.6, 7457.0], [17.7, 7480.0], [17.8, 7516.0], [17.9, 7554.0], [18.0, 7572.0], [18.1, 7611.0], [18.2, 7657.0], [18.3, 7670.0], [18.4, 7676.0], [18.5, 7676.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7683.0], [20.2, 7689.0], [20.3, 7691.0], [20.4, 7763.0], [20.5, 7807.0], [20.6, 7819.0], [20.7, 7861.0], [20.8, 7874.0], [20.9, 7932.0], [21.0, 7934.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7935.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7937.0], [22.3, 7939.0], [22.4, 7939.0], [22.5, 7939.0], [22.6, 7940.0], [22.7, 7962.0], [22.8, 8001.0], [22.9, 8008.0], [23.0, 8022.0], [23.1, 8045.0], [23.2, 8073.0], [23.3, 8164.0], [23.4, 8185.0], [23.5, 8186.0], [23.6, 8188.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8193.0], [25.1, 8193.0], [25.2, 8194.0], [25.3, 8195.0], [25.4, 8195.0], [25.5, 8195.0], [25.6, 8195.0], [25.7, 8196.0], [25.8, 8196.0], [25.9, 8196.0], [26.0, 8270.0], [26.1, 8349.0], [26.2, 8396.0], [26.3, 8438.0], [26.4, 8444.0], [26.5, 8447.0], [26.6, 8447.0], [26.7, 8447.0], [26.8, 8448.0], [26.9, 8448.0], [27.0, 8488.0], [27.1, 8536.0], [27.2, 8587.0], [27.3, 8670.0], [27.4, 8699.0], [27.5, 8699.0], [27.6, 8700.0], [27.7, 8700.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8708.0], [29.2, 8708.0], [29.3, 8761.0], [29.4, 8769.0], [29.5, 8777.0], [29.6, 8859.0], [29.7, 8889.0], [29.8, 8922.0], [29.9, 8959.0], [30.0, 8959.0], [30.1, 8959.0], [30.2, 8959.0], [30.3, 8960.0], [30.4, 8994.0], [30.5, 9069.0], [30.6, 9112.0], [30.7, 9170.0], [30.8, 9191.0], [30.9, 9207.0], [31.0, 9214.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9215.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9217.0], [32.8, 9224.0], [32.9, 9263.0], [33.0, 9265.0], [33.1, 9266.0], [33.2, 9331.0], [33.3, 9359.0], [33.4, 9430.0], [33.5, 9471.0], [33.6, 9472.0], [33.7, 9472.0], [33.8, 9475.0], [33.9, 9476.0], [34.0, 9476.0], [34.1, 9476.0], [34.2, 9502.0], [34.3, 9531.0], [34.4, 9575.0], [34.5, 9581.0], [34.6, 9604.0], [34.7, 9654.0], [34.8, 9669.0], [34.9, 9710.0], [35.0, 9723.0], [35.1, 9724.0], [35.2, 9724.0], [35.3, 9724.0], [35.4, 9724.0], [35.5, 9727.0], [35.6, 9727.0], [35.7, 9727.0], [35.8, 9728.0], [35.9, 9728.0], [36.0, 9728.0], [36.1, 9728.0], [36.2, 9728.0], [36.3, 9728.0], [36.4, 9733.0], [36.5, 9755.0], [36.6, 9759.0], [36.7, 9765.0], [36.8, 9784.0], [36.9, 9792.0], [37.0, 9814.0], [37.1, 9846.0], [37.2, 9864.0], [37.3, 9872.0], [37.4, 9891.0], [37.5, 9903.0], [37.6, 9938.0], [37.7, 9965.0], [37.8, 9983.0], [37.9, 9984.0], [38.0, 9984.0], [38.1, 9984.0], [38.2, 9984.0], [38.3, 9984.0], [38.4, 9984.0], [38.5, 9997.0], [38.6, 10013.0], [38.7, 10034.0], [38.8, 10089.0], [38.9, 10102.0], [39.0, 10154.0], [39.1, 10183.0], [39.2, 10194.0], [39.3, 10219.0], [39.4, 10236.0], [39.5, 10238.0], [39.6, 10239.0], [39.7, 10240.0], [39.8, 10240.0], [39.9, 10240.0], [40.0, 10240.0], [40.1, 10240.0], [40.2, 10244.0], [40.3, 10251.0], [40.4, 10310.0], [40.5, 10357.0], [40.6, 10396.0], [40.7, 10408.0], [40.8, 10417.0], [40.9, 10429.0], [41.0, 10436.0], [41.1, 10475.0], [41.2, 10492.0], [41.3, 10496.0], [41.4, 10510.0], [41.5, 10524.0], [41.6, 10583.0], [41.7, 10612.0], [41.8, 10628.0], [41.9, 10661.0], [42.0, 10676.0], [42.1, 10707.0], [42.2, 10738.0], [42.3, 10748.0], [42.4, 10751.0], [42.5, 10751.0], [42.6, 10751.0], [42.7, 10751.0], [42.8, 10751.0], [42.9, 10751.0], [43.0, 10752.0], [43.1, 10752.0], [43.2, 10752.0], [43.3, 10752.0], [43.4, 10752.0], [43.5, 10752.0], [43.6, 10752.0], [43.7, 10753.0], [43.8, 10755.0], [43.9, 10773.0], [44.0, 10818.0], [44.1, 10859.0], [44.2, 10934.0], [44.3, 10970.0], [44.4, 10987.0], [44.5, 11003.0], [44.6, 11004.0], [44.7, 11007.0], [44.8, 11007.0], [44.9, 11008.0], [45.0, 11008.0], [45.1, 11008.0], [45.2, 11009.0], [45.3, 11045.0], [45.4, 11057.0], [45.5, 11076.0], [45.6, 11085.0], [45.7, 11118.0], [45.8, 11131.0], [45.9, 11138.0], [46.0, 11193.0], [46.1, 11229.0], [46.2, 11232.0], [46.3, 11262.0], [46.4, 11263.0], [46.5, 11263.0], [46.6, 11263.0], [46.7, 11264.0], [46.8, 11264.0], [46.9, 11264.0], [47.0, 11267.0], [47.1, 11268.0], [47.2, 11268.0], [47.3, 11300.0], [47.4, 11353.0], [47.5, 11374.0], [47.6, 11441.0], [47.7, 11479.0], [47.8, 11516.0], [47.9, 11516.0], [48.0, 11524.0], [48.1, 11585.0], [48.2, 11591.0], [48.3, 11612.0], [48.4, 11687.0], [48.5, 11702.0], [48.6, 11748.0], [48.7, 11755.0], [48.8, 11774.0], [48.9, 11774.0], [49.0, 11775.0], [49.1, 11775.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11776.0], [49.5, 11777.0], [49.6, 11780.0], [49.7, 11780.0], [49.8, 11844.0], [49.9, 11922.0], [50.0, 12031.0], [50.1, 12031.0], [50.2, 12180.0], [50.3, 12279.0], [50.4, 12287.0], [50.5, 12287.0], [50.6, 12288.0], [50.7, 12288.0], [50.8, 12288.0], [50.9, 12288.0], [51.0, 12289.0], [51.1, 12289.0], [51.2, 12318.0], [51.3, 12506.0], [51.4, 12543.0], [51.5, 12547.0], [51.6, 12590.0], [51.7, 12733.0], [51.8, 12796.0], [51.9, 12797.0], [52.0, 12799.0], [52.1, 12799.0], [52.2, 12799.0], [52.3, 12799.0], [52.4, 12800.0], [52.5, 12800.0], [52.6, 12800.0], [52.7, 12848.0], [52.8, 12896.0], [52.9, 12903.0], [53.0, 13041.0], [53.1, 13055.0], [53.2, 13055.0], [53.3, 13056.0], [53.4, 13056.0], [53.5, 13056.0], [53.6, 13056.0], [53.7, 13157.0], [53.8, 13177.0], [53.9, 13183.0], [54.0, 13200.0], [54.1, 13206.0], [54.2, 13221.0], [54.3, 13223.0], [54.4, 13230.0], [54.5, 13231.0], [54.6, 13246.0], [54.7, 13254.0], [54.8, 13260.0], [54.9, 13264.0], [55.0, 13273.0], [55.1, 13277.0], [55.2, 13284.0], [55.3, 13294.0], [55.4, 13297.0], [55.5, 13299.0], [55.6, 13305.0], [55.7, 13307.0], [55.8, 13307.0], [55.9, 13307.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13309.0], [57.3, 13309.0], [57.4, 13309.0], [57.5, 13310.0], [57.6, 13310.0], [57.7, 13310.0], [57.8, 13310.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13313.0], [70.0, 13313.0], [70.1, 13313.0], [70.2, 13313.0], [70.3, 13313.0], [70.4, 13313.0], [70.5, 13313.0], [70.6, 13314.0], [70.7, 13315.0], [70.8, 13315.0], [70.9, 13315.0], [71.0, 13315.0], [71.1, 13315.0], [71.2, 13315.0], [71.3, 13315.0], [71.4, 13316.0], [71.5, 13316.0], [71.6, 13316.0], [71.7, 13316.0], [71.8, 13316.0], [71.9, 13316.0], [72.0, 13316.0], [72.1, 13316.0], [72.2, 13316.0], [72.3, 13316.0], [72.4, 13316.0], [72.5, 13316.0], [72.6, 13316.0], [72.7, 13316.0], [72.8, 13317.0], [72.9, 13335.0], [73.0, 13348.0], [73.1, 13352.0], [73.2, 13359.0], [73.3, 13365.0], [73.4, 13367.0], [73.5, 13374.0], [73.6, 13378.0], [73.7, 13379.0], [73.8, 13396.0], [73.9, 13397.0], [74.0, 13405.0], [74.1, 13419.0], [74.2, 13440.0], [74.3, 13461.0], [74.4, 13508.0], [74.5, 13522.0], [74.6, 13567.0], [74.7, 13569.0], [74.8, 13646.0], [74.9, 13685.0], [75.0, 13692.0], [75.1, 13723.0], [75.2, 13747.0], [75.3, 13787.0], [75.4, 13819.0], [75.5, 13819.0], [75.6, 13820.0], [75.7, 13820.0], [75.8, 13820.0], [75.9, 13823.0], [76.0, 13823.0], [76.1, 13823.0], [76.2, 13823.0], [76.3, 13823.0], [76.4, 13823.0], [76.5, 13823.0], [76.6, 13823.0], [76.7, 13823.0], [76.8, 13824.0], [76.9, 13824.0], [77.0, 13824.0], [77.1, 13824.0], [77.2, 13824.0], [77.3, 13824.0], [77.4, 13824.0], [77.5, 13824.0], [77.6, 13824.0], [77.7, 13824.0], [77.8, 13824.0], [77.9, 13824.0], [78.0, 13824.0], [78.1, 13824.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13827.0], [79.5, 13827.0], [79.6, 13828.0], [79.7, 13828.0], [79.8, 13830.0], [79.9, 13843.0], [80.0, 13870.0], [80.1, 13886.0], [80.2, 13904.0], [80.3, 13978.0], [80.4, 14080.0], [80.5, 14080.0], [80.6, 14083.0], [80.7, 14084.0], [80.8, 14149.0], [80.9, 14184.0], [81.0, 14240.0], [81.1, 14265.0], [81.2, 14302.0], [81.3, 14329.0], [81.4, 14330.0], [81.5, 14331.0], [81.6, 14332.0], [81.7, 14332.0], [81.8, 14333.0], [81.9, 14334.0], [82.0, 14334.0], [82.1, 14335.0], [82.2, 14335.0], [82.3, 14335.0], [82.4, 14335.0], [82.5, 14335.0], [82.6, 14335.0], [82.7, 14335.0], [82.8, 14336.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14336.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14339.0], [84.1, 14339.0], [84.2, 14339.0], [84.3, 14340.0], [84.4, 14387.0], [84.5, 14503.0], [84.6, 14591.0], [84.7, 14592.0], [84.8, 14592.0], [84.9, 14636.0], [85.0, 14836.0], [85.1, 14844.0], [85.2, 14844.0], [85.3, 14847.0], [85.4, 14847.0], [85.5, 14848.0], [85.6, 14848.0], [85.7, 14848.0], [85.8, 14848.0], [85.9, 14849.0], [86.0, 14851.0], [86.1, 15100.0], [86.2, 15100.0], [86.3, 15285.0], [86.4, 15310.0], [86.5, 15356.0], [86.6, 15582.0], [86.7, 15612.0], [86.8, 15616.0], [86.9, 15630.0], [87.0, 15871.0], [87.1, 15953.0], [87.2, 16241.0], [87.3, 16347.0], [87.4, 16371.0], [87.5, 16383.0], [87.6, 16383.0], [87.7, 16433.0], [87.8, 16475.0], [87.9, 16626.0], [88.0, 17099.0], [88.1, 17100.0], [88.2, 17151.0], [88.3, 17407.0], [88.4, 17760.0], [88.5, 18427.0], [88.6, 18836.0], [88.7, 19198.0], [88.8, 20480.0], [88.9, 20480.0], [89.0, 20656.0], [89.1, 20710.0], [89.2, 21098.0], [89.3, 22948.0], [89.4, 23901.0], [89.5, 24313.0], [89.6, 25344.0], [89.7, 26277.0], [89.8, 26368.0], [89.9, 26371.0], [90.0, 26372.0], [90.1, 26372.0], [90.2, 26491.0], [90.3, 26623.0], [90.4, 27392.0], [90.5, 27392.0], [90.6, 27904.0], [90.7, 29482.0], [90.8, 30724.0], [90.9, 31234.0], [91.0, 31250.0], [91.1, 31425.0], [91.2, 31463.0], [91.3, 31706.0], [91.4, 36315.0], [91.5, 37304.0], [91.6, 38955.0], [91.7, 39168.0], [91.8, 41941.0], [91.9, 46115.0], [92.0, 50278.0], [92.1, 51407.0], [92.2, 52152.0], [92.3, 52593.0], [92.4, 53760.0], [92.5, 54659.0], [92.6, 55319.0], [92.7, 55319.0], [92.8, 55320.0], [92.9, 57372.0], [93.0, 58258.0], [93.1, 62184.0], [93.2, 63241.0], [93.3, 63770.0], [93.4, 65532.0], [93.5, 65881.0], [93.6, 67242.0], [93.7, 68089.0], [93.8, 68611.0], [93.9, 73473.0], [94.0, 74745.0], [94.1, 86218.0], [94.2, 95236.0], [94.3, 96511.0], [94.4, 98077.0], [94.5, 102142.0], [94.6, 104819.0], [94.7, 105364.0], [94.8, 105468.0], [94.9, 105556.0], [95.0, 105697.0], [95.1, 105891.0], [95.2, 106031.0], [95.3, 106176.0], [95.4, 106242.0], [95.5, 106270.0], [95.6, 106363.0], [95.7, 106460.0], [95.8, 106555.0], [95.9, 106756.0], [96.0, 106842.0], [96.1, 107011.0], [96.2, 107175.0], [96.3, 107263.0], [96.4, 107264.0], [96.5, 107317.0], [96.6, 107365.0], [96.7, 107776.0], [96.8, 108123.0], [96.9, 109055.0], [97.0, 110269.0], [97.1, 110338.0], [97.2, 110730.0], [97.3, 111360.0], [97.4, 111364.0], [97.5, 113399.0], [97.6, 113664.0], [97.7, 113740.0], [97.8, 114200.0], [97.9, 114244.0], [98.0, 114944.0], [98.1, 115712.0], [98.2, 115971.0], [98.3, 118010.0], [98.4, 118895.0], [98.5, 121890.0], [98.6, 123136.0], [98.7, 123392.0], [98.8, 123392.0], [98.9, 127776.0], [99.0, 128775.0], [99.1, 136188.0], [99.2, 136445.0], [99.3, 136957.0], [99.4, 145151.0], [99.5, 148611.0], [99.6, 158208.0], [99.7, 172308.0], [99.8, 211456.0], [99.9, 211712.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 639.0, "series": [{"data": [[0.0, 99.0], [210400.0, 1.0], [136100.0, 2.0], [73900.0, 1.0], [100300.0, 1.0], [106700.0, 1.0], [35700.0, 1.0], [157100.0, 2.0], [52100.0, 1.0], [51300.0, 1.0], [52900.0, 1.0], [53700.0, 1.0], [54100.0, 1.0], [57300.0, 2.0], [55300.0, 4.0], [109000.0, 2.0], [114600.0, 1.0], [110600.0, 1.0], [500.0, 3.0], [600.0, 7.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 3.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 3.0], [2100.0, 2.0], [2200.0, 1.0], [2300.0, 5.0], [2400.0, 2.0], [2500.0, 1.0], [2800.0, 1.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 3.0], [3200.0, 3.0], [3300.0, 3.0], [211700.0, 1.0], [210100.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [4200.0, 1.0], [67300.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5000.0, 2.0], [5500.0, 1.0], [5600.0, 1.0], [5800.0, 2.0], [6100.0, 1.0], [6000.0, 2.0], [6300.0, 4.0], [6200.0, 1.0], [6600.0, 1.0], [6900.0, 2.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 42.0], [111300.0, 4.0], [7300.0, 1.0], [7400.0, 37.0], [117700.0, 2.0], [7500.0, 1.0], [7600.0, 33.0], [7800.0, 3.0], [7700.0, 1.0], [7900.0, 37.0], [123300.0, 6.0], [8100.0, 42.0], [8000.0, 1.0], [8500.0, 4.0], [8400.0, 12.0], [8300.0, 1.0], [8700.0, 35.0], [8600.0, 5.0], [132600.0, 3.0], [8800.0, 3.0], [9000.0, 4.0], [8900.0, 12.0], [9200.0, 57.0], [9700.0, 42.0], [9300.0, 3.0], [9400.0, 26.0], [9500.0, 6.0], [9600.0, 3.0], [10200.0, 40.0], [10000.0, 10.0], [9800.0, 4.0], [9900.0, 25.0], [10100.0, 8.0], [158200.0, 3.0], [10300.0, 16.0], [10700.0, 29.0], [10400.0, 14.0], [10500.0, 9.0], [10600.0, 6.0], [11000.0, 28.0], [11100.0, 4.0], [10900.0, 12.0], [11200.0, 25.0], [10800.0, 3.0], [11400.0, 4.0], [11600.0, 8.0], [11500.0, 10.0], [11700.0, 28.0], [11300.0, 1.0], [12000.0, 2.0], [11900.0, 7.0], [12100.0, 6.0], [11800.0, 12.0], [12200.0, 27.0], [12700.0, 22.0], [12400.0, 3.0], [12600.0, 3.0], [12500.0, 8.0], [12300.0, 3.0], [13000.0, 17.0], [13300.0, 364.0], [12900.0, 2.0], [13200.0, 5.0], [12800.0, 9.0], [13500.0, 16.0], [13800.0, 80.0], [13400.0, 3.0], [13600.0, 1.0], [14000.0, 11.0], [14300.0, 86.0], [13900.0, 1.0], [14100.0, 1.0], [14200.0, 2.0], [14500.0, 10.0], [14800.0, 23.0], [14400.0, 1.0], [15300.0, 6.0], [15100.0, 3.0], [15200.0, 1.0], [15000.0, 1.0], [15600.0, 7.0], [15800.0, 1.0], [16300.0, 10.0], [16100.0, 1.0], [16200.0, 1.0], [15900.0, 3.0], [17000.0, 2.0], [16400.0, 2.0], [17400.0, 1.0], [20400.0, 3.0], [20200.0, 1.0], [25800.0, 1.0], [26600.0, 4.0], [27600.0, 1.0], [28600.0, 3.0], [31200.0, 1.0], [44000.0, 1.0], [50800.0, 1.0], [69600.0, 4.0], [74400.0, 1.0], [75200.0, 2.0], [88800.0, 1.0], [95200.0, 4.0], [106400.0, 1.0], [108000.0, 3.0], [107200.0, 6.0], [113600.0, 3.0], [111200.0, 1.0], [110300.0, 3.0], [115100.0, 1.0], [145100.0, 2.0], [51100.0, 1.0], [53500.0, 2.0], [58300.0, 1.0], [65500.0, 1.0], [105400.0, 3.0], [107000.0, 1.0], [114200.0, 2.0], [119000.0, 2.0], [97300.0, 1.0], [96500.0, 1.0], [114100.0, 1.0], [115700.0, 1.0], [114900.0, 1.0], [17100.0, 5.0], [16700.0, 1.0], [17500.0, 1.0], [18100.0, 2.0], [18300.0, 2.0], [17900.0, 2.0], [18900.0, 2.0], [20300.0, 1.0], [22100.0, 1.0], [25300.0, 1.0], [26300.0, 6.0], [27300.0, 6.0], [29500.0, 1.0], [30100.0, 1.0], [153500.0, 4.0], [43000.0, 1.0], [50200.0, 2.0], [53000.0, 1.0], [55000.0, 1.0], [54200.0, 1.0], [62600.0, 1.0], [71600.0, 4.0], [98000.0, 3.0], [103600.0, 3.0], [111600.0, 1.0], [114000.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 269.0], [210400.0, 3.0], [136100.0, 2.0], [75500.0, 1.0], [87500.0, 1.0], [93900.0, 1.0], [105900.0, 2.0], [106700.0, 6.0], [111500.0, 1.0], [113100.0, 1.0], [114700.0, 1.0], [172200.0, 2.0], [137900.0, 1.0], [157100.0, 3.0], [41700.0, 1.0], [42900.0, 1.0], [52500.0, 1.0], [51700.0, 1.0], [52100.0, 1.0], [51300.0, 1.0], [53700.0, 3.0], [54500.0, 1.0], [58100.0, 1.0], [60100.0, 1.0], [72200.0, 1.0], [74600.0, 1.0], [98600.0, 1.0], [109000.0, 1.0], [112200.0, 2.0], [114600.0, 1.0], [117000.0, 1.0], [500.0, 16.0], [600.0, 33.0], [700.0, 40.0], [800.0, 42.0], [900.0, 33.0], [1000.0, 29.0], [1100.0, 26.0], [1200.0, 18.0], [1300.0, 33.0], [1400.0, 32.0], [1500.0, 29.0], [1600.0, 50.0], [1700.0, 42.0], [1800.0, 44.0], [1900.0, 33.0], [2000.0, 34.0], [2100.0, 26.0], [2200.0, 29.0], [2300.0, 19.0], [2400.0, 41.0], [2500.0, 28.0], [2600.0, 28.0], [165300.0, 3.0], [2800.0, 13.0], [2700.0, 19.0], [2900.0, 22.0], [3000.0, 28.0], [3100.0, 29.0], [3200.0, 30.0], [3300.0, 23.0], [211700.0, 1.0], [210100.0, 1.0], [3400.0, 33.0], [3500.0, 28.0], [3700.0, 17.0], [3600.0, 35.0], [3800.0, 19.0], [3900.0, 21.0], [4000.0, 8.0], [4100.0, 8.0], [4300.0, 7.0], [4200.0, 15.0], [66500.0, 1.0], [4400.0, 15.0], [4600.0, 13.0], [4500.0, 10.0], [4800.0, 12.0], [4700.0, 6.0], [5100.0, 26.0], [4900.0, 11.0], [5000.0, 11.0], [5200.0, 14.0], [5300.0, 23.0], [5500.0, 15.0], [5600.0, 18.0], [5400.0, 16.0], [5800.0, 19.0], [5700.0, 18.0], [6000.0, 18.0], [6100.0, 15.0], [5900.0, 16.0], [6300.0, 11.0], [6200.0, 14.0], [6400.0, 14.0], [6500.0, 7.0], [6600.0, 9.0], [6900.0, 6.0], [6700.0, 9.0], [6800.0, 6.0], [106500.0, 1.0], [7000.0, 9.0], [7100.0, 109.0], [111300.0, 7.0], [113700.0, 1.0], [7400.0, 72.0], [7200.0, 12.0], [7300.0, 12.0], [117700.0, 1.0], [7600.0, 51.0], [7500.0, 8.0], [120100.0, 1.0], [7700.0, 13.0], [7900.0, 89.0], [7800.0, 24.0], [123300.0, 6.0], [8000.0, 24.0], [8100.0, 79.0], [130500.0, 1.0], [128100.0, 1.0], [8200.0, 14.0], [8600.0, 34.0], [8700.0, 94.0], [8400.0, 60.0], [8300.0, 17.0], [8500.0, 19.0], [132600.0, 6.0], [8900.0, 51.0], [8800.0, 41.0], [9200.0, 113.0], [9000.0, 27.0], [9100.0, 30.0], [9300.0, 49.0], [9700.0, 114.0], [9400.0, 65.0], [9500.0, 53.0], [9600.0, 48.0], [9800.0, 76.0], [10100.0, 174.0], [10000.0, 159.0], [10200.0, 223.0], [9900.0, 140.0], [158200.0, 2.0], [10300.0, 235.0], [10600.0, 234.0], [10500.0, 213.0], [10700.0, 271.0], [10400.0, 244.0], [10900.0, 235.0], [11100.0, 238.0], [10800.0, 221.0], [11200.0, 252.0], [11000.0, 250.0], [11500.0, 165.0], [11400.0, 162.0], [11600.0, 159.0], [11300.0, 196.0], [11700.0, 172.0], [11900.0, 115.0], [12100.0, 122.0], [12000.0, 121.0], [12200.0, 118.0], [11800.0, 129.0], [12700.0, 62.0], [12400.0, 71.0], [12500.0, 86.0], [12600.0, 51.0], [12300.0, 81.0], [13300.0, 639.0], [13200.0, 58.0], [13000.0, 51.0], [12900.0, 46.0], [13100.0, 33.0], [12800.0, 68.0], [13500.0, 48.0], [13800.0, 162.0], [13400.0, 41.0], [13600.0, 38.0], [13700.0, 31.0], [14300.0, 98.0], [14100.0, 20.0], [14000.0, 28.0], [13900.0, 22.0], [14200.0, 18.0], [14800.0, 34.0], [14400.0, 8.0], [14500.0, 28.0], [14700.0, 11.0], [14600.0, 7.0], [14900.0, 9.0], [15000.0, 10.0], [15200.0, 19.0], [15100.0, 12.0], [15300.0, 9.0], [15400.0, 14.0], [15800.0, 6.0], [15700.0, 11.0], [15500.0, 11.0], [15600.0, 22.0], [16300.0, 19.0], [16200.0, 7.0], [15900.0, 12.0], [16000.0, 7.0], [16100.0, 6.0], [16800.0, 4.0], [17000.0, 5.0], [16400.0, 10.0], [16600.0, 4.0], [17200.0, 1.0], [18400.0, 4.0], [17800.0, 2.0], [17600.0, 1.0], [18000.0, 1.0], [18800.0, 2.0], [19400.0, 1.0], [19000.0, 1.0], [19200.0, 1.0], [20400.0, 3.0], [20200.0, 2.0], [19600.0, 1.0], [21200.0, 3.0], [21400.0, 3.0], [22000.0, 2.0], [21800.0, 1.0], [21600.0, 1.0], [25000.0, 1.0], [24800.0, 1.0], [26200.0, 1.0], [26600.0, 1.0], [25800.0, 1.0], [27600.0, 1.0], [27400.0, 1.0], [27200.0, 1.0], [28600.0, 4.0], [29400.0, 1.0], [31000.0, 1.0], [32000.0, 1.0], [32600.0, 2.0], [33200.0, 1.0], [37600.0, 1.0], [44000.0, 3.0], [53200.0, 1.0], [52800.0, 1.0], [51600.0, 1.0], [54000.0, 2.0], [54400.0, 1.0], [56400.0, 1.0], [56000.0, 1.0], [58000.0, 1.0], [63600.0, 1.0], [68000.0, 1.0], [69600.0, 1.0], [70400.0, 1.0], [95200.0, 4.0], [105600.0, 2.0], [104800.0, 1.0], [106400.0, 1.0], [107200.0, 2.0], [108000.0, 6.0], [111200.0, 1.0], [112000.0, 1.0], [75900.0, 3.0], [106300.0, 3.0], [107100.0, 1.0], [110300.0, 5.0], [111900.0, 1.0], [113500.0, 1.0], [115900.0, 1.0], [123100.0, 2.0], [211400.0, 1.0], [145100.0, 2.0], [41900.0, 1.0], [52300.0, 1.0], [55100.0, 1.0], [55900.0, 1.0], [56700.0, 1.0], [57900.0, 2.0], [58300.0, 1.0], [59900.0, 1.0], [65500.0, 1.0], [64700.0, 1.0], [68600.0, 1.0], [70200.0, 2.0], [71800.0, 1.0], [106200.0, 3.0], [105400.0, 2.0], [107000.0, 4.0], [115000.0, 1.0], [118200.0, 1.0], [119000.0, 8.0], [155600.0, 2.0], [70100.0, 1.0], [75700.0, 1.0], [83700.0, 1.0], [97300.0, 1.0], [96500.0, 1.0], [106100.0, 2.0], [107700.0, 2.0], [115700.0, 1.0], [114900.0, 1.0], [16700.0, 5.0], [16500.0, 5.0], [17100.0, 7.0], [16900.0, 3.0], [17300.0, 4.0], [17500.0, 4.0], [18100.0, 1.0], [17900.0, 1.0], [17700.0, 1.0], [18500.0, 2.0], [18900.0, 1.0], [19100.0, 2.0], [19700.0, 1.0], [20300.0, 1.0], [20100.0, 1.0], [19900.0, 1.0], [20700.0, 3.0], [21300.0, 1.0], [21500.0, 1.0], [20500.0, 1.0], [22500.0, 1.0], [21700.0, 1.0], [23700.0, 1.0], [24300.0, 1.0], [25300.0, 1.0], [26100.0, 1.0], [26300.0, 14.0], [26500.0, 1.0], [27300.0, 9.0], [27900.0, 1.0], [27700.0, 1.0], [31100.0, 1.0], [30900.0, 2.0], [32300.0, 1.0], [35800.0, 1.0], [153500.0, 1.0], [45000.0, 1.0], [51000.0, 1.0], [52600.0, 1.0], [52200.0, 1.0], [51800.0, 1.0], [55400.0, 1.0], [55800.0, 1.0], [56200.0, 1.0], [63400.0, 1.0], [61800.0, 1.0], [66800.0, 1.0], [69200.0, 2.0], [71600.0, 3.0], [90000.0, 1.0], [103600.0, 2.0], [111600.0, 1.0], [112400.0, 1.0], [114000.0, 1.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 134.0], [136100.0, 2.0], [74700.0, 1.0], [73900.0, 1.0], [105900.0, 1.0], [106700.0, 3.0], [110700.0, 2.0], [111500.0, 1.0], [100.0, 2.0], [38900.0, 1.0], [37300.0, 1.0], [39300.0, 1.0], [157100.0, 1.0], [46100.0, 1.0], [200.0, 1.0], [52500.0, 2.0], [52100.0, 1.0], [53700.0, 1.0], [57300.0, 2.0], [55300.0, 5.0], [62100.0, 1.0], [63700.0, 1.0], [65800.0, 1.0], [300.0, 1.0], [97800.0, 1.0], [400.0, 1.0], [105800.0, 1.0], [109000.0, 2.0], [110600.0, 1.0], [119400.0, 1.0], [121800.0, 1.0], [500.0, 2.0], [600.0, 2.0], [700.0, 4.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 4.0], [1200.0, 4.0], [1300.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2400.0, 5.0], [2500.0, 2.0], [2600.0, 1.0], [165300.0, 1.0], [2700.0, 3.0], [2800.0, 3.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [211700.0, 3.0], [210100.0, 1.0], [3700.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4400.0, 3.0], [4600.0, 1.0], [4500.0, 2.0], [4800.0, 1.0], [5000.0, 3.0], [5100.0, 1.0], [5300.0, 2.0], [5200.0, 3.0], [5400.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6300.0, 3.0], [6200.0, 1.0], [6500.0, 1.0], [105700.0, 1.0], [107300.0, 3.0], [106500.0, 1.0], [108100.0, 1.0], [7100.0, 59.0], [7000.0, 2.0], [111300.0, 3.0], [113700.0, 1.0], [7200.0, 9.0], [7400.0, 41.0], [7300.0, 7.0], [117700.0, 1.0], [7600.0, 43.0], [7500.0, 6.0], [7700.0, 3.0], [7900.0, 37.0], [7800.0, 7.0], [123300.0, 4.0], [8000.0, 9.0], [8100.0, 51.0], [8300.0, 4.0], [8700.0, 38.0], [8500.0, 3.0], [8400.0, 16.0], [8200.0, 2.0], [8600.0, 6.0], [132600.0, 1.0], [9100.0, 6.0], [9200.0, 43.0], [9000.0, 2.0], [8900.0, 13.0], [8800.0, 4.0], [9500.0, 8.0], [9300.0, 5.0], [9400.0, 15.0], [9700.0, 40.0], [9600.0, 6.0], [148600.0, 1.0], [10000.0, 6.0], [9900.0, 21.0], [10100.0, 8.0], [10200.0, 20.0], [9800.0, 9.0], [158200.0, 1.0], [10400.0, 14.0], [10300.0, 6.0], [10600.0, 9.0], [10700.0, 36.0], [10500.0, 4.0], [11200.0, 24.0], [11000.0, 23.0], [11100.0, 7.0], [10800.0, 4.0], [10900.0, 5.0], [11500.0, 9.0], [11400.0, 3.0], [11300.0, 6.0], [11600.0, 5.0], [11700.0, 25.0], [12200.0, 18.0], [12100.0, 2.0], [11900.0, 1.0], [11800.0, 2.0], [12000.0, 3.0], [12500.0, 7.0], [12700.0, 13.0], [12300.0, 1.0], [12400.0, 1.0], [13100.0, 7.0], [13300.0, 352.0], [13000.0, 12.0], [13200.0, 29.0], [12800.0, 11.0], [12900.0, 2.0], [13600.0, 6.0], [13700.0, 6.0], [13400.0, 8.0], [13500.0, 6.0], [13800.0, 92.0], [14200.0, 5.0], [14000.0, 9.0], [13900.0, 3.0], [14300.0, 62.0], [14100.0, 2.0], [14700.0, 1.0], [14500.0, 7.0], [14800.0, 20.0], [14400.0, 1.0], [14600.0, 2.0], [15200.0, 2.0], [15300.0, 4.0], [15100.0, 4.0], [15600.0, 6.0], [15500.0, 1.0], [15800.0, 3.0], [16000.0, 1.0], [16300.0, 7.0], [16200.0, 1.0], [15900.0, 1.0], [16400.0, 4.0], [17000.0, 1.0], [16600.0, 2.0], [17400.0, 2.0], [17800.0, 1.0], [18400.0, 1.0], [18600.0, 1.0], [18800.0, 2.0], [20400.0, 3.0], [20000.0, 1.0], [20600.0, 3.0], [21000.0, 2.0], [22400.0, 1.0], [24000.0, 1.0], [26400.0, 2.0], [26600.0, 2.0], [26200.0, 2.0], [28200.0, 1.0], [29400.0, 1.0], [30200.0, 1.0], [31200.0, 5.0], [31400.0, 4.0], [42000.0, 1.0], [51600.0, 1.0], [58000.0, 1.0], [62400.0, 1.0], [63200.0, 1.0], [67200.0, 1.0], [68000.0, 1.0], [95200.0, 2.0], [106400.0, 2.0], [105600.0, 2.0], [104800.0, 1.0], [107200.0, 5.0], [108000.0, 1.0], [113600.0, 3.0], [115200.0, 1.0], [136900.0, 1.0], [78300.0, 1.0], [106300.0, 2.0], [105500.0, 1.0], [107100.0, 2.0], [110300.0, 1.0], [115900.0, 1.0], [123100.0, 2.0], [128700.0, 1.0], [211400.0, 1.0], [36300.0, 1.0], [145100.0, 2.0], [141900.0, 1.0], [38300.0, 1.0], [39100.0, 2.0], [41900.0, 1.0], [172300.0, 1.0], [46300.0, 1.0], [52700.0, 1.0], [54300.0, 1.0], [65500.0, 2.0], [68600.0, 1.0], [73400.0, 1.0], [86200.0, 1.0], [106200.0, 4.0], [105400.0, 3.0], [110200.0, 2.0], [107000.0, 1.0], [114200.0, 2.0], [136400.0, 2.0], [66100.0, 1.0], [96500.0, 2.0], [102100.0, 1.0], [106100.0, 2.0], [105300.0, 1.0], [107700.0, 2.0], [106900.0, 1.0], [113300.0, 1.0], [115700.0, 2.0], [114900.0, 2.0], [127700.0, 1.0], [17100.0, 4.0], [16500.0, 1.0], [17700.0, 1.0], [19100.0, 1.0], [20700.0, 1.0], [22900.0, 1.0], [24500.0, 1.0], [24300.0, 1.0], [23900.0, 1.0], [25300.0, 1.0], [26300.0, 9.0], [27300.0, 3.0], [27900.0, 1.0], [30700.0, 1.0], [31700.0, 1.0], [34200.0, 1.0], [50200.0, 2.0], [51400.0, 1.0], [54600.0, 1.0], [58200.0, 1.0], [59400.0, 1.0], [63400.0, 1.0], [64200.0, 1.0], [68400.0, 1.0], [71600.0, 1.0], [98000.0, 2.0], [106000.0, 1.0], [103600.0, 1.0], [106800.0, 1.0], [114000.0, 1.0], [118000.0, 2.0], [118800.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7919.0, "series": [{"data": [[1.0, 345.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5445.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7919.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.151898734177214, "minX": 1.53928272E12, "maxY": 499.30943188086, "series": [{"data": [[1.53928272E12, 8.151898734177214], [1.5392832E12, 462.16973532796203], [1.5392829E12, 161.42571785268402], [1.53928338E12, 147.30034129692845], [1.53928308E12, 342.64044943820284], [1.53928278E12, 42.04162812210912], [1.53928326E12, 499.30943188086], [1.53928296E12, 222.35771276595713], [1.53928314E12, 401.8713578889503], [1.53928284E12, 101.17964071856277], [1.53928332E12, 487.2429620563034], [1.53928302E12, 285.2108786610875]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928338E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 155646.5, "series": [{"data": [[2.0, 589.0], [5.0, 1418.0], [6.0, 4259.0], [7.0, 65590.33333333333], [8.0, 50306.0], [9.0, 1025.0], [11.0, 613.0], [13.0, 1852.5], [14.0, 1514.0], [16.0, 608.0], [17.0, 1516.0], [18.0, 79603.66666666667], [19.0, 681.0], [22.0, 1525.5], [23.0, 1051.0], [24.0, 1165.0], [25.0, 140598.66666666666], [26.0, 1327.0], [28.0, 45332.0], [29.0, 1474.0], [30.0, 1264.0], [33.0, 39192.5], [32.0, 75290.0], [34.0, 1588.0], [35.0, 2445.5], [37.0, 36653.0], [38.0, 2515.5], [39.0, 1911.0], [40.0, 35697.5], [41.0, 35665.5], [43.0, 63153.0], [44.0, 1865.0], [45.0, 1986.0], [46.0, 1985.0], [47.0, 2116.0], [48.0, 2356.0], [49.0, 28828.0], [51.0, 2365.0], [50.0, 55323.0], [52.0, 3318.0], [54.0, 28842.5], [55.0, 20901.0], [56.0, 2887.0], [57.0, 2984.0], [59.0, 3090.0], [60.0, 2939.0], [61.0, 3015.0], [62.0, 3241.0], [63.0, 38736.0], [65.0, 3850.0], [66.0, 3280.0], [67.0, 3034.0], [68.0, 3165.0], [69.0, 4766.0], [70.0, 3738.0], [71.0, 28866.5], [72.0, 3388.0], [73.0, 3306.0], [74.0, 3562.0], [75.0, 3876.0], [77.0, 4261.0], [78.0, 4436.0], [79.0, 29083.5], [76.0, 53533.0], [81.0, 31070.5], [83.0, 114944.0], [80.0, 57364.0], [84.0, 5128.0], [85.0, 6023.0], [86.0, 4868.0], [88.0, 5691.0], [91.0, 6389.5], [92.0, 6280.0], [93.0, 5811.0], [94.0, 5841.0], [97.0, 60887.0], [98.0, 6855.0], [100.0, 7843.0], [102.0, 7938.0], [103.0, 6551.0], [105.0, 5666.0], [106.0, 6024.0], [107.0, 29551.0], [108.0, 29688.0], [109.0, 6925.0], [111.0, 7745.0], [113.0, 44344.666666666664], [114.0, 8175.0], [115.0, 7879.0], [118.0, 9739.0], [116.0, 114154.0], [120.0, 60854.5], [121.0, 9078.5], [122.0, 7648.0], [123.0, 7911.0], [125.0, 8026.0], [126.0, 38561.0], [127.0, 8729.5], [128.0, 8520.0], [129.0, 8843.0], [131.0, 8733.5], [133.0, 8435.5], [132.0, 55047.0], [130.0, 54141.0], [136.0, 10034.0], [138.0, 16303.333333333332], [139.0, 9306.0], [140.0, 9026.0], [142.0, 9786.0], [143.0, 8772.0], [141.0, 111695.0], [144.0, 30923.0], [145.0, 8705.0], [147.0, 8756.0], [148.0, 60195.0], [149.0, 30195.0], [151.0, 60558.0], [152.0, 9842.0], [153.0, 9872.0], [154.0, 10066.0], [156.0, 10223.0], [157.0, 10408.0], [158.0, 10160.0], [160.0, 10004.0], [161.0, 10015.0], [162.0, 30125.5], [164.0, 10317.0], [165.0, 61347.0], [167.0, 50206.0], [172.0, 10578.0], [171.0, 30195.0], [178.0, 10700.0], [181.0, 10470.0], [183.0, 11039.0], [179.0, 31282.0], [185.0, 11196.0], [191.0, 18318.0], [187.0, 17900.0], [195.0, 10681.0], [197.0, 10551.0], [199.0, 10960.0], [203.0, 11643.0], [205.0, 20298.0], [213.0, 15984.0], [212.0, 51332.0], [208.0, 62695.0], [218.0, 11645.0], [221.0, 11511.0], [223.0, 11964.0], [222.0, 16229.0], [217.0, 15918.0], [216.0, 15934.0], [225.0, 31698.5], [226.0, 11259.0], [228.0, 14696.0], [230.0, 10982.0], [224.0, 17087.0], [232.0, 12890.5], [234.0, 13829.5], [235.0, 17527.0], [239.0, 12835.0], [241.0, 10730.0], [246.0, 18981.0], [248.0, 15173.0], [250.0, 13316.0], [251.0, 11512.0], [254.0, 12186.0], [255.0, 12678.5], [268.0, 14585.0], [258.0, 12006.5], [257.0, 18176.0], [259.0, 12646.0], [260.0, 1.0], [261.0, 14200.0], [263.0, 13074.0], [264.0, 10454.5], [266.0, 8884.6], [267.0, 13228.666666666666], [269.0, 9728.0], [270.0, 19050.5], [273.0, 16536.333333333332], [272.0, 10790.0], [274.0, 13312.0], [275.0, 10127.0], [276.0, 11038.5], [277.0, 21374.333333333332], [278.0, 11490.4], [280.0, 25728.0], [287.0, 12800.5], [284.0, 13311.0], [286.0, 13244.0], [281.0, 10658.0], [282.0, 25344.0], [283.0, 14165.0], [289.0, 11692.0], [288.0, 26368.0], [290.0, 13344.625], [291.0, 10835.0], [292.0, 6745.5], [293.0, 10626.0], [294.0, 10238.5], [295.0, 11519.5], [296.0, 15973.0], [303.0, 13378.25], [300.0, 12122.555555555555], [302.0, 11904.0], [297.0, 8704.0], [298.0, 11650.666666666666], [299.0, 13312.0], [305.0, 13311.5], [304.0, 11856.0], [306.0, 7936.5], [307.0, 9217.0], [308.0, 8140.3], [309.0, 22186.833333333332], [310.0, 10524.875], [311.0, 12953.4], [312.0, 9466.666666666666], [318.0, 11570.0], [319.0, 10339.57142857143], [316.0, 10334.714285714284], [317.0, 12800.0], [313.0, 9742.75], [314.0, 8283.666666666666], [315.0, 12696.0], [321.0, 13311.0], [320.0, 14422.0], [322.0, 9919.75], [323.0, 21811.2], [324.0, 13560.5], [325.0, 14080.0], [326.0, 10463.874999999998], [327.0, 11465.42857142857], [328.0, 13143.166666666668], [334.0, 13304.5], [335.0, 9131.11111111111], [332.0, 7680.0], [333.0, 10794.083333333332], [329.0, 11410.0], [330.0, 11762.0], [331.0, 4267.333333333334], [337.0, 8416.8], [336.0, 13312.0], [338.0, 29093.0], [339.0, 6539.5], [340.0, 62515.0], [342.0, 11928.294117647058], [343.0, 9407.5], [344.0, 10462.285714285714], [350.0, 12113.0], [351.0, 8806.2], [348.0, 11851.0], [349.0, 7240.714285714285], [345.0, 10349.714285714284], [346.0, 11563.307692307691], [347.0, 12242.09090909091], [353.0, 9670.111111111113], [352.0, 6471.333333333333], [354.0, 9530.375], [355.0, 10775.0], [356.0, 9273.75], [357.0, 10368.0], [359.0, 8900.222222222223], [360.0, 12233.6], [367.0, 12248.3], [364.0, 9776.999999999998], [365.0, 11611.0], [361.0, 10427.454545454546], [362.0, 9602.0], [363.0, 12370.5], [369.0, 12800.0], [368.0, 22213.5], [370.0, 10990.0], [371.0, 11007.5], [372.0, 9105.714285714286], [373.0, 11344.666666666666], [374.0, 9106.2], [375.0, 13727.833333333334], [376.0, 11665.0], [383.0, 11915.0], [380.0, 11947.666666666666], [381.0, 10934.923076923078], [377.0, 10283.714285714284], [378.0, 9727.0], [379.0, 10399.0], [385.0, 13450.0], [384.0, 7890.0], [386.0, 11884.0], [387.0, 12001.285714285716], [388.0, 21119.166666666664], [389.0, 11648.416666666666], [390.0, 8900.3], [391.0, 13820.666666666666], [393.0, 11876.4], [398.0, 10470.333333333334], [399.0, 9508.42857142857], [396.0, 11807.125], [397.0, 7912.6], [394.0, 7594.222222222223], [395.0, 12141.285714285716], [401.0, 8547.0], [400.0, 12113.0], [402.0, 6612.833333333333], [403.0, 9534.4], [404.0, 9123.4], [405.0, 12172.0], [406.0, 9059.0], [407.0, 10405.142857142859], [408.0, 6784.0], [414.0, 8068.5], [415.0, 10952.454545454548], [412.0, 12204.0], [413.0, 10508.0], [409.0, 8711.833333333334], [410.0, 12831.25], [411.0, 8701.5], [417.0, 10249.5], [416.0, 8830.0], [418.0, 11519.0], [419.0, 10400.6], [420.0, 7414.25], [421.0, 7086.0], [422.0, 13355.666666666666], [423.0, 12544.0], [424.0, 13929.0], [430.0, 11519.666666666666], [431.0, 10982.8], [428.0, 9226.92857142857], [429.0, 11775.2], [425.0, 12543.0], [427.0, 12441.625000000002], [434.0, 9706.333333333334], [432.0, 9216.0], [435.0, 11528.75], [444.0, 6570.333333333334], [445.0, 9983.0], [446.0, 18809.333333333336], [447.0, 5949.2], [436.0, 8923.666666666668], [437.0, 8241.285714285714], [438.0, 7784.4], [439.0, 8330.4], [440.0, 12607.25], [441.0, 9727.0], [442.0, 11166.0], [443.0, 8321.0], [450.0, 10630.0], [449.0, 12285.666666666666], [451.0, 12288.5], [460.0, 13670.166666666666], [462.0, 42077.33333333333], [463.0, 8480.333333333334], [452.0, 13059.0], [453.0, 10650.4], [454.0, 11519.25], [455.0, 13231.272727272728], [456.0, 10608.4], [457.0, 12795.833333333334], [458.0, 15103.5], [459.0, 10325.166666666666], [465.0, 7551.0], [464.0, 8148.0], [467.0, 11555.285714285714], [476.0, 7791.0], [477.0, 11859.111111111111], [478.0, 9951.25], [479.0, 8191.333333333333], [468.0, 10649.0], [469.0, 10928.5], [471.0, 86593.0], [472.0, 16272.000000000002], [474.0, 12229.8], [475.0, 10036.0], [481.0, 11197.0], [480.0, 11613.777777777777], [482.0, 14905.777777777777], [483.0, 7939.0], [484.0, 8447.0], [485.0, 12351.25], [486.0, 10367.0], [487.0, 11603.0], [488.0, 12799.0], [494.0, 10611.0], [495.0, 35544.24999999999], [492.0, 10886.125], [493.0, 11550.599999999999], [489.0, 8533.0], [490.0, 11940.4], [491.0, 12648.285714285714], [496.0, 10071.0], [497.0, 9129.833333333334], [500.0, 23301.60552268246]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[382.35973597359765, 16766.207370737066]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 155646.5], [3.0, 33281.66666666667], [4.0, 528.5], [5.0, 583.3333333333334], [6.0, 691.75], [7.0, 792.5], [8.0, 735.2], [9.0, 1010.0], [10.0, 782.9], [11.0, 865.0999999999999], [12.0, 868.0], [13.0, 853.3636363636364], [14.0, 966.3076923076922], [15.0, 787.2352941176471], [16.0, 966.1428571428571], [17.0, 861.235294117647], [18.0, 35918.59259259259], [19.0, 896.4374999999999], [20.0, 955.3636363636365], [21.0, 1074.125], [22.0, 1244.0], [23.0, 1264.1176470588234], [24.0, 1235.7857142857142], [25.0, 45463.68421052632], [26.0, 1414.1764705882354], [27.0, 12190.76923076923], [28.0, 2030.0000000000002], [29.0, 5599.894736842105], [30.0, 5879.588235294118], [31.0, 6273.375], [32.0, 1723.3157894736844], [33.0, 1619.0625], [34.0, 7219.428571428571], [35.0, 5072.523809523809], [36.0, 5736.777777777777], [37.0, 1795.2777777777776], [38.0, 6089.764705882353], [39.0, 5585.0], [40.0, 2019.0000000000002], [41.0, 1850.1111111111109], [42.0, 2163.8888888888887], [43.0, 2096.352941176471], [44.0, 4935.200000000001], [45.0, 5105.578947368421], [46.0, 4826.5], [47.0, 6102.733333333334], [48.0, 5627.823529411765], [49.0, 2735.277777777778], [50.0, 2541.4117647058824], [51.0, 2679.333333333333], [52.0, 2846.875], [53.0, 2889.777777777778], [54.0, 2703.7777777777783], [55.0, 2743.571428571429], [56.0, 3136.066666666667], [57.0, 3264.9285714285716], [58.0, 3269.777777777778], [59.0, 7136.066666666667], [60.0, 6600.473684210526], [61.0, 3029.3846153846152], [62.0, 3488.3076923076924], [63.0, 3772.4], [64.0, 7224.117647058823], [65.0, 7019.2941176470595], [66.0, 3551.190476190476], [67.0, 6487.9375], [68.0, 7873.75], [69.0, 9895.052631578947], [70.0, 7122.588235294118], [71.0, 4118.187499999999], [72.0, 6508.200000000001], [73.0, 6900.64705882353], [74.0, 8627.363636363636], [75.0, 10812.117647058822], [76.0, 4467.499999999999], [77.0, 4550.357142857142], [78.0, 4664.700000000001], [79.0, 5090.533333333333], [80.0, 5180.285714285716], [81.0, 5155.700000000001], [82.0, 5418.375000000001], [83.0, 5675.916666666667], [84.0, 10207.5], [85.0, 7172.0625], [86.0, 9310.916666666668], [87.0, 8969.076923076922], [88.0, 14372.0], [89.0, 9468.0], [90.0, 11858.454545454546], [91.0, 11974.583333333332], [92.0, 8676.0], [93.0, 13798.785714285714], [94.0, 14386.615384615383], [95.0, 15755.090909090908], [96.0, 15112.833333333334], [97.0, 5869.0], [98.0, 6796.142857142857], [99.0, 7572.461538461539], [100.0, 7240.75], [101.0, 7693.785714285714], [102.0, 21361.823529411766], [103.0, 9990.64705882353], [104.0, 12639.411764705881], [105.0, 6233.8], [106.0, 8303.833333333332], [107.0, 6589.4], [108.0, 6662.625], [109.0, 7331.076923076923], [110.0, 9533.5], [111.0, 17587.272727272728], [112.0, 8447.111111111111], [113.0, 8705.384615384615], [114.0, 8895.6], [115.0, 14384.2], [116.0, 8822.923076923076], [117.0, 19072.8], [118.0, 10038.833333333334], [119.0, 8390.692307692309], [120.0, 8497.333333333334], [121.0, 8137.071428571428], [122.0, 11785.923076923078], [123.0, 9471.7], [124.0, 9170.153846153848], [125.0, 8997.375000000002], [126.0, 8722.818181818182], [127.0, 18828.0], [128.0, 12676.583333333332], [129.0, 14942.666666666666], [130.0, 8914.545454545454], [131.0, 17192.615384615383], [132.0, 8613.4], [133.0, 9114.777777777777], [134.0, 9232.636363636362], [135.0, 13130.454545454544], [136.0, 12143.4], [137.0, 17235.30769230769], [138.0, 10223.769230769229], [139.0, 15612.470588235294], [140.0, 12186.933333333334], [141.0, 9747.176470588236], [142.0, 19784.9], [143.0, 17020.0], [144.0, 9322.7], [145.0, 9227.615384615385], [146.0, 11106.23076923077], [147.0, 12650.461538461539], [148.0, 9421.88888888889], [149.0, 10108.500000000002], [150.0, 11398.764705882351], [151.0, 10154.999999999998], [152.0, 11305.937500000002], [153.0, 11819.14285714286], [154.0, 11244.25], [155.0, 11455.461538461537], [156.0, 12455.5], [157.0, 12442.5], [158.0, 11201.714285714284], [159.0, 10883.5], [160.0, 10651.214285714284], [161.0, 10224.272727272728], [162.0, 9957.41666666667], [163.0, 10780.384615384615], [164.0, 11513.307692307693], [165.0, 10735.769230769232], [166.0, 11790.9], [167.0, 11880.888888888889], [168.0, 11116.000000000002], [169.0, 14369.333333333332], [170.0, 12021.5], [171.0, 11888.266666666666], [172.0, 11904.882352941175], [173.0, 11778.75], [174.0, 10895.4], [175.0, 10960.642857142857], [176.0, 10981.07142857143], [177.0, 10709.125], [178.0, 16603.333333333332], [179.0, 10943.461538461539], [180.0, 11087.333333333334], [181.0, 11225.333333333334], [182.0, 11725.333333333334], [183.0, 11441.923076923076], [184.0, 11888.25], [185.0, 10836.454545454546], [186.0, 14331.117647058823], [187.0, 11962.75], [188.0, 13847.352941176468], [189.0, 11601.545454545454], [190.0, 14871.076923076924], [191.0, 10866.615384615387], [192.0, 11206.272727272726], [193.0, 10776.272727272726], [194.0, 11477.461538461537], [195.0, 11162.866666666667], [196.0, 11749.533333333333], [197.0, 10859.0], [198.0, 11990.000000000002], [199.0, 11409.916666666668], [200.0, 11988.666666666668], [201.0, 11483.888888888887], [202.0, 12418.23076923077], [203.0, 13836.999999999998], [204.0, 18043.0], [205.0, 12171.000000000002], [206.0, 15152.0], [207.0, 12703.166666666666], [208.0, 12595.071428571428], [209.0, 12157.888888888889], [210.0, 14839.944444444442], [211.0, 12129.285714285714], [212.0, 11456.300000000001], [213.0, 12386.0], [214.0, 14419.166666666666], [215.0, 12600.75], [216.0, 11325.0], [217.0, 12967.454545454546], [218.0, 12190.571428571428], [219.0, 12742.384615384617], [220.0, 13453.4], [221.0, 12250.76923076923], [222.0, 11621.142857142857], [223.0, 13262.684210526317], [224.0, 12111.363636363636], [225.0, 11499.874999999998], [226.0, 13009.0], [227.0, 12362.125], [228.0, 12092.0], [229.0, 11841.999999999998], [230.0, 11711.09090909091], [231.0, 12393.25], [232.0, 12917.2], [233.0, 11987.875], [234.0, 11656.07142857143], [235.0, 11671.35294117647], [236.0, 12030.411764705883], [237.0, 10141.416666666666], [238.0, 11374.454545454546], [239.0, 11097.5], [240.0, 10723.846153846152], [241.0, 11143.42857142857], [242.0, 11695.000000000002], [243.0, 11907.0], [244.0, 12594.333333333334], [245.0, 12140.133333333333], [246.0, 11822.153846153848], [247.0, 12040.4375], [248.0, 12380.0], [249.0, 12444.636363636362], [250.0, 12020.1], [251.0, 12749.09090909091], [252.0, 12186.454545454546], [253.0, 12734.882352941175], [254.0, 17427.818181818184], [255.0, 10637.142857142857], [257.0, 12247.545454545454], [256.0, 12329.454545454546], [258.0, 11586.23076923077], [259.0, 13248.000000000004], [260.0, 20885.81818181818], [261.0, 11717.642857142855], [262.0, 12344.111111111111], [263.0, 12661.272727272726], [264.0, 24498.533333333336], [270.0, 17633.952380952378], [271.0, 11349.117647058822], [268.0, 11941.4], [269.0, 11510.800000000001], [265.0, 11779.529411764704], [266.0, 18578.058823529413], [267.0, 11748.214285714286], [273.0, 10727.933333333334], [272.0, 11167.076923076924], [274.0, 11016.272727272728], [275.0, 11066.0], [276.0, 15963.23076923077], [277.0, 12261.0625], [278.0, 11774.166666666668], [279.0, 13113.77777777778], [280.0, 21935.071428571428], [286.0, 11203.142857142857], [287.0, 10685.583333333334], [284.0, 11350.388888888889], [285.0, 10826.416666666668], [281.0, 11129.666666666666], [282.0, 19202.0], [283.0, 11735.888888888887], [289.0, 11230.357142857143], [288.0, 14079.23076923077], [290.0, 13454.2], [291.0, 11849.916666666668], [292.0, 18782.1], [293.0, 12040.0625], [294.0, 11792.076923076924], [295.0, 12013.333333333334], [296.0, 12915.333333333334], [302.0, 12708.2], [303.0, 20059.421052631576], [300.0, 11152.13636363636], [301.0, 10913.750000000002], [297.0, 12062.35], [298.0, 11421.800000000001], [299.0, 24863.53333333333], [305.0, 18079.866666666665], [304.0, 11848.000000000002], [306.0, 12562.0], [307.0, 25358.473684210527], [308.0, 11433.272727272728], [309.0, 23064.000000000007], [310.0, 11439.91304347826], [311.0, 11405.555555555557], [312.0, 11413.894736842103], [318.0, 12910.75], [319.0, 11352.0], [316.0, 10614.333333333334], [317.0, 11164.499999999998], [313.0, 14680.227272727272], [314.0, 10055.181818181818], [315.0, 13053.470588235292], [321.0, 12019.499999999998], [320.0, 11259.066666666668], [322.0, 11916.076923076924], [323.0, 13662.263157894737], [324.0, 11919.25], [325.0, 12584.250000000002], [326.0, 11573.062499999998], [327.0, 11878.90909090909], [328.0, 11926.619047619048], [334.0, 12689.117647058823], [335.0, 10610.266666666665], [332.0, 11834.307692307693], [333.0, 15199.7], [329.0, 12213.312500000002], [330.0, 12649.5], [331.0, 17121.4375], [337.0, 11056.550000000003], [336.0, 11346.454545454546], [338.0, 10759.933333333334], [339.0, 11746.92857142857], [340.0, 12341.099999999999], [341.0, 11166.833333333332], [342.0, 13400.703703703703], [343.0, 11388.062499999998], [344.0, 11260.3], [350.0, 11003.000000000002], [351.0, 11081.533333333333], [348.0, 11681.5], [349.0, 10081.368421052632], [345.0, 10429.074074074075], [346.0, 18190.411764705877], [347.0, 11161.043478260872], [353.0, 8584.304347826086], [352.0, 10509.749999999996], [354.0, 11025.866666666667], [355.0, 12127.5], [356.0, 10557.09090909091], [357.0, 11592.407407407407], [358.0, 10139.374999999998], [359.0, 11411.25], [360.0, 10855.42105263158], [366.0, 11516.272727272726], [367.0, 14292.678571428572], [364.0, 10385.611111111111], [365.0, 9681.999999999998], [361.0, 10549.714285714286], [362.0, 9862.499999999998], [363.0, 10804.181818181818], [369.0, 11616.928571428572], [368.0, 20446.833333333336], [370.0, 10946.111111111111], [371.0, 11675.2], [372.0, 10913.95], [373.0, 11330.599999999999], [374.0, 10371.656250000002], [375.0, 12109.142857142857], [376.0, 12157.300000000001], [382.0, 10203.2], [383.0, 10904.928571428572], [380.0, 10233.600000000002], [381.0, 10981.956521739134], [377.0, 10815.88], [378.0, 9792.666666666666], [379.0, 10568.349999999999], [385.0, 11325.843750000002], [384.0, 8206.5], [386.0, 10243.058823529414], [387.0, 11617.999999999998], [388.0, 14162.090909090908], [389.0, 10914.800000000001], [390.0, 10532.249999999998], [391.0, 10937.733333333334], [392.0, 10228.846153846152], [398.0, 11372.181818181816], [399.0, 10775.354838709678], [396.0, 10107.055555555557], [397.0, 9492.250000000002], [393.0, 11381.218750000002], [394.0, 9656.363636363638], [395.0, 9744.724137931034], [401.0, 10542.5625], [400.0, 10356.103448275862], [402.0, 9297.062500000004], [403.0, 10618.09090909091], [404.0, 10187.086956521738], [405.0, 10048.882352941177], [406.0, 9993.423076923076], [407.0, 11812.5], [408.0, 9525.153846153846], [414.0, 10036.344827586207], [415.0, 10367.233333333335], [412.0, 11504.499999999996], [413.0, 10465.181818181818], [409.0, 10800.241379310346], [410.0, 9530.266666666666], [411.0, 9973.692307692309], [417.0, 11244.999999999998], [416.0, 10439.29411764706], [418.0, 11886.500000000002], [419.0, 10338.499999999998], [420.0, 11136.142857142859], [421.0, 10929.227272727272], [422.0, 12984.812499999998], [423.0, 11806.000000000004], [424.0, 11255.0], [430.0, 10967.21428571429], [431.0, 10504.791666666668], [428.0, 10611.166666666666], [429.0, 12429.944444444445], [425.0, 12043.846153846152], [426.0, 11403.157894736842], [427.0, 10314.105263157893], [433.0, 10896.153846153846], [432.0, 9922.5], [434.0, 10797.944444444442], [435.0, 11624.4], [436.0, 9924.750000000002], [437.0, 9210.289473684212], [438.0, 9489.666666666668], [439.0, 10277.136363636364], [440.0, 11128.964285714288], [446.0, 12993.84], [447.0, 10218.586206896553], [444.0, 9778.0], [445.0, 9283.733333333334], [441.0, 10227.842105263158], [442.0, 9718.470588235294], [443.0, 9490.384615384615], [449.0, 10893.944444444443], [448.0, 10720.000000000002], [450.0, 12077.692307692309], [451.0, 11368.937500000002], [452.0, 10842.157894736843], [453.0, 12324.559999999998], [454.0, 11833.590909090912], [455.0, 12214.923076923078], [456.0, 9894.36842105263], [462.0, 16627.4375], [463.0, 11083.307692307693], [460.0, 13654.22222222222], [461.0, 11079.625], [457.0, 11175.136363636362], [458.0, 16299.61904761905], [459.0, 11294.160000000003], [465.0, 10066.727272727272], [464.0, 9961.250000000002], [466.0, 11469.380952380952], [467.0, 11157.000000000002], [468.0, 10539.708333333334], [469.0, 11093.0], [470.0, 10581.0], [471.0, 40960.86956521739], [472.0, 15234.931034482757], [478.0, 10360.478260869568], [479.0, 10219.777777777777], [476.0, 10943.5625], [477.0, 10002.041666666668], [473.0, 10826.166666666668], [474.0, 9651.130434782608], [475.0, 16710.666666666664], [481.0, 9295.499999999998], [480.0, 10136.486486486489], [482.0, 10590.48], [483.0, 9428.761904761906], [484.0, 10033.666666666668], [485.0, 10785.275862068967], [486.0, 9839.307692307691], [487.0, 10497.666666666666], [488.0, 10139.349999999999], [494.0, 10534.347826086956], [495.0, 15441.52380952381], [492.0, 11511.239999999996], [493.0, 10330.351351351355], [489.0, 10393.933333333334], [490.0, 9966.578947368422], [491.0, 10238.095238095235], [496.0, 11266.333333333334], [497.0, 10067.666666666668], [498.0, 10896.846153846152], [499.0, 10318.615384615385], [500.0, 15113.780099502503]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[320.7210952333358, 11747.882881982621]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 34.0], [3.0, 38.0], [4.0, 49053.0], [5.0, 49052.0], [6.0, 25.0], [7.0, 28.0], [8.0, 27.0], [9.0, 22.0], [10.0, 714.0], [11.0, 32.0], [12.0, 34.0], [13.0, 31.0], [14.0, 20.0], [15.0, 37.0], [16.0, 20.0], [17.0, 23.0], [18.0, 68.0], [19.0, 52.0], [20.0, 118.0], [21.0, 324.0], [22.0, 293.0], [23.0, 413.0], [24.0, 599.0], [25.0, 105421.5], [26.0, 605.0], [27.0, 68967.0], [29.0, 783.5], [30.0, 735.0], [31.0, 872.0], [32.0, 758.0], [33.0, 901.0], [35.0, 922.0], [37.0, 1058.5], [39.0, 1243.0], [40.0, 1140.0], [41.0, 1245.0], [42.0, 1242.0], [43.0, 62789.5], [44.0, 1183.0], [45.0, 1290.0], [46.0, 1388.0], [47.0, 1596.0], [48.0, 1850.0], [49.0, 1674.0], [50.0, 1723.0], [51.0, 1951.0], [53.0, 1891.0], [54.0, 37472.0], [55.0, 55319.0], [56.0, 2053.0], [57.0, 37702.666666666664], [58.0, 40398.0], [59.0, 2449.0], [60.0, 2455.0], [61.0, 33132.5], [62.0, 38378.0], [63.0, 2969.0], [64.0, 2736.0], [65.0, 2657.0], [66.0, 72229.5], [67.0, 2521.0], [68.0, 2839.0], [70.0, 3184.0], [71.0, 2964.0], [72.0, 2796.0], [73.0, 2899.0], [75.0, 3188.0], [76.0, 3764.0], [78.0, 4121.0], [79.0, 30704.5], [77.0, 57372.0], [80.0, 4213.0], [81.0, 4458.0], [82.0, 4622.0], [83.0, 59642.0], [84.0, 4508.0], [85.0, 4445.0], [86.0, 4232.0], [87.0, 4528.0], [88.0, 4408.0], [89.0, 4842.0], [91.0, 5491.0], [92.0, 5304.0], [93.0, 5005.0], [94.0, 5013.0], [95.0, 5230.0], [96.0, 5333.0], [97.0, 5215.0], [99.0, 6368.0], [98.0, 115224.0], [100.0, 6359.0], [101.0, 6575.0], [102.0, 64621.0], [103.0, 5542.0], [104.0, 5141.0], [105.0, 36740.0], [106.0, 5239.0], [107.0, 5724.0], [109.0, 59957.0], [111.0, 7268.0], [112.0, 61003.5], [113.0, 7691.0], [114.0, 60877.0], [115.0, 7572.0], [116.0, 7903.0], [117.0, 7457.0], [118.0, 7294.0], [119.0, 30950.5], [120.0, 7111.0], [121.0, 60578.5], [122.0, 7233.0], [123.0, 7531.0], [124.0, 60699.5], [125.0, 30884.0], [126.0, 7678.0], [127.0, 7824.0], [129.0, 8067.0], [130.0, 8001.0], [131.0, 8164.0], [132.0, 8016.0], [133.0, 43063.666666666664], [135.0, 8022.0], [134.0, 51681.0], [136.0, 8308.0], [137.0, 8147.0], [138.0, 8777.0], [139.0, 8536.0], [140.0, 8386.0], [141.0, 8396.0], [142.0, 8492.0], [143.0, 8173.0], [144.0, 7986.0], [145.0, 59701.0], [147.0, 8270.0], [148.0, 8761.0], [150.0, 9191.0], [151.0, 9531.0], [152.0, 9359.0], [153.0, 9499.0], [154.0, 9430.0], [159.0, 110730.0], [162.0, 11274.0], [167.0, 10416.0], [163.0, 110681.0], [161.0, 50278.0], [160.0, 50294.0], [168.0, 20117.0], [171.0, 11059.0], [172.0, 26491.0], [174.0, 20897.5], [175.0, 31463.0], [183.0, 31234.0], [182.0, 31249.5], [180.0, 31266.0], [177.0, 31425.0], [176.0, 31442.0], [185.0, 21181.5], [187.0, 11230.0], [188.0, 13646.0], [191.0, 9923.0], [189.0, 63447.0], [199.0, 20672.0], [197.0, 20710.0], [195.0, 21057.0], [193.0, 21098.0], [192.0, 20092.0], [206.0, 26645.0], [201.0, 20639.0], [200.0, 20656.0], [210.0, 11055.0], [211.0, 41941.0], [213.0, 17818.0], [215.0, 16908.75], [209.0, 51407.0], [217.0, 7763.0], [219.0, 21147.5], [220.0, 11208.0], [223.0, 31706.0], [218.0, 15898.0], [225.0, 11441.0], [227.0, 49249.5], [229.0, 26623.333333333332], [231.0, 34470.0], [232.0, 16097.0], [236.0, 10707.0], [237.0, 42611.5], [239.0, 9003.5], [233.0, 16511.0], [241.0, 20364.5], [243.0, 8734.5], [244.0, 38955.0], [245.0, 23901.0], [246.0, 10820.0], [240.0, 16434.0], [248.0, 12597.0], [249.0, 26249.0], [251.0, 8035.0], [252.0, 18098.333333333332], [253.0, 13787.0], [254.0, 52293.142857142855], [255.0, 2.0], [250.0, 18899.0], [257.0, 20821.0], [256.0, 75884.33333333333], [258.0, 70215.5], [259.0, 14267.0], [268.0, 64451.5], [269.0, 20224.0], [270.0, 13231.0], [271.0, 6709.0], [260.0, 75016.0], [261.0, 19904.0], [262.0, 55480.2], [264.0, 54469.66666666667], [265.0, 21596.5], [266.0, 68071.0], [267.0, 10143.333333333334], [273.0, 8045.0], [272.0, 75634.0], [274.0, 36864.25], [284.0, 60076.5], [285.0, 9585.0], [286.0, 61219.0], [287.0, 11034.333333333334], [276.0, 7628.0], [277.0, 12770.57142857143], [278.0, 47570.4], [279.0, 7689.0], [280.0, 9733.0], [282.0, 47800.33333333333], [283.0, 14285.5], [289.0, 10033.0], [288.0, 56808.0], [290.0, 20845.375], [300.0, 11953.166666666668], [301.0, 28843.999999999996], [302.0, 13190.5], [303.0, 49752.0], [292.0, 34858.5], [294.0, 11793.333333333334], [295.0, 35682.5], [296.0, 13312.0], [297.0, 14079.0], [299.0, 13158.666666666666], [305.0, 57446.333333333336], [304.0, 9623.4], [306.0, 7655.5], [307.0, 42400.5], [308.0, 11980.857142857141], [309.0, 44001.75], [310.0, 6657.333333333333], [311.0, 16456.2], [312.0, 7423.0], [319.0, 11559.5], [316.0, 8551.875], [318.0, 9264.5], [313.0, 10496.5], [314.0, 10751.0], [315.0, 5927.2], [321.0, 13310.5], [320.0, 9091.0], [322.0, 13247.75], [323.0, 23807.75], [325.0, 14080.0], [326.0, 11345.5], [327.0, 13142.666666666666], [328.0, 11470.333333333336], [334.0, 11969.5], [335.0, 18914.857142857145], [332.0, 9048.25], [333.0, 10793.0], [329.0, 12330.999999999998], [331.0, 13506.666666666666], [337.0, 10821.142857142857], [336.0, 12796.6], [338.0, 43028.33333333333], [339.0, 12318.0], [340.0, 108123.0], [341.0, 14335.666666666666], [342.0, 11569.214285714286], [343.0, 14075.5], [344.0, 10953.769230769229], [350.0, 9758.000000000002], [351.0, 8182.333333333333], [348.0, 23127.6], [349.0, 7084.0], [345.0, 11058.833333333332], [346.0, 10240.166666666666], [347.0, 12266.727272727272], [353.0, 8571.818181818182], [352.0, 9830.5], [354.0, 6913.833333333333], [355.0, 9450.5], [356.0, 10172.0], [357.0, 9643.666666666666], [358.0, 7516.0], [359.0, 11080.125], [360.0, 53462.0], [367.0, 10102.272727272726], [364.0, 8157.0], [365.0, 9170.0], [361.0, 9455.374999999998], [362.0, 10434.57142857143], [363.0, 8736.2], [369.0, 11116.0], [368.0, 49243.0], [371.0, 11556.714285714284], [380.0, 11844.0], [381.0, 11850.300000000001], [382.0, 9216.0], [383.0, 11148.5], [372.0, 25250.125], [373.0, 7677.666666666666], [374.0, 12681.400000000001], [375.0, 8318.4], [376.0, 11185.0], [377.0, 13035.272727272728], [378.0, 11450.666666666668], [379.0, 10001.2], [385.0, 13484.75], [384.0, 7217.5], [386.0, 7413.0], [387.0, 9415.0], [388.0, 12612.636363636366], [389.0, 9158.0], [390.0, 9377.875], [391.0, 7040.0], [392.0, 6916.25], [399.0, 12032.0], [396.0, 9763.599999999999], [397.0, 6706.571428571429], [393.0, 10939.0], [394.0, 9458.124999999998], [395.0, 8522.4], [402.0, 8602.5], [400.0, 12694.285714285716], [403.0, 9185.750000000002], [412.0, 11219.0], [413.0, 9216.0], [414.0, 10605.2], [415.0, 8800.0], [404.0, 13568.0], [405.0, 14097.0], [406.0, 11158.5], [407.0, 12611.777777777777], [408.0, 8324.5], [409.0, 11586.888888888889], [410.0, 9257.5], [411.0, 8952.0], [417.0, 9657.666666666666], [416.0, 9692.8], [418.0, 11008.0], [419.0, 8397.25], [420.0, 10605.142857142859], [421.0, 10050.142857142857], [422.0, 0.0], [423.0, 12544.0], [424.0, 10574.833333333334], [430.0, 8111.2], [431.0, 11248.6], [428.0, 10938.625000000002], [429.0, 12848.0], [426.0, 13823.0], [427.0, 12208.875], [432.0, 8699.5], [435.0, 11618.571428571428], [444.0, 11082.166666666666], [445.0, 8677.666666666666], [446.0, 8122.900000000001], [447.0, 10103.416666666666], [436.0, 7935.0], [437.0, 7723.933333333334], [438.0, 12208.666666666666], [439.0, 8807.2], [440.0, 11089.555555555555], [441.0, 1.0], [442.0, 8242.333333333334], [443.0, 9984.666666666666], [449.0, 0.0], [448.0, 102142.0], [451.0, 0.0], [460.0, 39232.75], [461.0, 10665.0], [462.0, 80810.66666666666], [463.0, 10438.5], [452.0, 12896.0], [453.0, 11032.166666666668], [454.0, 16335.666666666666], [455.0, 10466.25], [456.0, 11833.75], [457.0, 13311.5], [458.0, 27003.571428571428], [459.0, 9981.0], [465.0, 9164.571428571428], [464.0, 10361.666666666666], [466.0, 10168.5], [467.0, 11748.3], [468.0, 13568.333333333334], [470.0, 10970.0], [471.0, 123392.0], [472.0, 20503.81818181818], [478.0, 12606.0], [479.0, 7429.714285714285], [476.0, 12721.0], [477.0, 11406.0], [473.0, 14591.0], [474.0, 14127.666666666666], [475.0, 8876.57142857143], [481.0, 10910.6], [480.0, 12332.857142857143], [482.0, 11270.375], [483.0, 46408.99999999999], [484.0, 16362.5], [485.0, 14101.5], [486.0, 10209.0], [487.0, 10104.5], [488.0, 12542.0], [494.0, 11028.083333333334], [495.0, 21516.333333333332], [492.0, 13336.666666666666], [493.0, 11520.384615384613], [489.0, 13567.333333333334], [490.0, 11952.666666666666], [491.0, 11231.75], [496.0, 10612.0], [497.0, 10154.166666666666], [498.0, 10934.0], [500.0, 21660.521560574976], [1.0, 111.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[378.56977964323187, 18212.031479538324]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 333.21666666666664, "minX": 1.53928272E12, "maxY": 1160254.7666666666, "series": [{"data": [[1.53928272E12, 69495.88333333333], [1.5392832E12, 926394.3833333333], [1.5392829E12, 880248.2333333333], [1.53928338E12, 174384.95], [1.53928308E12, 818431.4833333333], [1.53928278E12, 1160254.7666666666], [1.53928326E12, 855297.25], [1.53928296E12, 826857.9333333333], [1.53928314E12, 870978.7333333333], [1.53928284E12, 882638.0], [1.53928332E12, 836614.7666666667], [1.53928302E12, 858588.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928272E12, 333.21666666666664], [1.5392832E12, 6766.166666666667], [1.5392829E12, 3309.95], [1.53928338E12, 1103.9], [1.53928308E12, 6555.283333333334], [1.53928278E12, 4470.5], [1.53928326E12, 7049.8], [1.53928296E12, 3058.9666666666667], [1.53928314E12, 7096.433333333333], [1.53928284E12, 3457.016666666667], [1.53928332E12, 6398.133333333333], [1.53928302E12, 4657.883333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928338E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 93.16666666666667, "minX": 1.53928272E12, "maxY": 60918.82608695652, "series": [{"data": [[1.53928272E12, 1777.3000000000002], [1.5392832E12, 14271.67968749999], [1.5392829E12, 9859.857142857143], [1.53928338E12, 60918.82608695652], [1.53928308E12, 11665.141935483876], [1.53928278E12, 2273.357142857142], [1.53928326E12, 24400.382165605104], [1.53928296E12, 11813.249999999998], [1.53928314E12, 10589.164383561638], [1.53928284E12, 6919.5], [1.53928332E12, 20552.539062500004], [1.53928302E12, 12828.404109589048]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928272E12, 799.2105263157897], [1.5392832E12, 11514.033305578687], [1.5392829E12, 10562.004081632655], [1.53928338E12, 55648.694805194806], [1.53928308E12, 11557.887640449437], [1.53928278E12, 2260.855371900827], [1.53928326E12, 14330.46717171718], [1.53928296E12, 11930.906069364166], [1.53928314E12, 10598.72570016475], [1.53928284E12, 6835.332876712328], [1.53928332E12, 15423.438704028018], [1.53928302E12, 14068.596736596748]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928272E12, 93.16666666666667], [1.5392832E12, 15400.512455516016], [1.5392829E12, 9819.516129032261], [1.53928338E12, 58119.600000000006], [1.53928308E12, 12159.559105431306], [1.53928278E12, 1399.5438596491226], [1.53928326E12, 21755.45980707394], [1.53928296E12, 24047.027777777777], [1.53928314E12, 10817.779552715658], [1.53928284E12, 5928.109090909091], [1.53928332E12, 20183.817796610172], [1.53928302E12, 31507.560209424093]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928338E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 93.08333333333333, "minX": 1.53928272E12, "maxY": 60918.82608695652, "series": [{"data": [[1.53928272E12, 1777.3000000000002], [1.5392832E12, 14271.648437499993], [1.5392829E12, 9859.857142857143], [1.53928338E12, 60918.82608695652], [1.53928308E12, 11665.083870967746], [1.53928278E12, 2273.357142857142], [1.53928326E12, 24400.372611464965], [1.53928296E12, 11813.208333333332], [1.53928314E12, 10589.157534246577], [1.53928284E12, 6919.5], [1.53928332E12, 20552.52343749999], [1.53928302E12, 12828.383561643837]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928272E12, 798.7894736842104], [1.5392832E12, 11513.72106577852], [1.5392829E12, 10561.522448979598], [1.53928338E12, 55648.37012987012], [1.53928308E12, 11557.567415730335], [1.53928278E12, 2260.380165289259], [1.53928326E12, 14330.138888888863], [1.53928296E12, 11930.354046242772], [1.53928314E12, 10598.44398682043], [1.53928284E12, 6834.835616438361], [1.53928332E12, 15423.115586690017], [1.53928302E12, 14068.224941724922]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928272E12, 93.08333333333333], [1.5392832E12, 15400.487544483985], [1.5392829E12, 9819.516129032261], [1.53928338E12, 58119.58571428572], [1.53928308E12, 12159.52076677315], [1.53928278E12, 1399.5087719298242], [1.53928326E12, 21755.453376205758], [1.53928296E12, 24046.972222222223], [1.53928314E12, 10817.76357827476], [1.53928284E12, 5928.072727272727], [1.53928332E12, 20183.813559322025], [1.53928302E12, 31507.554973821956]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928338E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928272E12, "maxY": 6.333333333333334, "series": [{"data": [[1.53928272E12, 0.0], [1.5392832E12, 0.2499999999999999], [1.5392829E12, 0.6857142857142857], [1.53928338E12, 0.21739130434782608], [1.53928308E12, 0.38709677419354865], [1.53928278E12, 0.30357142857142855], [1.53928326E12, 0.3025477707006369], [1.53928296E12, 0.8333333333333333], [1.53928314E12, 0.2191780821917809], [1.53928284E12, 0.94], [1.53928332E12, 0.22656250000000003], [1.53928302E12, 0.6712328767123285]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928272E12, 0.280701754385965], [1.5392832E12, 0.3313905079100748], [1.5392829E12, 0.5442176870748298], [1.53928338E12, 0.28571428571428586], [1.53928308E12, 0.4541198501872661], [1.53928278E12, 0.5413223140495861], [1.53928326E12, 0.3535353535353536], [1.53928296E12, 0.6011560693641612], [1.53928314E12, 0.3962108731466225], [1.53928284E12, 0.6671232876712333], [1.53928332E12, 0.34150612959719784], [1.53928302E12, 0.5151515151515162]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928272E12, 6.333333333333334], [1.5392832E12, 0.22775800711743777], [1.5392829E12, 1.2258064516129028], [1.53928338E12, 0.21428571428571438], [1.53928308E12, 0.3738019169329073], [1.53928278E12, 1.2105263157894737], [1.53928326E12, 0.257234726688103], [1.53928296E12, 0.9444444444444445], [1.53928314E12, 0.43769968051118197], [1.53928284E12, 0.9090909090909093], [1.53928332E12, 0.16101694915254242], [1.53928302E12, 0.7958115183246074]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928338E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.53928272E12, "maxY": 118247.0, "series": [{"data": [[1.53928272E12, 5559.0], [1.5392832E12, 20765.0], [1.5392829E12, 26491.0], [1.53928338E12, 118247.0], [1.53928308E12, 16788.0], [1.53928278E12, 7670.0], [1.53928326E12, 42972.0], [1.53928296E12, 62184.0], [1.53928314E12, 21281.0], [1.53928284E12, 13541.0], [1.53928332E12, 21453.0], [1.53928302E12, 52152.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928272E12, 22.0], [1.5392832E12, 8585.0], [1.5392829E12, 7786.0], [1.53928338E12, 12730.0], [1.53928308E12, 9519.0], [1.53928278E12, 20.0], [1.53928326E12, 8824.0], [1.53928296E12, 9745.0], [1.53928314E12, 8488.0], [1.53928284E12, 2796.0], [1.53928332E12, 9643.0], [1.53928302E12, 9689.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928272E12, 1393.0], [1.5392832E12, 12388.0], [1.5392829E12, 10896.400000000001], [1.53928338E12, 12952.3], [1.53928308E12, 12362.4], [1.53928278E12, 3596.4000000000015], [1.53928326E12, 12496.6], [1.53928296E12, 11858.6], [1.53928314E12, 12416.0], [1.53928284E12, 8246.9], [1.53928332E12, 12627.0], [1.53928302E12, 12162.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928272E12, 5559.0], [1.5392832E12, 16048.919999999998], [1.5392829E12, 13541.24], [1.53928338E12, 52218.349999999926], [1.53928308E12, 16047.529999999999], [1.53928278E12, 5107.480000000002], [1.53928326E12, 16330.279999999999], [1.53928296E12, 15583.30000000001], [1.53928314E12, 16036.399999999998], [1.53928284E12, 10631.539999999999], [1.53928332E12, 16401.22], [1.53928302E12, 16034.799999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928272E12, 2238.0], [1.5392832E12, 13442.599999999999], [1.5392829E12, 11384.8], [1.53928338E12, 14568.799999999996], [1.53928308E12, 13540.349999999999], [1.53928278E12, 3942.8], [1.53928326E12, 13538.199999999999], [1.53928296E12, 12694.699999999999], [1.53928314E12, 13538.5], [1.53928284E12, 8835.45], [1.53928332E12, 13632.0], [1.53928302E12, 13231.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928338E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 71695.0, "series": [{"data": [[1.0, 710.0], [4.0, 31345.5], [18.0, 2087.0], [19.0, 11277.0], [12.0, 11588.5], [13.0, 8889.0], [27.0, 11364.0], [28.0, 10842.5], [30.0, 10968.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 71695.0], [18.0, 2.0], [19.0, 13312.0], [12.0, 13570.5], [13.0, 1.0], [27.0, 13311.0], [28.0, 11776.0], [30.0, 12288.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 71695.0, "series": [{"data": [[1.0, 710.0], [4.0, 31345.5], [18.0, 2087.0], [19.0, 11277.0], [12.0, 11588.5], [13.0, 8889.0], [27.0, 11363.0], [28.0, 10842.0], [30.0, 10967.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 71695.0], [18.0, 2.0], [19.0, 13312.0], [12.0, 13570.5], [13.0, 1.0], [27.0, 13311.0], [28.0, 11776.0], [30.0, 12288.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.5166666666666666, "minX": 1.53928272E12, "maxY": 31.316666666666666, "series": [{"data": [[1.53928272E12, 1.5166666666666666], [1.5392832E12, 29.966666666666665], [1.5392829E12, 14.35], [1.53928308E12, 29.183333333333334], [1.53928278E12, 19.016666666666666], [1.53928326E12, 30.35], [1.53928296E12, 13.533333333333333], [1.53928314E12, 31.316666666666666], [1.53928284E12, 14.916666666666666], [1.53928332E12, 23.783333333333335], [1.53928302E12, 20.916666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928332E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53928272E12, "maxY": 17.7, "series": [{"data": [[1.53928272E12, 1.15], [1.5392832E12, 13.266666666666667], [1.5392829E12, 12.7], [1.53928338E12, 3.3], [1.53928308E12, 11.766666666666667], [1.53928278E12, 17.0], [1.53928326E12, 12.033333333333333], [1.53928296E12, 11.8], [1.53928314E12, 12.666666666666666], [1.53928284E12, 13.083333333333334], [1.53928332E12, 11.666666666666666], [1.53928302E12, 12.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928272E12, 0.16666666666666666], [1.5392832E12, 0.35], [1.5392829E12, 0.5833333333333334], [1.53928308E12, 0.45], [1.53928278E12, 0.9333333333333333], [1.53928326E12, 0.38333333333333336], [1.53928296E12, 0.36666666666666664], [1.53928314E12, 0.6166666666666667], [1.53928284E12, 0.8333333333333334], [1.53928332E12, 0.2833333333333333], [1.53928302E12, 0.4]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.5392832E12, 15.166666666666666], [1.5392829E12, 0.06666666666666667], [1.53928338E12, 0.5666666666666667], [1.53928308E12, 15.8], [1.53928278E12, 0.08333333333333333], [1.53928326E12, 17.7], [1.53928296E12, 0.3333333333333333], [1.53928314E12, 16.816666666666666], [1.53928332E12, 15.216666666666667], [1.53928302E12, 7.1]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.5392832E12, 0.18333333333333332], [1.53928338E12, 1.0166666666666666], [1.53928308E12, 0.16666666666666666], [1.53928326E12, 0.1], [1.53928296E12, 0.03333333333333333], [1.53928314E12, 0.21666666666666667], [1.53928332E12, 0.06666666666666667], [1.53928302E12, 0.11666666666666667]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928338E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53928272E12, "maxY": 16.05, "series": [{"data": [[1.53928272E12, 0.2], [1.5392832E12, 0.48333333333333334], [1.5392829E12, 0.5166666666666667], [1.53928338E12, 1.0166666666666666], [1.53928308E12, 0.4666666666666667], [1.53928278E12, 0.95], [1.53928326E12, 0.3], [1.53928296E12, 0.4], [1.53928314E12, 0.6833333333333333], [1.53928284E12, 0.9166666666666666], [1.53928332E12, 0.23333333333333334], [1.53928302E12, 0.45]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928272E12, 0.16666666666666666], [1.5392832E12, 0.35], [1.5392829E12, 0.5833333333333334], [1.53928308E12, 0.45], [1.53928278E12, 0.9333333333333333], [1.53928326E12, 0.38333333333333336], [1.53928296E12, 0.36666666666666664], [1.53928314E12, 0.6166666666666667], [1.53928284E12, 0.8333333333333334], [1.53928332E12, 0.2833333333333333], [1.53928302E12, 0.4]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928272E12, 0.95], [1.5392832E12, 12.783333333333333], [1.5392829E12, 12.183333333333334], [1.53928338E12, 2.283333333333333], [1.53928308E12, 11.3], [1.53928278E12, 16.05], [1.53928326E12, 11.733333333333333], [1.53928296E12, 11.4], [1.53928314E12, 11.983333333333333], [1.53928284E12, 12.166666666666666], [1.53928332E12, 11.433333333333334], [1.53928302E12, 11.85]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.5392832E12, 4.2], [1.53928338E12, 0.15], [1.53928308E12, 4.75], [1.53928326E12, 4.883333333333334], [1.53928296E12, 0.2], [1.53928314E12, 4.533333333333333], [1.53928332E12, 3.7], [1.53928302E12, 2.7333333333333334]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5392832E12, 7.233333333333333], [1.5392829E12, 0.06666666666666667], [1.53928338E12, 0.2833333333333333], [1.53928308E12, 6.5], [1.53928278E12, 0.08333333333333333], [1.53928326E12, 8.066666666666666], [1.53928296E12, 0.13333333333333333], [1.53928314E12, 8.25], [1.53928332E12, 7.6], [1.53928302E12, 2.45]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.5392832E12, 3.9166666666666665], [1.53928338E12, 1.15], [1.53928308E12, 4.716666666666667], [1.53928326E12, 4.85], [1.53928296E12, 0.03333333333333333], [1.53928314E12, 4.25], [1.53928332E12, 3.9833333333333334], [1.53928302E12, 2.033333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928338E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
