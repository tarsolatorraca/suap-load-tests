/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 214529.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 7.0], [7.9, 582.0], [8.0, 624.0], [8.1, 653.0], [8.2, 988.0], [8.3, 1053.0], [8.4, 1251.0], [8.5, 1269.0], [8.6, 1338.0], [8.7, 1564.0], [8.8, 1837.0], [8.9, 2001.0], [9.0, 2102.0], [9.1, 2224.0], [9.2, 2278.0], [9.3, 2288.0], [9.4, 2303.0], [9.5, 2316.0], [9.6, 2327.0], [9.7, 2357.0], [9.8, 2505.0], [9.9, 2555.0], [10.0, 2627.0], [10.1, 2792.0], [10.2, 2864.0], [10.3, 3045.0], [10.4, 3153.0], [10.5, 3305.0], [10.6, 3488.0], [10.7, 3638.0], [10.8, 3798.0], [10.9, 3844.0], [11.0, 3852.0], [11.1, 3931.0], [11.2, 3962.0], [11.3, 4158.0], [11.4, 4196.0], [11.5, 4265.0], [11.6, 4485.0], [11.7, 4699.0], [11.8, 4797.0], [11.9, 5143.0], [12.0, 5366.0], [12.1, 5610.0], [12.2, 5614.0], [12.3, 5833.0], [12.4, 6034.0], [12.5, 6582.0], [12.6, 6620.0], [12.7, 6675.0], [12.8, 7010.0], [12.9, 7083.0], [13.0, 7163.0], [13.1, 7164.0], [13.2, 7164.0], [13.3, 7166.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7169.0], [16.3, 7171.0], [16.4, 7171.0], [16.5, 7171.0], [16.6, 7171.0], [16.7, 7171.0], [16.8, 7172.0], [16.9, 7172.0], [17.0, 7173.0], [17.1, 7330.0], [17.2, 7358.0], [17.3, 7420.0], [17.4, 7421.0], [17.5, 7422.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7424.0], [19.2, 7424.0], [19.3, 7424.0], [19.4, 7427.0], [19.5, 7428.0], [19.6, 7620.0], [19.7, 7675.0], [19.8, 7677.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7679.0], [20.6, 7679.0], [20.7, 7679.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7680.0], [21.8, 7680.0], [21.9, 7680.0], [22.0, 7680.0], [22.1, 7681.0], [22.2, 7683.0], [22.3, 7683.0], [22.4, 7683.0], [22.5, 7683.0], [22.6, 7684.0], [22.7, 7684.0], [22.8, 7684.0], [22.9, 7684.0], [23.0, 7839.0], [23.1, 7931.0], [23.2, 7932.0], [23.3, 7932.0], [23.4, 7935.0], [23.5, 7935.0], [23.6, 7936.0], [23.7, 7936.0], [23.8, 7936.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7940.0], [24.3, 8013.0], [24.4, 8111.0], [24.5, 8187.0], [24.6, 8189.0], [24.7, 8191.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8195.0], [25.6, 8197.0], [25.7, 8306.0], [25.8, 8315.0], [25.9, 8404.0], [26.0, 8443.0], [26.1, 8444.0], [26.2, 8444.0], [26.3, 8444.0], [26.4, 8444.0], [26.5, 8445.0], [26.6, 8447.0], [26.7, 8447.0], [26.8, 8448.0], [26.9, 8448.0], [27.0, 8448.0], [27.1, 8449.0], [27.2, 8450.0], [27.3, 8451.0], [27.4, 8451.0], [27.5, 8562.0], [27.6, 8699.0], [27.7, 8703.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8707.0], [29.1, 8707.0], [29.2, 8739.0], [29.3, 8835.0], [29.4, 8956.0], [29.5, 8960.0], [29.6, 8960.0], [29.7, 9049.0], [29.8, 9212.0], [29.9, 9212.0], [30.0, 9212.0], [30.1, 9214.0], [30.2, 9215.0], [30.3, 9215.0], [30.4, 9215.0], [30.5, 9215.0], [30.6, 9215.0], [30.7, 9215.0], [30.8, 9215.0], [30.9, 9215.0], [31.0, 9215.0], [31.1, 9215.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9216.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9217.0], [31.9, 9219.0], [32.0, 9219.0], [32.1, 9220.0], [32.2, 9220.0], [32.3, 9302.0], [32.4, 9362.0], [32.5, 9421.0], [32.6, 9468.0], [32.7, 9471.0], [32.8, 9490.0], [32.9, 9497.0], [33.0, 9524.0], [33.1, 9571.0], [33.2, 9588.0], [33.3, 9597.0], [33.4, 9622.0], [33.5, 9689.0], [33.6, 9701.0], [33.7, 9721.0], [33.8, 9727.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9729.0], [34.8, 9751.0], [34.9, 9771.0], [35.0, 9777.0], [35.1, 9805.0], [35.2, 9857.0], [35.3, 9894.0], [35.4, 9930.0], [35.5, 9980.0], [35.6, 9982.0], [35.7, 9983.0], [35.8, 9983.0], [35.9, 9983.0], [36.0, 9983.0], [36.1, 9985.0], [36.2, 10043.0], [36.3, 10054.0], [36.4, 10071.0], [36.5, 10073.0], [36.6, 10078.0], [36.7, 10094.0], [36.8, 10155.0], [36.9, 10199.0], [37.0, 10217.0], [37.1, 10239.0], [37.2, 10239.0], [37.3, 10240.0], [37.4, 10240.0], [37.5, 10240.0], [37.6, 10240.0], [37.7, 10240.0], [37.8, 10240.0], [37.9, 10241.0], [38.0, 10252.0], [38.1, 10268.0], [38.2, 10283.0], [38.3, 10298.0], [38.4, 10332.0], [38.5, 10379.0], [38.6, 10380.0], [38.7, 10390.0], [38.8, 10405.0], [38.9, 10441.0], [39.0, 10475.0], [39.1, 10487.0], [39.2, 10488.0], [39.3, 10491.0], [39.4, 10495.0], [39.5, 10496.0], [39.6, 10496.0], [39.7, 10514.0], [39.8, 10524.0], [39.9, 10542.0], [40.0, 10542.0], [40.1, 10571.0], [40.2, 10581.0], [40.3, 10592.0], [40.4, 10629.0], [40.5, 10646.0], [40.6, 10686.0], [40.7, 10702.0], [40.8, 10706.0], [40.9, 10714.0], [41.0, 10733.0], [41.1, 10745.0], [41.2, 10751.0], [41.3, 10752.0], [41.4, 10752.0], [41.5, 10752.0], [41.6, 10752.0], [41.7, 10752.0], [41.8, 10754.0], [41.9, 10765.0], [42.0, 10773.0], [42.1, 10785.0], [42.2, 10786.0], [42.3, 10804.0], [42.4, 10818.0], [42.5, 10832.0], [42.6, 10836.0], [42.7, 10874.0], [42.8, 10923.0], [42.9, 10947.0], [43.0, 10976.0], [43.1, 11007.0], [43.2, 11007.0], [43.3, 11008.0], [43.4, 11008.0], [43.5, 11008.0], [43.6, 11008.0], [43.7, 11011.0], [43.8, 11012.0], [43.9, 11054.0], [44.0, 11072.0], [44.1, 11094.0], [44.2, 11108.0], [44.3, 11109.0], [44.4, 11128.0], [44.5, 11135.0], [44.6, 11147.0], [44.7, 11153.0], [44.8, 11233.0], [44.9, 11259.0], [45.0, 11259.0], [45.1, 11263.0], [45.2, 11263.0], [45.3, 11263.0], [45.4, 11263.0], [45.5, 11263.0], [45.6, 11264.0], [45.7, 11264.0], [45.8, 11264.0], [45.9, 11264.0], [46.0, 11267.0], [46.1, 11268.0], [46.2, 11298.0], [46.3, 11321.0], [46.4, 11367.0], [46.5, 11379.0], [46.6, 11404.0], [46.7, 11436.0], [46.8, 11466.0], [46.9, 11520.0], [47.0, 11520.0], [47.1, 11520.0], [47.2, 11524.0], [47.3, 11571.0], [47.4, 11642.0], [47.5, 11667.0], [47.6, 11717.0], [47.7, 11746.0], [47.8, 11767.0], [47.9, 11770.0], [48.0, 11771.0], [48.1, 11772.0], [48.2, 11775.0], [48.3, 11775.0], [48.4, 11775.0], [48.5, 11775.0], [48.6, 11775.0], [48.7, 11775.0], [48.8, 11775.0], [48.9, 11775.0], [49.0, 11776.0], [49.1, 11776.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11776.0], [49.5, 11776.0], [49.6, 11777.0], [49.7, 11780.0], [49.8, 11783.0], [49.9, 11849.0], [50.0, 11854.0], [50.1, 11876.0], [50.2, 11936.0], [50.3, 11995.0], [50.4, 12026.0], [50.5, 12031.0], [50.6, 12032.0], [50.7, 12071.0], [50.8, 12084.0], [50.9, 12089.0], [51.0, 12104.0], [51.1, 12130.0], [51.2, 12157.0], [51.3, 12171.0], [51.4, 12178.0], [51.5, 12181.0], [51.6, 12209.0], [51.7, 12272.0], [51.8, 12286.0], [51.9, 12287.0], [52.0, 12287.0], [52.1, 12287.0], [52.2, 12287.0], [52.3, 12287.0], [52.4, 12288.0], [52.5, 12288.0], [52.6, 12289.0], [52.7, 12292.0], [52.8, 12409.0], [52.9, 12430.0], [53.0, 12539.0], [53.1, 12540.0], [53.2, 12544.0], [53.3, 12544.0], [53.4, 12613.0], [53.5, 12636.0], [53.6, 12641.0], [53.7, 12659.0], [53.8, 12761.0], [53.9, 12795.0], [54.0, 12797.0], [54.1, 12799.0], [54.2, 12799.0], [54.3, 12799.0], [54.4, 12800.0], [54.5, 12800.0], [54.6, 12800.0], [54.7, 12800.0], [54.8, 12801.0], [54.9, 12817.0], [55.0, 12838.0], [55.1, 12951.0], [55.2, 12984.0], [55.3, 13034.0], [55.4, 13055.0], [55.5, 13055.0], [55.6, 13056.0], [55.7, 13056.0], [55.8, 13056.0], [55.9, 13056.0], [56.0, 13074.0], [56.1, 13203.0], [56.2, 13254.0], [56.3, 13307.0], [56.4, 13307.0], [56.5, 13307.0], [56.6, 13307.0], [56.7, 13307.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13308.0], [57.9, 13308.0], [58.0, 13308.0], [58.1, 13308.0], [58.2, 13308.0], [58.3, 13308.0], [58.4, 13308.0], [58.5, 13308.0], [58.6, 13309.0], [58.7, 13309.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13310.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13310.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13314.0], [77.1, 13314.0], [77.2, 13314.0], [77.3, 13315.0], [77.4, 13315.0], [77.5, 13315.0], [77.6, 13315.0], [77.7, 13315.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13315.0], [78.2, 13315.0], [78.3, 13315.0], [78.4, 13315.0], [78.5, 13315.0], [78.6, 13315.0], [78.7, 13315.0], [78.8, 13316.0], [78.9, 13316.0], [79.0, 13316.0], [79.1, 13316.0], [79.2, 13316.0], [79.3, 13316.0], [79.4, 13317.0], [79.5, 13374.0], [79.6, 13430.0], [79.7, 13558.0], [79.8, 13564.0], [79.9, 13567.0], [80.0, 13568.0], [80.1, 13568.0], [80.2, 13568.0], [80.3, 13571.0], [80.4, 13576.0], [80.5, 13745.0], [80.6, 13819.0], [80.7, 13819.0], [80.8, 13819.0], [80.9, 13819.0], [81.0, 13820.0], [81.1, 13820.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13823.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13823.0], [82.5, 13823.0], [82.6, 13823.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13824.0], [84.0, 13824.0], [84.1, 13824.0], [84.2, 13824.0], [84.3, 13824.0], [84.4, 13824.0], [84.5, 13824.0], [84.6, 13824.0], [84.7, 13824.0], [84.8, 13824.0], [84.9, 13824.0], [85.0, 13824.0], [85.1, 13824.0], [85.2, 13825.0], [85.3, 13827.0], [85.4, 13827.0], [85.5, 13827.0], [85.6, 13827.0], [85.7, 13828.0], [85.8, 13828.0], [85.9, 13828.0], [86.0, 13828.0], [86.1, 13828.0], [86.2, 13859.0], [86.3, 14078.0], [86.4, 14079.0], [86.5, 14079.0], [86.6, 14080.0], [86.7, 14111.0], [86.8, 14331.0], [86.9, 14332.0], [87.0, 14332.0], [87.1, 14332.0], [87.2, 14334.0], [87.3, 14335.0], [87.4, 14335.0], [87.5, 14335.0], [87.6, 14335.0], [87.7, 14335.0], [87.8, 14335.0], [87.9, 14335.0], [88.0, 14335.0], [88.1, 14335.0], [88.2, 14335.0], [88.3, 14336.0], [88.4, 14336.0], [88.5, 14336.0], [88.6, 14336.0], [88.7, 14336.0], [88.8, 14336.0], [88.9, 14336.0], [89.0, 14336.0], [89.1, 14336.0], [89.2, 14338.0], [89.3, 14339.0], [89.4, 14339.0], [89.5, 14339.0], [89.6, 14340.0], [89.7, 14399.0], [89.8, 14558.0], [89.9, 14591.0], [90.0, 14591.0], [90.1, 14592.0], [90.2, 14592.0], [90.3, 14595.0], [90.4, 14789.0], [90.5, 14847.0], [90.6, 14848.0], [90.7, 14848.0], [90.8, 14848.0], [90.9, 14907.0], [91.0, 15103.0], [91.1, 15106.0], [91.2, 15359.0], [91.3, 15619.0], [91.4, 15634.0], [91.5, 15728.0], [91.6, 15871.0], [91.7, 15992.0], [91.8, 16022.0], [91.9, 16032.0], [92.0, 16128.0], [92.1, 16842.0], [92.2, 16891.0], [92.3, 17403.0], [92.4, 17879.0], [92.5, 17920.0], [92.6, 18175.0], [92.7, 18431.0], [92.8, 18687.0], [92.9, 18688.0], [93.0, 18688.0], [93.1, 18692.0], [93.2, 26111.0], [93.3, 26367.0], [93.4, 26367.0], [93.5, 26371.0], [93.6, 26623.0], [93.7, 27391.0], [93.8, 27391.0], [93.9, 27392.0], [94.0, 29206.0], [94.1, 29439.0], [94.2, 34321.0], [94.3, 40174.0], [94.4, 40291.0], [94.5, 40319.0], [94.6, 52224.0], [94.7, 53247.0], [94.8, 55834.0], [94.9, 57343.0], [95.0, 59388.0], [95.1, 59392.0], [95.2, 61439.0], [95.3, 72191.0], [95.4, 72192.0], [95.5, 88316.0], [95.6, 90112.0], [95.7, 90364.0], [95.8, 91395.0], [95.9, 94717.0], [96.0, 97276.0], [96.1, 99072.0], [96.2, 100355.0], [96.3, 102400.0], [96.4, 102400.0], [96.5, 105472.0], [96.6, 105476.0], [96.7, 105728.0], [96.8, 105728.0], [96.9, 106236.0], [97.0, 106496.0], [97.1, 106497.0], [97.2, 106751.0], [97.3, 106753.0], [97.4, 108540.0], [97.5, 110076.0], [97.6, 111359.0], [97.7, 111970.0], [97.8, 115200.0], [97.9, 115200.0], [98.0, 115200.0], [98.1, 115712.0], [98.2, 119552.0], [98.3, 120063.0], [98.4, 120068.0], [98.5, 122368.0], [98.6, 122368.0], [98.7, 126977.0], [98.8, 136447.0], [98.9, 137472.0], [99.0, 138492.0], [99.1, 144644.0], [99.2, 144644.0], [99.3, 154368.0], [99.4, 160768.0], [99.5, 160768.0], [99.6, 165376.0], [99.7, 188412.0], [99.8, 209916.0], [99.9, 214529.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 2.0], [2.5, 520.0], [2.6, 571.0], [2.7, 624.0], [2.8, 651.0], [2.9, 675.0], [3.0, 696.0], [3.1, 717.0], [3.2, 730.0], [3.3, 770.0], [3.4, 792.0], [3.5, 815.0], [3.6, 844.0], [3.7, 859.0], [3.8, 886.0], [3.9, 928.0], [4.0, 964.0], [4.1, 1011.0], [4.2, 1054.0], [4.3, 1090.0], [4.4, 1125.0], [4.5, 1177.0], [4.6, 1212.0], [4.7, 1230.0], [4.8, 1269.0], [4.9, 1300.0], [5.0, 1329.0], [5.1, 1364.0], [5.2, 1414.0], [5.3, 1455.0], [5.4, 1497.0], [5.5, 1528.0], [5.6, 1606.0], [5.7, 1657.0], [5.8, 1734.0], [5.9, 1796.0], [6.0, 1840.0], [6.1, 1887.0], [6.2, 1927.0], [6.3, 1964.0], [6.4, 1984.0], [6.5, 2020.0], [6.6, 2055.0], [6.7, 2104.0], [6.8, 2131.0], [6.9, 2173.0], [7.0, 2212.0], [7.1, 2230.0], [7.2, 2247.0], [7.3, 2264.0], [7.4, 2281.0], [7.5, 2318.0], [7.6, 2343.0], [7.7, 2380.0], [7.8, 2397.0], [7.9, 2432.0], [8.0, 2453.0], [8.1, 2469.0], [8.2, 2492.0], [8.3, 2517.0], [8.4, 2543.0], [8.5, 2579.0], [8.6, 2613.0], [8.7, 2645.0], [8.8, 2673.0], [8.9, 2708.0], [9.0, 2727.0], [9.1, 2773.0], [9.2, 2798.0], [9.3, 2824.0], [9.4, 2880.0], [9.5, 2906.0], [9.6, 2926.0], [9.7, 2954.0], [9.8, 2996.0], [9.9, 3045.0], [10.0, 3092.0], [10.1, 3133.0], [10.2, 3177.0], [10.3, 3210.0], [10.4, 3246.0], [10.5, 3271.0], [10.6, 3311.0], [10.7, 3366.0], [10.8, 3427.0], [10.9, 3475.0], [11.0, 3499.0], [11.1, 3530.0], [11.2, 3567.0], [11.3, 3640.0], [11.4, 3675.0], [11.5, 3715.0], [11.6, 3785.0], [11.7, 3813.0], [11.8, 3850.0], [11.9, 3885.0], [12.0, 3935.0], [12.1, 3960.0], [12.2, 4015.0], [12.3, 4078.0], [12.4, 4141.0], [12.5, 4229.0], [12.6, 4312.0], [12.7, 4357.0], [12.8, 4399.0], [12.9, 4445.0], [13.0, 4500.0], [13.1, 4546.0], [13.2, 4609.0], [13.3, 4673.0], [13.4, 4712.0], [13.5, 4772.0], [13.6, 4820.0], [13.7, 4928.0], [13.8, 4981.0], [13.9, 5043.0], [14.0, 5104.0], [14.1, 5229.0], [14.2, 5315.0], [14.3, 5368.0], [14.4, 5502.0], [14.5, 5620.0], [14.6, 5701.0], [14.7, 5768.0], [14.8, 5809.0], [14.9, 5872.0], [15.0, 5945.0], [15.1, 5987.0], [15.2, 6025.0], [15.3, 6059.0], [15.4, 6104.0], [15.5, 6158.0], [15.6, 6242.0], [15.7, 6317.0], [15.8, 6397.0], [15.9, 6465.0], [16.0, 6519.0], [16.1, 6586.0], [16.2, 6701.0], [16.3, 6786.0], [16.4, 6859.0], [16.5, 6917.0], [16.6, 6993.0], [16.7, 7043.0], [16.8, 7117.0], [16.9, 7163.0], [17.0, 7166.0], [17.1, 7167.0], [17.2, 7168.0], [17.3, 7168.0], [17.4, 7168.0], [17.5, 7168.0], [17.6, 7171.0], [17.7, 7172.0], [17.8, 7195.0], [17.9, 7282.0], [18.0, 7309.0], [18.1, 7377.0], [18.2, 7408.0], [18.3, 7420.0], [18.4, 7423.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7428.0], [19.2, 7484.0], [19.3, 7556.0], [19.4, 7605.0], [19.5, 7676.0], [19.6, 7679.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7681.0], [20.1, 7684.0], [20.2, 7684.0], [20.3, 7721.0], [20.4, 7785.0], [20.5, 7825.0], [20.6, 7864.0], [20.7, 7924.0], [20.8, 7932.0], [20.9, 7935.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7944.0], [21.3, 7998.0], [21.4, 8080.0], [21.5, 8176.0], [21.6, 8188.0], [21.7, 8192.0], [21.8, 8192.0], [21.9, 8226.0], [22.0, 8340.0], [22.1, 8406.0], [22.2, 8444.0], [22.3, 8448.0], [22.4, 8448.0], [22.5, 8452.0], [22.6, 8512.0], [22.7, 8619.0], [22.8, 8685.0], [22.9, 8703.0], [23.0, 8703.0], [23.1, 8704.0], [23.2, 8704.0], [23.3, 8704.0], [23.4, 8705.0], [23.5, 8708.0], [23.6, 8717.0], [23.7, 8779.0], [23.8, 8841.0], [23.9, 8879.0], [24.0, 8926.0], [24.1, 8957.0], [24.2, 8960.0], [24.3, 8983.0], [24.4, 9012.0], [24.5, 9074.0], [24.6, 9115.0], [24.7, 9153.0], [24.8, 9197.0], [24.9, 9212.0], [25.0, 9215.0], [25.1, 9215.0], [25.2, 9216.0], [25.3, 9216.0], [25.4, 9219.0], [25.5, 9229.0], [25.6, 9271.0], [25.7, 9314.0], [25.8, 9349.0], [25.9, 9383.0], [26.0, 9411.0], [26.1, 9427.0], [26.2, 9453.0], [26.3, 9468.0], [26.4, 9472.0], [26.5, 9487.0], [26.6, 9507.0], [26.7, 9530.0], [26.8, 9542.0], [26.9, 9560.0], [27.0, 9574.0], [27.1, 9586.0], [27.2, 9593.0], [27.3, 9608.0], [27.4, 9617.0], [27.5, 9633.0], [27.6, 9651.0], [27.7, 9659.0], [27.8, 9666.0], [27.9, 9673.0], [28.0, 9693.0], [28.1, 9710.0], [28.2, 9719.0], [28.3, 9725.0], [28.4, 9727.0], [28.5, 9728.0], [28.6, 9728.0], [28.7, 9732.0], [28.8, 9741.0], [28.9, 9750.0], [29.0, 9766.0], [29.1, 9780.0], [29.2, 9799.0], [29.3, 9808.0], [29.4, 9818.0], [29.5, 9831.0], [29.6, 9838.0], [29.7, 9853.0], [29.8, 9862.0], [29.9, 9873.0], [30.0, 9885.0], [30.1, 9896.0], [30.2, 9906.0], [30.3, 9920.0], [30.4, 9939.0], [30.5, 9952.0], [30.6, 9958.0], [30.7, 9970.0], [30.8, 9980.0], [30.9, 9983.0], [31.0, 9984.0], [31.1, 9991.0], [31.2, 9997.0], [31.3, 10005.0], [31.4, 10015.0], [31.5, 10020.0], [31.6, 10028.0], [31.7, 10036.0], [31.8, 10043.0], [31.9, 10048.0], [32.0, 10062.0], [32.1, 10067.0], [32.2, 10074.0], [32.3, 10081.0], [32.4, 10091.0], [32.5, 10097.0], [32.6, 10106.0], [32.7, 10114.0], [32.8, 10119.0], [32.9, 10126.0], [33.0, 10134.0], [33.1, 10140.0], [33.2, 10145.0], [33.3, 10151.0], [33.4, 10157.0], [33.5, 10163.0], [33.6, 10169.0], [33.7, 10177.0], [33.8, 10184.0], [33.9, 10190.0], [34.0, 10197.0], [34.1, 10204.0], [34.2, 10213.0], [34.3, 10220.0], [34.4, 10227.0], [34.5, 10233.0], [34.6, 10237.0], [34.7, 10240.0], [34.8, 10240.0], [34.9, 10244.0], [35.0, 10250.0], [35.1, 10257.0], [35.2, 10265.0], [35.3, 10272.0], [35.4, 10276.0], [35.5, 10279.0], [35.6, 10283.0], [35.7, 10288.0], [35.8, 10295.0], [35.9, 10301.0], [36.0, 10307.0], [36.1, 10310.0], [36.2, 10314.0], [36.3, 10319.0], [36.4, 10325.0], [36.5, 10331.0], [36.6, 10334.0], [36.7, 10339.0], [36.8, 10343.0], [36.9, 10347.0], [37.0, 10350.0], [37.1, 10354.0], [37.2, 10357.0], [37.3, 10362.0], [37.4, 10367.0], [37.5, 10371.0], [37.6, 10377.0], [37.7, 10381.0], [37.8, 10384.0], [37.9, 10389.0], [38.0, 10392.0], [38.1, 10395.0], [38.2, 10398.0], [38.3, 10402.0], [38.4, 10406.0], [38.5, 10410.0], [38.6, 10414.0], [38.7, 10419.0], [38.8, 10422.0], [38.9, 10426.0], [39.0, 10431.0], [39.1, 10433.0], [39.2, 10436.0], [39.3, 10440.0], [39.4, 10443.0], [39.5, 10448.0], [39.6, 10452.0], [39.7, 10458.0], [39.8, 10462.0], [39.9, 10465.0], [40.0, 10471.0], [40.1, 10475.0], [40.2, 10480.0], [40.3, 10483.0], [40.4, 10486.0], [40.5, 10490.0], [40.6, 10495.0], [40.7, 10496.0], [40.8, 10497.0], [40.9, 10502.0], [41.0, 10506.0], [41.1, 10510.0], [41.2, 10513.0], [41.3, 10518.0], [41.4, 10521.0], [41.5, 10524.0], [41.6, 10527.0], [41.7, 10532.0], [41.8, 10536.0], [41.9, 10539.0], [42.0, 10543.0], [42.1, 10547.0], [42.2, 10551.0], [42.3, 10555.0], [42.4, 10558.0], [42.5, 10564.0], [42.6, 10567.0], [42.7, 10570.0], [42.8, 10575.0], [42.9, 10578.0], [43.0, 10581.0], [43.1, 10585.0], [43.2, 10588.0], [43.3, 10593.0], [43.4, 10598.0], [43.5, 10601.0], [43.6, 10604.0], [43.7, 10608.0], [43.8, 10611.0], [43.9, 10616.0], [44.0, 10620.0], [44.1, 10624.0], [44.2, 10628.0], [44.3, 10631.0], [44.4, 10635.0], [44.5, 10639.0], [44.6, 10643.0], [44.7, 10647.0], [44.8, 10649.0], [44.9, 10652.0], [45.0, 10656.0], [45.1, 10659.0], [45.2, 10662.0], [45.3, 10665.0], [45.4, 10668.0], [45.5, 10672.0], [45.6, 10675.0], [45.7, 10678.0], [45.8, 10680.0], [45.9, 10684.0], [46.0, 10688.0], [46.1, 10691.0], [46.2, 10695.0], [46.3, 10697.0], [46.4, 10700.0], [46.5, 10705.0], [46.6, 10709.0], [46.7, 10711.0], [46.8, 10715.0], [46.9, 10718.0], [47.0, 10722.0], [47.1, 10727.0], [47.2, 10730.0], [47.3, 10734.0], [47.4, 10738.0], [47.5, 10741.0], [47.6, 10743.0], [47.7, 10748.0], [47.8, 10750.0], [47.9, 10752.0], [48.0, 10752.0], [48.1, 10752.0], [48.2, 10754.0], [48.3, 10756.0], [48.4, 10758.0], [48.5, 10763.0], [48.6, 10766.0], [48.7, 10770.0], [48.8, 10775.0], [48.9, 10777.0], [49.0, 10780.0], [49.1, 10783.0], [49.2, 10789.0], [49.3, 10794.0], [49.4, 10797.0], [49.5, 10798.0], [49.6, 10800.0], [49.7, 10806.0], [49.8, 10811.0], [49.9, 10815.0], [50.0, 10820.0], [50.1, 10825.0], [50.2, 10828.0], [50.3, 10831.0], [50.4, 10834.0], [50.5, 10839.0], [50.6, 10843.0], [50.7, 10848.0], [50.8, 10851.0], [50.9, 10854.0], [51.0, 10861.0], [51.1, 10866.0], [51.2, 10869.0], [51.3, 10872.0], [51.4, 10875.0], [51.5, 10877.0], [51.6, 10881.0], [51.7, 10885.0], [51.8, 10887.0], [51.9, 10891.0], [52.0, 10895.0], [52.1, 10900.0], [52.2, 10904.0], [52.3, 10908.0], [52.4, 10912.0], [52.5, 10915.0], [52.6, 10919.0], [52.7, 10921.0], [52.8, 10923.0], [52.9, 10926.0], [53.0, 10928.0], [53.1, 10930.0], [53.2, 10933.0], [53.3, 10934.0], [53.4, 10942.0], [53.5, 10945.0], [53.6, 10947.0], [53.7, 10951.0], [53.8, 10953.0], [53.9, 10956.0], [54.0, 10960.0], [54.1, 10963.0], [54.2, 10966.0], [54.3, 10968.0], [54.4, 10970.0], [54.5, 10974.0], [54.6, 10976.0], [54.7, 10977.0], [54.8, 10981.0], [54.9, 10985.0], [55.0, 10988.0], [55.1, 10993.0], [55.2, 10996.0], [55.3, 11000.0], [55.4, 11002.0], [55.5, 11007.0], [55.6, 11008.0], [55.7, 11008.0], [55.8, 11013.0], [55.9, 11018.0], [56.0, 11020.0], [56.1, 11023.0], [56.2, 11026.0], [56.3, 11030.0], [56.4, 11034.0], [56.5, 11039.0], [56.6, 11042.0], [56.7, 11048.0], [56.8, 11053.0], [56.9, 11055.0], [57.0, 11058.0], [57.1, 11062.0], [57.2, 11066.0], [57.3, 11072.0], [57.4, 11075.0], [57.5, 11078.0], [57.6, 11082.0], [57.7, 11084.0], [57.8, 11087.0], [57.9, 11093.0], [58.0, 11096.0], [58.1, 11099.0], [58.2, 11103.0], [58.3, 11107.0], [58.4, 11110.0], [58.5, 11114.0], [58.6, 11117.0], [58.7, 11119.0], [58.8, 11122.0], [58.9, 11125.0], [59.0, 11131.0], [59.1, 11132.0], [59.2, 11135.0], [59.3, 11139.0], [59.4, 11143.0], [59.5, 11148.0], [59.6, 11152.0], [59.7, 11157.0], [59.8, 11160.0], [59.9, 11163.0], [60.0, 11167.0], [60.1, 11170.0], [60.2, 11175.0], [60.3, 11178.0], [60.4, 11181.0], [60.5, 11185.0], [60.6, 11189.0], [60.7, 11192.0], [60.8, 11196.0], [60.9, 11201.0], [61.0, 11206.0], [61.1, 11210.0], [61.2, 11214.0], [61.3, 11220.0], [61.4, 11223.0], [61.5, 11228.0], [61.6, 11232.0], [61.7, 11236.0], [61.8, 11239.0], [61.9, 11242.0], [62.0, 11245.0], [62.1, 11248.0], [62.2, 11252.0], [62.3, 11257.0], [62.4, 11260.0], [62.5, 11262.0], [62.6, 11263.0], [62.7, 11264.0], [62.8, 11264.0], [62.9, 11266.0], [63.0, 11268.0], [63.1, 11273.0], [63.2, 11276.0], [63.3, 11281.0], [63.4, 11286.0], [63.5, 11291.0], [63.6, 11294.0], [63.7, 11298.0], [63.8, 11302.0], [63.9, 11305.0], [64.0, 11307.0], [64.1, 11311.0], [64.2, 11316.0], [64.3, 11319.0], [64.4, 11321.0], [64.5, 11329.0], [64.6, 11335.0], [64.7, 11341.0], [64.8, 11345.0], [64.9, 11351.0], [65.0, 11353.0], [65.1, 11357.0], [65.2, 11360.0], [65.3, 11363.0], [65.4, 11366.0], [65.5, 11376.0], [65.6, 11380.0], [65.7, 11386.0], [65.8, 11388.0], [65.9, 11395.0], [66.0, 11399.0], [66.1, 11403.0], [66.2, 11406.0], [66.3, 11410.0], [66.4, 11417.0], [66.5, 11422.0], [66.6, 11427.0], [66.7, 11434.0], [66.8, 11442.0], [66.9, 11448.0], [67.0, 11454.0], [67.1, 11460.0], [67.2, 11466.0], [67.3, 11471.0], [67.4, 11478.0], [67.5, 11484.0], [67.6, 11488.0], [67.7, 11494.0], [67.8, 11504.0], [67.9, 11508.0], [68.0, 11511.0], [68.1, 11517.0], [68.2, 11520.0], [68.3, 11523.0], [68.4, 11527.0], [68.5, 11531.0], [68.6, 11538.0], [68.7, 11544.0], [68.8, 11555.0], [68.9, 11561.0], [69.0, 11563.0], [69.1, 11569.0], [69.2, 11576.0], [69.3, 11580.0], [69.4, 11588.0], [69.5, 11592.0], [69.6, 11602.0], [69.7, 11612.0], [69.8, 11615.0], [69.9, 11620.0], [70.0, 11631.0], [70.1, 11638.0], [70.2, 11647.0], [70.3, 11655.0], [70.4, 11659.0], [70.5, 11667.0], [70.6, 11675.0], [70.7, 11685.0], [70.8, 11690.0], [70.9, 11695.0], [71.0, 11700.0], [71.1, 11708.0], [71.2, 11715.0], [71.3, 11723.0], [71.4, 11733.0], [71.5, 11740.0], [71.6, 11750.0], [71.7, 11756.0], [71.8, 11764.0], [71.9, 11768.0], [72.0, 11775.0], [72.1, 11775.0], [72.2, 11775.0], [72.3, 11776.0], [72.4, 11776.0], [72.5, 11779.0], [72.6, 11784.0], [72.7, 11796.0], [72.8, 11807.0], [72.9, 11816.0], [73.0, 11820.0], [73.1, 11830.0], [73.2, 11837.0], [73.3, 11848.0], [73.4, 11863.0], [73.5, 11874.0], [73.6, 11884.0], [73.7, 11893.0], [73.8, 11900.0], [73.9, 11908.0], [74.0, 11919.0], [74.1, 11930.0], [74.2, 11938.0], [74.3, 11961.0], [74.4, 11964.0], [74.5, 11982.0], [74.6, 11992.0], [74.7, 12004.0], [74.8, 12017.0], [74.9, 12031.0], [75.0, 12037.0], [75.1, 12045.0], [75.2, 12058.0], [75.3, 12077.0], [75.4, 12088.0], [75.5, 12104.0], [75.6, 12113.0], [75.7, 12136.0], [75.8, 12156.0], [75.9, 12175.0], [76.0, 12190.0], [76.1, 12208.0], [76.2, 12222.0], [76.3, 12243.0], [76.4, 12260.0], [76.5, 12283.0], [76.6, 12287.0], [76.7, 12288.0], [76.8, 12294.0], [76.9, 12314.0], [77.0, 12326.0], [77.1, 12359.0], [77.2, 12371.0], [77.3, 12385.0], [77.4, 12407.0], [77.5, 12438.0], [77.6, 12462.0], [77.7, 12480.0], [77.8, 12502.0], [77.9, 12539.0], [78.0, 12543.0], [78.1, 12547.0], [78.2, 12558.0], [78.3, 12573.0], [78.4, 12585.0], [78.5, 12598.0], [78.6, 12614.0], [78.7, 12632.0], [78.8, 12651.0], [78.9, 12669.0], [79.0, 12686.0], [79.1, 12702.0], [79.2, 12730.0], [79.3, 12742.0], [79.4, 12759.0], [79.5, 12788.0], [79.6, 12799.0], [79.7, 12800.0], [79.8, 12804.0], [79.9, 12813.0], [80.0, 12835.0], [80.1, 12850.0], [80.2, 12869.0], [80.3, 12881.0], [80.4, 12910.0], [80.5, 12930.0], [80.6, 12957.0], [80.7, 12978.0], [80.8, 13003.0], [80.9, 13017.0], [81.0, 13038.0], [81.1, 13052.0], [81.2, 13055.0], [81.3, 13056.0], [81.4, 13067.0], [81.5, 13098.0], [81.6, 13120.0], [81.7, 13137.0], [81.8, 13161.0], [81.9, 13177.0], [82.0, 13184.0], [82.1, 13208.0], [82.2, 13218.0], [82.3, 13245.0], [82.4, 13268.0], [82.5, 13280.0], [82.6, 13292.0], [82.7, 13307.0], [82.8, 13307.0], [82.9, 13308.0], [83.0, 13308.0], [83.1, 13308.0], [83.2, 13308.0], [83.3, 13308.0], [83.4, 13310.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13311.0], [84.2, 13311.0], [84.3, 13311.0], [84.4, 13311.0], [84.5, 13311.0], [84.6, 13311.0], [84.7, 13311.0], [84.8, 13311.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13313.0], [88.1, 13313.0], [88.2, 13313.0], [88.3, 13313.0], [88.4, 13314.0], [88.5, 13315.0], [88.6, 13315.0], [88.7, 13316.0], [88.8, 13316.0], [88.9, 13316.0], [89.0, 13316.0], [89.1, 13319.0], [89.2, 13327.0], [89.3, 13343.0], [89.4, 13350.0], [89.5, 13362.0], [89.6, 13364.0], [89.7, 13376.0], [89.8, 13393.0], [89.9, 13403.0], [90.0, 13413.0], [90.1, 13433.0], [90.2, 13469.0], [90.3, 13492.0], [90.4, 13537.0], [90.5, 13568.0], [90.6, 13584.0], [90.7, 13634.0], [90.8, 13686.0], [90.9, 13718.0], [91.0, 13790.0], [91.1, 13820.0], [91.2, 13821.0], [91.3, 13823.0], [91.4, 13823.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13824.0], [92.0, 13824.0], [92.1, 13824.0], [92.2, 13824.0], [92.3, 13825.0], [92.4, 13827.0], [92.5, 13828.0], [92.6, 13828.0], [92.7, 13852.0], [92.8, 13869.0], [92.9, 13958.0], [93.0, 14035.0], [93.1, 14079.0], [93.2, 14083.0], [93.3, 14123.0], [93.4, 14208.0], [93.5, 14274.0], [93.6, 14333.0], [93.7, 14335.0], [93.8, 14335.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14336.0], [94.2, 14339.0], [94.3, 14385.0], [94.4, 14448.0], [94.5, 14527.0], [94.6, 14587.0], [94.7, 14592.0], [94.8, 14696.0], [94.9, 14839.0], [95.0, 14854.0], [95.1, 14962.0], [95.2, 15068.0], [95.3, 15104.0], [95.4, 15111.0], [95.5, 15229.0], [95.6, 15299.0], [95.7, 15400.0], [95.8, 15478.0], [95.9, 15569.0], [96.0, 15631.0], [96.1, 15712.0], [96.2, 15781.0], [96.3, 15840.0], [96.4, 15872.0], [96.5, 15951.0], [96.6, 16087.0], [96.7, 16171.0], [96.8, 16270.0], [96.9, 16383.0], [97.0, 16402.0], [97.1, 16538.0], [97.2, 16895.0], [97.3, 17326.0], [97.4, 17920.0], [97.5, 18146.0], [97.6, 18432.0], [97.7, 18692.0], [97.8, 20479.0], [97.9, 26367.0], [98.0, 26371.0], [98.1, 29169.0], [98.2, 36938.0], [98.3, 53376.0], [98.4, 58366.0], [98.5, 74746.0], [98.6, 90111.0], [98.7, 94716.0], [98.8, 97792.0], [98.9, 105505.0], [99.0, 105729.0], [99.1, 106293.0], [99.2, 107008.0], [99.3, 109311.0], [99.4, 110079.0], [99.5, 115713.0], [99.6, 119553.0], [99.7, 122367.0], [99.8, 144639.0], [99.9, 165375.0], [100.0, 214529.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 21.0], [6.8, 26.0], [6.9, 27.0], [7.0, 28.0], [7.1, 30.0], [7.2, 32.0], [7.3, 34.0], [7.4, 35.0], [7.5, 82.0], [7.6, 230.0], [7.7, 327.0], [7.8, 602.0], [7.9, 634.0], [8.0, 724.0], [8.1, 890.0], [8.2, 1173.0], [8.3, 1332.0], [8.4, 1383.0], [8.5, 1418.0], [8.6, 1452.0], [8.7, 1531.0], [8.8, 1596.0], [8.9, 1655.0], [9.0, 1755.0], [9.1, 1913.0], [9.2, 1959.0], [9.3, 2050.0], [9.4, 2163.0], [9.5, 2253.0], [9.6, 2487.0], [9.7, 2596.0], [9.8, 2724.0], [9.9, 2837.0], [10.0, 2875.0], [10.1, 3222.0], [10.2, 3380.0], [10.3, 3448.0], [10.4, 3687.0], [10.5, 3708.0], [10.6, 3990.0], [10.7, 4110.0], [10.8, 4173.0], [10.9, 4405.0], [11.0, 5057.0], [11.1, 5175.0], [11.2, 5237.0], [11.3, 5402.0], [11.4, 5431.0], [11.5, 5489.0], [11.6, 5609.0], [11.7, 6045.0], [11.8, 6234.0], [11.9, 6353.0], [12.0, 6499.0], [12.1, 6667.0], [12.2, 6929.0], [12.3, 6977.0], [12.4, 6999.0], [12.5, 7132.0], [12.6, 7135.0], [12.7, 7147.0], [12.8, 7163.0], [12.9, 7164.0], [13.0, 7164.0], [13.1, 7164.0], [13.2, 7164.0], [13.3, 7166.0], [13.4, 7166.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7169.0], [15.7, 7170.0], [15.8, 7171.0], [15.9, 7171.0], [16.0, 7172.0], [16.1, 7173.0], [16.2, 7219.0], [16.3, 7227.0], [16.4, 7238.0], [16.5, 7307.0], [16.6, 7352.0], [16.7, 7364.0], [16.8, 7394.0], [16.9, 7419.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7427.0], [18.2, 7428.0], [18.3, 7477.0], [18.4, 7489.0], [18.5, 7608.0], [18.6, 7675.0], [18.7, 7677.0], [18.8, 7679.0], [18.9, 7679.0], [19.0, 7679.0], [19.1, 7679.0], [19.2, 7679.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7683.0], [20.6, 7684.0], [20.7, 7684.0], [20.8, 7684.0], [20.9, 7684.0], [21.0, 7684.0], [21.1, 7728.0], [21.2, 7766.0], [21.3, 7774.0], [21.4, 7828.0], [21.5, 7911.0], [21.6, 7932.0], [21.7, 7932.0], [21.8, 7932.0], [21.9, 7934.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7935.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7940.0], [23.0, 7956.0], [23.1, 7997.0], [23.2, 8066.0], [23.3, 8107.0], [23.4, 8188.0], [23.5, 8188.0], [23.6, 8189.0], [23.7, 8189.0], [23.8, 8191.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8193.0], [24.5, 8238.0], [24.6, 8342.0], [24.7, 8431.0], [24.8, 8443.0], [24.9, 8445.0], [25.0, 8447.0], [25.1, 8447.0], [25.2, 8448.0], [25.3, 8448.0], [25.4, 8448.0], [25.5, 8448.0], [25.6, 8448.0], [25.7, 8448.0], [25.8, 8451.0], [25.9, 8451.0], [26.0, 8451.0], [26.1, 8451.0], [26.2, 8517.0], [26.3, 8609.0], [26.4, 8629.0], [26.5, 8667.0], [26.6, 8692.0], [26.7, 8699.0], [26.8, 8700.0], [26.9, 8703.0], [27.0, 8703.0], [27.1, 8703.0], [27.2, 8703.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8705.0], [28.2, 8707.0], [28.3, 8707.0], [28.4, 8708.0], [28.5, 8708.0], [28.6, 8713.0], [28.7, 8728.0], [28.8, 8751.0], [28.9, 8822.0], [29.0, 8862.0], [29.1, 8875.0], [29.2, 8895.0], [29.3, 8919.0], [29.4, 8932.0], [29.5, 8958.0], [29.6, 8959.0], [29.7, 8959.0], [29.8, 8959.0], [29.9, 8960.0], [30.0, 8963.0], [30.1, 9004.0], [30.2, 9053.0], [30.3, 9122.0], [30.4, 9151.0], [30.5, 9175.0], [30.6, 9196.0], [30.7, 9211.0], [30.8, 9212.0], [30.9, 9212.0], [31.0, 9215.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9216.0], [31.4, 9216.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9217.0], [32.2, 9219.0], [32.3, 9221.0], [32.4, 9236.0], [32.5, 9244.0], [32.6, 9268.0], [32.7, 9272.0], [32.8, 9278.0], [32.9, 9323.0], [33.0, 9360.0], [33.1, 9410.0], [33.2, 9462.0], [33.3, 9471.0], [33.4, 9502.0], [33.5, 9517.0], [33.6, 9544.0], [33.7, 9557.0], [33.8, 9612.0], [33.9, 9659.0], [34.0, 9666.0], [34.1, 9698.0], [34.2, 9700.0], [34.3, 9717.0], [34.4, 9724.0], [34.5, 9725.0], [34.6, 9727.0], [34.7, 9727.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9729.0], [35.5, 9732.0], [35.6, 9732.0], [35.7, 9740.0], [35.8, 9756.0], [35.9, 9798.0], [36.0, 9820.0], [36.1, 9835.0], [36.2, 9860.0], [36.3, 9876.0], [36.4, 9904.0], [36.5, 9919.0], [36.6, 9930.0], [36.7, 9945.0], [36.8, 9980.0], [36.9, 9983.0], [37.0, 9984.0], [37.1, 9984.0], [37.2, 9987.0], [37.3, 9995.0], [37.4, 10024.0], [37.5, 10030.0], [37.6, 10042.0], [37.7, 10050.0], [37.8, 10055.0], [37.9, 10061.0], [38.0, 10075.0], [38.1, 10108.0], [38.2, 10167.0], [38.3, 10210.0], [38.4, 10227.0], [38.5, 10240.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10241.0], [38.9, 10241.0], [39.0, 10253.0], [39.1, 10292.0], [39.2, 10306.0], [39.3, 10311.0], [39.4, 10330.0], [39.5, 10362.0], [39.6, 10422.0], [39.7, 10436.0], [39.8, 10455.0], [39.9, 10495.0], [40.0, 10495.0], [40.1, 10496.0], [40.2, 10496.0], [40.3, 10496.0], [40.4, 10500.0], [40.5, 10500.0], [40.6, 10500.0], [40.7, 10502.0], [40.8, 10520.0], [40.9, 10537.0], [41.0, 10573.0], [41.1, 10578.0], [41.2, 10629.0], [41.3, 10663.0], [41.4, 10696.0], [41.5, 10723.0], [41.6, 10747.0], [41.7, 10752.0], [41.8, 10752.0], [41.9, 10752.0], [42.0, 10752.0], [42.1, 10752.0], [42.2, 10756.0], [42.3, 10756.0], [42.4, 10810.0], [42.5, 10857.0], [42.6, 10907.0], [42.7, 11004.0], [42.8, 11007.0], [42.9, 11007.0], [43.0, 11007.0], [43.1, 11008.0], [43.2, 11008.0], [43.3, 11008.0], [43.4, 11008.0], [43.5, 11011.0], [43.6, 11038.0], [43.7, 11064.0], [43.8, 11079.0], [43.9, 11168.0], [44.0, 11209.0], [44.1, 11263.0], [44.2, 11264.0], [44.3, 11264.0], [44.4, 11264.0], [44.5, 11267.0], [44.6, 11267.0], [44.7, 11267.0], [44.8, 11310.0], [44.9, 11363.0], [45.0, 11501.0], [45.1, 11515.0], [45.2, 11517.0], [45.3, 11520.0], [45.4, 11523.0], [45.5, 11590.0], [45.6, 11639.0], [45.7, 11683.0], [45.8, 11713.0], [45.9, 11744.0], [46.0, 11769.0], [46.1, 11774.0], [46.2, 11775.0], [46.3, 11775.0], [46.4, 11775.0], [46.5, 11776.0], [46.6, 11776.0], [46.7, 11776.0], [46.8, 11777.0], [46.9, 11777.0], [47.0, 11777.0], [47.1, 11779.0], [47.2, 11780.0], [47.3, 11780.0], [47.4, 11827.0], [47.5, 11929.0], [47.6, 12020.0], [47.7, 12031.0], [47.8, 12043.0], [47.9, 12125.0], [48.0, 12181.0], [48.1, 12222.0], [48.2, 12283.0], [48.3, 12287.0], [48.4, 12288.0], [48.5, 12288.0], [48.6, 12288.0], [48.7, 12288.0], [48.8, 12293.0], [48.9, 12317.0], [49.0, 12335.0], [49.1, 12412.0], [49.2, 12528.0], [49.3, 12544.0], [49.4, 12544.0], [49.5, 12621.0], [49.6, 12666.0], [49.7, 12793.0], [49.8, 12796.0], [49.9, 12797.0], [50.0, 12799.0], [50.1, 12799.0], [50.2, 12800.0], [50.3, 12800.0], [50.4, 12800.0], [50.5, 12800.0], [50.6, 12800.0], [50.7, 12811.0], [50.8, 12847.0], [50.9, 12866.0], [51.0, 12971.0], [51.1, 13015.0], [51.2, 13055.0], [51.3, 13056.0], [51.4, 13056.0], [51.5, 13056.0], [51.6, 13059.0], [51.7, 13060.0], [51.8, 13089.0], [51.9, 13163.0], [52.0, 13169.0], [52.1, 13180.0], [52.2, 13184.0], [52.3, 13187.0], [52.4, 13192.0], [52.5, 13193.0], [52.6, 13199.0], [52.7, 13208.0], [52.8, 13222.0], [52.9, 13229.0], [53.0, 13235.0], [53.1, 13240.0], [53.2, 13246.0], [53.3, 13252.0], [53.4, 13258.0], [53.5, 13264.0], [53.6, 13276.0], [53.7, 13292.0], [53.8, 13296.0], [53.9, 13302.0], [54.0, 13306.0], [54.1, 13306.0], [54.2, 13307.0], [54.3, 13307.0], [54.4, 13307.0], [54.5, 13307.0], [54.6, 13308.0], [54.7, 13308.0], [54.8, 13308.0], [54.9, 13308.0], [55.0, 13308.0], [55.1, 13308.0], [55.2, 13308.0], [55.3, 13308.0], [55.4, 13308.0], [55.5, 13308.0], [55.6, 13308.0], [55.7, 13308.0], [55.8, 13308.0], [55.9, 13308.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13309.0], [56.9, 13309.0], [57.0, 13309.0], [57.1, 13310.0], [57.2, 13310.0], [57.3, 13310.0], [57.4, 13311.0], [57.5, 13311.0], [57.6, 13311.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13312.0], [60.7, 13312.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13314.0], [73.8, 13315.0], [73.9, 13315.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13317.0], [75.4, 13323.0], [75.5, 13325.0], [75.6, 13330.0], [75.7, 13334.0], [75.8, 13335.0], [75.9, 13339.0], [76.0, 13341.0], [76.1, 13345.0], [76.2, 13347.0], [76.3, 13354.0], [76.4, 13368.0], [76.5, 13371.0], [76.6, 13379.0], [76.7, 13382.0], [76.8, 13389.0], [76.9, 13395.0], [77.0, 13400.0], [77.1, 13403.0], [77.2, 13407.0], [77.3, 13413.0], [77.4, 13421.0], [77.5, 13431.0], [77.6, 13470.0], [77.7, 13508.0], [77.8, 13514.0], [77.9, 13568.0], [78.0, 13568.0], [78.1, 13572.0], [78.2, 13583.0], [78.3, 13681.0], [78.4, 13711.0], [78.5, 13734.0], [78.6, 13811.0], [78.7, 13819.0], [78.8, 13820.0], [78.9, 13820.0], [79.0, 13820.0], [79.1, 13820.0], [79.2, 13821.0], [79.3, 13821.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13823.0], [79.8, 13823.0], [79.9, 13823.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13825.0], [82.4, 13827.0], [82.5, 13827.0], [82.6, 13828.0], [82.7, 13828.0], [82.8, 13828.0], [82.9, 13895.0], [83.0, 13955.0], [83.1, 14080.0], [83.2, 14202.0], [83.3, 14247.0], [83.4, 14319.0], [83.5, 14333.0], [83.6, 14334.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14336.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14337.0], [85.5, 14339.0], [85.6, 14340.0], [85.7, 14340.0], [85.8, 14379.0], [85.9, 14553.0], [86.0, 14591.0], [86.1, 14592.0], [86.2, 14592.0], [86.3, 14593.0], [86.4, 14595.0], [86.5, 14755.0], [86.6, 14847.0], [86.7, 14847.0], [86.8, 14848.0], [86.9, 14941.0], [87.0, 15046.0], [87.1, 15100.0], [87.2, 15103.0], [87.3, 15103.0], [87.4, 15103.0], [87.5, 15104.0], [87.6, 15163.0], [87.7, 15221.0], [87.8, 15502.0], [87.9, 15616.0], [88.0, 15622.0], [88.1, 15676.0], [88.2, 15684.0], [88.3, 15790.0], [88.4, 15872.0], [88.5, 15933.0], [88.6, 16015.0], [88.7, 16128.0], [88.8, 16367.0], [88.9, 16384.0], [89.0, 16384.0], [89.1, 16577.0], [89.2, 16846.0], [89.3, 16896.0], [89.4, 16897.0], [89.5, 17635.0], [89.6, 17920.0], [89.7, 17921.0], [89.8, 18175.0], [89.9, 18689.0], [90.0, 18692.0], [90.1, 19732.0], [90.2, 20224.0], [90.3, 20479.0], [90.4, 23121.0], [90.5, 26250.0], [90.6, 26277.0], [90.7, 26367.0], [90.8, 26368.0], [90.9, 26368.0], [91.0, 26623.0], [91.1, 27392.0], [91.2, 28787.0], [91.3, 29241.0], [91.4, 29444.0], [91.5, 29444.0], [91.6, 34327.0], [91.7, 34951.0], [91.8, 40193.0], [91.9, 42238.0], [92.0, 43752.0], [92.1, 52479.0], [92.2, 53245.0], [92.3, 54860.0], [92.4, 57761.0], [92.5, 59391.0], [92.6, 61430.0], [92.7, 64963.0], [92.8, 66915.0], [92.9, 68681.0], [93.0, 69776.0], [93.1, 72192.0], [93.2, 72192.0], [93.3, 77348.0], [93.4, 84021.0], [93.5, 89344.0], [93.6, 90364.0], [93.7, 90368.0], [93.8, 91392.0], [93.9, 91396.0], [94.0, 94715.0], [94.1, 94716.0], [94.2, 97543.0], [94.3, 100062.0], [94.4, 105355.0], [94.5, 105469.0], [94.6, 105471.0], [94.7, 105638.0], [94.8, 105690.0], [94.9, 105728.0], [95.0, 105729.0], [95.1, 105729.0], [95.2, 105776.0], [95.3, 105917.0], [95.4, 106067.0], [95.5, 106111.0], [95.6, 106289.0], [95.7, 106349.0], [95.8, 106495.0], [95.9, 106497.0], [96.0, 106735.0], [96.1, 107008.0], [96.2, 107008.0], [96.3, 107065.0], [96.4, 107244.0], [96.5, 107353.0], [96.6, 107522.0], [96.7, 108804.0], [96.8, 110076.0], [96.9, 110079.0], [97.0, 110586.0], [97.1, 110777.0], [97.2, 110852.0], [97.3, 110852.0], [97.4, 111359.0], [97.5, 111360.0], [97.6, 111988.0], [97.7, 113920.0], [97.8, 113920.0], [97.9, 114784.0], [98.0, 115200.0], [98.1, 115201.0], [98.2, 115968.0], [98.3, 118352.0], [98.4, 119552.0], [98.5, 120575.0], [98.6, 120576.0], [98.7, 122367.0], [98.8, 136448.0], [98.9, 160744.0], [99.0, 160767.0], [99.1, 164317.0], [99.2, 164353.0], [99.3, 164353.0], [99.4, 165376.0], [99.5, 165377.0], [99.6, 209916.0], [99.7, 209917.0], [99.8, 209918.0], [99.9, 209921.0], [100.0, 210373.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 726.0, "series": [{"data": [[0.0, 146.0], [138400.0, 2.0], [214500.0, 2.0], [88300.0, 2.0], [94700.0, 3.0], [100300.0, 1.0], [106700.0, 3.0], [119500.0, 2.0], [126700.0, 1.0], [193000.0, 1.0], [40100.0, 1.0], [169900.0, 1.0], [52900.0, 1.0], [209900.0, 2.0], [57300.0, 2.0], [59300.0, 2.0], [500.0, 2.0], [600.0, 4.0], [188400.0, 1.0], [900.0, 1.0], [1000.0, 2.0], [1200.0, 4.0], [1300.0, 2.0], [1500.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 5.0], [2300.0, 7.0], [2400.0, 1.0], [2500.0, 3.0], [2600.0, 2.0], [165300.0, 2.0], [2800.0, 2.0], [2700.0, 1.0], [3000.0, 3.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 1.0], [3700.0, 1.0], [3600.0, 2.0], [3800.0, 4.0], [3900.0, 5.0], [4100.0, 3.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4400.0, 2.0], [72100.0, 3.0], [4700.0, 3.0], [5100.0, 1.0], [5300.0, 3.0], [5600.0, 2.0], [5800.0, 3.0], [91300.0, 1.0], [6000.0, 2.0], [97700.0, 1.0], [6500.0, 1.0], [6600.0, 4.0], [105700.0, 5.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 77.0], [111300.0, 2.0], [7200.0, 1.0], [7400.0, 44.0], [7300.0, 2.0], [7600.0, 62.0], [7800.0, 2.0], [7900.0, 23.0], [8100.0, 24.0], [8000.0, 2.0], [8300.0, 3.0], [8700.0, 30.0], [8500.0, 2.0], [8400.0, 29.0], [8600.0, 2.0], [8200.0, 1.0], [137400.0, 2.0], [9000.0, 2.0], [8800.0, 2.0], [9200.0, 46.0], [8900.0, 6.0], [9500.0, 8.0], [9300.0, 3.0], [9400.0, 9.0], [9600.0, 4.0], [9700.0, 28.0], [9800.0, 6.0], [10100.0, 4.0], [10000.0, 11.0], [10200.0, 26.0], [9900.0, 14.0], [10600.0, 7.0], [10400.0, 17.0], [10500.0, 13.0], [10700.0, 29.0], [10300.0, 7.0], [11200.0, 28.0], [10800.0, 9.0], [11100.0, 11.0], [11000.0, 21.0], [10900.0, 5.0], [11300.0, 5.0], [11400.0, 6.0], [11700.0, 44.0], [11600.0, 4.0], [11500.0, 9.0], [11800.0, 4.0], [12100.0, 11.0], [12000.0, 11.0], [11900.0, 5.0], [12200.0, 22.0], [12700.0, 12.0], [12400.0, 2.0], [12300.0, 1.0], [12500.0, 9.0], [12600.0, 6.0], [13000.0, 15.0], [13300.0, 433.0], [13200.0, 3.0], [12800.0, 13.0], [12900.0, 4.0], [13500.0, 14.0], [13700.0, 2.0], [13800.0, 106.0], [13400.0, 3.0], [14000.0, 7.0], [14300.0, 56.0], [14100.0, 1.0], [13900.0, 1.0], [14500.0, 11.0], [14800.0, 8.0], [14600.0, 1.0], [14700.0, 1.0], [15300.0, 1.0], [14900.0, 1.0], [15100.0, 5.0], [15600.0, 3.0], [15800.0, 3.0], [15700.0, 1.0], [15400.0, 1.0], [16100.0, 2.0], [15900.0, 1.0], [16000.0, 4.0], [16800.0, 2.0], [17400.0, 1.0], [17600.0, 1.0], [18400.0, 2.0], [17800.0, 1.0], [18600.0, 7.0], [26600.0, 2.0], [29600.0, 1.0], [29400.0, 1.0], [29200.0, 2.0], [154300.0, 1.0], [160700.0, 4.0], [53200.0, 1.0], [106400.0, 4.0], [102400.0, 4.0], [112800.0, 1.0], [115200.0, 5.0], [120000.0, 3.0], [90300.0, 2.0], [111900.0, 1.0], [122300.0, 3.0], [34300.0, 1.0], [40300.0, 2.0], [57100.0, 1.0], [99000.0, 2.0], [106200.0, 1.0], [105400.0, 3.0], [107000.0, 1.0], [136400.0, 1.0], [90100.0, 1.0], [89300.0, 1.0], [108500.0, 2.0], [115700.0, 2.0], [126900.0, 1.0], [131800.0, 1.0], [144600.0, 4.0], [16500.0, 1.0], [17100.0, 1.0], [18100.0, 2.0], [17900.0, 2.0], [20900.0, 1.0], [26300.0, 6.0], [26100.0, 1.0], [27300.0, 5.0], [28300.0, 1.0], [40200.0, 2.0], [52200.0, 2.0], [55800.0, 2.0], [61400.0, 3.0], [97200.0, 1.0], [110000.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 249.0], [155300.0, 2.0], [214500.0, 1.0], [74700.0, 2.0], [88300.0, 2.0], [94700.0, 5.0], [100300.0, 1.0], [105900.0, 1.0], [106700.0, 3.0], [107500.0, 4.0], [113900.0, 1.0], [117900.0, 1.0], [119500.0, 6.0], [126700.0, 2.0], [34900.0, 1.0], [36900.0, 1.0], [40500.0, 1.0], [52900.0, 1.0], [209900.0, 2.0], [53300.0, 1.0], [55300.0, 1.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 1.0], [500.0, 18.0], [600.0, 36.0], [700.0, 42.0], [188400.0, 1.0], [800.0, 41.0], [900.0, 23.0], [1000.0, 27.0], [1100.0, 24.0], [1200.0, 31.0], [1300.0, 29.0], [1400.0, 23.0], [1500.0, 17.0], [1600.0, 15.0], [1700.0, 19.0], [1800.0, 21.0], [1900.0, 29.0], [2000.0, 27.0], [2100.0, 29.0], [2300.0, 37.0], [2200.0, 46.0], [2400.0, 41.0], [2500.0, 36.0], [2600.0, 32.0], [165300.0, 6.0], [2700.0, 31.0], [2800.0, 27.0], [2900.0, 33.0], [3000.0, 22.0], [190900.0, 1.0], [3100.0, 25.0], [3200.0, 31.0], [3300.0, 18.0], [3400.0, 25.0], [3500.0, 24.0], [3700.0, 19.0], [3600.0, 24.0], [3800.0, 24.0], [3900.0, 23.0], [4000.0, 19.0], [4200.0, 14.0], [4300.0, 21.0], [4100.0, 12.0], [4500.0, 18.0], [4600.0, 19.0], [4400.0, 19.0], [72100.0, 4.0], [4700.0, 17.0], [4800.0, 13.0], [4900.0, 18.0], [5100.0, 11.0], [5000.0, 15.0], [5300.0, 18.0], [5200.0, 8.0], [5600.0, 13.0], [5500.0, 8.0], [5400.0, 3.0], [5800.0, 18.0], [5700.0, 17.0], [91300.0, 5.0], [6000.0, 26.0], [6100.0, 18.0], [5900.0, 17.0], [97700.0, 6.0], [6300.0, 15.0], [6200.0, 11.0], [6400.0, 14.0], [6500.0, 16.0], [6600.0, 8.0], [105700.0, 10.0], [6700.0, 13.0], [6900.0, 14.0], [6800.0, 15.0], [110500.0, 2.0], [7000.0, 16.0], [7100.0, 105.0], [111300.0, 1.0], [7200.0, 15.0], [7300.0, 20.0], [7400.0, 106.0], [7600.0, 88.0], [7500.0, 17.0], [7900.0, 66.0], [7800.0, 21.0], [7700.0, 17.0], [126500.0, 1.0], [8000.0, 13.0], [8100.0, 44.0], [8500.0, 12.0], [8200.0, 10.0], [8400.0, 48.0], [8600.0, 14.0], [8300.0, 12.0], [8700.0, 93.0], [8900.0, 45.0], [9100.0, 24.0], [8800.0, 17.0], [9000.0, 20.0], [9200.0, 86.0], [9700.0, 118.0], [9400.0, 66.0], [9600.0, 79.0], [9300.0, 25.0], [9500.0, 67.0], [10100.0, 151.0], [10200.0, 186.0], [9900.0, 110.0], [10000.0, 131.0], [9800.0, 92.0], [10700.0, 319.0], [10400.0, 261.0], [10500.0, 262.0], [10600.0, 295.0], [10300.0, 234.0], [10900.0, 320.0], [11100.0, 277.0], [11200.0, 289.0], [11000.0, 283.0], [10800.0, 254.0], [11300.0, 227.0], [11600.0, 144.0], [11700.0, 172.0], [11500.0, 180.0], [11400.0, 176.0], [11900.0, 86.0], [11800.0, 109.0], [12000.0, 81.0], [12200.0, 76.0], [12100.0, 59.0], [12300.0, 57.0], [12500.0, 73.0], [12600.0, 58.0], [12700.0, 53.0], [12400.0, 41.0], [12900.0, 43.0], [13200.0, 55.0], [13100.0, 56.0], [13000.0, 73.0], [13300.0, 726.0], [12800.0, 74.0], [13800.0, 182.0], [13500.0, 30.0], [13400.0, 47.0], [13700.0, 17.0], [13600.0, 23.0], [14300.0, 79.0], [14100.0, 11.0], [14000.0, 33.0], [14200.0, 16.0], [13900.0, 10.0], [14500.0, 29.0], [14600.0, 7.0], [14700.0, 6.0], [14400.0, 13.0], [14800.0, 17.0], [14900.0, 11.0], [15200.0, 13.0], [15100.0, 23.0], [15000.0, 9.0], [15300.0, 9.0], [15400.0, 12.0], [15600.0, 15.0], [15500.0, 12.0], [15700.0, 15.0], [15800.0, 20.0], [15900.0, 12.0], [16100.0, 14.0], [16200.0, 11.0], [16300.0, 15.0], [16000.0, 5.0], [16400.0, 8.0], [16800.0, 7.0], [16600.0, 3.0], [17400.0, 4.0], [17000.0, 1.0], [18200.0, 2.0], [17600.0, 1.0], [18000.0, 2.0], [18400.0, 5.0], [19400.0, 1.0], [19200.0, 1.0], [18600.0, 6.0], [18800.0, 1.0], [19000.0, 1.0], [20400.0, 2.0], [20200.0, 1.0], [19600.0, 1.0], [21000.0, 1.0], [25600.0, 1.0], [26200.0, 1.0], [26800.0, 1.0], [27400.0, 1.0], [27800.0, 1.0], [29600.0, 3.0], [30000.0, 1.0], [34800.0, 1.0], [154300.0, 1.0], [160700.0, 2.0], [41200.0, 1.0], [47600.0, 1.0], [53200.0, 1.0], [54000.0, 1.0], [56400.0, 1.0], [56800.0, 2.0], [57600.0, 1.0], [80800.0, 1.0], [96000.0, 1.0], [106400.0, 5.0], [107200.0, 1.0], [108800.0, 1.0], [120000.0, 6.0], [73500.0, 1.0], [74300.0, 1.0], [90300.0, 1.0], [105500.0, 1.0], [118300.0, 1.0], [122300.0, 5.0], [153800.0, 1.0], [37900.0, 1.0], [164300.0, 3.0], [41100.0, 1.0], [43500.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [57900.0, 1.0], [58300.0, 1.0], [65500.0, 1.0], [72600.0, 2.0], [99000.0, 2.0], [105400.0, 3.0], [106200.0, 8.0], [107000.0, 2.0], [113400.0, 1.0], [126200.0, 1.0], [90100.0, 4.0], [89300.0, 4.0], [109300.0, 3.0], [115700.0, 5.0], [120500.0, 2.0], [126900.0, 1.0], [144600.0, 1.0], [16900.0, 4.0], [16500.0, 3.0], [16700.0, 1.0], [17100.0, 3.0], [17300.0, 2.0], [17900.0, 8.0], [18100.0, 6.0], [17700.0, 2.0], [17500.0, 1.0], [18500.0, 3.0], [20100.0, 1.0], [19900.0, 1.0], [21700.0, 1.0], [24500.0, 1.0], [26100.0, 2.0], [26300.0, 12.0], [27300.0, 5.0], [27700.0, 1.0], [29100.0, 1.0], [29500.0, 2.0], [32500.0, 1.0], [41400.0, 1.0], [97200.0, 3.0], [110000.0, 10.0], [110800.0, 1.0], [114800.0, 1.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 148.0], [80300.0, 1.0], [94700.0, 3.0], [105900.0, 2.0], [106700.0, 1.0], [107500.0, 1.0], [110700.0, 1.0], [113900.0, 4.0], [114700.0, 1.0], [119500.0, 1.0], [126700.0, 1.0], [34900.0, 1.0], [40100.0, 2.0], [43700.0, 2.0], [200.0, 1.0], [209900.0, 8.0], [59300.0, 2.0], [57700.0, 1.0], [64900.0, 1.0], [70600.0, 1.0], [300.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 1.0], [111400.0, 1.0], [500.0, 1.0], [600.0, 4.0], [700.0, 2.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 2.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 3.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [165300.0, 4.0], [2800.0, 4.0], [2700.0, 1.0], [3000.0, 1.0], [3300.0, 2.0], [3200.0, 2.0], [3400.0, 1.0], [3700.0, 2.0], [3600.0, 2.0], [3900.0, 2.0], [4100.0, 3.0], [4200.0, 1.0], [4400.0, 1.0], [69700.0, 1.0], [72100.0, 4.0], [4800.0, 1.0], [5100.0, 2.0], [5000.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 6.0], [5600.0, 1.0], [88100.0, 1.0], [91300.0, 4.0], [5900.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [97700.0, 1.0], [6300.0, 1.0], [6200.0, 2.0], [6400.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [105700.0, 8.0], [6900.0, 5.0], [6800.0, 1.0], [107300.0, 2.0], [110500.0, 2.0], [7000.0, 1.0], [7100.0, 71.0], [111300.0, 3.0], [7200.0, 7.0], [7400.0, 31.0], [7300.0, 8.0], [118500.0, 1.0], [117700.0, 1.0], [7600.0, 51.0], [7900.0, 33.0], [7700.0, 5.0], [7800.0, 2.0], [8100.0, 23.0], [8000.0, 3.0], [8300.0, 3.0], [8700.0, 42.0], [8400.0, 29.0], [8600.0, 10.0], [8200.0, 1.0], [8500.0, 1.0], [8800.0, 7.0], [9200.0, 43.0], [9100.0, 7.0], [9000.0, 4.0], [8900.0, 16.0], [9300.0, 5.0], [9700.0, 35.0], [9600.0, 8.0], [9500.0, 7.0], [9400.0, 6.0], [9800.0, 8.0], [10100.0, 4.0], [9900.0, 20.0], [10200.0, 18.0], [10000.0, 13.0], [10300.0, 8.0], [10600.0, 5.0], [10500.0, 15.0], [10400.0, 16.0], [10700.0, 18.0], [10900.0, 2.0], [10800.0, 4.0], [11200.0, 15.0], [11000.0, 24.0], [11100.0, 2.0], [11600.0, 5.0], [11300.0, 3.0], [11500.0, 11.0], [11700.0, 30.0], [11400.0, 1.0], [12200.0, 16.0], [12000.0, 6.0], [12100.0, 4.0], [11900.0, 3.0], [11800.0, 2.0], [12300.0, 3.0], [12400.0, 2.0], [12700.0, 10.0], [12600.0, 4.0], [12500.0, 5.0], [13000.0, 16.0], [12800.0, 16.0], [13200.0, 24.0], [13300.0, 451.0], [13100.0, 15.0], [12900.0, 2.0], [13600.0, 3.0], [13500.0, 11.0], [13400.0, 14.0], [13700.0, 4.0], [13800.0, 85.0], [14300.0, 48.0], [14000.0, 3.0], [13900.0, 1.0], [14200.0, 4.0], [14400.0, 1.0], [14800.0, 7.0], [14500.0, 11.0], [14700.0, 1.0], [14600.0, 1.0], [15000.0, 2.0], [15100.0, 12.0], [15200.0, 1.0], [15300.0, 1.0], [14900.0, 1.0], [15600.0, 8.0], [15800.0, 3.0], [15700.0, 2.0], [15500.0, 1.0], [16200.0, 1.0], [15900.0, 2.0], [16000.0, 2.0], [16300.0, 5.0], [16100.0, 1.0], [16800.0, 4.0], [18000.0, 1.0], [17600.0, 1.0], [17800.0, 1.0], [18600.0, 4.0], [18800.0, 1.0], [20400.0, 1.0], [20200.0, 3.0], [22600.0, 1.0], [23800.0, 1.0], [26200.0, 3.0], [26600.0, 1.0], [28600.0, 1.0], [29400.0, 3.0], [29200.0, 2.0], [160700.0, 4.0], [52400.0, 1.0], [53200.0, 1.0], [210300.0, 1.0], [54000.0, 1.0], [54800.0, 1.0], [68800.0, 1.0], [84000.0, 1.0], [100000.0, 1.0], [105600.0, 3.0], [106400.0, 3.0], [107200.0, 3.0], [108800.0, 1.0], [115200.0, 4.0], [120000.0, 1.0], [67900.0, 1.0], [90300.0, 2.0], [97500.0, 1.0], [106300.0, 2.0], [111900.0, 1.0], [118300.0, 1.0], [115900.0, 1.0], [122300.0, 1.0], [153800.0, 1.0], [34300.0, 3.0], [164300.0, 5.0], [52700.0, 1.0], [59900.0, 1.0], [65100.0, 1.0], [68600.0, 1.0], [106200.0, 1.0], [105400.0, 5.0], [107000.0, 5.0], [136400.0, 1.0], [66900.0, 1.0], [77300.0, 1.0], [89300.0, 2.0], [93300.0, 1.0], [106100.0, 3.0], [105300.0, 2.0], [110900.0, 1.0], [115700.0, 1.0], [120500.0, 4.0], [16500.0, 2.0], [17100.0, 1.0], [16700.0, 1.0], [17900.0, 3.0], [18100.0, 1.0], [19700.0, 1.0], [23100.0, 1.0], [26300.0, 7.0], [27300.0, 2.0], [28700.0, 1.0], [42200.0, 1.0], [42600.0, 1.0], [41000.0, 1.0], [55800.0, 1.0], [61400.0, 2.0], [97200.0, 1.0], [106000.0, 1.0], [106800.0, 1.0], [110000.0, 5.0], [110800.0, 4.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 214500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7869.0, "series": [{"data": [[1.0, 326.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5626.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7869.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.5, "minX": 1.53928344E12, "maxY": 497.8344155844152, "series": [{"data": [[1.53928368E12, 214.36662286465182], [1.53928404E12, 493.4911479154768], [1.53928374E12, 278.22999157540033], [1.53928344E12, 3.5], [1.5392841E12, 186.98442367601254], [1.5392838E12, 335.4598370197905], [1.5392835E12, 36.5796954314721], [1.53928416E12, 17.720000000000002], [1.53928386E12, 395.26789976133637], [1.53928356E12, 93.56067415730328], [1.53928392E12, 454.9621848739501], [1.53928362E12, 154.71651495448617], [1.53928398E12, 497.8344155844152]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928416E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 183680.625, "series": [{"data": [[4.0, 2292.0], [5.0, 2303.0], [6.0, 2254.0], [8.0, 3334.25], [9.0, 1527.5], [12.0, 140729.66666666666], [13.0, 1842.0], [14.0, 634.0], [15.0, 2327.0], [16.0, 960.0], [17.0, 686.0], [18.0, 653.0], [20.0, 1584.0], [21.0, 988.0], [22.0, 1049.0], [23.0, 1235.0], [24.0, 110673.66666666667], [25.0, 85519.0], [26.0, 1251.0], [28.0, 143540.66666666666], [29.0, 1265.0], [32.0, 41901.333333333336], [33.0, 2505.0], [34.0, 1988.0], [35.0, 2001.0], [36.0, 2050.0], [37.0, 2316.0], [39.0, 2425.5], [40.0, 2288.0], [42.0, 2864.0], [43.0, 2447.0], [44.0, 1837.0], [45.0, 2194.0], [47.0, 2278.0], [48.0, 3961.0], [50.0, 100974.42857142857], [51.0, 67826.0], [52.0, 3968.0], [53.0, 2825.5], [54.0, 2555.0], [55.0, 71890.0], [57.0, 3018.0], [58.0, 4158.0], [60.0, 4196.0], [61.0, 21300.333333333332], [62.0, 3305.0], [64.0, 2820.0], [65.0, 3781.5], [66.0, 3318.0], [69.0, 4670.5], [70.0, 3488.0], [71.0, 3931.0], [73.0, 4324.5], [74.0, 3600.0], [72.0, 94716.66666666667], [76.0, 3905.0], [77.0, 29843.0], [78.0, 4265.0], [79.0, 55830.0], [81.0, 5647.5], [82.0, 4699.0], [84.0, 5614.0], [85.0, 4814.0], [86.0, 4433.0], [87.0, 4180.0], [88.0, 19560.0], [90.0, 5353.0], [91.0, 5809.0], [94.0, 6650.0], [95.0, 7103.5], [97.0, 6049.0], [98.0, 6034.0], [99.0, 5488.0], [101.0, 5885.0], [104.0, 7185.333333333333], [106.0, 6842.5], [105.0, 29263.0], [110.0, 9513.0], [111.0, 8531.0], [108.0, 29206.0], [112.0, 7831.0], [114.0, 8320.0], [115.0, 7040.0], [117.0, 117283.0], [119.0, 8562.0], [116.0, 91395.0], [120.0, 7573.0], [121.0, 7159.0], [122.0, 7358.0], [123.0, 7620.0], [126.0, 8570.5], [128.0, 8742.0], [130.0, 8699.0], [131.0, 9362.0], [132.0, 19056.0], [133.0, 24864.0], [134.0, 40310.0], [136.0, 25223.0], [137.0, 11875.0], [139.0, 12157.0], [140.0, 11321.0], [141.0, 10371.0], [142.0, 40174.0], [138.0, 40240.0], [144.0, 10860.333333333334], [145.0, 13868.0], [147.0, 9559.0], [149.0, 10481.0], [151.0, 10672.666666666666], [148.0, 17879.0], [154.0, 11232.666666666666], [156.0, 11449.0], [157.0, 11195.5], [158.0, 10379.0], [160.0, 10488.0], [163.0, 61210.0], [164.0, 10300.0], [165.0, 13404.666666666666], [168.0, 11147.0], [169.0, 13688.5], [175.0, 10560.0], [176.0, 12003.0], [179.0, 11669.666666666666], [183.0, 14804.0], [186.0, 11675.0], [187.0, 12464.0], [189.0, 14558.0], [188.0, 14576.0], [185.0, 14789.0], [198.0, 10282.0], [199.0, 15992.0], [197.0, 16013.0], [195.0, 16022.0], [194.0, 16030.0], [193.0, 16032.0], [192.0, 13995.0], [200.0, 10745.0], [208.0, 13700.0], [209.0, 11201.0], [214.0, 10286.0], [213.0, 15442.0], [220.0, 10829.5], [223.0, 12272.0], [216.0, 12089.0], [227.0, 14311.0], [231.0, 13199.0], [224.0, 12251.0], [232.0, 2.0], [239.0, 122367.5], [242.0, 13074.666666666666], [245.0, 11717.0], [246.0, 11292.0], [247.0, 13565.0], [243.0, 12645.0], [248.0, 12414.5], [249.0, 10832.0], [250.0, 11043.0], [251.0, 10487.0], [252.0, 18266.666666666668], [254.0, 10959.0], [268.0, 13043.0], [257.0, 13312.0], [256.0, 10737.0], [259.0, 10460.8], [262.0, 13310.0], [263.0, 11108.0], [264.0, 13312.0], [265.0, 12169.666666666666], [266.0, 13819.0], [269.0, 6808.285714285714], [270.0, 26113.0], [271.0, 10947.0], [274.0, 22347.75], [272.0, 24664.333333333332], [275.0, 19965.0], [277.0, 12030.0], [278.0, 5128.0], [279.0, 11594.5], [281.0, 14013.666666666666], [282.0, 11907.0], [284.0, 10291.5], [285.0, 12540.75], [287.0, 18303.0], [289.0, 7917.0], [288.0, 13310.75], [290.0, 7423.0], [291.0, 13311.0], [292.0, 8236.666666666668], [293.0, 11840.25], [294.0, 12071.75], [295.0, 12605.75], [296.0, 20159.25], [302.0, 7184.666666666667], [303.0, 8555.0], [300.0, 11692.0], [301.0, 11980.999999999998], [297.0, 37165.5], [298.0, 8449.4], [299.0, 28705.4], [305.0, 12661.75], [304.0, 17425.0], [306.0, 8191.0], [307.0, 9857.0], [308.0, 6143.333333333334], [309.0, 9224.5], [310.0, 12059.0], [311.0, 20606.5], [312.0, 11476.5], [318.0, 12085.0], [319.0, 24258.125000000004], [316.0, 12885.57142857143], [317.0, 13311.0], [313.0, 12543.25], [314.0, 22737.333333333332], [315.0, 13312.0], [321.0, 11824.0], [320.0, 13315.0], [322.0, 13095.88888888889], [323.0, 14902.642857142859], [324.0, 11592.375], [325.0, 13824.0], [326.0, 8849.428571428572], [327.0, 13034.0], [328.0, 15619.0], [334.0, 11924.999999999998], [335.0, 10238.0], [332.0, 10281.666666666666], [333.0, 22912.5], [329.0, 11658.0], [330.0, 8138.333333333334], [331.0, 10622.25], [337.0, 9934.0], [336.0, 8396.099999999999], [338.0, 7932.0], [339.0, 8514.444444444445], [340.0, 10005.0], [342.0, 11008.0], [343.0, 8134.0714285714275], [344.0, 10359.57142857143], [350.0, 12094.25], [351.0, 12545.0], [348.0, 7345.0], [349.0, 10061.5], [345.0, 7956.833333333333], [346.0, 11804.22222222222], [347.0, 13699.25], [353.0, 4065.8333333333335], [352.0, 9407.25], [354.0, 11505.0], [355.0, 8190.666666666666], [356.0, 12292.0], [357.0, 13084.8], [358.0, 9938.5], [359.0, 8760.666666666666], [360.0, 9270.0], [366.0, 10366.0], [367.0, 13530.714285714286], [361.0, 11036.333333333334], [362.0, 11136.0], [363.0, 8363.0], [370.0, 12886.0], [369.0, 12367.384615384615], [368.0, 13311.0], [371.0, 12265.444444444445], [380.0, 10677.099999999999], [381.0, 12543.75], [382.0, 11692.5], [383.0, 11775.5], [372.0, 5889.5], [373.0, 11382.769230769232], [374.0, 8872.333333333332], [375.0, 13311.0], [376.0, 10815.375], [377.0, 11087.0], [378.0, 8815.25], [385.0, 10241.0], [384.0, 9216.333333333334], [387.0, 9772.666666666668], [396.0, 7423.75], [397.0, 13897.5], [398.0, 13384.42857142857], [399.0, 13310.0], [388.0, 6963.4], [389.0, 12256.0], [390.0, 9063.8], [391.0, 6830.25], [392.0, 12287.5], [393.0, 12800.0], [394.0, 11216.5], [401.0, 12434.142857142857], [400.0, 13308.57142857143], [402.0, 9011.2], [403.0, 12091.333333333332], [404.0, 13311.666666666666], [405.0, 21927.100000000002], [406.0, 12753.25], [407.0, 6884.0], [408.0, 7819.0], [414.0, 10411.0], [415.0, 11170.272727272726], [412.0, 11523.5], [413.0, 11093.222222222223], [409.0, 9992.333333333334], [410.0, 9301.666666666666], [411.0, 8631.285714285714], [417.0, 10769.142857142857], [416.0, 7488.0], [418.0, 11507.25], [419.0, 12711.2], [420.0, 7167.75], [421.0, 6078.333333333334], [422.0, 13312.0], [423.0, 11231.999999999998], [424.0, 12628.0], [430.0, 8703.777777777777], [431.0, 11977.0], [428.0, 10167.785714285716], [429.0, 14080.75], [425.0, 10051.0], [427.0, 8201.5], [433.0, 1.0], [432.0, 10464.375], [434.0, 12289.0], [435.0, 13824.0], [436.0, 8557.714285714286], [437.0, 8722.363636363636], [438.0, 12495.8], [439.0, 9728.25], [440.0, 32530.5], [446.0, 12652.5], [447.0, 45204.666666666664], [444.0, 10542.0], [445.0, 1.0], [441.0, 13035.6], [442.0, 12779.357142857143], [443.0, 8533.333333333332], [449.0, 7987.2], [448.0, 57920.74999999999], [450.0, 9910.875], [451.0, 9392.333333333334], [452.0, 10154.166666666668], [453.0, 1.0], [455.0, 9405.5], [456.0, 11136.0], [462.0, 8495.727272727274], [463.0, 13952.75], [460.0, 7424.0], [461.0, 12586.625], [457.0, 12544.0], [458.0, 9960.0], [459.0, 7983.909090909092], [465.0, 10520.5], [464.0, 9984.25], [466.0, 10304.4], [467.0, 7806.25], [468.0, 8387.888888888889], [469.0, 33607.6923076923], [470.0, 7228.625], [471.0, 8704.0], [472.0, 9599.25], [478.0, 10786.0], [479.0, 56871.0], [476.0, 10542.5], [477.0, 7679.666666666667], [473.0, 5632.5], [474.0, 11059.6], [475.0, 12496.125000000002], [481.0, 11671.5], [480.0, 11519.5], [482.0, 12310.0], [483.0, 29253.0], [484.0, 10436.714285714286], [485.0, 7293.5], [486.0, 9438.428571428572], [487.0, 8379.199999999999], [488.0, 11092.444444444445], [494.0, 12158.0], [495.0, 53608.71428571428], [492.0, 9128.2], [493.0, 12479.0], [489.0, 23598.2], [491.0, 11711.25], [496.0, 9434.999999999998], [497.0, 95511.42857142857], [498.0, 11129.6], [499.0, 21534.3], [500.0, 18341.946921443734]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[382.41720430107495, 16051.950000000004]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 567.0], [5.0, 520.0], [6.0, 637.5], [7.0, 708.75], [8.0, 644.6666666666667], [9.0, 724.8], [10.0, 856.7777777777778], [11.0, 829.7272727272727], [12.0, 35717.66666666667], [13.0, 767.4285714285714], [14.0, 812.6], [15.0, 899.0769230769231], [16.0, 858.8333333333331], [17.0, 892.7058823529413], [18.0, 885.2666666666668], [19.0, 969.8260869565219], [20.0, 976.5714285714287], [21.0, 1278.470588235294], [22.0, 1060.764705882353], [23.0, 23304.6], [24.0, 32527.57142857143], [25.0, 1358.5714285714282], [26.0, 1518.4999999999998], [27.0, 1424.2], [28.0, 12751.842105263158], [29.0, 1625.2666666666664], [30.0, 1645.4705882352944], [31.0, 1697.4999999999998], [32.0, 18705.857142857145], [33.0, 2090.846153846154], [34.0, 2142.7142857142862], [35.0, 19438.75], [36.0, 11151.333333333332], [37.0, 2510.368421052631], [38.0, 10942.833333333334], [39.0, 12966.428571428572], [40.0, 2362.352941176471], [41.0, 2388.769230769231], [42.0, 2386.666666666667], [43.0, 2171.214285714286], [44.0, 2209.529411764706], [45.0, 2356.6153846153848], [46.0, 2603.9047619047615], [47.0, 2418.555555555555], [48.0, 2320.909090909091], [49.0, 2622.235294117647], [50.0, 11019.266666666666], [51.0, 2962.529411764706], [52.0, 2863.9375000000005], [53.0, 2744.0000000000005], [54.0, 2702.6315789473683], [55.0, 10924.23076923077], [56.0, 8139.947368421053], [57.0, 6445.941176470588], [58.0, 6498.4375], [59.0, 2994.1578947368416], [60.0, 9102.555555555555], [61.0, 3758.6315789473683], [62.0, 3512.0555555555557], [63.0, 3212.0555555555557], [64.0, 2992.294117647059], [65.0, 3306.3846153846157], [66.0, 3546.142857142857], [67.0, 8145.9047619047615], [68.0, 3595.8571428571427], [69.0, 3616.428571428571], [70.0, 3865.5384615384614], [71.0, 4062.3333333333335], [72.0, 22356.5], [73.0, 7667.35294117647], [74.0, 7162.235294117647], [75.0, 7013.058823529412], [76.0, 8551.5], [77.0, 4335.384615384615], [78.0, 4631.9285714285725], [79.0, 4718.416666666667], [80.0, 5352.7692307692305], [81.0, 15672.9375], [82.0, 8090.857142857143], [83.0, 6918.8499999999985], [84.0, 6568.882352941176], [85.0, 4836.866666666667], [86.0, 4581.769230769231], [87.0, 4571.7692307692305], [88.0, 5070.3], [89.0, 8632.153846153846], [90.0, 7033.6875], [91.0, 7000.214285714285], [92.0, 15238.083333333334], [93.0, 8040.5], [94.0, 6336.333333333333], [95.0, 7213.375], [96.0, 7662.800000000001], [97.0, 7504.09090909091], [98.0, 8011.470588235294], [99.0, 7938.333333333333], [100.0, 8280.076923076922], [101.0, 7543.133333333333], [102.0, 8469.142857142857], [103.0, 9618.666666666668], [104.0, 6602.384615384615], [105.0, 6779.0], [106.0, 7459.2307692307695], [107.0, 7075.416666666667], [108.0, 7243.666666666667], [109.0, 10728.0], [110.0, 10768.076923076924], [111.0, 7929.25], [112.0, 8346.846153846154], [113.0, 8571.333333333332], [114.0, 8304.538461538461], [115.0, 8240.066666666668], [116.0, 8061.166666666667], [117.0, 13616.285714285714], [118.0, 7279.666666666666], [119.0, 7164.0], [120.0, 7647.764705882353], [121.0, 7456.1], [122.0, 7990.076923076923], [123.0, 8123.583333333333], [124.0, 8370.636363636366], [125.0, 40222.73333333334], [126.0, 9750.4], [127.0, 10627.235294117647], [128.0, 8640.333333333334], [129.0, 8680.777777777777], [130.0, 17863.538461538457], [131.0, 10669.25], [132.0, 8958.333333333334], [133.0, 9376.555555555555], [134.0, 9943.625], [135.0, 11102.111111111111], [136.0, 10995.81818181818], [137.0, 11648.777777777777], [138.0, 10870.5], [139.0, 11665.699999999999], [140.0, 12232.07142857143], [141.0, 10906.461538461539], [142.0, 10315.166666666666], [143.0, 11257.928571428569], [144.0, 11031.636363636364], [145.0, 10330.999999999998], [146.0, 10757.083333333334], [147.0, 11373.375], [148.0, 10439.624999999998], [149.0, 10202.000000000002], [150.0, 10800.5], [151.0, 11765.461538461537], [152.0, 10223.388888888889], [153.0, 10667.750000000002], [154.0, 11284.000000000002], [155.0, 11696.23076923077], [156.0, 11519.0], [157.0, 10821.625], [158.0, 11078.642857142859], [159.0, 11442.166666666668], [160.0, 11374.764705882351], [161.0, 11152.272727272728], [162.0, 11080.428571428572], [163.0, 11003.0], [164.0, 10874.846153846156], [165.0, 11130.571428571428], [166.0, 11901.0], [167.0, 10684.538461538461], [168.0, 10885.454545454546], [169.0, 11434.222222222223], [170.0, 11463.692307692309], [171.0, 11600.312500000002], [172.0, 11584.076923076924], [173.0, 11847.999999999998], [174.0, 11104.875], [175.0, 11250.882352941177], [176.0, 10255.727272727272], [177.0, 10582.357142857145], [178.0, 10608.454545454546], [179.0, 10978.875], [180.0, 11141.636363636364], [181.0, 11371.555555555555], [182.0, 13292.888888888889], [183.0, 11474.818181818182], [184.0, 11984.214285714284], [185.0, 11607.818181818182], [186.0, 12636.333333333334], [187.0, 11906.7], [188.0, 12288.374999999998], [189.0, 12373.055555555555], [190.0, 11110.615384615383], [191.0, 10414.666666666666], [192.0, 14515.09090909091], [193.0, 11414.81818181818], [194.0, 10831.571428571428], [195.0, 12006.166666666666], [196.0, 11498.42857142857], [197.0, 11162.000000000002], [198.0, 10742.384615384617], [199.0, 10839.153846153846], [200.0, 11835.363636363636], [201.0, 11290.153846153848], [202.0, 12175.857142857141], [203.0, 11840.333333333334], [204.0, 13750.625], [205.0, 12412.176470588236], [206.0, 11872.727272727272], [207.0, 11974.666666666668], [208.0, 11930.8], [209.0, 11741.866666666667], [210.0, 11622.0], [211.0, 11849.8125], [212.0, 11144.35294117647], [213.0, 10748.4], [214.0, 11421.083333333332], [215.0, 11503.3], [216.0, 10957.111111111111], [217.0, 12042.333333333334], [218.0, 11687.692307692309], [219.0, 11714.153846153846], [220.0, 11842.750000000002], [221.0, 11534.8], [222.0, 11554.0], [223.0, 11569.714285714284], [224.0, 11513.4], [225.0, 11939.416666666666], [226.0, 11068.099999999999], [227.0, 11750.7], [228.0, 11599.666666666666], [229.0, 11655.333333333334], [230.0, 12077.363636363638], [231.0, 12750.75], [232.0, 12600.125], [233.0, 13381.0], [234.0, 12289.466666666665], [235.0, 12944.75], [236.0, 22084.333333333336], [237.0, 13623.374999999998], [238.0, 12836.777777777777], [239.0, 26728.4375], [240.0, 12160.600000000002], [241.0, 12015.0], [242.0, 11974.777777777777], [243.0, 17557.11111111111], [244.0, 11720.6], [245.0, 11535.199999999999], [246.0, 12123.666666666666], [247.0, 15851.333333333334], [248.0, 11589.937500000002], [249.0, 11980.249999999998], [250.0, 11367.25], [251.0, 12214.578947368422], [252.0, 11865.92857142857], [253.0, 11208.916666666666], [254.0, 11560.25], [255.0, 11376.181818181818], [257.0, 11149.666666666668], [256.0, 11261.0], [258.0, 12217.0], [259.0, 11087.0], [260.0, 11361.846153846156], [261.0, 11104.461538461539], [262.0, 22810.470588235294], [263.0, 11750.916666666666], [264.0, 18943.0], [270.0, 21437.611111111113], [271.0, 11473.142857142857], [268.0, 12771.583333333332], [269.0, 10240.499999999998], [265.0, 12327.444444444443], [266.0, 10546.57142857143], [267.0, 11023.2], [273.0, 11733.300000000001], [272.0, 17656.375], [274.0, 12803.263157894738], [275.0, 10787.599999999999], [276.0, 43853.6875], [277.0, 11519.75], [278.0, 12311.0], [279.0, 10937.181818181818], [280.0, 9860.916666666666], [286.0, 15157.22222222222], [287.0, 10871.636363636362], [284.0, 11661.666666666668], [285.0, 11315.0], [281.0, 11512.888888888889], [282.0, 12155.64705882353], [283.0, 11931.705882352939], [289.0, 10476.23076923077], [288.0, 16724.5], [290.0, 15528.684210526317], [291.0, 10960.230769230768], [292.0, 17822.46153846154], [293.0, 10330.818181818184], [294.0, 15280.863636363638], [295.0, 11045.882352941178], [296.0, 12167.066666666668], [302.0, 9482.285714285712], [303.0, 8664.473684210525], [300.0, 10732.142857142859], [301.0, 10906.565217391302], [297.0, 10936.444444444443], [298.0, 10607.666666666666], [299.0, 17004.333333333336], [305.0, 8957.999999999998], [304.0, 10718.76923076923], [306.0, 10018.23076923077], [307.0, 11179.272727272726], [308.0, 9783.470588235294], [309.0, 14585.499999999998], [310.0, 10743.857142857143], [311.0, 18594.0], [312.0, 11742.0], [318.0, 11321.78947368421], [319.0, 10642.578947368424], [316.0, 11717.807692307693], [317.0, 17393.611111111117], [313.0, 11863.411764705881], [314.0, 13695.5], [315.0, 11983.5], [321.0, 10791.714285714286], [320.0, 10911.799999999997], [322.0, 11266.421052631578], [323.0, 14374.999999999998], [324.0, 9808.25], [325.0, 30731.38888888889], [326.0, 11523.052631578947], [327.0, 12113.8125], [328.0, 12122.190476190473], [334.0, 10873.0], [335.0, 10548.733333333334], [332.0, 10421.482758620688], [333.0, 18125.818181818187], [329.0, 12221.315789473683], [330.0, 11236.407407407405], [331.0, 10070.500000000004], [337.0, 10552.238095238097], [336.0, 9726.333333333336], [338.0, 10031.761904761903], [339.0, 9522.269230769229], [340.0, 11117.421052631578], [341.0, 9863.764705882353], [342.0, 9266.199999999997], [343.0, 9897.69565217391], [344.0, 11425.888888888889], [350.0, 10188.124999999998], [351.0, 11146.714285714284], [348.0, 10990.916666666666], [349.0, 9942.421052631578], [345.0, 10341.588235294115], [346.0, 10703.08108108108], [347.0, 10563.555555555557], [353.0, 10562.888888888889], [352.0, 10819.07142857143], [354.0, 10939.190476190475], [355.0, 10808.500000000002], [356.0, 11304.882352941177], [357.0, 11411.086956521738], [358.0, 11459.363636363636], [359.0, 11967.656249999998], [360.0, 11366.142857142857], [366.0, 10923.4], [367.0, 12122.047619047618], [364.0, 10896.900000000001], [365.0, 10803.0], [361.0, 11592.333333333334], [362.0, 11804.52], [363.0, 10910.92857142857], [369.0, 12856.521739130436], [368.0, 11244.117647058823], [370.0, 11671.666666666668], [371.0, 11252.807692307693], [372.0, 12583.636363636362], [373.0, 11869.645161290322], [374.0, 13060.9375], [375.0, 12960.214285714284], [376.0, 10047.42857142857], [382.0, 11288.866666666669], [383.0, 11226.608695652172], [380.0, 11517.666666666668], [381.0, 10669.588235294115], [377.0, 13058.6875], [378.0, 11446.374999999998], [379.0, 11834.555555555555], [385.0, 11237.57142857143], [384.0, 11735.21052631579], [386.0, 9571.416666666668], [387.0, 12320.1], [388.0, 11767.434782608696], [389.0, 11638.466666666667], [390.0, 11766.16666666667], [391.0, 11733.750000000002], [392.0, 11235.5], [398.0, 12683.454545454546], [399.0, 12531.882352941177], [396.0, 10244.899999999998], [397.0, 11121.333333333334], [393.0, 12105.666666666668], [394.0, 10888.608695652176], [395.0, 10963.09090909091], [401.0, 10955.0], [400.0, 11417.964285714286], [402.0, 11784.368421052632], [403.0, 12021.0], [404.0, 12127.624999999998], [405.0, 11996.904761904761], [406.0, 12205.31818181818], [407.0, 10849.30434782609], [408.0, 9629.625], [414.0, 12187.681818181816], [415.0, 11292.583333333332], [412.0, 10209.523809523807], [413.0, 11070.263157894737], [409.0, 10133.375], [410.0, 11907.764705882353], [411.0, 9781.421052631578], [417.0, 12059.727272727272], [416.0, 10165.176470588234], [418.0, 11341.35294117647], [419.0, 12103.166666666668], [420.0, 9970.0], [421.0, 10822.764705882351], [422.0, 11594.0], [423.0, 10641.444444444447], [424.0, 10202.099999999999], [430.0, 10877.428571428572], [431.0, 9938.588235294113], [428.0, 10125.38888888889], [429.0, 11428.583333333334], [425.0, 11093.29411764706], [426.0, 9966.307692307691], [427.0, 9203.57894736842], [433.0, 11030.153846153846], [432.0, 11093.411764705883], [434.0, 10785.5], [435.0, 12024.208333333336], [436.0, 10836.84210526316], [437.0, 11352.199999999999], [438.0, 11680.368421052632], [439.0, 10296.636363636364], [440.0, 36613.93103448276], [446.0, 10087.8], [447.0, 29708.15384615385], [444.0, 10379.0], [445.0, 10032.117647058823], [441.0, 10824.677419354839], [442.0, 10727.4], [443.0, 9051.541666666668], [449.0, 10150.136363636362], [448.0, 19867.949999999997], [450.0, 18016.6875], [451.0, 10746.839999999998], [452.0, 10279.766666666666], [453.0, 11078.320000000002], [454.0, 11508.272727272728], [455.0, 10284.975609756095], [456.0, 9385.333333333334], [462.0, 9676.805555555551], [463.0, 10523.375], [460.0, 9721.500000000002], [461.0, 9809.578947368422], [457.0, 10614.499999999998], [458.0, 9920.733333333334], [459.0, 9984.156250000002], [465.0, 9855.368421052632], [464.0, 10444.526315789473], [466.0, 10073.160000000003], [467.0, 9948.3], [468.0, 7950.263157894738], [469.0, 22461.538461538457], [470.0, 9031.285714285712], [471.0, 9339.571428571431], [472.0, 10102.70588235294], [478.0, 9558.538461538461], [479.0, 21296.269230769227], [476.0, 10803.259259259257], [477.0, 10524.57142857143], [473.0, 16869.266666666666], [474.0, 10456.266666666665], [475.0, 10579.722222222223], [481.0, 10934.333333333334], [480.0, 12012.291666666668], [482.0, 11833.666666666664], [483.0, 34447.241379310355], [484.0, 10996.833333333336], [485.0, 9771.368421052633], [486.0, 10535.000000000004], [487.0, 9874.153846153846], [488.0, 11056.999999999998], [494.0, 10970.733333333334], [495.0, 44287.529411764706], [492.0, 9416.96551724138], [493.0, 10976.434782608698], [489.0, 33760.61111111111], [490.0, 11588.375], [491.0, 12070.11111111111], [496.0, 9895.42857142857], [497.0, 24537.631578947367], [498.0, 11712.526315789473], [499.0, 21058.8], [500.0, 13845.658811978376]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[322.1777666998995, 11639.148255234264]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 32.0], [3.0, 30.0], [4.0, 104974.0], [5.0, 26.0], [6.0, 33.0], [7.0, 27.0], [8.0, 22.0], [9.0, 34.0], [10.0, 34.0], [11.0, 28.0], [12.0, 183680.625], [13.0, 27.0], [14.0, 28.0], [15.0, 35.0], [16.0, 26.0], [17.0, 19.0], [18.0, 45.0], [19.0, 82.0], [20.0, 303.0], [21.0, 327.0], [22.0, 82803.5], [23.0, 110451.66666666667], [24.0, 83005.0], [25.0, 724.0], [26.0, 523.0], [27.0, 774.0], [28.0, 603.0], [29.0, 671.0], [30.0, 890.0], [32.0, 60306.0], [33.0, 1393.0], [34.0, 1332.0], [35.0, 1418.0], [36.0, 1655.0], [37.0, 1596.0], [38.0, 1280.0], [39.0, 121956.66666666667], [40.0, 1383.0], [41.0, 1332.0], [42.0, 1452.0], [43.0, 1173.0], [44.0, 1583.0], [45.0, 1531.0], [46.0, 1689.0], [47.0, 58363.0], [48.0, 1913.0], [50.0, 69888.2], [51.0, 1755.0], [52.0, 1923.0], [54.0, 2003.0], [55.0, 106497.0], [56.0, 2163.0], [57.0, 2487.0], [58.0, 2264.0], [59.0, 29993.0], [60.0, 2596.0], [61.0, 2634.0], [62.0, 2533.0], [63.0, 2077.0], [64.0, 2253.0], [65.0, 2837.0], [66.0, 2871.0], [67.0, 2875.0], [68.0, 2724.0], [69.0, 2820.0], [71.0, 49048.0], [72.0, 64218.666666666664], [73.0, 3448.0], [74.0, 3222.0], [75.0, 3020.0], [76.0, 3396.0], [77.0, 3703.0], [78.0, 29909.5], [80.0, 4405.0], [81.0, 4110.0], [82.0, 4173.0], [83.0, 4134.5], [84.0, 3708.0], [85.0, 18978.5], [86.0, 19007.0], [87.0, 34322.0], [88.0, 4143.0], [89.0, 4817.0], [91.0, 5175.0], [92.0, 5237.0], [93.0, 5402.0], [94.0, 12581.5], [95.0, 5199.0], [96.0, 5491.0], [97.0, 5609.0], [98.0, 5330.0], [99.0, 5078.0], [100.0, 5057.0], [101.0, 5459.0], [102.0, 5489.0], [103.0, 5412.0], [105.0, 5993.0], [106.0, 17686.0], [107.0, 17634.0], [104.0, 41059.0], [108.0, 6499.0], [109.0, 3334.0], [110.0, 6971.0], [112.0, 7227.0], [113.0, 7055.0], [114.0, 7067.0], [116.0, 6353.0], [117.0, 48824.0], [118.0, 6234.0], [119.0, 6481.0], [120.0, 6599.0], [121.0, 49122.0], [122.0, 6959.0], [123.0, 6977.0], [125.0, 63476.333333333336], [126.0, 7498.0], [127.0, 7367.0], [128.0, 18380.5], [130.0, 8342.0], [131.0, 8874.0], [132.0, 8751.0], [133.0, 8451.0], [134.0, 8862.0], [136.0, 9278.0], [137.0, 9896.0], [139.0, 10306.0], [140.0, 10165.0], [141.0, 20061.0], [142.0, 9815.0], [143.0, 24949.0], [144.0, 9059.5], [146.0, 9000.0], [148.0, 9274.0], [149.0, 13431.0], [150.0, 9236.0], [151.0, 9699.0], [152.0, 9666.0], [153.0, 13784.0], [155.0, 10247.0], [157.0, 12865.5], [158.0, 12699.5], [156.0, 15684.0], [164.0, 9698.0], [166.0, 16263.0], [167.0, 16863.0], [162.0, 111988.0], [168.0, 14776.666666666666], [174.0, 11869.333333333334], [175.0, 14184.666666666666], [182.0, 14811.0], [181.0, 13798.0], [178.0, 13811.0], [177.0, 13815.0], [188.0, 12297.0], [189.0, 12370.0], [187.0, 14606.0], [194.0, 12859.0], [198.0, 14418.0], [204.0, 10320.0], [201.0, 15969.0], [209.0, 10810.0], [214.0, 22620.0], [215.0, 15676.0], [217.0, 12657.0], [218.0, 12259.0], [219.0, 9538.0], [222.0, 13354.0], [221.0, 13826.0], [225.0, 13685.0], [227.0, 13215.0], [229.0, 19340.0], [228.0, 12222.0], [232.0, 13334.0], [233.0, 36186.5], [234.0, 12897.0], [235.0, 68681.0], [239.0, 43968.25], [241.0, 12061.0], [242.0, 13089.0], [244.0, 10837.0], [245.0, 67415.5], [246.0, 11209.0], [247.0, 64963.0], [248.0, 4357.0], [249.0, 48073.0], [251.0, 26277.0], [252.0, 45882.25], [254.0, 59749.0], [255.0, 13369.0], [257.0, 13015.0], [256.0, 10012.5], [258.0, 61875.66666666667], [259.0, 13208.0], [260.0, 58373.5], [261.0, 10615.666666666666], [262.0, 70025.66666666667], [264.0, 79684.0], [270.0, 78988.5], [271.0, 11779.0], [268.0, 12464.0], [269.0, 9893.2], [266.0, 36208.0], [267.0, 7397.0], [274.0, 16196.2], [272.0, 48772.0], [275.0, 52529.25], [284.0, 29797.666666666668], [285.0, 13313.0], [286.0, 65229.0], [287.0, 9037.5], [276.0, 129395.33333333334], [277.0, 11134.8], [278.0, 57877.833333333336], [279.0, 13422.0], [280.0, 35259.5], [281.0, 11760.0], [282.0, 33601.0], [283.0, 15376.25], [289.0, 10609.0], [288.0, 12426.833333333334], [290.0, 45344.57142857143], [291.0, 7168.0], [292.0, 58387.5], [293.0, 12926.666666666666], [294.0, 42865.666666666664], [295.0, 10490.0], [296.0, 11695.0], [302.0, 8159.0], [303.0, 13190.0], [300.0, 11382.0], [301.0, 10322.2], [297.0, 42678.0], [298.0, 7394.0], [299.0, 24724.199999999997], [305.0, 7632.833333333333], [304.0, 13311.5], [306.0, 11834.666666666666], [307.0, 110016.33333333333], [308.0, 9161.0], [309.0, 10231.300000000001], [310.0, 9335.285714285714], [311.0, 51940.833333333336], [312.0, 1.0], [318.0, 11444.5], [319.0, 12063.0], [316.0, 6655.5], [317.0, 61928.0], [313.0, 18442.75], [314.0, 11342.0], [315.0, 25216.444444444445], [321.0, 10702.857142857143], [320.0, 13341.0], [322.0, 11858.285714285714], [323.0, 15021.75], [324.0, 11629.0], [325.0, 108276.5], [326.0, 10237.4], [328.0, 9454.714285714286], [334.0, 12945.42857142857], [335.0, 11509.333333333332], [332.0, 9612.0], [333.0, 9430.09090909091], [329.0, 39005.5], [330.0, 10941.5], [331.0, 19003.5], [337.0, 9725.4], [336.0, 11158.928571428572], [338.0, 10095.2], [339.0, 8390.818181818184], [341.0, 13332.0], [342.0, 9984.5], [343.0, 8057.555555555556], [344.0, 11355.5], [350.0, 12983.833333333334], [348.0, 12220.5], [349.0, 10542.5], [345.0, 9295.5], [346.0, 8277.461538461535], [347.0, 8703.333333333332], [353.0, 9272.0], [352.0, 10814.8], [354.0, 10048.0], [355.0, 12236.7], [356.0, 13341.75], [357.0, 8567.0], [358.0, 9904.0], [359.0, 12719.23076923077], [360.0, 7622.0], [366.0, 13693.25], [367.0, 11389.000000000002], [364.0, 12621.0], [365.0, 10629.0], [361.0, 11467.2], [362.0, 11777.166666666668], [363.0, 8502.0], [369.0, 9439.444444444443], [368.0, 10315.166666666666], [370.0, 13252.0], [371.0, 8861.666666666666], [372.0, 8707.5], [373.0, 12493.307692307691], [374.0, 11742.333333333334], [375.0, 13371.0], [376.0, 6364.125], [380.0, 11802.75], [381.0, 8049.25], [382.0, 11851.0], [383.0, 13481.0], [378.0, 12419.333333333334], [385.0, 9843.0], [384.0, 13442.25], [386.0, 7596.333333333333], [387.0, 11656.555555555555], [388.0, 10512.0], [389.0, 16737.916666666668], [390.0, 8162.000000000001], [391.0, 7982.0], [392.0, 5289.5], [398.0, 12798.666666666666], [396.0, 11109.333333333334], [397.0, 14848.0], [393.0, 12326.0], [394.0, 10751.166666666666], [395.0, 10024.0], [401.0, 13312.75], [400.0, 11691.77777777778], [402.0, 14335.0], [403.0, 13480.0], [404.0, 8787.333333333334], [405.0, 13952.166666666668], [406.0, 12726.25], [407.0, 10008.166666666668], [408.0, 8944.0], [414.0, 15232.333333333334], [415.0, 10545.46153846154], [412.0, 10581.333333333334], [413.0, 10870.166666666666], [409.0, 12837.333333333334], [410.0, 12925.2], [411.0, 7790.2], [417.0, 15123.0], [416.0, 8405.666666666666], [418.0, 13883.0], [419.0, 11022.0], [420.0, 7168.0], [421.0, 7935.5], [422.0, 9168.75], [423.0, 11096.25], [424.0, 13003.0], [430.0, 8799.333333333334], [431.0, 6869.500000000001], [428.0, 9459.714285714286], [429.0, 11978.699999999999], [425.0, 11042.0], [426.0, 11255.5], [427.0, 10660.0], [433.0, 9730.0], [432.0, 9216.0], [434.0, 12144.5], [435.0, 13823.5], [436.0, 6472.75], [437.0, 10770.454545454544], [438.0, 13335.0], [439.0, 9728.333333333334], [440.0, 23064.777777777777], [447.0, 7168.166666666667], [444.0, 12823.285714285714], [445.0, 15502.0], [441.0, 10205.111111111111], [442.0, 12607.25], [443.0, 10310.142857142857], [449.0, 13317.285714285714], [448.0, 74824.09090909091], [450.0, 9984.0], [451.0, 12347.5], [452.0, 12766.625], [453.0, 13246.0], [454.0, 8912.0], [455.0, 9478.1875], [456.0, 44440.66666666667], [462.0, 9434.307692307691], [463.0, 13517.714285714286], [460.0, 10575.0], [461.0, 9984.0], [458.0, 14349.0], [459.0, 8260.263157894737], [465.0, 8981.0], [464.0, 12499.0], [466.0, 12954.2], [467.0, 8949.333333333334], [468.0, 9118.333333333332], [469.0, 38429.72727272727], [470.0, 8283.333333333334], [471.0, 10193.5], [472.0, 13312.0], [478.0, 9340.0], [479.0, 64109.42857142857], [476.0, 10880.875], [477.0, 8449.375], [473.0, 110851.75], [474.0, 12662.75], [475.0, 12603.4], [481.0, 19798.416666666664], [480.0, 13952.428571428572], [482.0, 8704.333333333332], [483.0, 49804.4], [484.0, 11078.0], [485.0, 5901.333333333333], [486.0, 9088.222222222223], [487.0, 9743.785714285714], [488.0, 13300.833333333334], [494.0, 11005.166666666668], [495.0, 63574.81818181818], [492.0, 9159.666666666668], [493.0, 12972.666666666666], [489.0, 13187.0], [490.0, 10058.0], [491.0, 7231.0], [496.0, 6374.666666666667], [497.0, 76569.55555555556], [498.0, 10445.666666666666], [499.0, 32883.11111111111], [500.0, 17227.09662921349], [1.0, 95.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[378.16692268305127, 18568.661546338975]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 30.466666666666665, "minX": 1.53928344E12, "maxY": 1044756.9, "series": [{"data": [[1.53928368E12, 852930.2666666667], [1.53928404E12, 913336.1833333333], [1.53928374E12, 866797.7166666667], [1.53928344E12, 1700.5666666666666], [1.5392841E12, 183525.41666666666], [1.5392838E12, 867223.4333333333], [1.5392835E12, 1044756.9], [1.53928416E12, 137.5], [1.53928386E12, 862532.2333333333], [1.53928356E12, 943457.8], [1.53928392E12, 941046.2333333333], [1.53928362E12, 826838.45], [1.53928398E12, 847991.6666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928368E12, 3066.7833333333333], [1.53928404E12, 6840.783333333334], [1.53928374E12, 4685.15], [1.53928344E12, 30.466666666666665], [1.5392841E12, 1227.8], [1.5392838E12, 6665.583333333333], [1.5392835E12, 4085.116666666667], [1.53928416E12, 82.8], [1.53928386E12, 6501.966666666666], [1.53928356E12, 3678.5666666666666], [1.53928392E12, 7366.483333333334], [1.53928362E12, 3192.116666666667], [1.53928398E12, 7162.2]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928416E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 42.8, "minX": 1.53928344E12, "maxY": 195070.58333333334, "series": [{"data": [[1.53928368E12, 11301.000000000002], [1.53928404E12, 22986.664000000004], [1.53928374E12, 13818.013698630142], [1.53928344E12, 2297.5], [1.5392841E12, 56869.2794117647], [1.5392838E12, 11443.494915254236], [1.5392835E12, 2379.9298245614027], [1.53928416E12, 184113.8], [1.53928386E12, 10859.732851985556], [1.53928356E12, 6020.705882352941], [1.53928392E12, 13249.260061919496], [1.53928362E12, 10605.095238095237], [1.53928398E12, 16957.83282674773]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928368E12, 11960.037868162695], [1.53928404E12, 15219.45988880064], [1.53928374E12, 12681.843498273887], [1.53928344E12, 567.0], [1.5392841E12, 33354.57068062826], [1.5392838E12, 11632.596396396413], [1.5392835E12, 2045.5637198622271], [1.53928416E12, 176511.375], [1.53928386E12, 11321.645045045023], [1.53928356E12, 5955.080459770111], [1.53928392E12, 12128.159902597394], [1.53928362E12, 10705.326560232217], [1.53928398E12, 13405.663316582915]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928368E12, 20530.363636363632], [1.53928404E12, 21984.14876033058], [1.53928374E12, 28443.034883720924], [1.53928344E12, 42.8], [1.5392841E12, 58422.1612903226], [1.5392838E12, 14332.757188498399], [1.5392835E12, 1130.7543859649124], [1.53928416E12, 195070.58333333334], [1.53928386E12, 11285.089965397925], [1.53928356E12, 4967.928571428572], [1.53928392E12, 16728.799426934107], [1.53928362E12, 10009.131578947372], [1.53928398E12, 15700.289230769247]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928416E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 42.8, "minX": 1.53928344E12, "maxY": 195070.58333333334, "series": [{"data": [[1.53928368E12, 11301.000000000002], [1.53928404E12, 22986.660000000007], [1.53928374E12, 13818.006849315072], [1.53928344E12, 2297.5], [1.5392841E12, 56869.2794117647], [1.5392838E12, 11443.461016949159], [1.5392835E12, 2379.9298245614027], [1.53928416E12, 184113.8], [1.53928386E12, 10859.725631768952], [1.53928356E12, 6020.705882352941], [1.53928392E12, 13249.25696594427], [1.53928362E12, 10605.095238095237], [1.53928398E12, 16957.829787234048]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928368E12, 11959.55399719493], [1.53928404E12, 15219.096108022246], [1.53928374E12, 12681.400460299184], [1.53928344E12, 567.0], [1.5392841E12, 33354.209424083754], [1.5392838E12, 11632.298198198197], [1.5392835E12, 2045.1572904707234], [1.53928416E12, 176511.375], [1.53928386E12, 11321.275675675668], [1.53928356E12, 5954.553001277143], [1.53928392E12, 12127.855519480521], [1.53928362E12, 10704.936139332382], [1.53928398E12, 13405.332495812401]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928368E12, 20530.33333333333], [1.53928404E12, 21984.13223140496], [1.53928374E12, 28443.017441860484], [1.53928344E12, 42.8], [1.5392841E12, 58422.1612903226], [1.5392838E12, 14332.715654952086], [1.5392835E12, 1130.7368421052633], [1.53928416E12, 195070.58333333334], [1.53928386E12, 11285.086505190315], [1.53928356E12, 4967.910714285716], [1.53928392E12, 16728.799426934107], [1.53928362E12, 10009.131578947372], [1.53928398E12, 15700.28000000001]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928416E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928344E12, "maxY": 10.2, "series": [{"data": [[1.53928368E12, 0.7999999999999999], [1.53928404E12, 0.3639999999999999], [1.53928374E12, 0.6575342465753424], [1.53928344E12, 0.0], [1.5392841E12, 0.3529411764705885], [1.5392838E12, 0.4203389830508476], [1.5392835E12, 0.08771929824561403], [1.53928416E12, 0.4], [1.53928386E12, 0.41516245487364634], [1.53928356E12, 1.0196078431372546], [1.53928392E12, 0.4953560371517026], [1.53928362E12, 0.7857142857142856], [1.53928398E12, 0.5288753799392096]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928368E12, 0.6255259467040678], [1.53928404E12, 0.4400317712470212], [1.53928374E12, 0.5581127733026473], [1.53928344E12, 1.0], [1.5392841E12, 0.35078534031413605], [1.5392838E12, 0.5207207207207214], [1.5392835E12, 0.5109070034443176], [1.53928416E12, 0.375], [1.53928386E12, 0.4063063063063068], [1.53928356E12, 0.6257982120051081], [1.53928392E12, 0.40665584415584394], [1.53928362E12, 0.5863570391872284], [1.53928398E12, 0.47068676716917923]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928368E12, 0.9090909090909092], [1.53928404E12, 0.38429752066115724], [1.53928374E12, 0.7383720930232557], [1.53928344E12, 10.2], [1.5392841E12, 0.33870967741935487], [1.5392838E12, 0.38338658146964866], [1.5392835E12, 1.3859649122807014], [1.53928416E12, 0.4166666666666667], [1.53928386E12, 0.41176470588235303], [1.53928356E12, 0.9285714285714286], [1.53928392E12, 0.4699140401146128], [1.53928362E12, 1.3157894736842106], [1.53928398E12, 0.5630769230769228]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928416E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.53928344E12, "maxY": 114814.0, "series": [{"data": [[1.53928368E12, 43752.0], [1.53928386E12, 18165.0], [1.53928356E12, 12085.0], [1.53928404E12, 54072.0], [1.53928374E12, 26833.0], [1.53928344E12, 2303.0], [1.53928392E12, 24505.0], [1.53928362E12, 26168.0], [1.5392841E12, 114814.0], [1.5392838E12, 18842.0], [1.5392835E12, 7263.0], [1.53928398E12, 20119.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928368E12, 9982.0], [1.53928386E12, 9156.0], [1.53928356E12, 2724.0], [1.53928404E12, 9732.0], [1.53928374E12, 8522.0], [1.53928344E12, 26.0], [1.53928392E12, 8517.0], [1.53928362E12, 7367.0], [1.5392841E12, 10148.0], [1.5392838E12, 8895.0], [1.5392835E12, 19.0], [1.53928398E12, 9240.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928368E12, 12023.2], [1.53928386E12, 12553.0], [1.53928356E12, 7362.200000000001], [1.53928404E12, 12628.0], [1.53928374E12, 12274.8], [1.53928344E12, 2303.0], [1.53928392E12, 12461.7], [1.53928362E12, 10838.400000000001], [1.5392841E12, 12776.8], [1.5392838E12, 12364.399999999998], [1.5392835E12, 3206.0], [1.53928398E12, 12573.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928368E12, 15402.639999999998], [1.53928386E12, 15822.620000000003], [1.53928356E12, 9815.880000000001], [1.53928404E12, 15912.849999999997], [1.53928374E12, 15688.900000000003], [1.53928344E12, 2303.0], [1.53928392E12, 15789.79], [1.53928362E12, 13736.639999999978], [1.5392841E12, 16801.15999999999], [1.5392838E12, 15746.099999999999], [1.5392835E12, 4613.800000000001], [1.53928398E12, 15863.4]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928368E12, 13053.5], [1.53928386E12, 13316.349999999999], [1.53928356E12, 7945.199999999999], [1.53928404E12, 13469.0], [1.53928374E12, 13140.0], [1.53928344E12, 2303.0], [1.53928392E12, 13281.95], [1.53928362E12, 11423.500000000002], [1.5392841E12, 13798.3], [1.5392838E12, 13208.099999999999], [1.5392835E12, 3532.0], [1.53928398E12, 13391.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392841E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.5, "minX": 0.0, "maxY": 169985.0, "series": [{"data": [[0.0, 63.5], [16.0, 2098.0], [19.0, 11105.0], [5.0, 13049.0], [12.0, 10998.0], [27.0, 11320.0], [14.0, 5896.5], [28.0, 10661.0], [29.0, 11040.0], [30.0, 11264.0], [31.0, 10163.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 1.5], [0.0, 169985.0], [19.0, 13311.0], [5.0, 91392.5], [12.0, 13303.5], [27.0, 13308.0], [14.0, 1.5], [28.0, 12539.0], [29.0, 13312.0], [30.0, 11524.0], [31.0, 12287.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.5, "minX": 0.0, "maxY": 169985.0, "series": [{"data": [[0.0, 63.5], [16.0, 2097.0], [19.0, 11104.0], [5.0, 13048.0], [12.0, 10998.0], [27.0, 11320.0], [14.0, 5896.0], [28.0, 10661.0], [29.0, 11040.0], [30.0, 11263.0], [31.0, 10163.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 1.5], [0.0, 169985.0], [19.0, 13311.0], [5.0, 91392.5], [12.0, 13303.5], [27.0, 13308.0], [14.0, 1.5], [28.0, 12539.0], [29.0, 13312.0], [30.0, 11524.0], [31.0, 12287.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.21666666666666667, "minX": 1.53928344E12, "maxY": 32.733333333333334, "series": [{"data": [[1.53928368E12, 13.683333333333334], [1.53928386E12, 28.933333333333334], [1.53928356E12, 15.833333333333334], [1.53928404E12, 26.616666666666667], [1.53928374E12, 20.783333333333335], [1.53928344E12, 0.21666666666666667], [1.53928392E12, 32.733333333333334], [1.53928362E12, 13.816666666666666], [1.5392838E12, 29.633333333333333], [1.5392835E12, 17.416666666666668], [1.53928398E12, 31.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928404E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928344E12, "maxY": 18.333333333333332, "series": [{"data": [[1.53928368E12, 12.066666666666666], [1.53928386E12, 12.183333333333334], [1.53928356E12, 13.933333333333334], [1.53928404E12, 12.716666666666667], [1.53928374E12, 12.466666666666667], [1.53928344E12, 0.1], [1.53928392E12, 13.366666666666667], [1.53928362E12, 12.066666666666666], [1.5392841E12, 3.05], [1.5392838E12, 12.4], [1.5392835E12, 15.4], [1.53928398E12, 11.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928368E12, 0.2], [1.53928386E12, 0.36666666666666664], [1.53928356E12, 0.8333333333333334], [1.53928404E12, 0.2], [1.53928374E12, 0.5833333333333334], [1.53928344E12, 0.03333333333333333], [1.53928392E12, 0.4666666666666667], [1.53928362E12, 0.7], [1.5392838E12, 0.55], [1.5392835E12, 0.95], [1.53928398E12, 0.36666666666666664]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928368E12, 0.4], [1.53928416E12, 0.4166666666666667], [1.53928386E12, 15.266666666666667], [1.53928356E12, 0.05], [1.53928404E12, 16.216666666666665], [1.53928374E12, 6.5], [1.53928392E12, 17.733333333333334], [1.53928362E12, 0.05], [1.5392841E12, 1.6833333333333333], [1.5392838E12, 15.483333333333333], [1.5392835E12, 0.06666666666666667], [1.53928398E12, 18.333333333333332]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928368E12, 0.016666666666666666], [1.53928386E12, 0.11666666666666667], [1.53928356E12, 0.016666666666666666], [1.53928404E12, 0.05], [1.53928374E12, 0.23333333333333334], [1.53928392E12, 0.16666666666666666], [1.5392841E12, 0.6166666666666667], [1.5392838E12, 0.2], [1.53928398E12, 0.15]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928416E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928344E12, "maxY": 14.45, "series": [{"data": [[1.53928368E12, 0.25], [1.53928386E12, 0.38333333333333336], [1.53928356E12, 0.9166666666666666], [1.53928404E12, 0.18333333333333332], [1.53928374E12, 0.55], [1.53928344E12, 0.08333333333333333], [1.53928392E12, 0.5], [1.53928362E12, 0.6333333333333333], [1.5392841E12, 0.6], [1.5392838E12, 0.55], [1.5392835E12, 0.95], [1.53928398E12, 0.4]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928368E12, 0.2], [1.53928386E12, 0.36666666666666664], [1.53928356E12, 0.8333333333333334], [1.53928404E12, 0.2], [1.53928374E12, 0.5833333333333334], [1.53928344E12, 0.03333333333333333], [1.53928392E12, 0.4666666666666667], [1.53928362E12, 0.7], [1.5392838E12, 0.55], [1.5392835E12, 0.95], [1.53928398E12, 0.36666666666666664]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928368E12, 11.816666666666666], [1.53928386E12, 11.8], [1.53928356E12, 13.016666666666667], [1.53928404E12, 12.533333333333333], [1.53928374E12, 11.916666666666666], [1.53928344E12, 0.016666666666666666], [1.53928392E12, 12.866666666666667], [1.53928362E12, 11.433333333333334], [1.5392841E12, 2.45], [1.5392838E12, 11.85], [1.5392835E12, 14.45], [1.53928398E12, 11.55]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928368E12, 0.3], [1.53928416E12, 0.2], [1.53928386E12, 4.433333333333334], [1.53928356E12, 0.016666666666666666], [1.53928404E12, 3.85], [1.53928374E12, 2.316666666666667], [1.53928392E12, 5.316666666666666], [1.5392841E12, 0.43333333333333335], [1.5392838E12, 4.666666666666667], [1.53928398E12, 5.016666666666667]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928368E12, 0.06666666666666667], [1.53928416E12, 0.13333333333333333], [1.53928386E12, 6.7], [1.53928356E12, 0.03333333333333333], [1.53928404E12, 8.45], [1.53928374E12, 2.566666666666667], [1.53928392E12, 7.666666666666667], [1.53928362E12, 0.05], [1.5392841E12, 0.7333333333333333], [1.5392838E12, 6.65], [1.5392835E12, 0.06666666666666667], [1.53928398E12, 8.35]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928368E12, 0.05], [1.53928416E12, 0.08333333333333333], [1.53928386E12, 4.25], [1.53928356E12, 0.016666666666666666], [1.53928404E12, 3.966666666666667], [1.53928374E12, 1.85], [1.53928392E12, 4.916666666666667], [1.5392841E12, 1.1333333333333333], [1.5392838E12, 4.366666666666666], [1.53928398E12, 5.116666666666666]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928416E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
