/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 230145.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 4.0], [7.5, 574.0], [7.6, 587.0], [7.7, 601.0], [7.8, 605.0], [7.9, 611.0], [8.0, 702.0], [8.1, 903.0], [8.2, 1002.0], [8.3, 1083.0], [8.4, 1114.0], [8.5, 1372.0], [8.6, 1430.0], [8.7, 1534.0], [8.8, 1552.0], [8.9, 1791.0], [9.0, 1926.0], [9.1, 2007.0], [9.2, 2085.0], [9.3, 2209.0], [9.4, 2285.0], [9.5, 2423.0], [9.6, 2456.0], [9.7, 2515.0], [9.8, 2659.0], [9.9, 2713.0], [10.0, 2822.0], [10.1, 2884.0], [10.2, 2905.0], [10.3, 2971.0], [10.4, 3049.0], [10.5, 3132.0], [10.6, 3428.0], [10.7, 3915.0], [10.8, 4055.0], [10.9, 4084.0], [11.0, 4322.0], [11.1, 4366.0], [11.2, 4382.0], [11.3, 4519.0], [11.4, 4546.0], [11.5, 4856.0], [11.6, 4908.0], [11.7, 5132.0], [11.8, 5364.0], [11.9, 5456.0], [12.0, 5472.0], [12.1, 5663.0], [12.2, 5775.0], [12.3, 5953.0], [12.4, 6061.0], [12.5, 6142.0], [12.6, 6296.0], [12.7, 6392.0], [12.8, 6523.0], [12.9, 6602.0], [13.0, 6702.0], [13.1, 7163.0], [13.2, 7163.0], [13.3, 7163.0], [13.4, 7163.0], [13.5, 7164.0], [13.6, 7164.0], [13.7, 7164.0], [13.8, 7164.0], [13.9, 7164.0], [14.0, 7164.0], [14.1, 7166.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7167.0], [15.3, 7167.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7168.0], [16.6, 7168.0], [16.7, 7168.0], [16.8, 7168.0], [16.9, 7168.0], [17.0, 7169.0], [17.1, 7169.0], [17.2, 7170.0], [17.3, 7171.0], [17.4, 7171.0], [17.5, 7172.0], [17.6, 7172.0], [17.7, 7172.0], [17.8, 7215.0], [17.9, 7309.0], [18.0, 7352.0], [18.1, 7422.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7423.0], [18.5, 7423.0], [18.6, 7423.0], [18.7, 7423.0], [18.8, 7423.0], [18.9, 7423.0], [19.0, 7423.0], [19.1, 7424.0], [19.2, 7424.0], [19.3, 7424.0], [19.4, 7424.0], [19.5, 7424.0], [19.6, 7424.0], [19.7, 7424.0], [19.8, 7427.0], [19.9, 7427.0], [20.0, 7427.0], [20.1, 7427.0], [20.2, 7476.0], [20.3, 7676.0], [20.4, 7677.0], [20.5, 7678.0], [20.6, 7679.0], [20.7, 7679.0], [20.8, 7679.0], [20.9, 7679.0], [21.0, 7679.0], [21.1, 7679.0], [21.2, 7679.0], [21.3, 7679.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7681.0], [21.8, 7683.0], [21.9, 7733.0], [22.0, 7821.0], [22.1, 7884.0], [22.2, 7931.0], [22.3, 7932.0], [22.4, 7932.0], [22.5, 7933.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7935.0], [22.9, 7935.0], [23.0, 7935.0], [23.1, 7935.0], [23.2, 7935.0], [23.3, 7936.0], [23.4, 7936.0], [23.5, 7938.0], [23.6, 7939.0], [23.7, 8061.0], [23.8, 8091.0], [23.9, 8187.0], [24.0, 8190.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8191.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8195.0], [25.4, 8323.0], [25.5, 8422.0], [25.6, 8440.0], [25.7, 8443.0], [25.8, 8444.0], [25.9, 8446.0], [26.0, 8447.0], [26.1, 8448.0], [26.2, 8448.0], [26.3, 8449.0], [26.4, 8473.0], [26.5, 8528.0], [26.6, 8625.0], [26.7, 8663.0], [26.8, 8682.0], [26.9, 8690.0], [27.0, 8699.0], [27.1, 8699.0], [27.2, 8700.0], [27.3, 8700.0], [27.4, 8702.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8703.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8704.0], [29.8, 8704.0], [29.9, 8704.0], [30.0, 8707.0], [30.1, 8708.0], [30.2, 8749.0], [30.3, 8750.0], [30.4, 8800.0], [30.5, 8816.0], [30.6, 8834.0], [30.7, 8848.0], [30.8, 8866.0], [30.9, 8884.0], [31.0, 8906.0], [31.1, 8912.0], [31.2, 8935.0], [31.3, 8954.0], [31.4, 8957.0], [31.5, 8959.0], [31.6, 8959.0], [31.7, 8959.0], [31.8, 8959.0], [31.9, 8960.0], [32.0, 8960.0], [32.1, 8963.0], [32.2, 8970.0], [32.3, 8980.0], [32.4, 8995.0], [32.5, 9028.0], [32.6, 9076.0], [32.7, 9087.0], [32.8, 9099.0], [32.9, 9126.0], [33.0, 9156.0], [33.1, 9159.0], [33.2, 9181.0], [33.3, 9195.0], [33.4, 9199.0], [33.5, 9200.0], [33.6, 9211.0], [33.7, 9211.0], [33.8, 9211.0], [33.9, 9212.0], [34.0, 9212.0], [34.1, 9212.0], [34.2, 9212.0], [34.3, 9213.0], [34.4, 9214.0], [34.5, 9214.0], [34.6, 9215.0], [34.7, 9215.0], [34.8, 9215.0], [34.9, 9215.0], [35.0, 9215.0], [35.1, 9215.0], [35.2, 9215.0], [35.3, 9215.0], [35.4, 9215.0], [35.5, 9215.0], [35.6, 9215.0], [35.7, 9215.0], [35.8, 9215.0], [35.9, 9215.0], [36.0, 9215.0], [36.1, 9216.0], [36.2, 9216.0], [36.3, 9216.0], [36.4, 9216.0], [36.5, 9216.0], [36.6, 9216.0], [36.7, 9216.0], [36.8, 9216.0], [36.9, 9219.0], [37.0, 9219.0], [37.1, 9219.0], [37.2, 9227.0], [37.3, 9279.0], [37.4, 9334.0], [37.5, 9338.0], [37.6, 9370.0], [37.7, 9390.0], [37.8, 9402.0], [37.9, 9411.0], [38.0, 9448.0], [38.1, 9470.0], [38.2, 9471.0], [38.3, 9472.0], [38.4, 9472.0], [38.5, 9476.0], [38.6, 9545.0], [38.7, 9557.0], [38.8, 9582.0], [38.9, 9600.0], [39.0, 9638.0], [39.1, 9654.0], [39.2, 9683.0], [39.3, 9699.0], [39.4, 9702.0], [39.5, 9708.0], [39.6, 9722.0], [39.7, 9724.0], [39.8, 9727.0], [39.9, 9727.0], [40.0, 9727.0], [40.1, 9727.0], [40.2, 9727.0], [40.3, 9727.0], [40.4, 9727.0], [40.5, 9727.0], [40.6, 9728.0], [40.7, 9728.0], [40.8, 9730.0], [40.9, 9731.0], [41.0, 9732.0], [41.1, 9732.0], [41.2, 9761.0], [41.3, 9762.0], [41.4, 9768.0], [41.5, 9777.0], [41.6, 9797.0], [41.7, 9816.0], [41.8, 9822.0], [41.9, 9831.0], [42.0, 9838.0], [42.1, 9851.0], [42.2, 9891.0], [42.3, 9909.0], [42.4, 9948.0], [42.5, 9964.0], [42.6, 9979.0], [42.7, 9979.0], [42.8, 9983.0], [42.9, 9983.0], [43.0, 9983.0], [43.1, 9984.0], [43.2, 9984.0], [43.3, 9984.0], [43.4, 10002.0], [43.5, 10010.0], [43.6, 10019.0], [43.7, 10060.0], [43.8, 10086.0], [43.9, 10087.0], [44.0, 10093.0], [44.1, 10106.0], [44.2, 10109.0], [44.3, 10112.0], [44.4, 10135.0], [44.5, 10140.0], [44.6, 10153.0], [44.7, 10160.0], [44.8, 10168.0], [44.9, 10169.0], [45.0, 10186.0], [45.1, 10188.0], [45.2, 10193.0], [45.3, 10203.0], [45.4, 10228.0], [45.5, 10234.0], [45.6, 10235.0], [45.7, 10235.0], [45.8, 10238.0], [45.9, 10239.0], [46.0, 10239.0], [46.1, 10239.0], [46.2, 10240.0], [46.3, 10242.0], [46.4, 10243.0], [46.5, 10244.0], [46.6, 10277.0], [46.7, 10289.0], [46.8, 10306.0], [46.9, 10312.0], [47.0, 10320.0], [47.1, 10341.0], [47.2, 10358.0], [47.3, 10384.0], [47.4, 10398.0], [47.5, 10400.0], [47.6, 10402.0], [47.7, 10442.0], [47.8, 10470.0], [47.9, 10472.0], [48.0, 10484.0], [48.1, 10495.0], [48.2, 10506.0], [48.3, 10507.0], [48.4, 10516.0], [48.5, 10554.0], [48.6, 10558.0], [48.7, 10567.0], [48.8, 10577.0], [48.9, 10603.0], [49.0, 10630.0], [49.1, 10636.0], [49.2, 10663.0], [49.3, 10680.0], [49.4, 10722.0], [49.5, 10733.0], [49.6, 10751.0], [49.7, 10751.0], [49.8, 10752.0], [49.9, 10752.0], [50.0, 10755.0], [50.1, 10834.0], [50.2, 10878.0], [50.3, 10908.0], [50.4, 10919.0], [50.5, 10933.0], [50.6, 10972.0], [50.7, 11003.0], [50.8, 11007.0], [50.9, 11007.0], [51.0, 11007.0], [51.1, 11008.0], [51.2, 11094.0], [51.3, 11105.0], [51.4, 11131.0], [51.5, 11149.0], [51.6, 11156.0], [51.7, 11159.0], [51.8, 11164.0], [51.9, 11201.0], [52.0, 11260.0], [52.1, 11263.0], [52.2, 11263.0], [52.3, 11263.0], [52.4, 11267.0], [52.5, 11268.0], [52.6, 11269.0], [52.7, 11287.0], [52.8, 11315.0], [52.9, 11455.0], [53.0, 11455.0], [53.1, 11490.0], [53.2, 11519.0], [53.3, 11519.0], [53.4, 11519.0], [53.5, 11552.0], [53.6, 11572.0], [53.7, 11662.0], [53.8, 11662.0], [53.9, 11693.0], [54.0, 11708.0], [54.1, 11738.0], [54.2, 11763.0], [54.3, 11771.0], [54.4, 11774.0], [54.5, 11775.0], [54.6, 11775.0], [54.7, 11775.0], [54.8, 11775.0], [54.9, 11775.0], [55.0, 11775.0], [55.1, 11775.0], [55.2, 11775.0], [55.3, 11775.0], [55.4, 11775.0], [55.5, 11775.0], [55.6, 11776.0], [55.7, 11776.0], [55.8, 11776.0], [55.9, 11776.0], [56.0, 11776.0], [56.1, 11776.0], [56.2, 11776.0], [56.3, 11776.0], [56.4, 11779.0], [56.5, 11827.0], [56.6, 11835.0], [56.7, 11871.0], [56.8, 11921.0], [56.9, 11941.0], [57.0, 12027.0], [57.1, 12035.0], [57.2, 12055.0], [57.3, 12088.0], [57.4, 12106.0], [57.5, 12163.0], [57.6, 12181.0], [57.7, 12225.0], [57.8, 12279.0], [57.9, 12283.0], [58.0, 12287.0], [58.1, 12287.0], [58.2, 12287.0], [58.3, 12288.0], [58.4, 12288.0], [58.5, 12288.0], [58.6, 12288.0], [58.7, 12288.0], [58.8, 12289.0], [58.9, 12291.0], [59.0, 12291.0], [59.1, 12291.0], [59.2, 12292.0], [59.3, 12292.0], [59.4, 12298.0], [59.5, 12338.0], [59.6, 12398.0], [59.7, 12424.0], [59.8, 12435.0], [59.9, 12514.0], [60.0, 12539.0], [60.1, 12544.0], [60.2, 12544.0], [60.3, 12572.0], [60.4, 12593.0], [60.5, 12644.0], [60.6, 12645.0], [60.7, 12669.0], [60.8, 12795.0], [60.9, 12799.0], [61.0, 12799.0], [61.1, 12799.0], [61.2, 12800.0], [61.3, 13034.0], [61.4, 13055.0], [61.5, 13056.0], [61.6, 13109.0], [61.7, 13149.0], [61.8, 13201.0], [61.9, 13306.0], [62.0, 13307.0], [62.1, 13307.0], [62.2, 13307.0], [62.3, 13307.0], [62.4, 13307.0], [62.5, 13307.0], [62.6, 13307.0], [62.7, 13307.0], [62.8, 13308.0], [62.9, 13308.0], [63.0, 13308.0], [63.1, 13308.0], [63.2, 13308.0], [63.3, 13308.0], [63.4, 13308.0], [63.5, 13308.0], [63.6, 13308.0], [63.7, 13308.0], [63.8, 13308.0], [63.9, 13308.0], [64.0, 13308.0], [64.1, 13308.0], [64.2, 13309.0], [64.3, 13309.0], [64.4, 13310.0], [64.5, 13310.0], [64.6, 13310.0], [64.7, 13310.0], [64.8, 13310.0], [64.9, 13310.0], [65.0, 13310.0], [65.1, 13310.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13311.0], [70.4, 13311.0], [70.5, 13311.0], [70.6, 13311.0], [70.7, 13311.0], [70.8, 13311.0], [70.9, 13311.0], [71.0, 13311.0], [71.1, 13311.0], [71.2, 13311.0], [71.3, 13311.0], [71.4, 13311.0], [71.5, 13311.0], [71.6, 13311.0], [71.7, 13311.0], [71.8, 13311.0], [71.9, 13311.0], [72.0, 13311.0], [72.1, 13311.0], [72.2, 13311.0], [72.3, 13311.0], [72.4, 13311.0], [72.5, 13311.0], [72.6, 13311.0], [72.7, 13311.0], [72.8, 13311.0], [72.9, 13311.0], [73.0, 13311.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13312.0], [78.9, 13312.0], [79.0, 13312.0], [79.1, 13312.0], [79.2, 13312.0], [79.3, 13312.0], [79.4, 13312.0], [79.5, 13312.0], [79.6, 13312.0], [79.7, 13312.0], [79.8, 13312.0], [79.9, 13312.0], [80.0, 13313.0], [80.1, 13313.0], [80.2, 13314.0], [80.3, 13314.0], [80.4, 13315.0], [80.5, 13315.0], [80.6, 13315.0], [80.7, 13315.0], [80.8, 13315.0], [80.9, 13315.0], [81.0, 13315.0], [81.1, 13315.0], [81.2, 13315.0], [81.3, 13316.0], [81.4, 13316.0], [81.5, 13316.0], [81.6, 13316.0], [81.7, 13316.0], [81.8, 13316.0], [81.9, 13316.0], [82.0, 13316.0], [82.1, 13316.0], [82.2, 13316.0], [82.3, 13316.0], [82.4, 13341.0], [82.5, 13344.0], [82.6, 13564.0], [82.7, 13567.0], [82.8, 13568.0], [82.9, 13568.0], [83.0, 13571.0], [83.1, 13572.0], [83.2, 13819.0], [83.3, 13819.0], [83.4, 13820.0], [83.5, 13820.0], [83.6, 13822.0], [83.7, 13822.0], [83.8, 13823.0], [83.9, 13823.0], [84.0, 13823.0], [84.1, 13823.0], [84.2, 13823.0], [84.3, 13823.0], [84.4, 13823.0], [84.5, 13823.0], [84.6, 13823.0], [84.7, 13823.0], [84.8, 13823.0], [84.9, 13823.0], [85.0, 13823.0], [85.1, 13823.0], [85.2, 13823.0], [85.3, 13823.0], [85.4, 13823.0], [85.5, 13824.0], [85.6, 13824.0], [85.7, 13824.0], [85.8, 13824.0], [85.9, 13824.0], [86.0, 13824.0], [86.1, 13824.0], [86.2, 13824.0], [86.3, 13824.0], [86.4, 13824.0], [86.5, 13824.0], [86.6, 13824.0], [86.7, 13824.0], [86.8, 13824.0], [86.9, 13825.0], [87.0, 13827.0], [87.1, 14033.0], [87.2, 14076.0], [87.3, 14080.0], [87.4, 14080.0], [87.5, 14110.0], [87.6, 14331.0], [87.7, 14332.0], [87.8, 14332.0], [87.9, 14334.0], [88.0, 14334.0], [88.1, 14334.0], [88.2, 14334.0], [88.3, 14334.0], [88.4, 14335.0], [88.5, 14335.0], [88.6, 14335.0], [88.7, 14335.0], [88.8, 14335.0], [88.9, 14335.0], [89.0, 14335.0], [89.1, 14335.0], [89.2, 14335.0], [89.3, 14335.0], [89.4, 14335.0], [89.5, 14335.0], [89.6, 14335.0], [89.7, 14336.0], [89.8, 14336.0], [89.9, 14336.0], [90.0, 14336.0], [90.1, 14336.0], [90.2, 14339.0], [90.3, 14340.0], [90.4, 14340.0], [90.5, 14340.0], [90.6, 14340.0], [90.7, 14590.0], [90.8, 14591.0], [90.9, 14591.0], [91.0, 14591.0], [91.1, 14592.0], [91.2, 14824.0], [91.3, 14847.0], [91.4, 14850.0], [91.5, 14898.0], [91.6, 15099.0], [91.7, 15103.0], [91.8, 15103.0], [91.9, 15359.0], [92.0, 16545.0], [92.1, 17152.0], [92.2, 17293.0], [92.3, 17443.0], [92.4, 17663.0], [92.5, 17871.0], [92.6, 18428.0], [92.7, 18430.0], [92.8, 19195.0], [92.9, 19195.0], [93.0, 19735.0], [93.1, 19774.0], [93.2, 22271.0], [93.3, 22272.0], [93.4, 26367.0], [93.5, 26368.0], [93.6, 26368.0], [93.7, 26368.0], [93.8, 26368.0], [93.9, 27391.0], [94.0, 27648.0], [94.1, 27648.0], [94.2, 28667.0], [94.3, 28671.0], [94.4, 28671.0], [94.5, 28672.0], [94.6, 29440.0], [94.7, 30720.0], [94.8, 35584.0], [94.9, 37696.0], [95.0, 38912.0], [95.1, 44287.0], [95.2, 52224.0], [95.3, 53244.0], [95.4, 54268.0], [95.5, 54784.0], [95.6, 56597.0], [95.7, 60416.0], [95.8, 86275.0], [95.9, 86275.0], [96.0, 91392.0], [96.1, 98816.0], [96.2, 102911.0], [96.3, 105472.0], [96.4, 105475.0], [96.5, 105724.0], [96.6, 105727.0], [96.7, 105727.0], [96.8, 105731.0], [96.9, 105983.0], [97.0, 105987.0], [97.1, 106242.0], [97.2, 106496.0], [97.3, 106496.0], [97.4, 106497.0], [97.5, 106752.0], [97.6, 107259.0], [97.7, 107262.0], [97.8, 107268.0], [97.9, 111616.0], [98.0, 116735.0], [98.1, 119039.0], [98.2, 119803.0], [98.3, 122368.0], [98.4, 125179.0], [98.5, 136699.0], [98.6, 147456.0], [98.7, 147967.0], [98.8, 155905.0], [98.9, 177662.0], [99.0, 210174.0], [99.1, 210176.0], [99.2, 210431.0], [99.3, 210431.0], [99.4, 210432.0], [99.5, 210943.0], [99.6, 210947.0], [99.7, 211452.0], [99.8, 230143.0], [99.9, 230143.0], [100.0, 230143.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 4.0], [2.9, 533.0], [3.0, 590.0], [3.1, 635.0], [3.2, 672.0], [3.3, 702.0], [3.4, 724.0], [3.5, 752.0], [3.6, 776.0], [3.7, 811.0], [3.8, 851.0], [3.9, 923.0], [4.0, 953.0], [4.1, 980.0], [4.2, 1018.0], [4.3, 1067.0], [4.4, 1106.0], [4.5, 1127.0], [4.6, 1174.0], [4.7, 1193.0], [4.8, 1223.0], [4.9, 1263.0], [5.0, 1292.0], [5.1, 1317.0], [5.2, 1342.0], [5.3, 1365.0], [5.4, 1389.0], [5.5, 1406.0], [5.6, 1441.0], [5.7, 1480.0], [5.8, 1516.0], [5.9, 1547.0], [6.0, 1579.0], [6.1, 1617.0], [6.2, 1651.0], [6.3, 1685.0], [6.4, 1729.0], [6.5, 1767.0], [6.6, 1786.0], [6.7, 1836.0], [6.8, 1878.0], [6.9, 1921.0], [7.0, 1958.0], [7.1, 2013.0], [7.2, 2037.0], [7.3, 2094.0], [7.4, 2131.0], [7.5, 2153.0], [7.6, 2186.0], [7.7, 2255.0], [7.8, 2309.0], [7.9, 2359.0], [8.0, 2378.0], [8.1, 2420.0], [8.2, 2455.0], [8.3, 2484.0], [8.4, 2498.0], [8.5, 2530.0], [8.6, 2567.0], [8.7, 2598.0], [8.8, 2636.0], [8.9, 2675.0], [9.0, 2717.0], [9.1, 2748.0], [9.2, 2764.0], [9.3, 2791.0], [9.4, 2810.0], [9.5, 2832.0], [9.6, 2847.0], [9.7, 2866.0], [9.8, 2892.0], [9.9, 2917.0], [10.0, 2949.0], [10.1, 2987.0], [10.2, 3011.0], [10.3, 3046.0], [10.4, 3080.0], [10.5, 3127.0], [10.6, 3165.0], [10.7, 3196.0], [10.8, 3259.0], [10.9, 3309.0], [11.0, 3340.0], [11.1, 3420.0], [11.2, 3497.0], [11.3, 3573.0], [11.4, 3652.0], [11.5, 3755.0], [11.6, 3912.0], [11.7, 3972.0], [11.8, 4046.0], [11.9, 4136.0], [12.0, 4203.0], [12.1, 4259.0], [12.2, 4299.0], [12.3, 4356.0], [12.4, 4379.0], [12.5, 4433.0], [12.6, 4473.0], [12.7, 4524.0], [12.8, 4554.0], [12.9, 4584.0], [13.0, 4610.0], [13.1, 4646.0], [13.2, 4713.0], [13.3, 4752.0], [13.4, 4809.0], [13.5, 4882.0], [13.6, 4969.0], [13.7, 5037.0], [13.8, 5107.0], [13.9, 5201.0], [14.0, 5266.0], [14.1, 5391.0], [14.2, 5452.0], [14.3, 5516.0], [14.4, 5549.0], [14.5, 5619.0], [14.6, 5667.0], [14.7, 5763.0], [14.8, 5832.0], [14.9, 5942.0], [15.0, 6027.0], [15.1, 6134.0], [15.2, 6230.0], [15.3, 6284.0], [15.4, 6312.0], [15.5, 6357.0], [15.6, 6434.0], [15.7, 6479.0], [15.8, 6523.0], [15.9, 6592.0], [16.0, 6625.0], [16.1, 6654.0], [16.2, 6692.0], [16.3, 6746.0], [16.4, 6792.0], [16.5, 6851.0], [16.6, 6900.0], [16.7, 6966.0], [16.8, 7015.0], [16.9, 7081.0], [17.0, 7107.0], [17.1, 7151.0], [17.2, 7164.0], [17.3, 7164.0], [17.4, 7167.0], [17.5, 7167.0], [17.6, 7168.0], [17.7, 7168.0], [17.8, 7168.0], [17.9, 7168.0], [18.0, 7168.0], [18.1, 7170.0], [18.2, 7171.0], [18.3, 7176.0], [18.4, 7249.0], [18.5, 7317.0], [18.6, 7421.0], [18.7, 7423.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7424.0], [19.2, 7456.0], [19.3, 7553.0], [19.4, 7675.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7683.0], [20.0, 7684.0], [20.1, 7701.0], [20.2, 7846.0], [20.3, 7897.0], [20.4, 7932.0], [20.5, 7935.0], [20.6, 7936.0], [20.7, 7940.0], [20.8, 7964.0], [20.9, 8037.0], [21.0, 8118.0], [21.1, 8170.0], [21.2, 8191.0], [21.3, 8191.0], [21.4, 8192.0], [21.5, 8192.0], [21.6, 8196.0], [21.7, 8269.0], [21.8, 8322.0], [21.9, 8374.0], [22.0, 8434.0], [22.1, 8444.0], [22.2, 8447.0], [22.3, 8448.0], [22.4, 8477.0], [22.5, 8500.0], [22.6, 8542.0], [22.7, 8557.0], [22.8, 8584.0], [22.9, 8598.0], [23.0, 8629.0], [23.1, 8651.0], [23.2, 8666.0], [23.3, 8678.0], [23.4, 8691.0], [23.5, 8702.0], [23.6, 8702.0], [23.7, 8703.0], [23.8, 8703.0], [23.9, 8704.0], [24.0, 8704.0], [24.1, 8704.0], [24.2, 8704.0], [24.3, 8705.0], [24.4, 8711.0], [24.5, 8734.0], [24.6, 8747.0], [24.7, 8764.0], [24.8, 8776.0], [24.9, 8790.0], [25.0, 8808.0], [25.1, 8817.0], [25.2, 8835.0], [25.3, 8846.0], [25.4, 8862.0], [25.5, 8871.0], [25.6, 8885.0], [25.7, 8896.0], [25.8, 8901.0], [25.9, 8914.0], [26.0, 8921.0], [26.1, 8934.0], [26.2, 8943.0], [26.3, 8955.0], [26.4, 8958.0], [26.5, 8960.0], [26.6, 8960.0], [26.7, 8963.0], [26.8, 8971.0], [26.9, 8977.0], [27.0, 8985.0], [27.1, 9004.0], [27.2, 9012.0], [27.3, 9022.0], [27.4, 9029.0], [27.5, 9033.0], [27.6, 9040.0], [27.7, 9047.0], [27.8, 9056.0], [27.9, 9066.0], [28.0, 9071.0], [28.1, 9079.0], [28.2, 9083.0], [28.3, 9087.0], [28.4, 9095.0], [28.5, 9109.0], [28.6, 9114.0], [28.7, 9120.0], [28.8, 9123.0], [28.9, 9128.0], [29.0, 9132.0], [29.1, 9138.0], [29.2, 9146.0], [29.3, 9156.0], [29.4, 9162.0], [29.5, 9169.0], [29.6, 9175.0], [29.7, 9187.0], [29.8, 9195.0], [29.9, 9201.0], [30.0, 9207.0], [30.1, 9211.0], [30.2, 9212.0], [30.3, 9215.0], [30.4, 9215.0], [30.5, 9215.0], [30.6, 9215.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9217.0], [31.1, 9220.0], [31.2, 9225.0], [31.3, 9231.0], [31.4, 9238.0], [31.5, 9242.0], [31.6, 9245.0], [31.7, 9249.0], [31.8, 9253.0], [31.9, 9260.0], [32.0, 9265.0], [32.1, 9268.0], [32.2, 9275.0], [32.3, 9280.0], [32.4, 9283.0], [32.5, 9288.0], [32.6, 9296.0], [32.7, 9300.0], [32.8, 9305.0], [32.9, 9310.0], [33.0, 9314.0], [33.1, 9316.0], [33.2, 9323.0], [33.3, 9328.0], [33.4, 9334.0], [33.5, 9338.0], [33.6, 9342.0], [33.7, 9346.0], [33.8, 9354.0], [33.9, 9359.0], [34.0, 9364.0], [34.1, 9367.0], [34.2, 9371.0], [34.3, 9379.0], [34.4, 9383.0], [34.5, 9388.0], [34.6, 9393.0], [34.7, 9398.0], [34.8, 9404.0], [34.9, 9411.0], [35.0, 9417.0], [35.1, 9420.0], [35.2, 9423.0], [35.3, 9428.0], [35.4, 9436.0], [35.5, 9439.0], [35.6, 9447.0], [35.7, 9451.0], [35.8, 9455.0], [35.9, 9459.0], [36.0, 9464.0], [36.1, 9468.0], [36.2, 9472.0], [36.3, 9473.0], [36.4, 9476.0], [36.5, 9480.0], [36.6, 9487.0], [36.7, 9492.0], [36.8, 9496.0], [36.9, 9500.0], [37.0, 9504.0], [37.1, 9507.0], [37.2, 9512.0], [37.3, 9522.0], [37.4, 9526.0], [37.5, 9531.0], [37.6, 9535.0], [37.7, 9539.0], [37.8, 9542.0], [37.9, 9550.0], [38.0, 9553.0], [38.1, 9555.0], [38.2, 9559.0], [38.3, 9564.0], [38.4, 9571.0], [38.5, 9576.0], [38.6, 9583.0], [38.7, 9589.0], [38.8, 9593.0], [38.9, 9596.0], [39.0, 9601.0], [39.1, 9606.0], [39.2, 9611.0], [39.3, 9616.0], [39.4, 9620.0], [39.5, 9626.0], [39.6, 9630.0], [39.7, 9636.0], [39.8, 9642.0], [39.9, 9646.0], [40.0, 9650.0], [40.1, 9654.0], [40.2, 9657.0], [40.3, 9662.0], [40.4, 9668.0], [40.5, 9671.0], [40.6, 9674.0], [40.7, 9678.0], [40.8, 9681.0], [40.9, 9687.0], [41.0, 9693.0], [41.1, 9699.0], [41.2, 9704.0], [41.3, 9711.0], [41.4, 9715.0], [41.5, 9720.0], [41.6, 9724.0], [41.7, 9726.0], [41.8, 9727.0], [41.9, 9728.0], [42.0, 9730.0], [42.1, 9733.0], [42.2, 9736.0], [42.3, 9740.0], [42.4, 9747.0], [42.5, 9751.0], [42.6, 9755.0], [42.7, 9760.0], [42.8, 9764.0], [42.9, 9770.0], [43.0, 9773.0], [43.1, 9778.0], [43.2, 9786.0], [43.3, 9791.0], [43.4, 9795.0], [43.5, 9800.0], [43.6, 9803.0], [43.7, 9806.0], [43.8, 9813.0], [43.9, 9817.0], [44.0, 9822.0], [44.1, 9830.0], [44.2, 9835.0], [44.3, 9837.0], [44.4, 9845.0], [44.5, 9853.0], [44.6, 9857.0], [44.7, 9862.0], [44.8, 9866.0], [44.9, 9870.0], [45.0, 9873.0], [45.1, 9876.0], [45.2, 9881.0], [45.3, 9886.0], [45.4, 9891.0], [45.5, 9894.0], [45.6, 9899.0], [45.7, 9906.0], [45.8, 9911.0], [45.9, 9914.0], [46.0, 9918.0], [46.1, 9921.0], [46.2, 9927.0], [46.3, 9933.0], [46.4, 9937.0], [46.5, 9941.0], [46.6, 9946.0], [46.7, 9953.0], [46.8, 9959.0], [46.9, 9964.0], [47.0, 9968.0], [47.1, 9973.0], [47.2, 9977.0], [47.3, 9979.0], [47.4, 9982.0], [47.5, 9983.0], [47.6, 9984.0], [47.7, 9988.0], [47.8, 9994.0], [47.9, 9998.0], [48.0, 10003.0], [48.1, 10006.0], [48.2, 10010.0], [48.3, 10015.0], [48.4, 10020.0], [48.5, 10026.0], [48.6, 10032.0], [48.7, 10041.0], [48.8, 10045.0], [48.9, 10048.0], [49.0, 10053.0], [49.1, 10057.0], [49.2, 10060.0], [49.3, 10064.0], [49.4, 10070.0], [49.5, 10073.0], [49.6, 10078.0], [49.7, 10086.0], [49.8, 10091.0], [49.9, 10098.0], [50.0, 10101.0], [50.1, 10108.0], [50.2, 10111.0], [50.3, 10116.0], [50.4, 10123.0], [50.5, 10128.0], [50.6, 10131.0], [50.7, 10135.0], [50.8, 10139.0], [50.9, 10143.0], [51.0, 10147.0], [51.1, 10152.0], [51.2, 10158.0], [51.3, 10163.0], [51.4, 10168.0], [51.5, 10172.0], [51.6, 10178.0], [51.7, 10183.0], [51.8, 10188.0], [51.9, 10193.0], [52.0, 10197.0], [52.1, 10201.0], [52.2, 10204.0], [52.3, 10209.0], [52.4, 10212.0], [52.5, 10216.0], [52.6, 10221.0], [52.7, 10225.0], [52.8, 10228.0], [52.9, 10231.0], [53.0, 10235.0], [53.1, 10236.0], [53.2, 10239.0], [53.3, 10240.0], [53.4, 10242.0], [53.5, 10244.0], [53.6, 10246.0], [53.7, 10251.0], [53.8, 10256.0], [53.9, 10260.0], [54.0, 10266.0], [54.1, 10271.0], [54.2, 10276.0], [54.3, 10279.0], [54.4, 10286.0], [54.5, 10293.0], [54.6, 10296.0], [54.7, 10300.0], [54.8, 10305.0], [54.9, 10310.0], [55.0, 10313.0], [55.1, 10315.0], [55.2, 10321.0], [55.3, 10327.0], [55.4, 10328.0], [55.5, 10332.0], [55.6, 10336.0], [55.7, 10340.0], [55.8, 10344.0], [55.9, 10347.0], [56.0, 10354.0], [56.1, 10358.0], [56.2, 10363.0], [56.3, 10368.0], [56.4, 10373.0], [56.5, 10376.0], [56.6, 10379.0], [56.7, 10382.0], [56.8, 10385.0], [56.9, 10390.0], [57.0, 10393.0], [57.1, 10397.0], [57.2, 10404.0], [57.3, 10408.0], [57.4, 10414.0], [57.5, 10418.0], [57.6, 10423.0], [57.7, 10429.0], [57.8, 10432.0], [57.9, 10437.0], [58.0, 10441.0], [58.1, 10444.0], [58.2, 10449.0], [58.3, 10452.0], [58.4, 10455.0], [58.5, 10458.0], [58.6, 10466.0], [58.7, 10470.0], [58.8, 10474.0], [58.9, 10476.0], [59.0, 10479.0], [59.1, 10483.0], [59.2, 10487.0], [59.3, 10490.0], [59.4, 10493.0], [59.5, 10496.0], [59.6, 10500.0], [59.7, 10503.0], [59.8, 10509.0], [59.9, 10513.0], [60.0, 10518.0], [60.1, 10524.0], [60.2, 10529.0], [60.3, 10530.0], [60.4, 10535.0], [60.5, 10539.0], [60.6, 10543.0], [60.7, 10550.0], [60.8, 10554.0], [60.9, 10560.0], [61.0, 10563.0], [61.1, 10566.0], [61.2, 10570.0], [61.3, 10572.0], [61.4, 10576.0], [61.5, 10580.0], [61.6, 10583.0], [61.7, 10588.0], [61.8, 10591.0], [61.9, 10596.0], [62.0, 10603.0], [62.1, 10607.0], [62.2, 10610.0], [62.3, 10612.0], [62.4, 10617.0], [62.5, 10620.0], [62.6, 10624.0], [62.7, 10629.0], [62.8, 10633.0], [62.9, 10638.0], [63.0, 10641.0], [63.1, 10647.0], [63.2, 10650.0], [63.3, 10655.0], [63.4, 10657.0], [63.5, 10662.0], [63.6, 10666.0], [63.7, 10672.0], [63.8, 10675.0], [63.9, 10680.0], [64.0, 10683.0], [64.1, 10688.0], [64.2, 10691.0], [64.3, 10696.0], [64.4, 10700.0], [64.5, 10704.0], [64.6, 10708.0], [64.7, 10712.0], [64.8, 10714.0], [64.9, 10718.0], [65.0, 10723.0], [65.1, 10727.0], [65.2, 10733.0], [65.3, 10736.0], [65.4, 10740.0], [65.5, 10743.0], [65.6, 10748.0], [65.7, 10750.0], [65.8, 10751.0], [65.9, 10752.0], [66.0, 10752.0], [66.1, 10755.0], [66.2, 10757.0], [66.3, 10760.0], [66.4, 10762.0], [66.5, 10765.0], [66.6, 10769.0], [66.7, 10776.0], [66.8, 10781.0], [66.9, 10785.0], [67.0, 10789.0], [67.1, 10792.0], [67.2, 10798.0], [67.3, 10802.0], [67.4, 10809.0], [67.5, 10814.0], [67.6, 10818.0], [67.7, 10824.0], [67.8, 10827.0], [67.9, 10833.0], [68.0, 10838.0], [68.1, 10842.0], [68.2, 10851.0], [68.3, 10857.0], [68.4, 10860.0], [68.5, 10864.0], [68.6, 10871.0], [68.7, 10876.0], [68.8, 10880.0], [68.9, 10888.0], [69.0, 10895.0], [69.1, 10900.0], [69.2, 10909.0], [69.3, 10914.0], [69.4, 10921.0], [69.5, 10927.0], [69.6, 10933.0], [69.7, 10944.0], [69.8, 10952.0], [69.9, 10963.0], [70.0, 10969.0], [70.1, 10971.0], [70.2, 10977.0], [70.3, 10986.0], [70.4, 10992.0], [70.5, 11000.0], [70.6, 11003.0], [70.7, 11007.0], [70.8, 11008.0], [70.9, 11017.0], [71.0, 11027.0], [71.1, 11032.0], [71.2, 11039.0], [71.3, 11043.0], [71.4, 11049.0], [71.5, 11056.0], [71.6, 11069.0], [71.7, 11081.0], [71.8, 11094.0], [71.9, 11100.0], [72.0, 11106.0], [72.1, 11116.0], [72.2, 11128.0], [72.3, 11135.0], [72.4, 11141.0], [72.5, 11155.0], [72.6, 11164.0], [72.7, 11171.0], [72.8, 11179.0], [72.9, 11188.0], [73.0, 11195.0], [73.1, 11201.0], [73.2, 11209.0], [73.3, 11220.0], [73.4, 11228.0], [73.5, 11241.0], [73.6, 11253.0], [73.7, 11263.0], [73.8, 11264.0], [73.9, 11271.0], [74.0, 11285.0], [74.1, 11293.0], [74.2, 11300.0], [74.3, 11309.0], [74.4, 11316.0], [74.5, 11324.0], [74.6, 11334.0], [74.7, 11352.0], [74.8, 11365.0], [74.9, 11383.0], [75.0, 11396.0], [75.1, 11403.0], [75.2, 11414.0], [75.3, 11428.0], [75.4, 11440.0], [75.5, 11453.0], [75.6, 11458.0], [75.7, 11469.0], [75.8, 11482.0], [75.9, 11490.0], [76.0, 11498.0], [76.1, 11507.0], [76.2, 11515.0], [76.3, 11519.0], [76.4, 11526.0], [76.5, 11539.0], [76.6, 11549.0], [76.7, 11563.0], [76.8, 11575.0], [76.9, 11583.0], [77.0, 11595.0], [77.1, 11601.0], [77.2, 11607.0], [77.3, 11617.0], [77.4, 11629.0], [77.5, 11642.0], [77.6, 11657.0], [77.7, 11668.0], [77.8, 11681.0], [77.9, 11687.0], [78.0, 11695.0], [78.1, 11712.0], [78.2, 11726.0], [78.3, 11738.0], [78.4, 11746.0], [78.5, 11754.0], [78.6, 11771.0], [78.7, 11775.0], [78.8, 11775.0], [78.9, 11776.0], [79.0, 11776.0], [79.1, 11781.0], [79.2, 11797.0], [79.3, 11810.0], [79.4, 11820.0], [79.5, 11831.0], [79.6, 11848.0], [79.7, 11862.0], [79.8, 11879.0], [79.9, 11907.0], [80.0, 11923.0], [80.1, 11939.0], [80.2, 11950.0], [80.3, 11976.0], [80.4, 12002.0], [80.5, 12028.0], [80.6, 12038.0], [80.7, 12055.0], [80.8, 12070.0], [80.9, 12085.0], [81.0, 12100.0], [81.1, 12130.0], [81.2, 12154.0], [81.3, 12183.0], [81.4, 12205.0], [81.5, 12228.0], [81.6, 12247.0], [81.7, 12266.0], [81.8, 12284.0], [81.9, 12287.0], [82.0, 12288.0], [82.1, 12289.0], [82.2, 12292.0], [82.3, 12308.0], [82.4, 12327.0], [82.5, 12352.0], [82.6, 12379.0], [82.7, 12413.0], [82.8, 12436.0], [82.9, 12478.0], [83.0, 12494.0], [83.1, 12515.0], [83.2, 12528.0], [83.3, 12544.0], [83.4, 12597.0], [83.5, 12623.0], [83.6, 12649.0], [83.7, 12675.0], [83.8, 12721.0], [83.9, 12783.0], [84.0, 12800.0], [84.1, 12823.0], [84.2, 12854.0], [84.3, 12895.0], [84.4, 12940.0], [84.5, 13001.0], [84.6, 13034.0], [84.7, 13067.0], [84.8, 13122.0], [84.9, 13166.0], [85.0, 13187.0], [85.1, 13202.0], [85.2, 13234.0], [85.3, 13253.0], [85.4, 13284.0], [85.5, 13306.0], [85.6, 13307.0], [85.7, 13307.0], [85.8, 13308.0], [85.9, 13308.0], [86.0, 13308.0], [86.1, 13308.0], [86.2, 13309.0], [86.3, 13309.0], [86.4, 13310.0], [86.5, 13310.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13311.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13312.0], [90.5, 13312.0], [90.6, 13312.0], [90.7, 13313.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13313.0], [91.1, 13315.0], [91.2, 13315.0], [91.3, 13316.0], [91.4, 13316.0], [91.5, 13316.0], [91.6, 13316.0], [91.7, 13316.0], [91.8, 13317.0], [91.9, 13337.0], [92.0, 13359.0], [92.1, 13369.0], [92.2, 13391.0], [92.3, 13413.0], [92.4, 13453.0], [92.5, 13504.0], [92.6, 13567.0], [92.7, 13570.0], [92.8, 13619.0], [92.9, 13717.0], [93.0, 13820.0], [93.1, 13821.0], [93.2, 13823.0], [93.3, 13823.0], [93.4, 13823.0], [93.5, 13824.0], [93.6, 13824.0], [93.7, 13824.0], [93.8, 13824.0], [93.9, 13825.0], [94.0, 13843.0], [94.1, 13913.0], [94.2, 14004.0], [94.3, 14076.0], [94.4, 14080.0], [94.5, 14120.0], [94.6, 14254.0], [94.7, 14331.0], [94.8, 14334.0], [94.9, 14334.0], [95.0, 14335.0], [95.1, 14335.0], [95.2, 14335.0], [95.3, 14336.0], [95.4, 14336.0], [95.5, 14337.0], [95.6, 14339.0], [95.7, 14387.0], [95.8, 14458.0], [95.9, 14591.0], [96.0, 14592.0], [96.1, 14655.0], [96.2, 14915.0], [96.3, 15073.0], [96.4, 15142.0], [96.5, 15355.0], [96.6, 15466.0], [96.7, 15607.0], [96.8, 15746.0], [96.9, 16049.0], [97.0, 16383.0], [97.1, 16752.0], [97.2, 17148.0], [97.3, 17919.0], [97.4, 18432.0], [97.5, 19662.0], [97.6, 23264.0], [97.7, 26370.0], [97.8, 27648.0], [97.9, 28676.0], [98.0, 33664.0], [98.1, 38898.0], [98.2, 41586.0], [98.3, 49152.0], [98.4, 54082.0], [98.5, 70144.0], [98.6, 91392.0], [98.7, 105475.0], [98.8, 105728.0], [98.9, 105983.0], [99.0, 106240.0], [99.1, 106496.0], [99.2, 106750.0], [99.3, 107259.0], [99.4, 110595.0], [99.5, 112625.0], [99.6, 118783.0], [99.7, 136447.0], [99.8, 188927.0], [99.9, 210433.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 2.0], [6.3, 2.0], [6.4, 4.0], [6.5, 18.0], [6.6, 22.0], [6.7, 24.0], [6.8, 26.0], [6.9, 29.0], [7.0, 32.0], [7.1, 33.0], [7.2, 42.0], [7.3, 78.0], [7.4, 105.0], [7.5, 319.0], [7.6, 440.0], [7.7, 595.0], [7.8, 646.0], [7.9, 670.0], [8.0, 739.0], [8.1, 772.0], [8.2, 798.0], [8.3, 950.0], [8.4, 1300.0], [8.5, 1308.0], [8.6, 1415.0], [8.7, 1465.0], [8.8, 1747.0], [8.9, 1755.0], [9.0, 1771.0], [9.1, 1781.0], [9.2, 1966.0], [9.3, 2042.0], [9.4, 2125.0], [9.5, 2175.0], [9.6, 2203.0], [9.7, 2325.0], [9.8, 2425.0], [9.9, 2569.0], [10.0, 2772.0], [10.1, 3424.0], [10.2, 3499.0], [10.3, 3549.0], [10.4, 3574.0], [10.5, 3683.0], [10.6, 3872.0], [10.7, 4014.0], [10.8, 4038.0], [10.9, 4261.0], [11.0, 4561.0], [11.1, 4845.0], [11.2, 4883.0], [11.3, 5016.0], [11.4, 5090.0], [11.5, 5260.0], [11.6, 5574.0], [11.7, 5723.0], [11.8, 5865.0], [11.9, 5871.0], [12.0, 5943.0], [12.1, 5998.0], [12.2, 6097.0], [12.3, 6158.0], [12.4, 6283.0], [12.5, 7047.0], [12.6, 7061.0], [12.7, 7066.0], [12.8, 7090.0], [12.9, 7116.0], [13.0, 7154.0], [13.1, 7163.0], [13.2, 7163.0], [13.3, 7164.0], [13.4, 7164.0], [13.5, 7164.0], [13.6, 7166.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7168.0], [16.6, 7168.0], [16.7, 7169.0], [16.8, 7171.0], [16.9, 7171.0], [17.0, 7172.0], [17.1, 7172.0], [17.2, 7205.0], [17.3, 7298.0], [17.4, 7300.0], [17.5, 7332.0], [17.6, 7334.0], [17.7, 7374.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7427.0], [19.0, 7429.0], [19.1, 7442.0], [19.2, 7458.0], [19.3, 7459.0], [19.4, 7473.0], [19.5, 7484.0], [19.6, 7521.0], [19.7, 7579.0], [19.8, 7621.0], [19.9, 7650.0], [20.0, 7676.0], [20.1, 7676.0], [20.2, 7678.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7679.0], [20.6, 7679.0], [20.7, 7679.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7682.0], [21.4, 7683.0], [21.5, 7684.0], [21.6, 7684.0], [21.7, 7729.0], [21.8, 7781.0], [21.9, 7788.0], [22.0, 7804.0], [22.1, 7820.0], [22.2, 7873.0], [22.3, 7932.0], [22.4, 7933.0], [22.5, 7934.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7935.0], [22.9, 7935.0], [23.0, 7935.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7936.0], [23.4, 7936.0], [23.5, 7936.0], [23.6, 7940.0], [23.7, 7940.0], [23.8, 7940.0], [23.9, 7944.0], [24.0, 7973.0], [24.1, 8013.0], [24.2, 8054.0], [24.3, 8076.0], [24.4, 8085.0], [24.5, 8118.0], [24.6, 8141.0], [24.7, 8175.0], [24.8, 8190.0], [24.9, 8190.0], [25.0, 8191.0], [25.1, 8191.0], [25.2, 8191.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8192.0], [25.8, 8192.0], [25.9, 8206.0], [26.0, 8233.0], [26.1, 8235.0], [26.2, 8244.0], [26.3, 8264.0], [26.4, 8387.0], [26.5, 8404.0], [26.6, 8442.0], [26.7, 8443.0], [26.8, 8443.0], [26.9, 8444.0], [27.0, 8447.0], [27.1, 8447.0], [27.2, 8447.0], [27.3, 8447.0], [27.4, 8448.0], [27.5, 8449.0], [27.6, 8476.0], [27.7, 8486.0], [27.8, 8514.0], [27.9, 8530.0], [28.0, 8570.0], [28.1, 8598.0], [28.2, 8645.0], [28.3, 8651.0], [28.4, 8651.0], [28.5, 8660.0], [28.6, 8675.0], [28.7, 8700.0], [28.8, 8702.0], [28.9, 8703.0], [29.0, 8703.0], [29.1, 8703.0], [29.2, 8703.0], [29.3, 8703.0], [29.4, 8703.0], [29.5, 8703.0], [29.6, 8703.0], [29.7, 8703.0], [29.8, 8704.0], [29.9, 8704.0], [30.0, 8704.0], [30.1, 8704.0], [30.2, 8704.0], [30.3, 8704.0], [30.4, 8704.0], [30.5, 8704.0], [30.6, 8704.0], [30.7, 8704.0], [30.8, 8704.0], [30.9, 8704.0], [31.0, 8704.0], [31.1, 8704.0], [31.2, 8704.0], [31.3, 8704.0], [31.4, 8730.0], [31.5, 8780.0], [31.6, 8797.0], [31.7, 8819.0], [31.8, 8826.0], [31.9, 8861.0], [32.0, 8875.0], [32.1, 8892.0], [32.2, 8920.0], [32.3, 8948.0], [32.4, 8954.0], [32.5, 8957.0], [32.6, 8959.0], [32.7, 8960.0], [32.8, 8960.0], [32.9, 8960.0], [33.0, 8960.0], [33.1, 8976.0], [33.2, 9009.0], [33.3, 9026.0], [33.4, 9032.0], [33.5, 9068.0], [33.6, 9078.0], [33.7, 9120.0], [33.8, 9150.0], [33.9, 9159.0], [34.0, 9162.0], [34.1, 9171.0], [34.2, 9198.0], [34.3, 9210.0], [34.4, 9211.0], [34.5, 9212.0], [34.6, 9212.0], [34.7, 9212.0], [34.8, 9214.0], [34.9, 9215.0], [35.0, 9215.0], [35.1, 9215.0], [35.2, 9215.0], [35.3, 9215.0], [35.4, 9215.0], [35.5, 9215.0], [35.6, 9215.0], [35.7, 9215.0], [35.8, 9215.0], [35.9, 9216.0], [36.0, 9216.0], [36.1, 9216.0], [36.2, 9216.0], [36.3, 9216.0], [36.4, 9216.0], [36.5, 9216.0], [36.6, 9216.0], [36.7, 9216.0], [36.8, 9216.0], [36.9, 9216.0], [37.0, 9216.0], [37.1, 9216.0], [37.2, 9216.0], [37.3, 9216.0], [37.4, 9216.0], [37.5, 9217.0], [37.6, 9220.0], [37.7, 9223.0], [37.8, 9227.0], [37.9, 9252.0], [38.0, 9267.0], [38.1, 9274.0], [38.2, 9280.0], [38.3, 9307.0], [38.4, 9337.0], [38.5, 9377.0], [38.6, 9380.0], [38.7, 9409.0], [38.8, 9413.0], [38.9, 9420.0], [39.0, 9456.0], [39.1, 9460.0], [39.2, 9468.0], [39.3, 9471.0], [39.4, 9472.0], [39.5, 9472.0], [39.6, 9472.0], [39.7, 9473.0], [39.8, 9475.0], [39.9, 9476.0], [40.0, 9476.0], [40.1, 9482.0], [40.2, 9493.0], [40.3, 9514.0], [40.4, 9537.0], [40.5, 9546.0], [40.6, 9553.0], [40.7, 9569.0], [40.8, 9604.0], [40.9, 9624.0], [41.0, 9656.0], [41.1, 9658.0], [41.2, 9686.0], [41.3, 9692.0], [41.4, 9723.0], [41.5, 9724.0], [41.6, 9726.0], [41.7, 9727.0], [41.8, 9727.0], [41.9, 9727.0], [42.0, 9727.0], [42.1, 9727.0], [42.2, 9728.0], [42.3, 9728.0], [42.4, 9728.0], [42.5, 9729.0], [42.6, 9731.0], [42.7, 9734.0], [42.8, 9743.0], [42.9, 9748.0], [43.0, 9772.0], [43.1, 9776.0], [43.2, 9797.0], [43.3, 9811.0], [43.4, 9841.0], [43.5, 9857.0], [43.6, 9868.0], [43.7, 9876.0], [43.8, 9888.0], [43.9, 9903.0], [44.0, 9933.0], [44.1, 9937.0], [44.2, 9957.0], [44.3, 9958.0], [44.4, 9977.0], [44.5, 9983.0], [44.6, 9984.0], [44.7, 9987.0], [44.8, 9987.0], [44.9, 9991.0], [45.0, 9995.0], [45.1, 10015.0], [45.2, 10025.0], [45.3, 10045.0], [45.4, 10051.0], [45.5, 10083.0], [45.6, 10093.0], [45.7, 10155.0], [45.8, 10210.0], [45.9, 10213.0], [46.0, 10236.0], [46.1, 10236.0], [46.2, 10239.0], [46.3, 10240.0], [46.4, 10240.0], [46.5, 10241.0], [46.6, 10243.0], [46.7, 10244.0], [46.8, 10267.0], [46.9, 10302.0], [47.0, 10346.0], [47.1, 10360.0], [47.2, 10429.0], [47.3, 10461.0], [47.4, 10496.0], [47.5, 10504.0], [47.6, 10569.0], [47.7, 10621.0], [47.8, 10639.0], [47.9, 10704.0], [48.0, 10750.0], [48.1, 10751.0], [48.2, 10751.0], [48.3, 10751.0], [48.4, 10752.0], [48.5, 10752.0], [48.6, 10752.0], [48.7, 10752.0], [48.8, 10752.0], [48.9, 10756.0], [49.0, 10858.0], [49.1, 10894.0], [49.2, 10936.0], [49.3, 10971.0], [49.4, 11000.0], [49.5, 11004.0], [49.6, 11007.0], [49.7, 11007.0], [49.8, 11066.0], [49.9, 11090.0], [50.0, 11122.0], [50.1, 11150.0], [50.2, 11258.0], [50.3, 11259.0], [50.4, 11262.0], [50.5, 11263.0], [50.6, 11264.0], [50.7, 11264.0], [50.8, 11266.0], [50.9, 11268.0], [51.0, 11330.0], [51.1, 11396.0], [51.2, 11451.0], [51.3, 11519.0], [51.4, 11520.0], [51.5, 11684.0], [51.6, 11726.0], [51.7, 11774.0], [51.8, 11775.0], [51.9, 11775.0], [52.0, 11775.0], [52.1, 11775.0], [52.2, 11775.0], [52.3, 11776.0], [52.4, 11776.0], [52.5, 11776.0], [52.6, 11776.0], [52.7, 11776.0], [52.8, 11777.0], [52.9, 11780.0], [53.0, 11792.0], [53.1, 11862.0], [53.2, 11881.0], [53.3, 11978.0], [53.4, 12031.0], [53.5, 12032.0], [53.6, 12042.0], [53.7, 12166.0], [53.8, 12258.0], [53.9, 12287.0], [54.0, 12287.0], [54.1, 12287.0], [54.2, 12288.0], [54.3, 12288.0], [54.4, 12291.0], [54.5, 12291.0], [54.6, 12292.0], [54.7, 12292.0], [54.8, 12299.0], [54.9, 12543.0], [55.0, 12545.0], [55.1, 12561.0], [55.2, 12565.0], [55.3, 12718.0], [55.4, 12795.0], [55.5, 12799.0], [55.6, 12800.0], [55.7, 12847.0], [55.8, 12923.0], [55.9, 12944.0], [56.0, 12987.0], [56.1, 13056.0], [56.2, 13056.0], [56.3, 13079.0], [56.4, 13133.0], [56.5, 13165.0], [56.6, 13170.0], [56.7, 13178.0], [56.8, 13208.0], [56.9, 13217.0], [57.0, 13218.0], [57.1, 13219.0], [57.2, 13227.0], [57.3, 13239.0], [57.4, 13243.0], [57.5, 13243.0], [57.6, 13251.0], [57.7, 13260.0], [57.8, 13266.0], [57.9, 13277.0], [58.0, 13291.0], [58.1, 13292.0], [58.2, 13293.0], [58.3, 13306.0], [58.4, 13306.0], [58.5, 13307.0], [58.6, 13307.0], [58.7, 13307.0], [58.8, 13307.0], [58.9, 13307.0], [59.0, 13307.0], [59.1, 13307.0], [59.2, 13307.0], [59.3, 13307.0], [59.4, 13307.0], [59.5, 13308.0], [59.6, 13308.0], [59.7, 13308.0], [59.8, 13308.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13308.0], [60.7, 13308.0], [60.8, 13308.0], [60.9, 13308.0], [61.0, 13309.0], [61.1, 13309.0], [61.2, 13309.0], [61.3, 13309.0], [61.4, 13310.0], [61.5, 13310.0], [61.6, 13310.0], [61.7, 13310.0], [61.8, 13310.0], [61.9, 13310.0], [62.0, 13310.0], [62.1, 13310.0], [62.2, 13310.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13313.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13314.0], [75.0, 13314.0], [75.1, 13315.0], [75.2, 13315.0], [75.3, 13315.0], [75.4, 13315.0], [75.5, 13315.0], [75.6, 13315.0], [75.7, 13315.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13316.0], [76.8, 13316.0], [76.9, 13317.0], [77.0, 13317.0], [77.1, 13332.0], [77.2, 13334.0], [77.3, 13340.0], [77.4, 13347.0], [77.5, 13352.0], [77.6, 13353.0], [77.7, 13358.0], [77.8, 13364.0], [77.9, 13369.0], [78.0, 13381.0], [78.1, 13385.0], [78.2, 13386.0], [78.3, 13393.0], [78.4, 13397.0], [78.5, 13404.0], [78.6, 13409.0], [78.7, 13412.0], [78.8, 13412.0], [78.9, 13452.0], [79.0, 13491.0], [79.1, 13520.0], [79.2, 13564.0], [79.3, 13568.0], [79.4, 13568.0], [79.5, 13571.0], [79.6, 13572.0], [79.7, 13609.0], [79.8, 13698.0], [79.9, 13716.0], [80.0, 13778.0], [80.1, 13786.0], [80.2, 13800.0], [80.3, 13818.0], [80.4, 13820.0], [80.5, 13820.0], [80.6, 13822.0], [80.7, 13822.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13825.0], [83.0, 13825.0], [83.1, 13828.0], [83.2, 13828.0], [83.3, 13835.0], [83.4, 13883.0], [83.5, 13885.0], [83.6, 13905.0], [83.7, 14058.0], [83.8, 14076.0], [83.9, 14076.0], [84.0, 14080.0], [84.1, 14130.0], [84.2, 14170.0], [84.3, 14186.0], [84.4, 14331.0], [84.5, 14331.0], [84.6, 14333.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14335.0], [85.2, 14335.0], [85.3, 14335.0], [85.4, 14335.0], [85.5, 14335.0], [85.6, 14335.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14338.0], [86.5, 14339.0], [86.6, 14339.0], [86.7, 14339.0], [86.8, 14339.0], [86.9, 14340.0], [87.0, 14533.0], [87.1, 14591.0], [87.2, 14591.0], [87.3, 14591.0], [87.4, 14592.0], [87.5, 14595.0], [87.6, 14628.0], [87.7, 14847.0], [87.8, 15071.0], [87.9, 15078.0], [88.0, 15103.0], [88.1, 15253.0], [88.2, 15316.0], [88.3, 15360.0], [88.4, 16047.0], [88.5, 16379.0], [88.6, 16474.0], [88.7, 16792.0], [88.8, 17289.0], [88.9, 17311.0], [89.0, 17481.0], [89.1, 17660.0], [89.2, 17837.0], [89.3, 17916.0], [89.4, 17919.0], [89.5, 18109.0], [89.6, 18633.0], [89.7, 18687.0], [89.8, 19395.0], [89.9, 22443.0], [90.0, 25952.0], [90.1, 26269.0], [90.2, 26368.0], [90.3, 26368.0], [90.4, 26369.0], [90.5, 28672.0], [90.6, 28672.0], [90.7, 28676.0], [90.8, 33269.0], [90.9, 36857.0], [91.0, 36897.0], [91.1, 36982.0], [91.2, 38877.0], [91.3, 39948.0], [91.4, 40382.0], [91.5, 47281.0], [91.6, 48131.0], [91.7, 52328.0], [91.8, 53330.0], [91.9, 55002.0], [92.0, 56606.0], [92.1, 61469.0], [92.2, 63943.0], [92.3, 72327.0], [92.4, 86275.0], [92.5, 86276.0], [92.6, 91391.0], [92.7, 94405.0], [92.8, 102911.0], [92.9, 102927.0], [93.0, 105406.0], [93.1, 105475.0], [93.2, 105549.0], [93.3, 105661.0], [93.4, 105724.0], [93.5, 105728.0], [93.6, 105729.0], [93.7, 105764.0], [93.8, 105904.0], [93.9, 105972.0], [94.0, 105982.0], [94.1, 105985.0], [94.2, 106129.0], [94.3, 106238.0], [94.4, 106239.0], [94.5, 106289.0], [94.6, 106380.0], [94.7, 106496.0], [94.8, 106496.0], [94.9, 106497.0], [95.0, 106498.0], [95.1, 106572.0], [95.2, 106628.0], [95.3, 106751.0], [95.4, 106757.0], [95.5, 106806.0], [95.6, 106855.0], [95.7, 106972.0], [95.8, 107095.0], [95.9, 107096.0], [96.0, 107172.0], [96.1, 107240.0], [96.2, 107259.0], [96.3, 107260.0], [96.4, 107263.0], [96.5, 107291.0], [96.6, 107951.0], [96.7, 108143.0], [96.8, 110173.0], [96.9, 111611.0], [97.0, 111612.0], [97.1, 112107.0], [97.2, 112698.0], [97.3, 113859.0], [97.4, 118449.0], [97.5, 119040.0], [97.6, 119040.0], [97.7, 119295.0], [97.8, 119806.0], [97.9, 121344.0], [98.0, 122244.0], [98.1, 124159.0], [98.2, 124159.0], [98.3, 125178.0], [98.4, 126718.0], [98.5, 147453.0], [98.6, 147967.0], [98.7, 155905.0], [98.8, 155905.0], [98.9, 177662.0], [99.0, 177664.0], [99.1, 188927.0], [99.2, 209967.0], [99.3, 210432.0], [99.4, 210432.0], [99.5, 210432.0], [99.6, 210432.0], [99.7, 210432.0], [99.8, 210939.0], [99.9, 230144.0], [100.0, 230144.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 719.0, "series": [{"data": [[0.0, 131.0], [144800.0, 1.0], [210400.0, 5.0], [105900.0, 3.0], [106700.0, 3.0], [113100.0, 1.0], [125100.0, 1.0], [38900.0, 3.0], [54500.0, 1.0], [56500.0, 1.0], [108200.0, 1.0], [122600.0, 1.0], [500.0, 3.0], [600.0, 5.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 3.0], [1100.0, 2.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 3.0], [1700.0, 1.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 2.0], [2800.0, 4.0], [2700.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [210100.0, 3.0], [211700.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3900.0, 1.0], [4000.0, 3.0], [4300.0, 4.0], [4200.0, 1.0], [4500.0, 4.0], [4400.0, 1.0], [4800.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 1.0], [5400.0, 3.0], [5600.0, 2.0], [5700.0, 1.0], [5800.0, 1.0], [91300.0, 2.0], [5900.0, 1.0], [6000.0, 1.0], [6100.0, 2.0], [6200.0, 2.0], [6300.0, 2.0], [6500.0, 2.0], [6600.0, 2.0], [105700.0, 7.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 82.0], [7300.0, 2.0], [7400.0, 39.0], [7200.0, 2.0], [7600.0, 29.0], [120900.0, 1.0], [7800.0, 3.0], [7900.0, 27.0], [7700.0, 1.0], [8000.0, 3.0], [8100.0, 26.0], [8400.0, 17.0], [8200.0, 1.0], [8300.0, 1.0], [8700.0, 57.0], [8500.0, 2.0], [8600.0, 10.0], [9200.0, 68.0], [8900.0, 25.0], [8800.0, 11.0], [9000.0, 7.0], [9100.0, 11.0], [9400.0, 13.0], [9600.0, 9.0], [9700.0, 39.0], [9300.0, 8.0], [9500.0, 6.0], [10100.0, 22.0], [9900.0, 20.0], [9800.0, 11.0], [10000.0, 11.0], [10200.0, 26.0], [10300.0, 12.0], [10400.0, 13.0], [10500.0, 12.0], [10600.0, 9.0], [10700.0, 11.0], [11200.0, 15.0], [11100.0, 11.0], [10900.0, 8.0], [11000.0, 10.0], [10800.0, 3.0], [11500.0, 9.0], [11700.0, 45.0], [11300.0, 3.0], [11400.0, 4.0], [11600.0, 5.0], [12000.0, 7.0], [11900.0, 3.0], [11800.0, 5.0], [12200.0, 30.0], [12100.0, 6.0], [12500.0, 10.0], [12600.0, 6.0], [12300.0, 4.0], [12400.0, 4.0], [12700.0, 6.0], [13000.0, 5.0], [12900.0, 1.0], [13300.0, 361.0], [13100.0, 3.0], [12800.0, 2.0], [13200.0, 2.0], [13500.0, 10.0], [13800.0, 68.0], [13600.0, 1.0], [13400.0, 1.0], [14100.0, 2.0], [14000.0, 7.0], [14300.0, 53.0], [14500.0, 10.0], [14800.0, 6.0], [15100.0, 4.0], [15300.0, 2.0], [15000.0, 1.0], [14900.0, 1.0], [17200.0, 2.0], [17400.0, 1.0], [17600.0, 1.0], [18400.0, 3.0], [17800.0, 1.0], [18600.0, 1.0], [22200.0, 2.0], [27600.0, 3.0], [28600.0, 7.0], [29400.0, 1.0], [147900.0, 3.0], [37600.0, 1.0], [155900.0, 1.0], [53200.0, 1.0], [55200.0, 1.0], [60400.0, 1.0], [106400.0, 5.0], [107200.0, 4.0], [119200.0, 1.0], [177600.0, 2.0], [116700.0, 1.0], [122300.0, 1.0], [147400.0, 1.0], [211400.0, 1.0], [35500.0, 1.0], [49100.0, 1.0], [54700.0, 1.0], [53500.0, 1.0], [86200.0, 3.0], [106200.0, 2.0], [105400.0, 4.0], [119000.0, 1.0], [119800.0, 1.0], [210900.0, 4.0], [230100.0, 4.0], [102900.0, 2.0], [136600.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [17300.0, 1.0], [17500.0, 1.0], [17900.0, 1.0], [19100.0, 2.0], [19500.0, 1.0], [19700.0, 3.0], [20900.0, 1.0], [26300.0, 9.0], [27300.0, 3.0], [30700.0, 2.0], [32500.0, 1.0], [44200.0, 1.0], [52200.0, 1.0], [54200.0, 1.0], [64200.0, 1.0], [98800.0, 1.0], [111600.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 301.0], [210400.0, 12.0], [188900.0, 1.0], [227300.0, 1.0], [105900.0, 6.0], [106700.0, 6.0], [113100.0, 2.0], [118700.0, 3.0], [38900.0, 3.0], [37700.0, 1.0], [40900.0, 1.0], [41700.0, 1.0], [49700.0, 1.0], [53300.0, 2.0], [54100.0, 1.0], [73000.0, 1.0], [96200.0, 1.0], [101800.0, 1.0], [400.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 1.0], [112200.0, 1.0], [122600.0, 1.0], [500.0, 16.0], [600.0, 28.0], [700.0, 40.0], [800.0, 24.0], [900.0, 29.0], [1000.0, 23.0], [1100.0, 35.0], [1200.0, 34.0], [1300.0, 47.0], [1400.0, 27.0], [1500.0, 34.0], [1600.0, 30.0], [1700.0, 33.0], [1800.0, 18.0], [1900.0, 27.0], [2000.0, 24.0], [2100.0, 35.0], [2200.0, 15.0], [2300.0, 26.0], [2400.0, 41.0], [2500.0, 32.0], [2600.0, 27.0], [2700.0, 41.0], [2800.0, 51.0], [2900.0, 36.0], [3000.0, 29.0], [3100.0, 27.0], [3300.0, 20.0], [3200.0, 20.0], [3400.0, 13.0], [3500.0, 12.0], [3600.0, 13.0], [3700.0, 11.0], [3800.0, 5.0], [3900.0, 14.0], [4000.0, 15.0], [4100.0, 13.0], [4200.0, 22.0], [4300.0, 26.0], [67300.0, 1.0], [4600.0, 23.0], [4400.0, 23.0], [4500.0, 31.0], [73700.0, 1.0], [4700.0, 22.0], [4800.0, 13.0], [4900.0, 12.0], [5000.0, 18.0], [5100.0, 11.0], [5300.0, 9.0], [5200.0, 13.0], [5400.0, 17.0], [5500.0, 23.0], [5600.0, 17.0], [5700.0, 12.0], [5800.0, 15.0], [91300.0, 3.0], [6000.0, 7.0], [5900.0, 10.0], [6100.0, 12.0], [6200.0, 19.0], [6300.0, 23.0], [6400.0, 20.0], [6600.0, 33.0], [6500.0, 15.0], [105700.0, 15.0], [6700.0, 20.0], [6800.0, 20.0], [6900.0, 19.0], [107300.0, 1.0], [110500.0, 2.0], [7100.0, 145.0], [7000.0, 21.0], [111300.0, 1.0], [112100.0, 1.0], [7200.0, 14.0], [7300.0, 11.0], [7400.0, 71.0], [117700.0, 2.0], [7500.0, 9.0], [7600.0, 80.0], [7900.0, 57.0], [7700.0, 9.0], [7800.0, 14.0], [8100.0, 67.0], [8000.0, 14.0], [8400.0, 55.0], [8500.0, 43.0], [8300.0, 25.0], [8200.0, 13.0], [8600.0, 56.0], [8700.0, 160.0], [8900.0, 139.0], [9100.0, 150.0], [8800.0, 86.0], [9000.0, 144.0], [9200.0, 300.0], [9300.0, 214.0], [9400.0, 230.0], [9500.0, 222.0], [9600.0, 224.0], [9700.0, 250.0], [9800.0, 225.0], [10100.0, 224.0], [10000.0, 215.0], [9900.0, 246.0], [10200.0, 273.0], [10700.0, 300.0], [10600.0, 259.0], [10400.0, 258.0], [10300.0, 263.0], [10500.0, 249.0], [10900.0, 149.0], [11200.0, 117.0], [10800.0, 196.0], [11100.0, 123.0], [11000.0, 148.0], [11400.0, 104.0], [11300.0, 92.0], [11700.0, 126.0], [11500.0, 111.0], [11600.0, 101.0], [11800.0, 71.0], [12000.0, 65.0], [11900.0, 52.0], [12100.0, 41.0], [12200.0, 91.0], [12500.0, 41.0], [12300.0, 44.0], [12600.0, 36.0], [12700.0, 25.0], [12400.0, 38.0], [13000.0, 29.0], [12800.0, 34.0], [13200.0, 40.0], [12900.0, 20.0], [13300.0, 719.0], [13100.0, 31.0], [211000.0, 1.0], [13400.0, 26.0], [13500.0, 32.0], [13600.0, 9.0], [13800.0, 119.0], [13700.0, 8.0], [14000.0, 31.0], [13900.0, 12.0], [14300.0, 116.0], [14200.0, 8.0], [14100.0, 6.0], [14600.0, 4.0], [14700.0, 3.0], [14400.0, 12.0], [14800.0, 7.0], [14500.0, 25.0], [14900.0, 5.0], [15000.0, 6.0], [15300.0, 12.0], [15200.0, 3.0], [15100.0, 12.0], [15400.0, 7.0], [15700.0, 5.0], [15500.0, 8.0], [15600.0, 8.0], [15800.0, 3.0], [16200.0, 2.0], [16000.0, 4.0], [15900.0, 3.0], [16100.0, 6.0], [16300.0, 2.0], [16600.0, 2.0], [16400.0, 2.0], [16800.0, 3.0], [17000.0, 1.0], [17400.0, 1.0], [18400.0, 6.0], [17800.0, 2.0], [18200.0, 2.0], [18000.0, 2.0], [19400.0, 1.0], [18600.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [20200.0, 1.0], [22200.0, 2.0], [23200.0, 1.0], [24000.0, 1.0], [26400.0, 2.0], [27200.0, 1.0], [27600.0, 3.0], [28600.0, 10.0], [29400.0, 2.0], [29600.0, 1.0], [33600.0, 2.0], [34000.0, 1.0], [35600.0, 1.0], [147900.0, 4.0], [37600.0, 1.0], [38800.0, 1.0], [38000.0, 1.0], [39200.0, 1.0], [40400.0, 1.0], [155900.0, 1.0], [41200.0, 1.0], [48000.0, 1.0], [48400.0, 1.0], [52400.0, 1.0], [54000.0, 3.0], [54800.0, 1.0], [56800.0, 1.0], [57200.0, 2.0], [106400.0, 17.0], [107200.0, 8.0], [119200.0, 3.0], [211200.0, 1.0], [86300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [111900.0, 1.0], [122300.0, 1.0], [147400.0, 1.0], [35900.0, 2.0], [35500.0, 1.0], [38300.0, 2.0], [39100.0, 2.0], [41500.0, 1.0], [49100.0, 1.0], [48300.0, 1.0], [52700.0, 3.0], [86200.0, 4.0], [105400.0, 5.0], [106200.0, 8.0], [107000.0, 1.0], [112600.0, 2.0], [113400.0, 1.0], [119000.0, 3.0], [136400.0, 4.0], [219600.0, 1.0], [210900.0, 1.0], [230100.0, 4.0], [70100.0, 1.0], [105300.0, 2.0], [102900.0, 3.0], [106900.0, 2.0], [113300.0, 1.0], [136600.0, 1.0], [16900.0, 1.0], [16500.0, 3.0], [16700.0, 6.0], [17300.0, 1.0], [17100.0, 4.0], [17500.0, 1.0], [18100.0, 3.0], [17900.0, 4.0], [19100.0, 2.0], [18500.0, 1.0], [18900.0, 1.0], [20300.0, 1.0], [19500.0, 1.0], [19700.0, 1.0], [21500.0, 1.0], [22500.0, 3.0], [26300.0, 12.0], [27300.0, 3.0], [29500.0, 1.0], [28700.0, 1.0], [29700.0, 1.0], [30700.0, 2.0], [42200.0, 4.0], [44200.0, 2.0], [53400.0, 1.0], [54200.0, 1.0], [55400.0, 1.0], [57800.0, 1.0], [98000.0, 1.0], [106000.0, 1.0], [111600.0, 5.0], [112400.0, 1.0], [115600.0, 1.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 135.0], [210400.0, 10.0], [188900.0, 1.0], [72300.0, 1.0], [105900.0, 6.0], [106700.0, 5.0], [118700.0, 1.0], [126700.0, 1.0], [125100.0, 2.0], [135400.0, 1.0], [189800.0, 1.0], [100.0, 2.0], [38900.0, 1.0], [36900.0, 2.0], [48100.0, 1.0], [209900.0, 1.0], [53300.0, 1.0], [56900.0, 1.0], [56500.0, 1.0], [300.0, 2.0], [400.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [113800.0, 2.0], [500.0, 1.0], [600.0, 3.0], [700.0, 6.0], [900.0, 2.0], [1000.0, 1.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 1.0], [1700.0, 6.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 5.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [3100.0, 1.0], [3400.0, 3.0], [3500.0, 3.0], [3600.0, 2.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 4.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4800.0, 3.0], [76900.0, 1.0], [5000.0, 3.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [5800.0, 5.0], [5700.0, 1.0], [91300.0, 2.0], [5900.0, 3.0], [6000.0, 1.0], [6100.0, 2.0], [6200.0, 2.0], [105700.0, 7.0], [6700.0, 1.0], [107300.0, 1.0], [106500.0, 2.0], [108100.0, 2.0], [7100.0, 79.0], [7000.0, 7.0], [111300.0, 1.0], [112100.0, 1.0], [7400.0, 34.0], [7200.0, 3.0], [7300.0, 7.0], [7500.0, 3.0], [7600.0, 36.0], [119300.0, 1.0], [7800.0, 5.0], [7900.0, 34.0], [7700.0, 5.0], [124100.0, 3.0], [8000.0, 7.0], [8100.0, 26.0], [8400.0, 25.0], [8700.0, 54.0], [8600.0, 10.0], [8500.0, 6.0], [8200.0, 9.0], [8300.0, 1.0], [8800.0, 10.0], [9100.0, 10.0], [9200.0, 74.0], [8900.0, 19.0], [9000.0, 9.0], [9400.0, 29.0], [9500.0, 10.0], [9700.0, 35.0], [9300.0, 7.0], [9600.0, 10.0], [9800.0, 12.0], [9900.0, 21.0], [10000.0, 11.0], [10200.0, 20.0], [10100.0, 2.0], [10300.0, 7.0], [10500.0, 4.0], [10400.0, 5.0], [10600.0, 3.0], [10700.0, 20.0], [11000.0, 10.0], [10900.0, 5.0], [10800.0, 3.0], [11200.0, 14.0], [11100.0, 5.0], [11500.0, 5.0], [11700.0, 27.0], [11300.0, 3.0], [11600.0, 1.0], [11400.0, 2.0], [12000.0, 6.0], [12200.0, 20.0], [11800.0, 4.0], [11900.0, 2.0], [12100.0, 1.0], [12700.0, 5.0], [12500.0, 6.0], [12400.0, 1.0], [12600.0, 1.0], [13300.0, 371.0], [13200.0, 26.0], [13100.0, 8.0], [12800.0, 4.0], [13000.0, 6.0], [12900.0, 5.0], [13600.0, 3.0], [13700.0, 6.0], [13400.0, 11.0], [13800.0, 62.0], [13500.0, 12.0], [14000.0, 8.0], [14300.0, 48.0], [14100.0, 4.0], [13900.0, 2.0], [14500.0, 11.0], [14600.0, 1.0], [14400.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [15200.0, 2.0], [15300.0, 3.0], [15000.0, 3.0], [15100.0, 3.0], [15500.0, 1.0], [16000.0, 1.0], [16300.0, 2.0], [17200.0, 1.0], [16400.0, 1.0], [17400.0, 1.0], [17600.0, 1.0], [17800.0, 2.0], [18600.0, 2.0], [22400.0, 1.0], [26200.0, 2.0], [27600.0, 1.0], [28600.0, 5.0], [33200.0, 1.0], [36800.0, 2.0], [38800.0, 1.0], [147900.0, 3.0], [155900.0, 2.0], [47200.0, 1.0], [53200.0, 1.0], [66400.0, 1.0], [94400.0, 1.0], [105600.0, 1.0], [106400.0, 8.0], [107200.0, 8.0], [118400.0, 1.0], [119200.0, 2.0], [177600.0, 4.0], [106300.0, 1.0], [105500.0, 2.0], [107100.0, 3.0], [107900.0, 1.0], [147400.0, 1.0], [34700.0, 1.0], [40300.0, 2.0], [39900.0, 1.0], [51100.0, 1.0], [52300.0, 1.0], [63900.0, 1.0], [88600.0, 1.0], [86200.0, 3.0], [106200.0, 6.0], [105400.0, 4.0], [107000.0, 3.0], [112600.0, 2.0], [122200.0, 1.0], [119000.0, 2.0], [119800.0, 1.0], [210900.0, 1.0], [230100.0, 3.0], [102900.0, 3.0], [106100.0, 1.0], [105300.0, 1.0], [106900.0, 2.0], [110100.0, 2.0], [121300.0, 3.0], [16700.0, 2.0], [17100.0, 1.0], [17300.0, 3.0], [17700.0, 1.0], [18100.0, 2.0], [17900.0, 4.0], [19300.0, 1.0], [19100.0, 1.0], [19500.0, 1.0], [22500.0, 1.0], [25900.0, 1.0], [26300.0, 5.0], [30700.0, 1.0], [37800.0, 1.0], [42200.0, 1.0], [188700.0, 1.0], [55000.0, 1.0], [54200.0, 1.0], [56600.0, 1.0], [61400.0, 1.0], [106000.0, 1.0], [106800.0, 3.0], [111600.0, 3.0], [115600.0, 1.0], [122800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 230100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8304.0, "series": [{"data": [[1.0, 343.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5484.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 25.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 8304.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.53928728E12, "maxY": 500.0, "series": [{"data": [[1.53928764E12, 390.2397408207343], [1.53928734E12, 88.39713971397146], [1.53928728E12, 33.69047619047618], [1.53928794E12, 4.75], [1.53928788E12, 260.8525896414342], [1.53928758E12, 330.54096520763164], [1.53928752E12, 272.16520894071897], [1.53928782E12, 500.0], [1.53928776E12, 496.8814621409924], [1.53928746E12, 209.96184210526306], [1.5392874E12, 149.76275510204079], [1.539288E12, 2.0], [1.5392877E12, 450.1078167115906]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.539288E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 230144.0, "series": [{"data": [[2.0, 115365.0], [5.0, 1606.6666666666667], [6.0, 75225.0], [8.0, 1445.5], [9.0, 53631.75], [11.0, 597.0], [12.0, 2374.0], [13.0, 574.0], [14.0, 611.0], [15.0, 1600.0], [16.0, 603.0], [17.0, 702.0], [20.0, 1799.5], [21.0, 1002.0], [22.0, 903.0], [23.0, 105982.0], [24.0, 1076.0], [25.0, 1083.0], [26.0, 1197.0], [27.0, 1390.0], [29.0, 1114.0], [30.0, 168772.6], [32.0, 2115.5], [33.0, 1430.0], [34.0, 1467.0], [35.0, 1552.0], [36.0, 1587.0], [39.0, 2730.5], [40.0, 1791.0], [41.0, 1926.0], [42.0, 2007.0], [44.0, 2423.0], [45.0, 143539.14285714287], [46.0, 2085.0], [48.0, 2494.0], [49.0, 2515.0], [52.0, 4247.5], [54.0, 3376.0], [56.0, 2910.5], [57.0, 2884.0], [58.0, 2679.0], [59.0, 2713.0], [61.0, 2822.0], [63.0, 4104.0], [65.0, 3784.0], [66.0, 3121.0], [67.0, 3132.0], [69.0, 4084.0], [70.0, 4382.0], [72.0, 4366.0], [73.0, 4055.0], [76.0, 4520.0], [77.0, 6268.0], [78.0, 4856.0], [79.0, 5364.0], [80.0, 4908.0], [81.0, 4077.0], [83.0, 4849.0], [84.0, 4567.0], [86.0, 4546.0], [87.0, 5132.0], [89.0, 34860.5], [91.0, 5775.0], [88.0, 107738.99999999999], [92.0, 7884.0], [93.0, 5663.0], [94.0, 5456.0], [95.0, 31034.5], [96.0, 5685.0], [97.0, 5819.0], [98.0, 6061.0], [100.0, 6523.0], [101.0, 6602.0], [103.0, 6123.0], [104.0, 7307.5], [106.0, 38126.333333333336], [107.0, 6392.0], [109.0, 7352.0], [110.0, 7416.0], [111.0, 6390.0], [112.0, 6669.0], [113.0, 56651.5], [114.0, 6702.0], [116.0, 7406.0], [117.0, 7309.0], [118.0, 8091.0], [120.0, 8061.0], [121.0, 8248.0], [122.0, 8080.0], [125.0, 9229.0], [126.0, 7933.0], [127.0, 49613.0], [129.0, 8717.0], [130.0, 50401.5], [132.0, 10312.0], [134.0, 9673.333333333334], [136.0, 19158.333333333336], [138.0, 9822.0], [139.0, 9849.0], [142.0, 9698.0], [143.0, 10969.5], [145.0, 10540.0], [146.0, 10087.0], [147.0, 10289.0], [149.0, 11932.0], [151.0, 11088.666666666666], [152.0, 14971.5], [153.0, 10140.0], [155.0, 13490.666666666666], [158.0, 12225.0], [159.0, 13703.0], [154.0, 19752.0], [160.0, 10577.0], [162.0, 11611.5], [164.0, 11045.0], [165.0, 10320.0], [166.0, 10567.0], [163.0, 17443.0], [170.0, 10554.0], [171.0, 11567.0], [174.0, 10106.0], [173.0, 17982.0], [169.0, 17278.0], [168.0, 17293.0], [179.0, 11540.0], [182.0, 120976.0], [181.0, 17314.0], [178.0, 17527.0], [176.0, 17871.0], [191.0, 11903.666666666666], [190.0, 13109.0], [189.0, 13125.0], [192.0, 12669.0], [193.0, 11738.0], [195.0, 14110.0], [201.0, 12158.0], [206.0, 14142.0], [202.0, 12572.0], [200.0, 12591.0], [209.0, 11116.5], [215.0, 10277.0], [211.0, 14824.0], [210.0, 14070.0], [221.0, 11315.0], [222.0, 13091.0], [230.0, 12966.0], [225.0, 111616.0], [232.0, 11509.0], [233.0, 12338.0], [236.0, 14894.0], [235.0, 14909.0], [243.0, 10437.0], [245.0, 10136.0], [246.0, 10615.0], [254.0, 13312.0], [252.0, 12369.0], [268.0, 10105.5], [257.0, 12417.0], [256.0, 7168.0], [259.0, 13156.0], [260.0, 11227.5], [261.0, 22982.0], [264.0, 16173.25], [265.0, 1.0], [267.0, 10924.666666666666], [269.0, 10169.0], [270.0, 12288.0], [271.0, 12517.0], [274.0, 14681.2], [273.0, 11487.333333333334], [275.0, 10238.5], [284.0, 28114.25], [285.0, 12482.0], [286.0, 19730.0], [276.0, 11222.5], [277.0, 9976.0], [278.0, 10636.0], [279.0, 11868.0], [280.0, 7932.0], [281.0, 16724.333333333332], [282.0, 11190.666666666668], [283.0, 12651.0], [289.0, 11837.25], [288.0, 54268.0], [290.0, 9948.0], [291.0, 11246.0], [292.0, 13312.0], [293.0, 9318.42857142857], [294.0, 12978.0], [295.0, 13311.0], [296.0, 10900.5], [302.0, 9244.111111111111], [303.0, 8926.666666666666], [300.0, 14504.714285714284], [301.0, 13311.75], [297.0, 9911.75], [298.0, 20052.666666666668], [299.0, 7612.333333333333], [305.0, 10367.75], [304.0, 22300.571428571428], [306.0, 28288.0], [307.0, 10666.666666666666], [308.0, 21350.2], [309.0, 8009.0], [310.0, 4154.4], [311.0, 26708.166666666668], [312.0, 10600.0], [318.0, 11471.0], [319.0, 8361.5], [316.0, 12273.5], [317.0, 38179.2], [313.0, 8564.454545454546], [314.0, 13183.999999999998], [315.0, 4906.666666666667], [321.0, 12718.4], [320.0, 8183.75], [322.0, 6657.0], [323.0, 10530.400000000001], [324.0, 9370.0], [325.0, 6470.75], [326.0, 11553.272727272726], [327.0, 17088.500000000004], [328.0, 13308.0], [334.0, 12099.166666666668], [335.0, 11411.42857142857], [332.0, 10816.5], [333.0, 11059.25], [329.0, 7019.888888888889], [330.0, 10315.0], [331.0, 11505.0], [337.0, 6323.0], [336.0, 12913.22222222222], [338.0, 10021.777777777777], [339.0, 15088.545454545454], [340.0, 11598.25], [341.0, 10310.142857142859], [342.0, 9964.857142857143], [343.0, 6801.4], [344.0, 9255.5], [351.0, 11217.2], [349.0, 13279.5], [350.0, 10316.333333333334], [345.0, 8071.5], [346.0, 9864.5], [347.0, 9742.0], [353.0, 11212.5], [352.0, 10993.071428571428], [354.0, 9093.166666666666], [355.0, 13910.3], [356.0, 13310.0], [357.0, 11856.5], [358.0, 9242.0], [359.0, 7095.0], [360.0, 10069.0], [366.0, 11400.09090909091], [367.0, 11467.6], [364.0, 9709.6], [365.0, 13312.0], [361.0, 13571.0], [362.0, 11175.444444444445], [363.0, 12639.0], [369.0, 10570.4375], [368.0, 8165.666666666667], [370.0, 10804.25], [371.0, 13311.0], [372.0, 9231.666666666666], [373.0, 5938.8], [374.0, 9779.2], [375.0, 9833.2], [377.0, 8192.0], [382.0, 7636.375], [383.0, 10913.363636363634], [380.0, 12671.312500000002], [381.0, 10749.5], [378.0, 11456.25], [379.0, 9984.25], [385.0, 11470.6], [384.0, 9839.833333333334], [386.0, 7678.5], [387.0, 13312.0], [396.0, 9408.5], [397.0, 6655.75], [398.0, 10384.0], [399.0, 6252.666666666666], [388.0, 9017.25], [390.0, 10750.714285714286], [391.0, 10916.0], [392.0, 8216.083333333332], [393.0, 12120.999999999998], [394.0, 11777.75], [395.0, 10905.0], [401.0, 8359.750000000002], [400.0, 13311.0], [402.0, 8756.571428571428], [403.0, 11161.8], [404.0, 12543.166666666666], [405.0, 9215.0], [406.0, 10814.5], [407.0, 10486.0], [409.0, 7281.222222222223], [415.0, 10693.75], [412.0, 7109.818181818182], [414.0, 9819.615384615385], [410.0, 10733.0], [411.0, 10671.25], [418.0, 8988.222222222223], [417.0, 8279.166666666668], [419.0, 12579.333333333334], [428.0, 13689.333333333334], [429.0, 9215.5], [430.0, 9970.666666666666], [431.0, 12681.2], [420.0, 8187.0], [421.0, 7601.625], [422.0, 9727.0], [423.0, 11348.666666666666], [424.0, 13312.0], [425.0, 11775.0], [426.0, 13311.0], [427.0, 9821.0], [433.0, 22316.375], [432.0, 6656.0], [434.0, 11775.0], [435.0, 107779.0], [436.0, 12424.461538461539], [437.0, 5913.0], [438.0, 11374.555555555555], [439.0, 6570.0], [440.0, 9126.692307692307], [446.0, 13315.0], [447.0, 9044.333333333332], [444.0, 7684.0], [445.0, 2.0], [441.0, 10792.5], [442.0, 1.0], [443.0, 12713.666666666668], [449.0, 12565.5], [448.0, 105920.75], [450.0, 13309.0], [451.0, 9621.0], [452.0, 12308.833333333334], [453.0, 11443.0], [454.0, 11458.0], [455.0, 13311.0], [456.0, 7709.666666666666], [460.0, 26202.000000000004], [461.0, 11568.333333333332], [462.0, 34387.9375], [463.0, 8187.0], [458.0, 7529.875], [457.0, 13312.0], [465.0, 13307.0], [464.0, 8788.0], [466.0, 12903.25], [467.0, 20097.0], [468.0, 7703.5], [469.0, 9279.100000000002], [470.0, 13307.0], [471.0, 12284.333333333334], [472.0, 9699.0], [478.0, 8878.736842105263], [479.0, 11159.0], [476.0, 23388.181818181816], [477.0, 7423.0], [473.0, 12100.818181818182], [475.0, 4946.0], [481.0, 9938.6], [480.0, 1.0], [482.0, 17067.833333333332], [483.0, 13211.0], [484.0, 9016.111111111111], [485.0, 8959.25], [486.0, 6655.0], [487.0, 12723.666666666666], [488.0, 10927.0], [494.0, 13823.0], [495.0, 9450.250000000002], [492.0, 9621.285714285714], [493.0, 8788.333333333334], [489.0, 69184.57142857143], [490.0, 8938.42857142857], [491.0, 7675.0], [496.0, 9474.0], [497.0, 9854.75], [498.0, 8098.555555555556], [499.0, 8705.23076923077], [500.0, 20129.793981481474]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[379.7958833619206, 15971.1875357347]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 230144.0], [3.0, 76144.33333333333], [4.0, 516.5], [5.0, 63324.666666666664], [6.0, 637.2], [7.0, 752.5], [8.0, 35899.00000000001], [9.0, 19866.636363636364], [10.0, 939.0], [11.0, 799.7272727272727], [12.0, 890.25], [13.0, 768.4166666666666], [14.0, 843.8000000000001], [15.0, 891.4545454545454], [16.0, 981.7368421052631], [17.0, 13946.125], [18.0, 1043.1999999999998], [19.0, 1020.5999999999999], [20.0, 1204.9999999999998], [21.0, 26005.235294117647], [22.0, 1316.5000000000002], [23.0, 1333.875], [24.0, 14531.125], [25.0, 15471.800000000001], [26.0, 1414.5], [27.0, 1612.235294117647], [28.0, 20405.227272727272], [29.0, 1455.875], [30.0, 32788.75], [31.0, 1641.4210526315792], [32.0, 1577.4117647058827], [33.0, 1562.2857142857142], [34.0, 1853.5000000000005], [35.0, 1725.45], [36.0, 1745.5625], [37.0, 2044.5714285714287], [38.0, 2155.6470588235297], [39.0, 2249.7857142857138], [40.0, 2192.1176470588234], [41.0, 2137.5], [42.0, 2184.923076923077], [43.0, 2515.428571428572], [44.0, 2718.2777777777774], [45.0, 35983.117647058825], [46.0, 2335.785714285714], [47.0, 2578.277777777778], [48.0, 2718.8125], [49.0, 2846.846153846154], [50.0, 2743.6470588235293], [51.0, 2844.4444444444443], [52.0, 2699.6363636363644], [53.0, 2994.666666666667], [54.0, 3217.8888888888882], [55.0, 3005.277777777778], [56.0, 2612.2499999999995], [57.0, 2821.190476190476], [58.0, 2976.2666666666673], [59.0, 3052.235294117647], [60.0, 2985.6500000000005], [61.0, 3003.5294117647054], [62.0, 2880.875], [63.0, 3279.0625], [64.0, 3464.4117647058824], [65.0, 3458.0588235294117], [66.0, 3316.9999999999995], [67.0, 3355.6], [68.0, 3695.916666666667], [69.0, 4298.833333333334], [70.0, 4815.8], [71.0, 4588.333333333333], [72.0, 4503.4000000000015], [73.0, 4210.363636363636], [74.0, 4224.000000000001], [75.0, 4343.181818181818], [76.0, 4882.357142857142], [77.0, 5176.928571428572], [78.0, 5177.687499999999], [79.0, 4984.777777777777], [80.0, 4295.714285714286], [81.0, 12836.75], [82.0, 4774.052631578947], [83.0, 4677.7692307692305], [84.0, 4750.153846153846], [85.0, 16701.470588235294], [86.0, 4705.999999999999], [87.0, 32040.8], [88.0, 61808.96296296296], [89.0, 5753.6875], [90.0, 9066.4], [91.0, 10214.153846153846], [92.0, 9250.875], [93.0, 5847.187499999999], [94.0, 5515.888888888889], [95.0, 5760.799999999999], [96.0, 9099.9375], [97.0, 10698.909090909092], [98.0, 6755.2], [99.0, 9802.642857142857], [100.0, 7023.272727272727], [101.0, 10937.846153846154], [102.0, 9818.5], [103.0, 9787.285714285714], [104.0, 10988.0], [105.0, 6782.307692307693], [106.0, 6948.000000000001], [107.0, 6665.0], [108.0, 7305.272727272728], [109.0, 10163.444444444445], [110.0, 9137.823529411766], [111.0, 10583.666666666666], [112.0, 7017.5], [113.0, 7747.083333333334], [114.0, 8274.615384615385], [115.0, 9520.142857142859], [116.0, 7679.923076923077], [117.0, 9452.375], [118.0, 9391.461538461539], [119.0, 10740.666666666666], [120.0, 11109.466666666667], [121.0, 10665.92307692308], [122.0, 9741.636363636364], [123.0, 8811.636363636364], [124.0, 8909.571428571426], [125.0, 8880.76923076923], [126.0, 8805.07142857143], [127.0, 8234.538461538461], [128.0, 19038.25], [129.0, 9038.76923076923], [130.0, 23911.272727272724], [131.0, 11021.307692307691], [132.0, 15008.666666666668], [133.0, 12337.0], [134.0, 12006.083333333334], [135.0, 12516.363636363636], [136.0, 10335.916666666666], [137.0, 12005.625000000002], [138.0, 14061.5], [139.0, 11248.90909090909], [140.0, 11536.0], [141.0, 11136.636363636364], [142.0, 10586.1], [143.0, 11275.1], [144.0, 12923.090909090908], [145.0, 10715.266666666666], [146.0, 11337.166666666668], [147.0, 11573.266666666666], [148.0, 11754.923076923078], [149.0, 13065.214285714286], [150.0, 10046.666666666666], [151.0, 11077.333333333334], [152.0, 10897.499999999998], [153.0, 12157.625], [154.0, 10980.833333333332], [155.0, 11195.538461538461], [156.0, 11271.055555555557], [157.0, 11488.363636363636], [158.0, 11058.09090909091], [159.0, 11137.272727272728], [160.0, 11089.166666666666], [161.0, 21074.800000000003], [162.0, 12013.071428571428], [163.0, 11555.999999999998], [164.0, 19630.166666666668], [165.0, 11390.333333333334], [166.0, 17840.733333333334], [167.0, 10360.933333333334], [168.0, 10868.3], [169.0, 11207.833333333332], [170.0, 19060.53846153846], [171.0, 11871.818181818182], [172.0, 17400.0], [173.0, 11196.133333333335], [174.0, 12253.142857142857], [175.0, 10790.125000000002], [176.0, 11263.307692307691], [177.0, 11971.099999999999], [178.0, 11545.0], [179.0, 13936.8125], [180.0, 11306.666666666666], [181.0, 11002.636363636364], [182.0, 11214.636363636362], [183.0, 12876.416666666668], [184.0, 12917.142857142857], [185.0, 11696.692307692307], [186.0, 12127.42857142857], [187.0, 13837.8], [188.0, 11767.333333333332], [189.0, 11483.583333333334], [190.0, 11701.8], [191.0, 12247.625], [192.0, 18631.4], [193.0, 12492.785714285714], [194.0, 11766.444444444445], [195.0, 12429.833333333334], [196.0, 12656.058823529413], [197.0, 11795.333333333334], [198.0, 12058.124999999998], [199.0, 12731.1875], [200.0, 11220.454545454544], [201.0, 10291.363636363636], [202.0, 12035.666666666666], [203.0, 13759.25], [204.0, 11875.266666666666], [205.0, 11872.27777777778], [206.0, 11150.6], [207.0, 11416.166666666668], [208.0, 12419.176470588236], [209.0, 11538.266666666668], [210.0, 11080.357142857143], [211.0, 11025.466666666665], [212.0, 10865.882352941175], [213.0, 10090.444444444445], [214.0, 10479.000000000002], [215.0, 10960.692307692309], [216.0, 11191.4], [217.0, 11094.882352941177], [218.0, 10678.8], [219.0, 11987.5], [220.0, 11527.92857142857], [221.0, 10771.333333333334], [222.0, 11053.0], [223.0, 11836.533333333335], [224.0, 11642.076923076926], [225.0, 43826.4375], [226.0, 11369.111111111111], [227.0, 11912.999999999998], [228.0, 12041.333333333334], [229.0, 11656.066666666666], [230.0, 11082.272727272726], [231.0, 11425.09090909091], [232.0, 11543.666666666666], [233.0, 11969.916666666666], [234.0, 10995.071428571428], [235.0, 12250.647058823528], [236.0, 11610.866666666665], [237.0, 11428.066666666666], [238.0, 11691.857142857143], [239.0, 16923.363636363636], [240.0, 11716.764705882351], [241.0, 11692.428571428574], [242.0, 11431.857142857145], [243.0, 10919.785714285714], [244.0, 12074.823529411764], [245.0, 10772.900000000001], [246.0, 11297.999999999998], [247.0, 11172.000000000002], [248.0, 10842.6875], [249.0, 11134.666666666664], [250.0, 11148.9], [251.0, 10982.0], [252.0, 11405.555555555555], [253.0, 19220.076923076922], [254.0, 11969.666666666664], [255.0, 19312.76923076923], [257.0, 24564.13333333334], [256.0, 12124.833333333332], [258.0, 11965.066666666668], [259.0, 11935.416666666668], [260.0, 12270.599999999999], [261.0, 10830.3125], [262.0, 11312.857142857143], [263.0, 10589.666666666666], [264.0, 12007.5], [270.0, 11175.785714285716], [271.0, 11338.8], [268.0, 10370.23076923077], [269.0, 22427.368421052633], [265.0, 16460.277777777777], [266.0, 10700.222222222223], [267.0, 18331.333333333332], [273.0, 11134.666666666668], [272.0, 19439.583333333332], [274.0, 11105.0625], [275.0, 11602.599999999999], [276.0, 10609.5], [277.0, 11260.599999999999], [278.0, 17111.5], [279.0, 9975.800000000001], [280.0, 10383.388888888889], [286.0, 10788.64705882353], [287.0, 10205.916666666666], [284.0, 17769.52941176471], [285.0, 10612.92857142857], [281.0, 12417.750000000002], [282.0, 18266.733333333334], [283.0, 11177.555555555555], [289.0, 11242.388888888887], [288.0, 17683.666666666668], [290.0, 16287.222222222223], [291.0, 10547.2], [292.0, 14655.59090909091], [293.0, 9771.277777777777], [294.0, 11216.052631578947], [295.0, 11049.923076923076], [296.0, 9457.133333333333], [302.0, 14432.95652173913], [303.0, 10387.352941176472], [300.0, 19564.4375], [301.0, 9627.461538461537], [297.0, 10629.714285714286], [298.0, 13578.916666666666], [299.0, 10496.357142857141], [305.0, 10430.05], [304.0, 13030.238095238094], [306.0, 17808.470588235294], [307.0, 11034.117647058823], [308.0, 10305.25], [309.0, 9884.722222222223], [310.0, 8980.176470588236], [311.0, 19201.736842105263], [312.0, 10378.92857142857], [318.0, 10397.916666666668], [319.0, 11109.4], [316.0, 10743.285714285716], [317.0, 10062.142857142857], [313.0, 10263.760000000002], [314.0, 10683.75], [315.0, 15396.277777777777], [321.0, 11021.928571428572], [320.0, 11431.095238095237], [322.0, 9568.263157894738], [323.0, 25379.83333333334], [324.0, 10646.0], [325.0, 10717.631578947368], [326.0, 11683.125000000002], [327.0, 14849.45], [328.0, 11165.615384615383], [334.0, 10016.117647058823], [335.0, 10130.25], [332.0, 9566.857142857141], [333.0, 11143.304347826086], [329.0, 8978.863636363634], [330.0, 10259.272727272726], [331.0, 10536.782608695652], [337.0, 15924.933333333332], [336.0, 10199.333333333334], [338.0, 10377.576923076922], [339.0, 10246.964285714286], [340.0, 9338.625], [341.0, 10672.270270270272], [342.0, 9442.285714285714], [343.0, 8639.555555555555], [344.0, 9647.166666666666], [350.0, 10165.384615384613], [351.0, 11088.176470588236], [348.0, 9138.875], [349.0, 10761.727272727272], [345.0, 9427.466666666664], [346.0, 9729.421052631578], [347.0, 9256.608695652174], [353.0, 9389.653846153848], [352.0, 10448.928571428569], [354.0, 14801.833333333336], [355.0, 11281.851851851852], [356.0, 10876.739130434786], [357.0, 10277.57894736842], [358.0, 8933.739130434782], [359.0, 8682.176470588234], [360.0, 9952.153846153846], [366.0, 9494.607142857141], [367.0, 10977.382352941173], [364.0, 9139.0], [365.0, 9635.117647058822], [361.0, 10626.904761904761], [362.0, 9700.809523809527], [363.0, 9863.6], [369.0, 10024.571428571428], [368.0, 9437.166666666666], [370.0, 9746.1], [371.0, 9477.583333333334], [372.0, 9849.125], [373.0, 9886.5], [374.0, 10476.64705882353], [375.0, 11481.045454545456], [376.0, 11040.499999999995], [382.0, 10049.214285714286], [383.0, 10568.85], [380.0, 11620.071428571426], [381.0, 11222.612903225807], [377.0, 10102.153846153846], [378.0, 10091.875], [379.0, 11560.250000000002], [385.0, 9362.086956521738], [384.0, 8880.749999999998], [386.0, 9786.000000000002], [387.0, 10246.849999999999], [388.0, 9600.333333333334], [389.0, 9163.57692307692], [390.0, 9980.428571428572], [391.0, 10015.35], [392.0, 10207.064516129032], [398.0, 10891.882352941175], [399.0, 9528.970588235294], [396.0, 10506.499999999996], [397.0, 9360.033333333333], [393.0, 9278.923076923078], [394.0, 9685.266666666668], [395.0, 10042.666666666666], [401.0, 8937.720000000001], [400.0, 8714.28], [402.0, 10024.59090909091], [403.0, 10042.500000000002], [404.0, 9500.578947368418], [405.0, 8849.6], [406.0, 9413.230769230773], [407.0, 8421.57142857143], [408.0, 10150.133333333333], [414.0, 11071.184210526313], [415.0, 10446.727272727272], [412.0, 9118.875], [413.0, 11152.500000000002], [409.0, 9909.882352941177], [410.0, 11230.875000000002], [411.0, 11037.321428571428], [417.0, 9907.687499999998], [416.0, 9734.199999999999], [418.0, 8974.256410256408], [419.0, 9190.529411764706], [420.0, 9661.333333333332], [421.0, 9530.411764705881], [422.0, 9658.529411764704], [423.0, 9860.449999999997], [424.0, 10518.666666666666], [430.0, 9413.166666666666], [431.0, 10777.148148148148], [428.0, 10987.535714285714], [429.0, 9426.296296296297], [425.0, 9949.047619047617], [426.0, 9733.111111111111], [427.0, 10064.866666666667], [433.0, 23657.476190476194], [432.0, 8437.000000000002], [434.0, 9610.07142857143], [435.0, 18178.0], [436.0, 11164.48148148148], [437.0, 9882.206896551728], [438.0, 10265.533333333335], [439.0, 10439.210526315788], [440.0, 8900.136363636362], [446.0, 9823.18181818182], [447.0, 10605.947368421053], [444.0, 9855.478260869568], [445.0, 10263.263157894737], [441.0, 10861.27777777778], [442.0, 11212.916666666666], [443.0, 10423.833333333332], [449.0, 10103.559999999998], [448.0, 38470.450000000004], [450.0, 10053.875000000002], [451.0, 10660.85714285714], [452.0, 19811.840000000004], [453.0, 10366.148148148151], [454.0, 13446.444444444443], [455.0, 9880.421052631578], [456.0, 11361.045454545458], [462.0, 27969.9696969697], [463.0, 10213.823529411764], [460.0, 21379.034482758623], [461.0, 10294.47619047619], [457.0, 10267.375], [458.0, 9634.5], [459.0, 10058.052631578945], [465.0, 9739.650000000001], [464.0, 11043.439999999999], [466.0, 11892.266666666666], [467.0, 12742.82608695652], [468.0, 9228.312500000002], [469.0, 9011.189189189186], [470.0, 11136.150000000001], [471.0, 10347.26923076923], [472.0, 10945.692307692309], [478.0, 9408.230769230768], [479.0, 10738.083333333334], [476.0, 14926.999999999996], [477.0, 9015.789473684214], [473.0, 11136.812499999998], [474.0, 10675.950000000003], [475.0, 9771.40909090909], [481.0, 10090.866666666669], [480.0, 11191.133333333333], [482.0, 12487.869565217394], [483.0, 10400.190476190477], [484.0, 9288.08695652174], [485.0, 10268.416666666666], [486.0, 11408.74074074074], [487.0, 11579.919999999996], [488.0, 10908.04347826087], [494.0, 10981.666666666668], [495.0, 9956.166666666666], [492.0, 10011.84], [493.0, 10503.5], [489.0, 36781.04761904761], [490.0, 10275.333333333332], [491.0, 14521.263157894733], [496.0, 10819.260869565216], [497.0, 9650.599999999997], [498.0, 9253.86206896552], [499.0, 11023.4], [500.0, 12933.990355107411]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[327.75141884222296, 11321.079928111998]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 24.0], [3.0, 28.0], [4.0, 33.0], [5.0, 94480.0], [6.0, 42.0], [7.0, 26.0], [8.0, 35.0], [9.0, 10.0], [10.0, 31.0], [11.0, 21.0], [12.0, 798.0], [13.0, 29.0], [14.0, 26.0], [15.0, 32.0], [16.0, 22.0], [17.0, 160.0], [18.0, 105.0], [19.0, 78.0], [20.0, 319.0], [21.0, 449.0], [22.0, 384.0], [23.0, 440.0], [24.0, 670.0], [25.0, 105586.0], [26.0, 105517.0], [27.0, 646.0], [28.0, 105513.5], [29.0, 702.0], [30.0, 157900.25], [31.0, 772.0], [32.0, 950.0], [34.0, 905.0], [35.0, 913.0], [37.0, 1308.0], [38.0, 1415.0], [39.0, 1300.0], [40.0, 1324.0], [41.0, 1465.0], [42.0, 1462.0], [43.0, 1781.0], [44.0, 1758.0], [45.0, 170684.875], [46.0, 1747.0], [47.0, 1751.0], [48.0, 1755.0], [49.0, 1966.0], [51.0, 2053.0], [53.0, 2144.0], [54.0, 2118.0], [55.0, 1771.0], [57.0, 2120.0], [58.0, 2203.0], [59.0, 2042.0], [60.0, 2175.0], [61.0, 2177.0], [62.0, 2361.0], [63.0, 2431.0], [64.0, 2617.0], [65.0, 2425.0], [66.0, 2569.0], [67.0, 2772.0], [69.0, 3549.0], [70.0, 3977.0], [71.0, 3640.0], [72.0, 3459.0], [73.0, 3161.0], [74.0, 3499.0], [76.0, 4053.0], [77.0, 4261.0], [78.0, 3950.0], [79.0, 3538.0], [80.0, 3424.0], [81.0, 3574.0], [82.0, 3683.0], [84.0, 4017.0], [85.0, 55220.0], [87.0, 72518.33333333333], [88.0, 112008.36363636363], [89.0, 4845.0], [91.0, 5051.0], [92.0, 4949.5], [93.0, 30651.0], [95.0, 4999.0], [94.0, 56598.0], [96.0, 5130.0], [97.0, 5090.0], [98.0, 29966.0], [99.0, 5987.0], [100.0, 31427.5], [101.0, 5723.0], [102.0, 5574.0], [103.0, 5260.0], [104.0, 5890.0], [105.0, 5865.0], [106.0, 5871.0], [107.0, 53272.0], [108.0, 70782.5], [109.0, 6283.0], [110.0, 6014.5], [112.0, 6127.0], [113.0, 39617.666666666664], [115.0, 5998.0], [116.0, 6713.0], [118.0, 7473.0], [119.0, 7298.0], [120.0, 7554.0], [121.0, 7435.0], [122.0, 7612.0], [123.0, 7804.0], [124.0, 7920.0], [125.0, 7458.0], [126.0, 7191.0], [127.0, 7047.0], [128.0, 7579.0], [129.0, 7944.0], [131.0, 8076.0], [132.0, 8476.0], [133.0, 8865.0], [134.0, 8780.0], [130.0, 102653.66666666667], [136.0, 9166.0], [137.0, 9082.5], [139.0, 9420.0], [140.0, 9461.0], [141.0, 23275.5], [142.0, 23014.5], [143.0, 9543.0], [144.0, 9841.0], [145.0, 23175.0], [146.0, 9734.0], [147.0, 9937.0], [148.0, 9700.0], [149.0, 9512.0], [150.0, 24855.5], [151.0, 9458.0], [152.0, 9745.0], [154.0, 9950.5], [155.0, 9888.0], [158.0, 19569.0], [160.0, 13713.333333333334], [164.0, 9772.0], [167.0, 13917.5], [168.0, 10461.0], [175.0, 17898.0], [179.0, 17762.0], [180.0, 13128.0], [181.0, 11257.5], [189.0, 13242.0], [185.0, 112698.0], [198.0, 12942.0], [197.0, 12944.0], [194.0, 33269.0], [205.0, 13670.0], [204.0, 13905.0], [209.0, 16792.0], [210.0, 13314.0], [215.0, 12166.0], [213.0, 12245.0], [217.0, 16756.0], [218.0, 13340.0], [221.0, 28820.5], [223.0, 111616.0], [226.0, 12614.0], [231.0, 51160.0], [228.0, 15253.0], [225.0, 111611.5], [232.0, 12565.0], [234.0, 13223.0], [235.0, 11090.0], [236.0, 18109.0], [238.0, 13315.0], [241.0, 12249.5], [244.0, 17788.0], [247.0, 11941.333333333334], [245.0, 11827.0], [242.0, 11119.0], [248.0, 9776.0], [249.0, 13304.0], [251.0, 51010.0], [253.0, 43384.66666666667], [254.0, 12052.5], [255.0, 106740.0], [257.0, 75258.0], [256.0, 10833.333333333334], [258.0, 26269.0], [259.0, 75301.66666666667], [260.0, 13314.0], [261.0, 105904.0], [262.0, 12847.0], [263.0, 56513.25], [264.0, 7854.666666666667], [271.0, 10398.0], [268.0, 1.0], [269.0, 11632.5], [265.0, 56826.5], [266.0, 11614.5], [267.0, 9898.0], [273.0, 13133.0], [272.0, 75529.66666666667], [274.0, 108672.5], [275.0, 10993.5], [276.0, 10725.5], [278.0, 10504.0], [279.0, 9621.0], [280.0, 56037.8], [286.0, 11363.0], [287.0, 13289.25], [284.0, 61238.4], [285.0, 9666.666666666666], [281.0, 13820.0], [282.0, 59227.11111111111], [289.0, 13243.0], [288.0, 26546.6], [290.0, 106048.5], [300.0, 31093.1], [301.0, 15865.666666666668], [302.0, 36460.625], [292.0, 19880.88888888889], [293.0, 8829.4], [294.0, 31541.4], [295.0, 9868.8], [296.0, 7425.666666666667], [297.0, 8078.5], [298.0, 21862.0], [299.0, 9482.0], [305.0, 11230.5], [304.0, 52797.333333333336], [306.0, 58030.0], [307.0, 7926.857142857141], [308.0, 7808.25], [309.0, 7484.0], [310.0, 8930.800000000001], [311.0, 24446.333333333332], [312.0, 9513.666666666666], [318.0, 7168.0], [319.0, 44906.666666666664], [316.0, 11547.25], [317.0, 61191.75], [313.0, 15310.333333333332], [314.0, 13087.5], [315.0, 41526.166666666664], [321.0, 62012.0], [320.0, 9268.714285714286], [322.0, 12492.333333333334], [323.0, 31936.111111111106], [324.0, 7987.0], [325.0, 26557.857142857145], [326.0, 11421.0], [327.0, 10923.571428571428], [328.0, 13022.666666666666], [334.0, 9216.333333333334], [335.0, 12314.142857142857], [332.0, 8702.0], [333.0, 9975.4], [329.0, 29704.0], [330.0, 9211.666666666666], [331.0, 8431.142857142857], [337.0, 41045.333333333336], [336.0, 11013.777777777777], [338.0, 9733.375], [339.0, 10785.25], [341.0, 9215.083333333332], [342.0, 8719.888888888889], [343.0, 7572.625], [344.0, 12555.0], [350.0, 6443.333333333333], [351.0, 9518.142857142857], [348.0, 9785.666666666666], [349.0, 7635.666666666666], [345.0, 37332.0], [346.0, 10662.666666666666], [347.0, 9741.333333333332], [353.0, 11369.8], [352.0, 10318.545454545452], [354.0, 30244.249999999996], [355.0, 11727.500000000002], [356.0, 12258.42857142857], [357.0, 8863.5], [358.0, 7804.5], [359.0, 10483.5], [360.0, 9340.333333333334], [366.0, 12414.90909090909], [367.0, 9911.75], [364.0, 7722.666666666666], [365.0, 13312.0], [361.0, 11260.4], [362.0, 10155.285714285714], [370.0, 11263.75], [369.0, 11751.909090909092], [371.0, 9134.5], [380.0, 12185.5], [381.0, 13984.666666666666], [382.0, 10448.714285714284], [383.0, 12123.444444444445], [372.0, 4981.0], [373.0, 9938.0], [374.0, 8499.3], [375.0, 9645.333333333332], [377.0, 9433.8], [378.0, 8471.8], [379.0, 13312.2], [385.0, 7681.333333333334], [384.0, 9417.4], [386.0, 13786.0], [387.0, 10233.25], [388.0, 10655.333333333334], [389.0, 10257.0], [390.0, 11193.4], [391.0, 9189.333333333334], [392.0, 8741.8], [399.0, 9375.4], [396.0, 9648.0], [397.0, 11097.833333333334], [393.0, 12855.099999999999], [394.0, 10665.5], [395.0, 10069.166666666668], [401.0, 6941.266666666666], [400.0, 8704.0], [402.0, 8443.0], [403.0, 12668.714285714286], [404.0, 11797.6], [405.0, 7808.0], [406.0, 9490.142857142857], [408.0, 8972.0], [414.0, 13312.363636363636], [412.0, 9239.750000000002], [413.0, 10367.25], [409.0, 8515.666666666666], [410.0, 13866.0], [411.0, 11966.125], [417.0, 8505.625], [416.0, 7167.333333333333], [418.0, 10533.625], [419.0, 11434.0], [420.0, 12159.25], [421.0, 9602.1], [422.0, 13902.0], [423.0, 10079.714285714286], [424.0, 10632.666666666666], [430.0, 11065.6], [431.0, 12839.857142857141], [428.0, 10623.272727272726], [429.0, 7873.5], [425.0, 9341.666666666666], [426.0, 9493.0], [433.0, 25656.0], [432.0, 6338.4], [435.0, 60633.5], [444.0, 9348.0], [445.0, 9215.6], [446.0, 9172.0], [447.0, 13309.25], [436.0, 9548.4], [437.0, 8969.999999999998], [438.0, 9196.75], [439.0, 8532.666666666666], [440.0, 8631.583333333334], [441.0, 11092.833333333332], [442.0, 7098.0], [443.0, 11945.666666666666], [449.0, 11397.0], [448.0, 86513.4], [450.0, 10947.5], [451.0, 11372.666666666668], [452.0, 11947.555555555555], [453.0, 9832.57142857143], [454.0, 9011.0], [455.0, 13314.0], [456.0, 41686.75], [462.0, 31487.666666666668], [463.0, 18633.0], [460.0, 27111.000000000004], [461.0, 13314.6], [457.0, 13208.0], [458.0, 8149.4], [459.0, 9791.0], [465.0, 13406.75], [464.0, 11550.5], [466.0, 9766.25], [467.0, 13306.0], [468.0, 8571.0], [469.0, 6620.875], [470.0, 12287.25], [471.0, 12841.333333333334], [473.0, 10332.0], [478.0, 9260.0], [479.0, 11055.0], [476.0, 22758.083333333336], [477.0, 27890.666666666668], [474.0, 11355.0], [475.0, 11382.8], [481.0, 6741.0], [480.0, 9225.0], [482.0, 10430.5], [483.0, 13498.75], [484.0, 7935.4], [485.0, 10454.75], [486.0, 12627.5], [487.0, 10053.375], [488.0, 10751.0], [494.0, 13835.0], [495.0, 9787.0], [492.0, 10522.625], [493.0, 9536.0], [489.0, 61310.875], [490.0, 7727.25], [491.0, 15349.666666666666], [496.0, 13864.0], [497.0, 14179.333333333334], [498.0, 10068.999999999998], [499.0, 10233.166666666666], [500.0, 21917.705741626793], [1.0, 91.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[374.6425068119892, 19417.065395095367]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8.65, "minX": 1.53928728E12, "maxY": 1005302.6, "series": [{"data": [[1.53928764E12, 944235.8], [1.53928734E12, 963259.35], [1.53928728E12, 973266.1666666666], [1.53928794E12, 22.0], [1.53928788E12, 275842.26666666666], [1.53928758E12, 940571.3333333334], [1.53928752E12, 888085.0166666667], [1.53928782E12, 1005302.6], [1.53928776E12, 967943.2666666667], [1.53928746E12, 871682.05], [1.5392874E12, 841113.45], [1.539288E12, 11.0], [1.5392877E12, 975615.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928764E12, 7245.133333333333], [1.53928734E12, 3761.95], [1.53928728E12, 3828.1833333333334], [1.53928794E12, 15.75], [1.53928788E12, 1936.9166666666667], [1.53928758E12, 6946.4], [1.53928752E12, 4051.1833333333334], [1.53928782E12, 7222.116666666667], [1.53928776E12, 7501.333333333333], [1.53928746E12, 3092.733333333333], [1.5392874E12, 3256.133333333333], [1.539288E12, 8.65], [1.5392877E12, 7231.033333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.539288E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 910.7457627118645, "minX": 1.53928728E12, "maxY": 230144.0, "series": [{"data": [[1.53928764E12, 9880.655405405414], [1.53928734E12, 5572.901960784311], [1.53928728E12, 1981.1607142857147], [1.53928794E12, 144895.0], [1.53928788E12, 56031.370370370365], [1.53928758E12, 11787.324921135647], [1.53928752E12, 13567.352941176467], [1.53928782E12, 24750.74688796681], [1.53928776E12, 14206.77777777778], [1.53928746E12, 11912.428571428572], [1.5392874E12, 10269.466666666669], [1.539288E12, 230143.0], [1.5392877E12, 15109.897435897437]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928764E12, 9942.889952153115], [1.53928734E12, 5468.098258706469], [1.53928728E12, 1891.01112484549], [1.53928794E12, 208146.0], [1.53928788E12, 34718.369047619046], [1.53928758E12, 11376.23503521127], [1.53928752E12, 12665.796068796066], [1.53928782E12, 13873.747244673035], [1.53928776E12, 11702.630516080784], [1.53928746E12, 11570.778541953243], [1.5392874E12, 10487.13486370158], [1.539288E12, 230144.0], [1.5392877E12, 11975.772024729516]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928764E12, 10252.701986754968], [1.53928734E12, 4664.666666666667], [1.53928782E12, 24899.661016949158], [1.53928728E12, 910.7457627118645], [1.53928776E12, 16722.76551724136], [1.53928746E12, 17151.684210526313], [1.53928794E12, 188927.0], [1.5392874E12, 9402.309523809525], [1.53928788E12, 73445.28235294117], [1.53928758E12, 17361.65653495441], [1.53928752E12, 33917.71538461539], [1.5392877E12, 14682.666666666668]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.539288E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 910.677966101695, "minX": 1.53928728E12, "maxY": 230144.0, "series": [{"data": [[1.53928764E12, 9880.628378378382], [1.53928734E12, 5572.901960784311], [1.53928728E12, 1981.142857142857], [1.53928794E12, 144895.0], [1.53928788E12, 56031.370370370365], [1.53928758E12, 11787.309148264987], [1.53928752E12, 13567.352941176467], [1.53928782E12, 24750.742738589215], [1.53928776E12, 14206.774305555555], [1.53928746E12, 11912.428571428572], [1.5392874E12, 10269.466666666669], [1.539288E12, 230143.0], [1.5392877E12, 15109.882783882786]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928764E12, 9942.564593301448], [1.53928734E12, 5467.529850746272], [1.53928728E12, 1890.546353522867], [1.53928794E12, 208146.0], [1.53928788E12, 34717.163690476176], [1.53928758E12, 11375.878521126739], [1.53928752E12, 12665.304668304661], [1.53928782E12, 13873.419544452589], [1.53928776E12, 11702.304412864638], [1.53928746E12, 11570.312242090771], [1.5392874E12, 10486.641319942602], [1.539288E12, 230144.0], [1.5392877E12, 11975.434312210185]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928764E12, 10252.682119205298], [1.53928734E12, 4664.648148148148], [1.53928782E12, 24899.644067796617], [1.53928728E12, 910.677966101695], [1.53928776E12, 16722.758620689652], [1.53928746E12, 17151.684210526313], [1.53928794E12, 188927.0], [1.5392874E12, 9402.309523809525], [1.53928788E12, 73445.28235294117], [1.53928758E12, 17361.623100303957], [1.53928752E12, 33917.70769230767], [1.5392877E12, 14682.652777777766]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.539288E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928728E12, "maxY": 2.152542372881356, "series": [{"data": [[1.53928764E12, 0.36824324324324365], [1.53928734E12, 1.0000000000000002], [1.53928728E12, 0.03571428571428571], [1.53928794E12, 0.0], [1.53928788E12, 0.40740740740740744], [1.53928758E12, 0.6025236593059939], [1.53928752E12, 0.7411764705882353], [1.53928782E12, 0.2987551867219918], [1.53928776E12, 0.3333333333333338], [1.53928746E12, 0.7857142857142858], [1.5392874E12, 0.888888888888889], [1.539288E12, 0.0], [1.5392877E12, 0.26007326007326]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928764E12, 0.3724082934609251], [1.53928734E12, 0.6206467661691543], [1.53928728E12, 0.510506798516687], [1.53928794E12, 0.0], [1.53928788E12, 0.42261904761904756], [1.53928758E12, 0.5413732394366201], [1.53928752E12, 0.5589680589680591], [1.53928782E12, 0.4401175606171929], [1.53928776E12, 0.42707554225878863], [1.53928746E12, 0.5845942228335623], [1.5392874E12, 0.5552367288378762], [1.539288E12, 0.0], [1.5392877E12, 0.3593508500772794]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928764E12, 0.413907284768212], [1.53928734E12, 0.9074074074074071], [1.53928782E12, 0.37288135593220373], [1.53928728E12, 2.152542372881356], [1.53928776E12, 0.32758620689655193], [1.53928746E12, 0.8421052631578948], [1.53928794E12, 0.0], [1.5392874E12, 1.1428571428571428], [1.53928788E12, 0.4352941176470588], [1.53928758E12, 0.5592705167173244], [1.53928752E12, 0.7615384615384618], [1.5392877E12, 0.2847222222222222]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.539288E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.53928728E12, "maxY": 122648.0, "series": [{"data": [[1.53928764E12, 19174.0], [1.53928734E12, 11807.0], [1.53928782E12, 17308.0], [1.53928728E12, 5555.0], [1.53928776E12, 18159.0], [1.53928746E12, 40352.0], [1.5392874E12, 17762.0], [1.53928788E12, 122648.0], [1.53928758E12, 16895.0], [1.53928752E12, 17574.0], [1.5392877E12, 61469.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928764E12, 8237.0], [1.53928734E12, 2177.0], [1.53928782E12, 8651.0], [1.53928728E12, 18.0], [1.53928776E12, 7952.0], [1.53928746E12, 9340.0], [1.5392874E12, 7047.0], [1.53928788E12, 8980.0], [1.53928758E12, 7812.0], [1.53928752E12, 9009.0], [1.5392877E12, 8404.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928764E12, 11802.199999999999], [1.53928734E12, 6791.8], [1.53928782E12, 11743.8], [1.53928728E12, 2907.9], [1.53928776E12, 11772.0], [1.53928746E12, 11674.7], [1.5392874E12, 10765.0], [1.53928788E12, 11856.7], [1.53928758E12, 11834.6], [1.53928752E12, 11895.2], [1.5392877E12, 11761.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928764E12, 15319.359999999997], [1.53928734E12, 9177.829999999998], [1.53928782E12, 15257.959999999966], [1.53928728E12, 4680.609999999995], [1.53928776E12, 15331.59], [1.53928746E12, 15133.019999999968], [1.5392874E12, 13232.280000000002], [1.53928788E12, 17294.13000000001], [1.53928758E12, 15265.239999999998], [1.53928752E12, 15320.760000000002], [1.5392877E12, 15345.879999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928764E12, 12593.399999999998], [1.53928734E12, 7351.149999999997], [1.53928782E12, 12516.0], [1.53928728E12, 3243.1499999999996], [1.53928776E12, 12535.849999999997], [1.53928746E12, 12509.15], [1.5392874E12, 11384.999999999995], [1.53928788E12, 12845.7], [1.53928758E12, 12630.8], [1.53928752E12, 12726.899999999998], [1.5392877E12, 12564.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928788E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 208146.0, "series": [{"data": [[8.0, 11150.0], [17.0, 10839.0], [12.0, 11352.0], [13.0, 10470.0], [29.0, 9868.0], [15.0, 3074.5], [30.0, 9916.0], [31.0, 9957.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 17278.0], [0.0, 208146.0], [17.0, 13311.0], [12.0, 13223.0], [13.0, 1.0], [29.0, 13217.0], [15.0, 1.0], [30.0, 12292.0], [31.0, 11263.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 208146.0, "series": [{"data": [[8.0, 11150.0], [17.0, 10838.5], [12.0, 11351.0], [13.0, 10469.0], [29.0, 9867.0], [15.0, 3074.0], [30.0, 9915.0], [31.0, 9957.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 17278.0], [0.0, 208146.0], [17.0, 13311.0], [12.0, 13223.0], [13.0, 1.0], [29.0, 13217.0], [15.0, 1.0], [30.0, 12292.0], [31.0, 11263.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.53928728E12, "maxY": 32.25, "series": [{"data": [[1.53928764E12, 31.866666666666667], [1.53928734E12, 16.15], [1.53928782E12, 30.633333333333333], [1.53928728E12, 16.4], [1.53928776E12, 32.25], [1.53928746E12, 13.666666666666666], [1.5392874E12, 14.066666666666666], [1.53928788E12, 0.13333333333333333], [1.53928758E12, 30.7], [1.53928752E12, 18.15], [1.5392877E12, 31.916666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928788E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928728E12, "maxY": 17.45, "series": [{"data": [[1.53928764E12, 13.516666666666667], [1.53928734E12, 14.183333333333334], [1.53928782E12, 14.133333333333333], [1.53928728E12, 14.383333333333333], [1.53928776E12, 13.783333333333333], [1.53928746E12, 12.25], [1.5392874E12, 12.3], [1.53928788E12, 4.3], [1.53928758E12, 13.633333333333333], [1.53928752E12, 12.65], [1.5392877E12, 13.833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928764E12, 0.5833333333333334], [1.53928734E12, 0.85], [1.53928782E12, 0.2833333333333333], [1.53928728E12, 0.9166666666666666], [1.53928776E12, 0.4666666666666667], [1.53928746E12, 0.23333333333333334], [1.5392874E12, 0.75], [1.53928788E12, 0.05], [1.53928758E12, 0.6833333333333333], [1.53928752E12, 0.35], [1.5392877E12, 0.4]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928764E12, 16.616666666666667], [1.53928734E12, 0.11666666666666667], [1.53928728E12, 0.08333333333333333], [1.53928794E12, 0.06666666666666667], [1.53928788E12, 3.4166666666666665], [1.53928758E12, 15.033333333333333], [1.53928752E12, 3.95], [1.53928782E12, 16.066666666666666], [1.53928776E12, 17.45], [1.53928746E12, 0.18333333333333332], [1.5392874E12, 0.016666666666666666], [1.539288E12, 0.03333333333333333], [1.5392877E12, 16.533333333333335]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928764E12, 0.15], [1.53928782E12, 0.15], [1.53928728E12, 0.016666666666666666], [1.53928776E12, 0.21666666666666667], [1.53928788E12, 0.6], [1.53928758E12, 0.35], [1.53928752E12, 0.2], [1.5392877E12, 0.15]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.539288E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928728E12, "maxY": 13.883333333333333, "series": [{"data": [[1.53928764E12, 0.5833333333333334], [1.53928734E12, 0.9], [1.53928782E12, 0.25], [1.53928728E12, 0.9666666666666667], [1.53928776E12, 0.48333333333333334], [1.53928746E12, 0.23333333333333334], [1.5392874E12, 0.7], [1.53928788E12, 0.55], [1.53928758E12, 0.7666666666666667], [1.53928752E12, 0.45], [1.5392877E12, 0.5]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928764E12, 0.5833333333333334], [1.53928734E12, 0.85], [1.53928782E12, 0.2833333333333333], [1.53928728E12, 0.9166666666666666], [1.53928776E12, 0.4666666666666667], [1.53928746E12, 0.23333333333333334], [1.5392874E12, 0.75], [1.53928788E12, 0.05], [1.53928758E12, 0.6833333333333333], [1.53928752E12, 0.35], [1.5392877E12, 0.4]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928764E12, 12.933333333333334], [1.53928734E12, 13.283333333333333], [1.53928782E12, 13.883333333333333], [1.53928728E12, 13.416666666666666], [1.53928776E12, 13.3], [1.53928746E12, 12.016666666666667], [1.5392874E12, 11.6], [1.53928788E12, 3.75], [1.53928758E12, 12.866666666666667], [1.53928752E12, 12.2], [1.5392877E12, 13.333333333333334]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928764E12, 4.45], [1.53928782E12, 3.683333333333333], [1.53928728E12, 0.016666666666666666], [1.53928776E12, 4.35], [1.53928746E12, 0.08333333333333333], [1.53928794E12, 0.016666666666666666], [1.53928788E12, 0.8666666666666667], [1.53928758E12, 4.716666666666667], [1.53928752E12, 1.7166666666666666], [1.5392877E12, 4.3]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928764E12, 7.966666666666667], [1.53928734E12, 0.11666666666666667], [1.53928728E12, 0.06666666666666667], [1.53928794E12, 0.03333333333333333], [1.53928788E12, 1.85], [1.53928758E12, 6.066666666666666], [1.53928752E12, 1.3666666666666667], [1.53928782E12, 8.8], [1.53928776E12, 8.983333333333333], [1.53928746E12, 0.1], [1.5392874E12, 0.016666666666666666], [1.539288E12, 0.016666666666666666], [1.5392877E12, 8.233333333333333]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928764E12, 4.35], [1.53928782E12, 3.7333333333333334], [1.53928728E12, 0.016666666666666666], [1.53928776E12, 4.333333333333333], [1.53928794E12, 0.016666666666666666], [1.53928788E12, 1.3], [1.53928758E12, 4.6], [1.53928752E12, 1.0666666666666667], [1.539288E12, 0.016666666666666666], [1.5392877E12, 4.15]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.539288E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
