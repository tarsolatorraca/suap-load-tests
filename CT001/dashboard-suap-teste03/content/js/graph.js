/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 214019.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 2.0], [6.5, 2.0], [6.6, 7.0], [6.7, 598.0], [6.8, 608.0], [6.9, 622.0], [7.0, 664.0], [7.1, 736.0], [7.2, 946.0], [7.3, 1252.0], [7.4, 1335.0], [7.5, 1397.0], [7.6, 1463.0], [7.7, 1894.0], [7.8, 1989.0], [7.9, 2000.0], [8.0, 2048.0], [8.1, 2234.0], [8.2, 2324.0], [8.3, 2427.0], [8.4, 2520.0], [8.5, 2658.0], [8.6, 2780.0], [8.7, 2788.0], [8.8, 2879.0], [8.9, 3049.0], [9.0, 3140.0], [9.1, 3191.0], [9.2, 3421.0], [9.3, 3445.0], [9.4, 3542.0], [9.5, 3813.0], [9.6, 3838.0], [9.7, 3913.0], [9.8, 3958.0], [9.9, 3963.0], [10.0, 3995.0], [10.1, 4329.0], [10.2, 4562.0], [10.3, 4687.0], [10.4, 4894.0], [10.5, 4992.0], [10.6, 5086.0], [10.7, 5180.0], [10.8, 5309.0], [10.9, 5432.0], [11.0, 5556.0], [11.1, 5706.0], [11.2, 5874.0], [11.3, 5960.0], [11.4, 6031.0], [11.5, 6078.0], [11.6, 6316.0], [11.7, 6371.0], [11.8, 6646.0], [11.9, 7164.0], [12.0, 7164.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7172.0], [13.9, 7337.0], [14.0, 7419.0], [14.1, 7420.0], [14.2, 7420.0], [14.3, 7420.0], [14.4, 7423.0], [14.5, 7423.0], [14.6, 7423.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7427.0], [16.5, 7427.0], [16.6, 7427.0], [16.7, 7428.0], [16.8, 7428.0], [16.9, 7676.0], [17.0, 7678.0], [17.1, 7679.0], [17.2, 7679.0], [17.3, 7679.0], [17.4, 7679.0], [17.5, 7679.0], [17.6, 7679.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7684.0], [19.0, 7684.0], [19.1, 7735.0], [19.2, 7807.0], [19.3, 7932.0], [19.4, 7932.0], [19.5, 7932.0], [19.6, 7933.0], [19.7, 7935.0], [19.8, 7935.0], [19.9, 7935.0], [20.0, 7935.0], [20.1, 7935.0], [20.2, 7935.0], [20.3, 7935.0], [20.4, 7935.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7939.0], [21.4, 8114.0], [21.5, 8188.0], [21.6, 8188.0], [21.7, 8191.0], [21.8, 8191.0], [21.9, 8191.0], [22.0, 8191.0], [22.1, 8191.0], [22.2, 8191.0], [22.3, 8192.0], [22.4, 8192.0], [22.5, 8192.0], [22.6, 8192.0], [22.7, 8192.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8196.0], [23.2, 8202.0], [23.3, 8369.0], [23.4, 8446.0], [23.5, 8447.0], [23.6, 8447.0], [23.7, 8447.0], [23.8, 8448.0], [23.9, 8448.0], [24.0, 8448.0], [24.1, 8448.0], [24.2, 8448.0], [24.3, 8475.0], [24.4, 8626.0], [24.5, 8699.0], [24.6, 8699.0], [24.7, 8702.0], [24.8, 8703.0], [24.9, 8703.0], [25.0, 8703.0], [25.1, 8703.0], [25.2, 8703.0], [25.3, 8703.0], [25.4, 8703.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8704.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8706.0], [27.0, 8707.0], [27.1, 8708.0], [27.2, 8955.0], [27.3, 8959.0], [27.4, 8959.0], [27.5, 8959.0], [27.6, 8959.0], [27.7, 8960.0], [27.8, 8960.0], [27.9, 8960.0], [28.0, 8960.0], [28.1, 8960.0], [28.2, 8963.0], [28.3, 8964.0], [28.4, 8998.0], [28.5, 9127.0], [28.6, 9167.0], [28.7, 9211.0], [28.8, 9212.0], [28.9, 9212.0], [29.0, 9212.0], [29.1, 9212.0], [29.2, 9214.0], [29.3, 9215.0], [29.4, 9215.0], [29.5, 9215.0], [29.6, 9215.0], [29.7, 9215.0], [29.8, 9215.0], [29.9, 9215.0], [30.0, 9215.0], [30.1, 9216.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9219.0], [30.6, 9219.0], [30.7, 9220.0], [30.8, 9220.0], [30.9, 9335.0], [31.0, 9364.0], [31.1, 9432.0], [31.2, 9467.0], [31.3, 9471.0], [31.4, 9471.0], [31.5, 9472.0], [31.6, 9475.0], [31.7, 9476.0], [31.8, 9476.0], [31.9, 9516.0], [32.0, 9530.0], [32.1, 9569.0], [32.2, 9591.0], [32.3, 9646.0], [32.4, 9698.0], [32.5, 9723.0], [32.6, 9724.0], [32.7, 9724.0], [32.8, 9726.0], [32.9, 9727.0], [33.0, 9727.0], [33.1, 9727.0], [33.2, 9727.0], [33.3, 9727.0], [33.4, 9727.0], [33.5, 9728.0], [33.6, 9728.0], [33.7, 9728.0], [33.8, 9728.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9732.0], [34.4, 9745.0], [34.5, 9751.0], [34.6, 9792.0], [34.7, 9820.0], [34.8, 9854.0], [34.9, 9869.0], [35.0, 9915.0], [35.1, 9938.0], [35.2, 9946.0], [35.3, 9953.0], [35.4, 9961.0], [35.5, 9980.0], [35.6, 9984.0], [35.7, 9984.0], [35.8, 9984.0], [35.9, 10012.0], [36.0, 10040.0], [36.1, 10058.0], [36.2, 10075.0], [36.3, 10094.0], [36.4, 10101.0], [36.5, 10110.0], [36.6, 10112.0], [36.7, 10128.0], [36.8, 10133.0], [36.9, 10166.0], [37.0, 10172.0], [37.1, 10200.0], [37.2, 10222.0], [37.3, 10231.0], [37.4, 10236.0], [37.5, 10239.0], [37.6, 10239.0], [37.7, 10240.0], [37.8, 10240.0], [37.9, 10240.0], [38.0, 10240.0], [38.1, 10240.0], [38.2, 10240.0], [38.3, 10240.0], [38.4, 10240.0], [38.5, 10240.0], [38.6, 10243.0], [38.7, 10276.0], [38.8, 10305.0], [38.9, 10315.0], [39.0, 10320.0], [39.1, 10340.0], [39.2, 10356.0], [39.3, 10371.0], [39.4, 10401.0], [39.5, 10410.0], [39.6, 10422.0], [39.7, 10448.0], [39.8, 10479.0], [39.9, 10495.0], [40.0, 10496.0], [40.1, 10496.0], [40.2, 10496.0], [40.3, 10496.0], [40.4, 10500.0], [40.5, 10507.0], [40.6, 10517.0], [40.7, 10536.0], [40.8, 10543.0], [40.9, 10548.0], [41.0, 10567.0], [41.1, 10581.0], [41.2, 10604.0], [41.3, 10623.0], [41.4, 10624.0], [41.5, 10652.0], [41.6, 10670.0], [41.7, 10677.0], [41.8, 10680.0], [41.9, 10702.0], [42.0, 10727.0], [42.1, 10743.0], [42.2, 10748.0], [42.3, 10751.0], [42.4, 10751.0], [42.5, 10751.0], [42.6, 10751.0], [42.7, 10751.0], [42.8, 10752.0], [42.9, 10752.0], [43.0, 10757.0], [43.1, 10813.0], [43.2, 10824.0], [43.3, 10871.0], [43.4, 10879.0], [43.5, 10904.0], [43.6, 10911.0], [43.7, 10976.0], [43.8, 10990.0], [43.9, 11006.0], [44.0, 11007.0], [44.1, 11007.0], [44.2, 11007.0], [44.3, 11008.0], [44.4, 11008.0], [44.5, 11008.0], [44.6, 11008.0], [44.7, 11011.0], [44.8, 11027.0], [44.9, 11045.0], [45.0, 11057.0], [45.1, 11076.0], [45.2, 11113.0], [45.3, 11114.0], [45.4, 11134.0], [45.5, 11195.0], [45.6, 11207.0], [45.7, 11224.0], [45.8, 11245.0], [45.9, 11261.0], [46.0, 11263.0], [46.1, 11263.0], [46.2, 11264.0], [46.3, 11264.0], [46.4, 11264.0], [46.5, 11264.0], [46.6, 11288.0], [46.7, 11365.0], [46.8, 11403.0], [46.9, 11463.0], [47.0, 11477.0], [47.1, 11482.0], [47.2, 11494.0], [47.3, 11516.0], [47.4, 11520.0], [47.5, 11520.0], [47.6, 11520.0], [47.7, 11524.0], [47.8, 11576.0], [47.9, 11599.0], [48.0, 11649.0], [48.1, 11704.0], [48.2, 11744.0], [48.3, 11771.0], [48.4, 11775.0], [48.5, 11775.0], [48.6, 11776.0], [48.7, 11776.0], [48.8, 11776.0], [48.9, 11776.0], [49.0, 11776.0], [49.1, 11776.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11778.0], [49.5, 11779.0], [49.6, 11779.0], [49.7, 11789.0], [49.8, 11801.0], [49.9, 11874.0], [50.0, 11884.0], [50.1, 11920.0], [50.2, 11944.0], [50.3, 11963.0], [50.4, 11999.0], [50.5, 12007.0], [50.6, 12028.0], [50.7, 12031.0], [50.8, 12098.0], [50.9, 12116.0], [51.0, 12141.0], [51.1, 12241.0], [51.2, 12283.0], [51.3, 12284.0], [51.4, 12284.0], [51.5, 12287.0], [51.6, 12287.0], [51.7, 12288.0], [51.8, 12288.0], [51.9, 12288.0], [52.0, 12297.0], [52.1, 12371.0], [52.2, 12387.0], [52.3, 12453.0], [52.4, 12507.0], [52.5, 12539.0], [52.6, 12540.0], [52.7, 12543.0], [52.8, 12544.0], [52.9, 12547.0], [53.0, 12551.0], [53.1, 12569.0], [53.2, 12595.0], [53.3, 12612.0], [53.4, 12638.0], [53.5, 12771.0], [53.6, 12796.0], [53.7, 12799.0], [53.8, 12800.0], [53.9, 12800.0], [54.0, 12852.0], [54.1, 12877.0], [54.2, 12891.0], [54.3, 12941.0], [54.4, 13006.0], [54.5, 13056.0], [54.6, 13056.0], [54.7, 13060.0], [54.8, 13081.0], [54.9, 13124.0], [55.0, 13231.0], [55.1, 13297.0], [55.2, 13307.0], [55.3, 13307.0], [55.4, 13307.0], [55.5, 13307.0], [55.6, 13307.0], [55.7, 13307.0], [55.8, 13308.0], [55.9, 13308.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13308.0], [57.9, 13309.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13313.0], [75.4, 13313.0], [75.5, 13314.0], [75.6, 13315.0], [75.7, 13315.0], [75.8, 13315.0], [75.9, 13315.0], [76.0, 13315.0], [76.1, 13315.0], [76.2, 13315.0], [76.3, 13315.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13316.0], [76.8, 13316.0], [76.9, 13316.0], [77.0, 13316.0], [77.1, 13316.0], [77.2, 13316.0], [77.3, 13316.0], [77.4, 13316.0], [77.5, 13316.0], [77.6, 13316.0], [77.7, 13316.0], [77.8, 13316.0], [77.9, 13316.0], [78.0, 13361.0], [78.1, 13380.0], [78.2, 13397.0], [78.3, 13464.0], [78.4, 13550.0], [78.5, 13567.0], [78.6, 13568.0], [78.7, 13568.0], [78.8, 13572.0], [78.9, 13573.0], [79.0, 13819.0], [79.1, 13820.0], [79.2, 13820.0], [79.3, 13820.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13823.0], [79.8, 13823.0], [79.9, 13823.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13823.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13823.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13826.0], [82.4, 13827.0], [82.5, 13827.0], [82.6, 13827.0], [82.7, 13828.0], [82.8, 13828.0], [82.9, 13828.0], [83.0, 13828.0], [83.1, 14075.0], [83.2, 14076.0], [83.3, 14079.0], [83.4, 14080.0], [83.5, 14080.0], [83.6, 14137.0], [83.7, 14332.0], [83.8, 14332.0], [83.9, 14332.0], [84.0, 14332.0], [84.1, 14332.0], [84.2, 14332.0], [84.3, 14334.0], [84.4, 14334.0], [84.5, 14334.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14335.0], [85.2, 14335.0], [85.3, 14335.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14336.0], [86.6, 14336.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14339.0], [88.0, 14339.0], [88.1, 14339.0], [88.2, 14340.0], [88.3, 14402.0], [88.4, 14587.0], [88.5, 14591.0], [88.6, 14591.0], [88.7, 14591.0], [88.8, 14592.0], [88.9, 14592.0], [89.0, 14595.0], [89.1, 14596.0], [89.2, 14596.0], [89.3, 14756.0], [89.4, 14844.0], [89.5, 14845.0], [89.6, 14847.0], [89.7, 14847.0], [89.8, 14847.0], [89.9, 14847.0], [90.0, 14848.0], [90.1, 14848.0], [90.2, 14848.0], [90.3, 14848.0], [90.4, 14865.0], [90.5, 14875.0], [90.6, 15104.0], [90.7, 15166.0], [90.8, 15355.0], [90.9, 15359.0], [91.0, 15359.0], [91.1, 15360.0], [91.2, 15360.0], [91.3, 15614.0], [91.4, 15615.0], [91.5, 15872.0], [91.6, 16126.0], [91.7, 16127.0], [91.8, 16128.0], [91.9, 16174.0], [92.0, 16383.0], [92.1, 16384.0], [92.2, 16387.0], [92.3, 16731.0], [92.4, 16898.0], [92.5, 17087.0], [92.6, 17156.0], [92.7, 18153.0], [92.8, 18159.0], [92.9, 18175.0], [93.0, 18740.0], [93.1, 19199.0], [93.2, 19478.0], [93.3, 20479.0], [93.4, 22017.0], [93.5, 24608.0], [93.6, 26366.0], [93.7, 26367.0], [93.8, 26372.0], [93.9, 27388.0], [94.0, 27388.0], [94.1, 29695.0], [94.2, 33025.0], [94.3, 35793.0], [94.4, 40955.0], [94.5, 40959.0], [94.6, 52227.0], [94.7, 52757.0], [94.8, 52762.0], [94.9, 53247.0], [95.0, 53276.0], [95.1, 58719.0], [95.2, 58774.0], [95.3, 58813.0], [95.4, 63999.0], [95.5, 64000.0], [95.6, 71679.0], [95.7, 71680.0], [95.8, 73728.0], [95.9, 74752.0], [96.0, 82432.0], [96.1, 95232.0], [96.2, 98957.0], [96.3, 105468.0], [96.4, 105472.0], [96.5, 105728.0], [96.6, 105728.0], [96.7, 106240.0], [96.8, 106756.0], [96.9, 107004.0], [97.0, 107008.0], [97.1, 107008.0], [97.2, 107012.0], [97.3, 107264.0], [97.4, 114219.0], [97.5, 114687.0], [97.6, 114940.0], [97.7, 115711.0], [97.8, 115968.0], [97.9, 118272.0], [98.0, 118275.0], [98.1, 122623.0], [98.2, 122876.0], [98.3, 122880.0], [98.4, 131068.0], [98.5, 131072.0], [98.6, 131072.0], [98.7, 131583.0], [98.8, 138492.0], [98.9, 138492.0], [99.0, 143819.0], [99.1, 144127.0], [99.2, 144128.0], [99.3, 146176.0], [99.4, 146176.0], [99.5, 146944.0], [99.6, 148992.0], [99.7, 170496.0], [99.8, 210432.0], [99.9, 211711.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 566.0], [2.9, 620.0], [3.0, 651.0], [3.1, 677.0], [3.2, 698.0], [3.3, 722.0], [3.4, 761.0], [3.5, 776.0], [3.6, 796.0], [3.7, 828.0], [3.8, 849.0], [3.9, 887.0], [4.0, 919.0], [4.1, 949.0], [4.2, 980.0], [4.3, 1019.0], [4.4, 1068.0], [4.5, 1101.0], [4.6, 1141.0], [4.7, 1179.0], [4.8, 1229.0], [4.9, 1256.0], [5.0, 1281.0], [5.1, 1322.0], [5.2, 1353.0], [5.3, 1383.0], [5.4, 1410.0], [5.5, 1438.0], [5.6, 1478.0], [5.7, 1539.0], [5.8, 1614.0], [5.9, 1649.0], [6.0, 1671.0], [6.1, 1740.0], [6.2, 1823.0], [6.3, 1872.0], [6.4, 1935.0], [6.5, 1964.0], [6.6, 1992.0], [6.7, 2014.0], [6.8, 2033.0], [6.9, 2060.0], [7.0, 2083.0], [7.1, 2118.0], [7.2, 2135.0], [7.3, 2158.0], [7.4, 2180.0], [7.5, 2198.0], [7.6, 2233.0], [7.7, 2257.0], [7.8, 2312.0], [7.9, 2331.0], [8.0, 2368.0], [8.1, 2438.0], [8.2, 2466.0], [8.3, 2503.0], [8.4, 2524.0], [8.5, 2563.0], [8.6, 2589.0], [8.7, 2633.0], [8.8, 2681.0], [8.9, 2716.0], [9.0, 2750.0], [9.1, 2801.0], [9.2, 2845.0], [9.3, 2877.0], [9.4, 2926.0], [9.5, 2985.0], [9.6, 3034.0], [9.7, 3072.0], [9.8, 3129.0], [9.9, 3154.0], [10.0, 3200.0], [10.1, 3236.0], [10.2, 3285.0], [10.3, 3322.0], [10.4, 3388.0], [10.5, 3407.0], [10.6, 3442.0], [10.7, 3481.0], [10.8, 3541.0], [10.9, 3578.0], [11.0, 3620.0], [11.1, 3657.0], [11.2, 3698.0], [11.3, 3738.0], [11.4, 3764.0], [11.5, 3800.0], [11.6, 3830.0], [11.7, 3853.0], [11.8, 3889.0], [11.9, 3939.0], [12.0, 3981.0], [12.1, 4021.0], [12.2, 4070.0], [12.3, 4088.0], [12.4, 4117.0], [12.5, 4142.0], [12.6, 4165.0], [12.7, 4187.0], [12.8, 4232.0], [12.9, 4272.0], [13.0, 4328.0], [13.1, 4375.0], [13.2, 4405.0], [13.3, 4438.0], [13.4, 4479.0], [13.5, 4511.0], [13.6, 4580.0], [13.7, 4631.0], [13.8, 4659.0], [13.9, 4730.0], [14.0, 4797.0], [14.1, 4861.0], [14.2, 4905.0], [14.3, 4979.0], [14.4, 5033.0], [14.5, 5086.0], [14.6, 5117.0], [14.7, 5152.0], [14.8, 5200.0], [14.9, 5242.0], [15.0, 5274.0], [15.1, 5306.0], [15.2, 5363.0], [15.3, 5426.0], [15.4, 5456.0], [15.5, 5518.0], [15.6, 5581.0], [15.7, 5723.0], [15.8, 5839.0], [15.9, 5947.0], [16.0, 6038.0], [16.1, 6098.0], [16.2, 6164.0], [16.3, 6199.0], [16.4, 6264.0], [16.5, 6299.0], [16.6, 6349.0], [16.7, 6409.0], [16.8, 6459.0], [16.9, 6580.0], [17.0, 6670.0], [17.1, 6776.0], [17.2, 6896.0], [17.3, 7030.0], [17.4, 7165.0], [17.5, 7167.0], [17.6, 7168.0], [17.7, 7168.0], [17.8, 7168.0], [17.9, 7168.0], [18.0, 7174.0], [18.1, 7267.0], [18.2, 7333.0], [18.3, 7420.0], [18.4, 7423.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7428.0], [18.9, 7459.0], [19.0, 7529.0], [19.1, 7612.0], [19.2, 7676.0], [19.3, 7679.0], [19.4, 7679.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7684.0], [20.0, 7762.0], [20.1, 7842.0], [20.2, 7930.0], [20.3, 7932.0], [20.4, 7935.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7937.0], [21.0, 7988.0], [21.1, 8047.0], [21.2, 8145.0], [21.3, 8191.0], [21.4, 8192.0], [21.5, 8192.0], [21.6, 8192.0], [21.7, 8195.0], [21.8, 8252.0], [21.9, 8308.0], [22.0, 8360.0], [22.1, 8400.0], [22.2, 8444.0], [22.3, 8448.0], [22.4, 8449.0], [22.5, 8493.0], [22.6, 8551.0], [22.7, 8580.0], [22.8, 8651.0], [22.9, 8700.0], [23.0, 8703.0], [23.1, 8704.0], [23.2, 8704.0], [23.3, 8704.0], [23.4, 8704.0], [23.5, 8708.0], [23.6, 8747.0], [23.7, 8892.0], [23.8, 8959.0], [23.9, 8960.0], [24.0, 8964.0], [24.1, 9075.0], [24.2, 9185.0], [24.3, 9212.0], [24.4, 9215.0], [24.5, 9216.0], [24.6, 9216.0], [24.7, 9216.0], [24.8, 9220.0], [24.9, 9261.0], [25.0, 9370.0], [25.1, 9438.0], [25.2, 9464.0], [25.3, 9472.0], [25.4, 9489.0], [25.5, 9534.0], [25.6, 9562.0], [25.7, 9589.0], [25.8, 9627.0], [25.9, 9650.0], [26.0, 9680.0], [26.1, 9694.0], [26.2, 9714.0], [26.3, 9726.0], [26.4, 9728.0], [26.5, 9728.0], [26.6, 9728.0], [26.7, 9728.0], [26.8, 9731.0], [26.9, 9733.0], [27.0, 9752.0], [27.1, 9763.0], [27.2, 9778.0], [27.3, 9786.0], [27.4, 9793.0], [27.5, 9802.0], [27.6, 9811.0], [27.7, 9818.0], [27.8, 9829.0], [27.9, 9840.0], [28.0, 9851.0], [28.1, 9860.0], [28.2, 9872.0], [28.3, 9884.0], [28.4, 9895.0], [28.5, 9901.0], [28.6, 9913.0], [28.7, 9926.0], [28.8, 9933.0], [28.9, 9939.0], [29.0, 9948.0], [29.1, 9958.0], [29.2, 9968.0], [29.3, 9976.0], [29.4, 9981.0], [29.5, 9984.0], [29.6, 9989.0], [29.7, 9995.0], [29.8, 10002.0], [29.9, 10007.0], [30.0, 10015.0], [30.1, 10025.0], [30.2, 10032.0], [30.3, 10036.0], [30.4, 10041.0], [30.5, 10044.0], [30.6, 10053.0], [30.7, 10059.0], [30.8, 10063.0], [30.9, 10068.0], [31.0, 10073.0], [31.1, 10079.0], [31.2, 10082.0], [31.3, 10086.0], [31.4, 10090.0], [31.5, 10094.0], [31.6, 10098.0], [31.7, 10105.0], [31.8, 10112.0], [31.9, 10117.0], [32.0, 10124.0], [32.1, 10127.0], [32.2, 10134.0], [32.3, 10139.0], [32.4, 10142.0], [32.5, 10149.0], [32.6, 10153.0], [32.7, 10157.0], [32.8, 10160.0], [32.9, 10168.0], [33.0, 10175.0], [33.1, 10181.0], [33.2, 10188.0], [33.3, 10192.0], [33.4, 10196.0], [33.5, 10205.0], [33.6, 10209.0], [33.7, 10214.0], [33.8, 10220.0], [33.9, 10226.0], [34.0, 10230.0], [34.1, 10234.0], [34.2, 10238.0], [34.3, 10240.0], [34.4, 10240.0], [34.5, 10240.0], [34.6, 10241.0], [34.7, 10244.0], [34.8, 10247.0], [34.9, 10252.0], [35.0, 10254.0], [35.1, 10259.0], [35.2, 10267.0], [35.3, 10273.0], [35.4, 10277.0], [35.5, 10281.0], [35.6, 10285.0], [35.7, 10291.0], [35.8, 10296.0], [35.9, 10302.0], [36.0, 10307.0], [36.1, 10311.0], [36.2, 10319.0], [36.3, 10325.0], [36.4, 10329.0], [36.5, 10332.0], [36.6, 10343.0], [36.7, 10348.0], [36.8, 10351.0], [36.9, 10354.0], [37.0, 10360.0], [37.1, 10364.0], [37.2, 10368.0], [37.3, 10374.0], [37.4, 10377.0], [37.5, 10380.0], [37.6, 10382.0], [37.7, 10385.0], [37.8, 10389.0], [37.9, 10393.0], [38.0, 10398.0], [38.1, 10403.0], [38.2, 10407.0], [38.3, 10410.0], [38.4, 10412.0], [38.5, 10415.0], [38.6, 10417.0], [38.7, 10421.0], [38.8, 10423.0], [38.9, 10426.0], [39.0, 10430.0], [39.1, 10433.0], [39.2, 10436.0], [39.3, 10440.0], [39.4, 10442.0], [39.5, 10444.0], [39.6, 10448.0], [39.7, 10450.0], [39.8, 10453.0], [39.9, 10458.0], [40.0, 10461.0], [40.1, 10464.0], [40.2, 10469.0], [40.3, 10472.0], [40.4, 10475.0], [40.5, 10477.0], [40.6, 10480.0], [40.7, 10484.0], [40.8, 10487.0], [40.9, 10490.0], [41.0, 10494.0], [41.1, 10495.0], [41.2, 10496.0], [41.3, 10499.0], [41.4, 10501.0], [41.5, 10505.0], [41.6, 10506.0], [41.7, 10509.0], [41.8, 10511.0], [41.9, 10516.0], [42.0, 10519.0], [42.1, 10526.0], [42.2, 10530.0], [42.3, 10533.0], [42.4, 10537.0], [42.5, 10542.0], [42.6, 10546.0], [42.7, 10549.0], [42.8, 10553.0], [42.9, 10555.0], [43.0, 10558.0], [43.1, 10563.0], [43.2, 10566.0], [43.3, 10569.0], [43.4, 10573.0], [43.5, 10577.0], [43.6, 10580.0], [43.7, 10583.0], [43.8, 10585.0], [43.9, 10591.0], [44.0, 10595.0], [44.1, 10598.0], [44.2, 10602.0], [44.3, 10605.0], [44.4, 10610.0], [44.5, 10614.0], [44.6, 10618.0], [44.7, 10623.0], [44.8, 10627.0], [44.9, 10630.0], [45.0, 10634.0], [45.1, 10638.0], [45.2, 10641.0], [45.3, 10644.0], [45.4, 10649.0], [45.5, 10653.0], [45.6, 10656.0], [45.7, 10658.0], [45.8, 10660.0], [45.9, 10665.0], [46.0, 10668.0], [46.1, 10671.0], [46.2, 10675.0], [46.3, 10678.0], [46.4, 10680.0], [46.5, 10683.0], [46.6, 10686.0], [46.7, 10689.0], [46.8, 10692.0], [46.9, 10694.0], [47.0, 10697.0], [47.1, 10701.0], [47.2, 10704.0], [47.3, 10708.0], [47.4, 10713.0], [47.5, 10716.0], [47.6, 10718.0], [47.7, 10724.0], [47.8, 10726.0], [47.9, 10728.0], [48.0, 10731.0], [48.1, 10734.0], [48.2, 10738.0], [48.3, 10741.0], [48.4, 10745.0], [48.5, 10748.0], [48.6, 10751.0], [48.7, 10752.0], [48.8, 10755.0], [48.9, 10757.0], [49.0, 10759.0], [49.1, 10762.0], [49.2, 10765.0], [49.3, 10767.0], [49.4, 10770.0], [49.5, 10776.0], [49.6, 10779.0], [49.7, 10784.0], [49.8, 10787.0], [49.9, 10790.0], [50.0, 10793.0], [50.1, 10798.0], [50.2, 10801.0], [50.3, 10807.0], [50.4, 10810.0], [50.5, 10814.0], [50.6, 10816.0], [50.7, 10821.0], [50.8, 10824.0], [50.9, 10828.0], [51.0, 10831.0], [51.1, 10834.0], [51.2, 10838.0], [51.3, 10840.0], [51.4, 10843.0], [51.5, 10846.0], [51.6, 10851.0], [51.7, 10855.0], [51.8, 10858.0], [51.9, 10860.0], [52.0, 10865.0], [52.1, 10868.0], [52.2, 10873.0], [52.3, 10875.0], [52.4, 10880.0], [52.5, 10883.0], [52.6, 10886.0], [52.7, 10889.0], [52.8, 10893.0], [52.9, 10896.0], [53.0, 10900.0], [53.1, 10902.0], [53.2, 10906.0], [53.3, 10908.0], [53.4, 10910.0], [53.5, 10913.0], [53.6, 10916.0], [53.7, 10919.0], [53.8, 10922.0], [53.9, 10924.0], [54.0, 10928.0], [54.1, 10933.0], [54.2, 10938.0], [54.3, 10942.0], [54.4, 10944.0], [54.5, 10948.0], [54.6, 10953.0], [54.7, 10956.0], [54.8, 10958.0], [54.9, 10961.0], [55.0, 10963.0], [55.1, 10967.0], [55.2, 10970.0], [55.3, 10972.0], [55.4, 10975.0], [55.5, 10978.0], [55.6, 10981.0], [55.7, 10985.0], [55.8, 10990.0], [55.9, 10993.0], [56.0, 10995.0], [56.1, 11001.0], [56.2, 11002.0], [56.3, 11006.0], [56.4, 11007.0], [56.5, 11008.0], [56.6, 11012.0], [56.7, 11015.0], [56.8, 11018.0], [56.9, 11022.0], [57.0, 11026.0], [57.1, 11029.0], [57.2, 11033.0], [57.3, 11038.0], [57.4, 11040.0], [57.5, 11044.0], [57.6, 11046.0], [57.7, 11048.0], [57.8, 11052.0], [57.9, 11055.0], [58.0, 11060.0], [58.1, 11066.0], [58.2, 11071.0], [58.3, 11075.0], [58.4, 11079.0], [58.5, 11084.0], [58.6, 11086.0], [58.7, 11091.0], [58.8, 11095.0], [58.9, 11097.0], [59.0, 11101.0], [59.1, 11106.0], [59.2, 11112.0], [59.3, 11115.0], [59.4, 11119.0], [59.5, 11123.0], [59.6, 11126.0], [59.7, 11130.0], [59.8, 11133.0], [59.9, 11137.0], [60.0, 11142.0], [60.1, 11148.0], [60.2, 11150.0], [60.3, 11154.0], [60.4, 11159.0], [60.5, 11162.0], [60.6, 11168.0], [60.7, 11171.0], [60.8, 11176.0], [60.9, 11181.0], [61.0, 11185.0], [61.1, 11190.0], [61.2, 11194.0], [61.3, 11197.0], [61.4, 11201.0], [61.5, 11204.0], [61.6, 11210.0], [61.7, 11213.0], [61.8, 11217.0], [61.9, 11220.0], [62.0, 11226.0], [62.1, 11235.0], [62.2, 11241.0], [62.3, 11243.0], [62.4, 11248.0], [62.5, 11253.0], [62.6, 11257.0], [62.7, 11261.0], [62.8, 11263.0], [62.9, 11264.0], [63.0, 11264.0], [63.1, 11267.0], [63.2, 11270.0], [63.3, 11274.0], [63.4, 11279.0], [63.5, 11283.0], [63.6, 11289.0], [63.7, 11293.0], [63.8, 11297.0], [63.9, 11300.0], [64.0, 11308.0], [64.1, 11313.0], [64.2, 11317.0], [64.3, 11321.0], [64.4, 11326.0], [64.5, 11331.0], [64.6, 11336.0], [64.7, 11341.0], [64.8, 11346.0], [64.9, 11353.0], [65.0, 11360.0], [65.1, 11364.0], [65.2, 11369.0], [65.3, 11372.0], [65.4, 11378.0], [65.5, 11385.0], [65.6, 11393.0], [65.7, 11397.0], [65.8, 11402.0], [65.9, 11406.0], [66.0, 11411.0], [66.1, 11415.0], [66.2, 11424.0], [66.3, 11426.0], [66.4, 11434.0], [66.5, 11438.0], [66.6, 11445.0], [66.7, 11448.0], [66.8, 11453.0], [66.9, 11457.0], [67.0, 11464.0], [67.1, 11470.0], [67.2, 11480.0], [67.3, 11486.0], [67.4, 11494.0], [67.5, 11500.0], [67.6, 11507.0], [67.7, 11514.0], [67.8, 11518.0], [67.9, 11520.0], [68.0, 11527.0], [68.1, 11531.0], [68.2, 11536.0], [68.3, 11544.0], [68.4, 11550.0], [68.5, 11553.0], [68.6, 11561.0], [68.7, 11570.0], [68.8, 11580.0], [68.9, 11586.0], [69.0, 11590.0], [69.1, 11596.0], [69.2, 11601.0], [69.3, 11612.0], [69.4, 11619.0], [69.5, 11627.0], [69.6, 11637.0], [69.7, 11641.0], [69.8, 11649.0], [69.9, 11658.0], [70.0, 11666.0], [70.1, 11671.0], [70.2, 11690.0], [70.3, 11700.0], [70.4, 11709.0], [70.5, 11714.0], [70.6, 11720.0], [70.7, 11727.0], [70.8, 11748.0], [70.9, 11761.0], [71.0, 11770.0], [71.1, 11775.0], [71.2, 11776.0], [71.3, 11776.0], [71.4, 11776.0], [71.5, 11779.0], [71.6, 11788.0], [71.7, 11797.0], [71.8, 11809.0], [71.9, 11815.0], [72.0, 11825.0], [72.1, 11833.0], [72.2, 11842.0], [72.3, 11850.0], [72.4, 11858.0], [72.5, 11864.0], [72.6, 11876.0], [72.7, 11887.0], [72.8, 11899.0], [72.9, 11907.0], [73.0, 11918.0], [73.1, 11929.0], [73.2, 11934.0], [73.3, 11944.0], [73.4, 11950.0], [73.5, 11955.0], [73.6, 11970.0], [73.7, 11988.0], [73.8, 11999.0], [73.9, 12015.0], [74.0, 12031.0], [74.1, 12036.0], [74.2, 12046.0], [74.3, 12053.0], [74.4, 12066.0], [74.5, 12074.0], [74.6, 12083.0], [74.7, 12089.0], [74.8, 12102.0], [74.9, 12116.0], [75.0, 12126.0], [75.1, 12134.0], [75.2, 12144.0], [75.3, 12151.0], [75.4, 12157.0], [75.5, 12164.0], [75.6, 12173.0], [75.7, 12185.0], [75.8, 12192.0], [75.9, 12198.0], [76.0, 12206.0], [76.1, 12215.0], [76.2, 12225.0], [76.3, 12238.0], [76.4, 12250.0], [76.5, 12261.0], [76.6, 12277.0], [76.7, 12284.0], [76.8, 12288.0], [76.9, 12294.0], [77.0, 12309.0], [77.1, 12323.0], [77.2, 12341.0], [77.3, 12350.0], [77.4, 12374.0], [77.5, 12384.0], [77.6, 12399.0], [77.7, 12407.0], [77.8, 12424.0], [77.9, 12435.0], [78.0, 12460.0], [78.1, 12471.0], [78.2, 12478.0], [78.3, 12496.0], [78.4, 12513.0], [78.5, 12533.0], [78.6, 12541.0], [78.7, 12547.0], [78.8, 12562.0], [78.9, 12572.0], [79.0, 12581.0], [79.1, 12597.0], [79.2, 12602.0], [79.3, 12631.0], [79.4, 12645.0], [79.5, 12665.0], [79.6, 12677.0], [79.7, 12692.0], [79.8, 12705.0], [79.9, 12721.0], [80.0, 12744.0], [80.1, 12754.0], [80.2, 12780.0], [80.3, 12799.0], [80.4, 12800.0], [80.5, 12808.0], [80.6, 12825.0], [80.7, 12839.0], [80.8, 12852.0], [80.9, 12865.0], [81.0, 12891.0], [81.1, 12910.0], [81.2, 12934.0], [81.3, 12962.0], [81.4, 12982.0], [81.5, 12999.0], [81.6, 13028.0], [81.7, 13055.0], [81.8, 13109.0], [81.9, 13122.0], [82.0, 13145.0], [82.1, 13163.0], [82.2, 13181.0], [82.3, 13194.0], [82.4, 13213.0], [82.5, 13229.0], [82.6, 13246.0], [82.7, 13255.0], [82.8, 13277.0], [82.9, 13286.0], [83.0, 13302.0], [83.1, 13307.0], [83.2, 13308.0], [83.3, 13308.0], [83.4, 13308.0], [83.5, 13308.0], [83.6, 13309.0], [83.7, 13310.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13311.0], [84.2, 13311.0], [84.3, 13311.0], [84.4, 13311.0], [84.5, 13311.0], [84.6, 13311.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13313.0], [88.9, 13313.0], [89.0, 13315.0], [89.1, 13315.0], [89.2, 13316.0], [89.3, 13316.0], [89.4, 13316.0], [89.5, 13328.0], [89.6, 13345.0], [89.7, 13360.0], [89.8, 13374.0], [89.9, 13389.0], [90.0, 13407.0], [90.1, 13424.0], [90.2, 13452.0], [90.3, 13490.0], [90.4, 13529.0], [90.5, 13568.0], [90.6, 13597.0], [90.7, 13629.0], [90.8, 13680.0], [90.9, 13718.0], [91.0, 13788.0], [91.1, 13820.0], [91.2, 13820.0], [91.3, 13823.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13824.0], [92.0, 13824.0], [92.1, 13827.0], [92.2, 13828.0], [92.3, 13871.0], [92.4, 13915.0], [92.5, 13979.0], [92.6, 14048.0], [92.7, 14076.0], [92.8, 14102.0], [92.9, 14185.0], [93.0, 14300.0], [93.1, 14332.0], [93.2, 14332.0], [93.3, 14334.0], [93.4, 14335.0], [93.5, 14335.0], [93.6, 14335.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14336.0], [94.2, 14336.0], [94.3, 14339.0], [94.4, 14340.0], [94.5, 14382.0], [94.6, 14455.0], [94.7, 14544.0], [94.8, 14592.0], [94.9, 14596.0], [95.0, 14647.0], [95.1, 14746.0], [95.2, 14845.0], [95.3, 14848.0], [95.4, 14848.0], [95.5, 14850.0], [95.6, 14915.0], [95.7, 14970.0], [95.8, 15047.0], [95.9, 15163.0], [96.0, 15246.0], [96.1, 15307.0], [96.2, 15360.0], [96.3, 15399.0], [96.4, 15479.0], [96.5, 15554.0], [96.6, 15616.0], [96.7, 15673.0], [96.8, 15843.0], [96.9, 15926.0], [97.0, 16074.0], [97.1, 16175.0], [97.2, 16383.0], [97.3, 16388.0], [97.4, 16567.0], [97.5, 16896.0], [97.6, 17157.0], [97.7, 17747.0], [97.8, 18486.0], [97.9, 19221.0], [98.0, 20475.0], [98.1, 21900.0], [98.2, 26371.0], [98.3, 29695.0], [98.4, 53440.0], [98.5, 54044.0], [98.6, 59407.0], [98.7, 71679.0], [98.8, 82432.0], [98.9, 101748.0], [99.0, 105728.0], [99.1, 106242.0], [99.2, 106496.0], [99.3, 107007.0], [99.4, 114688.0], [99.5, 115711.0], [99.6, 118276.0], [99.7, 131072.0], [99.8, 146172.0], [99.9, 154624.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 2.0], [5.6, 2.0], [5.7, 21.0], [5.8, 22.0], [5.9, 25.0], [6.0, 26.0], [6.1, 27.0], [6.2, 29.0], [6.3, 35.0], [6.4, 41.0], [6.5, 57.0], [6.6, 164.0], [6.7, 296.0], [6.8, 580.0], [6.9, 625.0], [7.0, 653.0], [7.1, 800.0], [7.2, 1144.0], [7.3, 1209.0], [7.4, 1245.0], [7.5, 1329.0], [7.6, 1360.0], [7.7, 1368.0], [7.8, 1443.0], [7.9, 1612.0], [8.0, 1761.0], [8.1, 1964.0], [8.2, 2002.0], [8.3, 2309.0], [8.4, 2354.0], [8.5, 2489.0], [8.6, 2593.0], [8.7, 2673.0], [8.8, 2935.0], [8.9, 2988.0], [9.0, 3108.0], [9.1, 3202.0], [9.2, 3266.0], [9.3, 3365.0], [9.4, 3445.0], [9.5, 3481.0], [9.6, 3675.0], [9.7, 3719.0], [9.8, 3869.0], [9.9, 4289.0], [10.0, 4404.0], [10.1, 4493.0], [10.2, 4533.0], [10.3, 4745.0], [10.4, 4952.0], [10.5, 5306.0], [10.6, 5441.0], [10.7, 5632.0], [10.8, 5738.0], [10.9, 6137.0], [11.0, 6514.0], [11.1, 6808.0], [11.2, 7069.0], [11.3, 7093.0], [11.4, 7163.0], [11.5, 7165.0], [11.6, 7167.0], [11.7, 7167.0], [11.8, 7167.0], [11.9, 7168.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7170.0], [12.8, 7172.0], [12.9, 7172.0], [13.0, 7194.0], [13.1, 7207.0], [13.2, 7226.0], [13.3, 7259.0], [13.4, 7302.0], [13.5, 7371.0], [13.6, 7420.0], [13.7, 7422.0], [13.8, 7423.0], [13.9, 7423.0], [14.0, 7423.0], [14.1, 7424.0], [14.2, 7424.0], [14.3, 7424.0], [14.4, 7424.0], [14.5, 7424.0], [14.6, 7424.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7425.0], [15.1, 7428.0], [15.2, 7479.0], [15.3, 7509.0], [15.4, 7535.0], [15.5, 7568.0], [15.6, 7579.0], [15.7, 7614.0], [15.8, 7646.0], [15.9, 7676.0], [16.0, 7676.0], [16.1, 7679.0], [16.2, 7679.0], [16.3, 7679.0], [16.4, 7679.0], [16.5, 7679.0], [16.6, 7680.0], [16.7, 7680.0], [16.8, 7680.0], [16.9, 7680.0], [17.0, 7680.0], [17.1, 7680.0], [17.2, 7680.0], [17.3, 7680.0], [17.4, 7680.0], [17.5, 7680.0], [17.6, 7680.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7683.0], [18.2, 7684.0], [18.3, 7693.0], [18.4, 7747.0], [18.5, 7750.0], [18.6, 7853.0], [18.7, 7924.0], [18.8, 7932.0], [18.9, 7932.0], [19.0, 7932.0], [19.1, 7932.0], [19.2, 7933.0], [19.3, 7934.0], [19.4, 7935.0], [19.5, 7935.0], [19.6, 7935.0], [19.7, 7935.0], [19.8, 7936.0], [19.9, 7936.0], [20.0, 7936.0], [20.1, 7936.0], [20.2, 7936.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7940.0], [20.8, 7970.0], [20.9, 8034.0], [21.0, 8064.0], [21.1, 8187.0], [21.2, 8190.0], [21.3, 8191.0], [21.4, 8191.0], [21.5, 8191.0], [21.6, 8191.0], [21.7, 8191.0], [21.8, 8192.0], [21.9, 8192.0], [22.0, 8192.0], [22.1, 8192.0], [22.2, 8192.0], [22.3, 8192.0], [22.4, 8192.0], [22.5, 8192.0], [22.6, 8192.0], [22.7, 8193.0], [22.8, 8196.0], [22.9, 8196.0], [23.0, 8196.0], [23.1, 8201.0], [23.2, 8245.0], [23.3, 8438.0], [23.4, 8444.0], [23.5, 8445.0], [23.6, 8448.0], [23.7, 8449.0], [23.8, 8550.0], [23.9, 8592.0], [24.0, 8637.0], [24.1, 8655.0], [24.2, 8699.0], [24.3, 8700.0], [24.4, 8703.0], [24.5, 8703.0], [24.6, 8703.0], [24.7, 8704.0], [24.8, 8704.0], [24.9, 8704.0], [25.0, 8704.0], [25.1, 8704.0], [25.2, 8704.0], [25.3, 8704.0], [25.4, 8704.0], [25.5, 8704.0], [25.6, 8704.0], [25.7, 8705.0], [25.8, 8708.0], [25.9, 8708.0], [26.0, 8737.0], [26.1, 8742.0], [26.2, 8754.0], [26.3, 8832.0], [26.4, 8878.0], [26.5, 8955.0], [26.6, 8959.0], [26.7, 8959.0], [26.8, 8960.0], [26.9, 8960.0], [27.0, 8960.0], [27.1, 8960.0], [27.2, 8963.0], [27.3, 8964.0], [27.4, 8964.0], [27.5, 9020.0], [27.6, 9103.0], [27.7, 9125.0], [27.8, 9167.0], [27.9, 9167.0], [28.0, 9199.0], [28.1, 9212.0], [28.2, 9212.0], [28.3, 9213.0], [28.4, 9215.0], [28.5, 9215.0], [28.6, 9216.0], [28.7, 9216.0], [28.8, 9216.0], [28.9, 9216.0], [29.0, 9216.0], [29.1, 9216.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9219.0], [29.5, 9219.0], [29.6, 9220.0], [29.7, 9220.0], [29.8, 9275.0], [29.9, 9279.0], [30.0, 9296.0], [30.1, 9313.0], [30.2, 9317.0], [30.3, 9319.0], [30.4, 9322.0], [30.5, 9330.0], [30.6, 9369.0], [30.7, 9379.0], [30.8, 9402.0], [30.9, 9404.0], [31.0, 9423.0], [31.1, 9466.0], [31.2, 9472.0], [31.3, 9472.0], [31.4, 9473.0], [31.5, 9474.0], [31.6, 9475.0], [31.7, 9476.0], [31.8, 9479.0], [31.9, 9484.0], [32.0, 9499.0], [32.1, 9505.0], [32.2, 9530.0], [32.3, 9556.0], [32.4, 9576.0], [32.5, 9590.0], [32.6, 9607.0], [32.7, 9611.0], [32.8, 9615.0], [32.9, 9629.0], [33.0, 9634.0], [33.1, 9651.0], [33.2, 9655.0], [33.3, 9675.0], [33.4, 9681.0], [33.5, 9693.0], [33.6, 9707.0], [33.7, 9722.0], [33.8, 9724.0], [33.9, 9725.0], [34.0, 9726.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9727.0], [34.4, 9727.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9728.0], [35.5, 9745.0], [35.6, 9761.0], [35.7, 9777.0], [35.8, 9793.0], [35.9, 9799.0], [36.0, 9813.0], [36.1, 9837.0], [36.2, 9854.0], [36.3, 9863.0], [36.4, 9879.0], [36.5, 9880.0], [36.6, 9900.0], [36.7, 9942.0], [36.8, 9962.0], [36.9, 9983.0], [37.0, 9984.0], [37.1, 9984.0], [37.2, 9985.0], [37.3, 9988.0], [37.4, 9995.0], [37.5, 10009.0], [37.6, 10075.0], [37.7, 10084.0], [37.8, 10110.0], [37.9, 10140.0], [38.0, 10150.0], [38.1, 10180.0], [38.2, 10210.0], [38.3, 10228.0], [38.4, 10235.0], [38.5, 10235.0], [38.6, 10236.0], [38.7, 10239.0], [38.8, 10239.0], [38.9, 10239.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10240.0], [39.3, 10240.0], [39.4, 10240.0], [39.5, 10240.0], [39.6, 10240.0], [39.7, 10240.0], [39.8, 10240.0], [39.9, 10241.0], [40.0, 10243.0], [40.1, 10244.0], [40.2, 10269.0], [40.3, 10313.0], [40.4, 10354.0], [40.5, 10367.0], [40.6, 10385.0], [40.7, 10416.0], [40.8, 10466.0], [40.9, 10490.0], [41.0, 10496.0], [41.1, 10496.0], [41.2, 10497.0], [41.3, 10500.0], [41.4, 10549.0], [41.5, 10559.0], [41.6, 10575.0], [41.7, 10614.0], [41.8, 10629.0], [41.9, 10636.0], [42.0, 10683.0], [42.1, 10714.0], [42.2, 10747.0], [42.3, 10751.0], [42.4, 10752.0], [42.5, 10752.0], [42.6, 10752.0], [42.7, 10756.0], [42.8, 10794.0], [42.9, 10812.0], [43.0, 10841.0], [43.1, 10870.0], [43.2, 10887.0], [43.3, 10955.0], [43.4, 10960.0], [43.5, 10995.0], [43.6, 11008.0], [43.7, 11008.0], [43.8, 11008.0], [43.9, 11008.0], [44.0, 11008.0], [44.1, 11008.0], [44.2, 11008.0], [44.3, 11084.0], [44.4, 11095.0], [44.5, 11110.0], [44.6, 11131.0], [44.7, 11206.0], [44.8, 11257.0], [44.9, 11263.0], [45.0, 11263.0], [45.1, 11264.0], [45.2, 11264.0], [45.3, 11264.0], [45.4, 11264.0], [45.5, 11264.0], [45.6, 11264.0], [45.7, 11350.0], [45.8, 11367.0], [45.9, 11404.0], [46.0, 11430.0], [46.1, 11454.0], [46.2, 11509.0], [46.3, 11519.0], [46.4, 11519.0], [46.5, 11520.0], [46.6, 11520.0], [46.7, 11527.0], [46.8, 11590.0], [46.9, 11636.0], [47.0, 11693.0], [47.1, 11775.0], [47.2, 11775.0], [47.3, 11775.0], [47.4, 11776.0], [47.5, 11776.0], [47.6, 11776.0], [47.7, 11776.0], [47.8, 11776.0], [47.9, 11776.0], [48.0, 11791.0], [48.1, 11928.0], [48.2, 11977.0], [48.3, 12022.0], [48.4, 12031.0], [48.5, 12067.0], [48.6, 12123.0], [48.7, 12154.0], [48.8, 12200.0], [48.9, 12245.0], [49.0, 12274.0], [49.1, 12284.0], [49.2, 12287.0], [49.3, 12287.0], [49.4, 12288.0], [49.5, 12288.0], [49.6, 12288.0], [49.7, 12288.0], [49.8, 12288.0], [49.9, 12288.0], [50.0, 12288.0], [50.1, 12288.0], [50.2, 12288.0], [50.3, 12348.0], [50.4, 12410.0], [50.5, 12484.0], [50.6, 12540.0], [50.7, 12544.0], [50.8, 12546.0], [50.9, 12548.0], [51.0, 12659.0], [51.1, 12719.0], [51.2, 12796.0], [51.3, 12799.0], [51.4, 12799.0], [51.5, 12800.0], [51.6, 12800.0], [51.7, 12879.0], [51.8, 13003.0], [51.9, 13055.0], [52.0, 13167.0], [52.1, 13180.0], [52.2, 13203.0], [52.3, 13210.0], [52.4, 13212.0], [52.5, 13218.0], [52.6, 13223.0], [52.7, 13228.0], [52.8, 13235.0], [52.9, 13243.0], [53.0, 13258.0], [53.1, 13268.0], [53.2, 13271.0], [53.3, 13282.0], [53.4, 13283.0], [53.5, 13294.0], [53.6, 13302.0], [53.7, 13306.0], [53.8, 13307.0], [53.9, 13307.0], [54.0, 13307.0], [54.1, 13307.0], [54.2, 13307.0], [54.3, 13307.0], [54.4, 13308.0], [54.5, 13308.0], [54.6, 13308.0], [54.7, 13308.0], [54.8, 13308.0], [54.9, 13308.0], [55.0, 13308.0], [55.1, 13308.0], [55.2, 13308.0], [55.3, 13308.0], [55.4, 13308.0], [55.5, 13308.0], [55.6, 13308.0], [55.7, 13308.0], [55.8, 13308.0], [55.9, 13308.0], [56.0, 13309.0], [56.1, 13309.0], [56.2, 13309.0], [56.3, 13310.0], [56.4, 13310.0], [56.5, 13311.0], [56.6, 13311.0], [56.7, 13311.0], [56.8, 13311.0], [56.9, 13311.0], [57.0, 13311.0], [57.1, 13311.0], [57.2, 13311.0], [57.3, 13311.0], [57.4, 13311.0], [57.5, 13311.0], [57.6, 13311.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13312.0], [59.7, 13312.0], [59.8, 13312.0], [59.9, 13312.0], [60.0, 13312.0], [60.1, 13312.0], [60.2, 13312.0], [60.3, 13312.0], [60.4, 13312.0], [60.5, 13312.0], [60.6, 13312.0], [60.7, 13312.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13314.0], [72.9, 13315.0], [73.0, 13315.0], [73.1, 13315.0], [73.2, 13315.0], [73.3, 13316.0], [73.4, 13316.0], [73.5, 13316.0], [73.6, 13316.0], [73.7, 13316.0], [73.8, 13316.0], [73.9, 13316.0], [74.0, 13316.0], [74.1, 13316.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13317.0], [75.4, 13319.0], [75.5, 13333.0], [75.6, 13335.0], [75.7, 13342.0], [75.8, 13352.0], [75.9, 13360.0], [76.0, 13362.0], [76.1, 13378.0], [76.2, 13382.0], [76.3, 13393.0], [76.4, 13404.0], [76.5, 13413.0], [76.6, 13435.0], [76.7, 13443.0], [76.8, 13491.0], [76.9, 13512.0], [77.0, 13514.0], [77.1, 13567.0], [77.2, 13572.0], [77.3, 13598.0], [77.4, 13706.0], [77.5, 13765.0], [77.6, 13793.0], [77.7, 13812.0], [77.8, 13820.0], [77.9, 13820.0], [78.0, 13820.0], [78.1, 13821.0], [78.2, 13822.0], [78.3, 13822.0], [78.4, 13823.0], [78.5, 13823.0], [78.6, 13823.0], [78.7, 13823.0], [78.8, 13823.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13825.0], [80.4, 13827.0], [80.5, 13828.0], [80.6, 13828.0], [80.7, 13828.0], [80.8, 13828.0], [80.9, 13865.0], [81.0, 13870.0], [81.1, 14040.0], [81.2, 14075.0], [81.3, 14076.0], [81.4, 14076.0], [81.5, 14190.0], [81.6, 14199.0], [81.7, 14224.0], [81.8, 14311.0], [81.9, 14331.0], [82.0, 14332.0], [82.1, 14333.0], [82.2, 14334.0], [82.3, 14335.0], [82.4, 14335.0], [82.5, 14335.0], [82.6, 14335.0], [82.7, 14335.0], [82.8, 14335.0], [82.9, 14335.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14336.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14338.0], [84.6, 14339.0], [84.7, 14340.0], [84.8, 14340.0], [84.9, 14340.0], [85.0, 14464.0], [85.1, 14587.0], [85.2, 14591.0], [85.3, 14592.0], [85.4, 14592.0], [85.5, 14595.0], [85.6, 14695.0], [85.7, 14844.0], [85.8, 14844.0], [85.9, 14846.0], [86.0, 14848.0], [86.1, 14848.0], [86.2, 14848.0], [86.3, 15054.0], [86.4, 15104.0], [86.5, 15167.0], [86.6, 15303.0], [86.7, 15323.0], [86.8, 15360.0], [86.9, 15360.0], [87.0, 15616.0], [87.1, 15631.0], [87.2, 15729.0], [87.3, 15807.0], [87.4, 15872.0], [87.5, 16058.0], [87.6, 16078.0], [87.7, 16127.0], [87.8, 16127.0], [87.9, 16128.0], [88.0, 16130.0], [88.1, 16178.0], [88.2, 16382.0], [88.3, 16384.0], [88.4, 16384.0], [88.5, 16384.0], [88.6, 16388.0], [88.7, 16427.0], [88.8, 16780.0], [88.9, 16895.0], [89.0, 16896.0], [89.1, 16896.0], [89.2, 16900.0], [89.3, 17129.0], [89.4, 18009.0], [89.5, 18124.0], [89.6, 18432.0], [89.7, 19455.0], [89.8, 19458.0], [89.9, 20164.0], [90.0, 21760.0], [90.1, 23551.0], [90.2, 25088.0], [90.3, 25600.0], [90.4, 26235.0], [90.5, 26246.0], [90.6, 26300.0], [90.7, 26372.0], [90.8, 26411.0], [90.9, 27392.0], [91.0, 27648.0], [91.1, 28582.0], [91.2, 29695.0], [91.3, 35779.0], [91.4, 53233.0], [91.5, 53314.0], [91.6, 53922.0], [91.7, 54044.0], [91.8, 54321.0], [91.9, 58111.0], [92.0, 58791.0], [92.1, 63631.0], [92.2, 64235.0], [92.3, 67059.0], [92.4, 68738.0], [92.5, 71679.0], [92.6, 71680.0], [92.7, 71680.0], [92.8, 71680.0], [92.9, 73728.0], [93.0, 73728.0], [93.1, 78378.0], [93.2, 86267.0], [93.3, 90880.0], [93.4, 90882.0], [93.5, 91766.0], [93.6, 92415.0], [93.7, 92417.0], [93.8, 95232.0], [93.9, 95232.0], [94.0, 96194.0], [94.1, 105415.0], [94.2, 105440.0], [94.3, 105473.0], [94.4, 105620.0], [94.5, 105665.0], [94.6, 105728.0], [94.7, 105728.0], [94.8, 105728.0], [94.9, 105733.0], [95.0, 105832.0], [95.1, 105878.0], [95.2, 106090.0], [95.3, 106147.0], [95.4, 106220.0], [95.5, 106240.0], [95.6, 106244.0], [95.7, 106265.0], [95.8, 106413.0], [95.9, 106430.0], [96.0, 106473.0], [96.1, 106496.0], [96.2, 106523.0], [96.3, 106687.0], [96.4, 106743.0], [96.5, 106762.0], [96.6, 106863.0], [96.7, 106955.0], [96.8, 107007.0], [96.9, 107019.0], [97.0, 107214.0], [97.1, 107305.0], [97.2, 108052.0], [97.3, 110762.0], [97.4, 113569.0], [97.5, 114600.0], [97.6, 114809.0], [97.7, 115716.0], [97.8, 116480.0], [97.9, 118020.0], [98.0, 118276.0], [98.1, 118276.0], [98.2, 120342.0], [98.3, 122876.0], [98.4, 122880.0], [98.5, 126904.0], [98.6, 131068.0], [98.7, 131072.0], [98.8, 131072.0], [98.9, 138492.0], [99.0, 139364.0], [99.1, 140544.0], [99.2, 144124.0], [99.3, 146944.0], [99.4, 148991.0], [99.5, 175360.0], [99.6, 210430.0], [99.7, 210431.0], [99.8, 210431.0], [99.9, 211713.0], [100.0, 214012.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 694.0, "series": [{"data": [[0.0, 125.0], [138400.0, 3.0], [170400.0, 1.0], [210400.0, 1.0], [144100.0, 3.0], [148900.0, 2.0], [74700.0, 1.0], [105900.0, 1.0], [106700.0, 2.0], [131500.0, 2.0], [35700.0, 2.0], [40900.0, 3.0], [43300.0, 1.0], [54900.0, 1.0], [64100.0, 1.0], [114600.0, 3.0], [122600.0, 1.0], [500.0, 2.0], [600.0, 5.0], [700.0, 3.0], [214000.0, 1.0], [900.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 2.0], [1500.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2300.0, 1.0], [2200.0, 3.0], [146100.0, 5.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 3.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 3.0], [3300.0, 1.0], [211700.0, 2.0], [3400.0, 4.0], [3500.0, 1.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 7.0], [4300.0, 1.0], [4100.0, 1.0], [4500.0, 2.0], [4600.0, 2.0], [73700.0, 2.0], [4800.0, 1.0], [4700.0, 1.0], [5000.0, 2.0], [5100.0, 2.0], [4900.0, 1.0], [81700.0, 1.0], [5200.0, 1.0], [5300.0, 2.0], [5400.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 2.0], [6000.0, 4.0], [5900.0, 2.0], [6300.0, 3.0], [6600.0, 1.0], [6500.0, 1.0], [105700.0, 3.0], [6800.0, 1.0], [7100.0, 38.0], [7300.0, 1.0], [7400.0, 54.0], [7500.0, 1.0], [7600.0, 42.0], [7700.0, 1.0], [7800.0, 1.0], [7900.0, 40.0], [8000.0, 1.0], [8100.0, 34.0], [8300.0, 2.0], [8400.0, 19.0], [8600.0, 6.0], [8200.0, 1.0], [8700.0, 47.0], [8900.0, 24.0], [9200.0, 42.0], [9100.0, 3.0], [9000.0, 1.0], [143800.0, 1.0], [9400.0, 15.0], [9700.0, 42.0], [9500.0, 7.0], [9600.0, 4.0], [9300.0, 3.0], [10200.0, 31.0], [10000.0, 9.0], [9900.0, 17.0], [9800.0, 6.0], [10100.0, 14.0], [10300.0, 12.0], [10500.0, 15.0], [10600.0, 13.0], [10400.0, 19.0], [10700.0, 22.0], [10900.0, 7.0], [11000.0, 26.0], [10800.0, 8.0], [11200.0, 21.0], [11100.0, 6.0], [177400.0, 1.0], [11400.0, 8.0], [11500.0, 13.0], [11300.0, 3.0], [11700.0, 33.0], [11600.0, 2.0], [11800.0, 5.0], [12100.0, 5.0], [12000.0, 7.0], [12200.0, 18.0], [11900.0, 8.0], [12400.0, 3.0], [12700.0, 7.0], [12500.0, 16.0], [12300.0, 3.0], [12600.0, 4.0], [12900.0, 3.0], [13300.0, 436.0], [13000.0, 8.0], [13200.0, 3.0], [13100.0, 3.0], [12800.0, 8.0], [13800.0, 78.0], [13500.0, 11.0], [13400.0, 2.0], [14000.0, 8.0], [14300.0, 87.0], [14200.0, 1.0], [14100.0, 2.0], [14400.0, 1.0], [14500.0, 17.0], [14800.0, 22.0], [14700.0, 2.0], [15300.0, 9.0], [15100.0, 4.0], [14900.0, 1.0], [15600.0, 3.0], [15800.0, 2.0], [15500.0, 1.0], [16100.0, 7.0], [16300.0, 5.0], [17000.0, 1.0], [16800.0, 3.0], [16400.0, 1.0], [18200.0, 1.0], [19400.0, 2.0], [20400.0, 2.0], [20200.0, 1.0], [22000.0, 1.0], [24600.0, 1.0], [29600.0, 2.0], [141500.0, 1.0], [53200.0, 4.0], [58800.0, 2.0], [64000.0, 2.0], [82400.0, 1.0], [95200.0, 2.0], [107200.0, 2.0], [121600.0, 1.0], [156800.0, 1.0], [115900.0, 1.0], [52700.0, 2.0], [58700.0, 3.0], [63900.0, 1.0], [100600.0, 1.0], [105400.0, 3.0], [106200.0, 2.0], [107000.0, 7.0], [114200.0, 1.0], [118200.0, 3.0], [131000.0, 6.0], [146900.0, 1.0], [98900.0, 1.0], [115700.0, 2.0], [114900.0, 2.0], [17100.0, 2.0], [16700.0, 1.0], [17900.0, 1.0], [18100.0, 5.0], [19100.0, 1.0], [18700.0, 1.0], [23700.0, 1.0], [26300.0, 7.0], [27300.0, 2.0], [29100.0, 1.0], [33000.0, 1.0], [35800.0, 1.0], [52200.0, 2.0], [62600.0, 1.0], [71600.0, 3.0], [90800.0, 1.0], [118000.0, 1.0], [122800.0, 3.0], [130800.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 274.0], [138400.0, 1.0], [170400.0, 2.0], [144100.0, 2.0], [148900.0, 2.0], [108300.0, 2.0], [106700.0, 3.0], [115500.0, 1.0], [154600.0, 7.0], [131500.0, 2.0], [40900.0, 2.0], [44100.0, 1.0], [53700.0, 3.0], [54100.0, 3.0], [63700.0, 1.0], [64900.0, 1.0], [76200.0, 1.0], [105800.0, 1.0], [106600.0, 2.0], [114600.0, 5.0], [115400.0, 1.0], [500.0, 12.0], [600.0, 34.0], [700.0, 42.0], [800.0, 30.0], [214000.0, 3.0], [900.0, 33.0], [1000.0, 24.0], [1100.0, 28.0], [1200.0, 27.0], [1300.0, 30.0], [1400.0, 28.0], [1500.0, 15.0], [1600.0, 26.0], [1700.0, 12.0], [1800.0, 19.0], [1900.0, 29.0], [2000.0, 40.0], [2100.0, 47.0], [2200.0, 26.0], [2300.0, 27.0], [146100.0, 2.0], [2400.0, 25.0], [2500.0, 35.0], [2600.0, 20.0], [2700.0, 24.0], [2800.0, 26.0], [2900.0, 19.0], [3000.0, 19.0], [3100.0, 27.0], [3200.0, 24.0], [3300.0, 21.0], [3400.0, 32.0], [3500.0, 16.0], [3600.0, 28.0], [3700.0, 29.0], [3800.0, 35.0], [3900.0, 23.0], [4000.0, 28.0], [4200.0, 23.0], [4100.0, 37.0], [4300.0, 22.0], [4600.0, 23.0], [4400.0, 29.0], [4500.0, 16.0], [73700.0, 6.0], [4800.0, 18.0], [4700.0, 15.0], [4900.0, 17.0], [5100.0, 27.0], [5000.0, 17.0], [80100.0, 1.0], [5200.0, 29.0], [5300.0, 15.0], [5500.0, 21.0], [5400.0, 20.0], [5600.0, 3.0], [5800.0, 11.0], [5700.0, 7.0], [6000.0, 18.0], [5900.0, 8.0], [6100.0, 19.0], [6300.0, 16.0], [6200.0, 21.0], [101700.0, 1.0], [6500.0, 9.0], [6400.0, 15.0], [6600.0, 12.0], [105700.0, 8.0], [6900.0, 7.0], [6800.0, 9.0], [6700.0, 7.0], [106500.0, 1.0], [7000.0, 6.0], [7100.0, 70.0], [7200.0, 15.0], [7300.0, 10.0], [7400.0, 70.0], [115300.0, 1.0], [7500.0, 9.0], [7600.0, 86.0], [7700.0, 11.0], [7900.0, 86.0], [7800.0, 12.0], [8000.0, 15.0], [8100.0, 56.0], [8200.0, 16.0], [8600.0, 14.0], [8700.0, 81.0], [8300.0, 19.0], [8500.0, 19.0], [8400.0, 45.0], [8900.0, 33.0], [9100.0, 9.0], [9200.0, 72.0], [8800.0, 3.0], [9000.0, 9.0], [9400.0, 39.0], [9700.0, 133.0], [9500.0, 30.0], [9600.0, 41.0], [9300.0, 10.0], [10200.0, 240.0], [9900.0, 128.0], [9800.0, 101.0], [10000.0, 186.0], [10100.0, 179.0], [10400.0, 329.0], [10700.0, 306.0], [10300.0, 222.0], [10500.0, 278.0], [10600.0, 295.0], [10900.0, 308.0], [11100.0, 239.0], [11000.0, 288.0], [10800.0, 285.0], [11200.0, 254.0], [11300.0, 183.0], [11500.0, 169.0], [11700.0, 144.0], [11600.0, 112.0], [11400.0, 174.0], [12100.0, 114.0], [11900.0, 99.0], [12000.0, 97.0], [11800.0, 109.0], [12200.0, 98.0], [12500.0, 81.0], [12400.0, 71.0], [12600.0, 64.0], [12300.0, 71.0], [12700.0, 54.0], [13300.0, 694.0], [12900.0, 45.0], [12800.0, 74.0], [13000.0, 28.0], [13200.0, 67.0], [13100.0, 54.0], [13800.0, 132.0], [13400.0, 39.0], [13600.0, 25.0], [13700.0, 16.0], [13500.0, 27.0], [14300.0, 154.0], [13900.0, 19.0], [14000.0, 26.0], [14200.0, 9.0], [14100.0, 11.0], [14700.0, 10.0], [14800.0, 45.0], [14600.0, 12.0], [14400.0, 13.0], [14500.0, 25.0], [15000.0, 11.0], [15200.0, 14.0], [15300.0, 21.0], [14900.0, 14.0], [15100.0, 12.0], [15400.0, 14.0], [15500.0, 12.0], [15700.0, 6.0], [15800.0, 11.0], [15600.0, 15.0], [15900.0, 5.0], [16000.0, 8.0], [16300.0, 17.0], [16200.0, 2.0], [16100.0, 10.0], [16400.0, 6.0], [16600.0, 4.0], [17200.0, 2.0], [16800.0, 5.0], [17000.0, 4.0], [17400.0, 3.0], [18400.0, 3.0], [17800.0, 1.0], [17600.0, 3.0], [18000.0, 1.0], [19400.0, 3.0], [18800.0, 2.0], [19000.0, 2.0], [19200.0, 1.0], [20200.0, 3.0], [20400.0, 6.0], [20800.0, 1.0], [21200.0, 1.0], [22400.0, 1.0], [21800.0, 1.0], [26400.0, 2.0], [26200.0, 1.0], [27600.0, 2.0], [27000.0, 1.0], [29600.0, 3.0], [34800.0, 1.0], [53200.0, 1.0], [54000.0, 2.0], [54400.0, 1.0], [53600.0, 1.0], [58000.0, 1.0], [64000.0, 1.0], [70400.0, 1.0], [82400.0, 2.0], [95200.0, 1.0], [105600.0, 1.0], [106400.0, 9.0], [107200.0, 1.0], [115200.0, 2.0], [127200.0, 1.0], [153600.0, 1.0], [181700.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [111100.0, 1.0], [115900.0, 2.0], [53900.0, 4.0], [54300.0, 1.0], [86200.0, 1.0], [91000.0, 1.0], [106200.0, 5.0], [105400.0, 4.0], [107000.0, 5.0], [118200.0, 4.0], [131000.0, 6.0], [140500.0, 2.0], [146900.0, 1.0], [115700.0, 2.0], [114900.0, 1.0], [126900.0, 1.0], [163800.0, 1.0], [16900.0, 2.0], [16500.0, 4.0], [16700.0, 3.0], [17100.0, 2.0], [17900.0, 2.0], [18100.0, 3.0], [17500.0, 1.0], [17700.0, 1.0], [18900.0, 1.0], [18700.0, 2.0], [19100.0, 2.0], [19900.0, 1.0], [20100.0, 1.0], [20900.0, 1.0], [21700.0, 1.0], [21900.0, 1.0], [23500.0, 1.0], [24300.0, 2.0], [23900.0, 1.0], [26300.0, 5.0], [27300.0, 2.0], [28500.0, 1.0], [29900.0, 1.0], [30900.0, 1.0], [53400.0, 1.0], [53800.0, 1.0], [55000.0, 1.0], [55800.0, 1.0], [59400.0, 2.0], [59800.0, 1.0], [65400.0, 1.0], [64200.0, 1.0], [71600.0, 2.0], [90800.0, 3.0], [92400.0, 3.0], [106800.0, 1.0], [116400.0, 4.0], [115600.0, 1.0], [122800.0, 1.0], [123600.0, 1.0], [130800.0, 2.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 130.0], [138400.0, 2.0], [170400.0, 1.0], [210400.0, 5.0], [139300.0, 1.0], [144100.0, 2.0], [148900.0, 1.0], [69900.0, 1.0], [90700.0, 1.0], [105900.0, 1.0], [106700.0, 4.0], [110700.0, 1.0], [122700.0, 1.0], [120300.0, 1.0], [100.0, 2.0], [131500.0, 1.0], [35700.0, 1.0], [43300.0, 1.0], [200.0, 2.0], [53700.0, 1.0], [53300.0, 1.0], [56900.0, 1.0], [58100.0, 2.0], [63300.0, 1.0], [300.0, 1.0], [79400.0, 1.0], [92200.0, 1.0], [105800.0, 4.0], [106600.0, 2.0], [114600.0, 2.0], [119400.0, 1.0], [500.0, 2.0], [600.0, 4.0], [800.0, 1.0], [214000.0, 1.0], [900.0, 1.0], [1100.0, 1.0], [1200.0, 5.0], [1300.0, 5.0], [1400.0, 1.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 3.0], [2400.0, 2.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 4.0], [3300.0, 2.0], [211700.0, 2.0], [3400.0, 3.0], [3600.0, 3.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 3.0], [4600.0, 1.0], [4500.0, 2.0], [73700.0, 3.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5300.0, 2.0], [5200.0, 1.0], [5600.0, 2.0], [5500.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [96100.0, 1.0], [6500.0, 2.0], [6400.0, 1.0], [105700.0, 7.0], [6800.0, 2.0], [107300.0, 2.0], [106500.0, 1.0], [7000.0, 3.0], [7100.0, 34.0], [114500.0, 1.0], [7300.0, 3.0], [7400.0, 35.0], [7200.0, 7.0], [7500.0, 6.0], [7600.0, 54.0], [7700.0, 5.0], [7900.0, 45.0], [7800.0, 1.0], [8100.0, 40.0], [8000.0, 3.0], [8500.0, 3.0], [8200.0, 3.0], [8600.0, 6.0], [8700.0, 40.0], [8400.0, 11.0], [8900.0, 21.0], [9100.0, 10.0], [9200.0, 40.0], [9000.0, 1.0], [8800.0, 4.0], [9400.0, 25.0], [9600.0, 20.0], [9300.0, 14.0], [9700.0, 47.0], [9500.0, 11.0], [9900.0, 18.0], [9800.0, 13.0], [10000.0, 5.0], [10100.0, 9.0], [10200.0, 41.0], [10300.0, 8.0], [10400.0, 12.0], [10600.0, 8.0], [10700.0, 15.0], [10500.0, 8.0], [10900.0, 6.0], [10800.0, 8.0], [11000.0, 18.0], [11100.0, 5.0], [11200.0, 19.0], [11300.0, 5.0], [11600.0, 3.0], [11500.0, 14.0], [11400.0, 5.0], [11700.0, 20.0], [11900.0, 4.0], [12100.0, 4.0], [12000.0, 6.0], [12200.0, 30.0], [11800.0, 1.0], [12600.0, 3.0], [12500.0, 8.0], [12300.0, 2.0], [12400.0, 3.0], [12700.0, 7.0], [13200.0, 28.0], [13300.0, 453.0], [13000.0, 4.0], [13100.0, 4.0], [12800.0, 6.0], [12900.0, 1.0], [13400.0, 9.0], [13800.0, 69.0], [13500.0, 9.0], [13700.0, 5.0], [13600.0, 1.0], [14300.0, 63.0], [14200.0, 3.0], [14100.0, 3.0], [14000.0, 8.0], [14500.0, 11.0], [14800.0, 11.0], [14400.0, 1.0], [14600.0, 1.0], [14700.0, 1.0], [15300.0, 7.0], [15100.0, 3.0], [15200.0, 1.0], [15000.0, 3.0], [15700.0, 3.0], [15600.0, 3.0], [15800.0, 4.0], [15500.0, 1.0], [16100.0, 10.0], [16300.0, 10.0], [16200.0, 1.0], [16000.0, 3.0], [16800.0, 7.0], [16400.0, 1.0], [18000.0, 2.0], [18400.0, 1.0], [18200.0, 1.0], [19400.0, 5.0], [21600.0, 1.0], [25000.0, 3.0], [26400.0, 2.0], [26200.0, 5.0], [25600.0, 1.0], [27600.0, 2.0], [28600.0, 1.0], [29600.0, 1.0], [141500.0, 1.0], [53200.0, 2.0], [54000.0, 2.0], [63600.0, 1.0], [64000.0, 1.0], [95200.0, 4.0], [105600.0, 4.0], [106400.0, 8.0], [107200.0, 2.0], [108000.0, 1.0], [111200.0, 1.0], [175300.0, 1.0], [68700.0, 1.0], [78300.0, 1.0], [95100.0, 1.0], [101500.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [113500.0, 1.0], [34700.0, 1.0], [53900.0, 2.0], [54300.0, 1.0], [58700.0, 1.0], [67000.0, 1.0], [86200.0, 1.0], [106200.0, 7.0], [105400.0, 5.0], [107000.0, 4.0], [118200.0, 3.0], [115000.0, 1.0], [131000.0, 5.0], [179600.0, 1.0], [140500.0, 2.0], [146900.0, 2.0], [74100.0, 1.0], [91700.0, 1.0], [106100.0, 3.0], [106900.0, 3.0], [115700.0, 1.0], [126900.0, 1.0], [16700.0, 2.0], [16900.0, 2.0], [17100.0, 2.0], [18100.0, 1.0], [20100.0, 1.0], [22300.0, 1.0], [21700.0, 1.0], [23500.0, 1.0], [26300.0, 3.0], [27300.0, 3.0], [28500.0, 1.0], [64200.0, 1.0], [64600.0, 1.0], [71600.0, 8.0], [90800.0, 4.0], [92400.0, 3.0], [106000.0, 1.0], [106800.0, 2.0], [108400.0, 1.0], [114800.0, 1.0], [116400.0, 3.0], [118000.0, 2.0], [122800.0, 3.0], [123600.0, 1.0], [130800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 214000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7871.0, "series": [{"data": [[1.0, 327.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5640.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7871.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 7.24561403508772, "minX": 1.53928422E12, "maxY": 499.29075630252146, "series": [{"data": [[1.53928446E12, 221.0915934755332], [1.53928476E12, 499.29075630252146], [1.53928434E12, 98.26490066225162], [1.5392847E12, 460.2469720905738], [1.5392844E12, 160.26501305483043], [1.53928464E12, 399.8220720720717], [1.53928494E12, 10.6875], [1.53928458E12, 340.6009389671358], [1.53928488E12, 119.61951219512206], [1.53928422E12, 7.24561403508772], [1.53928452E12, 284.3194562446901], [1.53928482E12, 478.45915492957744], [1.53928428E12, 40.11434302908727]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928494E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 214012.0, "series": [{"data": [[4.0, 86410.0], [5.0, 1563.6666666666665], [6.0, 3152.0], [8.0, 613.0], [9.0, 1503.5], [10.0, 119014.0], [12.0, 733.0], [14.0, 2294.0], [15.0, 622.0], [16.0, 49866.666666666664], [18.0, 1095.5], [19.0, 946.0], [21.0, 788.0], [22.0, 214012.0], [23.0, 1903.5], [25.0, 2019.0], [26.0, 141561.33333333334], [27.0, 1839.5], [29.0, 1391.0], [30.0, 1463.0], [31.0, 1555.0], [34.0, 134965.2857142857], [36.0, 3958.0], [37.0, 3100.6666666666665], [39.0, 2520.0], [40.0, 1981.0], [41.0, 109073.75], [42.0, 1894.0], [43.0, 3992.0], [44.0, 1989.0], [45.0, 2918.0], [46.0, 2201.0], [47.0, 2000.0], [48.0, 2235.0], [50.0, 54104.0], [51.0, 2735.0], [53.0, 3150.0], [54.0, 2934.0], [56.0, 3049.0], [57.0, 3063.0], [59.0, 2788.0], [60.0, 3851.0], [62.0, 3583.0], [65.0, 33877.5], [66.0, 5269.0], [67.0, 21196.0], [69.0, 3542.0], [70.0, 34757.5], [71.0, 3838.0], [72.0, 3958.5], [73.0, 3813.0], [74.0, 3395.0], [75.0, 3442.0], [76.0, 28374.0], [79.0, 5134.0], [78.0, 121604.0], [77.0, 53272.0], [80.0, 6031.0], [81.0, 4501.0], [82.0, 29428.5], [83.0, 28543.0], [85.0, 4784.5], [87.0, 5264.5], [88.0, 4894.0], [89.0, 4780.0], [91.0, 5549.0], [92.0, 5083.0], [93.0, 12329.0], [94.0, 4992.0], [96.0, 5960.0], [97.0, 12634.666666666668], [98.0, 5309.0], [100.0, 5820.0], [101.0, 6371.0], [102.0, 6316.0], [103.0, 6078.0], [105.0, 6321.0], [106.0, 5695.0], [107.0, 6072.0], [108.0, 6646.0], [109.0, 6544.0], [111.0, 6863.0], [112.0, 7554.0], [113.0, 7337.0], [114.0, 7189.0], [117.0, 7913.0], [119.0, 61013.0], [120.0, 13161.5], [121.0, 8369.0], [122.0, 8475.0], [126.0, 9421.5], [127.0, 10058.0], [124.0, 18153.5], [128.0, 8202.0], [129.0, 9938.0], [130.0, 8998.0], [131.0, 9457.0], [133.0, 10012.0], [134.0, 9880.0], [135.0, 9867.0], [136.0, 10128.0], [137.0, 10305.0], [139.0, 34540.0], [141.0, 9792.0], [142.0, 11494.0], [140.0, 58812.0], [144.0, 26609.333333333336], [146.0, 34257.5], [147.0, 26580.666666666664], [148.0, 10200.0], [150.0, 12372.0], [151.0, 10164.0], [154.0, 10925.0], [155.0, 10513.0], [156.0, 10677.0], [157.0, 13605.0], [158.0, 10540.0], [153.0, 118020.0], [161.0, 11353.0], [162.0, 10762.0], [164.0, 10448.0], [165.0, 10133.0], [167.0, 12529.0], [168.0, 10457.0], [173.0, 10904.0], [175.0, 14865.0], [178.0, 11373.0], [179.0, 11480.0], [182.0, 14998.0], [177.0, 14756.0], [186.0, 12592.0], [190.0, 10919.0], [191.0, 15190.0], [188.0, 15127.0], [193.0, 11704.0], [199.0, 35793.0], [197.0, 35874.0], [194.0, 100654.0], [192.0, 43333.0], [205.0, 12941.0], [203.0, 12183.0], [211.0, 10448.0], [213.0, 9432.0], [215.0, 12045.0], [208.0, 11920.0], [218.0, 10990.0], [220.0, 11086.0], [217.0, 11944.0], [231.0, 17087.0], [227.0, 81791.0], [226.0, 98957.0], [234.0, 12135.0], [238.0, 13311.0], [241.0, 10051.0], [246.0, 13441.5], [247.0, 12023.0], [242.0, 9820.0], [250.0, 10055.5], [252.0, 10231.0], [268.0, 8959.0], [261.0, 59641.0], [262.0, 12545.0], [263.0, 13157.0], [265.0, 12512.5], [266.0, 13861.0], [267.0, 6960.4], [269.0, 12390.5], [270.0, 9215.0], [271.0, 11884.0], [273.0, 11999.0], [272.0, 13823.0], [274.0, 8874.333333333334], [275.0, 11520.0], [276.0, 24223.666666666668], [277.0, 22017.0], [278.0, 13951.0], [279.0, 12201.666666666666], [280.0, 11007.0], [286.0, 25471.5], [287.0, 9420.833333333332], [284.0, 53247.0], [285.0, 14719.0], [281.0, 13271.0], [282.0, 1.0], [283.0, 13074.5], [289.0, 12785.5], [288.0, 8703.0], [290.0, 52227.0], [291.0, 10727.0], [292.0, 19245.2], [293.0, 20736.0], [294.0, 17252.199999999997], [295.0, 14070.333333333334], [296.0, 14685.75], [297.0, 11963.0], [302.0, 13414.5], [303.0, 11007.0], [300.0, 20822.5], [301.0, 9215.0], [298.0, 7155.125], [299.0, 7953.625], [306.0, 5546.25], [305.0, 9567.2], [307.0, 10898.375], [316.0, 10633.75], [317.0, 8600.8], [318.0, 9709.636363636362], [319.0, 11110.0], [308.0, 11049.083333333332], [309.0, 17467.625], [310.0, 14591.0], [311.0, 11347.166666666668], [312.0, 12081.5], [313.0, 7376.75], [314.0, 10999.4], [315.0, 9854.0], [321.0, 11702.42857142857], [320.0, 13310.142857142857], [322.0, 11983.75], [323.0, 14475.0], [324.0, 9898.416666666666], [325.0, 41302.0], [326.0, 15166.0], [327.0, 36521.0], [328.0, 7084.0], [334.0, 12004.0], [335.0, 7168.25], [332.0, 8702.8], [333.0, 9573.6], [329.0, 7730.6], [330.0, 10589.666666666666], [331.0, 12734.0], [337.0, 11475.555555555555], [336.0, 10813.750000000002], [338.0, 9131.8], [339.0, 11133.2], [340.0, 10000.307692307693], [341.0, 29256.0], [342.0, 10641.142857142857], [343.0, 11902.75], [344.0, 8361.0], [350.0, 13106.8], [351.0, 13694.25], [348.0, 9882.333333333332], [349.0, 30680.6], [345.0, 6679.6], [346.0, 10908.666666666666], [347.0, 6751.874999999999], [353.0, 13567.5], [352.0, 12799.0], [354.0, 15643.0], [355.0, 9728.333333333334], [356.0, 8496.0], [357.0, 6290.0], [358.0, 9497.5], [359.0, 12116.555555555555], [360.0, 10165.714285714286], [366.0, 12031.124999999998], [367.0, 11893.666666666666], [364.0, 9194.555555555555], [365.0, 9219.0], [361.0, 11568.0], [362.0, 114687.0], [363.0, 13827.0], [369.0, 14141.5], [368.0, 8831.0], [370.0, 12302.166666666666], [371.0, 13311.0], [372.0, 11058.500000000002], [373.0, 9281.125], [374.0, 10049.999999999998], [375.0, 8065.0], [376.0, 12864.124999999998], [382.0, 11747.0], [383.0, 10401.0], [380.0, 9897.5], [381.0, 8996.142857142857], [378.0, 8191.333333333333], [379.0, 12489.111111111111], [385.0, 12791.0], [384.0, 13255.5], [386.0, 12110.0], [387.0, 13538.777777777777], [388.0, 14165.5], [389.0, 10751.75], [390.0, 10621.0], [391.0, 7423.5], [392.0, 11720.0], [398.0, 7680.333333333334], [399.0, 6143.5], [396.0, 12607.75], [397.0, 12288.0], [393.0, 9509.142857142857], [394.0, 12689.714285714284], [395.0, 10240.428571428572], [401.0, 13311.0], [400.0, 10581.0], [402.0, 11694.9375], [403.0, 11744.0], [404.0, 8188.285714285714], [405.0, 13311.857142857141], [406.0, 9069.25], [407.0, 13632.25], [408.0, 14434.0], [414.0, 10623.5], [415.0, 10271.444444444442], [412.0, 8545.833333333334], [413.0, 1.0], [409.0, 12450.909090909092], [410.0, 12969.6], [411.0, 9256.4], [428.0, 6658.5], [416.0, 10961.625], [418.0, 13179.666666666666], [420.0, 11393.0], [421.0, 9725.0], [424.0, 9950.571428571428], [425.0, 9029.545454545454], [426.0, 10894.888888888889], [427.0, 8346.666666666666], [429.0, 14207.75], [430.0, 10677.0], [431.0, 11089.6], [433.0, 12828.0], [432.0, 8813.75], [434.0, 9830.823529411764], [435.0, 10878.250000000002], [436.0, 8232.666666666666], [437.0, 10075.5], [438.0, 9571.6], [439.0, 9947.0], [440.0, 8196.0], [446.0, 11640.75], [447.0, 10020.285714285716], [444.0, 10134.75], [445.0, 10515.153846153846], [441.0, 12289.5], [442.0, 8806.2], [443.0, 9729.333333333334], [449.0, 14041.666666666666], [448.0, 74089.66666666667], [450.0, 12578.5], [451.0, 12548.0], [452.0, 56238.666666666664], [454.0, 10152.625], [455.0, 12911.8], [456.0, 13313.8], [462.0, 11109.2], [463.0, 7971.0], [460.0, 10093.57142857143], [461.0, 10680.428571428572], [457.0, 11802.833333333334], [458.0, 10115.416666666666], [459.0, 13311.5], [465.0, 9725.833333333334], [464.0, 73726.6], [466.0, 8166.714285714286], [467.0, 7963.857142857143], [468.0, 11501.0], [469.0, 9958.166666666668], [470.0, 52803.833333333336], [471.0, 5272.0], [472.0, 8574.25], [478.0, 12765.285714285714], [479.0, 11907.545454545454], [476.0, 9090.0], [477.0, 12206.0], [473.0, 12587.0], [474.0, 13945.833333333334], [475.0, 9367.666666666666], [482.0, 9545.8], [480.0, 40687.3], [483.0, 10113.363636363638], [492.0, 7172.0], [493.0, 11862.333333333334], [494.0, 12069.5], [495.0, 13687.444444444445], [484.0, 10075.0], [486.0, 9026.461538461535], [487.0, 9266.75], [488.0, 11873.0], [489.0, 12434.23076923077], [490.0, 11524.0], [491.0, 6579.0], [496.0, 13317.8], [497.0, 12105.0], [498.0, 8444.5], [499.0, 13565.5], [500.0, 20728.72707423582]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[383.6896551724135, 16038.912466843492]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 113849.0], [5.0, 586.0], [6.0, 688.3333333333334], [7.0, 713.875], [8.0, 855.8333333333334], [9.0, 17296.222222222223], [10.0, 13168.083333333332], [11.0, 869.1666666666666], [12.0, 1004.9], [13.0, 766.3571428571429], [14.0, 886.75], [15.0, 865.5], [16.0, 18042.444444444445], [17.0, 9913.35294117647], [18.0, 930.6875], [19.0, 1065.529411764706], [20.0, 996.9375], [21.0, 1004.4374999999998], [22.0, 31765.28571428571], [23.0, 1197.1666666666667], [24.0, 1482.4705882352944], [25.0, 1613.25], [26.0, 1413.625], [27.0, 1353.8235294117646], [28.0, 1527.3529411764705], [29.0, 1643.4285714285716], [30.0, 1572.7499999999998], [31.0, 1677.0909090909092], [32.0, 1748.5833333333335], [33.0, 2063.2666666666664], [34.0, 19368.176470588234], [35.0, 2122.75], [36.0, 2304.0], [37.0, 2604.0625], [38.0, 2224.2307692307695], [39.0, 2416.294117647059], [40.0, 2124.857142857143], [41.0, 18091.88888888889], [42.0, 2259.666666666667], [43.0, 2185.6315789473683], [44.0, 2263.846153846154], [45.0, 2407.263157894737], [46.0, 2347.235294117647], [47.0, 2293.7777777777774], [48.0, 2531.6], [49.0, 2761.7499999999995], [50.0, 26551.913043478264], [51.0, 2717.214285714286], [52.0, 7492.333333333334], [53.0, 2987.538461538461], [54.0, 6730.375], [55.0, 7215.214285714286], [56.0, 6378.5], [57.0, 6555.0], [58.0, 5486.473684210527], [59.0, 7375.0], [60.0, 6580.470588235294], [61.0, 6789.4375], [62.0, 3582.647058823529], [63.0, 10860.866666666667], [64.0, 7459.384615384615], [65.0, 4000.2727272727275], [66.0, 6947.833333333333], [67.0, 4283.25], [68.0, 7176.117647058823], [69.0, 7041.75], [70.0, 3956.4545454545455], [71.0, 4203.769230769231], [72.0, 9337.199999999999], [73.0, 4449.176470588235], [74.0, 3923.4000000000005], [75.0, 3607.923076923077], [76.0, 3818.333333333333], [77.0, 3743.733333333333], [78.0, 4319.714285714286], [79.0, 7929.066666666666], [80.0, 8273.266666666666], [81.0, 7310.105263157893], [82.0, 4853.4375], [83.0, 4356.88888888889], [84.0, 5762.399999999999], [85.0, 5915.214285714285], [86.0, 5675.529411764706], [87.0, 6849.555555555556], [88.0, 6757.888888888889], [89.0, 6611.866666666666], [90.0, 6925.857142857143], [91.0, 6288.6875], [92.0, 6544.933333333334], [93.0, 5674.647058823531], [94.0, 6419.266666666667], [95.0, 13198.5], [96.0, 13947.846153846152], [97.0, 6066.6923076923085], [98.0, 6021.5625], [99.0, 5739.727272727273], [100.0, 6295.200000000001], [101.0, 6972.5625], [102.0, 15917.8125], [103.0, 5977.142857142857], [104.0, 46668.909090909096], [105.0, 13501.933333333334], [106.0, 17348.9], [107.0, 7521.166666666667], [108.0, 13648.8125], [109.0, 7988.500000000001], [110.0, 7301.583333333332], [111.0, 8487.363636363636], [112.0, 16157.538461538461], [113.0, 8769.416666666668], [114.0, 11782.714285714284], [115.0, 7582.769230769231], [116.0, 9050.538461538461], [117.0, 8504.75], [118.0, 13819.11111111111], [119.0, 8601.90909090909], [120.0, 8451.333333333334], [121.0, 8515.4], [122.0, 12582.846153846154], [123.0, 8426.888888888889], [124.0, 9039.749999999998], [125.0, 9578.57142857143], [126.0, 9878.083333333332], [127.0, 9654.937500000004], [128.0, 9510.818181818182], [129.0, 9789.0], [130.0, 9366.375], [131.0, 10493.666666666666], [132.0, 10521.875], [133.0, 10130.199999999999], [134.0, 10712.777777777777], [135.0, 10679.615384615387], [136.0, 10452.900000000001], [137.0, 10548.833333333334], [138.0, 11041.583333333332], [139.0, 10433.6], [140.0, 10719.0], [141.0, 11790.666666666666], [142.0, 11546.818181818182], [143.0, 10313.533333333335], [144.0, 10454.749999999998], [145.0, 9873.499999999998], [146.0, 10355.0], [147.0, 10263.125], [148.0, 10990.0], [149.0, 11575.428571428572], [150.0, 10700.705882352939], [151.0, 10270.75], [152.0, 10716.666666666666], [153.0, 10732.1], [154.0, 10960.77777777778], [155.0, 10471.583333333332], [156.0, 12014.214285714286], [157.0, 11050.0], [158.0, 11576.857142857143], [159.0, 10885.0], [160.0, 9643.272727272728], [161.0, 11287.583333333332], [162.0, 11247.09090909091], [163.0, 10947.727272727274], [164.0, 11719.909090909092], [165.0, 11655.214285714286], [166.0, 11400.5], [167.0, 10844.142857142859], [168.0, 10338.333333333334], [169.0, 11643.66666666667], [170.0, 11922.25], [171.0, 12096.8], [172.0, 12221.714285714284], [173.0, 17895.46153846154], [174.0, 11744.388888888889], [175.0, 11433.363636363634], [176.0, 11296.416666666666], [177.0, 11743.818181818182], [178.0, 14659.0], [179.0, 12161.4], [180.0, 12385.833333333332], [181.0, 12025.142857142857], [182.0, 11375.923076923074], [183.0, 11271.0], [184.0, 10998.555555555555], [185.0, 11547.363636363634], [186.0, 11786.8], [187.0, 12259.529411764706], [188.0, 11984.666666666666], [189.0, 11192.384615384617], [190.0, 12620.1], [191.0, 10843.333333333334], [192.0, 11332.142857142857], [193.0, 12230.384615384613], [194.0, 12018.53846153846], [195.0, 12390.555555555555], [196.0, 12412.066666666668], [197.0, 12451.214285714284], [198.0, 11844.624999999998], [199.0, 11368.8], [200.0, 11953.3125], [201.0, 11630.666666666668], [202.0, 11425.5], [203.0, 12205.333333333334], [204.0, 12604.266666666665], [205.0, 11588.64705882353], [206.0, 11627.399999999998], [207.0, 11591.285714285714], [208.0, 11619.909090909092], [209.0, 11416.25], [210.0, 11146.357142857143], [211.0, 11160.363636363636], [212.0, 10518.529411764706], [213.0, 9607.777777777777], [214.0, 9980.0], [215.0, 10281.5], [216.0, 10747.0], [217.0, 11216.0], [218.0, 11808.916666666666], [219.0, 10938.066666666666], [220.0, 11008.333333333334], [221.0, 11029.214285714283], [222.0, 11033.1875], [223.0, 11076.625], [224.0, 11407.312499999998], [225.0, 10505.944444444443], [226.0, 10386.500000000002], [227.0, 10750.857142857143], [228.0, 11052.88888888889], [229.0, 10918.625], [230.0, 11388.000000000002], [231.0, 11369.272727272726], [232.0, 11878.000000000002], [233.0, 11765.866666666667], [234.0, 12292.846153846154], [235.0, 12092.928571428572], [236.0, 11952.0], [237.0, 11707.444444444442], [238.0, 11408.9375], [239.0, 18024.11111111111], [240.0, 10955.615384615383], [241.0, 10643.615384615385], [242.0, 10713.307692307691], [243.0, 10283.357142857143], [244.0, 10448.181818181818], [245.0, 10326.375], [246.0, 11534.75], [247.0, 11571.875], [248.0, 11978.777777777776], [249.0, 12444.277777777777], [250.0, 10934.57142857143], [251.0, 10746.083333333332], [252.0, 10758.4375], [253.0, 16918.533333333336], [254.0, 10522.083333333334], [255.0, 22980.000000000004], [257.0, 10822.6875], [256.0, 9783.1], [258.0, 10400.499999999998], [259.0, 17264.466666666664], [260.0, 11260.199999999999], [261.0, 10030.833333333332], [262.0, 12351.900000000001], [263.0, 20317.36363636364], [264.0, 12450.058823529413], [270.0, 12056.785714285716], [271.0, 20370.416666666668], [268.0, 12596.5], [269.0, 14823.333333333334], [265.0, 12649.583333333332], [266.0, 12134.75], [267.0, 11546.846153846154], [273.0, 12798.076923076924], [272.0, 11528.454545454546], [274.0, 20874.666666666664], [275.0, 13061.444444444445], [276.0, 12610.799999999997], [277.0, 14242.800000000001], [278.0, 12889.500000000002], [279.0, 12777.142857142857], [280.0, 18807.111111111113], [286.0, 11766.2], [287.0, 12121.5], [284.0, 19810.454545454548], [285.0, 11926.444444444445], [281.0, 12821.333333333332], [282.0, 21338.4], [283.0, 11874.714285714286], [289.0, 11677.823529411764], [288.0, 12424.470588235294], [290.0, 11365.176470588234], [291.0, 11425.0], [292.0, 16049.999999999998], [293.0, 11538.684210526319], [294.0, 17318.5625], [295.0, 10693.78947368421], [296.0, 17186.333333333332], [302.0, 10231.799999999997], [303.0, 10624.428571428574], [300.0, 12729.111111111111], [301.0, 10805.055555555557], [297.0, 10793.571428571428], [298.0, 13942.57894736842], [299.0, 11182.0], [305.0, 9645.599999999999], [304.0, 16801.529411764706], [306.0, 9550.76923076923], [307.0, 11755.692307692307], [308.0, 10286.142857142855], [309.0, 12421.818181818184], [310.0, 10458.857142857143], [311.0, 10534.384615384615], [312.0, 11668.88888888889], [318.0, 10023.944444444445], [319.0, 19591.583333333332], [316.0, 10824.470588235294], [317.0, 10353.105263157895], [313.0, 11351.086956521738], [314.0, 9843.347826086958], [315.0, 10464.0], [321.0, 10383.772727272726], [320.0, 9281.052631578948], [322.0, 10821.454545454546], [323.0, 12210.09523809524], [324.0, 10080.307692307691], [325.0, 11355.75], [326.0, 11024.357142857141], [327.0, 22353.47368421053], [328.0, 10579.055555555555], [334.0, 12104.642857142855], [335.0, 9426.600000000002], [332.0, 11519.368421052632], [333.0, 11659.812500000002], [329.0, 11221.708333333332], [330.0, 12533.0], [331.0, 11994.35], [337.0, 15788.208333333332], [336.0, 12965.318181818182], [338.0, 10382.720000000001], [339.0, 10480.0], [340.0, 9846.111111111111], [341.0, 13231.789473684214], [342.0, 10665.65625], [343.0, 15910.29411764706], [344.0, 9935.263157894738], [350.0, 10972.896551724138], [351.0, 15382.666666666664], [348.0, 9515.04], [349.0, 10991.45], [345.0, 9823.199999999999], [346.0, 10689.75], [347.0, 10259.818181818184], [353.0, 11465.666666666666], [352.0, 10522.78947368421], [354.0, 11398.350000000004], [355.0, 11906.649999999998], [356.0, 10777.2], [357.0, 10462.823529411764], [358.0, 10782.166666666666], [359.0, 9389.538461538463], [360.0, 11609.0], [366.0, 12154.391304347828], [367.0, 11702.649999999998], [364.0, 10486.029411764706], [365.0, 10652.363636363638], [361.0, 11214.30434782609], [362.0, 11647.857142857143], [363.0, 11352.388888888889], [369.0, 10080.315789473681], [368.0, 10632.473684210527], [370.0, 11622.78947368421], [371.0, 11380.076923076924], [372.0, 10530.966666666665], [373.0, 9484.346153846156], [374.0, 9595.8], [375.0, 10221.818181818182], [376.0, 10634.625], [382.0, 10391.18181818182], [383.0, 10926.66666666667], [380.0, 9588.466666666669], [381.0, 9789.818181818182], [377.0, 10302.0], [378.0, 11110.214285714286], [379.0, 12144.125], [385.0, 11182.285714285716], [384.0, 11358.555555555555], [386.0, 11482.95652173913], [387.0, 12188.11111111111], [388.0, 12249.416666666668], [389.0, 11797.625000000002], [390.0, 11970.916666666666], [391.0, 11705.076923076924], [392.0, 11780.16666666667], [398.0, 11727.764705882353], [399.0, 11359.818181818182], [396.0, 9960.703703703703], [397.0, 11173.692307692309], [393.0, 12109.173913043478], [394.0, 12097.18181818182], [395.0, 10515.833333333332], [401.0, 10768.714285714286], [400.0, 11718.0], [402.0, 11247.447368421052], [403.0, 10950.666666666668], [404.0, 10343.42857142857], [405.0, 11825.333333333334], [406.0, 11558.63157894737], [407.0, 11312.892857142857], [408.0, 10922.363636363636], [414.0, 12108.833333333332], [415.0, 11247.536585365851], [412.0, 11029.666666666664], [413.0, 11897.692307692307], [409.0, 11423.757575757576], [410.0, 10228.545454545456], [411.0, 11057.888888888889], [417.0, 11522.4], [416.0, 12067.26086956522], [418.0, 11655.349999999999], [419.0, 12015.176470588236], [420.0, 12303.935483870968], [421.0, 11117.95652173913], [422.0, 11047.166666666664], [423.0, 10854.90909090909], [424.0, 9977.884615384613], [430.0, 11122.000000000002], [431.0, 11261.526315789473], [428.0, 11394.944444444445], [429.0, 11824.809523809523], [425.0, 10911.090909090908], [426.0, 11054.947368421053], [427.0, 10055.304347826086], [433.0, 11840.074074074073], [432.0, 10951.882352941175], [434.0, 10402.039999999999], [435.0, 10559.739130434784], [436.0, 10283.0], [437.0, 9629.64705882353], [438.0, 9877.590909090908], [439.0, 9938.677419354839], [440.0, 10715.500000000002], [446.0, 10384.999999999998], [447.0, 10459.052631578948], [444.0, 11558.294117647058], [445.0, 10204.034482758621], [441.0, 10716.652173913042], [442.0, 9429.300000000003], [443.0, 10741.22222222222], [449.0, 10707.5], [448.0, 45304.30434782609], [450.0, 16718.964285714283], [451.0, 11840.666666666666], [452.0, 11571.615384615385], [453.0, 10537.875], [454.0, 9758.555555555555], [455.0, 10927.33333333333], [456.0, 15797.954545454546], [462.0, 10977.51612903226], [463.0, 9846.5], [460.0, 11756.6], [461.0, 11442.10344827586], [457.0, 11422.533333333333], [458.0, 10932.724137931038], [459.0, 11598.764705882355], [465.0, 11031.882352941177], [464.0, 20318.571428571428], [466.0, 10814.000000000002], [467.0, 9729.392857142859], [468.0, 10467.214285714286], [469.0, 9002.642857142859], [470.0, 24434.500000000004], [471.0, 12169.428571428572], [472.0, 10254.954545454548], [478.0, 10994.181818181816], [479.0, 10764.04761904762], [476.0, 10742.260869565218], [477.0, 10363.333333333332], [473.0, 10881.692307692309], [474.0, 11357.80769230769], [475.0, 10881.000000000002], [481.0, 11097.199999999997], [480.0, 32580.045454545456], [482.0, 19764.60714285714], [483.0, 9373.692307692309], [484.0, 10683.666666666666], [485.0, 10431.214285714286], [486.0, 10630.821428571426], [487.0, 11013.470588235294], [488.0, 11033.238095238097], [494.0, 10827.117647058823], [495.0, 12573.818181818182], [492.0, 11657.4], [493.0, 11368.111111111111], [489.0, 11283.476190476189], [490.0, 11492.35294117647], [491.0, 9922.764705882355], [496.0, 12020.900000000001], [497.0, 10747.25], [498.0, 11043.961538461539], [499.0, 11228.214285714286], [500.0, 13702.925260170296]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[321.6624949939917, 11446.322386864236]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 28.0], [3.0, 41.0], [4.0, 85263.5], [5.0, 33.0], [6.0, 26.0], [7.0, 36.0], [8.0, 21.0], [9.0, 26.0], [10.0, 74506.5], [11.0, 27.0], [12.0, 25.0], [13.0, 22.0], [14.0, 29.0], [15.0, 43.0], [16.0, 117317.5], [17.0, 334.0], [18.0, 26.0], [19.0, 57.0], [20.0, 239.0], [21.0, 164.0], [22.0, 107154.0], [23.0, 625.0], [24.0, 580.0], [25.0, 689.0], [26.0, 141339.66666666666], [27.0, 646.0], [28.0, 653.0], [29.0, 908.0], [30.0, 800.0], [32.0, 1329.0], [33.0, 1206.0], [34.0, 1295.0], [35.0, 1214.0], [36.0, 1831.0], [37.0, 1612.0], [38.0, 1144.0], [39.0, 1368.0], [40.0, 1351.0], [41.0, 96565.0], [42.0, 1360.0], [43.0, 1209.0], [44.0, 1371.0], [45.0, 1607.0], [46.0, 1245.0], [47.0, 1625.0], [48.0, 1761.0], [50.0, 56247.2], [51.0, 90798.5], [53.0, 36178.0], [54.0, 2340.0], [56.0, 2748.0], [57.0, 2309.0], [58.0, 2112.0], [59.0, 2588.0], [60.0, 2489.0], [61.0, 2707.0], [62.0, 2593.0], [63.0, 2673.0], [65.0, 3266.0], [66.0, 3445.0], [67.0, 3379.0], [68.0, 3042.5], [70.0, 3108.0], [71.0, 3248.0], [72.0, 3365.0], [73.0, 19845.666666666668], [74.0, 28490.5], [75.0, 28106.5], [77.0, 3202.0], [78.0, 3675.0], [79.0, 3767.0], [80.0, 3869.0], [81.0, 3719.0], [82.0, 3481.0], [83.0, 3477.0], [84.0, 3675.0], [85.0, 3662.0], [86.0, 3974.0], [88.0, 4404.0], [89.0, 4470.0], [90.0, 4493.0], [91.0, 4745.0], [92.0, 4289.0], [93.0, 4636.0], [94.0, 4518.0], [95.0, 4397.0], [96.0, 4533.0], [97.0, 4864.0], [98.0, 4952.0], [100.0, 5632.0], [101.0, 5596.0], [102.0, 5306.0], [103.0, 5441.0], [104.0, 5738.0], [105.0, 5364.0], [106.0, 5262.0], [107.0, 5645.0], [108.0, 5971.0], [110.0, 12073.0], [111.0, 6572.0], [112.0, 6808.0], [113.0, 6514.0], [114.0, 6457.0], [115.0, 60711.5], [117.0, 7082.0], [118.0, 7093.0], [119.0, 7302.0], [120.0, 7535.0], [121.0, 12885.0], [122.0, 7479.0], [123.0, 7719.0], [124.0, 7750.0], [125.0, 7924.0], [126.0, 7612.0], [127.0, 7579.0], [128.0, 7853.0], [130.0, 12381.0], [131.0, 8954.0], [133.0, 33648.5], [134.0, 34053.0], [135.0, 15599.0], [136.0, 11643.333333333334], [137.0, 9629.0], [138.0, 13243.666666666666], [139.0, 9275.0], [140.0, 9020.0], [141.0, 9320.0], [142.0, 9105.0], [143.0, 25662.666666666668], [145.0, 55304.5], [146.0, 9277.0], [147.0, 9330.0], [148.0, 9377.0], [149.0, 9761.0], [150.0, 9404.0], [151.0, 9100.0], [152.0, 9316.0], [153.0, 81966.0], [154.0, 62437.5], [155.0, 1.0], [157.0, 10084.0], [158.0, 10480.0], [159.0, 14050.0], [156.0, 14199.0], [162.0, 16399.0], [167.0, 10592.5], [163.0, 16058.0], [161.0, 18124.0], [160.0, 16078.0], [173.0, 11177.0], [171.0, 14590.0], [168.0, 14711.0], [179.0, 13439.0], [181.0, 10960.0], [189.0, 15112.0], [184.0, 15807.0], [192.0, 11584.0], [193.0, 43324.0], [200.0, 23255.0], [203.0, 10801.0], [207.0, 10103.0], [205.0, 11791.0], [202.0, 21680.0], [208.0, 34711.0], [210.0, 10180.0], [214.0, 10143.0], [213.0, 11970.0], [211.0, 13333.0], [218.0, 13235.0], [220.0, 13283.0], [222.0, 10367.0], [225.0, 26402.0], [231.0, 65647.0], [229.0, 10559.0], [232.0, 13316.0], [233.0, 74106.0], [234.0, 13319.0], [235.0, 11530.5], [238.0, 13203.0], [239.0, 13228.0], [240.0, 9692.0], [242.0, 18056.5], [247.0, 79445.0], [244.0, 12484.0], [241.0, 9843.0], [249.0, 17241.666666666668], [250.0, 11131.0], [251.0, 13135.5], [252.0, 11104.0], [253.0, 11762.0], [254.0, 15580.5], [255.0, 106120.0], [258.0, 7686.0], [257.0, 106179.5], [259.0, 52279.666666666664], [268.0, 1.0], [269.0, 7181.0], [270.0, 8681.0], [271.0, 62414.66666666667], [260.0, 26246.0], [261.0, 23874.0], [263.0, 60317.0], [264.0, 10823.666666666666], [265.0, 57734.0], [266.0, 4439.5], [267.0, 45083.2], [274.0, 19623.5], [272.0, 11170.666666666668], [275.0, 14291.5], [284.0, 106808.0], [285.0, 12357.5], [286.0, 35486.0], [287.0, 12849.333333333334], [276.0, 80091.0], [277.0, 64654.0], [278.0, 57410.5], [279.0, 10234.2], [280.0, 45260.0], [281.0, 12499.333333333334], [282.0, 69706.5], [289.0, 13309.0], [288.0, 28161.749999999996], [290.0, 40179.3], [300.0, 27294.4], [301.0, 6751.0], [302.0, 81093.0], [303.0, 9436.666666666666], [292.0, 57346.5], [293.0, 7764.0], [294.0, 51111.6], [295.0, 13845.142857142857], [296.0, 26267.5], [297.0, 9718.666666666666], [298.0, 12749.42857142857], [299.0, 10829.666666666666], [305.0, 7104.0], [304.0, 50276.2], [306.0, 48322.6], [307.0, 11751.5625], [308.0, 28464.636363636364], [309.0, 9756.833333333332], [311.0, 9681.0], [312.0, 35951.0], [318.0, 12776.666666666668], [316.0, 6401.333333333334], [317.0, 10902.0], [313.0, 13874.0], [314.0, 11541.0], [315.0, 9991.666666666666], [321.0, 28639.600000000002], [320.0, 9240.666666666666], [322.0, 14078.5], [323.0, 28415.0], [324.0, 11474.15789473684], [326.0, 11874.0], [327.0, 12474.0], [328.0, 11578.333333333334], [334.0, 12251.0], [335.0, 9855.874999999998], [332.0, 11501.777777777777], [333.0, 58479.25], [329.0, 17073.53846153846], [330.0, 11386.2], [331.0, 21323.333333333336], [337.0, 12981.833333333334], [336.0, 14180.666666666666], [338.0, 11104.0], [339.0, 10586.900000000001], [340.0, 10168.944444444443], [341.0, 22292.0], [342.0, 13437.75], [343.0, 11304.0], [345.0, 8160.0], [350.0, 13883.124999999998], [351.0, 13490.599999999999], [348.0, 10250.363636363636], [349.0, 45431.33333333333], [346.0, 10693.0], [347.0, 9877.666666666666], [353.0, 13567.0], [352.0, 7746.333333333333], [355.0, 8614.857142857143], [354.0, 13312.0], [364.0, 11431.266666666666], [365.0, 9219.0], [366.0, 11869.57142857143], [367.0, 8064.0], [356.0, 11696.874999999998], [357.0, 7753.0], [358.0, 8955.0], [359.0, 12564.333333333334], [360.0, 11775.0], [361.0, 12780.5], [363.0, 15947.285714285716], [369.0, 8497.0], [368.0, 8243.0], [370.0, 11225.454545454544], [371.0, 10442.0], [372.0, 11292.052631578948], [373.0, 8115.111111111112], [374.0, 9195.666666666666], [375.0, 10496.0], [376.0, 13371.0], [382.0, 13836.0], [383.0, 12478.666666666666], [380.0, 9689.333333333334], [381.0, 8035.6], [377.0, 9216.0], [378.0, 13586.5], [379.0, 12074.153846153844], [385.0, 3712.0], [384.0, 7296.0], [386.0, 12791.285714285716], [387.0, 12897.8], [388.0, 13385.0], [389.0, 14791.75], [390.0, 13413.0], [392.0, 11830.333333333334], [398.0, 11468.857142857143], [399.0, 11348.666666666666], [396.0, 10612.0], [397.0, 9813.166666666666], [393.0, 11909.333333333334], [394.0, 11767.888888888889], [395.0, 10536.5], [401.0, 12799.6], [400.0, 10414.5], [402.0, 12411.833333333332], [403.0, 13312.0], [404.0, 9763.857142857143], [405.0, 11066.375], [406.0, 13330.5], [407.0, 12955.42857142857], [408.0, 8634.0], [414.0, 10952.0], [415.0, 10874.099999999999], [412.0, 9127.0], [413.0, 10239.666666666666], [409.0, 13072.555555555555], [410.0, 12260.666666666666], [411.0, 7424.0], [418.0, 9653.0], [416.0, 10376.5], [419.0, 12010.666666666666], [428.0, 13244.0], [429.0, 14592.0], [430.0, 14594.0], [431.0, 9899.375], [420.0, 11667.333333333332], [421.0, 11776.0], [422.0, 9698.0], [423.0, 12197.5], [424.0, 11557.1875], [425.0, 12955.0], [426.0, 8509.4], [427.0, 10121.5], [433.0, 10337.857142857143], [432.0, 7423.666666666667], [434.0, 10441.894736842103], [435.0, 11854.142857142857], [436.0, 8187.0], [437.0, 11181.0], [438.0, 8631.5], [439.0, 13253.882352941175], [440.0, 9219.0], [446.0, 6913.666666666667], [447.0, 8513.333333333334], [444.0, 9263.777777777777], [445.0, 11334.25], [441.0, 10869.5], [442.0, 9029.666666666666], [443.0, 10752.0], [449.0, 4865.666666666666], [448.0, 87028.9], [450.0, 13375.875], [451.0, 12548.0], [452.0, 77226.0], [454.0, 9719.333333333332], [455.0, 11652.0], [456.0, 12640.625], [462.0, 26497.555555555555], [463.0, 8197.0], [460.0, 30581.000000000004], [461.0, 11157.285714285716], [457.0, 10585.285714285714], [458.0, 11030.857142857143], [459.0, 10361.0], [465.0, 11238.2], [464.0, 60243.77777777778], [466.0, 9662.166666666668], [467.0, 8965.384615384613], [468.0, 10392.333333333334], [469.0, 8898.5], [470.0, 54528.0], [471.0, 13782.75], [472.0, 9803.142857142857], [479.0, 7841.833333333332], [477.0, 10339.0], [478.0, 10721.916666666666], [473.0, 12965.5], [474.0, 12734.5], [475.0, 11745.142857142857], [482.0, 58303.0], [480.0, 17558.384615384617], [483.0, 9827.90909090909], [492.0, 14075.0], [493.0, 9212.2], [494.0, 10948.2], [495.0, 13018.0], [484.0, 8810.666666666666], [485.0, 8726.5], [486.0, 11553.428571428572], [487.0, 7552.874999999999], [488.0, 9685.666666666666], [489.0, 10878.666666666666], [490.0, 12460.25], [491.0, 8953.0], [496.0, 12323.555555555555], [497.0, 10514.833333333334], [498.0, 9315.0], [499.0, 11005.333333333334], [500.0, 24677.028824833695], [1.0, 101.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[380.82586814292927, 18933.793658782073]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 58.71666666666667, "minX": 1.53928422E12, "maxY": 1060780.2333333334, "series": [{"data": [[1.53928446E12, 904813.9333333333], [1.53928476E12, 864166.1166666667], [1.53928434E12, 960295.4666666667], [1.5392847E12, 861865.9166666666], [1.5392844E12, 832838.1166666667], [1.53928464E12, 860904.0333333333], [1.53928494E12, 88.0], [1.53928458E12, 884336.8333333334], [1.53928488E12, 116410.95], [1.53928422E12, 46743.4], [1.53928452E12, 831802.05], [1.53928482E12, 892227.25], [1.53928428E12, 1060780.2333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928446E12, 3216.733333333333], [1.53928476E12, 6972.833333333333], [1.53928434E12, 3748.0333333333333], [1.5392847E12, 7334.533333333334], [1.5392844E12, 3178.4333333333334], [1.53928464E12, 6850.783333333334], [1.53928494E12, 58.71666666666667], [1.53928458E12, 6634.083333333333], [1.53928488E12, 780.1666666666666], [1.53928422E12, 244.2], [1.53928452E12, 4582.55], [1.53928482E12, 6905.483333333334], [1.53928428E12, 4123.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928494E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.53928422E12, "maxY": 158566.4, "series": [{"data": [[1.53928446E12, 11950.866666666665], [1.53928476E12, 14801.81454545454], [1.53928434E12, 6171.745098039214], [1.5392847E12, 13447.106741573036], [1.5392844E12, 10620.076923076924], [1.53928464E12, 11018.706624605684], [1.53928494E12, 158566.4], [1.53928458E12, 11914.80794701986], [1.53928488E12, 74341.38775510206], [1.53928422E12, 1882.1111111111109], [1.53928452E12, 14009.419354838714], [1.53928482E12, 25630.04263565892], [1.53928428E12, 2588.2222222222226]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928446E12, 11471.025232403736], [1.53928476E12, 12485.639837398377], [1.53928434E12, 6178.373749999999], [1.5392847E12, 12364.69820971867], [1.5392844E12, 11044.317002881844], [1.53928464E12, 11144.686832740235], [1.53928494E12, 158302.16666666666], [1.53928458E12, 11390.050862851966], [1.53928488E12, 54931.45535714285], [1.53928422E12, 781.1052631578947], [1.53928452E12, 13269.48477466504], [1.53928482E12, 14478.09920000002], [1.53928428E12, 2289.8871331828427]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928446E12, 22021.413793103446], [1.53928476E12, 21101.557142857135], [1.53928434E12, 5337.799999999999], [1.5392847E12, 16194.370270270283], [1.5392844E12, 9750.727272727272], [1.53928464E12, 11267.492537313437], [1.53928494E12, 157746.2], [1.53928458E12, 13820.299003322254], [1.53928488E12, 62759.5], [1.53928422E12, 36.9], [1.53928452E12, 30628.855721393058], [1.53928482E12, 25250.73782771535], [1.53928428E12, 1469.052631578947]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928494E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 36.9, "minX": 1.53928422E12, "maxY": 158566.4, "series": [{"data": [[1.53928446E12, 11950.866666666665], [1.53928476E12, 14801.807272727267], [1.53928434E12, 6171.745098039214], [1.5392847E12, 13447.095505617983], [1.5392844E12, 10620.076923076924], [1.53928464E12, 11018.665615141954], [1.53928494E12, 158566.4], [1.53928458E12, 11914.798013245034], [1.53928488E12, 74341.36734693877], [1.53928422E12, 1882.1111111111109], [1.53928452E12, 14009.419354838714], [1.53928482E12, 25630.04263565892], [1.53928428E12, 2588.2222222222226]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928446E12, 11470.515272244338], [1.53928476E12, 12485.358536585369], [1.53928434E12, 6177.9074999999975], [1.5392847E12, 12364.35379369139], [1.5392844E12, 11043.809798270895], [1.53928464E12, 11144.354982206401], [1.53928494E12, 158302.16666666666], [1.53928458E12, 11389.711171662122], [1.53928488E12, 54931.06249999999], [1.53928422E12, 780.7368421052632], [1.53928452E12, 13268.987819732038], [1.53928482E12, 14477.829600000005], [1.53928428E12, 2289.4198645598194]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928446E12, 22021.379310344826], [1.53928476E12, 21101.550000000007], [1.53928434E12, 5337.781818181817], [1.5392847E12, 16194.364864864858], [1.5392844E12, 9750.666666666666], [1.53928464E12, 11267.462686567178], [1.53928494E12, 157746.2], [1.53928458E12, 13820.289036544851], [1.53928488E12, 62759.47727272727], [1.53928422E12, 36.9], [1.53928452E12, 30628.845771144264], [1.53928482E12, 25250.734082397004], [1.53928428E12, 1469.0350877192982]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928494E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928422E12, "maxY": 5.5, "series": [{"data": [[1.53928446E12, 0.7333333333333333], [1.53928476E12, 0.2872727272727272], [1.53928434E12, 1.0196078431372546], [1.5392847E12, 0.4775280898876404], [1.5392844E12, 0.5897435897435896], [1.53928464E12, 0.2839116719242903], [1.53928494E12, 0.2], [1.53928458E12, 0.3543046357615892], [1.53928488E12, 0.4897959183673469], [1.53928422E12, 0.0], [1.53928452E12, 0.4000000000000001], [1.53928482E12, 0.3953488372093023], [1.53928428E12, 0.29629629629629634]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928446E12, 0.6281540504648069], [1.53928476E12, 0.33170731707317097], [1.53928434E12, 0.6350000000000007], [1.5392847E12, 0.43307757885763], [1.5392844E12, 0.5634005763688767], [1.53928464E12, 0.38879003558718866], [1.53928494E12, 0.16666666666666666], [1.53928458E12, 0.48864668483197143], [1.53928488E12, 0.29464285714285726], [1.53928422E12, 0.34210526315789475], [1.53928452E12, 0.5359317904993909], [1.53928482E12, 0.3600000000000007], [1.53928428E12, 0.562076749435666]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928446E12, 0.8620689655172413], [1.53928476E12, 0.2642857142857142], [1.53928434E12, 0.8363636363636363], [1.5392847E12, 0.7918918918918911], [1.5392844E12, 1.0303030303030305], [1.53928464E12, 0.34029850746268664], [1.53928494E12, 0.0], [1.53928458E12, 0.3388704318936875], [1.53928488E12, 0.1818181818181819], [1.53928422E12, 5.5], [1.53928452E12, 0.6865671641791046], [1.53928482E12, 0.2734082397003744], [1.53928428E12, 1.2807017543859645]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928494E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.53928422E12, "maxY": 115601.0, "series": [{"data": [[1.53928446E12, 64235.0], [1.53928476E12, 17015.0], [1.53928434E12, 13318.0], [1.53928458E12, 18023.0], [1.53928488E12, 115601.0], [1.53928422E12, 5706.0], [1.5392847E12, 18486.0], [1.5392844E12, 19993.0], [1.53928452E12, 64654.0], [1.53928482E12, 21900.0], [1.53928428E12, 6525.0], [1.53928464E12, 18462.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928446E12, 9220.0], [1.53928476E12, 9631.0], [1.53928434E12, 2660.0], [1.53928458E12, 9144.0], [1.53928488E12, 10865.0], [1.53928422E12, 21.0], [1.5392847E12, 9125.0], [1.5392844E12, 8954.0], [1.53928452E12, 8832.0], [1.53928482E12, 9369.0], [1.53928428E12, 22.0], [1.53928464E12, 9296.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928446E12, 11715.2], [1.53928476E12, 12452.5], [1.53928434E12, 7842.0], [1.53928458E12, 12348.7], [1.53928488E12, 12647.800000000001], [1.53928422E12, 1360.2000000000003], [1.5392847E12, 12424.0], [1.5392844E12, 11153.400000000001], [1.53928452E12, 12200.6], [1.53928482E12, 12508.900000000001], [1.53928428E12, 3738.4], [1.53928464E12, 12403.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928446E12, 14753.78], [1.53928476E12, 15579.75], [1.53928434E12, 10441.5], [1.53928458E12, 15478.58], [1.53928488E12, 17494.289999999997], [1.53928422E12, 5706.0], [1.5392847E12, 15587.279999999995], [1.5392844E12, 13655.720000000005], [1.53928452E12, 15293.880000000005], [1.53928482E12, 15602.179999999998], [1.53928428E12, 5125.32], [1.53928464E12, 15574.8]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928446E12, 12564.65], [1.53928476E12, 13237.5], [1.53928434E12, 8567.5], [1.53928458E12, 13111.849999999999], [1.53928488E12, 13672.8], [1.53928422E12, 2443.399999999998], [1.5392847E12, 13238.599999999999], [1.5392844E12, 11708.2], [1.53928452E12, 12942.599999999999], [1.53928482E12, 13280.15], [1.53928428E12, 4138.849999999999], [1.53928464E12, 13206.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928488E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 148992.5, "series": [{"data": [[0.0, 690.0], [16.0, 2190.0], [19.0, 11460.0], [12.0, 10837.0], [3.0, 18039.0], [13.0, 11196.0], [28.0, 10762.0], [29.0, 11023.0], [15.0, 5879.0], [31.0, 10760.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 1.0], [0.0, 148992.5], [19.0, 13308.5], [12.0, 1.0], [3.0, 105728.0], [13.0, 13425.5], [28.0, 11775.0], [29.0, 13311.0], [15.0, 1.0], [31.0, 11263.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 148992.5, "series": [{"data": [[0.0, 690.0], [16.0, 2190.0], [19.0, 11459.0], [12.0, 10836.0], [3.0, 18039.0], [13.0, 11196.0], [28.0, 10762.0], [29.0, 11023.0], [15.0, 5878.0], [31.0, 10759.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 1.0], [0.0, 148992.5], [19.0, 13308.5], [12.0, 1.0], [3.0, 105728.0], [13.0, 13425.0], [28.0, 11775.0], [29.0, 13311.0], [15.0, 1.0], [31.0, 11263.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.53928422E12, "maxY": 32.65, "series": [{"data": [[1.53928446E12, 14.283333333333333], [1.53928476E12, 29.916666666666668], [1.53928434E12, 16.1], [1.53928458E12, 29.4], [1.53928422E12, 1.1166666666666667], [1.5392847E12, 32.65], [1.5392844E12, 13.766666666666667], [1.53928452E12, 20.616666666666667], [1.53928482E12, 24.933333333333334], [1.53928428E12, 17.616666666666667], [1.53928464E12, 30.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928482E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.53928422E12, "maxY": 18.45, "series": [{"data": [[1.53928446E12, 12.733333333333333], [1.53928476E12, 12.383333333333333], [1.53928434E12, 14.166666666666666], [1.53928458E12, 12.633333333333333], [1.53928488E12, 2.066666666666667], [1.53928422E12, 0.8], [1.5392847E12, 12.416666666666666], [1.5392844E12, 12.05], [1.53928452E12, 11.966666666666667], [1.53928482E12, 12.65], [1.53928428E12, 15.616666666666667], [1.53928464E12, 12.266666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928446E12, 0.18333333333333332], [1.53928476E12, 0.43333333333333335], [1.53928434E12, 0.85], [1.53928458E12, 0.5166666666666667], [1.53928422E12, 0.15], [1.5392847E12, 0.5166666666666667], [1.5392844E12, 0.65], [1.53928452E12, 0.45], [1.53928482E12, 0.21666666666666667], [1.53928428E12, 0.9], [1.53928464E12, 0.38333333333333336]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928446E12, 0.3333333333333333], [1.53928494E12, 0.26666666666666666], [1.53928476E12, 16.783333333333335], [1.53928434E12, 0.08333333333333333], [1.53928458E12, 15.083333333333334], [1.53928488E12, 0.7833333333333333], [1.5392847E12, 18.45], [1.5392844E12, 0.06666666666666667], [1.53928452E12, 7.05], [1.53928482E12, 16.583333333333332], [1.53928428E12, 0.1], [1.53928464E12, 16.75]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928446E12, 0.03333333333333333], [1.53928476E12, 0.15], [1.53928458E12, 0.16666666666666666], [1.53928488E12, 0.5666666666666667], [1.5392847E12, 0.26666666666666666], [1.53928452E12, 0.15], [1.53928482E12, 0.13333333333333333], [1.53928464E12, 0.2]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928494E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928422E12, "maxY": 14.666666666666666, "series": [{"data": [[1.53928446E12, 0.23333333333333334], [1.53928476E12, 0.4166666666666667], [1.53928434E12, 0.9166666666666666], [1.53928458E12, 0.5333333333333333], [1.53928488E12, 0.5333333333333333], [1.53928422E12, 0.16666666666666666], [1.5392847E12, 0.5166666666666667], [1.5392844E12, 0.5333333333333333], [1.53928452E12, 0.55], [1.53928482E12, 0.2833333333333333], [1.53928428E12, 0.95], [1.53928464E12, 0.43333333333333335]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928446E12, 0.18333333333333332], [1.53928476E12, 0.43333333333333335], [1.53928434E12, 0.85], [1.53928458E12, 0.5166666666666667], [1.53928422E12, 0.15], [1.5392847E12, 0.5166666666666667], [1.5392844E12, 0.65], [1.53928452E12, 0.45], [1.53928482E12, 0.21666666666666667], [1.53928428E12, 0.9], [1.53928464E12, 0.38333333333333336]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928446E12, 12.5], [1.53928476E12, 11.966666666666667], [1.53928434E12, 13.25], [1.53928458E12, 12.1], [1.53928488E12, 1.5333333333333334], [1.53928422E12, 0.6333333333333333], [1.5392847E12, 11.9], [1.5392844E12, 11.516666666666667], [1.53928452E12, 11.416666666666666], [1.53928482E12, 12.366666666666667], [1.53928428E12, 14.666666666666666], [1.53928464E12, 11.833333333333334]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928446E12, 0.25], [1.53928494E12, 0.08333333333333333], [1.53928476E12, 4.25], [1.53928458E12, 4.483333333333333], [1.53928488E12, 0.2], [1.5392847E12, 5.65], [1.5392844E12, 0.016666666666666666], [1.53928452E12, 2.8], [1.53928482E12, 4.166666666666667], [1.53928464E12, 5.15]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928446E12, 0.05], [1.53928494E12, 0.1], [1.53928476E12, 8.533333333333333], [1.53928434E12, 0.08333333333333333], [1.53928458E12, 6.25], [1.53928488E12, 0.3333333333333333], [1.5392847E12, 7.65], [1.5392844E12, 0.05], [1.53928452E12, 2.2666666666666666], [1.53928482E12, 8.466666666666667], [1.53928428E12, 0.1], [1.53928464E12, 6.9]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928446E12, 0.06666666666666667], [1.53928494E12, 0.08333333333333333], [1.53928476E12, 4.15], [1.53928458E12, 4.516666666666667], [1.53928488E12, 0.8166666666666667], [1.5392847E12, 5.416666666666667], [1.53928452E12, 2.1333333333333333], [1.53928482E12, 4.083333333333333], [1.53928464E12, 4.9]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928494E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
