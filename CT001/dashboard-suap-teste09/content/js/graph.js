/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 219136.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 3.0], [6.9, 21.0], [7.0, 567.0], [7.1, 598.0], [7.2, 614.0], [7.3, 738.0], [7.4, 758.0], [7.5, 771.0], [7.6, 1137.0], [7.7, 1255.0], [7.8, 1416.0], [7.9, 1429.0], [8.0, 1452.0], [8.1, 1600.0], [8.2, 1804.0], [8.3, 1954.0], [8.4, 1972.0], [8.5, 1976.0], [8.6, 1995.0], [8.7, 2298.0], [8.8, 2337.0], [8.9, 2388.0], [9.0, 2498.0], [9.1, 2591.0], [9.2, 2752.0], [9.3, 2839.0], [9.4, 2893.0], [9.5, 2990.0], [9.6, 3084.0], [9.7, 3198.0], [9.8, 3361.0], [9.9, 3594.0], [10.0, 3607.0], [10.1, 3811.0], [10.2, 3832.0], [10.3, 3914.0], [10.4, 4091.0], [10.5, 4132.0], [10.6, 4206.0], [10.7, 4307.0], [10.8, 4599.0], [10.9, 4618.0], [11.0, 4723.0], [11.1, 4856.0], [11.2, 4991.0], [11.3, 5169.0], [11.4, 5284.0], [11.5, 5543.0], [11.6, 6134.0], [11.7, 6602.0], [11.8, 6643.0], [11.9, 7013.0], [12.0, 7164.0], [12.1, 7164.0], [12.2, 7164.0], [12.3, 7164.0], [12.4, 7166.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7171.0], [14.1, 7171.0], [14.2, 7172.0], [14.3, 7172.0], [14.4, 7172.0], [14.5, 7173.0], [14.6, 7301.0], [14.7, 7419.0], [14.8, 7423.0], [14.9, 7423.0], [15.0, 7423.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7428.0], [16.5, 7428.0], [16.6, 7676.0], [16.7, 7679.0], [16.8, 7679.0], [16.9, 7679.0], [17.0, 7679.0], [17.1, 7679.0], [17.2, 7679.0], [17.3, 7680.0], [17.4, 7680.0], [17.5, 7680.0], [17.6, 7680.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7681.0], [18.3, 7730.0], [18.4, 7879.0], [18.5, 7930.0], [18.6, 7932.0], [18.7, 7935.0], [18.8, 7935.0], [18.9, 7936.0], [19.0, 7936.0], [19.1, 7936.0], [19.2, 7936.0], [19.3, 7936.0], [19.4, 7936.0], [19.5, 7936.0], [19.6, 7936.0], [19.7, 7936.0], [19.8, 7936.0], [19.9, 7943.0], [20.0, 8074.0], [20.1, 8188.0], [20.2, 8188.0], [20.3, 8188.0], [20.4, 8191.0], [20.5, 8191.0], [20.6, 8191.0], [20.7, 8192.0], [20.8, 8192.0], [20.9, 8192.0], [21.0, 8192.0], [21.1, 8192.0], [21.2, 8192.0], [21.3, 8192.0], [21.4, 8192.0], [21.5, 8192.0], [21.6, 8192.0], [21.7, 8192.0], [21.8, 8192.0], [21.9, 8192.0], [22.0, 8192.0], [22.1, 8192.0], [22.2, 8192.0], [22.3, 8195.0], [22.4, 8196.0], [22.5, 8196.0], [22.6, 8302.0], [22.7, 8443.0], [22.8, 8444.0], [22.9, 8447.0], [23.0, 8448.0], [23.1, 8448.0], [23.2, 8448.0], [23.3, 8448.0], [23.4, 8448.0], [23.5, 8448.0], [23.6, 8451.0], [23.7, 8570.0], [23.8, 8617.0], [23.9, 8700.0], [24.0, 8700.0], [24.1, 8700.0], [24.2, 8700.0], [24.3, 8700.0], [24.4, 8700.0], [24.5, 8703.0], [24.6, 8703.0], [24.7, 8703.0], [24.8, 8704.0], [24.9, 8704.0], [25.0, 8704.0], [25.1, 8704.0], [25.2, 8704.0], [25.3, 8704.0], [25.4, 8704.0], [25.5, 8704.0], [25.6, 8704.0], [25.7, 8704.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8705.0], [26.1, 8705.0], [26.2, 8874.0], [26.3, 8959.0], [26.4, 8959.0], [26.5, 8959.0], [26.6, 8959.0], [26.7, 8960.0], [26.8, 8960.0], [26.9, 8960.0], [27.0, 8960.0], [27.1, 8960.0], [27.2, 8964.0], [27.3, 8989.0], [27.4, 9049.0], [27.5, 9154.0], [27.6, 9185.0], [27.7, 9211.0], [27.8, 9212.0], [27.9, 9212.0], [28.0, 9215.0], [28.1, 9215.0], [28.2, 9215.0], [28.3, 9215.0], [28.4, 9216.0], [28.5, 9216.0], [28.6, 9216.0], [28.7, 9216.0], [28.8, 9216.0], [28.9, 9216.0], [29.0, 9216.0], [29.1, 9216.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9216.0], [29.5, 9263.0], [29.6, 9273.0], [29.7, 9323.0], [29.8, 9341.0], [29.9, 9437.0], [30.0, 9468.0], [30.1, 9472.0], [30.2, 9472.0], [30.3, 9472.0], [30.4, 9494.0], [30.5, 9508.0], [30.6, 9574.0], [30.7, 9596.0], [30.8, 9614.0], [30.9, 9622.0], [31.0, 9647.0], [31.1, 9654.0], [31.2, 9671.0], [31.3, 9684.0], [31.4, 9691.0], [31.5, 9698.0], [31.6, 9727.0], [31.7, 9727.0], [31.8, 9727.0], [31.9, 9727.0], [32.0, 9727.0], [32.1, 9728.0], [32.2, 9728.0], [32.3, 9728.0], [32.4, 9728.0], [32.5, 9728.0], [32.6, 9728.0], [32.7, 9728.0], [32.8, 9728.0], [32.9, 9728.0], [33.0, 9728.0], [33.1, 9728.0], [33.2, 9728.0], [33.3, 9777.0], [33.4, 9790.0], [33.5, 9801.0], [33.6, 9813.0], [33.7, 9840.0], [33.8, 9853.0], [33.9, 9893.0], [34.0, 9924.0], [34.1, 9931.0], [34.2, 9980.0], [34.3, 9983.0], [34.4, 9984.0], [34.5, 9984.0], [34.6, 9984.0], [34.7, 9984.0], [34.8, 9984.0], [34.9, 9987.0], [35.0, 9992.0], [35.1, 10026.0], [35.2, 10036.0], [35.3, 10053.0], [35.4, 10055.0], [35.5, 10064.0], [35.6, 10075.0], [35.7, 10105.0], [35.8, 10125.0], [35.9, 10173.0], [36.0, 10179.0], [36.1, 10195.0], [36.2, 10215.0], [36.3, 10238.0], [36.4, 10239.0], [36.5, 10239.0], [36.6, 10239.0], [36.7, 10239.0], [36.8, 10239.0], [36.9, 10239.0], [37.0, 10240.0], [37.1, 10240.0], [37.2, 10240.0], [37.3, 10240.0], [37.4, 10240.0], [37.5, 10240.0], [37.6, 10240.0], [37.7, 10240.0], [37.8, 10240.0], [37.9, 10240.0], [38.0, 10240.0], [38.1, 10240.0], [38.2, 10240.0], [38.3, 10240.0], [38.4, 10240.0], [38.5, 10241.0], [38.6, 10263.0], [38.7, 10274.0], [38.8, 10275.0], [38.9, 10293.0], [39.0, 10328.0], [39.1, 10338.0], [39.2, 10350.0], [39.3, 10365.0], [39.4, 10373.0], [39.5, 10406.0], [39.6, 10421.0], [39.7, 10476.0], [39.8, 10496.0], [39.9, 10496.0], [40.0, 10522.0], [40.1, 10533.0], [40.2, 10569.0], [40.3, 10573.0], [40.4, 10619.0], [40.5, 10639.0], [40.6, 10647.0], [40.7, 10688.0], [40.8, 10706.0], [40.9, 10732.0], [41.0, 10748.0], [41.1, 10748.0], [41.2, 10751.0], [41.3, 10751.0], [41.4, 10751.0], [41.5, 10752.0], [41.6, 10752.0], [41.7, 10752.0], [41.8, 10752.0], [41.9, 10752.0], [42.0, 10752.0], [42.1, 10755.0], [42.2, 10756.0], [42.3, 10759.0], [42.4, 10782.0], [42.5, 10803.0], [42.6, 10855.0], [42.7, 10877.0], [42.8, 10900.0], [42.9, 10916.0], [43.0, 10924.0], [43.1, 10940.0], [43.2, 10969.0], [43.3, 10972.0], [43.4, 10984.0], [43.5, 11006.0], [43.6, 11007.0], [43.7, 11008.0], [43.8, 11008.0], [43.9, 11008.0], [44.0, 11008.0], [44.1, 11012.0], [44.2, 11036.0], [44.3, 11060.0], [44.4, 11067.0], [44.5, 11096.0], [44.6, 11109.0], [44.7, 11127.0], [44.8, 11146.0], [44.9, 11159.0], [45.0, 11160.0], [45.1, 11192.0], [45.2, 11211.0], [45.3, 11260.0], [45.4, 11261.0], [45.5, 11263.0], [45.6, 11264.0], [45.7, 11264.0], [45.8, 11265.0], [45.9, 11296.0], [46.0, 11303.0], [46.1, 11330.0], [46.2, 11392.0], [46.3, 11411.0], [46.4, 11432.0], [46.5, 11441.0], [46.6, 11480.0], [46.7, 11519.0], [46.8, 11520.0], [46.9, 11579.0], [47.0, 11611.0], [47.1, 11628.0], [47.2, 11629.0], [47.3, 11642.0], [47.4, 11677.0], [47.5, 11695.0], [47.6, 11729.0], [47.7, 11737.0], [47.8, 11748.0], [47.9, 11772.0], [48.0, 11775.0], [48.1, 11776.0], [48.2, 11776.0], [48.3, 11805.0], [48.4, 11828.0], [48.5, 11850.0], [48.6, 11855.0], [48.7, 11860.0], [48.8, 11871.0], [48.9, 11892.0], [49.0, 11914.0], [49.1, 11949.0], [49.2, 11973.0], [49.3, 11987.0], [49.4, 12009.0], [49.5, 12032.0], [49.6, 12075.0], [49.7, 12182.0], [49.8, 12203.0], [49.9, 12227.0], [50.0, 12227.0], [50.1, 12287.0], [50.2, 12287.0], [50.3, 12288.0], [50.4, 12292.0], [50.5, 12325.0], [50.6, 12336.0], [50.7, 12357.0], [50.8, 12404.0], [50.9, 12432.0], [51.0, 12466.0], [51.1, 12483.0], [51.2, 12487.0], [51.3, 12540.0], [51.4, 12540.0], [51.5, 12540.0], [51.6, 12543.0], [51.7, 12543.0], [51.8, 12543.0], [51.9, 12544.0], [52.0, 12544.0], [52.1, 12544.0], [52.2, 12544.0], [52.3, 12544.0], [52.4, 12546.0], [52.5, 12547.0], [52.6, 12548.0], [52.7, 12659.0], [52.8, 12773.0], [52.9, 12784.0], [53.0, 12799.0], [53.1, 12799.0], [53.2, 12800.0], [53.3, 12800.0], [53.4, 12800.0], [53.5, 12800.0], [53.6, 12819.0], [53.7, 12829.0], [53.8, 12846.0], [53.9, 12874.0], [54.0, 12898.0], [54.1, 12946.0], [54.2, 13021.0], [54.3, 13028.0], [54.4, 13055.0], [54.5, 13055.0], [54.6, 13056.0], [54.7, 13056.0], [54.8, 13056.0], [54.9, 13069.0], [55.0, 13088.0], [55.1, 13099.0], [55.2, 13205.0], [55.3, 13220.0], [55.4, 13274.0], [55.5, 13302.0], [55.6, 13307.0], [55.7, 13307.0], [55.8, 13307.0], [55.9, 13308.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13310.0], [57.2, 13311.0], [57.3, 13311.0], [57.4, 13311.0], [57.5, 13311.0], [57.6, 13311.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13312.0], [60.6, 13312.0], [60.7, 13312.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13313.0], [75.7, 13313.0], [75.8, 13313.0], [75.9, 13313.0], [76.0, 13313.0], [76.1, 13313.0], [76.2, 13314.0], [76.3, 13315.0], [76.4, 13315.0], [76.5, 13315.0], [76.6, 13315.0], [76.7, 13315.0], [76.8, 13315.0], [76.9, 13315.0], [77.0, 13315.0], [77.1, 13316.0], [77.2, 13316.0], [77.3, 13316.0], [77.4, 13316.0], [77.5, 13316.0], [77.6, 13316.0], [77.7, 13316.0], [77.8, 13316.0], [77.9, 13316.0], [78.0, 13316.0], [78.1, 13316.0], [78.2, 13316.0], [78.3, 13321.0], [78.4, 13322.0], [78.5, 13366.0], [78.6, 13429.0], [78.7, 13431.0], [78.8, 13461.0], [78.9, 13525.0], [79.0, 13556.0], [79.1, 13568.0], [79.2, 13568.0], [79.3, 13568.0], [79.4, 13568.0], [79.5, 13593.0], [79.6, 13705.0], [79.7, 13802.0], [79.8, 13819.0], [79.9, 13820.0], [80.0, 13820.0], [80.1, 13820.0], [80.2, 13820.0], [80.3, 13820.0], [80.4, 13820.0], [80.5, 13820.0], [80.6, 13822.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13825.0], [84.0, 13825.0], [84.1, 13828.0], [84.2, 13828.0], [84.3, 13828.0], [84.4, 13954.0], [84.5, 14080.0], [84.6, 14080.0], [84.7, 14081.0], [84.8, 14254.0], [84.9, 14332.0], [85.0, 14332.0], [85.1, 14332.0], [85.2, 14334.0], [85.3, 14335.0], [85.4, 14335.0], [85.5, 14335.0], [85.6, 14335.0], [85.7, 14335.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14336.0], [86.6, 14336.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14339.0], [87.7, 14339.0], [87.8, 14592.0], [87.9, 14592.0], [88.0, 14592.0], [88.1, 14592.0], [88.2, 14783.0], [88.3, 14843.0], [88.4, 14844.0], [88.5, 14845.0], [88.6, 14847.0], [88.7, 14847.0], [88.8, 14848.0], [88.9, 14848.0], [89.0, 15104.0], [89.1, 15364.0], [89.2, 15616.0], [89.3, 15616.0], [89.4, 15872.0], [89.5, 15872.0], [89.6, 16128.0], [89.7, 16384.0], [89.8, 16384.0], [89.9, 16384.0], [90.0, 16896.0], [90.1, 16896.0], [90.2, 16899.0], [90.3, 17151.0], [90.4, 17152.0], [90.5, 17152.0], [90.6, 17152.0], [90.7, 17283.0], [90.8, 17303.0], [90.9, 17515.0], [91.0, 17834.0], [91.1, 17854.0], [91.2, 18431.0], [91.3, 18691.0], [91.4, 18944.0], [91.5, 18947.0], [91.6, 20224.0], [91.7, 21504.0], [91.8, 26367.0], [91.9, 26367.0], [92.0, 26368.0], [92.1, 26368.0], [92.2, 26368.0], [92.3, 26368.0], [92.4, 26368.0], [92.5, 26368.0], [92.6, 26387.0], [92.7, 26620.0], [92.8, 27395.0], [92.9, 28672.0], [93.0, 28835.0], [93.1, 33197.0], [93.2, 34816.0], [93.3, 35051.0], [93.4, 38911.0], [93.5, 38912.0], [93.6, 40355.0], [93.7, 42275.0], [93.8, 43554.0], [93.9, 45330.0], [94.0, 45337.0], [94.1, 52736.0], [94.2, 53504.0], [94.3, 56601.0], [94.4, 57869.0], [94.5, 61696.0], [94.6, 76799.0], [94.7, 76799.0], [94.8, 77259.0], [94.9, 86020.0], [95.0, 90111.0], [95.1, 91647.0], [95.2, 93696.0], [95.3, 93696.0], [95.4, 99584.0], [95.5, 105467.0], [95.6, 105471.0], [95.7, 105471.0], [95.8, 105472.0], [95.9, 105728.0], [96.0, 106240.0], [96.1, 106240.0], [96.2, 106241.0], [96.3, 106495.0], [96.4, 106496.0], [96.5, 106496.0], [96.6, 106496.0], [96.7, 106497.0], [96.8, 107007.0], [96.9, 107260.0], [97.0, 107263.0], [97.1, 107264.0], [97.2, 107264.0], [97.3, 107264.0], [97.4, 107264.0], [97.5, 107775.0], [97.6, 108028.0], [97.7, 108288.0], [97.8, 108799.0], [97.9, 110076.0], [98.0, 110077.0], [98.1, 110080.0], [98.2, 110080.0], [98.3, 112127.0], [98.4, 112127.0], [98.5, 112128.0], [98.6, 112128.0], [98.7, 115200.0], [98.8, 119568.0], [98.9, 123136.0], [99.0, 131324.0], [99.1, 131324.0], [99.2, 154880.0], [99.3, 169983.0], [99.4, 169983.0], [99.5, 169983.0], [99.6, 169984.0], [99.7, 169984.0], [99.8, 219133.0], [99.9, 219135.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 2.0], [2.7, 491.0], [2.8, 566.0], [2.9, 633.0], [3.0, 685.0], [3.1, 718.0], [3.2, 756.0], [3.3, 775.0], [3.4, 809.0], [3.5, 846.0], [3.6, 888.0], [3.7, 911.0], [3.8, 936.0], [3.9, 976.0], [4.0, 1020.0], [4.1, 1063.0], [4.2, 1076.0], [4.3, 1114.0], [4.4, 1134.0], [4.5, 1164.0], [4.6, 1187.0], [4.7, 1212.0], [4.8, 1250.0], [4.9, 1279.0], [5.0, 1318.0], [5.1, 1358.0], [5.2, 1391.0], [5.3, 1441.0], [5.4, 1467.0], [5.5, 1520.0], [5.6, 1544.0], [5.7, 1571.0], [5.8, 1595.0], [5.9, 1627.0], [6.0, 1660.0], [6.1, 1687.0], [6.2, 1723.0], [6.3, 1764.0], [6.4, 1793.0], [6.5, 1819.0], [6.6, 1841.0], [6.7, 1855.0], [6.8, 1879.0], [6.9, 1898.0], [7.0, 1942.0], [7.1, 1964.0], [7.2, 1985.0], [7.3, 2001.0], [7.4, 2022.0], [7.5, 2061.0], [7.6, 2079.0], [7.7, 2104.0], [7.8, 2127.0], [7.9, 2176.0], [8.0, 2218.0], [8.1, 2266.0], [8.2, 2332.0], [8.3, 2366.0], [8.4, 2426.0], [8.5, 2461.0], [8.6, 2513.0], [8.7, 2550.0], [8.8, 2590.0], [8.9, 2637.0], [9.0, 2708.0], [9.1, 2736.0], [9.2, 2790.0], [9.3, 2823.0], [9.4, 2856.0], [9.5, 2867.0], [9.6, 2893.0], [9.7, 2916.0], [9.8, 2949.0], [9.9, 2974.0], [10.0, 3023.0], [10.1, 3042.0], [10.2, 3088.0], [10.3, 3132.0], [10.4, 3170.0], [10.5, 3227.0], [10.6, 3270.0], [10.7, 3303.0], [10.8, 3334.0], [10.9, 3366.0], [11.0, 3396.0], [11.1, 3416.0], [11.2, 3453.0], [11.3, 3468.0], [11.4, 3528.0], [11.5, 3566.0], [11.6, 3612.0], [11.7, 3655.0], [11.8, 3711.0], [11.9, 3759.0], [12.0, 3786.0], [12.1, 3848.0], [12.2, 3915.0], [12.3, 3978.0], [12.4, 4029.0], [12.5, 4089.0], [12.6, 4171.0], [12.7, 4211.0], [12.8, 4267.0], [12.9, 4309.0], [13.0, 4341.0], [13.1, 4372.0], [13.2, 4411.0], [13.3, 4432.0], [13.4, 4502.0], [13.5, 4554.0], [13.6, 4615.0], [13.7, 4665.0], [13.8, 4718.0], [13.9, 4755.0], [14.0, 4822.0], [14.1, 4903.0], [14.2, 4957.0], [14.3, 5016.0], [14.4, 5118.0], [14.5, 5218.0], [14.6, 5270.0], [14.7, 5305.0], [14.8, 5362.0], [14.9, 5439.0], [15.0, 5504.0], [15.1, 5593.0], [15.2, 5698.0], [15.3, 5789.0], [15.4, 5940.0], [15.5, 6069.0], [15.6, 6255.0], [15.7, 6409.0], [15.8, 6497.0], [15.9, 6596.0], [16.0, 6705.0], [16.1, 6802.0], [16.2, 6847.0], [16.3, 6979.0], [16.4, 7065.0], [16.5, 7091.0], [16.6, 7164.0], [16.7, 7167.0], [16.8, 7168.0], [16.9, 7168.0], [17.0, 7168.0], [17.1, 7168.0], [17.2, 7172.0], [17.3, 7185.0], [17.4, 7227.0], [17.5, 7248.0], [17.6, 7264.0], [17.7, 7296.0], [17.8, 7329.0], [17.9, 7362.0], [18.0, 7420.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7428.0], [18.7, 7464.0], [18.8, 7531.0], [18.9, 7612.0], [19.0, 7669.0], [19.1, 7676.0], [19.2, 7679.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7698.0], [19.8, 7761.0], [19.9, 7823.0], [20.0, 7882.0], [20.1, 7920.0], [20.2, 7935.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7940.0], [20.8, 7951.0], [20.9, 8012.0], [21.0, 8114.0], [21.1, 8153.0], [21.2, 8177.0], [21.3, 8189.0], [21.4, 8191.0], [21.5, 8192.0], [21.6, 8192.0], [21.7, 8192.0], [21.8, 8196.0], [21.9, 8254.0], [22.0, 8318.0], [22.1, 8368.0], [22.2, 8412.0], [22.3, 8444.0], [22.4, 8448.0], [22.5, 8448.0], [22.6, 8466.0], [22.7, 8525.0], [22.8, 8613.0], [22.9, 8695.0], [23.0, 8700.0], [23.1, 8703.0], [23.2, 8704.0], [23.3, 8704.0], [23.4, 8704.0], [23.5, 8704.0], [23.6, 8722.0], [23.7, 8767.0], [23.8, 8844.0], [23.9, 8892.0], [24.0, 8929.0], [24.1, 8959.0], [24.2, 8960.0], [24.3, 8963.0], [24.4, 9010.0], [24.5, 9115.0], [24.6, 9145.0], [24.7, 9173.0], [24.8, 9189.0], [24.9, 9212.0], [25.0, 9215.0], [25.1, 9216.0], [25.2, 9216.0], [25.3, 9216.0], [25.4, 9216.0], [25.5, 9216.0], [25.6, 9231.0], [25.7, 9254.0], [25.8, 9288.0], [25.9, 9321.0], [26.0, 9338.0], [26.1, 9354.0], [26.2, 9383.0], [26.3, 9403.0], [26.4, 9440.0], [26.5, 9468.0], [26.6, 9472.0], [26.7, 9484.0], [26.8, 9503.0], [26.9, 9522.0], [27.0, 9558.0], [27.1, 9577.0], [27.2, 9592.0], [27.3, 9609.0], [27.4, 9626.0], [27.5, 9644.0], [27.6, 9654.0], [27.7, 9662.0], [27.8, 9674.0], [27.9, 9685.0], [28.0, 9702.0], [28.1, 9714.0], [28.2, 9723.0], [28.3, 9727.0], [28.4, 9727.0], [28.5, 9728.0], [28.6, 9728.0], [28.7, 9728.0], [28.8, 9728.0], [28.9, 9730.0], [29.0, 9734.0], [29.1, 9752.0], [29.2, 9760.0], [29.3, 9766.0], [29.4, 9777.0], [29.5, 9783.0], [29.6, 9793.0], [29.7, 9802.0], [29.8, 9811.0], [29.9, 9823.0], [30.0, 9829.0], [30.1, 9836.0], [30.2, 9840.0], [30.3, 9850.0], [30.4, 9859.0], [30.5, 9869.0], [30.6, 9882.0], [30.7, 9891.0], [30.8, 9900.0], [30.9, 9909.0], [31.0, 9917.0], [31.1, 9922.0], [31.2, 9935.0], [31.3, 9943.0], [31.4, 9953.0], [31.5, 9961.0], [31.6, 9973.0], [31.7, 9980.0], [31.8, 9984.0], [31.9, 9984.0], [32.0, 9984.0], [32.1, 9988.0], [32.2, 9995.0], [32.3, 10002.0], [32.4, 10009.0], [32.5, 10016.0], [32.6, 10028.0], [32.7, 10036.0], [32.8, 10041.0], [32.9, 10044.0], [33.0, 10052.0], [33.1, 10058.0], [33.2, 10066.0], [33.3, 10074.0], [33.4, 10079.0], [33.5, 10085.0], [33.6, 10095.0], [33.7, 10108.0], [33.8, 10113.0], [33.9, 10118.0], [34.0, 10126.0], [34.1, 10132.0], [34.2, 10141.0], [34.3, 10151.0], [34.4, 10164.0], [34.5, 10167.0], [34.6, 10172.0], [34.7, 10179.0], [34.8, 10187.0], [34.9, 10193.0], [35.0, 10198.0], [35.1, 10205.0], [35.2, 10211.0], [35.3, 10221.0], [35.4, 10229.0], [35.5, 10234.0], [35.6, 10238.0], [35.7, 10239.0], [35.8, 10240.0], [35.9, 10240.0], [36.0, 10240.0], [36.1, 10240.0], [36.2, 10244.0], [36.3, 10251.0], [36.4, 10256.0], [36.5, 10264.0], [36.6, 10270.0], [36.7, 10274.0], [36.8, 10278.0], [36.9, 10281.0], [37.0, 10288.0], [37.1, 10293.0], [37.2, 10297.0], [37.3, 10303.0], [37.4, 10306.0], [37.5, 10312.0], [37.6, 10318.0], [37.7, 10321.0], [37.8, 10323.0], [37.9, 10327.0], [38.0, 10333.0], [38.1, 10341.0], [38.2, 10345.0], [38.3, 10350.0], [38.4, 10359.0], [38.5, 10365.0], [38.6, 10372.0], [38.7, 10377.0], [38.8, 10380.0], [38.9, 10384.0], [39.0, 10391.0], [39.1, 10400.0], [39.2, 10404.0], [39.3, 10409.0], [39.4, 10416.0], [39.5, 10423.0], [39.6, 10427.0], [39.7, 10433.0], [39.8, 10437.0], [39.9, 10443.0], [40.0, 10446.0], [40.1, 10451.0], [40.2, 10456.0], [40.3, 10463.0], [40.4, 10466.0], [40.5, 10474.0], [40.6, 10480.0], [40.7, 10484.0], [40.8, 10487.0], [40.9, 10491.0], [41.0, 10494.0], [41.1, 10496.0], [41.2, 10498.0], [41.3, 10502.0], [41.4, 10505.0], [41.5, 10510.0], [41.6, 10513.0], [41.7, 10516.0], [41.8, 10519.0], [41.9, 10523.0], [42.0, 10528.0], [42.1, 10534.0], [42.2, 10540.0], [42.3, 10545.0], [42.4, 10553.0], [42.5, 10556.0], [42.6, 10560.0], [42.7, 10565.0], [42.8, 10569.0], [42.9, 10574.0], [43.0, 10581.0], [43.1, 10586.0], [43.2, 10590.0], [43.3, 10596.0], [43.4, 10601.0], [43.5, 10608.0], [43.6, 10611.0], [43.7, 10616.0], [43.8, 10620.0], [43.9, 10627.0], [44.0, 10630.0], [44.1, 10634.0], [44.2, 10640.0], [44.3, 10643.0], [44.4, 10649.0], [44.5, 10655.0], [44.6, 10660.0], [44.7, 10665.0], [44.8, 10671.0], [44.9, 10676.0], [45.0, 10679.0], [45.1, 10682.0], [45.2, 10686.0], [45.3, 10689.0], [45.4, 10692.0], [45.5, 10697.0], [45.6, 10702.0], [45.7, 10707.0], [45.8, 10712.0], [45.9, 10713.0], [46.0, 10720.0], [46.1, 10723.0], [46.2, 10728.0], [46.3, 10734.0], [46.4, 10738.0], [46.5, 10742.0], [46.6, 10747.0], [46.7, 10751.0], [46.8, 10752.0], [46.9, 10752.0], [47.0, 10753.0], [47.1, 10757.0], [47.2, 10760.0], [47.3, 10765.0], [47.4, 10771.0], [47.5, 10777.0], [47.6, 10781.0], [47.7, 10785.0], [47.8, 10789.0], [47.9, 10794.0], [48.0, 10798.0], [48.1, 10800.0], [48.2, 10804.0], [48.3, 10809.0], [48.4, 10812.0], [48.5, 10816.0], [48.6, 10818.0], [48.7, 10821.0], [48.8, 10828.0], [48.9, 10834.0], [49.0, 10836.0], [49.1, 10839.0], [49.2, 10842.0], [49.3, 10846.0], [49.4, 10851.0], [49.5, 10857.0], [49.6, 10861.0], [49.7, 10867.0], [49.8, 10871.0], [49.9, 10877.0], [50.0, 10880.0], [50.1, 10885.0], [50.2, 10890.0], [50.3, 10894.0], [50.4, 10898.0], [50.5, 10902.0], [50.6, 10910.0], [50.7, 10914.0], [50.8, 10917.0], [50.9, 10922.0], [51.0, 10926.0], [51.1, 10929.0], [51.2, 10932.0], [51.3, 10936.0], [51.4, 10938.0], [51.5, 10944.0], [51.6, 10945.0], [51.7, 10952.0], [51.8, 10955.0], [51.9, 10963.0], [52.0, 10969.0], [52.1, 10972.0], [52.2, 10977.0], [52.3, 10983.0], [52.4, 10985.0], [52.5, 10987.0], [52.6, 10990.0], [52.7, 10994.0], [52.8, 10996.0], [52.9, 11000.0], [53.0, 11004.0], [53.1, 11007.0], [53.2, 11008.0], [53.3, 11009.0], [53.4, 11014.0], [53.5, 11016.0], [53.6, 11019.0], [53.7, 11020.0], [53.8, 11024.0], [53.9, 11027.0], [54.0, 11033.0], [54.1, 11037.0], [54.2, 11040.0], [54.3, 11044.0], [54.4, 11047.0], [54.5, 11053.0], [54.6, 11056.0], [54.7, 11061.0], [54.8, 11067.0], [54.9, 11071.0], [55.0, 11076.0], [55.1, 11080.0], [55.2, 11083.0], [55.3, 11087.0], [55.4, 11091.0], [55.5, 11093.0], [55.6, 11097.0], [55.7, 11101.0], [55.8, 11105.0], [55.9, 11110.0], [56.0, 11113.0], [56.1, 11117.0], [56.2, 11121.0], [56.3, 11128.0], [56.4, 11132.0], [56.5, 11136.0], [56.6, 11139.0], [56.7, 11144.0], [56.8, 11148.0], [56.9, 11153.0], [57.0, 11155.0], [57.1, 11161.0], [57.2, 11165.0], [57.3, 11168.0], [57.4, 11172.0], [57.5, 11176.0], [57.6, 11181.0], [57.7, 11183.0], [57.8, 11186.0], [57.9, 11190.0], [58.0, 11196.0], [58.1, 11201.0], [58.2, 11203.0], [58.3, 11206.0], [58.4, 11212.0], [58.5, 11216.0], [58.6, 11220.0], [58.7, 11224.0], [58.8, 11229.0], [58.9, 11233.0], [59.0, 11235.0], [59.1, 11239.0], [59.2, 11242.0], [59.3, 11244.0], [59.4, 11248.0], [59.5, 11251.0], [59.6, 11255.0], [59.7, 11257.0], [59.8, 11260.0], [59.9, 11264.0], [60.0, 11264.0], [60.1, 11266.0], [60.2, 11269.0], [60.3, 11275.0], [60.4, 11280.0], [60.5, 11284.0], [60.6, 11285.0], [60.7, 11289.0], [60.8, 11293.0], [60.9, 11295.0], [61.0, 11302.0], [61.1, 11306.0], [61.2, 11311.0], [61.3, 11314.0], [61.4, 11316.0], [61.5, 11320.0], [61.6, 11325.0], [61.7, 11329.0], [61.8, 11335.0], [61.9, 11340.0], [62.0, 11344.0], [62.1, 11350.0], [62.2, 11352.0], [62.3, 11357.0], [62.4, 11362.0], [62.5, 11366.0], [62.6, 11371.0], [62.7, 11381.0], [62.8, 11385.0], [62.9, 11389.0], [63.0, 11393.0], [63.1, 11398.0], [63.2, 11400.0], [63.3, 11404.0], [63.4, 11409.0], [63.5, 11413.0], [63.6, 11416.0], [63.7, 11419.0], [63.8, 11425.0], [63.9, 11430.0], [64.0, 11435.0], [64.1, 11438.0], [64.2, 11442.0], [64.3, 11447.0], [64.4, 11449.0], [64.5, 11454.0], [64.6, 11460.0], [64.7, 11464.0], [64.8, 11467.0], [64.9, 11470.0], [65.0, 11476.0], [65.1, 11481.0], [65.2, 11485.0], [65.3, 11495.0], [65.4, 11498.0], [65.5, 11505.0], [65.6, 11512.0], [65.7, 11517.0], [65.8, 11523.0], [65.9, 11528.0], [66.0, 11533.0], [66.1, 11536.0], [66.2, 11540.0], [66.3, 11547.0], [66.4, 11551.0], [66.5, 11557.0], [66.6, 11561.0], [66.7, 11564.0], [66.8, 11570.0], [66.9, 11576.0], [67.0, 11582.0], [67.1, 11588.0], [67.2, 11592.0], [67.3, 11598.0], [67.4, 11603.0], [67.5, 11609.0], [67.6, 11614.0], [67.7, 11618.0], [67.8, 11623.0], [67.9, 11627.0], [68.0, 11636.0], [68.1, 11645.0], [68.2, 11651.0], [68.3, 11656.0], [68.4, 11662.0], [68.5, 11669.0], [68.6, 11676.0], [68.7, 11684.0], [68.8, 11689.0], [68.9, 11692.0], [69.0, 11698.0], [69.1, 11705.0], [69.2, 11710.0], [69.3, 11719.0], [69.4, 11723.0], [69.5, 11728.0], [69.6, 11736.0], [69.7, 11743.0], [69.8, 11748.0], [69.9, 11754.0], [70.0, 11762.0], [70.1, 11769.0], [70.2, 11775.0], [70.3, 11776.0], [70.4, 11781.0], [70.5, 11789.0], [70.6, 11796.0], [70.7, 11803.0], [70.8, 11811.0], [70.9, 11819.0], [71.0, 11823.0], [71.1, 11828.0], [71.2, 11837.0], [71.3, 11842.0], [71.4, 11848.0], [71.5, 11857.0], [71.6, 11865.0], [71.7, 11877.0], [71.8, 11889.0], [71.9, 11894.0], [72.0, 11899.0], [72.1, 11906.0], [72.2, 11913.0], [72.3, 11918.0], [72.4, 11923.0], [72.5, 11934.0], [72.6, 11940.0], [72.7, 11949.0], [72.8, 11958.0], [72.9, 11966.0], [73.0, 11977.0], [73.1, 11991.0], [73.2, 12000.0], [73.3, 12013.0], [73.4, 12025.0], [73.5, 12031.0], [73.6, 12032.0], [73.7, 12041.0], [73.8, 12049.0], [73.9, 12056.0], [74.0, 12064.0], [74.1, 12089.0], [74.2, 12097.0], [74.3, 12115.0], [74.4, 12120.0], [74.5, 12133.0], [74.6, 12147.0], [74.7, 12157.0], [74.8, 12166.0], [74.9, 12178.0], [75.0, 12186.0], [75.1, 12194.0], [75.2, 12199.0], [75.3, 12208.0], [75.4, 12215.0], [75.5, 12224.0], [75.6, 12234.0], [75.7, 12249.0], [75.8, 12256.0], [75.9, 12272.0], [76.0, 12281.0], [76.1, 12288.0], [76.2, 12290.0], [76.3, 12298.0], [76.4, 12310.0], [76.5, 12325.0], [76.6, 12335.0], [76.7, 12349.0], [76.8, 12357.0], [76.9, 12370.0], [77.0, 12381.0], [77.1, 12387.0], [77.2, 12402.0], [77.3, 12416.0], [77.4, 12431.0], [77.5, 12449.0], [77.6, 12457.0], [77.7, 12473.0], [77.8, 12491.0], [77.9, 12509.0], [78.0, 12528.0], [78.1, 12540.0], [78.2, 12544.0], [78.3, 12545.0], [78.4, 12548.0], [78.5, 12558.0], [78.6, 12574.0], [78.7, 12581.0], [78.8, 12597.0], [78.9, 12605.0], [79.0, 12625.0], [79.1, 12649.0], [79.2, 12674.0], [79.3, 12683.0], [79.4, 12707.0], [79.5, 12726.0], [79.6, 12742.0], [79.7, 12757.0], [79.8, 12766.0], [79.9, 12785.0], [80.0, 12799.0], [80.1, 12800.0], [80.2, 12814.0], [80.3, 12836.0], [80.4, 12854.0], [80.5, 12884.0], [80.6, 12916.0], [80.7, 12947.0], [80.8, 12978.0], [80.9, 12998.0], [81.0, 13029.0], [81.1, 13045.0], [81.2, 13056.0], [81.3, 13068.0], [81.4, 13090.0], [81.5, 13118.0], [81.6, 13137.0], [81.7, 13156.0], [81.8, 13173.0], [81.9, 13189.0], [82.0, 13210.0], [82.1, 13228.0], [82.2, 13246.0], [82.3, 13256.0], [82.4, 13274.0], [82.5, 13288.0], [82.6, 13307.0], [82.7, 13308.0], [82.8, 13308.0], [82.9, 13308.0], [83.0, 13308.0], [83.1, 13309.0], [83.2, 13310.0], [83.3, 13311.0], [83.4, 13311.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13313.0], [87.9, 13313.0], [88.0, 13313.0], [88.1, 13314.0], [88.2, 13316.0], [88.3, 13316.0], [88.4, 13316.0], [88.5, 13316.0], [88.6, 13316.0], [88.7, 13319.0], [88.8, 13321.0], [88.9, 13337.0], [89.0, 13344.0], [89.1, 13346.0], [89.2, 13358.0], [89.3, 13364.0], [89.4, 13369.0], [89.5, 13378.0], [89.6, 13399.0], [89.7, 13413.0], [89.8, 13428.0], [89.9, 13452.0], [90.0, 13482.0], [90.1, 13507.0], [90.2, 13532.0], [90.3, 13574.0], [90.4, 13612.0], [90.5, 13673.0], [90.6, 13706.0], [90.7, 13745.0], [90.8, 13781.0], [90.9, 13802.0], [91.0, 13820.0], [91.1, 13820.0], [91.2, 13823.0], [91.3, 13824.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13825.0], [92.0, 13827.0], [92.1, 13828.0], [92.2, 13857.0], [92.3, 13902.0], [92.4, 13943.0], [92.5, 14009.0], [92.6, 14075.0], [92.7, 14080.0], [92.8, 14126.0], [92.9, 14167.0], [93.0, 14211.0], [93.1, 14289.0], [93.2, 14332.0], [93.3, 14333.0], [93.4, 14335.0], [93.5, 14335.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14351.0], [94.1, 14472.0], [94.2, 14520.0], [94.3, 14592.0], [94.4, 14612.0], [94.5, 14708.0], [94.6, 14784.0], [94.7, 14847.0], [94.8, 14848.0], [94.9, 14861.0], [95.0, 14940.0], [95.1, 15032.0], [95.2, 15104.0], [95.3, 15158.0], [95.4, 15331.0], [95.5, 15412.0], [95.6, 15500.0], [95.7, 15545.0], [95.8, 15709.0], [95.9, 15872.0], [96.0, 16025.0], [96.1, 16130.0], [96.2, 16261.0], [96.3, 16383.0], [96.4, 16387.0], [96.5, 16766.0], [96.6, 16896.0], [96.7, 17152.0], [96.8, 17860.0], [96.9, 18149.0], [97.0, 18390.0], [97.1, 18633.0], [97.2, 18952.0], [97.3, 20125.0], [97.4, 21338.0], [97.5, 22550.0], [97.6, 26112.0], [97.7, 26368.0], [97.8, 26368.0], [97.9, 26472.0], [98.0, 30092.0], [98.1, 35918.0], [98.2, 43301.0], [98.3, 48015.0], [98.4, 57255.0], [98.5, 67557.0], [98.6, 90112.0], [98.7, 93696.0], [98.8, 105478.0], [98.9, 106491.0], [99.0, 106497.0], [99.1, 106752.0], [99.2, 107263.0], [99.3, 107264.0], [99.4, 107776.0], [99.5, 110080.0], [99.6, 112128.0], [99.7, 119040.0], [99.8, 136961.0], [99.9, 169984.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 2.0], [6.3, 3.0], [6.4, 20.0], [6.5, 21.0], [6.6, 27.0], [6.7, 30.0], [6.8, 33.0], [6.9, 35.0], [7.0, 39.0], [7.1, 40.0], [7.2, 101.0], [7.3, 242.0], [7.4, 442.0], [7.5, 445.0], [7.6, 552.0], [7.7, 684.0], [7.8, 697.0], [7.9, 839.0], [8.0, 959.0], [8.1, 1027.0], [8.2, 1107.0], [8.3, 1183.0], [8.4, 1233.0], [8.5, 1348.0], [8.6, 1366.0], [8.7, 1499.0], [8.8, 1751.0], [8.9, 1901.0], [9.0, 2008.0], [9.1, 2230.0], [9.2, 2276.0], [9.3, 2412.0], [9.4, 2508.0], [9.5, 2564.0], [9.6, 2741.0], [9.7, 2846.0], [9.8, 2911.0], [9.9, 3227.0], [10.0, 3298.0], [10.1, 3476.0], [10.2, 3632.0], [10.3, 3751.0], [10.4, 3857.0], [10.5, 4164.0], [10.6, 4551.0], [10.7, 4559.0], [10.8, 4613.0], [10.9, 4748.0], [11.0, 5021.0], [11.1, 5712.0], [11.2, 5920.0], [11.3, 6004.0], [11.4, 6086.0], [11.5, 6289.0], [11.6, 6372.0], [11.7, 6432.0], [11.8, 6534.0], [11.9, 6796.0], [12.0, 7009.0], [12.1, 7065.0], [12.2, 7130.0], [12.3, 7164.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7171.0], [14.3, 7171.0], [14.4, 7172.0], [14.5, 7172.0], [14.6, 7172.0], [14.7, 7172.0], [14.8, 7172.0], [14.9, 7173.0], [15.0, 7191.0], [15.1, 7204.0], [15.2, 7230.0], [15.3, 7254.0], [15.4, 7287.0], [15.5, 7292.0], [15.6, 7347.0], [15.7, 7404.0], [15.8, 7420.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7425.0], [17.5, 7425.0], [17.6, 7441.0], [17.7, 7468.0], [17.8, 7498.0], [17.9, 7528.0], [18.0, 7576.0], [18.1, 7582.0], [18.2, 7620.0], [18.3, 7640.0], [18.4, 7647.0], [18.5, 7676.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7679.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7681.0], [20.0, 7684.0], [20.1, 7687.0], [20.2, 7794.0], [20.3, 7817.0], [20.4, 7870.0], [20.5, 7932.0], [20.6, 7935.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7940.0], [22.1, 7940.0], [22.2, 8051.0], [22.3, 8077.0], [22.4, 8111.0], [22.5, 8158.0], [22.6, 8188.0], [22.7, 8191.0], [22.8, 8191.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8193.0], [24.0, 8195.0], [24.1, 8231.0], [24.2, 8284.0], [24.3, 8380.0], [24.4, 8427.0], [24.5, 8444.0], [24.6, 8448.0], [24.7, 8448.0], [24.8, 8448.0], [24.9, 8448.0], [25.0, 8451.0], [25.1, 8483.0], [25.2, 8512.0], [25.3, 8572.0], [25.4, 8680.0], [25.5, 8687.0], [25.6, 8697.0], [25.7, 8700.0], [25.8, 8700.0], [25.9, 8700.0], [26.0, 8702.0], [26.1, 8703.0], [26.2, 8703.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8705.0], [27.3, 8706.0], [27.4, 8751.0], [27.5, 8803.0], [27.6, 8870.0], [27.7, 8876.0], [27.8, 8882.0], [27.9, 8911.0], [28.0, 8959.0], [28.1, 8960.0], [28.2, 8960.0], [28.3, 8960.0], [28.4, 8960.0], [28.5, 8963.0], [28.6, 9008.0], [28.7, 9022.0], [28.8, 9024.0], [28.9, 9027.0], [29.0, 9053.0], [29.1, 9073.0], [29.2, 9117.0], [29.3, 9148.0], [29.4, 9169.0], [29.5, 9190.0], [29.6, 9212.0], [29.7, 9212.0], [29.8, 9212.0], [29.9, 9213.0], [30.0, 9215.0], [30.1, 9215.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9216.0], [31.5, 9239.0], [31.6, 9261.0], [31.7, 9274.0], [31.8, 9297.0], [31.9, 9323.0], [32.0, 9349.0], [32.1, 9386.0], [32.2, 9436.0], [32.3, 9468.0], [32.4, 9472.0], [32.5, 9472.0], [32.6, 9472.0], [32.7, 9475.0], [32.8, 9526.0], [32.9, 9592.0], [33.0, 9598.0], [33.1, 9643.0], [33.2, 9646.0], [33.3, 9673.0], [33.4, 9702.0], [33.5, 9712.0], [33.6, 9726.0], [33.7, 9727.0], [33.8, 9727.0], [33.9, 9727.0], [34.0, 9727.0], [34.1, 9727.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9728.0], [35.5, 9728.0], [35.6, 9729.0], [35.7, 9729.0], [35.8, 9758.0], [35.9, 9842.0], [36.0, 9966.0], [36.1, 9983.0], [36.2, 9983.0], [36.3, 9984.0], [36.4, 9984.0], [36.5, 9984.0], [36.6, 9984.0], [36.7, 9984.0], [36.8, 9987.0], [36.9, 10001.0], [37.0, 10004.0], [37.1, 10026.0], [37.2, 10048.0], [37.3, 10065.0], [37.4, 10093.0], [37.5, 10118.0], [37.6, 10145.0], [37.7, 10161.0], [37.8, 10209.0], [37.9, 10229.0], [38.0, 10233.0], [38.1, 10236.0], [38.2, 10238.0], [38.3, 10239.0], [38.4, 10239.0], [38.5, 10239.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10240.0], [38.9, 10240.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10240.0], [39.3, 10240.0], [39.4, 10240.0], [39.5, 10240.0], [39.6, 10240.0], [39.7, 10240.0], [39.8, 10251.0], [39.9, 10258.0], [40.0, 10269.0], [40.1, 10275.0], [40.2, 10284.0], [40.3, 10305.0], [40.4, 10361.0], [40.5, 10372.0], [40.6, 10399.0], [40.7, 10401.0], [40.8, 10425.0], [40.9, 10446.0], [41.0, 10471.0], [41.1, 10492.0], [41.2, 10493.0], [41.3, 10496.0], [41.4, 10603.0], [41.5, 10604.0], [41.6, 10608.0], [41.7, 10615.0], [41.8, 10630.0], [41.9, 10638.0], [42.0, 10651.0], [42.1, 10667.0], [42.2, 10686.0], [42.3, 10694.0], [42.4, 10748.0], [42.5, 10751.0], [42.6, 10751.0], [42.7, 10752.0], [42.8, 10752.0], [42.9, 10752.0], [43.0, 10752.0], [43.1, 10752.0], [43.2, 10752.0], [43.3, 10752.0], [43.4, 10752.0], [43.5, 10756.0], [43.6, 10756.0], [43.7, 10756.0], [43.8, 10762.0], [43.9, 10780.0], [44.0, 10795.0], [44.1, 10812.0], [44.2, 10838.0], [44.3, 10855.0], [44.4, 10866.0], [44.5, 10893.0], [44.6, 10942.0], [44.7, 10957.0], [44.8, 10970.0], [44.9, 10995.0], [45.0, 11008.0], [45.1, 11008.0], [45.2, 11008.0], [45.3, 11013.0], [45.4, 11031.0], [45.5, 11058.0], [45.6, 11083.0], [45.7, 11130.0], [45.8, 11172.0], [45.9, 11190.0], [46.0, 11202.0], [46.1, 11231.0], [46.2, 11260.0], [46.3, 11264.0], [46.4, 11264.0], [46.5, 11264.0], [46.6, 11268.0], [46.7, 11268.0], [46.8, 11333.0], [46.9, 11337.0], [47.0, 11372.0], [47.1, 11392.0], [47.2, 11424.0], [47.3, 11462.0], [47.4, 11491.0], [47.5, 11520.0], [47.6, 11520.0], [47.7, 11525.0], [47.8, 11603.0], [47.9, 11612.0], [48.0, 11630.0], [48.1, 11633.0], [48.2, 11711.0], [48.3, 11775.0], [48.4, 11776.0], [48.5, 11776.0], [48.6, 11776.0], [48.7, 11776.0], [48.8, 11784.0], [48.9, 11822.0], [49.0, 11891.0], [49.1, 12010.0], [49.2, 12031.0], [49.3, 12057.0], [49.4, 12140.0], [49.5, 12167.0], [49.6, 12275.0], [49.7, 12286.0], [49.8, 12287.0], [49.9, 12288.0], [50.0, 12288.0], [50.1, 12288.0], [50.2, 12288.0], [50.3, 12292.0], [50.4, 12292.0], [50.5, 12330.0], [50.6, 12434.0], [50.7, 12456.0], [50.8, 12543.0], [50.9, 12543.0], [51.0, 12544.0], [51.1, 12544.0], [51.2, 12544.0], [51.3, 12544.0], [51.4, 12544.0], [51.5, 12547.0], [51.6, 12547.0], [51.7, 12548.0], [51.8, 12651.0], [51.9, 12680.0], [52.0, 12711.0], [52.1, 12764.0], [52.2, 12786.0], [52.3, 12800.0], [52.4, 12800.0], [52.5, 12800.0], [52.6, 12800.0], [52.7, 12857.0], [52.8, 12982.0], [52.9, 13054.0], [53.0, 13056.0], [53.1, 13056.0], [53.2, 13060.0], [53.3, 13067.0], [53.4, 13143.0], [53.5, 13163.0], [53.6, 13170.0], [53.7, 13176.0], [53.8, 13195.0], [53.9, 13203.0], [54.0, 13210.0], [54.1, 13218.0], [54.2, 13233.0], [54.3, 13235.0], [54.4, 13241.0], [54.5, 13242.0], [54.6, 13245.0], [54.7, 13247.0], [54.8, 13259.0], [54.9, 13264.0], [55.0, 13266.0], [55.1, 13275.0], [55.2, 13279.0], [55.3, 13290.0], [55.4, 13292.0], [55.5, 13293.0], [55.6, 13299.0], [55.7, 13301.0], [55.8, 13305.0], [55.9, 13306.0], [56.0, 13307.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13309.0], [57.4, 13309.0], [57.5, 13310.0], [57.6, 13310.0], [57.7, 13310.0], [57.8, 13310.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13312.0], [60.1, 13312.0], [60.2, 13312.0], [60.3, 13312.0], [60.4, 13312.0], [60.5, 13312.0], [60.6, 13312.0], [60.7, 13312.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13314.0], [73.0, 13315.0], [73.1, 13315.0], [73.2, 13315.0], [73.3, 13315.0], [73.4, 13316.0], [73.5, 13316.0], [73.6, 13316.0], [73.7, 13316.0], [73.8, 13316.0], [73.9, 13316.0], [74.0, 13316.0], [74.1, 13316.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13317.0], [74.9, 13320.0], [75.0, 13321.0], [75.1, 13321.0], [75.2, 13322.0], [75.3, 13322.0], [75.4, 13327.0], [75.5, 13331.0], [75.6, 13337.0], [75.7, 13346.0], [75.8, 13354.0], [75.9, 13362.0], [76.0, 13364.0], [76.1, 13372.0], [76.2, 13383.0], [76.3, 13384.0], [76.4, 13389.0], [76.5, 13391.0], [76.6, 13401.0], [76.7, 13408.0], [76.8, 13414.0], [76.9, 13474.0], [77.0, 13495.0], [77.1, 13513.0], [77.2, 13530.0], [77.3, 13538.0], [77.4, 13567.0], [77.5, 13567.0], [77.6, 13568.0], [77.7, 13568.0], [77.8, 13568.0], [77.9, 13568.0], [78.0, 13644.0], [78.1, 13710.0], [78.2, 13722.0], [78.3, 13745.0], [78.4, 13754.0], [78.5, 13762.0], [78.6, 13793.0], [78.7, 13811.0], [78.8, 13819.0], [78.9, 13820.0], [79.0, 13820.0], [79.1, 13822.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13825.0], [81.7, 13825.0], [81.8, 13825.0], [81.9, 13827.0], [82.0, 13828.0], [82.1, 13828.0], [82.2, 13831.0], [82.3, 13908.0], [82.4, 13952.0], [82.5, 14001.0], [82.6, 14080.0], [82.7, 14080.0], [82.8, 14080.0], [82.9, 14080.0], [83.0, 14080.0], [83.1, 14080.0], [83.2, 14171.0], [83.3, 14210.0], [83.4, 14235.0], [83.5, 14293.0], [83.6, 14332.0], [83.7, 14333.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14337.0], [85.0, 14340.0], [85.1, 14448.0], [85.2, 14512.0], [85.3, 14591.0], [85.4, 14592.0], [85.5, 14593.0], [85.6, 14766.0], [85.7, 14842.0], [85.8, 14844.0], [85.9, 14847.0], [86.0, 14848.0], [86.1, 14848.0], [86.2, 14848.0], [86.3, 14848.0], [86.4, 14848.0], [86.5, 14852.0], [86.6, 15103.0], [86.7, 15104.0], [86.8, 15360.0], [86.9, 15616.0], [87.0, 15616.0], [87.1, 15617.0], [87.2, 15946.0], [87.3, 16128.0], [87.4, 16128.0], [87.5, 16130.0], [87.6, 16233.0], [87.7, 16384.0], [87.8, 16384.0], [87.9, 16384.0], [88.0, 16406.0], [88.1, 16624.0], [88.2, 16687.0], [88.3, 16771.0], [88.4, 16895.0], [88.5, 16896.0], [88.6, 16896.0], [88.7, 16900.0], [88.8, 17148.0], [88.9, 17165.0], [89.0, 17407.0], [89.1, 17408.0], [89.2, 17496.0], [89.3, 17558.0], [89.4, 17664.0], [89.5, 17880.0], [89.6, 18176.0], [89.7, 18180.0], [89.8, 18436.0], [89.9, 18663.0], [90.0, 18944.0], [90.1, 19394.0], [90.2, 20480.0], [90.3, 22528.0], [90.4, 22634.0], [90.5, 22893.0], [90.6, 24064.0], [90.7, 26112.0], [90.8, 26366.0], [90.9, 26368.0], [91.0, 26368.0], [91.1, 26368.0], [91.2, 26368.0], [91.3, 26431.0], [91.4, 26637.0], [91.5, 27388.0], [91.6, 27392.0], [91.7, 27395.0], [91.8, 28814.0], [91.9, 34048.0], [92.0, 35075.0], [92.1, 35320.0], [92.2, 37701.0], [92.3, 43424.0], [92.4, 43660.0], [92.5, 44371.0], [92.6, 44562.0], [92.7, 45333.0], [92.8, 46463.0], [92.9, 53203.0], [93.0, 56897.0], [93.1, 58171.0], [93.2, 64278.0], [93.3, 68297.0], [93.4, 70851.0], [93.5, 76852.0], [93.6, 78848.0], [93.7, 79568.0], [93.8, 90113.0], [93.9, 90113.0], [94.0, 91648.0], [94.1, 93696.0], [94.2, 96292.0], [94.3, 101146.0], [94.4, 101634.0], [94.5, 105468.0], [94.6, 105472.0], [94.7, 105480.0], [94.8, 105622.0], [94.9, 105728.0], [95.0, 105732.0], [95.1, 105957.0], [95.2, 106197.0], [95.3, 106240.0], [95.4, 106294.0], [95.5, 106449.0], [95.6, 106495.0], [95.7, 106497.0], [95.8, 106497.0], [95.9, 106528.0], [96.0, 106751.0], [96.1, 106753.0], [96.2, 106763.0], [96.3, 106828.0], [96.4, 107008.0], [96.5, 107066.0], [96.6, 107210.0], [96.7, 107260.0], [96.8, 107263.0], [96.9, 107264.0], [97.0, 107264.0], [97.1, 107264.0], [97.2, 107264.0], [97.3, 107264.0], [97.4, 107685.0], [97.5, 109476.0], [97.6, 109959.0], [97.7, 110076.0], [97.8, 110080.0], [97.9, 110080.0], [98.0, 110958.0], [98.1, 112127.0], [98.2, 112128.0], [98.3, 112128.0], [98.4, 112129.0], [98.5, 113287.0], [98.6, 114258.0], [98.7, 115431.0], [98.8, 119403.0], [98.9, 122718.0], [99.0, 125022.0], [99.1, 128000.0], [99.2, 136961.0], [99.3, 156076.0], [99.4, 169984.0], [99.5, 211200.0], [99.6, 216576.0], [99.7, 216576.0], [99.8, 219130.0], [99.9, 219132.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 699.0, "series": [{"data": [[0.0, 126.0], [131300.0, 3.0], [99500.0, 2.0], [106700.0, 1.0], [119500.0, 1.0], [38900.0, 4.0], [169900.0, 8.0], [45300.0, 3.0], [300.0, 1.0], [90600.0, 1.0], [108200.0, 2.0], [500.0, 3.0], [600.0, 2.0], [154800.0, 2.0], [700.0, 5.0], [900.0, 1.0], [1100.0, 1.0], [1200.0, 3.0], [1400.0, 5.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 6.0], [2200.0, 2.0], [2300.0, 4.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 2.0], [2800.0, 3.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 3.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 1.0], [4500.0, 2.0], [4600.0, 3.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 2.0], [5100.0, 1.0], [5200.0, 3.0], [5500.0, 1.0], [5900.0, 1.0], [6100.0, 2.0], [6600.0, 3.0], [105700.0, 1.0], [7000.0, 1.0], [7100.0, 49.0], [112100.0, 7.0], [7300.0, 1.0], [7400.0, 34.0], [7600.0, 32.0], [7700.0, 1.0], [7800.0, 2.0], [7900.0, 28.0], [8000.0, 1.0], [8100.0, 45.0], [8600.0, 3.0], [8500.0, 1.0], [8300.0, 1.0], [8200.0, 1.0], [8400.0, 19.0], [8700.0, 42.0], [9100.0, 4.0], [8800.0, 1.0], [9000.0, 1.0], [8900.0, 21.0], [9200.0, 37.0], [9300.0, 3.0], [9600.0, 14.0], [9700.0, 36.0], [9500.0, 6.0], [9400.0, 10.0], [151800.0, 1.0], [9800.0, 9.0], [10000.0, 12.0], [10100.0, 9.0], [10200.0, 50.0], [9900.0, 19.0], [10700.0, 31.0], [10400.0, 10.0], [10500.0, 7.0], [10300.0, 9.0], [10600.0, 8.0], [11100.0, 11.0], [10900.0, 13.0], [11200.0, 15.0], [11000.0, 19.0], [10800.0, 5.0], [11600.0, 11.0], [11400.0, 7.0], [11700.0, 14.0], [11300.0, 6.0], [11500.0, 5.0], [11900.0, 9.0], [12200.0, 13.0], [11800.0, 11.0], [12100.0, 2.0], [12000.0, 5.0], [12700.0, 7.0], [12400.0, 8.0], [12300.0, 5.0], [12500.0, 27.0], [12600.0, 1.0], [13000.0, 18.0], [13100.0, 1.0], [13300.0, 422.0], [12900.0, 2.0], [13200.0, 5.0], [12800.0, 16.0], [13400.0, 4.0], [13700.0, 2.0], [13800.0, 84.0], [13500.0, 13.0], [13600.0, 1.0], [14000.0, 5.0], [14200.0, 2.0], [14300.0, 52.0], [13900.0, 3.0], [14500.0, 7.0], [14800.0, 13.0], [14400.0, 1.0], [14700.0, 2.0], [15100.0, 1.0], [15300.0, 3.0], [15600.0, 3.0], [15800.0, 3.0], [16300.0, 5.0], [16100.0, 2.0], [16800.0, 6.0], [17000.0, 1.0], [17200.0, 2.0], [18400.0, 2.0], [17600.0, 1.0], [17800.0, 2.0], [18600.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [26600.0, 1.0], [28600.0, 3.0], [28800.0, 1.0], [34800.0, 2.0], [53200.0, 1.0], [60800.0, 1.0], [61600.0, 1.0], [69600.0, 1.0], [93600.0, 3.0], [106400.0, 9.0], [107200.0, 11.0], [108000.0, 1.0], [115200.0, 1.0], [211200.0, 1.0], [76700.0, 4.0], [108700.0, 1.0], [123100.0, 1.0], [33100.0, 2.0], [35100.0, 1.0], [40300.0, 1.0], [43500.0, 1.0], [45500.0, 1.0], [52700.0, 1.0], [53500.0, 1.0], [105400.0, 7.0], [106200.0, 5.0], [107000.0, 2.0], [118200.0, 1.0], [126200.0, 1.0], [90100.0, 1.0], [98100.0, 1.0], [107700.0, 2.0], [17100.0, 7.0], [17300.0, 2.0], [17900.0, 1.0], [17500.0, 1.0], [18900.0, 3.0], [18700.0, 1.0], [21500.0, 1.0], [24700.0, 1.0], [26300.0, 16.0], [27300.0, 2.0], [35000.0, 1.0], [42200.0, 2.0], [43400.0, 1.0], [54200.0, 1.0], [219100.0, 4.0], [56600.0, 1.0], [57800.0, 1.0], [77200.0, 1.0], [78000.0, 1.0], [86000.0, 1.0], [91600.0, 2.0], [110000.0, 9.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 266.0], [131300.0, 3.0], [67500.0, 1.0], [81100.0, 2.0], [99500.0, 3.0], [102700.0, 1.0], [106700.0, 6.0], [107500.0, 1.0], [33700.0, 1.0], [36900.0, 1.0], [171500.0, 1.0], [169900.0, 11.0], [43300.0, 1.0], [52500.0, 1.0], [53700.0, 1.0], [400.0, 3.0], [107400.0, 1.0], [106600.0, 1.0], [108200.0, 2.0], [114600.0, 1.0], [500.0, 14.0], [600.0, 19.0], [154800.0, 2.0], [700.0, 32.0], [800.0, 26.0], [900.0, 31.0], [1000.0, 29.0], [1100.0, 42.0], [1200.0, 28.0], [1300.0, 25.0], [1400.0, 25.0], [1500.0, 35.0], [1600.0, 34.0], [1700.0, 27.0], [1800.0, 47.0], [1900.0, 38.0], [2000.0, 37.0], [2100.0, 29.0], [2300.0, 17.0], [2200.0, 21.0], [2400.0, 25.0], [2500.0, 23.0], [2600.0, 17.0], [2700.0, 23.0], [2800.0, 39.0], [2900.0, 33.0], [3000.0, 26.0], [3100.0, 22.0], [3300.0, 33.0], [3200.0, 24.0], [3400.0, 35.0], [216500.0, 1.0], [3500.0, 21.0], [3700.0, 24.0], [3600.0, 19.0], [3800.0, 17.0], [3900.0, 14.0], [4000.0, 17.0], [4100.0, 15.0], [4300.0, 29.0], [4200.0, 22.0], [4500.0, 16.0], [4400.0, 22.0], [4600.0, 18.0], [4700.0, 24.0], [4800.0, 11.0], [4900.0, 18.0], [5100.0, 10.0], [5000.0, 9.0], [5200.0, 21.0], [5300.0, 14.0], [5400.0, 17.0], [5500.0, 13.0], [5600.0, 8.0], [5700.0, 12.0], [5800.0, 6.0], [5900.0, 6.0], [6100.0, 5.0], [6000.0, 7.0], [6300.0, 6.0], [6200.0, 5.0], [6400.0, 12.0], [6500.0, 10.0], [6600.0, 8.0], [105700.0, 2.0], [6800.0, 17.0], [6700.0, 11.0], [6900.0, 4.0], [107300.0, 3.0], [106500.0, 1.0], [7000.0, 21.0], [7100.0, 81.0], [112100.0, 15.0], [7300.0, 22.0], [7200.0, 37.0], [7400.0, 83.0], [116900.0, 1.0], [7500.0, 11.0], [7600.0, 81.0], [7800.0, 19.0], [7700.0, 13.0], [7900.0, 86.0], [8100.0, 81.0], [8000.0, 9.0], [8200.0, 16.0], [8300.0, 20.0], [8600.0, 16.0], [8400.0, 49.0], [8500.0, 11.0], [8700.0, 80.0], [8800.0, 17.0], [9200.0, 98.0], [8900.0, 45.0], [9100.0, 35.0], [9000.0, 11.0], [9600.0, 74.0], [9500.0, 47.0], [9300.0, 43.0], [9700.0, 166.0], [9400.0, 50.0], [151800.0, 1.0], [9900.0, 145.0], [10000.0, 134.0], [9800.0, 111.0], [10100.0, 139.0], [10200.0, 219.0], [10300.0, 184.0], [10600.0, 217.0], [10700.0, 250.0], [10500.0, 209.0], [10400.0, 212.0], [11100.0, 238.0], [11000.0, 276.0], [11200.0, 285.0], [10800.0, 233.0], [10900.0, 242.0], [11300.0, 218.0], [11600.0, 164.0], [11700.0, 163.0], [11400.0, 223.0], [11500.0, 191.0], [11800.0, 135.0], [12100.0, 97.0], [12200.0, 110.0], [11900.0, 117.0], [12000.0, 102.0], [12300.0, 86.0], [12600.0, 51.0], [12700.0, 65.0], [12500.0, 99.0], [12400.0, 64.0], [13100.0, 49.0], [13300.0, 699.0], [12900.0, 38.0], [13200.0, 59.0], [12800.0, 52.0], [13000.0, 52.0], [13700.0, 31.0], [13800.0, 140.0], [13400.0, 48.0], [13500.0, 27.0], [13600.0, 20.0], [14300.0, 88.0], [14100.0, 20.0], [14000.0, 29.0], [14200.0, 15.0], [13900.0, 18.0], [14500.0, 21.0], [14600.0, 9.0], [14400.0, 15.0], [14700.0, 13.0], [14800.0, 36.0], [15000.0, 12.0], [15300.0, 10.0], [15200.0, 8.0], [14900.0, 11.0], [15100.0, 11.0], [15400.0, 10.0], [15600.0, 6.0], [15500.0, 13.0], [15700.0, 4.0], [15800.0, 13.0], [16300.0, 16.0], [16100.0, 10.0], [16000.0, 5.0], [15900.0, 4.0], [16200.0, 9.0], [16600.0, 3.0], [16400.0, 4.0], [17400.0, 1.0], [17000.0, 2.0], [16800.0, 10.0], [17200.0, 2.0], [18400.0, 4.0], [17800.0, 2.0], [18200.0, 3.0], [17600.0, 2.0], [18000.0, 6.0], [19200.0, 1.0], [19400.0, 3.0], [18600.0, 6.0], [18800.0, 1.0], [20400.0, 1.0], [20200.0, 2.0], [20000.0, 1.0], [21200.0, 2.0], [21400.0, 1.0], [22200.0, 1.0], [21800.0, 1.0], [24000.0, 1.0], [23600.0, 1.0], [25000.0, 1.0], [25400.0, 1.0], [26400.0, 2.0], [26200.0, 1.0], [29400.0, 1.0], [30000.0, 1.0], [34800.0, 1.0], [36400.0, 1.0], [42800.0, 2.0], [44400.0, 1.0], [43200.0, 1.0], [48000.0, 1.0], [57200.0, 1.0], [59600.0, 1.0], [76800.0, 2.0], [93600.0, 2.0], [106400.0, 16.0], [107200.0, 13.0], [211200.0, 2.0], [136900.0, 3.0], [106300.0, 2.0], [114300.0, 1.0], [121500.0, 1.0], [123100.0, 1.0], [33900.0, 1.0], [35900.0, 1.0], [44300.0, 3.0], [43100.0, 1.0], [45100.0, 1.0], [53100.0, 1.0], [51500.0, 1.0], [57100.0, 1.0], [58700.0, 1.0], [59100.0, 1.0], [57500.0, 1.0], [58300.0, 1.0], [106200.0, 2.0], [105400.0, 5.0], [107000.0, 3.0], [119000.0, 1.0], [66100.0, 1.0], [90100.0, 10.0], [106100.0, 2.0], [105300.0, 1.0], [106900.0, 1.0], [107700.0, 4.0], [127700.0, 2.0], [16500.0, 1.0], [16700.0, 4.0], [17100.0, 7.0], [17300.0, 1.0], [16900.0, 1.0], [17900.0, 1.0], [17500.0, 1.0], [18100.0, 8.0], [18300.0, 3.0], [18900.0, 5.0], [18500.0, 2.0], [20100.0, 2.0], [19900.0, 3.0], [21500.0, 3.0], [20700.0, 2.0], [21300.0, 1.0], [20900.0, 1.0], [22500.0, 3.0], [21900.0, 1.0], [22700.0, 1.0], [22900.0, 1.0], [23500.0, 1.0], [23900.0, 2.0], [26100.0, 1.0], [26300.0, 28.0], [27300.0, 6.0], [28900.0, 1.0], [30700.0, 2.0], [32500.0, 1.0], [32700.0, 1.0], [34600.0, 1.0], [36200.0, 1.0], [35400.0, 1.0], [43000.0, 1.0], [44200.0, 1.0], [43800.0, 1.0], [45800.0, 2.0], [53800.0, 1.0], [54200.0, 2.0], [219100.0, 1.0], [57000.0, 1.0], [58200.0, 1.0], [61400.0, 2.0], [78000.0, 1.0], [78800.0, 1.0], [91600.0, 2.0], [106800.0, 1.0], [110000.0, 8.0], [113200.0, 1.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 137.0], [156000.0, 1.0], [131300.0, 1.0], [79500.0, 1.0], [94700.0, 1.0], [99500.0, 1.0], [101100.0, 1.0], [105900.0, 2.0], [106700.0, 5.0], [109900.0, 1.0], [122700.0, 1.0], [120300.0, 1.0], [100.0, 1.0], [35300.0, 1.0], [37700.0, 1.0], [169900.0, 3.0], [44500.0, 2.0], [45300.0, 1.0], [200.0, 3.0], [53700.0, 1.0], [56900.0, 1.0], [58100.0, 1.0], [68200.0, 1.0], [96200.0, 1.0], [400.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 1.0], [109800.0, 1.0], [114600.0, 1.0], [115400.0, 1.0], [119400.0, 1.0], [125000.0, 1.0], [500.0, 2.0], [600.0, 4.0], [154800.0, 1.0], [800.0, 3.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 4.0], [1200.0, 3.0], [1300.0, 2.0], [1400.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 3.0], [2700.0, 2.0], [2800.0, 1.0], [2900.0, 3.0], [3200.0, 3.0], [3400.0, 3.0], [216500.0, 4.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [4100.0, 2.0], [4500.0, 3.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 2.0], [4900.0, 1.0], [5000.0, 1.0], [5300.0, 1.0], [5700.0, 2.0], [5900.0, 2.0], [6000.0, 3.0], [6200.0, 2.0], [6300.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [105700.0, 4.0], [6700.0, 2.0], [6800.0, 1.0], [106500.0, 1.0], [7000.0, 3.0], [7100.0, 55.0], [112100.0, 7.0], [7200.0, 10.0], [7300.0, 3.0], [7400.0, 41.0], [118500.0, 1.0], [7600.0, 38.0], [7500.0, 6.0], [7900.0, 33.0], [7700.0, 2.0], [7800.0, 3.0], [8100.0, 33.0], [8000.0, 4.0], [8400.0, 15.0], [8500.0, 4.0], [8700.0, 35.0], [8600.0, 6.0], [8300.0, 2.0], [8200.0, 3.0], [8800.0, 6.0], [9200.0, 45.0], [9100.0, 8.0], [9000.0, 10.0], [8900.0, 15.0], [9300.0, 4.0], [9600.0, 7.0], [9500.0, 5.0], [9700.0, 48.0], [9400.0, 12.0], [10000.0, 10.0], [10200.0, 48.0], [9900.0, 18.0], [10100.0, 7.0], [9800.0, 1.0], [10600.0, 18.0], [10700.0, 32.0], [10300.0, 7.0], [10400.0, 14.0], [11000.0, 14.0], [10800.0, 10.0], [11100.0, 5.0], [11200.0, 16.0], [10900.0, 7.0], [11600.0, 6.0], [11700.0, 15.0], [11400.0, 6.0], [11500.0, 7.0], [11300.0, 7.0], [12100.0, 3.0], [12000.0, 6.0], [12200.0, 17.0], [11900.0, 1.0], [11800.0, 2.0], [12500.0, 20.0], [12700.0, 5.0], [12600.0, 4.0], [12300.0, 2.0], [12400.0, 4.0], [13200.0, 34.0], [13300.0, 398.0], [13100.0, 11.0], [12800.0, 10.0], [13000.0, 9.0], [12900.0, 1.0], [13700.0, 11.0], [13500.0, 18.0], [13400.0, 9.0], [13800.0, 69.0], [13600.0, 2.0], [14000.0, 12.0], [13900.0, 4.0], [14300.0, 30.0], [14200.0, 6.0], [14100.0, 2.0], [14800.0, 16.0], [14500.0, 7.0], [14600.0, 1.0], [14700.0, 2.0], [14400.0, 1.0], [14900.0, 1.0], [15100.0, 3.0], [15300.0, 2.0], [15800.0, 1.0], [15600.0, 5.0], [15500.0, 1.0], [16100.0, 6.0], [16300.0, 7.0], [16200.0, 1.0], [15900.0, 1.0], [16600.0, 3.0], [16800.0, 7.0], [16400.0, 1.0], [17400.0, 5.0], [17000.0, 1.0], [18400.0, 3.0], [17600.0, 2.0], [17800.0, 1.0], [19000.0, 1.0], [18600.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [22600.0, 1.0], [22800.0, 1.0], [24400.0, 1.0], [24000.0, 1.0], [26200.0, 1.0], [26600.0, 1.0], [26400.0, 2.0], [28600.0, 1.0], [28800.0, 1.0], [34000.0, 1.0], [43600.0, 2.0], [46400.0, 1.0], [46000.0, 1.0], [53200.0, 1.0], [52800.0, 1.0], [56800.0, 1.0], [69600.0, 1.0], [76800.0, 1.0], [93600.0, 1.0], [101600.0, 1.0], [105600.0, 1.0], [106400.0, 7.0], [107200.0, 15.0], [128000.0, 1.0], [211200.0, 1.0], [136900.0, 1.0], [67100.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [111100.0, 1.0], [126300.0, 1.0], [36700.0, 1.0], [44300.0, 1.0], [106200.0, 4.0], [105400.0, 4.0], [109400.0, 1.0], [107000.0, 3.0], [114200.0, 1.0], [214800.0, 1.0], [88500.0, 1.0], [90100.0, 3.0], [106100.0, 1.0], [105300.0, 1.0], [114100.0, 1.0], [110900.0, 1.0], [17100.0, 3.0], [17300.0, 1.0], [16500.0, 1.0], [16700.0, 1.0], [16900.0, 1.0], [17900.0, 1.0], [18100.0, 3.0], [17500.0, 2.0], [19300.0, 1.0], [18900.0, 2.0], [21100.0, 1.0], [22500.0, 2.0], [23500.0, 1.0], [26300.0, 10.0], [26100.0, 1.0], [27300.0, 5.0], [29100.0, 1.0], [35000.0, 3.0], [42200.0, 1.0], [43400.0, 2.0], [219100.0, 4.0], [63400.0, 1.0], [64200.0, 1.0], [70800.0, 1.0], [74800.0, 1.0], [78000.0, 1.0], [78800.0, 1.0], [91600.0, 3.0], [101200.0, 1.0], [106800.0, 3.0], [107600.0, 1.0], [110000.0, 6.0], [113200.0, 2.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 219100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7829.0, "series": [{"data": [[1.0, 315.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5450.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 25.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7829.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5714285714285716, "minX": 1.53928878E12, "maxY": 498.8279569892473, "series": [{"data": [[1.5392889E12, 92.30011325028309], [1.5392892E12, 392.8831635710005], [1.53928926E12, 453.59490868843375], [1.53928914E12, 335.00000000000045], [1.53928944E12, 223.17129629629608], [1.5392895E12, 4.0], [1.53928884E12, 35.92481977342942], [1.53928938E12, 498.8279569892473], [1.53928878E12, 2.5714285714285716], [1.53928908E12, 276.8259292837712], [1.53928896E12, 153.58838383838372], [1.53928902E12, 213.82842509603077], [1.53928932E12, 497.685649202734]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392895E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 138971.0, "series": [{"data": [[2.0, 722.0], [4.0, 1442.0], [5.0, 63439.0], [6.0, 3757.5], [8.0, 1159.5], [9.0, 1520.6666666666667], [10.0, 103449.0], [12.0, 59443.0], [13.0, 1281.0], [15.0, 607.0], [16.0, 19898.666666666668], [18.0, 851.0], [20.0, 1255.0], [22.0, 1726.0], [24.0, 1216.0], [25.0, 1240.0], [27.0, 1804.0], [29.0, 2990.0], [30.0, 1416.0], [31.0, 2888.0], [32.0, 1429.0], [33.0, 1293.0], [34.0, 1452.0], [37.0, 46540.5], [38.0, 2657.5], [39.0, 2752.0], [40.0, 1974.0], [42.0, 1600.0], [43.0, 1976.0], [44.0, 1874.0], [46.0, 2253.0], [47.0, 4723.0], [48.0, 22386.5], [49.0, 23197.5], [50.0, 23862.5], [51.0, 2556.0], [52.0, 2789.0], [53.0, 24110.0], [54.0, 23983.0], [56.0, 2893.0], [57.0, 55287.0], [59.0, 4991.0], [60.0, 2839.0], [61.0, 3549.0], [62.0, 3084.0], [63.0, 3198.0], [65.0, 3605.0], [67.0, 4006.3333333333335], [69.0, 3482.0], [70.0, 3811.0], [71.0, 96067.25], [72.0, 3607.0], [73.0, 3845.0], [75.0, 4618.0], [76.0, 4651.0], [77.0, 4599.0], [79.0, 4794.0], [80.0, 4132.0], [81.0, 4123.0], [83.0, 4549.0], [84.0, 4307.0], [86.0, 4617.0], [87.0, 4856.0], [85.0, 28835.0], [88.0, 5169.0], [91.0, 6114.5], [92.0, 5284.0], [94.0, 5289.0], [95.0, 5938.0], [96.0, 6134.0], [97.0, 6148.0], [99.0, 6602.0], [101.0, 7730.0], [103.0, 7633.5], [105.0, 7877.0], [108.0, 9154.0], [109.0, 9128.0], [110.0, 8560.0], [111.0, 7301.0], [113.0, 7567.5], [114.0, 6643.0], [115.0, 106497.0], [116.0, 85197.0], [117.0, 8570.0], [118.0, 8074.0], [120.0, 9012.0], [121.0, 13078.0], [122.0, 13020.0], [123.0, 8439.0], [126.0, 7928.0], [128.0, 9049.0], [129.0, 9185.0], [130.0, 12966.5], [133.0, 9676.5], [134.0, 10788.5], [135.0, 8991.0], [136.0, 10207.5], [138.0, 13492.5], [140.0, 9993.5], [142.0, 11972.0], [143.0, 17978.0], [139.0, 17283.0], [144.0, 9596.0], [145.0, 9589.0], [147.0, 9960.0], [148.0, 9298.0], [149.0, 9257.0], [151.0, 9988.0], [146.0, 27395.0], [154.0, 12270.666666666666], [156.0, 9755.5], [158.0, 9841.5], [155.0, 17303.0], [160.0, 10098.0], [161.0, 13729.5], [163.0, 11160.5], [164.0, 10401.0], [165.0, 10640.0], [167.0, 10706.0], [166.0, 57869.0], [174.0, 43554.0], [176.0, 12097.5], [177.0, 27182.5], [183.0, 12227.0], [182.0, 13392.0], [184.0, 10759.0], [190.0, 13021.0], [191.0, 13186.0], [188.0, 35051.0], [185.0, 35118.0], [193.0, 10341.0], [200.0, 22402.5], [203.0, 12411.5], [207.0, 11638.0], [205.0, 12819.0], [202.0, 33157.0], [212.0, 13771.0], [213.0, 10984.0], [210.0, 13525.0], [209.0, 13529.0], [218.0, 11462.0], [220.0, 44444.0], [223.0, 10572.0], [221.0, 14776.0], [226.0, 9494.0], [228.0, 10988.0], [231.0, 12470.0], [232.0, 10739.0], [235.0, 11855.0], [238.0, 8573.333333333334], [239.0, 12473.0], [241.0, 11987.0], [244.0, 13312.0], [246.0, 12824.0], [245.0, 12843.0], [243.0, 11859.0], [242.0, 12898.0], [248.0, 11011.0], [249.0, 11677.0], [251.0, 11890.5], [252.0, 11033.0], [254.0, 10036.0], [257.0, 13091.666666666666], [256.0, 12810.5], [258.0, 17152.0], [268.0, 12325.0], [269.0, 9106.5], [270.0, 26752.5], [271.0, 7168.0], [260.0, 10929.0], [262.0, 10803.0], [263.0, 11774.666666666666], [265.0, 9728.0], [266.0, 10629.5], [267.0, 8188.75], [274.0, 10134.333333333332], [272.0, 13567.0], [275.0, 12289.0], [284.0, 15667.0], [285.0, 11644.0], [286.0, 95744.0], [276.0, 8401.666666666668], [277.0, 26368.0], [278.0, 19456.5], [279.0, 9890.5], [280.0, 21587.666666666668], [281.0, 13312.0], [282.0, 10922.75], [283.0, 8203.2], [290.0, 61696.0], [288.0, 10240.0], [291.0, 105239.00000000001], [300.0, 10980.5], [301.0, 53183.75], [302.0, 11708.75], [303.0, 12102.5], [292.0, 11909.0], [293.0, 22733.0], [294.0, 13312.0], [295.0, 11094.0], [296.0, 13311.75], [297.0, 21133.11111111111], [298.0, 11392.5], [299.0, 8576.75], [306.0, 10690.142857142857], [305.0, 15319.0], [307.0, 9773.0], [316.0, 9578.5], [318.0, 11008.0], [308.0, 13312.0], [309.0, 12608.0], [310.0, 17133.166666666668], [311.0, 20863.666666666668], [312.0, 1.5], [313.0, 8860.857142857143], [314.0, 9215.5], [315.0, 13763.666666666668], [321.0, 11039.0], [320.0, 10111.0], [322.0, 11263.714285714286], [323.0, 12269.571428571428], [324.0, 9765.8], [325.0, 12385.75], [326.0, 9305.25], [328.0, 13311.5], [334.0, 9971.8], [335.0, 63888.57142857143], [332.0, 12090.666666666666], [333.0, 13311.666666666666], [329.0, 13311.666666666666], [330.0, 12068.142857142857], [331.0, 8361.5], [337.0, 9325.727272727272], [336.0, 23101.0], [338.0, 11334.6], [348.0, 9343.5], [349.0, 12891.857142857145], [350.0, 10926.111111111111], [351.0, 12458.666666666666], [341.0, 19324.166666666668], [342.0, 13315.5], [343.0, 10792.8], [344.0, 13053.0], [345.0, 9001.4], [346.0, 9728.25], [347.0, 8310.4], [353.0, 10805.833333333332], [352.0, 10829.0], [354.0, 10524.0], [364.0, 12059.714285714286], [365.0, 11260.0], [366.0, 13312.0], [367.0, 10624.875], [356.0, 13334.0], [357.0, 11091.833333333334], [358.0, 10376.5], [359.0, 13028.0], [360.0, 12972.857142857141], [361.0, 11214.666666666666], [362.0, 12288.888888888889], [363.0, 11436.0], [369.0, 11348.333333333332], [368.0, 9214.0], [370.0, 9727.6], [371.0, 8311.6], [372.0, 10686.066666666666], [374.0, 17056.333333333332], [375.0, 11407.5], [376.0, 9783.666666666666], [382.0, 10634.333333333334], [383.0, 12776.5], [380.0, 9528.857142857143], [381.0, 11209.8], [377.0, 10807.555555555555], [378.0, 3584.0], [379.0, 8416.125], [386.0, 9996.2], [385.0, 9571.333333333334], [387.0, 12902.5], [396.0, 11591.866666666667], [397.0, 11904.666666666666], [398.0, 4608.5], [399.0, 10345.545454545454], [388.0, 9457.333333333334], [389.0, 8988.333333333334], [390.0, 12846.0], [391.0, 10748.0], [392.0, 10922.333333333334], [393.0, 12801.0], [394.0, 11716.0], [401.0, 7339.0], [400.0, 9472.0], [402.0, 11296.277777777776], [403.0, 7680.0], [404.0, 9025.846153846154], [405.0, 12800.0], [406.0, 11480.0], [407.0, 8704.0], [410.0, 11821.5], [412.0, 13738.666666666666], [413.0, 9534.636363636364], [414.0, 12433.142857142857], [415.0, 13568.25], [411.0, 9405.25], [417.0, 9600.0], [416.0, 11192.0], [418.0, 10924.0], [419.0, 13312.0], [420.0, 5926.0], [421.0, 14438.2], [422.0, 10922.222222222223], [423.0, 7169.666666666667], [424.0, 10463.714285714286], [430.0, 15461.7], [431.0, 15972.75], [428.0, 15463.666666666668], [429.0, 7164.0], [425.0, 10034.625], [426.0, 12632.888888888887], [434.0, 9522.0], [433.0, 12000.0], [435.0, 6658.333333333334], [444.0, 7168.0], [445.0, 6251.0], [446.0, 11572.4], [447.0, 11107.333333333334], [436.0, 71723.16666666666], [437.0, 11712.166666666666], [438.0, 11940.75], [439.0, 8447.833333333332], [440.0, 10426.000000000002], [441.0, 11921.5], [442.0, 11902.75], [443.0, 9684.0], [449.0, 10679.285714285714], [448.0, 10847.25], [450.0, 9420.8], [451.0, 9962.0], [452.0, 5090.5], [453.0, 7253.333333333334], [454.0, 64928.857142857145], [455.0, 10432.750000000002], [456.0, 11415.75], [462.0, 58188.75], [463.0, 18182.555555555555], [460.0, 13397.333333333332], [461.0, 13019.0], [457.0, 7863.0], [458.0, 9216.0], [465.0, 10965.0], [464.0, 8817.777777777777], [467.0, 7008.8], [476.0, 11690.666666666666], [477.0, 6828.333333333334], [479.0, 70449.6], [468.0, 8273.0], [469.0, 9683.8], [470.0, 11501.5], [471.0, 17742.928571428572], [472.0, 9255.555555555555], [473.0, 29542.2], [475.0, 12425.285714285714], [481.0, 10496.666666666668], [480.0, 12142.5], [482.0, 16382.0], [483.0, 7679.0], [484.0, 12185.6], [485.0, 13818.0], [486.0, 10099.09090909091], [487.0, 11973.0], [488.0, 11567.894736842105], [492.0, 11703.0], [495.0, 13415.714285714284], [489.0, 8392.5], [490.0, 11008.0], [491.0, 11861.166666666666], [496.0, 12597.0], [498.0, 13366.272727272728], [499.0, 11374.8], [500.0, 22333.066666666677], [497.0, 14335.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[379.0620197585076, 16912.141602634456]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 562.0], [4.0, 82374.2], [5.0, 691.3333333333334], [6.0, 647.5], [7.0, 918.5714285714286], [8.0, 787.5], [9.0, 773.1428571428571], [10.0, 26495.5], [11.0, 982.1], [12.0, 10033.846153846154], [13.0, 8512.933333333334], [14.0, 4477.0], [15.0, 4597.2], [16.0, 985.5999999999998], [17.0, 4538.923076923077], [18.0, 4689.6875], [19.0, 4834.533333333333], [20.0, 4250.833333333334], [21.0, 4249.0666666666675], [22.0, 1425.3076923076922], [23.0, 1313.7857142857142], [24.0, 1522.8124999999998], [25.0, 1230.4375], [26.0, 1375.578947368421], [27.0, 1529.9285714285716], [28.0, 1415.7647058823532], [29.0, 1612.923076923077], [30.0, 1640.7333333333331], [31.0, 1968.7499999999998], [32.0, 1755.6666666666665], [33.0, 1793.5714285714284], [34.0, 1813.0555555555554], [35.0, 1929.4705882352941], [36.0, 1910.2499999999998], [37.0, 37449.36000000001], [38.0, 4210.95], [39.0, 5011.714285714285], [40.0, 4421.555555555557], [41.0, 4034.75], [42.0, 2242.6470588235297], [43.0, 4365.611111111111], [44.0, 4274.15], [45.0, 4515.388888888889], [46.0, 4814.7058823529405], [47.0, 5007.294117647059], [48.0, 2703.7058823529414], [49.0, 2648.714285714286], [50.0, 2637.176470588235], [51.0, 2882.4166666666665], [52.0, 3076.2307692307695], [53.0, 3135.9523809523807], [54.0, 2948.4285714285716], [55.0, 4285.8], [56.0, 11228.692307692309], [57.0, 3543.2000000000003], [58.0, 3442.4210526315787], [59.0, 3087.3333333333335], [60.0, 3107.8124999999995], [61.0, 3454.166666666667], [62.0, 3483.947368421052], [63.0, 3323.375], [64.0, 3209.833333333333], [65.0, 3198.470588235295], [66.0, 3538.909090909091], [67.0, 3771.4666666666662], [68.0, 3910.2000000000003], [69.0, 4167.062499999999], [70.0, 3837.9], [71.0, 28646.882352941175], [72.0, 5106.733333333334], [73.0, 5482.75], [74.0, 6637.636363636364], [75.0, 5579.117647058823], [76.0, 5957.538461538463], [77.0, 5974.894736842105], [78.0, 5831.3076923076915], [79.0, 5371.263157894737], [80.0, 5423.266666666667], [81.0, 5277.833333333334], [82.0, 5306.75], [83.0, 5494.714285714287], [84.0, 5425.588235294118], [85.0, 4638.111111111111], [86.0, 6045.4], [87.0, 5488.846153846153], [88.0, 6240.375], [89.0, 5973.2307692307695], [90.0, 5727.8125], [91.0, 5608.214285714286], [92.0, 5127.384615384615], [93.0, 5630.09090909091], [94.0, 5971.7], [95.0, 6672.916666666668], [96.0, 7200.222222222223], [97.0, 6507.533333333334], [98.0, 6896.750000000001], [99.0, 7153.375], [100.0, 7800.333333333333], [101.0, 7262.818181818181], [102.0, 6956.428571428571], [103.0, 6832.833333333333], [104.0, 7363.272727272727], [105.0, 7547.785714285714], [106.0, 7459.25], [107.0, 8172.181818181819], [108.0, 8707.555555555557], [109.0, 7972.071428571428], [110.0, 7979.416666666666], [111.0, 8051.0], [112.0, 7432.599999999999], [113.0, 8196.125000000002], [114.0, 7358.0], [115.0, 67786.83333333333], [116.0, 45572.07692307692], [117.0, 8812.727272727272], [118.0, 9016.214285714284], [119.0, 9617.230769230768], [120.0, 8419.333333333336], [121.0, 8843.142857142857], [122.0, 8514.333333333334], [123.0, 9416.9375], [124.0, 8921.384615384615], [125.0, 8520.333333333334], [126.0, 10129.181818181818], [127.0, 12167.2], [128.0, 9177.800000000001], [129.0, 9608.545454545456], [130.0, 9020.777777777777], [131.0, 9860.714285714286], [132.0, 9810.333333333336], [133.0, 10193.666666666666], [134.0, 10066.692307692307], [135.0, 10470.333333333334], [136.0, 14464.0], [137.0, 10507.666666666666], [138.0, 10095.374999999998], [139.0, 10671.727272727272], [140.0, 12170.75], [141.0, 11182.214285714286], [142.0, 10194.692307692309], [143.0, 9811.0], [144.0, 9488.500000000002], [145.0, 10128.0], [146.0, 11919.909090909092], [147.0, 10415.57142857143], [148.0, 10514.25], [149.0, 9670.444444444445], [150.0, 9975.64705882353], [151.0, 9745.071428571428], [152.0, 9915.823529411762], [153.0, 16116.5625], [154.0, 10094.466666666665], [155.0, 9340.909090909092], [156.0, 13942.846153846154], [157.0, 11713.6], [158.0, 12587.153846153846], [159.0, 12182.823529411764], [160.0, 10316.5], [161.0, 10579.777777777777], [162.0, 12987.999999999998], [163.0, 11091.833333333332], [164.0, 12978.166666666666], [165.0, 13052.764705882353], [166.0, 10650.42857142857], [167.0, 14847.846153846152], [168.0, 13887.916666666666], [169.0, 13568.23076923077], [170.0, 11863.399999999998], [171.0, 11522.916666666668], [172.0, 11424.7], [173.0, 12537.454545454546], [174.0, 11718.1], [175.0, 12228.461538461539], [176.0, 12216.764705882351], [177.0, 11818.214285714284], [178.0, 11503.214285714286], [179.0, 11418.625], [180.0, 11451.166666666666], [181.0, 13744.153846153846], [182.0, 11938.454545454546], [183.0, 12091.571428571428], [184.0, 11752.083333333332], [185.0, 11163.5], [186.0, 12426.75], [187.0, 12264.214285714286], [188.0, 11884.466666666667], [189.0, 11519.7], [190.0, 12469.625000000002], [191.0, 12924.874999999998], [192.0, 10924.23076923077], [193.0, 11625.666666666666], [194.0, 11197.875], [195.0, 11019.749999999998], [196.0, 10365.333333333332], [197.0, 11145.272727272726], [198.0, 11132.214285714286], [199.0, 11737.142857142857], [200.0, 10516.181818181822], [201.0, 10915.0], [202.0, 11024.714285714286], [203.0, 11098.714285714284], [204.0, 10891.363636363636], [205.0, 11358.76923076923], [206.0, 11222.333333333334], [207.0, 11298.866666666667], [208.0, 10640.642857142859], [209.0, 10138.0], [210.0, 11594.6], [211.0, 11379.4], [212.0, 12133.222222222223], [213.0, 11800.733333333332], [214.0, 12709.818181818182], [215.0, 11757.272727272728], [216.0, 12332.142857142857], [217.0, 12045.692307692309], [218.0, 11113.866666666667], [219.0, 12380.733333333334], [220.0, 11736.157894736847], [221.0, 11936.454545454546], [222.0, 10911.5], [223.0, 11299.714285714284], [224.0, 11242.75], [225.0, 10800.071428571428], [226.0, 10668.933333333334], [227.0, 10951.57142857143], [228.0, 10379.571428571428], [229.0, 11274.849999999999], [230.0, 10532.916666666666], [231.0, 11007.0625], [232.0, 10817.76923076923], [233.0, 10708.499999999998], [234.0, 14325.375], [235.0, 11795.8], [236.0, 11859.777777777776], [237.0, 12233.066666666666], [238.0, 11881.23076923077], [239.0, 11750.153846153846], [240.0, 11458.833333333332], [241.0, 16511.6], [242.0, 12625.25], [243.0, 12910.923076923076], [244.0, 12991.23076923077], [245.0, 13037.461538461539], [246.0, 12221.1], [247.0, 11814.0], [248.0, 11970.538461538461], [249.0, 12274.083333333334], [250.0, 12360.4], [251.0, 12317.599999999999], [252.0, 12742.466666666667], [253.0, 11381.81818181818], [254.0, 19145.846153846152], [255.0, 12257.8], [257.0, 11597.076923076924], [256.0, 11866.933333333332], [258.0, 11754.615384615383], [259.0, 11451.777777777777], [260.0, 20480.45454545454], [261.0, 11961.529411764706], [262.0, 17126.117647058825], [263.0, 11346.777777777777], [264.0, 14766.235294117649], [270.0, 16535.875000000004], [271.0, 10669.5], [268.0, 23584.9375], [269.0, 11190.764705882353], [265.0, 12037.181818181818], [266.0, 21667.69230769231], [267.0, 11525.111111111111], [273.0, 10977.5625], [272.0, 13417.333333333332], [274.0, 19048.941176470587], [275.0, 11254.5], [276.0, 12804.8125], [277.0, 11458.1875], [278.0, 12218.199999999999], [279.0, 11235.545454545454], [280.0, 11279.0], [286.0, 34925.142857142855], [287.0, 25153.5], [284.0, 20059.277777777777], [285.0, 11375.1], [281.0, 10959.0], [282.0, 17448.6], [283.0, 10809.941176470587], [289.0, 49771.294117647056], [288.0, 22330.266666666663], [290.0, 18992.714285714286], [291.0, 39091.0], [292.0, 12121.666666666666], [293.0, 10453.208333333332], [294.0, 10859.2], [295.0, 20142.227272727276], [296.0, 11096.272727272728], [302.0, 9426.466666666667], [303.0, 11042.07142857143], [300.0, 10564.409090909092], [301.0, 11392.923076923078], [297.0, 21224.7], [298.0, 10967.727272727274], [299.0, 16015.428571428574], [305.0, 19236.5], [304.0, 11405.692307692309], [306.0, 12339.624999999998], [307.0, 10404.583333333332], [308.0, 10498.066666666666], [309.0, 15105.791666666668], [310.0, 12442.64705882353], [311.0, 16513.559999999998], [312.0, 10910.615384615385], [318.0, 10263.529411764706], [319.0, 11113.888888888889], [316.0, 10720.652173913046], [317.0, 16435.833333333332], [313.0, 14745.349999999997], [314.0, 11330.999999999998], [315.0, 12121.000000000002], [321.0, 11930.384615384615], [320.0, 13118.916666666666], [322.0, 10302.875], [323.0, 15242.033333333333], [324.0, 12259.166666666668], [325.0, 11194.3125], [326.0, 12325.736842105263], [327.0, 11453.750000000002], [328.0, 11392.4], [334.0, 10833.923076923078], [335.0, 31741.31818181818], [332.0, 11049.363636363636], [333.0, 11679.058823529413], [329.0, 12225.72727272727], [330.0, 11867.888888888889], [331.0, 9916.368421052632], [337.0, 11688.115384615385], [336.0, 10804.749999999998], [338.0, 10930.217391304346], [339.0, 11313.0], [340.0, 11493.941176470587], [341.0, 10648.800000000001], [342.0, 11238.51724137931], [343.0, 10493.999999999998], [344.0, 10112.555555555557], [350.0, 9825.518518518518], [351.0, 9839.833333333336], [348.0, 9560.687499999998], [349.0, 10038.9], [345.0, 10880.571428571426], [346.0, 10810.461538461539], [347.0, 9466.555555555557], [353.0, 10271.157894736842], [352.0, 9755.733333333334], [354.0, 10009.391304347826], [355.0, 11080.923076923078], [356.0, 11726.0], [357.0, 11676.6875], [358.0, 11258.76923076923], [359.0, 11596.437500000002], [360.0, 11477.615384615383], [366.0, 12383.250000000002], [367.0, 11197.636363636364], [364.0, 11669.0], [365.0, 10733.499999999998], [361.0, 11268.357142857143], [362.0, 10739.0], [363.0, 10277.421052631578], [369.0, 10571.62962962963], [368.0, 11390.083333333332], [370.0, 9406.176470588236], [371.0, 9944.18181818182], [372.0, 11110.037037037036], [373.0, 12364.25], [374.0, 12042.0], [375.0, 11996.692307692309], [376.0, 11708.5], [382.0, 12188.153846153846], [383.0, 11348.4], [380.0, 9385.61111111111], [381.0, 10267.833333333334], [377.0, 10741.620689655172], [378.0, 11380.944444444443], [379.0, 9971.4], [385.0, 12156.521739130436], [384.0, 12650.857142857143], [386.0, 10693.000000000002], [387.0, 11813.937499999998], [388.0, 11501.0], [389.0, 11064.52380952381], [390.0, 11527.249999999998], [391.0, 10826.666666666666], [392.0, 10842.72222222222], [398.0, 10891.545454545456], [399.0, 11205.384615384617], [396.0, 9993.416666666666], [397.0, 12093.55], [393.0, 11159.357142857141], [394.0, 10677.5], [395.0, 12341.888888888889], [401.0, 9165.189189189188], [400.0, 10762.333333333332], [402.0, 10281.392857142857], [403.0, 9127.578947368418], [404.0, 10458.882352941175], [405.0, 11178.5], [406.0, 11335.875000000002], [407.0, 10182.7], [408.0, 10415.071428571428], [414.0, 11992.193548387097], [415.0, 13137.500000000002], [412.0, 11117.409090909092], [413.0, 12356.416666666666], [409.0, 10473.083333333334], [410.0, 11094.777777777777], [411.0, 12477.666666666668], [417.0, 11149.062499999998], [416.0, 11026.266666666666], [418.0, 11739.25], [419.0, 11895.5], [420.0, 11929.764705882353], [421.0, 11627.849999999999], [422.0, 10888.647058823532], [423.0, 9582.076923076926], [424.0, 10489.999999999998], [430.0, 13156.600000000004], [431.0, 10678.5], [428.0, 11694.0], [429.0, 10528.466666666667], [425.0, 10236.692307692307], [426.0, 11405.966666666667], [427.0, 10722.933333333334], [433.0, 11800.066666666666], [432.0, 11333.466666666665], [434.0, 9526.928571428572], [435.0, 11118.117647058823], [436.0, 15049.285714285714], [437.0, 10555.93548387097], [438.0, 11703.5625], [439.0, 10767.68], [440.0, 10789.30303030303], [446.0, 10721.285714285716], [447.0, 9670.45], [444.0, 10384.571428571428], [445.0, 11157.866666666667], [441.0, 10636.727272727274], [442.0, 11024.933333333332], [443.0, 11766.4375], [449.0, 11501.533333333333], [448.0, 9351.31818181818], [450.0, 16389.029411764706], [451.0, 11660.739130434782], [452.0, 10665.374999999998], [453.0, 10423.599999999999], [454.0, 28161.1875], [455.0, 10584.157894736842], [456.0, 11306.052631578948], [462.0, 47209.99999999999], [463.0, 14405.083333333332], [460.0, 11694.758620689654], [461.0, 10957.5652173913], [457.0, 9133.068965517243], [458.0, 10587.692307692307], [459.0, 11087.0], [465.0, 10887.349999999999], [464.0, 9095.310344827587], [466.0, 9824.823529411762], [467.0, 9933.749999999998], [468.0, 9438.666666666666], [469.0, 9589.347826086956], [470.0, 11071.749999999998], [471.0, 11333.260869565218], [472.0, 8503.89285714286], [478.0, 11687.5], [479.0, 30158.769230769223], [476.0, 11550.499999999998], [477.0, 10929.933333333336], [473.0, 15687.0], [474.0, 11426.562500000002], [475.0, 11988.749999999998], [481.0, 10305.55], [480.0, 11050.050000000001], [482.0, 12017.578947368422], [483.0, 10331.368421052632], [484.0, 11457.77419354839], [485.0, 11763.461538461539], [486.0, 10602.173913043478], [487.0, 10824.09090909091], [488.0, 11151.714285714286], [494.0, 11676.133333333333], [495.0, 11853.0], [492.0, 12630.454545454546], [493.0, 12310.461538461537], [489.0, 10606.047619047618], [490.0, 11495.88888888889], [491.0, 9518.52380952381], [496.0, 12335.272727272726], [497.0, 12684.473684210527], [498.0, 12718.533333333336], [499.0, 12007.647058823532], [500.0, 14094.534226190492]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[320.2062481043378, 11704.168435951859]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 33.0], [3.0, 30.0], [4.0, 68500.0], [5.0, 40.0], [6.0, 33.0], [7.0, 27.0], [8.0, 11.5], [9.0, 39.0], [10.0, 77455.0], [11.0, 35.0], [12.0, 35.0], [13.0, 20.0], [14.0, 21.0], [15.0, 45.0], [16.0, 26.0], [17.0, 233.0], [18.0, 35.0], [19.0, 242.0], [20.0, 271.0], [21.0, 552.0], [22.0, 22594.5], [23.0, 22503.5], [24.0, 532.0], [25.0, 3.0], [26.0, 563.0], [27.0, 697.0], [28.0, 815.0], [29.0, 839.0], [30.0, 891.0], [32.0, 855.5], [33.0, 90113.0], [34.0, 1030.5], [35.0, 90113.0], [36.0, 45648.0], [37.0, 1233.0], [38.0, 1038.0], [40.0, 1455.0], [41.0, 1182.0], [42.0, 23675.0], [43.0, 1256.0], [44.0, 1219.0], [45.0, 1366.0], [46.0, 1499.0], [47.0, 1715.0], [48.0, 1751.0], [49.0, 1869.0], [51.0, 2008.0], [52.0, 29953.666666666668], [53.0, 2137.5], [54.0, 1901.0], [57.0, 3009.0], [58.0, 2449.0], [59.0, 2156.0], [60.0, 2230.0], [61.0, 2553.0], [62.0, 2412.0], [63.0, 2508.0], [64.0, 2276.0], [65.0, 2741.0], [66.0, 2756.0], [67.0, 2900.0], [69.0, 3040.5], [70.0, 2911.0], [71.0, 82592.25], [73.0, 3227.0], [75.0, 4104.0], [76.0, 4748.0], [77.0, 4010.5], [78.0, 3298.0], [79.0, 3641.0], [80.0, 3481.0], [81.0, 3632.0], [82.0, 3476.0], [83.0, 3817.0], [84.0, 3751.0], [86.0, 4559.0], [87.0, 16616.0], [88.0, 4717.0], [89.0, 4962.0], [90.0, 4551.0], [91.0, 4588.0], [92.0, 4613.0], [94.0, 5021.0], [95.0, 5344.0], [96.0, 5712.0], [97.0, 5920.0], [99.0, 6232.0], [100.0, 6372.0], [101.0, 6086.0], [102.0, 6062.0], [103.0, 6004.0], [104.0, 6430.0], [105.0, 6534.0], [106.0, 6360.0], [108.0, 7009.0], [109.0, 7230.0], [110.0, 7013.5], [111.0, 6432.0], [112.0, 6796.0], [113.0, 6125.5], [114.0, 5788.0], [115.0, 106547.8], [116.0, 73461.0], [118.0, 7347.0], [119.0, 7468.0], [120.0, 12783.5], [121.0, 7915.0], [123.0, 7877.5], [124.0, 7180.0], [125.0, 12406.0], [126.0, 7647.0], [127.0, 7592.0], [128.0, 7794.0], [130.0, 8029.0], [131.0, 8051.0], [132.0, 12817.5], [133.0, 12547.5], [134.0, 8427.0], [135.0, 8543.0], [136.0, 8877.0], [138.0, 9349.0], [139.0, 9323.0], [140.0, 9205.0], [141.0, 9162.0], [142.0, 8899.5], [144.0, 8901.5], [146.0, 18204.0], [147.0, 9022.0], [148.0, 8834.5], [150.0, 8999.5], [151.0, 8905.5], [152.0, 8751.0], [153.0, 18185.0], [154.0, 8509.0], [156.0, 8602.0], [163.0, 17091.5], [165.0, 10033.0], [167.0, 11031.0], [171.0, 27141.0], [174.0, 12167.0], [172.0, 43660.0], [177.0, 11013.0], [178.0, 26836.5], [183.0, 26269.0], [179.0, 43424.0], [188.0, 13759.0], [189.0, 35047.0], [187.0, 35075.0], [186.0, 35099.0], [192.0, 12530.0], [195.0, 9949.0], [199.0, 26637.0], [196.0, 14171.0], [194.0, 22893.0], [202.0, 10795.0], [207.0, 17165.0], [206.0, 13054.0], [208.0, 11708.5], [213.0, 53203.0], [215.0, 14448.0], [217.0, 12678.333333333334], [218.0, 13293.0], [219.0, 13967.0], [221.0, 26366.0], [222.0, 11190.0], [223.0, 10457.666666666666], [225.0, 12818.5], [226.0, 16175.0], [229.0, 11696.0], [231.0, 12072.0], [227.0, 11392.0], [237.0, 19486.333333333332], [238.0, 33610.666666666664], [239.0, 44042.5], [235.0, 10615.0], [233.0, 10957.0], [240.0, 30679.333333333336], [241.0, 7582.0], [242.0, 11630.0], [243.0, 56897.0], [244.0, 12399.0], [245.0, 21168.0], [247.0, 56991.0], [248.0, 11835.0], [249.0, 11712.5], [250.0, 45666.5], [251.0, 12378.5], [254.0, 8380.0], [255.0, 11570.333333333334], [253.0, 11078.0], [257.0, 1.0], [256.0, 63709.8], [258.0, 55678.0], [259.0, 10147.333333333334], [260.0, 93539.5], [261.0, 15220.0], [262.0, 25573.5], [263.0, 2.0], [264.0, 50105.5], [270.0, 56643.5], [271.0, 10251.0], [268.0, 43267.0], [269.0, 9915.0], [265.0, 9386.0], [266.0, 24413.0], [267.0, 9690.0], [275.0, 10199.5], [273.0, 12481.75], [272.0, 57057.75], [274.0, 27843.0], [276.0, 106666.0], [278.0, 66207.5], [280.0, 27817.4], [286.0, 52332.75], [287.0, 13146.0], [284.0, 42622.75], [285.0, 13824.0], [281.0, 13512.0], [282.0, 30656.285714285717], [283.0, 10184.142857142857], [289.0, 19713.5], [288.0, 138971.0], [290.0, 16686.333333333332], [291.0, 30461.833333333336], [292.0, 11938.5], [293.0, 12364.166666666666], [294.0, 13312.0], [295.0, 13485.333333333334], [296.0, 12513.333333333334], [302.0, 9354.0], [303.0, 11098.333333333334], [300.0, 8794.0], [301.0, 30550.4], [297.0, 13328.333333333334], [298.0, 10056.250000000002], [299.0, 61700.5], [306.0, 11008.5], [304.0, 9716.0], [307.0, 38098.25], [316.0, 7308.6], [317.0, 10752.0], [318.0, 8126.25], [308.0, 13312.0], [309.0, 17813.5625], [310.0, 12083.111111111111], [311.0, 40096.6], [312.0, 12385.2], [313.0, 8858.714285714286], [314.0, 10118.0], [315.0, 28122.666666666668], [321.0, 66668.5], [320.0, 11252.0], [322.0, 11491.0], [323.0, 19575.166666666664], [324.0, 13068.25], [325.0, 13458.25], [326.0, 9947.888888888889], [327.0, 105857.0], [328.0, 11182.0], [334.0, 13279.666666666666], [335.0, 21672.5], [332.0, 13170.0], [333.0, 9271.833333333334], [329.0, 14350.0], [330.0, 13846.0], [331.0, 43841.0], [337.0, 13314.0], [336.0, 9508.571428571428], [338.0, 13652.0], [348.0, 26884.5], [349.0, 10914.555555555555], [350.0, 9228.0], [351.0, 11112.4], [340.0, 101390.0], [341.0, 7889.8], [342.0, 10008.0], [343.0, 12582.2], [344.0, 14250.187499999998], [345.0, 8927.57142857143], [346.0, 21639.875], [347.0, 9038.25], [353.0, 9616.0], [354.0, 9080.142857142859], [364.0, 13833.142857142857], [366.0, 9489.0], [367.0, 11120.4], [356.0, 24411.0], [357.0, 8852.666666666668], [358.0, 10461.0], [359.0, 11421.25], [360.0, 11417.181818181818], [361.0, 8453.333333333334], [362.0, 12526.6875], [369.0, 11795.555555555555], [368.0, 9712.0], [370.0, 12714.333333333332], [371.0, 7552.714285714285], [372.0, 10729.315789473683], [373.0, 11603.0], [374.0, 10094.5], [375.0, 12857.0], [376.0, 10749.0], [382.0, 8448.0], [380.0, 8024.875000000001], [381.0, 12222.75], [377.0, 10139.77777777778], [378.0, 11430.8], [379.0, 8982.833333333334], [385.0, 11531.999999999998], [384.0, 13531.0], [386.0, 8074.187499999999], [387.0, 12036.5], [388.0, 10819.75], [389.0, 11267.230769230768], [391.0, 12977.0], [392.0, 9301.0], [399.0, 13484.0], [396.0, 10794.076923076924], [397.0, 13320.5], [398.0, 9125.444444444445], [393.0, 11542.8], [394.0, 12219.6], [395.0, 13425.0], [401.0, 8499.857142857143], [400.0, 10261.111111111111], [402.0, 10451.5625], [403.0, 7424.0], [404.0, 7317.555555555556], [405.0, 13368.0], [406.0, 11643.5], [407.0, 9108.8], [408.0, 11648.5], [412.0, 13640.333333333334], [413.0, 10447.153846153846], [414.0, 14424.2], [415.0, 10482.142857142857], [411.0, 11878.6], [416.0, 12089.0], [417.0, 11266.2], [428.0, 14127.0], [429.0, 20034.0], [430.0, 15535.523809523811], [431.0, 8876.0], [420.0, 13449.0], [421.0, 13745.0], [422.0, 9888.4], [423.0, 9865.833333333334], [424.0, 11591.25], [425.0, 11525.666666666666], [426.0, 13071.57142857143], [427.0, 22634.0], [433.0, 13299.75], [432.0, 13245.0], [434.0, 40446.0], [435.0, 12106.0], [436.0, 48126.799999999996], [437.0, 11191.0], [438.0, 13216.333333333334], [439.0, 10381.11111111111], [440.0, 12339.699999999999], [446.0, 8107.25], [447.0, 9511.875], [444.0, 11687.25], [445.0, 10000.0], [441.0, 13385.0], [442.0, 12288.0], [449.0, 10908.857142857141], [448.0, 8632.5], [450.0, 20203.000000000004], [451.0, 11368.4], [452.0, 11457.0], [453.0, 7424.0], [454.0, 41404.33333333333], [455.0, 9424.8], [456.0, 37071.75], [462.0, 65479.22222222222], [463.0, 26046.85714285714], [460.0, 9295.888888888889], [461.0, 9693.6], [457.0, 9321.8], [458.0, 10548.0], [459.0, 13372.0], [465.0, 8910.166666666666], [464.0, 10406.0], [466.0, 9984.0], [467.0, 11276.125], [468.0, 9523.666666666666], [469.0, 7578.2], [470.0, 13312.0], [471.0, 17766.0], [472.0, 7683.5], [479.0, 34009.75], [476.0, 10961.888888888889], [477.0, 11201.5], [473.0, 9713.4], [474.0, 12032.0], [475.0, 13551.25], [481.0, 7108.75], [480.0, 13337.5], [482.0, 8620.4], [483.0, 10660.0], [484.0, 12527.142857142859], [485.0, 12063.0], [486.0, 9165.454545454546], [488.0, 10237.700000000003], [494.0, 10752.0], [495.0, 13035.0], [492.0, 12606.5], [493.0, 11334.0], [489.0, 8831.333333333334], [490.0, 10164.0], [491.0, 10240.666666666668], [497.0, 12802.0], [498.0, 10083.374999999998], [499.0, 9213.0], [500.0, 24571.78390804598], [1.0, 101.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[375.7801678908714, 18118.08289611754]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14.433333333333334, "minX": 1.53928878E12, "maxY": 1027934.4166666666, "series": [{"data": [[1.5392889E12, 930427.15], [1.5392892E12, 855802.5166666667], [1.53928926E12, 866759.8833333333], [1.53928914E12, 882202.65], [1.53928944E12, 231202.01666666666], [1.5392895E12, 22.0], [1.53928884E12, 1027934.4166666666], [1.53928938E12, 823420.2166666667], [1.53928878E12, 2761.9333333333334], [1.53928908E12, 847789.4666666667], [1.53928896E12, 854720.6833333333], [1.53928902E12, 866271.8833333333], [1.53928932E12, 825674.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5392889E12, 3654.8], [1.5392892E12, 6465.416666666667], [1.53928926E12, 7001.683333333333], [1.53928914E12, 6722.716666666666], [1.53928944E12, 1667.1333333333334], [1.5392895E12, 14.433333333333334], [1.53928884E12, 4025.983333333333], [1.53928938E12, 6547.283333333334], [1.53928878E12, 24.733333333333334], [1.53928908E12, 4324.666666666667], [1.53928896E12, 3286.9333333333334], [1.53928902E12, 3166.0666666666666], [1.53928932E12, 6877.066666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392895E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 50.75, "minX": 1.53928878E12, "maxY": 136961.0, "series": [{"data": [[1.5392889E12, 6023.846153846152], [1.53928938E12, 25579.413385826756], [1.5392892E12, 10343.453287197231], [1.53928878E12, 722.0], [1.53928926E12, 16360.940397350989], [1.53928908E12, 14776.349593495932], [1.53928914E12, 11976.37133550489], [1.53928896E12, 9814.046511627907], [1.53928944E12, 60431.65116279069], [1.53928902E12, 11088.695652173912], [1.53928884E12, 2137.457627118644], [1.53928932E12, 16176.727915194342]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5392889E12, 5969.153746770024], [1.5392892E12, 10941.974050046349], [1.53928926E12, 12388.481260647359], [1.53928914E12, 11571.720761559389], [1.53928944E12, 37844.37686567165], [1.5392895E12, 136961.0], [1.53928884E12, 2029.0703399765534], [1.53928938E12, 14855.54460492778], [1.53928878E12, 562.0], [1.53928908E12, 13748.328484848476], [1.53928896E12, 10432.57183098591], [1.53928902E12, 11434.253112033193], [1.53928932E12, 12704.32916666667]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392889E12, 5249.824561403506], [1.5392892E12, 10503.465116279072], [1.53928926E12, 15246.806646525685], [1.53928914E12, 15056.633333333337], [1.53928944E12, 45165.25641025642], [1.5392895E12, 136961.0], [1.53928884E12, 1040.28813559322], [1.53928938E12, 30637.049382716057], [1.53928878E12, 50.75], [1.53928908E12, 29414.9870967742], [1.53928896E12, 9646.128205128203], [1.53928902E12, 21334.171428571426], [1.53928932E12, 15415.564102564102]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5392895E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 50.75, "minX": 1.53928878E12, "maxY": 136961.0, "series": [{"data": [[1.5392889E12, 6023.846153846152], [1.53928938E12, 25579.409448818886], [1.5392892E12, 10343.446366782005], [1.53928878E12, 722.0], [1.53928926E12, 16360.937086092721], [1.53928908E12, 14776.349593495932], [1.53928914E12, 11976.35830618892], [1.53928896E12, 9814.046511627907], [1.53928944E12, 60431.65116279069], [1.53928902E12, 11088.695652173912], [1.53928884E12, 2137.457627118644], [1.53928932E12, 16176.724381625447]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5392889E12, 5968.673126614996], [1.5392892E12, 10941.639481000928], [1.53928926E12, 12388.146507666099], [1.53928914E12, 11571.350861287385], [1.53928944E12, 37843.92164179103], [1.5392895E12, 136961.0], [1.53928884E12, 2028.620164126612], [1.53928938E12, 14855.26338147834], [1.53928878E12, 561.5], [1.53928908E12, 13747.938181818181], [1.53928896E12, 10432.076056338023], [1.53928902E12, 11433.733056708152], [1.53928932E12, 12704.003333333321]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392889E12, 5249.78947368421], [1.5392892E12, 10503.455149501651], [1.53928926E12, 15246.806646525685], [1.53928914E12, 15056.624242424243], [1.53928944E12, 45165.25641025642], [1.5392895E12, 136961.0], [1.53928884E12, 1040.2711864406779], [1.53928938E12, 30637.04115226338], [1.53928878E12, 50.75], [1.53928908E12, 29414.98064516128], [1.53928896E12, 9646.128205128203], [1.53928902E12, 21334.171428571426], [1.53928932E12, 15415.556776556776]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5392895E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928878E12, "maxY": 13.499999999999998, "series": [{"data": [[1.5392889E12, 0.9038461538461541], [1.53928938E12, 0.49606299212598426], [1.5392892E12, 0.47404844290657455], [1.53928878E12, 0.0], [1.53928926E12, 0.40728476821192067], [1.53928908E12, 0.7317073170731709], [1.53928914E12, 0.5602605863192179], [1.53928896E12, 0.6976744186046512], [1.53928944E12, 0.6744186046511627], [1.53928902E12, 0.7826086956521738], [1.53928884E12, 0.23728813559322032], [1.53928932E12, 0.5371024734982331]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5392889E12, 0.5762273901808795], [1.5392892E12, 0.40037071362372595], [1.53928926E12, 0.36882453151618394], [1.53928914E12, 0.49682683590208543], [1.53928944E12, 0.38805970149253727], [1.5392895E12, 1.0], [1.53928884E12, 0.5463071512309494], [1.53928938E12, 0.34239592183517414], [1.53928878E12, 0.0], [1.53928908E12, 0.5333333333333342], [1.53928896E12, 0.5788732394366198], [1.53928902E12, 0.5656984785615495], [1.53928932E12, 0.357500000000001]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.5392889E12, 0.8421052631578945], [1.5392892E12, 0.48504983388704326], [1.53928926E12, 0.3897280966767372], [1.53928914E12, 0.47878787878787865], [1.53928944E12, 0.42307692307692324], [1.5392895E12, 1.0], [1.53928884E12, 1.3389830508474576], [1.53928938E12, 0.3868312757201644], [1.53928878E12, 13.499999999999998], [1.53928908E12, 0.6967741935483872], [1.53928896E12, 1.2051282051282053], [1.53928902E12, 1.2000000000000004], [1.53928932E12, 0.36630036630036644]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5392895E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.53928878E12, "maxY": 98174.0, "series": [{"data": [[1.5392889E12, 12393.0], [1.53928938E12, 22219.0], [1.5392892E12, 22918.0], [1.53928878E12, 722.0], [1.53928926E12, 21515.0], [1.53928908E12, 67557.0], [1.53928914E12, 98174.0], [1.53928896E12, 26269.0], [1.53928944E12, 59641.0], [1.53928902E12, 63469.0], [1.53928884E12, 5556.0], [1.53928932E12, 23531.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5392889E12, 2276.0], [1.53928938E12, 9821.0], [1.5392892E12, 8512.0], [1.53928878E12, 30.0], [1.53928926E12, 8706.0], [1.53928908E12, 9526.0], [1.53928914E12, 8803.0], [1.53928896E12, 7254.0], [1.53928944E12, 10159.0], [1.53928902E12, 9575.0], [1.53928884E12, 20.0], [1.53928932E12, 8876.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5392889E12, 7636.0], [1.53928938E12, 12566.1], [1.5392892E12, 12263.3], [1.53928878E12, 722.0], [1.53928926E12, 12298.900000000001], [1.53928908E12, 12004.2], [1.53928914E12, 12095.400000000001], [1.53928896E12, 10907.2], [1.53928944E12, 12761.0], [1.53928902E12, 11675.400000000001], [1.53928884E12, 3288.2000000000007], [1.53928932E12, 12393.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5392889E12, 9953.5], [1.53928938E12, 16064.709999999995], [1.5392892E12, 15678.91], [1.53928878E12, 722.0], [1.53928926E12, 15679.45], [1.53928908E12, 15374.279999999999], [1.53928914E12, 15500.0], [1.53928896E12, 13488.14000000001], [1.53928944E12, 19084.60000000008], [1.53928902E12, 14565.959999999995], [1.53928884E12, 4763.039999999996], [1.53928932E12, 15944.3]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5392889E12, 8398.0], [1.53928938E12, 13471.149999999998], [1.5392892E12, 13224.949999999999], [1.53928878E12, 722.0], [1.53928926E12, 13256.0], [1.53928908E12, 12984.099999999997], [1.53928914E12, 13055.099999999999], [1.53928896E12, 11558.199999999999], [1.53928944E12, 13845.0], [1.53928902E12, 12426.0], [1.53928884E12, 3468.2], [1.53928932E12, 13367.15]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928944E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136961.0, "series": [{"data": [[0.0, 101.0], [16.0, 1899.5], [18.0, 11257.5], [13.0, 10772.0], [27.0, 11367.0], [14.0, 5691.5], [7.0, 13436.0], [29.0, 11096.5], [30.0, 10661.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 3.0], [0.0, 136961.0], [18.0, 13312.0], [13.0, 13293.0], [27.0, 12800.0], [14.0, 1.0], [7.0, 57869.0], [29.0, 13308.0], [30.0, 11776.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136961.0, "series": [{"data": [[0.0, 101.0], [16.0, 1899.0], [18.0, 11257.0], [13.0, 10771.5], [27.0, 11366.0], [14.0, 5691.0], [7.0, 13436.0], [29.0, 11095.5], [30.0, 10661.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 3.0], [0.0, 136961.0], [18.0, 13312.0], [13.0, 13293.0], [27.0, 12800.0], [14.0, 1.0], [7.0, 57869.0], [29.0, 13308.0], [30.0, 11776.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.18333333333333332, "minX": 1.53928878E12, "maxY": 31.116666666666667, "series": [{"data": [[1.5392889E12, 15.716666666666667], [1.53928938E12, 26.833333333333332], [1.5392892E12, 28.816666666666666], [1.53928878E12, 0.18333333333333332], [1.53928926E12, 31.116666666666667], [1.53928908E12, 19.383333333333333], [1.53928914E12, 30.0], [1.53928896E12, 14.2], [1.53928902E12, 14.016666666666667], [1.53928884E12, 17.183333333333334], [1.53928932E12, 29.533333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928938E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928878E12, "maxY": 16.8, "series": [{"data": [[1.5392889E12, 13.783333333333333], [1.53928938E12, 11.733333333333333], [1.5392892E12, 12.266666666666667], [1.53928878E12, 0.1], [1.53928926E12, 12.5], [1.53928908E12, 12.083333333333334], [1.53928914E12, 12.6], [1.53928896E12, 12.45], [1.53928944E12, 3.85], [1.53928902E12, 12.316666666666666], [1.53928884E12, 15.116666666666667], [1.53928932E12, 11.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5392889E12, 0.85], [1.53928938E12, 0.3], [1.5392892E12, 0.4166666666666667], [1.53928878E12, 0.016666666666666666], [1.53928926E12, 0.5666666666666667], [1.53928908E12, 0.35], [1.53928914E12, 0.4666666666666667], [1.53928896E12, 0.7], [1.53928902E12, 0.3], [1.53928884E12, 0.95], [1.53928932E12, 0.48333333333333334]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.5392889E12, 0.08333333333333333], [1.53928938E12, 15.75], [1.5392892E12, 15.016666666666667], [1.53928926E12, 16.8], [1.53928908E12, 5.75], [1.53928914E12, 15.683333333333334], [1.53928896E12, 0.05], [1.53928944E12, 2.683333333333333], [1.53928902E12, 0.36666666666666664], [1.5392895E12, 0.06666666666666667], [1.53928884E12, 0.08333333333333333], [1.53928932E12, 16.65]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53928938E12, 0.11666666666666667], [1.5392892E12, 0.11666666666666667], [1.53928926E12, 0.25], [1.53928908E12, 0.2], [1.53928914E12, 0.25], [1.53928944E12, 0.6666666666666666], [1.53928902E12, 0.03333333333333333], [1.53928884E12, 0.03333333333333333], [1.53928932E12, 0.18333333333333332]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5392895E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928878E12, "maxY": 14.166666666666666, "series": [{"data": [[1.5392889E12, 0.95], [1.53928938E12, 0.3], [1.5392892E12, 0.48333333333333334], [1.53928878E12, 0.06666666666666667], [1.53928926E12, 0.5166666666666667], [1.53928908E12, 0.36666666666666664], [1.53928914E12, 0.5], [1.53928896E12, 0.65], [1.53928944E12, 0.7166666666666667], [1.53928902E12, 0.35], [1.53928884E12, 0.95], [1.53928932E12, 0.5]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.5392889E12, 0.85], [1.53928938E12, 0.3], [1.5392892E12, 0.4166666666666667], [1.53928878E12, 0.016666666666666666], [1.53928926E12, 0.5666666666666667], [1.53928908E12, 0.35], [1.53928914E12, 0.4666666666666667], [1.53928896E12, 0.7], [1.53928902E12, 0.3], [1.53928884E12, 0.95], [1.53928932E12, 0.48333333333333334]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.5392889E12, 12.833333333333334], [1.53928938E12, 11.433333333333334], [1.5392892E12, 11.783333333333333], [1.53928878E12, 0.03333333333333333], [1.53928926E12, 11.983333333333333], [1.53928908E12, 11.716666666666667], [1.53928914E12, 12.1], [1.53928896E12, 11.8], [1.53928944E12, 3.1333333333333333], [1.53928902E12, 11.966666666666667], [1.53928884E12, 14.166666666666666], [1.53928932E12, 11.45]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928938E12, 3.75], [1.5392892E12, 4.533333333333333], [1.53928926E12, 5.0], [1.53928908E12, 2.216666666666667], [1.53928914E12, 5.0], [1.53928944E12, 0.5833333333333334], [1.53928902E12, 0.23333333333333334], [1.5392895E12, 0.016666666666666666], [1.53928884E12, 0.03333333333333333], [1.53928932E12, 4.05]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5392889E12, 0.06666666666666667], [1.53928938E12, 8.183333333333334], [1.5392892E12, 6.2], [1.53928926E12, 7.583333333333333], [1.53928908E12, 2.033333333333333], [1.53928914E12, 6.283333333333333], [1.53928896E12, 0.03333333333333333], [1.53928944E12, 1.3333333333333333], [1.53928902E12, 0.08333333333333333], [1.5392895E12, 0.05], [1.53928884E12, 0.05], [1.53928932E12, 8.55]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.5392889E12, 0.016666666666666666], [1.53928938E12, 3.933333333333333], [1.5392892E12, 4.4], [1.53928926E12, 4.466666666666667], [1.53928908E12, 1.7], [1.53928914E12, 4.65], [1.53928896E12, 0.016666666666666666], [1.53928944E12, 1.4333333333333333], [1.53928902E12, 0.08333333333333333], [1.53928884E12, 0.03333333333333333], [1.53928932E12, 4.233333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5392895E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
