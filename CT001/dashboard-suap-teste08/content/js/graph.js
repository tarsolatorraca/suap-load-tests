/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 213505.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 554.0], [7.8, 573.0], [7.9, 608.0], [8.0, 621.0], [8.1, 750.0], [8.2, 984.0], [8.3, 1068.0], [8.4, 1340.0], [8.5, 1398.0], [8.6, 1520.0], [8.7, 1666.0], [8.8, 1737.0], [8.9, 1750.0], [9.0, 1821.0], [9.1, 2050.0], [9.2, 2081.0], [9.3, 2094.0], [9.4, 2123.0], [9.5, 2143.0], [9.6, 2229.0], [9.7, 2267.0], [9.8, 2398.0], [9.9, 2409.0], [10.0, 2571.0], [10.1, 2706.0], [10.2, 2925.0], [10.3, 3076.0], [10.4, 3231.0], [10.5, 3507.0], [10.6, 3816.0], [10.7, 3957.0], [10.8, 4062.0], [10.9, 4097.0], [11.0, 4203.0], [11.1, 4273.0], [11.2, 4287.0], [11.3, 4348.0], [11.4, 4472.0], [11.5, 4536.0], [11.6, 4985.0], [11.7, 5693.0], [11.8, 5861.0], [11.9, 5989.0], [12.0, 6128.0], [12.1, 6206.0], [12.2, 6403.0], [12.3, 6492.0], [12.4, 6713.0], [12.5, 6933.0], [12.6, 7049.0], [12.7, 7108.0], [12.8, 7164.0], [12.9, 7164.0], [13.0, 7167.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7172.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7172.0], [15.4, 7310.0], [15.5, 7423.0], [15.6, 7423.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7428.0], [16.9, 7674.0], [17.0, 7676.0], [17.1, 7676.0], [17.2, 7676.0], [17.3, 7679.0], [17.4, 7679.0], [17.5, 7679.0], [17.6, 7680.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7684.0], [19.2, 7684.0], [19.3, 7685.0], [19.4, 7746.0], [19.5, 7845.0], [19.6, 7932.0], [19.7, 7932.0], [19.8, 7935.0], [19.9, 7935.0], [20.0, 7935.0], [20.1, 7935.0], [20.2, 7935.0], [20.3, 7935.0], [20.4, 7935.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7939.0], [22.0, 7940.0], [22.1, 8066.0], [22.2, 8188.0], [22.3, 8188.0], [22.4, 8190.0], [22.5, 8191.0], [22.6, 8191.0], [22.7, 8191.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8196.0], [23.2, 8217.0], [23.3, 8308.0], [23.4, 8412.0], [23.5, 8446.0], [23.6, 8447.0], [23.7, 8447.0], [23.8, 8447.0], [23.9, 8448.0], [24.0, 8448.0], [24.1, 8448.0], [24.2, 8448.0], [24.3, 8452.0], [24.4, 8699.0], [24.5, 8700.0], [24.6, 8700.0], [24.7, 8702.0], [24.8, 8703.0], [24.9, 8703.0], [25.0, 8703.0], [25.1, 8703.0], [25.2, 8703.0], [25.3, 8704.0], [25.4, 8704.0], [25.5, 8704.0], [25.6, 8704.0], [25.7, 8704.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8705.0], [26.4, 8707.0], [26.5, 8707.0], [26.6, 8707.0], [26.7, 8707.0], [26.8, 8708.0], [26.9, 8719.0], [27.0, 8765.0], [27.1, 8910.0], [27.2, 8959.0], [27.3, 8960.0], [27.4, 8960.0], [27.5, 8960.0], [27.6, 8960.0], [27.7, 9015.0], [27.8, 9049.0], [27.9, 9104.0], [28.0, 9127.0], [28.1, 9165.0], [28.2, 9185.0], [28.3, 9210.0], [28.4, 9212.0], [28.5, 9212.0], [28.6, 9212.0], [28.7, 9214.0], [28.8, 9215.0], [28.9, 9215.0], [29.0, 9215.0], [29.1, 9215.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9216.0], [29.5, 9216.0], [29.6, 9216.0], [29.7, 9216.0], [29.8, 9216.0], [29.9, 9216.0], [30.0, 9216.0], [30.1, 9216.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9220.0], [30.5, 9220.0], [30.6, 9220.0], [30.7, 9274.0], [30.8, 9334.0], [30.9, 9414.0], [31.0, 9469.0], [31.1, 9472.0], [31.2, 9472.0], [31.3, 9472.0], [31.4, 9472.0], [31.5, 9476.0], [31.6, 9616.0], [31.7, 9676.0], [31.8, 9726.0], [31.9, 9727.0], [32.0, 9728.0], [32.1, 9728.0], [32.2, 9728.0], [32.3, 9728.0], [32.4, 9728.0], [32.5, 9732.0], [32.6, 9732.0], [32.7, 9740.0], [32.8, 9793.0], [32.9, 9819.0], [33.0, 9832.0], [33.1, 9864.0], [33.2, 9906.0], [33.3, 9959.0], [33.4, 9966.0], [33.5, 9980.0], [33.6, 9981.0], [33.7, 9983.0], [33.8, 9983.0], [33.9, 9983.0], [34.0, 9984.0], [34.1, 9984.0], [34.2, 9984.0], [34.3, 9984.0], [34.4, 9984.0], [34.5, 9984.0], [34.6, 9985.0], [34.7, 9987.0], [34.8, 9987.0], [34.9, 9988.0], [35.0, 9988.0], [35.1, 9988.0], [35.2, 10077.0], [35.3, 10099.0], [35.4, 10132.0], [35.5, 10155.0], [35.6, 10179.0], [35.7, 10189.0], [35.8, 10226.0], [35.9, 10236.0], [36.0, 10236.0], [36.1, 10236.0], [36.2, 10239.0], [36.3, 10239.0], [36.4, 10239.0], [36.5, 10240.0], [36.6, 10240.0], [36.7, 10240.0], [36.8, 10240.0], [36.9, 10240.0], [37.0, 10241.0], [37.1, 10243.0], [37.2, 10244.0], [37.3, 10244.0], [37.4, 10258.0], [37.5, 10261.0], [37.6, 10277.0], [37.7, 10309.0], [37.8, 10316.0], [37.9, 10336.0], [38.0, 10360.0], [38.1, 10437.0], [38.2, 10449.0], [38.3, 10472.0], [38.4, 10493.0], [38.5, 10495.0], [38.6, 10501.0], [38.7, 10511.0], [38.8, 10535.0], [38.9, 10564.0], [39.0, 10570.0], [39.1, 10577.0], [39.2, 10619.0], [39.3, 10631.0], [39.4, 10636.0], [39.5, 10655.0], [39.6, 10658.0], [39.7, 10675.0], [39.8, 10692.0], [39.9, 10710.0], [40.0, 10737.0], [40.1, 10748.0], [40.2, 10750.0], [40.3, 10752.0], [40.4, 10752.0], [40.5, 10752.0], [40.6, 10752.0], [40.7, 10756.0], [40.8, 10766.0], [40.9, 10773.0], [41.0, 10855.0], [41.1, 10862.0], [41.2, 10888.0], [41.3, 10893.0], [41.4, 10907.0], [41.5, 10960.0], [41.6, 10987.0], [41.7, 10997.0], [41.8, 11007.0], [41.9, 11008.0], [42.0, 11008.0], [42.1, 11011.0], [42.2, 11012.0], [42.3, 11012.0], [42.4, 11012.0], [42.5, 11012.0], [42.6, 11012.0], [42.7, 11016.0], [42.8, 11017.0], [42.9, 11035.0], [43.0, 11069.0], [43.1, 11084.0], [43.2, 11091.0], [43.3, 11131.0], [43.4, 11136.0], [43.5, 11147.0], [43.6, 11160.0], [43.7, 11176.0], [43.8, 11183.0], [43.9, 11184.0], [44.0, 11188.0], [44.1, 11196.0], [44.2, 11203.0], [44.3, 11245.0], [44.4, 11259.0], [44.5, 11260.0], [44.6, 11262.0], [44.7, 11263.0], [44.8, 11263.0], [44.9, 11264.0], [45.0, 11264.0], [45.1, 11264.0], [45.2, 11264.0], [45.3, 11264.0], [45.4, 11272.0], [45.5, 11287.0], [45.6, 11313.0], [45.7, 11316.0], [45.8, 11391.0], [45.9, 11396.0], [46.0, 11417.0], [46.1, 11435.0], [46.2, 11448.0], [46.3, 11500.0], [46.4, 11506.0], [46.5, 11515.0], [46.6, 11516.0], [46.7, 11516.0], [46.8, 11516.0], [46.9, 11519.0], [47.0, 11520.0], [47.1, 11520.0], [47.2, 11520.0], [47.3, 11520.0], [47.4, 11524.0], [47.5, 11578.0], [47.6, 11592.0], [47.7, 11639.0], [47.8, 11641.0], [47.9, 11683.0], [48.0, 11705.0], [48.1, 11761.0], [48.2, 11772.0], [48.3, 11772.0], [48.4, 11776.0], [48.5, 11776.0], [48.6, 11776.0], [48.7, 11776.0], [48.8, 11776.0], [48.9, 11776.0], [49.0, 11780.0], [49.1, 11780.0], [49.2, 11796.0], [49.3, 11818.0], [49.4, 11872.0], [49.5, 11904.0], [49.6, 11920.0], [49.7, 11970.0], [49.8, 11992.0], [49.9, 12025.0], [50.0, 12032.0], [50.1, 12032.0], [50.2, 12036.0], [50.3, 12054.0], [50.4, 12063.0], [50.5, 12098.0], [50.6, 12115.0], [50.7, 12133.0], [50.8, 12182.0], [50.9, 12255.0], [51.0, 12267.0], [51.1, 12287.0], [51.2, 12287.0], [51.3, 12288.0], [51.4, 12288.0], [51.5, 12288.0], [51.6, 12296.0], [51.7, 12321.0], [51.8, 12443.0], [51.9, 12466.0], [52.0, 12487.0], [52.1, 12521.0], [52.2, 12544.0], [52.3, 12544.0], [52.4, 12544.0], [52.5, 12544.0], [52.6, 12544.0], [52.7, 12548.0], [52.8, 12595.0], [52.9, 12643.0], [53.0, 12699.0], [53.1, 12736.0], [53.2, 12796.0], [53.3, 12799.0], [53.4, 12799.0], [53.5, 12800.0], [53.6, 12800.0], [53.7, 12800.0], [53.8, 12800.0], [53.9, 12800.0], [54.0, 12801.0], [54.1, 12804.0], [54.2, 12853.0], [54.3, 12939.0], [54.4, 13054.0], [54.5, 13054.0], [54.6, 13056.0], [54.7, 13056.0], [54.8, 13056.0], [54.9, 13060.0], [55.0, 13110.0], [55.1, 13195.0], [55.2, 13242.0], [55.3, 13268.0], [55.4, 13306.0], [55.5, 13307.0], [55.6, 13307.0], [55.7, 13308.0], [55.8, 13308.0], [55.9, 13308.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13309.0], [57.9, 13309.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13313.0], [76.1, 13313.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13314.0], [77.0, 13315.0], [77.1, 13315.0], [77.2, 13315.0], [77.3, 13315.0], [77.4, 13316.0], [77.5, 13316.0], [77.6, 13316.0], [77.7, 13316.0], [77.8, 13316.0], [77.9, 13316.0], [78.0, 13316.0], [78.1, 13316.0], [78.2, 13316.0], [78.3, 13316.0], [78.4, 13316.0], [78.5, 13316.0], [78.6, 13316.0], [78.7, 13316.0], [78.8, 13316.0], [78.9, 13316.0], [79.0, 13316.0], [79.1, 13316.0], [79.2, 13316.0], [79.3, 13316.0], [79.4, 13326.0], [79.5, 13361.0], [79.6, 13412.0], [79.7, 13552.0], [79.8, 13558.0], [79.9, 13566.0], [80.0, 13567.0], [80.1, 13599.0], [80.2, 13682.0], [80.3, 13819.0], [80.4, 13820.0], [80.5, 13820.0], [80.6, 13820.0], [80.7, 13820.0], [80.8, 13820.0], [80.9, 13820.0], [81.0, 13820.0], [81.1, 13820.0], [81.2, 13820.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13825.0], [83.9, 13825.0], [84.0, 13825.0], [84.1, 13825.0], [84.2, 13828.0], [84.3, 13828.0], [84.4, 13828.0], [84.5, 13828.0], [84.6, 14018.0], [84.7, 14020.0], [84.8, 14044.0], [84.9, 14071.0], [85.0, 14079.0], [85.1, 14080.0], [85.2, 14080.0], [85.3, 14086.0], [85.4, 14172.0], [85.5, 14245.0], [85.6, 14331.0], [85.7, 14335.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14336.0], [86.6, 14336.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14336.0], [88.0, 14336.0], [88.1, 14336.0], [88.2, 14336.0], [88.3, 14339.0], [88.4, 14340.0], [88.5, 14592.0], [88.6, 14592.0], [88.7, 14604.0], [88.8, 14721.0], [88.9, 14747.0], [89.0, 14827.0], [89.1, 14848.0], [89.2, 14848.0], [89.3, 14848.0], [89.4, 14979.0], [89.5, 15104.0], [89.6, 15210.0], [89.7, 15271.0], [89.8, 15355.0], [89.9, 15356.0], [90.0, 15356.0], [90.1, 15360.0], [90.2, 15360.0], [90.3, 15360.0], [90.4, 15360.0], [90.5, 15616.0], [90.6, 15616.0], [90.7, 15616.0], [90.8, 15868.0], [90.9, 16380.0], [91.0, 16383.0], [91.1, 16384.0], [91.2, 16384.0], [91.3, 16384.0], [91.4, 16384.0], [91.5, 16384.0], [91.6, 16860.0], [91.7, 16934.0], [91.8, 17152.0], [91.9, 17326.0], [92.0, 17920.0], [92.1, 18432.0], [92.2, 18737.0], [92.3, 18811.0], [92.4, 19968.0], [92.5, 20224.0], [92.6, 20503.0], [92.7, 23800.0], [92.8, 24576.0], [92.9, 26368.0], [93.0, 26368.0], [93.1, 26368.0], [93.2, 26368.0], [93.3, 26372.0], [93.4, 26433.0], [93.5, 26624.0], [93.6, 26624.0], [93.7, 26628.0], [93.8, 27385.0], [93.9, 27489.0], [94.0, 27705.0], [94.1, 28160.0], [94.2, 28415.0], [94.3, 28672.0], [94.4, 28928.0], [94.5, 29176.0], [94.6, 29700.0], [94.7, 34635.0], [94.8, 34816.0], [94.9, 35253.0], [95.0, 53345.0], [95.1, 62972.0], [95.2, 63488.0], [95.3, 64511.0], [95.4, 70404.0], [95.5, 99072.0], [95.6, 105472.0], [95.7, 105472.0], [95.8, 105472.0], [95.9, 105473.0], [96.0, 105726.0], [96.1, 105726.0], [96.2, 105727.0], [96.3, 106239.0], [96.4, 106496.0], [96.5, 106752.0], [96.6, 106753.0], [96.7, 107008.0], [96.8, 107260.0], [96.9, 107264.0], [97.0, 107264.0], [97.1, 109055.0], [97.2, 109824.0], [97.3, 110079.0], [97.4, 110080.0], [97.5, 110591.0], [97.6, 110592.0], [97.7, 110592.0], [97.8, 110592.0], [97.9, 110593.0], [98.0, 110848.0], [98.1, 119039.0], [98.2, 119040.0], [98.3, 122875.0], [98.4, 122880.0], [98.5, 122880.0], [98.6, 124160.0], [98.7, 127232.0], [98.8, 144384.0], [98.9, 146432.0], [99.0, 151552.0], [99.1, 159743.0], [99.2, 161024.0], [99.3, 161024.0], [99.4, 161025.0], [99.5, 161792.0], [99.6, 210688.0], [99.7, 210944.0], [99.8, 213504.0], [99.9, 213504.0], [100.0, 213504.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 2.0], [2.9, 584.0], [3.0, 620.0], [3.1, 653.0], [3.2, 680.0], [3.3, 703.0], [3.4, 724.0], [3.5, 739.0], [3.6, 768.0], [3.7, 787.0], [3.8, 817.0], [3.9, 830.0], [4.0, 858.0], [4.1, 883.0], [4.2, 905.0], [4.3, 932.0], [4.4, 958.0], [4.5, 1001.0], [4.6, 1035.0], [4.7, 1087.0], [4.8, 1140.0], [4.9, 1207.0], [5.0, 1240.0], [5.1, 1284.0], [5.2, 1304.0], [5.3, 1358.0], [5.4, 1397.0], [5.5, 1440.0], [5.6, 1486.0], [5.7, 1510.0], [5.8, 1582.0], [5.9, 1617.0], [6.0, 1657.0], [6.1, 1666.0], [6.2, 1695.0], [6.3, 1724.0], [6.4, 1758.0], [6.5, 1795.0], [6.6, 1819.0], [6.7, 1854.0], [6.8, 1889.0], [6.9, 1926.0], [7.0, 1966.0], [7.1, 1982.0], [7.2, 1993.0], [7.3, 2013.0], [7.4, 2025.0], [7.5, 2046.0], [7.6, 2063.0], [7.7, 2078.0], [7.8, 2095.0], [7.9, 2112.0], [8.0, 2136.0], [8.1, 2158.0], [8.2, 2172.0], [8.3, 2186.0], [8.4, 2205.0], [8.5, 2222.0], [8.6, 2244.0], [8.7, 2277.0], [8.8, 2297.0], [8.9, 2316.0], [9.0, 2331.0], [9.1, 2392.0], [9.2, 2424.0], [9.3, 2455.0], [9.4, 2487.0], [9.5, 2517.0], [9.6, 2566.0], [9.7, 2600.0], [9.8, 2623.0], [9.9, 2645.0], [10.0, 2672.0], [10.1, 2738.0], [10.2, 2764.0], [10.3, 2795.0], [10.4, 2835.0], [10.5, 2856.0], [10.6, 2889.0], [10.7, 2931.0], [10.8, 2970.0], [10.9, 3025.0], [11.0, 3059.0], [11.1, 3111.0], [11.2, 3173.0], [11.3, 3218.0], [11.4, 3251.0], [11.5, 3315.0], [11.6, 3373.0], [11.7, 3439.0], [11.8, 3492.0], [11.9, 3557.0], [12.0, 3626.0], [12.1, 3701.0], [12.2, 3748.0], [12.3, 3820.0], [12.4, 3865.0], [12.5, 3943.0], [12.6, 3993.0], [12.7, 4034.0], [12.8, 4070.0], [12.9, 4131.0], [13.0, 4168.0], [13.1, 4191.0], [13.2, 4218.0], [13.3, 4264.0], [13.4, 4310.0], [13.5, 4356.0], [13.6, 4398.0], [13.7, 4422.0], [13.8, 4460.0], [13.9, 4469.0], [14.0, 4511.0], [14.1, 4565.0], [14.2, 4600.0], [14.3, 4639.0], [14.4, 4705.0], [14.5, 4816.0], [14.6, 4884.0], [14.7, 4997.0], [14.8, 5153.0], [14.9, 5411.0], [15.0, 5516.0], [15.1, 5617.0], [15.2, 5697.0], [15.3, 5763.0], [15.4, 5800.0], [15.5, 5854.0], [15.6, 5903.0], [15.7, 5963.0], [15.8, 6027.0], [15.9, 6058.0], [16.0, 6091.0], [16.1, 6126.0], [16.2, 6159.0], [16.3, 6181.0], [16.4, 6223.0], [16.5, 6255.0], [16.6, 6292.0], [16.7, 6368.0], [16.8, 6427.0], [16.9, 6477.0], [17.0, 6560.0], [17.1, 6635.0], [17.2, 6703.0], [17.3, 6787.0], [17.4, 6885.0], [17.5, 6971.0], [17.6, 7044.0], [17.7, 7136.0], [17.8, 7164.0], [17.9, 7167.0], [18.0, 7168.0], [18.1, 7168.0], [18.2, 7168.0], [18.3, 7168.0], [18.4, 7168.0], [18.5, 7168.0], [18.6, 7171.0], [18.7, 7172.0], [18.8, 7192.0], [18.9, 7217.0], [19.0, 7266.0], [19.1, 7298.0], [19.2, 7346.0], [19.3, 7414.0], [19.4, 7424.0], [19.5, 7424.0], [19.6, 7425.0], [19.7, 7432.0], [19.8, 7484.0], [19.9, 7540.0], [20.0, 7625.0], [20.1, 7676.0], [20.2, 7676.0], [20.3, 7679.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7681.0], [20.8, 7739.0], [20.9, 7841.0], [21.0, 7885.0], [21.1, 7932.0], [21.2, 7934.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7940.0], [21.7, 7988.0], [21.8, 8074.0], [21.9, 8184.0], [22.0, 8191.0], [22.1, 8192.0], [22.2, 8201.0], [22.3, 8241.0], [22.4, 8287.0], [22.5, 8297.0], [22.6, 8321.0], [22.7, 8360.0], [22.8, 8398.0], [22.9, 8444.0], [23.0, 8452.0], [23.1, 8481.0], [23.2, 8529.0], [23.3, 8592.0], [23.4, 8647.0], [23.5, 8703.0], [23.6, 8703.0], [23.7, 8704.0], [23.8, 8704.0], [23.9, 8704.0], [24.0, 8705.0], [24.1, 8708.0], [24.2, 8736.0], [24.3, 8797.0], [24.4, 8860.0], [24.5, 8922.0], [24.6, 8956.0], [24.7, 8960.0], [24.8, 8964.0], [24.9, 9014.0], [25.0, 9045.0], [25.1, 9076.0], [25.2, 9089.0], [25.3, 9130.0], [25.4, 9151.0], [25.5, 9191.0], [25.6, 9211.0], [25.7, 9215.0], [25.8, 9216.0], [25.9, 9216.0], [26.0, 9217.0], [26.1, 9220.0], [26.2, 9228.0], [26.3, 9260.0], [26.4, 9278.0], [26.5, 9308.0], [26.6, 9333.0], [26.7, 9346.0], [26.8, 9368.0], [26.9, 9387.0], [27.0, 9402.0], [27.1, 9424.0], [27.2, 9449.0], [27.3, 9471.0], [27.4, 9472.0], [27.5, 9484.0], [27.6, 9500.0], [27.7, 9521.0], [27.8, 9538.0], [27.9, 9554.0], [28.0, 9565.0], [28.1, 9585.0], [28.2, 9594.0], [28.3, 9603.0], [28.4, 9620.0], [28.5, 9627.0], [28.6, 9635.0], [28.7, 9650.0], [28.8, 9662.0], [28.9, 9684.0], [29.0, 9699.0], [29.1, 9711.0], [29.2, 9727.0], [29.3, 9728.0], [29.4, 9729.0], [29.5, 9732.0], [29.6, 9737.0], [29.7, 9751.0], [29.8, 9766.0], [29.9, 9782.0], [30.0, 9795.0], [30.1, 9803.0], [30.2, 9817.0], [30.3, 9824.0], [30.4, 9836.0], [30.5, 9853.0], [30.6, 9867.0], [30.7, 9877.0], [30.8, 9885.0], [30.9, 9895.0], [31.0, 9923.0], [31.1, 9932.0], [31.2, 9947.0], [31.3, 9951.0], [31.4, 9963.0], [31.5, 9971.0], [31.6, 9980.0], [31.7, 9983.0], [31.8, 9984.0], [31.9, 9986.0], [32.0, 9987.0], [32.1, 9991.0], [32.2, 10001.0], [32.3, 10006.0], [32.4, 10013.0], [32.5, 10024.0], [32.6, 10031.0], [32.7, 10037.0], [32.8, 10046.0], [32.9, 10056.0], [33.0, 10061.0], [33.1, 10071.0], [33.2, 10079.0], [33.3, 10087.0], [33.4, 10095.0], [33.5, 10098.0], [33.6, 10104.0], [33.7, 10107.0], [33.8, 10113.0], [33.9, 10123.0], [34.0, 10128.0], [34.1, 10140.0], [34.2, 10144.0], [34.3, 10149.0], [34.4, 10152.0], [34.5, 10160.0], [34.6, 10166.0], [34.7, 10175.0], [34.8, 10181.0], [34.9, 10185.0], [35.0, 10193.0], [35.1, 10199.0], [35.2, 10207.0], [35.3, 10213.0], [35.4, 10218.0], [35.5, 10225.0], [35.6, 10233.0], [35.7, 10238.0], [35.8, 10239.0], [35.9, 10240.0], [36.0, 10240.0], [36.1, 10241.0], [36.2, 10244.0], [36.3, 10249.0], [36.4, 10256.0], [36.5, 10268.0], [36.6, 10275.0], [36.7, 10284.0], [36.8, 10290.0], [36.9, 10297.0], [37.0, 10306.0], [37.1, 10312.0], [37.2, 10318.0], [37.3, 10323.0], [37.4, 10331.0], [37.5, 10339.0], [37.6, 10343.0], [37.7, 10350.0], [37.8, 10356.0], [37.9, 10360.0], [38.0, 10365.0], [38.1, 10373.0], [38.2, 10379.0], [38.3, 10384.0], [38.4, 10386.0], [38.5, 10391.0], [38.6, 10395.0], [38.7, 10400.0], [38.8, 10405.0], [38.9, 10411.0], [39.0, 10414.0], [39.1, 10421.0], [39.2, 10425.0], [39.3, 10428.0], [39.4, 10434.0], [39.5, 10438.0], [39.6, 10443.0], [39.7, 10447.0], [39.8, 10453.0], [39.9, 10457.0], [40.0, 10463.0], [40.1, 10468.0], [40.2, 10472.0], [40.3, 10479.0], [40.4, 10484.0], [40.5, 10488.0], [40.6, 10491.0], [40.7, 10495.0], [40.8, 10498.0], [40.9, 10502.0], [41.0, 10504.0], [41.1, 10510.0], [41.2, 10515.0], [41.3, 10524.0], [41.4, 10527.0], [41.5, 10530.0], [41.6, 10533.0], [41.7, 10537.0], [41.8, 10541.0], [41.9, 10546.0], [42.0, 10551.0], [42.1, 10555.0], [42.2, 10558.0], [42.3, 10562.0], [42.4, 10566.0], [42.5, 10570.0], [42.6, 10574.0], [42.7, 10580.0], [42.8, 10585.0], [42.9, 10588.0], [43.0, 10593.0], [43.1, 10596.0], [43.2, 10599.0], [43.3, 10604.0], [43.4, 10611.0], [43.5, 10615.0], [43.6, 10621.0], [43.7, 10624.0], [43.8, 10629.0], [43.9, 10633.0], [44.0, 10638.0], [44.1, 10642.0], [44.2, 10645.0], [44.3, 10648.0], [44.4, 10651.0], [44.5, 10655.0], [44.6, 10658.0], [44.7, 10661.0], [44.8, 10665.0], [44.9, 10668.0], [45.0, 10676.0], [45.1, 10678.0], [45.2, 10682.0], [45.3, 10689.0], [45.4, 10694.0], [45.5, 10698.0], [45.6, 10702.0], [45.7, 10706.0], [45.8, 10713.0], [45.9, 10718.0], [46.0, 10721.0], [46.1, 10725.0], [46.2, 10728.0], [46.3, 10733.0], [46.4, 10738.0], [46.5, 10743.0], [46.6, 10746.0], [46.7, 10751.0], [46.8, 10752.0], [46.9, 10755.0], [47.0, 10758.0], [47.1, 10765.0], [47.2, 10768.0], [47.3, 10773.0], [47.4, 10779.0], [47.5, 10782.0], [47.6, 10788.0], [47.7, 10791.0], [47.8, 10794.0], [47.9, 10800.0], [48.0, 10803.0], [48.1, 10809.0], [48.2, 10812.0], [48.3, 10818.0], [48.4, 10822.0], [48.5, 10828.0], [48.6, 10831.0], [48.7, 10837.0], [48.8, 10840.0], [48.9, 10845.0], [49.0, 10850.0], [49.1, 10858.0], [49.2, 10861.0], [49.3, 10865.0], [49.4, 10870.0], [49.5, 10878.0], [49.6, 10881.0], [49.7, 10885.0], [49.8, 10891.0], [49.9, 10895.0], [50.0, 10901.0], [50.1, 10905.0], [50.2, 10910.0], [50.3, 10913.0], [50.4, 10917.0], [50.5, 10922.0], [50.6, 10927.0], [50.7, 10931.0], [50.8, 10934.0], [50.9, 10937.0], [51.0, 10940.0], [51.1, 10944.0], [51.2, 10948.0], [51.3, 10953.0], [51.4, 10958.0], [51.5, 10960.0], [51.6, 10963.0], [51.7, 10969.0], [51.8, 10974.0], [51.9, 10983.0], [52.0, 10987.0], [52.1, 10991.0], [52.2, 10996.0], [52.3, 11000.0], [52.4, 11004.0], [52.5, 11007.0], [52.6, 11008.0], [52.7, 11009.0], [52.8, 11012.0], [52.9, 11014.0], [53.0, 11020.0], [53.1, 11024.0], [53.2, 11031.0], [53.3, 11036.0], [53.4, 11039.0], [53.5, 11043.0], [53.6, 11047.0], [53.7, 11049.0], [53.8, 11052.0], [53.9, 11056.0], [54.0, 11061.0], [54.1, 11065.0], [54.2, 11067.0], [54.3, 11070.0], [54.4, 11074.0], [54.5, 11078.0], [54.6, 11081.0], [54.7, 11086.0], [54.8, 11090.0], [54.9, 11094.0], [55.0, 11097.0], [55.1, 11102.0], [55.2, 11108.0], [55.3, 11111.0], [55.4, 11115.0], [55.5, 11119.0], [55.6, 11125.0], [55.7, 11129.0], [55.8, 11132.0], [55.9, 11136.0], [56.0, 11141.0], [56.1, 11144.0], [56.2, 11150.0], [56.3, 11154.0], [56.4, 11158.0], [56.5, 11162.0], [56.6, 11169.0], [56.7, 11173.0], [56.8, 11178.0], [56.9, 11183.0], [57.0, 11188.0], [57.1, 11191.0], [57.2, 11195.0], [57.3, 11199.0], [57.4, 11203.0], [57.5, 11205.0], [57.6, 11209.0], [57.7, 11215.0], [57.8, 11220.0], [57.9, 11225.0], [58.0, 11231.0], [58.1, 11236.0], [58.2, 11240.0], [58.3, 11244.0], [58.4, 11247.0], [58.5, 11250.0], [58.6, 11257.0], [58.7, 11260.0], [58.8, 11264.0], [58.9, 11264.0], [59.0, 11270.0], [59.1, 11275.0], [59.2, 11278.0], [59.3, 11283.0], [59.4, 11288.0], [59.5, 11293.0], [59.6, 11297.0], [59.7, 11300.0], [59.8, 11306.0], [59.9, 11309.0], [60.0, 11316.0], [60.1, 11322.0], [60.2, 11327.0], [60.3, 11332.0], [60.4, 11336.0], [60.5, 11343.0], [60.6, 11346.0], [60.7, 11352.0], [60.8, 11355.0], [60.9, 11359.0], [61.0, 11363.0], [61.1, 11368.0], [61.2, 11373.0], [61.3, 11377.0], [61.4, 11380.0], [61.5, 11385.0], [61.6, 11388.0], [61.7, 11391.0], [61.8, 11396.0], [61.9, 11401.0], [62.0, 11404.0], [62.1, 11409.0], [62.2, 11414.0], [62.3, 11419.0], [62.4, 11422.0], [62.5, 11427.0], [62.6, 11429.0], [62.7, 11434.0], [62.8, 11438.0], [62.9, 11446.0], [63.0, 11449.0], [63.1, 11453.0], [63.2, 11457.0], [63.3, 11461.0], [63.4, 11467.0], [63.5, 11472.0], [63.6, 11475.0], [63.7, 11480.0], [63.8, 11483.0], [63.9, 11488.0], [64.0, 11495.0], [64.1, 11501.0], [64.2, 11505.0], [64.3, 11509.0], [64.4, 11513.0], [64.5, 11515.0], [64.6, 11518.0], [64.7, 11520.0], [64.8, 11520.0], [64.9, 11523.0], [65.0, 11527.0], [65.1, 11532.0], [65.2, 11538.0], [65.3, 11543.0], [65.4, 11548.0], [65.5, 11556.0], [65.6, 11562.0], [65.7, 11569.0], [65.8, 11574.0], [65.9, 11582.0], [66.0, 11586.0], [66.1, 11591.0], [66.2, 11598.0], [66.3, 11602.0], [66.4, 11611.0], [66.5, 11619.0], [66.6, 11624.0], [66.7, 11631.0], [66.8, 11637.0], [66.9, 11644.0], [67.0, 11649.0], [67.1, 11656.0], [67.2, 11663.0], [67.3, 11669.0], [67.4, 11675.0], [67.5, 11680.0], [67.6, 11686.0], [67.7, 11691.0], [67.8, 11699.0], [67.9, 11704.0], [68.0, 11707.0], [68.1, 11712.0], [68.2, 11721.0], [68.3, 11727.0], [68.4, 11732.0], [68.5, 11738.0], [68.6, 11747.0], [68.7, 11751.0], [68.8, 11762.0], [68.9, 11768.0], [69.0, 11775.0], [69.1, 11776.0], [69.2, 11779.0], [69.3, 11784.0], [69.4, 11790.0], [69.5, 11797.0], [69.6, 11806.0], [69.7, 11817.0], [69.8, 11827.0], [69.9, 11836.0], [70.0, 11848.0], [70.1, 11855.0], [70.2, 11868.0], [70.3, 11878.0], [70.4, 11891.0], [70.5, 11897.0], [70.6, 11908.0], [70.7, 11916.0], [70.8, 11928.0], [70.9, 11935.0], [71.0, 11945.0], [71.1, 11949.0], [71.2, 11960.0], [71.3, 11971.0], [71.4, 11977.0], [71.5, 11985.0], [71.6, 11993.0], [71.7, 12003.0], [71.8, 12020.0], [71.9, 12030.0], [72.0, 12032.0], [72.1, 12038.0], [72.2, 12049.0], [72.3, 12057.0], [72.4, 12065.0], [72.5, 12077.0], [72.6, 12085.0], [72.7, 12092.0], [72.8, 12102.0], [72.9, 12115.0], [73.0, 12128.0], [73.1, 12141.0], [73.2, 12151.0], [73.3, 12159.0], [73.4, 12171.0], [73.5, 12182.0], [73.6, 12190.0], [73.7, 12208.0], [73.8, 12216.0], [73.9, 12224.0], [74.0, 12237.0], [74.1, 12248.0], [74.2, 12258.0], [74.3, 12273.0], [74.4, 12278.0], [74.5, 12284.0], [74.6, 12287.0], [74.7, 12288.0], [74.8, 12290.0], [74.9, 12307.0], [75.0, 12320.0], [75.1, 12333.0], [75.2, 12345.0], [75.3, 12349.0], [75.4, 12362.0], [75.5, 12374.0], [75.6, 12382.0], [75.7, 12394.0], [75.8, 12406.0], [75.9, 12416.0], [76.0, 12429.0], [76.1, 12444.0], [76.2, 12462.0], [76.3, 12475.0], [76.4, 12485.0], [76.5, 12495.0], [76.6, 12506.0], [76.7, 12513.0], [76.8, 12522.0], [76.9, 12529.0], [77.0, 12539.0], [77.1, 12544.0], [77.2, 12544.0], [77.3, 12552.0], [77.4, 12568.0], [77.5, 12575.0], [77.6, 12585.0], [77.7, 12596.0], [77.8, 12612.0], [77.9, 12625.0], [78.0, 12633.0], [78.1, 12647.0], [78.2, 12662.0], [78.3, 12675.0], [78.4, 12686.0], [78.5, 12695.0], [78.6, 12716.0], [78.7, 12731.0], [78.8, 12745.0], [78.9, 12765.0], [79.0, 12774.0], [79.1, 12796.0], [79.2, 12800.0], [79.3, 12800.0], [79.4, 12818.0], [79.5, 12825.0], [79.6, 12845.0], [79.7, 12866.0], [79.8, 12886.0], [79.9, 12901.0], [80.0, 12911.0], [80.1, 12928.0], [80.2, 12948.0], [80.3, 12966.0], [80.4, 12977.0], [80.5, 12988.0], [80.6, 13020.0], [80.7, 13035.0], [80.8, 13053.0], [80.9, 13056.0], [81.0, 13058.0], [81.1, 13079.0], [81.2, 13096.0], [81.3, 13111.0], [81.4, 13123.0], [81.5, 13152.0], [81.6, 13165.0], [81.7, 13184.0], [81.8, 13199.0], [81.9, 13210.0], [82.0, 13217.0], [82.1, 13242.0], [82.2, 13261.0], [82.3, 13278.0], [82.4, 13281.0], [82.5, 13289.0], [82.6, 13306.0], [82.7, 13307.0], [82.8, 13308.0], [82.9, 13308.0], [83.0, 13308.0], [83.1, 13308.0], [83.2, 13308.0], [83.3, 13308.0], [83.4, 13309.0], [83.5, 13311.0], [83.6, 13311.0], [83.7, 13311.0], [83.8, 13311.0], [83.9, 13311.0], [84.0, 13311.0], [84.1, 13311.0], [84.2, 13311.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13313.0], [88.1, 13313.0], [88.2, 13314.0], [88.3, 13315.0], [88.4, 13316.0], [88.5, 13316.0], [88.6, 13316.0], [88.7, 13316.0], [88.8, 13316.0], [88.9, 13316.0], [89.0, 13320.0], [89.1, 13332.0], [89.2, 13345.0], [89.3, 13359.0], [89.4, 13371.0], [89.5, 13390.0], [89.6, 13406.0], [89.7, 13428.0], [89.8, 13450.0], [89.9, 13469.0], [90.0, 13501.0], [90.1, 13540.0], [90.2, 13553.0], [90.3, 13581.0], [90.4, 13618.0], [90.5, 13644.0], [90.6, 13672.0], [90.7, 13697.0], [90.8, 13723.0], [90.9, 13748.0], [91.0, 13790.0], [91.1, 13812.0], [91.2, 13820.0], [91.3, 13822.0], [91.4, 13823.0], [91.5, 13823.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13824.0], [92.0, 13824.0], [92.1, 13824.0], [92.2, 13825.0], [92.3, 13829.0], [92.4, 13861.0], [92.5, 13906.0], [92.6, 13953.0], [92.7, 13998.0], [92.8, 14076.0], [92.9, 14080.0], [93.0, 14082.0], [93.1, 14170.0], [93.2, 14228.0], [93.3, 14310.0], [93.4, 14332.0], [93.5, 14334.0], [93.6, 14335.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14340.0], [94.2, 14387.0], [94.3, 14481.0], [94.4, 14539.0], [94.5, 14592.0], [94.6, 14689.0], [94.7, 14772.0], [94.8, 14837.0], [94.9, 14847.0], [95.0, 14852.0], [95.1, 14947.0], [95.2, 15093.0], [95.3, 15117.0], [95.4, 15217.0], [95.5, 15327.0], [95.6, 15359.0], [95.7, 15371.0], [95.8, 15465.0], [95.9, 15558.0], [96.0, 15616.0], [96.1, 15711.0], [96.2, 15770.0], [96.3, 15866.0], [96.4, 15936.0], [96.5, 16068.0], [96.6, 16203.0], [96.7, 16346.0], [96.8, 16384.0], [96.9, 16446.0], [97.0, 16639.0], [97.1, 16809.0], [97.2, 17013.0], [97.3, 17146.0], [97.4, 17407.0], [97.5, 18305.0], [97.6, 19025.0], [97.7, 20227.0], [97.8, 26241.0], [97.9, 26368.0], [98.0, 26373.0], [98.1, 28127.0], [98.2, 28803.0], [98.3, 30410.0], [98.4, 37112.0], [98.5, 53992.0], [98.6, 70399.0], [98.7, 100508.0], [98.8, 105727.0], [98.9, 105985.0], [99.0, 106753.0], [99.1, 107356.0], [99.2, 110080.0], [99.3, 110603.0], [99.4, 122880.0], [99.5, 131261.0], [99.6, 144384.0], [99.7, 159742.0], [99.8, 161791.0], [99.9, 210940.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 21.0], [6.5, 21.0], [6.6, 25.0], [6.7, 28.0], [6.8, 30.0], [6.9, 35.0], [7.0, 37.0], [7.1, 38.0], [7.2, 98.0], [7.3, 133.0], [7.4, 390.0], [7.5, 573.0], [7.6, 622.0], [7.7, 780.0], [7.8, 886.0], [7.9, 992.0], [8.0, 1058.0], [8.1, 1175.0], [8.2, 1298.0], [8.3, 1366.0], [8.4, 1401.0], [8.5, 1448.0], [8.6, 1547.0], [8.7, 1562.0], [8.8, 1643.0], [8.9, 1957.0], [9.0, 2014.0], [9.1, 2111.0], [9.2, 2205.0], [9.3, 2372.0], [9.4, 2554.0], [9.5, 2635.0], [9.6, 3061.0], [9.7, 3166.0], [9.8, 3426.0], [9.9, 3492.0], [10.0, 3583.0], [10.1, 3670.0], [10.2, 3770.0], [10.3, 3925.0], [10.4, 3967.0], [10.5, 4926.0], [10.6, 5016.0], [10.7, 5158.0], [10.8, 5248.0], [10.9, 5368.0], [11.0, 5527.0], [11.1, 5590.0], [11.2, 5724.0], [11.3, 5988.0], [11.4, 6099.0], [11.5, 6294.0], [11.6, 6369.0], [11.7, 6518.0], [11.8, 6686.0], [11.9, 6964.0], [12.0, 7146.0], [12.1, 7162.0], [12.2, 7164.0], [12.3, 7164.0], [12.4, 7164.0], [12.5, 7164.0], [12.6, 7164.0], [12.7, 7165.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7171.0], [15.0, 7172.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7172.0], [15.4, 7172.0], [15.5, 7172.0], [15.6, 7172.0], [15.7, 7172.0], [15.8, 7226.0], [15.9, 7305.0], [16.0, 7345.0], [16.1, 7408.0], [16.2, 7416.0], [16.3, 7421.0], [16.4, 7423.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7425.0], [17.8, 7427.0], [17.9, 7428.0], [18.0, 7432.0], [18.1, 7489.0], [18.2, 7509.0], [18.3, 7570.0], [18.4, 7601.0], [18.5, 7626.0], [18.6, 7675.0], [18.7, 7676.0], [18.8, 7676.0], [18.9, 7676.0], [19.0, 7679.0], [19.1, 7679.0], [19.2, 7679.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7684.0], [20.5, 7690.0], [20.6, 7709.0], [20.7, 7718.0], [20.8, 7750.0], [20.9, 7773.0], [21.0, 7847.0], [21.1, 7932.0], [21.2, 7932.0], [21.3, 7932.0], [21.4, 7935.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7937.0], [22.9, 7940.0], [23.0, 7955.0], [23.1, 7995.0], [23.2, 8056.0], [23.3, 8098.0], [23.4, 8188.0], [23.5, 8188.0], [23.6, 8190.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8241.0], [24.4, 8323.0], [24.5, 8429.0], [24.6, 8447.0], [24.7, 8448.0], [24.8, 8448.0], [24.9, 8448.0], [25.0, 8452.0], [25.1, 8524.0], [25.2, 8551.0], [25.3, 8633.0], [25.4, 8636.0], [25.5, 8693.0], [25.6, 8699.0], [25.7, 8700.0], [25.8, 8700.0], [25.9, 8702.0], [26.0, 8703.0], [26.1, 8703.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8705.0], [27.5, 8705.0], [27.6, 8705.0], [27.7, 8707.0], [27.8, 8708.0], [27.9, 8708.0], [28.0, 8710.0], [28.1, 8716.0], [28.2, 8735.0], [28.3, 8749.0], [28.4, 8787.0], [28.5, 8816.0], [28.6, 8830.0], [28.7, 8956.0], [28.8, 8956.0], [28.9, 8958.0], [29.0, 8960.0], [29.1, 8960.0], [29.2, 8960.0], [29.3, 8960.0], [29.4, 8960.0], [29.5, 8962.0], [29.6, 8964.0], [29.7, 9032.0], [29.8, 9033.0], [29.9, 9061.0], [30.0, 9074.0], [30.1, 9115.0], [30.2, 9126.0], [30.3, 9170.0], [30.4, 9188.0], [30.5, 9211.0], [30.6, 9212.0], [30.7, 9212.0], [30.8, 9215.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9216.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9220.0], [32.2, 9220.0], [32.3, 9220.0], [32.4, 9220.0], [32.5, 9221.0], [32.6, 9227.0], [32.7, 9259.0], [32.8, 9275.0], [32.9, 9345.0], [33.0, 9381.0], [33.1, 9426.0], [33.2, 9443.0], [33.3, 9468.0], [33.4, 9472.0], [33.5, 9476.0], [33.6, 9481.0], [33.7, 9511.0], [33.8, 9551.0], [33.9, 9586.0], [34.0, 9612.0], [34.1, 9627.0], [34.2, 9661.0], [34.3, 9665.0], [34.4, 9672.0], [34.5, 9700.0], [34.6, 9711.0], [34.7, 9718.0], [34.8, 9727.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9728.0], [35.4, 9728.0], [35.5, 9728.0], [35.6, 9728.0], [35.7, 9732.0], [35.8, 9732.0], [35.9, 9732.0], [36.0, 9732.0], [36.1, 9737.0], [36.2, 9764.0], [36.3, 9782.0], [36.4, 9790.0], [36.5, 9803.0], [36.6, 9822.0], [36.7, 9824.0], [36.8, 9856.0], [36.9, 9866.0], [37.0, 9891.0], [37.1, 9907.0], [37.2, 9938.0], [37.3, 9962.0], [37.4, 9979.0], [37.5, 9981.0], [37.6, 9983.0], [37.7, 9983.0], [37.8, 9984.0], [37.9, 9984.0], [38.0, 9984.0], [38.1, 9984.0], [38.2, 9984.0], [38.3, 9984.0], [38.4, 9985.0], [38.5, 9987.0], [38.6, 9988.0], [38.7, 9988.0], [38.8, 9992.0], [38.9, 10019.0], [39.0, 10022.0], [39.1, 10049.0], [39.2, 10074.0], [39.3, 10113.0], [39.4, 10145.0], [39.5, 10155.0], [39.6, 10202.0], [39.7, 10221.0], [39.8, 10229.0], [39.9, 10236.0], [40.0, 10236.0], [40.1, 10238.0], [40.2, 10239.0], [40.3, 10239.0], [40.4, 10239.0], [40.5, 10240.0], [40.6, 10240.0], [40.7, 10240.0], [40.8, 10240.0], [40.9, 10240.0], [41.0, 10240.0], [41.1, 10240.0], [41.2, 10240.0], [41.3, 10242.0], [41.4, 10244.0], [41.5, 10244.0], [41.6, 10287.0], [41.7, 10301.0], [41.8, 10337.0], [41.9, 10422.0], [42.0, 10495.0], [42.1, 10504.0], [42.2, 10577.0], [42.3, 10592.0], [42.4, 10609.0], [42.5, 10623.0], [42.6, 10631.0], [42.7, 10682.0], [42.8, 10706.0], [42.9, 10713.0], [43.0, 10726.0], [43.1, 10727.0], [43.2, 10748.0], [43.3, 10748.0], [43.4, 10748.0], [43.5, 10751.0], [43.6, 10752.0], [43.7, 10752.0], [43.8, 10752.0], [43.9, 10752.0], [44.0, 10755.0], [44.1, 10814.0], [44.2, 10860.0], [44.3, 10885.0], [44.4, 10938.0], [44.5, 10999.0], [44.6, 11008.0], [44.7, 11008.0], [44.8, 11011.0], [44.9, 11029.0], [45.0, 11155.0], [45.1, 11260.0], [45.2, 11263.0], [45.3, 11263.0], [45.4, 11264.0], [45.5, 11264.0], [45.6, 11264.0], [45.7, 11268.0], [45.8, 11323.0], [45.9, 11350.0], [46.0, 11461.0], [46.1, 11488.0], [46.2, 11506.0], [46.3, 11516.0], [46.4, 11516.0], [46.5, 11519.0], [46.6, 11520.0], [46.7, 11520.0], [46.8, 11520.0], [46.9, 11520.0], [47.0, 11520.0], [47.1, 11520.0], [47.2, 11524.0], [47.3, 11533.0], [47.4, 11538.0], [47.5, 11613.0], [47.6, 11695.0], [47.7, 11718.0], [47.8, 11725.0], [47.9, 11772.0], [48.0, 11774.0], [48.1, 11776.0], [48.2, 11776.0], [48.3, 11776.0], [48.4, 11776.0], [48.5, 11776.0], [48.6, 11776.0], [48.7, 11779.0], [48.8, 11812.0], [48.9, 11818.0], [49.0, 11880.0], [49.1, 11950.0], [49.2, 12004.0], [49.3, 12032.0], [49.4, 12109.0], [49.5, 12287.0], [49.6, 12288.0], [49.7, 12288.0], [49.8, 12288.0], [49.9, 12288.0], [50.0, 12288.0], [50.1, 12303.0], [50.2, 12330.0], [50.3, 12421.0], [50.4, 12431.0], [50.5, 12473.0], [50.6, 12489.0], [50.7, 12509.0], [50.8, 12528.0], [50.9, 12540.0], [51.0, 12543.0], [51.1, 12544.0], [51.2, 12546.0], [51.3, 12548.0], [51.4, 12606.0], [51.5, 12650.0], [51.6, 12658.0], [51.7, 12746.0], [51.8, 12773.0], [51.9, 12798.0], [52.0, 12799.0], [52.1, 12800.0], [52.2, 12800.0], [52.3, 12800.0], [52.4, 12800.0], [52.5, 12800.0], [52.6, 12800.0], [52.7, 12885.0], [52.8, 12927.0], [52.9, 13012.0], [53.0, 13038.0], [53.1, 13056.0], [53.2, 13057.0], [53.3, 13060.0], [53.4, 13061.0], [53.5, 13123.0], [53.6, 13164.0], [53.7, 13177.0], [53.8, 13179.0], [53.9, 13201.0], [54.0, 13208.0], [54.1, 13217.0], [54.2, 13225.0], [54.3, 13228.0], [54.4, 13240.0], [54.5, 13251.0], [54.6, 13256.0], [54.7, 13264.0], [54.8, 13275.0], [54.9, 13278.0], [55.0, 13284.0], [55.1, 13291.0], [55.2, 13303.0], [55.3, 13307.0], [55.4, 13307.0], [55.5, 13307.0], [55.6, 13307.0], [55.7, 13308.0], [55.8, 13308.0], [55.9, 13308.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13309.0], [57.1, 13309.0], [57.2, 13310.0], [57.3, 13310.0], [57.4, 13310.0], [57.5, 13310.0], [57.6, 13310.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13312.0], [59.8, 13312.0], [59.9, 13312.0], [60.0, 13312.0], [60.1, 13312.0], [60.2, 13312.0], [60.3, 13312.0], [60.4, 13312.0], [60.5, 13312.0], [60.6, 13312.0], [60.7, 13312.0], [60.8, 13312.0], [60.9, 13312.0], [61.0, 13312.0], [61.1, 13312.0], [61.2, 13312.0], [61.3, 13312.0], [61.4, 13312.0], [61.5, 13312.0], [61.6, 13312.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13313.0], [70.4, 13313.0], [70.5, 13313.0], [70.6, 13313.0], [70.7, 13313.0], [70.8, 13313.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13314.0], [71.7, 13314.0], [71.8, 13315.0], [71.9, 13315.0], [72.0, 13315.0], [72.1, 13316.0], [72.2, 13316.0], [72.3, 13316.0], [72.4, 13316.0], [72.5, 13316.0], [72.6, 13316.0], [72.7, 13316.0], [72.8, 13316.0], [72.9, 13316.0], [73.0, 13316.0], [73.1, 13316.0], [73.2, 13317.0], [73.3, 13318.0], [73.4, 13323.0], [73.5, 13326.0], [73.6, 13330.0], [73.7, 13333.0], [73.8, 13336.0], [73.9, 13344.0], [74.0, 13348.0], [74.1, 13350.0], [74.2, 13360.0], [74.3, 13369.0], [74.4, 13374.0], [74.5, 13374.0], [74.6, 13379.0], [74.7, 13387.0], [74.8, 13393.0], [74.9, 13396.0], [75.0, 13404.0], [75.1, 13410.0], [75.2, 13415.0], [75.3, 13417.0], [75.4, 13428.0], [75.5, 13472.0], [75.6, 13506.0], [75.7, 13512.0], [75.8, 13527.0], [75.9, 13568.0], [76.0, 13696.0], [76.1, 13741.0], [76.2, 13815.0], [76.3, 13820.0], [76.4, 13820.0], [76.5, 13820.0], [76.6, 13820.0], [76.7, 13820.0], [76.8, 13821.0], [76.9, 13822.0], [77.0, 13822.0], [77.1, 13823.0], [77.2, 13823.0], [77.3, 13823.0], [77.4, 13823.0], [77.5, 13823.0], [77.6, 13824.0], [77.7, 13824.0], [77.8, 13824.0], [77.9, 13824.0], [78.0, 13824.0], [78.1, 13824.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13825.0], [80.2, 13825.0], [80.3, 13825.0], [80.4, 13827.0], [80.5, 13828.0], [80.6, 13828.0], [80.7, 13836.0], [80.8, 13875.0], [80.9, 13884.0], [81.0, 13935.0], [81.1, 13994.0], [81.2, 14060.0], [81.3, 14076.0], [81.4, 14080.0], [81.5, 14081.0], [81.6, 14106.0], [81.7, 14205.0], [81.8, 14331.0], [81.9, 14332.0], [82.0, 14334.0], [82.1, 14335.0], [82.2, 14335.0], [82.3, 14335.0], [82.4, 14335.0], [82.5, 14335.0], [82.6, 14335.0], [82.7, 14335.0], [82.8, 14335.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14336.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14337.0], [84.0, 14339.0], [84.1, 14340.0], [84.2, 14365.0], [84.3, 14458.0], [84.4, 14550.0], [84.5, 14592.0], [84.6, 14592.0], [84.7, 14592.0], [84.8, 14592.0], [84.9, 14592.0], [85.0, 14592.0], [85.1, 14846.0], [85.2, 14847.0], [85.3, 14847.0], [85.4, 14848.0], [85.5, 14848.0], [85.6, 14848.0], [85.7, 15103.0], [85.8, 15104.0], [85.9, 15243.0], [86.0, 15354.0], [86.1, 15360.0], [86.2, 15360.0], [86.3, 15360.0], [86.4, 15360.0], [86.5, 15573.0], [86.6, 15615.0], [86.7, 15616.0], [86.8, 15868.0], [86.9, 15978.0], [87.0, 16029.0], [87.1, 16339.0], [87.2, 16379.0], [87.3, 16380.0], [87.4, 16381.0], [87.5, 16383.0], [87.6, 16384.0], [87.7, 16384.0], [87.8, 16384.0], [87.9, 16385.0], [88.0, 16706.0], [88.1, 16844.0], [88.2, 17152.0], [88.3, 17407.0], [88.4, 17408.0], [88.5, 18143.0], [88.6, 18179.0], [88.7, 18634.0], [88.8, 18688.0], [88.9, 18805.0], [89.0, 19200.0], [89.1, 19968.0], [89.2, 19968.0], [89.3, 20220.0], [89.4, 20612.0], [89.5, 21760.0], [89.6, 23808.0], [89.7, 24558.0], [89.8, 26314.0], [89.9, 26364.0], [90.0, 26368.0], [90.1, 26368.0], [90.2, 26368.0], [90.3, 26372.0], [90.4, 27450.0], [90.5, 27654.0], [90.6, 27688.0], [90.7, 28176.0], [90.8, 28676.0], [90.9, 29242.0], [91.0, 32902.0], [91.1, 33054.0], [91.2, 34956.0], [91.3, 36701.0], [91.4, 49938.0], [91.5, 52246.0], [91.6, 52668.0], [91.7, 53278.0], [91.8, 53331.0], [91.9, 53715.0], [92.0, 56595.0], [92.1, 62571.0], [92.2, 63386.0], [92.3, 70371.0], [92.4, 70404.0], [92.5, 78128.0], [92.6, 86753.0], [92.7, 99072.0], [92.8, 105369.0], [92.9, 105472.0], [93.0, 105472.0], [93.1, 105531.0], [93.2, 105626.0], [93.3, 105703.0], [93.4, 105728.0], [93.5, 105728.0], [93.6, 105729.0], [93.7, 105853.0], [93.8, 105905.0], [93.9, 105993.0], [94.0, 106053.0], [94.1, 106147.0], [94.2, 106230.0], [94.3, 106331.0], [94.4, 106431.0], [94.5, 106479.0], [94.6, 106661.0], [94.7, 106746.0], [94.8, 106753.0], [94.9, 106753.0], [95.0, 106753.0], [95.1, 106849.0], [95.2, 106902.0], [95.3, 107000.0], [95.4, 107009.0], [95.5, 107101.0], [95.6, 107151.0], [95.7, 107235.0], [95.8, 107247.0], [95.9, 107263.0], [96.0, 107264.0], [96.1, 109056.0], [96.2, 109824.0], [96.3, 110080.0], [96.4, 110080.0], [96.5, 110590.0], [96.6, 110591.0], [96.7, 110592.0], [96.8, 110593.0], [96.9, 110805.0], [97.0, 113147.0], [97.1, 116051.0], [97.2, 116224.0], [97.3, 118619.0], [97.4, 119040.0], [97.5, 119040.0], [97.6, 123100.0], [97.7, 123139.0], [97.8, 123396.0], [97.9, 124159.0], [98.0, 124953.0], [98.1, 126208.0], [98.2, 126761.0], [98.3, 127232.0], [98.4, 146053.0], [98.5, 147456.0], [98.6, 147457.0], [98.7, 148996.0], [98.8, 154816.0], [98.9, 161023.0], [99.0, 161024.0], [99.1, 161791.0], [99.2, 177663.0], [99.3, 209920.0], [99.4, 210940.0], [99.5, 210941.0], [99.6, 210943.0], [99.7, 210945.0], [99.8, 211200.0], [99.9, 213504.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 684.0, "series": [{"data": [[0.0, 147.0], [146400.0, 1.0], [148900.0, 1.0], [161700.0, 2.0], [105900.0, 1.0], [106700.0, 4.0], [161000.0, 6.0], [210600.0, 3.0], [34500.0, 1.0], [144300.0, 1.0], [53300.0, 1.0], [62900.0, 1.0], [64500.0, 2.0], [70600.0, 1.0], [109000.0, 2.0], [109800.0, 2.0], [500.0, 2.0], [600.0, 4.0], [154800.0, 1.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 1.0], [1300.0, 3.0], [1500.0, 3.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 3.0], [2000.0, 5.0], [2100.0, 5.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 3.0], [2500.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3500.0, 2.0], [3800.0, 1.0], [3900.0, 2.0], [4000.0, 4.0], [4100.0, 1.0], [4200.0, 4.0], [4300.0, 2.0], [4500.0, 1.0], [4400.0, 3.0], [4700.0, 1.0], [4900.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5800.0, 3.0], [6100.0, 2.0], [6000.0, 1.0], [5900.0, 1.0], [6200.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [105700.0, 6.0], [6900.0, 3.0], [6700.0, 1.0], [110500.0, 9.0], [7100.0, 51.0], [7000.0, 2.0], [7200.0, 1.0], [7400.0, 27.0], [7300.0, 1.0], [118500.0, 1.0], [7600.0, 47.0], [7700.0, 3.0], [7800.0, 1.0], [7900.0, 48.0], [124100.0, 3.0], [8000.0, 2.0], [8100.0, 20.0], [8300.0, 1.0], [8400.0, 20.0], [8700.0, 49.0], [8200.0, 2.0], [8600.0, 1.0], [132600.0, 1.0], [9200.0, 48.0], [8800.0, 1.0], [9000.0, 3.0], [9100.0, 7.0], [8900.0, 12.0], [9300.0, 3.0], [9500.0, 1.0], [9600.0, 3.0], [9700.0, 21.0], [9400.0, 12.0], [9900.0, 37.0], [10200.0, 37.0], [10000.0, 4.0], [10100.0, 7.0], [9800.0, 7.0], [10500.0, 10.0], [10700.0, 22.0], [10600.0, 14.0], [10300.0, 8.0], [10400.0, 10.0], [11100.0, 18.0], [11000.0, 29.0], [10800.0, 6.0], [11200.0, 26.0], [10900.0, 8.0], [11300.0, 7.0], [11500.0, 26.0], [11400.0, 7.0], [11700.0, 24.0], [11600.0, 6.0], [12000.0, 13.0], [12200.0, 15.0], [12100.0, 6.0], [11900.0, 8.0], [11800.0, 4.0], [12300.0, 3.0], [12400.0, 5.0], [12500.0, 15.0], [12700.0, 8.0], [12600.0, 4.0], [13300.0, 463.0], [12900.0, 3.0], [13200.0, 4.0], [12800.0, 15.0], [13100.0, 3.0], [13000.0, 11.0], [13500.0, 8.0], [13400.0, 2.0], [13800.0, 81.0], [13700.0, 1.0], [13600.0, 2.0], [14100.0, 2.0], [14000.0, 15.0], [14200.0, 2.0], [13900.0, 1.0], [14300.0, 55.0], [14700.0, 4.0], [14800.0, 8.0], [14500.0, 5.0], [14600.0, 1.0], [15200.0, 3.0], [15300.0, 13.0], [15100.0, 3.0], [14900.0, 1.0], [15800.0, 2.0], [15600.0, 6.0], [15700.0, 1.0], [16300.0, 13.0], [17200.0, 1.0], [16800.0, 2.0], [17400.0, 1.0], [18400.0, 1.0], [18000.0, 1.0], [18800.0, 1.0], [20200.0, 3.0], [23800.0, 2.0], [26600.0, 6.0], [26400.0, 1.0], [27600.0, 1.0], [27400.0, 2.0], [28400.0, 2.0], [28600.0, 2.0], [28200.0, 1.0], [29600.0, 1.0], [34800.0, 3.0], [35200.0, 1.0], [53200.0, 1.0], [213500.0, 4.0], [70400.0, 1.0], [106400.0, 1.0], [107200.0, 6.0], [127200.0, 1.0], [211200.0, 1.0], [70300.0, 1.0], [122300.0, 1.0], [151500.0, 1.0], [99000.0, 1.0], [106200.0, 2.0], [105400.0, 7.0], [107000.0, 1.0], [119000.0, 3.0], [159700.0, 1.0], [210900.0, 1.0], [108500.0, 1.0], [17100.0, 2.0], [17300.0, 1.0], [16900.0, 1.0], [17900.0, 1.0], [18700.0, 2.0], [19900.0, 2.0], [20500.0, 1.0], [22700.0, 1.0], [24500.0, 1.0], [26300.0, 10.0], [27300.0, 2.0], [28100.0, 2.0], [27700.0, 1.0], [28900.0, 1.0], [29100.0, 1.0], [29700.0, 1.0], [34600.0, 1.0], [53800.0, 1.0], [63400.0, 2.0], [110000.0, 3.0], [110800.0, 2.0], [122800.0, 5.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 278.0], [146400.0, 1.0], [148900.0, 3.0], [161700.0, 3.0], [105900.0, 3.0], [106700.0, 7.0], [161000.0, 7.0], [210600.0, 2.0], [131500.0, 2.0], [36100.0, 1.0], [144300.0, 3.0], [209900.0, 2.0], [54900.0, 1.0], [62900.0, 1.0], [64500.0, 1.0], [95400.0, 1.0], [105800.0, 1.0], [109000.0, 1.0], [109800.0, 3.0], [110600.0, 1.0], [500.0, 9.0], [600.0, 33.0], [154800.0, 1.0], [700.0, 46.0], [800.0, 42.0], [900.0, 32.0], [1000.0, 21.0], [1100.0, 16.0], [1200.0, 30.0], [1300.0, 22.0], [1400.0, 24.0], [1500.0, 19.0], [1600.0, 36.0], [1700.0, 32.0], [1800.0, 31.0], [1900.0, 36.0], [2000.0, 58.0], [2100.0, 54.0], [138100.0, 1.0], [2300.0, 32.0], [2200.0, 45.0], [146100.0, 1.0], [2400.0, 26.0], [2500.0, 27.0], [2600.0, 33.0], [2800.0, 31.0], [2700.0, 28.0], [2900.0, 21.0], [3000.0, 22.0], [3100.0, 18.0], [3200.0, 21.0], [3300.0, 19.0], [3400.0, 13.0], [3500.0, 16.0], [3700.0, 17.0], [3600.0, 13.0], [3800.0, 19.0], [3900.0, 15.0], [4000.0, 24.0], [4100.0, 28.0], [4200.0, 23.0], [4300.0, 21.0], [4500.0, 22.0], [4600.0, 18.0], [4400.0, 36.0], [4800.0, 16.0], [4700.0, 7.0], [5000.0, 5.0], [4900.0, 9.0], [5100.0, 7.0], [5200.0, 4.0], [5300.0, 2.0], [5400.0, 10.0], [5500.0, 10.0], [5600.0, 11.0], [5700.0, 19.0], [5800.0, 18.0], [5900.0, 17.0], [6000.0, 25.0], [6100.0, 31.0], [6300.0, 16.0], [6200.0, 27.0], [6600.0, 13.0], [6500.0, 14.0], [6400.0, 15.0], [105700.0, 9.0], [6800.0, 13.0], [6700.0, 10.0], [6900.0, 10.0], [110500.0, 8.0], [107300.0, 1.0], [7000.0, 12.0], [7100.0, 114.0], [7200.0, 28.0], [7300.0, 16.0], [7400.0, 57.0], [7600.0, 76.0], [7500.0, 12.0], [7700.0, 10.0], [7900.0, 70.0], [7800.0, 16.0], [125700.0, 1.0], [124900.0, 1.0], [124100.0, 2.0], [8000.0, 9.0], [8100.0, 36.0], [8700.0, 83.0], [8500.0, 21.0], [8300.0, 30.0], [8400.0, 29.0], [8600.0, 12.0], [8200.0, 31.0], [132600.0, 1.0], [139000.0, 1.0], [8900.0, 41.0], [9200.0, 90.0], [8800.0, 17.0], [9000.0, 31.0], [9100.0, 33.0], [9400.0, 61.0], [9600.0, 74.0], [9500.0, 64.0], [9700.0, 101.0], [9300.0, 49.0], [10100.0, 155.0], [9800.0, 88.0], [10000.0, 132.0], [9900.0, 121.0], [10200.0, 180.0], [10400.0, 209.0], [10500.0, 233.0], [10600.0, 229.0], [10300.0, 172.0], [10700.0, 228.0], [10800.0, 204.0], [11000.0, 272.0], [10900.0, 226.0], [11100.0, 222.0], [11200.0, 230.0], [11500.0, 215.0], [11600.0, 152.0], [11300.0, 217.0], [11400.0, 211.0], [11700.0, 171.0], [12100.0, 83.0], [11900.0, 111.0], [11800.0, 94.0], [12000.0, 113.0], [12200.0, 118.0], [12400.0, 81.0], [12600.0, 79.0], [12300.0, 87.0], [12700.0, 60.0], [12500.0, 112.0], [13000.0, 67.0], [12800.0, 74.0], [13100.0, 57.0], [12900.0, 64.0], [13200.0, 75.0], [13300.0, 684.0], [13400.0, 42.0], [13800.0, 142.0], [13500.0, 33.0], [13600.0, 37.0], [13700.0, 31.0], [14200.0, 13.0], [13900.0, 22.0], [14000.0, 34.0], [14300.0, 89.0], [14100.0, 11.0], [14800.0, 31.0], [14700.0, 12.0], [14500.0, 17.0], [14400.0, 14.0], [14600.0, 8.0], [15000.0, 8.0], [15200.0, 12.0], [14900.0, 8.0], [15300.0, 25.0], [15100.0, 15.0], [15800.0, 13.0], [15500.0, 12.0], [15400.0, 8.0], [15700.0, 14.0], [15600.0, 14.0], [16000.0, 6.0], [15900.0, 9.0], [16200.0, 8.0], [16300.0, 19.0], [16100.0, 8.0], [17400.0, 11.0], [16800.0, 5.0], [16600.0, 7.0], [17000.0, 6.0], [16400.0, 4.0], [17200.0, 1.0], [18000.0, 1.0], [18400.0, 2.0], [19200.0, 4.0], [18600.0, 3.0], [19000.0, 1.0], [20200.0, 3.0], [20400.0, 1.0], [21400.0, 1.0], [23800.0, 1.0], [24800.0, 1.0], [26200.0, 3.0], [26600.0, 6.0], [26400.0, 1.0], [25800.0, 1.0], [28000.0, 1.0], [28400.0, 3.0], [28200.0, 2.0], [29600.0, 1.0], [28800.0, 1.0], [29200.0, 1.0], [29800.0, 1.0], [30600.0, 1.0], [30200.0, 1.0], [30400.0, 1.0], [31600.0, 1.0], [34800.0, 3.0], [34000.0, 1.0], [35200.0, 1.0], [154300.0, 1.0], [47600.0, 1.0], [53200.0, 3.0], [213500.0, 3.0], [64000.0, 1.0], [70400.0, 2.0], [96000.0, 2.0], [105600.0, 2.0], [106400.0, 2.0], [107200.0, 3.0], [131200.0, 1.0], [177600.0, 3.0], [70300.0, 1.0], [106300.0, 2.0], [122300.0, 2.0], [123100.0, 1.0], [141000.0, 1.0], [147400.0, 1.0], [35900.0, 1.0], [37100.0, 1.0], [53900.0, 2.0], [99000.0, 3.0], [106200.0, 1.0], [105400.0, 5.0], [107000.0, 2.0], [118200.0, 1.0], [119000.0, 2.0], [126200.0, 2.0], [131600.0, 1.0], [163600.0, 1.0], [159700.0, 2.0], [210900.0, 7.0], [70100.0, 1.0], [100500.0, 1.0], [106900.0, 1.0], [108500.0, 2.0], [110900.0, 1.0], [120500.0, 1.0], [126900.0, 1.0], [17100.0, 10.0], [16500.0, 5.0], [16700.0, 5.0], [16900.0, 4.0], [17500.0, 2.0], [18300.0, 1.0], [18700.0, 2.0], [18500.0, 1.0], [18900.0, 1.0], [19100.0, 1.0], [19500.0, 1.0], [21500.0, 1.0], [21700.0, 1.0], [24500.0, 1.0], [24900.0, 1.0], [26300.0, 18.0], [27300.0, 1.0], [28100.0, 2.0], [28500.0, 1.0], [28700.0, 1.0], [29100.0, 2.0], [29700.0, 3.0], [42200.0, 1.0], [53000.0, 1.0], [52200.0, 2.0], [63400.0, 2.0], [65400.0, 1.0], [98000.0, 1.0], [107600.0, 1.0], [110000.0, 4.0], [122800.0, 4.0]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[0.0, 146.0], [146400.0, 1.0], [148900.0, 2.0], [161700.0, 2.0], [86700.0, 1.0], [105900.0, 3.0], [106700.0, 8.0], [113100.0, 1.0], [120300.0, 1.0], [126700.0, 1.0], [161000.0, 5.0], [210600.0, 1.0], [100.0, 3.0], [32900.0, 2.0], [34900.0, 1.0], [39300.0, 1.0], [52500.0, 1.0], [209900.0, 2.0], [53300.0, 2.0], [53700.0, 1.0], [56500.0, 1.0], [63300.0, 1.0], [62500.0, 1.0], [62900.0, 1.0], [300.0, 1.0], [400.0, 1.0], [105800.0, 3.0], [106600.0, 3.0], [109000.0, 2.0], [109800.0, 2.0], [118600.0, 1.0], [116200.0, 2.0], [500.0, 2.0], [600.0, 2.0], [154800.0, 1.0], [700.0, 1.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 2.0], [1100.0, 3.0], [1200.0, 1.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 1.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 2.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 1.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 1.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 1.0], [3700.0, 2.0], [3600.0, 2.0], [3800.0, 1.0], [3900.0, 3.0], [4800.0, 1.0], [5000.0, 2.0], [4900.0, 3.0], [5100.0, 2.0], [5300.0, 2.0], [5200.0, 1.0], [5500.0, 4.0], [5400.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [6000.0, 2.0], [5900.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 1.0], [6500.0, 2.0], [105700.0, 7.0], [6700.0, 1.0], [6900.0, 1.0], [110500.0, 9.0], [7100.0, 77.0], [7000.0, 1.0], [7400.0, 42.0], [7300.0, 5.0], [118500.0, 1.0], [7200.0, 1.0], [7600.0, 43.0], [7500.0, 4.0], [7700.0, 8.0], [7900.0, 41.0], [7800.0, 4.0], [123300.0, 3.0], [124900.0, 1.0], [124100.0, 2.0], [8000.0, 4.0], [8100.0, 19.0], [8700.0, 57.0], [8400.0, 13.0], [8500.0, 3.0], [8600.0, 8.0], [8300.0, 1.0], [8200.0, 2.0], [9000.0, 7.0], [8800.0, 4.0], [9200.0, 49.0], [9100.0, 8.0], [8900.0, 21.0], [9300.0, 5.0], [9700.0, 39.0], [9600.0, 11.0], [9400.0, 11.0], [9500.0, 6.0], [9800.0, 13.0], [9900.0, 36.0], [10200.0, 43.0], [10000.0, 9.0], [10100.0, 5.0], [10500.0, 7.0], [10400.0, 5.0], [10600.0, 7.0], [10700.0, 26.0], [10300.0, 3.0], [10900.0, 3.0], [11200.0, 14.0], [10800.0, 7.0], [11000.0, 9.0], [11100.0, 2.0], [11700.0, 22.0], [11300.0, 3.0], [11500.0, 27.0], [11400.0, 5.0], [11600.0, 4.0], [11800.0, 5.0], [11900.0, 3.0], [12000.0, 4.0], [12200.0, 12.0], [12100.0, 2.0], [12600.0, 6.0], [12700.0, 8.0], [12400.0, 8.0], [12500.0, 14.0], [12300.0, 4.0], [13100.0, 8.0], [13200.0, 25.0], [13300.0, 401.0], [12900.0, 3.0], [13000.0, 12.0], [12800.0, 14.0], [13600.0, 2.0], [13800.0, 96.0], [13400.0, 12.0], [13700.0, 3.0], [13500.0, 7.0], [13900.0, 4.0], [14100.0, 2.0], [14000.0, 9.0], [14300.0, 50.0], [14200.0, 2.0], [14800.0, 12.0], [14500.0, 13.0], [14400.0, 3.0], [15300.0, 11.0], [15100.0, 3.0], [14900.0, 1.0], [15200.0, 2.0], [15800.0, 2.0], [15600.0, 5.0], [15500.0, 1.0], [16300.0, 18.0], [15900.0, 1.0], [16000.0, 2.0], [16800.0, 2.0], [17400.0, 3.0], [18200.0, 1.0], [18600.0, 4.0], [19200.0, 1.0], [18800.0, 1.0], [20200.0, 2.0], [21000.0, 1.0], [20600.0, 1.0], [24200.0, 1.0], [23800.0, 1.0], [25800.0, 1.0], [27400.0, 1.0], [27600.0, 3.0], [28600.0, 2.0], [29200.0, 1.0], [52000.0, 1.0], [53200.0, 3.0], [213500.0, 4.0], [64000.0, 1.0], [70400.0, 2.0], [106400.0, 3.0], [105600.0, 3.0], [107200.0, 7.0], [108000.0, 1.0], [115200.0, 1.0], [116000.0, 1.0], [127200.0, 2.0], [177600.0, 1.0], [211200.0, 1.0], [70300.0, 1.0], [79100.0, 1.0], [95900.0, 1.0], [106300.0, 2.0], [105500.0, 2.0], [107100.0, 4.0], [123100.0, 3.0], [147400.0, 3.0], [36700.0, 1.0], [151500.0, 1.0], [49900.0, 1.0], [99000.0, 2.0], [106200.0, 2.0], [105400.0, 3.0], [107000.0, 4.0], [119000.0, 4.0], [126200.0, 3.0], [146000.0, 1.0], [138900.0, 1.0], [210900.0, 8.0], [78100.0, 1.0], [106100.0, 2.0], [105300.0, 2.0], [106900.0, 2.0], [110900.0, 1.0], [16500.0, 1.0], [16700.0, 2.0], [17100.0, 2.0], [17700.0, 1.0], [18100.0, 3.0], [18900.0, 1.0], [20300.0, 1.0], [19900.0, 4.0], [21700.0, 2.0], [24500.0, 1.0], [23700.0, 1.0], [26300.0, 12.0], [27500.0, 1.0], [28500.0, 1.0], [27700.0, 1.0], [28100.0, 1.0], [29300.0, 1.0], [33000.0, 1.0], [33400.0, 1.0], [35800.0, 1.0], [52200.0, 1.0], [52600.0, 1.0], [54200.0, 1.0], [56600.0, 1.0], [78000.0, 1.0], [106000.0, 3.0], [106800.0, 3.0], [110000.0, 3.0], [110800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 213500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7832.0, "series": [{"data": [[1.0, 311.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5550.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7832.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 31.78935185185183, "minX": 1.53928806E12, "maxY": 500.0, "series": [{"data": [[1.53928812E12, 84.35287730727472], [1.53928872E12, 42.26388888888891], [1.5392883E12, 269.2101522842632], [1.53928824E12, 205.08222811671106], [1.5392886E12, 500.0], [1.53928842E12, 385.87056128293256], [1.53928866E12, 345.9728813559324], [1.53928836E12, 327.37811550151974], [1.53928806E12, 31.78935185185183], [1.53928854E12, 495.2463170300532], [1.53928848E12, 445.528180354268], [1.53928818E12, 145.09796437659026]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928872E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 211200.0, "series": [{"data": [[4.0, 1388.5], [5.0, 1506.0], [6.0, 27.0], [7.0, 605.0], [8.0, 1327.0], [12.0, 2179.6666666666665], [14.0, 1882.5], [16.0, 1695.0], [17.0, 621.0], [18.0, 1390.0], [20.0, 938.0], [21.0, 1023.0], [23.0, 984.0], [24.0, 2991.0], [25.0, 1169.0], [26.0, 141130.33333333334], [27.0, 750.0], [28.0, 1398.0], [30.0, 1821.0], [31.0, 2082.0], [32.0, 1723.0], [33.0, 1543.0], [34.0, 1666.0], [36.0, 1516.0], [37.0, 1737.0], [38.0, 4536.0], [39.0, 2267.0], [40.0, 1853.0], [42.0, 1814.0], [43.0, 2229.0], [44.0, 4062.0], [45.0, 2846.5], [46.0, 2105.0], [47.0, 2123.0], [48.0, 138326.85714285716], [49.0, 2229.0], [50.0, 2390.0], [51.0, 2094.0], [53.0, 2571.0], [54.0, 2409.0], [55.0, 161791.0], [56.0, 4170.0], [58.0, 3897.0], [59.0, 3231.0], [60.0, 3076.0], [62.0, 78907.75], [63.0, 3169.0], [64.0, 3274.0], [66.0, 4056.0], [69.0, 5022.333333333333], [71.0, 4472.0], [68.0, 146432.0], [72.0, 74100.0], [73.0, 3913.0], [75.0, 4665.5], [76.0, 65858.5], [77.0, 4212.0], [79.0, 4449.0], [80.0, 4275.5], [82.0, 4115.0], [85.0, 5862.0], [87.0, 6492.0], [88.0, 172224.8], [89.0, 6576.0], [90.0, 211200.0], [92.0, 7724.0], [93.0, 6403.0], [95.0, 6206.0], [94.0, 53887.0], [96.0, 8308.0], [97.0, 6713.0], [99.0, 8447.0], [100.0, 6681.5], [101.0, 7596.5], [102.0, 5830.0], [103.0, 5582.0], [105.0, 5693.0], [106.0, 6384.0], [107.0, 6128.0], [109.0, 6807.0], [111.0, 7746.0], [112.0, 7456.0], [113.0, 6933.0], [115.0, 8066.0], [116.0, 7310.0], [117.0, 7049.0], [119.0, 106752.66666666667], [120.0, 8876.0], [121.0, 8722.0], [122.0, 8685.5], [123.0, 8154.0], [124.0, 8412.0], [127.0, 9088.0], [128.0, 7845.0], [129.0, 7786.0], [131.0, 9127.0], [132.0, 9312.0], [135.0, 10140.0], [136.0, 16189.666666666668], [138.0, 9200.5], [139.0, 8198.0], [141.0, 9165.0], [143.0, 9174.5], [144.0, 9185.0], [146.0, 9168.0], [147.0, 15042.5], [148.0, 10535.0], [149.0, 10792.0], [151.0, 11316.5], [150.0, 27705.0], [145.0, 29176.0], [152.0, 10893.0], [154.0, 10657.0], [155.0, 11160.0], [157.0, 19442.5], [158.0, 11203.0], [159.0, 19393.0], [161.0, 11197.0], [162.0, 11578.0], [163.0, 18822.5], [164.0, 16764.666666666668], [165.0, 10203.0], [167.0, 10658.0], [170.0, 10862.0], [175.0, 11272.0], [169.0, 18811.0], [176.0, 11442.0], [180.0, 13553.0], [188.0, 11248.0], [191.0, 14172.0], [194.0, 13086.5], [195.0, 12187.0], [196.0, 12241.5], [197.0, 10077.0], [193.0, 14056.0], [203.0, 10702.0], [206.0, 11262.0], [205.0, 15218.0], [204.0, 14979.0], [200.0, 14596.0], [212.0, 23800.0], [211.0, 34568.0], [209.0, 34635.0], [223.0, 14146.0], [220.0, 14604.0], [216.0, 35253.0], [226.0, 13624.0], [229.0, 12256.0], [233.0, 14020.0], [235.0, 12255.0], [238.0, 11750.0], [239.0, 11189.0], [236.0, 15795.0], [240.0, 11393.0], [245.0, 11500.0], [246.0, 12554.0], [247.0, 11227.0], [244.0, 12603.0], [242.0, 12719.0], [248.0, 2.0], [251.0, 11645.5], [254.0, 12524.5], [268.0, 10674.0], [256.0, 12361.0], [259.0, 9217.0], [261.0, 12487.0], [263.0, 7936.0], [265.0, 9349.5], [267.0, 13311.0], [269.0, 17648.333333333332], [271.0, 10563.333333333332], [273.0, 26626.0], [272.0, 18716.0], [274.0, 20863.5], [275.0, 13311.0], [276.0, 27042.666666666668], [277.0, 14996.0], [278.0, 13354.666666666668], [279.0, 9213.5], [280.0, 11315.0], [286.0, 16936.4], [284.0, 10938.75], [285.0, 12388.0], [281.0, 12235.4], [282.0, 12543.166666666668], [283.0, 17152.0], [290.0, 7674.0], [288.0, 10258.0], [291.0, 13310.0], [300.0, 21418.333333333332], [301.0, 10486.9], [303.0, 10675.4], [292.0, 19741.0], [293.0, 10619.25], [294.0, 12286.666666666666], [295.0, 11863.666666666666], [296.0, 9991.75], [297.0, 12572.42857142857], [298.0, 32426.666666666668], [306.0, 11772.0], [304.0, 10603.75], [305.0, 12460.0], [307.0, 12203.0], [317.0, 13226.333333333334], [318.0, 12543.8], [319.0, 12453.375], [308.0, 14369.888888888889], [309.0, 15648.333333333334], [310.0, 12419.5], [311.0, 11206.875], [312.0, 11455.25], [313.0, 17353.999999999996], [314.0, 20555.0], [315.0, 11915.5], [321.0, 11349.800000000001], [320.0, 12385.25], [322.0, 9552.545454545454], [323.0, 41728.0], [324.0, 15733.5], [325.0, 11571.5], [326.0, 7166.0], [327.0, 43778.66666666667], [328.0, 8968.333333333334], [334.0, 9136.714285714286], [335.0, 6470.5], [332.0, 7900.428571428571], [333.0, 12766.0], [329.0, 7299.571428571428], [330.0, 10316.7], [331.0, 11305.3], [337.0, 9194.25], [336.0, 12067.714285714286], [339.0, 28799.166666666664], [338.0, 12308.0], [348.0, 8804.75], [349.0, 10303.333333333334], [350.0, 10019.571428571428], [351.0, 7634.6], [340.0, 9600.0], [341.0, 10878.333333333334], [342.0, 12939.785714285714], [343.0, 9631.875], [344.0, 14592.0], [345.0, 10240.0], [346.0, 13683.888888888889], [347.0, 8510.0], [353.0, 10069.0], [352.0, 10698.736842105262], [354.0, 9033.428571428572], [355.0, 11111.2], [356.0, 12067.0], [357.0, 12544.0], [358.0, 6368.5], [359.0, 11551.5], [360.0, 9266.0], [367.0, 11848.57142857143], [365.0, 13189.333333333334], [366.0, 13820.0], [361.0, 7031.625], [362.0, 11105.374999999998], [363.0, 12991.75], [369.0, 11785.5], [368.0, 12606.0], [370.0, 12995.0], [371.0, 13249.750000000002], [372.0, 9728.714285714286], [373.0, 13308.333333333334], [374.0, 10239.8], [375.0, 10186.222222222223], [376.0, 13064.75], [382.0, 7937.0], [383.0, 12796.0], [380.0, 10457.666666666666], [381.0, 10540.0], [377.0, 7374.5], [378.0, 9387.833333333334], [379.0, 9215.5], [385.0, 9434.333333333332], [384.0, 8333.0], [386.0, 6656.5], [387.0, 8534.25], [388.0, 11214.8], [389.0, 9214.0], [390.0, 9793.0], [391.0, 7359.75], [392.0, 10342.8], [398.0, 12907.333333333334], [399.0, 20224.0], [396.0, 14336.333333333332], [397.0, 11930.5], [393.0, 7680.0], [394.0, 10238.666666666666], [395.0, 13310.500000000002], [401.0, 13224.285714285716], [400.0, 12195.714285714286], [402.0, 9557.166666666666], [403.0, 13309.333333333334], [404.0, 12278.222222222223], [405.0, 13089.333333333334], [406.0, 11005.5], [407.0, 6599.666666666665], [408.0, 11263.41666666667], [414.0, 11154.333333333334], [412.0, 11609.5], [413.0, 11469.6], [409.0, 11890.099999999999], [410.0, 4778.666666666666], [411.0, 9585.0], [417.0, 8934.636363636364], [416.0, 12063.0], [418.0, 7896.8], [419.0, 6284.6], [420.0, 13676.999999999998], [421.0, 12414.666666666666], [422.0, 8447.714285714286], [423.0, 10534.0], [424.0, 11456.0], [430.0, 11353.571428571428], [431.0, 10080.5], [428.0, 8936.0], [429.0, 9173.333333333334], [425.0, 13823.0], [426.0, 7229.545454545455], [433.0, 11556.714285714286], [432.0, 9216.0], [434.0, 13340.5], [435.0, 8210.300000000001], [437.0, 9631.874999999998], [438.0, 10183.2], [439.0, 12806.833333333334], [440.0, 40037.22222222222], [446.0, 11774.666666666666], [447.0, 8347.5], [444.0, 41809.399999999994], [445.0, 7679.0], [441.0, 10360.666666666666], [442.0, 8960.666666666668], [443.0, 6658.5], [449.0, 11095.666666666664], [448.0, 6959.0], [450.0, 10137.6], [451.0, 9346.0], [452.0, 31611.6], [454.0, 13312.0], [455.0, 10454.166666666666], [456.0, 8064.0], [462.0, 50371.78571428572], [463.0, 10112.25], [460.0, 7017.428571428572], [461.0, 11159.0], [457.0, 9880.75], [458.0, 7697.363636363638], [459.0, 13994.666666666668], [465.0, 14335.5], [464.0, 12559.0], [466.0, 13311.0], [467.0, 13323.0], [468.0, 10490.833333333334], [469.0, 1.0], [470.0, 10740.666666666666], [471.0, 13312.0], [472.0, 12316.0], [479.0, 8558.142857142857], [473.0, 12063.333333333334], [474.0, 11849.666666666666], [475.0, 14438.0], [481.0, 12165.7], [480.0, 13312.0], [482.0, 12404.333333333334], [483.0, 10291.142857142857], [484.0, 10099.0], [485.0, 19967.42857142857], [486.0, 8962.4], [487.0, 35414.00000000001], [488.0, 5120.666666666666], [495.0, 13311.833333333332], [493.0, 17059.363636363636], [494.0, 11946.583333333332], [489.0, 13565.81818181818], [490.0, 10380.0], [496.0, 11849.142857142857], [497.0, 7680.0], [498.0, 10446.4], [500.0, 20143.92427184466], [1.0, 554.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[385.32251308900544, 16350.240837696332]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 971.0], [3.0, 949.0], [4.0, 105331.0], [5.0, 651.2], [6.0, 855.8], [7.0, 708.2857142857143], [8.0, 728.9], [9.0, 893.1249999999999], [10.0, 795.9090909090909], [11.0, 855.0], [12.0, 825.1111111111111], [13.0, 872.5714285714286], [14.0, 852.7333333333333], [15.0, 810.2857142857142], [16.0, 932.5], [17.0, 929.4117647058822], [18.0, 1071.5333333333333], [19.0, 921.2666666666667], [20.0, 1065.380952380952], [21.0, 1015.3571428571429], [22.0, 1195.5294117647059], [23.0, 1276.0], [24.0, 17552.076923076926], [25.0, 23521.526315789473], [26.0, 67565.94736842105], [27.0, 1493.8], [28.0, 1822.0], [29.0, 1627.6153846153845], [30.0, 29514.31578947368], [31.0, 1910.9090909090908], [32.0, 1958.0499999999997], [33.0, 1755.7142857142858], [34.0, 1844.5454545454545], [35.0, 2364.2666666666664], [36.0, 1951.6190476190473], [37.0, 1807.6666666666667], [38.0, 2199.0666666666666], [39.0, 12238.9375], [40.0, 2100.4210526315787], [41.0, 1937.058823529412], [42.0, 10850.777777777777], [43.0, 2234.1428571428564], [44.0, 2375.7368421052633], [45.0, 2303.5000000000005], [46.0, 10553.21052631579], [47.0, 2189.5999999999995], [48.0, 30063.739130434784], [49.0, 2531.8750000000005], [50.0, 2258.809523809524], [51.0, 2389.8499999999995], [52.0, 2469.529411764706], [53.0, 2862.8124999999995], [54.0, 2655.375], [55.0, 23531.434782608696], [56.0, 2860.0000000000005], [57.0, 2993.6875], [58.0, 3186.4444444444443], [59.0, 3312.2500000000005], [60.0, 3048.6111111111113], [61.0, 2841.5], [62.0, 44948.72222222222], [63.0, 3553.8235294117644], [64.0, 3527.0], [65.0, 3309.2307692307686], [66.0, 3352.3636363636365], [67.0, 22938.2], [68.0, 4169.8125], [69.0, 4248.071428571429], [70.0, 4344.999999999999], [71.0, 4019.1428571428573], [72.0, 36305.92307692308], [73.0, 4415.117647058823], [74.0, 4371.846153846154], [75.0, 4553.200000000001], [76.0, 15105.307692307695], [77.0, 14854.923076923076], [78.0, 5073.5], [79.0, 5107.933333333333], [80.0, 4850.0], [81.0, 4644.105263157895], [82.0, 4212.666666666667], [83.0, 4242.785714285715], [84.0, 4457.076923076923], [85.0, 4804.6], [86.0, 5717.7692307692305], [87.0, 5823.222222222223], [88.0, 39297.57894736842], [89.0, 6269.416666666666], [90.0, 6460.823529411765], [91.0, 10693.0], [92.0, 9710.846153846152], [93.0, 11322.88888888889], [94.0, 6425.636363636363], [95.0, 6317.083333333334], [96.0, 6767.0], [97.0, 7262.181818181818], [98.0, 7427.642857142857], [99.0, 7289.0], [100.0, 6469.416666666667], [101.0, 6489.090909090909], [102.0, 6601.500000000001], [103.0, 6169.642857142857], [104.0, 5438.6], [105.0, 32621.533333333333], [106.0, 6282.272727272727], [107.0, 13371.133333333335], [108.0, 6756.384615384616], [109.0, 7356.375], [110.0, 7680.181818181818], [111.0, 7216.529411764705], [112.0, 7165.750000000001], [113.0, 7427.4], [114.0, 7747.363636363636], [115.0, 19450.529411764706], [116.0, 15265.76923076923], [117.0, 7408.272727272727], [118.0, 7945.6], [119.0, 7847.5], [120.0, 19314.88888888889], [121.0, 11022.692307692307], [122.0, 17359.0], [123.0, 10465.066666666666], [124.0, 9851.823529411764], [125.0, 19658.0], [126.0, 9927.5], [127.0, 10271.0], [128.0, 9974.066666666668], [129.0, 10699.75], [130.0, 11076.25], [131.0, 10589.444444444445], [132.0, 10873.400000000001], [133.0, 10321.5], [134.0, 11280.27777777778], [135.0, 10797.181818181816], [136.0, 9651.384615384617], [137.0, 11411.125], [138.0, 9473.416666666668], [139.0, 10652.823529411764], [140.0, 10644.545454545454], [141.0, 9116.333333333334], [142.0, 10818.333333333332], [143.0, 9523.7], [144.0, 11187.142857142857], [145.0, 9349.1], [146.0, 11263.384615384613], [147.0, 9974.727272727272], [148.0, 10707.76923076923], [149.0, 11366.583333333332], [150.0, 10786.181818181818], [151.0, 11024.571428571428], [152.0, 11571.833333333332], [153.0, 11281.92857142857], [154.0, 11221.153846153844], [155.0, 11244.6], [156.0, 11804.857142857145], [157.0, 11010.181818181816], [158.0, 11511.625], [159.0, 10750.083333333334], [160.0, 10304.6875], [161.0, 10897.272727272726], [162.0, 12142.142857142857], [163.0, 11421.999999999998], [164.0, 11152.533333333333], [165.0, 11236.923076923076], [166.0, 11457.625000000002], [167.0, 12341.545454545454], [168.0, 11179.692307692307], [169.0, 11985.4375], [170.0, 11117.666666666666], [171.0, 12290.142857142857], [172.0, 11681.749999999998], [173.0, 11813.454545454546], [174.0, 11527.111111111111], [175.0, 11961.750000000002], [176.0, 11913.071428571428], [177.0, 11846.181818181818], [178.0, 12010.09090909091], [179.0, 11932.23076923077], [180.0, 11331.416666666666], [181.0, 13269.624999999998], [182.0, 11786.153846153846], [183.0, 11704.631578947368], [184.0, 11300.166666666666], [185.0, 12954.533333333333], [186.0, 11633.333333333332], [187.0, 10673.1], [188.0, 13315.846153846154], [189.0, 11233.75], [190.0, 12745.733333333335], [191.0, 10638.500000000002], [192.0, 12591.26666666667], [193.0, 11095.214285714286], [194.0, 10830.466666666665], [195.0, 11263.916666666668], [196.0, 11194.846153846152], [197.0, 11041.0], [198.0, 11325.454545454546], [199.0, 10994.888888888887], [200.0, 11890.9], [201.0, 11622.749999999998], [202.0, 11226.933333333334], [203.0, 10990.866666666667], [204.0, 10825.142857142855], [205.0, 11218.846153846154], [206.0, 11289.75], [207.0, 11320.545454545456], [208.0, 12165.5], [209.0, 12002.09090909091], [210.0, 12289.1], [211.0, 12239.555555555557], [212.0, 12189.714285714286], [213.0, 12533.666666666666], [214.0, 13253.4], [215.0, 13961.111111111111], [216.0, 13916.099999999999], [217.0, 14248.333333333334], [218.0, 14191.529411764708], [219.0, 13564.882352941178], [220.0, 12989.333333333334], [221.0, 13115.578947368424], [222.0, 12901.666666666666], [223.0, 12837.555555555555], [224.0, 13314.142857142857], [225.0, 12510.545454545454], [226.0, 12274.499999999998], [227.0, 11437.833333333334], [228.0, 12418.6], [229.0, 11996.42857142857], [230.0, 11835.0], [231.0, 16493.466666666667], [232.0, 12089.687499999998], [233.0, 12827.416666666668], [234.0, 11478.300000000001], [235.0, 12551.666666666666], [236.0, 11373.599999999999], [237.0, 11876.125], [238.0, 10998.909090909092], [239.0, 11997.1], [240.0, 14171.875], [241.0, 11941.933333333336], [242.0, 12420.866666666667], [243.0, 11828.64705882353], [244.0, 14730.142857142857], [245.0, 11595.374999999998], [246.0, 11140.272727272726], [247.0, 11406.111111111111], [248.0, 11898.727272727274], [249.0, 11926.444444444445], [250.0, 11612.272727272728], [251.0, 23395.285714285714], [252.0, 12014.363636363636], [253.0, 18869.357142857145], [254.0, 12690.285714285716], [255.0, 25348.61111111111], [257.0, 13748.1875], [256.0, 12609.769230769232], [258.0, 16368.5], [259.0, 12684.22222222222], [260.0, 12621.875], [261.0, 11750.166666666666], [262.0, 11715.833333333334], [263.0, 11848.5], [264.0, 23828.749999999996], [270.0, 12289.153846153846], [271.0, 12212.499999999996], [268.0, 11286.09090909091], [269.0, 11600.733333333334], [265.0, 12753.454545454546], [266.0, 13233.4375], [267.0, 11359.769230769232], [273.0, 13498.285714285716], [272.0, 12851.428571428569], [274.0, 21998.384615384613], [275.0, 13016.266666666666], [276.0, 12148.833333333334], [277.0, 12074.0], [278.0, 18812.84615384616], [279.0, 12206.2], [280.0, 12425.846153846152], [286.0, 14551.0], [287.0, 11100.25], [284.0, 16343.166666666666], [285.0, 10889.307692307693], [281.0, 12527.947368421052], [282.0, 17179.61904761905], [283.0, 11765.952380952382], [289.0, 10446.727272727274], [288.0, 10658.22222222222], [290.0, 10822.714285714286], [291.0, 9710.714285714284], [292.0, 17820.789473684214], [293.0, 10172.052631578948], [294.0, 11183.722222222223], [295.0, 10294.95], [296.0, 11564.363636363638], [302.0, 11045.666666666668], [303.0, 11418.666666666664], [300.0, 17461.375], [301.0, 10836.866666666669], [297.0, 13430.478260869566], [298.0, 11696.6], [299.0, 11622.636363636364], [305.0, 19673.999999999996], [304.0, 10589.615384615387], [306.0, 11967.888888888889], [307.0, 11363.461538461539], [308.0, 12861.055555555555], [309.0, 17334.1875], [310.0, 11507.411764705885], [311.0, 22521.6], [312.0, 11470.000000000002], [318.0, 11924.944444444442], [319.0, 11354.035714285714], [316.0, 11174.416666666666], [317.0, 12831.500000000002], [313.0, 13416.5], [314.0, 13066.533333333333], [315.0, 11630.333333333332], [321.0, 17139.208333333332], [320.0, 12179.944444444445], [322.0, 11580.95238095238], [323.0, 16178.947368421057], [324.0, 11426.842105263157], [325.0, 10790.0], [326.0, 10860.214285714286], [327.0, 13223.166666666666], [328.0, 8949.375], [334.0, 11239.076923076922], [335.0, 9129.565217391304], [332.0, 10644.624999999996], [333.0, 10841.227272727272], [329.0, 15206.157894736842], [330.0, 9381.739130434784], [331.0, 11631.65], [337.0, 11110.461538461537], [336.0, 11294.904761904765], [338.0, 11155.599999999999], [339.0, 9848.38095238095], [340.0, 10735.181818181818], [341.0, 21841.444444444445], [342.0, 11048.15789473684], [343.0, 8916.793103448275], [344.0, 12947.357142857143], [350.0, 10352.21739130435], [351.0, 11193.600000000002], [348.0, 10557.111111111111], [349.0, 10915.785714285714], [345.0, 12177.15], [346.0, 12090.32], [347.0, 11397.176470588234], [353.0, 9770.608695652174], [352.0, 10200.612903225807], [354.0, 10515.0], [355.0, 10482.214285714284], [356.0, 11164.318181818182], [357.0, 11375.666666666668], [358.0, 11125.777777777777], [359.0, 10310.95], [360.0, 16032.260869565214], [366.0, 12519.875], [367.0, 10956.526315789473], [364.0, 11171.142857142857], [365.0, 12044.699999999999], [361.0, 9251.633333333335], [362.0, 18274.285714285714], [363.0, 11040.0], [369.0, 11247.190476190475], [368.0, 12568.5], [370.0, 11672.200000000003], [371.0, 10965.642857142859], [372.0, 10993.391304347824], [373.0, 11229.57894736842], [374.0, 11909.117647058823], [375.0, 12079.032258064517], [376.0, 12862.75], [382.0, 10189.681818181816], [383.0, 12011.833333333334], [380.0, 11227.071428571428], [381.0, 11210.615384615385], [377.0, 12083.1875], [378.0, 10473.615384615385], [379.0, 10767.24], [385.0, 10718.451612903224], [384.0, 10615.550000000001], [386.0, 11393.937499999998], [387.0, 11082.272727272728], [388.0, 9153.782608695652], [389.0, 8758.555555555555], [390.0, 11206.5], [391.0, 11537.527777777777], [392.0, 9537.428571428569], [398.0, 12021.666666666666], [399.0, 11884.25], [396.0, 12168.687499999998], [397.0, 11731.5], [393.0, 10036.619047619048], [394.0, 11032.599999999999], [395.0, 11826.75], [401.0, 11087.95], [400.0, 10061.166666666666], [402.0, 11202.823529411764], [403.0, 11916.285714285716], [404.0, 12674.0], [405.0, 11301.384615384615], [406.0, 11553.65], [407.0, 11014.952380952382], [408.0, 11625.88888888889], [414.0, 9660.0], [415.0, 11963.545454545456], [412.0, 11905.4375], [413.0, 11556.749999999998], [409.0, 12729.357142857145], [410.0, 11640.099999999999], [411.0, 10188.451612903224], [417.0, 10677.439999999999], [416.0, 11189.3125], [418.0, 10681.733333333334], [419.0, 9817.933333333336], [420.0, 11430.052631578948], [421.0, 10971.5], [422.0, 12116.650000000001], [423.0, 10647.833333333334], [424.0, 11171.199999999997], [430.0, 11418.724137931033], [431.0, 10497.894736842105], [428.0, 11695.562500000002], [429.0, 10711.76923076923], [425.0, 10964.83333333333], [426.0, 10017.000000000002], [427.0, 10490.642857142859], [433.0, 11963.586206896554], [432.0, 10033.722222222223], [434.0, 11732.941176470587], [435.0, 10370.136363636364], [436.0, 10657.944444444443], [437.0, 10147.833333333332], [438.0, 10702.235294117645], [439.0, 12072.615384615385], [440.0, 24074.129032258064], [446.0, 10458.263157894738], [447.0, 11110.941176470587], [444.0, 20702.69565217391], [445.0, 10167.095238095239], [441.0, 9873.555555555557], [442.0, 8910.652173913044], [443.0, 10796.722222222223], [449.0, 10757.5], [448.0, 10993.625], [450.0, 10577.499999999998], [451.0, 10134.066666666666], [452.0, 11021.521739130436], [453.0, 10404.777777777777], [454.0, 10880.277777777777], [455.0, 11611.92], [456.0, 18725.533333333336], [462.0, 34636.46428571428], [463.0, 11373.333333333332], [460.0, 10671.965517241377], [461.0, 11504.749999999998], [457.0, 11607.384615384617], [458.0, 10686.699999999999], [459.0, 11993.096774193547], [465.0, 10387.666666666668], [464.0, 11243.666666666666], [466.0, 11039.099999999999], [467.0, 11082.199999999999], [468.0, 10837.800000000005], [469.0, 10615.421052631578], [470.0, 18605.176470588234], [471.0, 10194.714285714284], [472.0, 12215.206896551725], [478.0, 8927.0], [479.0, 21151.666666666668], [476.0, 9964.923076923076], [477.0, 9724.583333333332], [473.0, 10587.677419354837], [474.0, 10577.291666666666], [475.0, 10847.48275862069], [481.0, 11679.0], [480.0, 8890.894736842105], [482.0, 11618.86956521739], [483.0, 10516.823529411766], [484.0, 10710.764705882353], [485.0, 14947.42105263158], [486.0, 9946.785714285714], [487.0, 17749.26923076923], [488.0, 12233.4], [494.0, 12010.458333333332], [495.0, 11257.894736842107], [492.0, 10989.266666666665], [493.0, 18123.521739130432], [489.0, 11911.333333333336], [490.0, 11261.363636363636], [491.0, 10921.000000000002], [496.0, 12229.318181818184], [497.0, 10456.800000000001], [498.0, 12933.64705882353], [499.0, 12699.076923076922], [500.0, 13520.626439659492]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[319.4507459636229, 11726.7055998365]], "isOverall": false, "label": "Index-Aggregated", "isController": false}, {"data": [[2.0, 21.0], [3.0, 35.0], [4.0, 139956.0], [5.0, 37.0], [6.0, 14.5], [7.0, 35.0], [8.0, 24.0], [9.0, 37.0], [10.0, 28.0], [11.0, 21.0], [12.0, 30.0], [13.0, 21.0], [14.0, 34.0], [15.0, 42.0], [16.0, 38.0], [17.0, 25.0], [18.0, 98.0], [19.0, 184.0], [20.0, 133.0], [21.0, 390.0], [22.0, 426.0], [23.0, 576.0], [24.0, 105781.5], [25.0, 573.0], [26.0, 187549.33333333334], [27.0, 2.0], [28.0, 839.0], [30.0, 59855.333333333336], [32.0, 972.0], [34.0, 1153.0], [35.0, 1404.0], [36.0, 1085.5], [37.0, 161026.0], [38.0, 1604.0], [40.0, 1729.5], [41.0, 1175.0], [42.0, 1298.0], [43.0, 1448.0], [44.0, 81188.5], [45.0, 1366.0], [46.0, 1398.0], [47.0, 1502.0], [48.0, 121158.0], [49.0, 1561.0], [50.0, 1547.0], [51.0, 1643.0], [52.0, 1761.0], [54.0, 81894.0], [55.0, 55254.0], [57.0, 2111.0], [58.0, 2565.0], [59.0, 2319.0], [60.0, 2170.0], [61.0, 2205.0], [62.0, 2372.0], [63.0, 2635.0], [64.0, 2554.0], [65.0, 2458.0], [67.0, 111357.75], [68.0, 3583.0], [69.0, 3492.0], [70.0, 3026.0], [72.0, 3166.0], [73.0, 3444.0], [74.0, 3836.0], [75.0, 3763.0], [76.0, 86044.66666666667], [77.0, 3770.0], [78.0, 3925.0], [79.0, 3967.0], [80.0, 3669.0], [81.0, 3426.0], [82.0, 3309.0], [83.0, 3496.0], [84.0, 3952.0], [87.0, 5018.0], [88.0, 171921.4], [89.0, 5596.0], [90.0, 73808.33333333333], [92.0, 4971.0], [94.0, 5527.0], [95.0, 5831.0], [97.0, 31389.5], [98.0, 29679.0], [99.0, 22806.0], [96.0, 53278.5], [100.0, 5248.0], [101.0, 5427.0], [102.0, 5080.5], [103.0, 4987.0], [105.0, 95945.5], [106.0, 5355.0], [107.0, 56140.5], [109.0, 5988.0], [110.0, 6406.0], [111.0, 6686.0], [112.0, 56561.0], [113.0, 6518.0], [114.0, 6536.0], [115.0, 86748.2], [116.0, 6330.0], [117.0, 56523.5], [119.0, 6964.0], [120.0, 7626.0], [121.0, 7735.0], [122.0, 7498.0], [123.0, 7601.0], [124.0, 7489.0], [125.0, 7709.0], [126.0, 7644.0], [127.0, 7570.0], [129.0, 7714.5], [131.0, 8749.0], [132.0, 8404.0], [134.0, 8891.0], [135.0, 8716.0], [136.0, 8830.0], [137.0, 8744.0], [138.0, 14862.666666666668], [139.0, 7509.0], [140.0, 7995.0], [141.0, 18577.5], [143.0, 18883.0], [144.0, 8716.0], [146.0, 9038.0], [147.0, 9227.0], [148.0, 18578.0], [149.0, 9891.0], [150.0, 9981.0], [151.0, 27688.0], [152.0, 18946.0], [153.0, 15853.0], [154.0, 10028.0], [156.0, 9790.0], [159.0, 9847.0], [155.0, 27556.0], [164.0, 11601.0], [166.0, 11718.0], [160.0, 27450.0], [170.0, 18805.0], [168.0, 34956.0], [177.0, 10072.0], [182.0, 13696.0], [180.0, 18143.0], [179.0, 18162.0], [178.0, 18179.0], [176.0, 18289.0], [185.0, 12054.5], [187.0, 9962.0], [188.0, 15638.0], [184.0, 17755.0], [192.0, 9645.0], [195.0, 16582.0], [207.0, 15205.0], [203.0, 15243.0], [209.0, 63386.0], [214.0, 13177.0], [213.0, 23794.0], [216.0, 13221.0], [217.0, 13330.0], [218.0, 13994.0], [220.0, 26314.0], [221.0, 26339.0], [222.0, 11351.5], [223.0, 15573.0], [226.0, 10495.0], [227.0, 52246.0], [228.0, 20175.666666666664], [231.0, 16029.0], [233.0, 26529.0], [236.0, 10090.0], [239.0, 13294.0], [234.0, 15978.0], [232.0, 16013.0], [241.0, 25806.0], [244.0, 11533.0], [246.0, 6216.0], [240.0, 16339.0], [248.0, 79361.0], [251.0, 91374.5], [253.0, 56826.0], [254.0, 11919.0], [255.0, 59991.0], [257.0, 48992.333333333336], [256.0, 12489.0], [259.0, 50646.5], [258.0, 12606.0], [268.0, 106644.5], [269.0, 12373.0], [270.0, 74806.66666666667], [271.0, 8409.25], [260.0, 11506.0], [261.0, 13275.0], [262.0, 53365.666666666664], [263.0, 7447.333333333334], [264.0, 76118.0], [265.0, 16619.0], [266.0, 78859.0], [267.0, 10856.0], [284.0, 38717.75], [274.0, 44033.75], [272.0, 13023.0], [279.0, 10200.0], [275.0, 13349.0], [276.0, 35818.4], [278.0, 40136.25], [281.0, 9350.25], [282.0, 36386.57142857143], [283.0, 10472.5], [285.0, 10219.142857142857], [286.0, 49665.0], [289.0, 13497.0], [288.0, 72558.75], [290.0, 58708.0], [291.0, 12820.8], [292.0, 17091.5], [293.0, 11752.25], [294.0, 33995.875], [295.0, 9840.666666666666], [296.0, 32310.625], [302.0, 24564.0], [303.0, 13823.0], [300.0, 8191.333333333333], [301.0, 5083.5], [297.0, 9961.5], [298.0, 35707.5], [299.0, 10896.0], [305.0, 106526.5], [304.0, 10841.666666666666], [306.0, 11388.0], [307.0, 70452.25], [308.0, 10795.166666666666], [309.0, 38735.25], [310.0, 1.5], [311.0, 12075.5625], [312.0, 11816.666666666666], [319.0, 13732.428571428569], [317.0, 120340.0], [318.0, 9795.125000000002], [313.0, 50660.4], [314.0, 12145.0], [315.0, 75412.0], [321.0, 12537.714285714284], [320.0, 10139.0], [322.0, 7204.125], [323.0, 23131.85714285714], [324.0, 20672.4], [325.0, 26514.25], [326.0, 9963.0], [327.0, 36927.2], [328.0, 9305.142857142857], [334.0, 11762.25], [335.0, 7217.5], [332.0, 9984.375], [333.0, 12145.75], [329.0, 8962.0], [330.0, 9650.545454545456], [331.0, 11639.5], [337.0, 10496.2], [336.0, 4606.5], [339.0, 9845.7], [349.0, 7167.5], [350.0, 10024.111111111111], [351.0, 10966.333333333334], [340.0, 10992.75], [341.0, 19160.5], [342.0, 9992.0], [343.0, 9907.4], [344.0, 12288.0], [345.0, 12117.0], [346.0, 10519.0], [347.0, 66473.0], [353.0, 10186.333333333334], [352.0, 9003.692307692309], [354.0, 9574.6], [355.0, 7254.833333333333], [356.0, 11154.8], [357.0, 11491.222222222223], [358.0, 10469.6], [359.0, 7650.0], [360.0, 7677.833333333334], [366.0, 11517.5], [367.0, 13653.111111111111], [364.0, 13854.0], [365.0, 12534.0], [361.0, 10947.875000000002], [362.0, 21105.11111111111], [363.0, 8533.666666666668], [369.0, 8789.333333333334], [368.0, 13312.0], [370.0, 5711.0], [371.0, 9979.0], [372.0, 7623.5], [373.0, 11131.599999999999], [374.0, 9621.714285714286], [375.0, 13344.6], [377.0, 14077.333333333334], [382.0, 8969.777777777777], [380.0, 7138.0], [381.0, 12168.090909090908], [378.0, 9630.2], [379.0, 10837.285714285716], [385.0, 12644.090909090908], [384.0, 7165.0], [386.0, 11916.333333333334], [387.0, 12786.230769230768], [388.0, 10119.666666666666], [389.0, 9383.666666666666], [390.0, 15611.0], [391.0, 15492.22222222222], [392.0, 9120.153846153844], [398.0, 13220.666666666666], [396.0, 14179.333333333334], [397.0, 12547.5], [394.0, 11993.0], [395.0, 12593.2], [401.0, 12932.571428571428], [400.0, 9022.222222222223], [402.0, 9720.5], [403.0, 13293.5], [404.0, 12910.666666666666], [405.0, 12067.25], [406.0, 13312.0], [407.0, 8341.062500000002], [408.0, 12041.1], [414.0, 8713.4], [415.0, 13079.5], [412.0, 12288.0], [413.0, 11145.0], [409.0, 12503.9], [410.0, 7111.333333333334], [411.0, 8871.0], [418.0, 12799.8], [417.0, 9089.083333333334], [419.0, 12146.9], [428.0, 9481.0], [429.0, 6741.333333333334], [430.0, 12637.888888888889], [431.0, 9789.25], [420.0, 11415.8], [421.0, 12313.0], [422.0, 9908.0], [423.0, 7517.5], [424.0, 12922.800000000001], [425.0, 12130.25], [426.0, 8807.2], [427.0, 9750.0], [433.0, 13401.0], [432.0, 10561.5], [434.0, 12967.4], [435.0, 9175.312499999998], [436.0, 11695.0], [437.0, 9739.230769230771], [438.0, 12502.5], [439.0, 13630.166666666666], [440.0, 46670.15384615385], [446.0, 12024.333333333334], [447.0, 15347.25], [444.0, 50734.36363636363], [445.0, 10629.666666666666], [441.0, 10169.0], [442.0, 8167.857142857143], [443.0, 13312.0], [449.0, 11334.0], [448.0, 43927.8], [450.0, 9350.866666666665], [451.0, 9233.666666666666], [452.0, 8764.0], [453.0, 7432.0], [454.0, 11492.0], [455.0, 13548.75], [456.0, 8447.0], [462.0, 72681.0], [463.0, 13371.0], [460.0, 21489.333333333332], [461.0, 11925.0], [457.0, 8407.0], [458.0, 8255.666666666666], [459.0, 11008.125], [465.0, 14397.0], [464.0, 12699.0], [467.0, 13512.0], [476.0, 14340.0], [477.0, 12493.0], [479.0, 8152.75], [468.0, 13305.285714285714], [469.0, 13308.666666666666], [470.0, 12877.375], [471.0, 13316.5], [472.0, 21801.785714285717], [473.0, 11614.777777777777], [474.0, 10647.0], [475.0, 12811.6], [481.0, 9533.461538461537], [480.0, 9622.0], [482.0, 12080.0], [483.0, 13850.75], [484.0, 7146.0], [485.0, 24473.222222222223], [486.0, 5955.625], [487.0, 18005.833333333332], [488.0, 15744.333333333334], [494.0, 12587.333333333332], [495.0, 13312.0], [492.0, 7850.0], [493.0, 21126.466666666667], [489.0, 13559.333333333332], [491.0, 11772.0], [496.0, 12284.5], [497.0, 8325.125], [498.0, 8888.0], [499.0, 13506.0], [500.0, 19339.51028806584], [1.0, 105.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[377.8013868251616, 19751.23625557206]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 262.28333333333336, "minX": 1.53928806E12, "maxY": 976835.0333333333, "series": [{"data": [[1.53928812E12, 976835.0333333333], [1.53928872E12, 396.0], [1.5392883E12, 824641.1833333333], [1.53928824E12, 863179.0833333334], [1.5392886E12, 925831.95], [1.53928842E12, 861891.7333333333], [1.53928866E12, 325265.4166666667], [1.53928836E12, 818674.2666666667], [1.53928806E12, 902795.15], [1.53928854E12, 849094.2666666667], [1.53928848E12, 899233.5], [1.53928818E12, 840541.3333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53928812E12, 3812.233333333333], [1.53928872E12, 262.28333333333336], [1.5392883E12, 3849.0666666666666], [1.53928824E12, 3056.7], [1.5392886E12, 7002.2], [1.53928842E12, 6747.066666666667], [1.53928866E12, 2270.4333333333334], [1.53928836E12, 6386.25], [1.53928806E12, 3573.7833333333333], [1.53928854E12, 6606.15], [1.53928848E12, 7206.883333333333], [1.53928818E12, 3269.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928872E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 770.4464285714284, "minX": 1.53928806E12, "maxY": 184854.86363636365, "series": [{"data": [[1.53928812E12, 5518.923076923076], [1.53928872E12, 170767.56249999997], [1.5392883E12, 13284.887640449435], [1.53928824E12, 11843.92857142857], [1.5392886E12, 21302.145270270266], [1.53928842E12, 10794.523026315785], [1.53928866E12, 32585.384615384617], [1.53928836E12, 12521.741538461538], [1.53928806E12, 1816.1346153846152], [1.53928854E12, 16985.722222222215], [1.53928848E12, 14098.247648902823], [1.53928818E12, 9789.304347826086]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928812E12, 5215.184275184275], [1.53928872E12, 175201.08823529413], [1.5392883E12, 13303.46508563901], [1.53928824E12, 11888.523743016764], [1.5392886E12, 13919.66694011485], [1.53928842E12, 11271.577578475348], [1.53928866E12, 19502.13541666666], [1.53928836E12, 12146.85857572719], [1.53928806E12, 1748.1812169312159], [1.53928854E12, 12741.808007279338], [1.53928848E12, 12118.747906197648], [1.53928818E12, 10037.557939914157]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928812E12, 4434.309090909091], [1.53928872E12, 184854.86363636365], [1.5392883E12, 33066.635036496344], [1.53928824E12, 19974.375000000007], [1.5392886E12, 20669.88447653429], [1.53928842E12, 10869.495412844044], [1.53928866E12, 41303.76521739131], [1.53928836E12, 16280.164086687319], [1.53928806E12, 770.4464285714284], [1.53928854E12, 16300.890410958913], [1.53928848E12, 17456.82571428571], [1.53928818E12, 8691.097560975611]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928872E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 770.4285714285716, "minX": 1.53928806E12, "maxY": 184854.86363636365, "series": [{"data": [[1.53928812E12, 5518.923076923076], [1.53928872E12, 170767.56249999997], [1.5392883E12, 13284.887640449435], [1.53928824E12, 11843.92857142857], [1.5392886E12, 21302.145270270266], [1.53928842E12, 10794.506578947367], [1.53928866E12, 32585.384615384617], [1.53928836E12, 12521.73846153846], [1.53928806E12, 1816.1346153846152], [1.53928854E12, 16985.722222222215], [1.53928848E12, 14098.235109717873], [1.53928818E12, 9789.304347826086]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928812E12, 5214.603194103188], [1.53928872E12, 175201.08823529413], [1.5392883E12, 13303.039525691693], [1.53928824E12, 11887.99720670391], [1.5392886E12, 13919.315012305162], [1.53928842E12, 11271.21614349775], [1.53928866E12, 19501.679687500004], [1.53928836E12, 12146.518555666995], [1.53928806E12, 1747.7222222222233], [1.53928854E12, 12741.462238398555], [1.53928848E12, 12118.377721943036], [1.53928818E12, 10037.067238912723]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928812E12, 4434.272727272727], [1.53928872E12, 184854.86363636365], [1.5392883E12, 33066.613138686116], [1.53928824E12, 19974.375000000007], [1.5392886E12, 20669.88447653429], [1.53928842E12, 10869.489296636086], [1.53928866E12, 41303.76521739131], [1.53928836E12, 16280.160990712078], [1.53928806E12, 770.4285714285716], [1.53928854E12, 16300.886986301379], [1.53928848E12, 17456.820000000007], [1.53928818E12, 8691.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928872E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53928806E12, "maxY": 2.1071428571428577, "series": [{"data": [[1.53928812E12, 1.0192307692307694], [1.53928872E12, 0.6875], [1.5392883E12, 0.7303370786516854], [1.53928824E12, 0.9999999999999999], [1.5392886E12, 0.36486486486486475], [1.53928842E12, 0.5263157894736844], [1.53928866E12, 0.48351648351648363], [1.53928836E12, 0.8061538461538463], [1.53928806E12, 0.0], [1.53928854E12, 0.3921568627450979], [1.53928848E12, 0.4514106583072099], [1.53928818E12, 0.8695652173913042]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53928812E12, 0.608108108108108], [1.53928872E12, 0.23529411764705882], [1.5392883E12, 0.5533596837944658], [1.53928824E12, 0.6578212290502793], [1.5392886E12, 0.3675143560295322], [1.53928842E12, 0.45291479820627834], [1.53928866E12, 0.37239583333333337], [1.53928836E12, 0.5777331995987965], [1.53928806E12, 0.5489417989417987], [1.53928854E12, 0.36214740673339396], [1.53928848E12, 0.39028475711892807], [1.53928818E12, 0.5965665236051505]], "isOverall": false, "label": "Index", "isController": false}, {"data": [[1.53928812E12, 0.9454545454545455], [1.53928872E12, 0.09090909090909091], [1.5392883E12, 0.7518248175182484], [1.53928824E12, 1.0833333333333335], [1.5392886E12, 0.30324909747292444], [1.53928842E12, 0.5657492354740061], [1.53928866E12, 0.4000000000000001], [1.53928836E12, 0.715170278637771], [1.53928806E12, 2.1071428571428577], [1.53928854E12, 0.4075342465753426], [1.53928848E12, 0.3714285714285714], [1.53928818E12, 1.219512195121951]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928872E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.53928806E12, "maxY": 120533.0, "series": [{"data": [[1.53928812E12, 11017.0], [1.5392883E12, 53022.0], [1.53928824E12, 63386.0], [1.5392886E12, 16809.0], [1.53928842E12, 21534.0], [1.53928866E12, 120533.0], [1.53928836E12, 17134.0], [1.53928806E12, 4816.0], [1.53928854E12, 17129.0], [1.53928848E12, 24558.0], [1.53928818E12, 16077.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53928812E12, 2111.0], [1.5392883E12, 9631.0], [1.53928824E12, 9645.0], [1.5392886E12, 8098.0], [1.53928842E12, 8636.0], [1.53928866E12, 8247.0], [1.53928836E12, 9109.0], [1.53928806E12, 21.0], [1.53928854E12, 8920.0], [1.53928848E12, 8707.0], [1.53928818E12, 6294.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53928812E12, 6659.2], [1.5392883E12, 12529.4], [1.53928824E12, 11866.2], [1.5392886E12, 12773.0], [1.53928842E12, 12719.5], [1.53928866E12, 12903.800000000001], [1.53928836E12, 12634.3], [1.53928806E12, 2597.5], [1.53928854E12, 12822.7], [1.53928848E12, 12698.2], [1.53928818E12, 10682.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53928812E12, 9061.84], [1.5392883E12, 15768.04], [1.53928824E12, 15248.759999999995], [1.5392886E12, 15897.140000000003], [1.53928842E12, 15976.530000000006], [1.53928866E12, 17102.34], [1.53928836E12, 15910.880000000005], [1.53928806E12, 3980.350000000003], [1.53928854E12, 15954.0], [1.53928848E12, 15921.96], [1.53928818E12, 13035.880000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53928812E12, 7320.4], [1.5392883E12, 13389.999999999996], [1.53928824E12, 13009.55], [1.5392886E12, 13555.0], [1.53928842E12, 13545.0], [1.53928866E12, 13802.4], [1.53928836E12, 13486.449999999999], [1.53928806E12, 2806.5], [1.53928854E12, 13611.849999999999], [1.53928848E12, 13526.499999999998], [1.53928818E12, 11198.199999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928866E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 161790.5, "series": [{"data": [[16.0, 11773.0], [9.0, 11396.0], [12.0, 11416.0], [13.0, 10014.5], [27.0, 11300.0], [14.0, 1787.5], [28.0, 11186.0], [29.0, 11063.0], [15.0, 4958.0], [31.0, 10821.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13311.0], [1.0, 161790.5], [9.0, 13312.0], [12.0, 13320.0], [13.0, 0.5], [27.0, 11190.5], [14.0, 2.0], [28.0, 13311.0], [29.0, 13311.0], [15.0, 1.0], [31.0, 12799.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 161790.5, "series": [{"data": [[16.0, 11773.0], [9.0, 11395.0], [12.0, 11416.0], [13.0, 10014.5], [27.0, 11300.0], [14.0, 1787.0], [28.0, 11186.0], [29.0, 11062.5], [15.0, 4958.0], [31.0, 10820.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13311.0], [1.0, 161790.5], [9.0, 13312.0], [12.0, 13320.0], [13.0, 0.5], [27.0, 11190.5], [14.0, 2.0], [28.0, 13311.0], [29.0, 13311.0], [15.0, 1.0], [31.0, 12799.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.7, "minX": 1.53928806E12, "maxY": 32.05, "series": [{"data": [[1.53928812E12, 16.35], [1.5392883E12, 17.416666666666668], [1.53928824E12, 13.566666666666666], [1.5392886E12, 29.883333333333333], [1.53928842E12, 30.1], [1.53928866E12, 2.7], [1.53928836E12, 28.416666666666668], [1.53928806E12, 15.316666666666666], [1.53928854E12, 28.683333333333334], [1.53928848E12, 32.05], [1.53928818E12, 14.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928866E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928806E12, "maxY": 17.6, "series": [{"data": [[1.53928812E12, 14.416666666666666], [1.5392883E12, 11.633333333333333], [1.53928824E12, 12.2], [1.5392886E12, 13.116666666666667], [1.53928842E12, 12.083333333333334], [1.53928866E12, 5.1], [1.53928836E12, 11.766666666666667], [1.53928806E12, 13.4], [1.53928854E12, 11.966666666666667], [1.53928848E12, 12.816666666666666], [1.53928818E12, 12.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53928812E12, 0.8666666666666667], [1.5392883E12, 0.2833333333333333], [1.53928824E12, 0.21666666666666667], [1.5392886E12, 0.31666666666666665], [1.53928842E12, 0.4166666666666667], [1.53928866E12, 0.18333333333333332], [1.53928836E12, 0.5833333333333334], [1.53928806E12, 0.8333333333333334], [1.53928854E12, 0.38333333333333336], [1.53928848E12, 0.43333333333333335], [1.53928818E12, 0.7666666666666667]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53928812E12, 0.06666666666666667], [1.53928872E12, 1.2], [1.5392883E12, 4.333333333333333], [1.53928824E12, 0.13333333333333333], [1.5392886E12, 16.15], [1.53928842E12, 16.4], [1.53928866E12, 4.016666666666667], [1.53928836E12, 14.816666666666666], [1.53928806E12, 0.13333333333333333], [1.53928854E12, 15.716666666666667], [1.53928848E12, 17.6], [1.53928818E12, 0.03333333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.5392883E12, 0.16666666666666666], [1.53928824E12, 0.016666666666666666], [1.5392886E12, 0.2833333333333333], [1.53928842E12, 0.2], [1.53928866E12, 0.5333333333333333], [1.53928836E12, 0.25], [1.53928806E12, 0.03333333333333333], [1.53928854E12, 0.21666666666666667], [1.53928848E12, 0.2]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53928872E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53928806E12, "maxY": 13.5, "series": [{"data": [[1.53928812E12, 0.9166666666666666], [1.5392883E12, 0.3333333333333333], [1.53928824E12, 0.2833333333333333], [1.5392886E12, 0.43333333333333335], [1.53928842E12, 0.4], [1.53928866E12, 0.7], [1.53928836E12, 0.6666666666666666], [1.53928806E12, 0.9], [1.53928854E12, 0.3333333333333333], [1.53928848E12, 0.5833333333333334], [1.53928818E12, 0.6833333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53928812E12, 0.8666666666666667], [1.5392883E12, 0.2833333333333333], [1.53928824E12, 0.21666666666666667], [1.5392886E12, 0.31666666666666665], [1.53928842E12, 0.4166666666666667], [1.53928866E12, 0.18333333333333332], [1.53928836E12, 0.5833333333333334], [1.53928806E12, 0.8333333333333334], [1.53928854E12, 0.38333333333333336], [1.53928848E12, 0.43333333333333335], [1.53928818E12, 0.7666666666666667]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53928812E12, 13.5], [1.5392883E12, 11.3], [1.53928824E12, 11.916666666666666], [1.5392886E12, 12.683333333333334], [1.53928842E12, 11.683333333333334], [1.53928866E12, 4.4], [1.53928836E12, 11.1], [1.53928806E12, 12.5], [1.53928854E12, 11.633333333333333], [1.53928848E12, 12.233333333333333], [1.53928818E12, 11.616666666666667]], "isOverall": false, "label": "Index-success", "isController": false}, {"data": [[1.53928872E12, 0.36666666666666664], [1.5392883E12, 1.95], [1.53928824E12, 0.11666666666666667], [1.5392886E12, 4.183333333333334], [1.53928842E12, 5.05], [1.53928866E12, 1.2166666666666666], [1.53928836E12, 4.716666666666667], [1.53928806E12, 0.03333333333333333], [1.53928854E12, 4.533333333333333], [1.53928848E12, 5.25]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53928812E12, 0.06666666666666667], [1.53928872E12, 0.5666666666666667], [1.5392883E12, 1.35], [1.53928824E12, 0.016666666666666666], [1.5392886E12, 7.633333333333334], [1.53928842E12, 6.9], [1.53928866E12, 2.0], [1.53928836E12, 5.516666666666667], [1.53928806E12, 0.1], [1.53928854E12, 6.683333333333334], [1.53928848E12, 7.666666666666667], [1.53928818E12, 0.03333333333333333]], "isOverall": false, "label": "Index-failure", "isController": false}, {"data": [[1.53928872E12, 0.26666666666666666], [1.5392883E12, 1.2], [1.53928824E12, 0.016666666666666666], [1.5392886E12, 4.616666666666666], [1.53928842E12, 4.65], [1.53928866E12, 1.3333333333333333], [1.53928836E12, 4.833333333333333], [1.53928806E12, 0.03333333333333333], [1.53928854E12, 4.716666666666667], [1.53928848E12, 4.883333333333334]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53928872E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
