/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 222464.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 589.0], [4.1, 596.0], [4.2, 596.0], [4.3, 603.0], [4.4, 629.0], [4.5, 698.0], [4.6, 718.0], [4.7, 742.0], [4.8, 776.0], [4.9, 813.0], [5.0, 889.0], [5.1, 964.0], [5.2, 992.0], [5.3, 1048.0], [5.4, 1063.0], [5.5, 1075.0], [5.6, 1080.0], [5.7, 1084.0], [5.8, 1087.0], [5.9, 1138.0], [6.0, 1159.0], [6.1, 1165.0], [6.2, 1266.0], [6.3, 1336.0], [6.4, 1349.0], [6.5, 1358.0], [6.6, 1385.0], [6.7, 1400.0], [6.8, 1428.0], [6.9, 1485.0], [7.0, 1513.0], [7.1, 1536.0], [7.2, 1658.0], [7.3, 1677.0], [7.4, 1694.0], [7.5, 1728.0], [7.6, 1778.0], [7.7, 1877.0], [7.8, 1937.0], [7.9, 1943.0], [8.0, 1959.0], [8.1, 2000.0], [8.2, 2010.0], [8.3, 2041.0], [8.4, 2041.0], [8.5, 2050.0], [8.6, 2087.0], [8.7, 2164.0], [8.8, 2164.0], [8.9, 2241.0], [9.0, 2251.0], [9.1, 2284.0], [9.2, 2314.0], [9.3, 2341.0], [9.4, 2366.0], [9.5, 2366.0], [9.6, 2367.0], [9.7, 2388.0], [9.8, 2400.0], [9.9, 2431.0], [10.0, 2441.0], [10.1, 2448.0], [10.2, 2481.0], [10.3, 2483.0], [10.4, 2483.0], [10.5, 2484.0], [10.6, 2497.0], [10.7, 2506.0], [10.8, 2527.0], [10.9, 2530.0], [11.0, 2538.0], [11.1, 2539.0], [11.2, 2578.0], [11.3, 2586.0], [11.4, 2591.0], [11.5, 2611.0], [11.6, 2615.0], [11.7, 2623.0], [11.8, 2648.0], [11.9, 2659.0], [12.0, 2682.0], [12.1, 2706.0], [12.2, 2717.0], [12.3, 2719.0], [12.4, 2730.0], [12.5, 2730.0], [12.6, 2736.0], [12.7, 2750.0], [12.8, 2754.0], [12.9, 2763.0], [13.0, 2770.0], [13.1, 2771.0], [13.2, 2771.0], [13.3, 2776.0], [13.4, 2781.0], [13.5, 2785.0], [13.6, 2814.0], [13.7, 2838.0], [13.8, 2845.0], [13.9, 2862.0], [14.0, 2885.0], [14.1, 2889.0], [14.2, 2893.0], [14.3, 2900.0], [14.4, 2900.0], [14.5, 2924.0], [14.6, 2927.0], [14.7, 2940.0], [14.8, 2955.0], [14.9, 2956.0], [15.0, 2956.0], [15.1, 2956.0], [15.2, 2972.0], [15.3, 2976.0], [15.4, 2986.0], [15.5, 2994.0], [15.6, 2995.0], [15.7, 2996.0], [15.8, 3014.0], [15.9, 3015.0], [16.0, 3019.0], [16.1, 3023.0], [16.2, 3034.0], [16.3, 3038.0], [16.4, 3049.0], [16.5, 3077.0], [16.6, 3078.0], [16.7, 3078.0], [16.8, 3081.0], [16.9, 3085.0], [17.0, 3100.0], [17.1, 3103.0], [17.2, 3105.0], [17.3, 3108.0], [17.4, 3128.0], [17.5, 3160.0], [17.6, 3167.0], [17.7, 3174.0], [17.8, 3182.0], [17.9, 3182.0], [18.0, 3191.0], [18.1, 3195.0], [18.2, 3195.0], [18.3, 3199.0], [18.4, 3203.0], [18.5, 3206.0], [18.6, 3231.0], [18.7, 3234.0], [18.8, 3234.0], [18.9, 3236.0], [19.0, 3247.0], [19.1, 3250.0], [19.2, 3258.0], [19.3, 3268.0], [19.4, 3277.0], [19.5, 3277.0], [19.6, 3292.0], [19.7, 3292.0], [19.8, 3312.0], [19.9, 3317.0], [20.0, 3337.0], [20.1, 3340.0], [20.2, 3343.0], [20.3, 3344.0], [20.4, 3353.0], [20.5, 3362.0], [20.6, 3364.0], [20.7, 3376.0], [20.8, 3377.0], [20.9, 3377.0], [21.0, 3379.0], [21.1, 3388.0], [21.2, 3393.0], [21.3, 3396.0], [21.4, 3399.0], [21.5, 3404.0], [21.6, 3417.0], [21.7, 3422.0], [21.8, 3429.0], [21.9, 3439.0], [22.0, 3443.0], [22.1, 3465.0], [22.2, 3477.0], [22.3, 3478.0], [22.4, 3487.0], [22.5, 3490.0], [22.6, 3495.0], [22.7, 3500.0], [22.8, 3502.0], [22.9, 3510.0], [23.0, 3512.0], [23.1, 3523.0], [23.2, 3529.0], [23.3, 3561.0], [23.4, 3572.0], [23.5, 3581.0], [23.6, 3588.0], [23.7, 3594.0], [23.8, 3595.0], [23.9, 3598.0], [24.0, 3599.0], [24.1, 3606.0], [24.2, 3615.0], [24.3, 3616.0], [24.4, 3617.0], [24.5, 3623.0], [24.6, 3636.0], [24.7, 3639.0], [24.8, 3651.0], [24.9, 3661.0], [25.0, 3661.0], [25.1, 3675.0], [25.2, 3677.0], [25.3, 3682.0], [25.4, 3686.0], [25.5, 3687.0], [25.6, 3690.0], [25.7, 3696.0], [25.8, 3697.0], [25.9, 3705.0], [26.0, 3708.0], [26.1, 3717.0], [26.2, 3723.0], [26.3, 3730.0], [26.4, 3746.0], [26.5, 3746.0], [26.6, 3749.0], [26.7, 3764.0], [26.8, 3769.0], [26.9, 3770.0], [27.0, 3774.0], [27.1, 3779.0], [27.2, 3779.0], [27.3, 3783.0], [27.4, 3791.0], [27.5, 3792.0], [27.6, 3799.0], [27.7, 3803.0], [27.8, 3809.0], [27.9, 3812.0], [28.0, 3816.0], [28.1, 3822.0], [28.2, 3833.0], [28.3, 3833.0], [28.4, 3852.0], [28.5, 3859.0], [28.6, 3860.0], [28.7, 3869.0], [28.8, 3874.0], [28.9, 3877.0], [29.0, 3879.0], [29.1, 3882.0], [29.2, 3882.0], [29.3, 3885.0], [29.4, 3895.0], [29.5, 3899.0], [29.6, 3915.0], [29.7, 3915.0], [29.8, 3916.0], [29.9, 3922.0], [30.0, 3926.0], [30.1, 3926.0], [30.2, 3927.0], [30.3, 3932.0], [30.4, 3932.0], [30.5, 3933.0], [30.6, 3939.0], [30.7, 3962.0], [30.8, 3970.0], [30.9, 3981.0], [31.0, 3983.0], [31.1, 3986.0], [31.2, 3993.0], [31.3, 3994.0], [31.4, 4004.0], [31.5, 4013.0], [31.6, 4023.0], [31.7, 4032.0], [31.8, 4049.0], [31.9, 4059.0], [32.0, 4067.0], [32.1, 4086.0], [32.2, 4089.0], [32.3, 4102.0], [32.4, 4130.0], [32.5, 4131.0], [32.6, 4132.0], [32.7, 4139.0], [32.8, 4139.0], [32.9, 4145.0], [33.0, 4146.0], [33.1, 4163.0], [33.2, 4175.0], [33.3, 4180.0], [33.4, 4180.0], [33.5, 4184.0], [33.6, 4185.0], [33.7, 4187.0], [33.8, 4191.0], [33.9, 4203.0], [34.0, 4210.0], [34.1, 4212.0], [34.2, 4212.0], [34.3, 4226.0], [34.4, 4238.0], [34.5, 4247.0], [34.6, 4273.0], [34.7, 4273.0], [34.8, 4280.0], [34.9, 4281.0], [35.0, 4291.0], [35.1, 4294.0], [35.2, 4298.0], [35.3, 4326.0], [35.4, 4329.0], [35.5, 4330.0], [35.6, 4335.0], [35.7, 4358.0], [35.8, 4367.0], [35.9, 4370.0], [36.0, 4376.0], [36.1, 4376.0], [36.2, 4377.0], [36.3, 4383.0], [36.4, 4386.0], [36.5, 4388.0], [36.6, 4389.0], [36.7, 4393.0], [36.8, 4404.0], [36.9, 4422.0], [37.0, 4432.0], [37.1, 4444.0], [37.2, 4460.0], [37.3, 4473.0], [37.4, 4515.0], [37.5, 4537.0], [37.6, 4537.0], [37.7, 4547.0], [37.8, 4563.0], [37.9, 4564.0], [38.0, 4585.0], [38.1, 4586.0], [38.2, 4587.0], [38.3, 4594.0], [38.4, 4605.0], [38.5, 4606.0], [38.6, 4610.0], [38.7, 4610.0], [38.8, 4612.0], [38.9, 4614.0], [39.0, 4618.0], [39.1, 4648.0], [39.2, 4652.0], [39.3, 4663.0], [39.4, 4668.0], [39.5, 4692.0], [39.6, 4698.0], [39.7, 4705.0], [39.8, 4715.0], [39.9, 4725.0], [40.0, 4730.0], [40.1, 4735.0], [40.2, 4740.0], [40.3, 4742.0], [40.4, 4763.0], [40.5, 4773.0], [40.6, 4786.0], [40.7, 4793.0], [40.8, 4798.0], [40.9, 4803.0], [41.0, 4813.0], [41.1, 4818.0], [41.2, 4820.0], [41.3, 4821.0], [41.4, 4829.0], [41.5, 4842.0], [41.6, 4845.0], [41.7, 4845.0], [41.8, 4846.0], [41.9, 4852.0], [42.0, 4862.0], [42.1, 4864.0], [42.2, 4865.0], [42.3, 4869.0], [42.4, 4880.0], [42.5, 4884.0], [42.6, 4887.0], [42.7, 4890.0], [42.8, 4930.0], [42.9, 4941.0], [43.0, 4951.0], [43.1, 4955.0], [43.2, 4960.0], [43.3, 4963.0], [43.4, 4966.0], [43.5, 4969.0], [43.6, 4972.0], [43.7, 4997.0], [43.8, 5007.0], [43.9, 5012.0], [44.0, 5016.0], [44.1, 5021.0], [44.2, 5023.0], [44.3, 5031.0], [44.4, 5036.0], [44.5, 5041.0], [44.6, 5043.0], [44.7, 5044.0], [44.8, 5097.0], [44.9, 5110.0], [45.0, 5117.0], [45.1, 5127.0], [45.2, 5128.0], [45.3, 5134.0], [45.4, 5137.0], [45.5, 5150.0], [45.6, 5150.0], [45.7, 5168.0], [45.8, 5173.0], [45.9, 5173.0], [46.0, 5179.0], [46.1, 5195.0], [46.2, 5197.0], [46.3, 5218.0], [46.4, 5221.0], [46.5, 5226.0], [46.6, 5231.0], [46.7, 5243.0], [46.8, 5245.0], [46.9, 5249.0], [47.0, 5253.0], [47.1, 5267.0], [47.2, 5311.0], [47.3, 5311.0], [47.4, 5319.0], [47.5, 5333.0], [47.6, 5338.0], [47.7, 5341.0], [47.8, 5343.0], [47.9, 5344.0], [48.0, 5356.0], [48.1, 5364.0], [48.2, 5383.0], [48.3, 5385.0], [48.4, 5386.0], [48.5, 5389.0], [48.6, 5404.0], [48.7, 5410.0], [48.8, 5419.0], [48.9, 5454.0], [49.0, 5458.0], [49.1, 5465.0], [49.2, 5470.0], [49.3, 5474.0], [49.4, 5486.0], [49.5, 5525.0], [49.6, 5530.0], [49.7, 5536.0], [49.8, 5543.0], [49.9, 5556.0], [50.0, 5558.0], [50.1, 5558.0], [50.2, 5571.0], [50.3, 5592.0], [50.4, 5598.0], [50.5, 5622.0], [50.6, 5633.0], [50.7, 5634.0], [50.8, 5639.0], [50.9, 5641.0], [51.0, 5643.0], [51.1, 5646.0], [51.2, 5646.0], [51.3, 5651.0], [51.4, 5652.0], [51.5, 5654.0], [51.6, 5675.0], [51.7, 5676.0], [51.8, 5682.0], [51.9, 5691.0], [52.0, 5706.0], [52.1, 5706.0], [52.2, 5724.0], [52.3, 5725.0], [52.4, 5743.0], [52.5, 5747.0], [52.6, 5753.0], [52.7, 5761.0], [52.8, 5764.0], [52.9, 5770.0], [53.0, 5773.0], [53.1, 5785.0], [53.2, 5786.0], [53.3, 5814.0], [53.4, 5826.0], [53.5, 5845.0], [53.6, 5861.0], [53.7, 5927.0], [53.8, 5928.0], [53.9, 5932.0], [54.0, 5942.0], [54.1, 5953.0], [54.2, 5953.0], [54.3, 5980.0], [54.4, 5990.0], [54.5, 5992.0], [54.6, 5994.0], [54.7, 5998.0], [54.8, 6000.0], [54.9, 6055.0], [55.0, 6078.0], [55.1, 6079.0], [55.2, 6112.0], [55.3, 6125.0], [55.4, 6131.0], [55.5, 6152.0], [55.6, 6171.0], [55.7, 6181.0], [55.8, 6186.0], [55.9, 6193.0], [56.0, 6227.0], [56.1, 6267.0], [56.2, 6326.0], [56.3, 6492.0], [56.4, 6547.0], [56.5, 6639.0], [56.6, 6853.0], [56.7, 6896.0], [56.8, 7022.0], [56.9, 7069.0], [57.0, 7153.0], [57.1, 7164.0], [57.2, 7164.0], [57.3, 7167.0], [57.4, 7167.0], [57.5, 7168.0], [57.6, 7168.0], [57.7, 7172.0], [57.8, 7178.0], [57.9, 7197.0], [58.0, 7244.0], [58.1, 7311.0], [58.2, 7414.0], [58.3, 7420.0], [58.4, 7420.0], [58.5, 7420.0], [58.6, 7423.0], [58.7, 7424.0], [58.8, 7424.0], [58.9, 7424.0], [59.0, 7424.0], [59.1, 7424.0], [59.2, 7424.0], [59.3, 7424.0], [59.4, 7424.0], [59.5, 7424.0], [59.6, 7427.0], [59.7, 7427.0], [59.8, 7428.0], [59.9, 7476.0], [60.0, 7675.0], [60.1, 7676.0], [60.2, 7676.0], [60.3, 7678.0], [60.4, 7679.0], [60.5, 7680.0], [60.6, 7680.0], [60.7, 7680.0], [60.8, 7680.0], [60.9, 7680.0], [61.0, 7680.0], [61.1, 7680.0], [61.2, 7684.0], [61.3, 7684.0], [61.4, 7684.0], [61.5, 7782.0], [61.6, 7931.0], [61.7, 7932.0], [61.8, 7932.0], [61.9, 7934.0], [62.0, 7936.0], [62.1, 7936.0], [62.2, 7936.0], [62.3, 7936.0], [62.4, 7936.0], [62.5, 7936.0], [62.6, 7936.0], [62.7, 7936.0], [62.8, 7936.0], [62.9, 7940.0], [63.0, 8187.0], [63.1, 8188.0], [63.2, 8188.0], [63.3, 8188.0], [63.4, 8191.0], [63.5, 8191.0], [63.6, 8191.0], [63.7, 8192.0], [63.8, 8192.0], [63.9, 8192.0], [64.0, 8192.0], [64.1, 8192.0], [64.2, 8192.0], [64.3, 8192.0], [64.4, 8192.0], [64.5, 8192.0], [64.6, 8192.0], [64.7, 8192.0], [64.8, 8196.0], [64.9, 8444.0], [65.0, 8448.0], [65.1, 8448.0], [65.2, 8448.0], [65.3, 8700.0], [65.4, 8700.0], [65.5, 8700.0], [65.6, 8701.0], [65.7, 8703.0], [65.8, 8703.0], [65.9, 8703.0], [66.0, 8704.0], [66.1, 8704.0], [66.2, 8704.0], [66.3, 8704.0], [66.4, 8704.0], [66.5, 8704.0], [66.6, 8704.0], [66.7, 8704.0], [66.8, 8704.0], [66.9, 8704.0], [67.0, 8704.0], [67.1, 8707.0], [67.2, 8801.0], [67.3, 8956.0], [67.4, 8960.0], [67.5, 8962.0], [67.6, 8977.0], [67.7, 9195.0], [67.8, 9212.0], [67.9, 9215.0], [68.0, 9215.0], [68.1, 9216.0], [68.2, 9216.0], [68.3, 9216.0], [68.4, 9216.0], [68.5, 9216.0], [68.6, 9216.0], [68.7, 9216.0], [68.8, 9216.0], [68.9, 9216.0], [69.0, 9219.0], [69.1, 9220.0], [69.2, 9299.0], [69.3, 9468.0], [69.4, 9472.0], [69.5, 9472.0], [69.6, 9476.0], [69.7, 9490.0], [69.8, 9724.0], [69.9, 9724.0], [70.0, 9728.0], [70.1, 9728.0], [70.2, 9728.0], [70.3, 9728.0], [70.4, 9728.0], [70.5, 9728.0], [70.6, 9728.0], [70.7, 9728.0], [70.8, 9728.0], [70.9, 9728.0], [71.0, 9728.0], [71.1, 9728.0], [71.2, 9728.0], [71.3, 9732.0], [71.4, 9732.0], [71.5, 9732.0], [71.6, 9735.0], [71.7, 9983.0], [71.8, 9983.0], [71.9, 9984.0], [72.0, 9984.0], [72.1, 9984.0], [72.2, 9984.0], [72.3, 9984.0], [72.4, 10183.0], [72.5, 10222.0], [72.6, 10239.0], [72.7, 10240.0], [72.8, 10240.0], [72.9, 10240.0], [73.0, 10240.0], [73.1, 10240.0], [73.2, 10488.0], [73.3, 10495.0], [73.4, 10495.0], [73.5, 10496.0], [73.6, 10592.0], [73.7, 10751.0], [73.8, 10751.0], [73.9, 10751.0], [74.0, 10752.0], [74.1, 10752.0], [74.2, 10752.0], [74.3, 11004.0], [74.4, 11008.0], [74.5, 11008.0], [74.6, 11008.0], [74.7, 11011.0], [74.8, 11012.0], [74.9, 11012.0], [75.0, 11260.0], [75.1, 11260.0], [75.2, 11263.0], [75.3, 11263.0], [75.4, 11264.0], [75.5, 11264.0], [75.6, 11264.0], [75.7, 11264.0], [75.8, 11264.0], [75.9, 11393.0], [76.0, 11520.0], [76.1, 11520.0], [76.2, 11521.0], [76.3, 11524.0], [76.4, 11771.0], [76.5, 11775.0], [76.6, 11776.0], [76.7, 11776.0], [76.8, 11776.0], [76.9, 11776.0], [77.0, 11776.0], [77.1, 11776.0], [77.2, 11779.0], [77.3, 11780.0], [77.4, 11780.0], [77.5, 11791.0], [77.6, 12284.0], [77.7, 12287.0], [77.8, 12287.0], [77.9, 12288.0], [78.0, 12288.0], [78.1, 12288.0], [78.2, 12540.0], [78.3, 12544.0], [78.4, 12544.0], [78.5, 12547.0], [78.6, 12548.0], [78.7, 12800.0], [78.8, 12800.0], [78.9, 12800.0], [79.0, 12803.0], [79.1, 13056.0], [79.2, 13056.0], [79.3, 13056.0], [79.4, 13065.0], [79.5, 13156.0], [79.6, 13257.0], [79.7, 13308.0], [79.8, 13308.0], [79.9, 13308.0], [80.0, 13308.0], [80.1, 13308.0], [80.2, 13308.0], [80.3, 13308.0], [80.4, 13308.0], [80.5, 13308.0], [80.6, 13308.0], [80.7, 13308.0], [80.8, 13311.0], [80.9, 13311.0], [81.0, 13311.0], [81.1, 13311.0], [81.2, 13311.0], [81.3, 13311.0], [81.4, 13311.0], [81.5, 13311.0], [81.6, 13311.0], [81.7, 13311.0], [81.8, 13311.0], [81.9, 13311.0], [82.0, 13311.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13312.0], [83.1, 13312.0], [83.2, 13312.0], [83.3, 13312.0], [83.4, 13312.0], [83.5, 13312.0], [83.6, 13312.0], [83.7, 13312.0], [83.8, 13312.0], [83.9, 13312.0], [84.0, 13312.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13315.0], [89.8, 13315.0], [89.9, 13315.0], [90.0, 13315.0], [90.1, 13316.0], [90.2, 13316.0], [90.3, 13316.0], [90.4, 13316.0], [90.5, 13316.0], [90.6, 13316.0], [90.7, 13316.0], [90.8, 13316.0], [90.9, 13316.0], [91.0, 13316.0], [91.1, 13331.0], [91.2, 13363.0], [91.3, 13568.0], [91.4, 13669.0], [91.5, 13819.0], [91.6, 13823.0], [91.7, 13823.0], [91.8, 13823.0], [91.9, 13823.0], [92.0, 13823.0], [92.1, 13823.0], [92.2, 13823.0], [92.3, 13824.0], [92.4, 13824.0], [92.5, 13824.0], [92.6, 13824.0], [92.7, 13824.0], [92.8, 13824.0], [92.9, 13824.0], [93.0, 13827.0], [93.1, 13828.0], [93.2, 14084.0], [93.3, 14084.0], [93.4, 14332.0], [93.5, 14336.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14336.0], [94.2, 14336.0], [94.3, 14336.0], [94.4, 14336.0], [94.5, 14336.0], [94.6, 14336.0], [94.7, 14336.0], [94.8, 14339.0], [94.9, 14339.0], [95.0, 14588.0], [95.1, 14591.0], [95.2, 14595.0], [95.3, 14848.0], [95.4, 14848.0], [95.5, 15103.0], [95.6, 15360.0], [95.7, 15614.0], [95.8, 15841.0], [95.9, 15841.0], [96.0, 16384.0], [96.1, 17664.0], [96.2, 18176.0], [96.3, 26368.0], [96.4, 27668.0], [96.5, 28672.0], [96.6, 29087.0], [96.7, 48737.0], [96.8, 53274.0], [96.9, 53277.0], [97.0, 58908.0], [97.1, 64251.0], [97.2, 67583.0], [97.3, 69632.0], [97.4, 72447.0], [97.5, 73980.0], [97.6, 75776.0], [97.7, 75986.0], [97.8, 79107.0], [97.9, 80898.0], [98.0, 105472.0], [98.1, 105728.0], [98.2, 107008.0], [98.3, 107008.0], [98.4, 110596.0], [98.5, 110844.0], [98.6, 110844.0], [98.7, 110844.0], [98.8, 114176.0], [98.9, 116992.0], [99.0, 116992.0], [99.1, 116992.0], [99.2, 116992.0], [99.3, 136960.0], [99.4, 136960.0], [99.5, 145663.0], [99.6, 147456.0], [99.7, 167935.0], [99.8, 210432.0], [99.9, 214528.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 92.0], [1.6, 102.0], [1.7, 107.0], [1.8, 156.0], [1.9, 190.0], [2.0, 204.0], [2.1, 230.0], [2.2, 259.0], [2.3, 280.0], [2.4, 297.0], [2.5, 311.0], [2.6, 322.0], [2.7, 335.0], [2.8, 349.0], [2.9, 364.0], [3.0, 381.0], [3.1, 396.0], [3.2, 414.0], [3.3, 425.0], [3.4, 437.0], [3.5, 450.0], [3.6, 466.0], [3.7, 478.0], [3.8, 488.0], [3.9, 494.0], [4.0, 504.0], [4.1, 512.0], [4.2, 522.0], [4.3, 530.0], [4.4, 541.0], [4.5, 549.0], [4.6, 557.0], [4.7, 567.0], [4.8, 575.0], [4.9, 584.0], [5.0, 591.0], [5.1, 599.0], [5.2, 608.0], [5.3, 617.0], [5.4, 625.0], [5.5, 634.0], [5.6, 643.0], [5.7, 651.0], [5.8, 660.0], [5.9, 669.0], [6.0, 680.0], [6.1, 689.0], [6.2, 702.0], [6.3, 714.0], [6.4, 722.0], [6.5, 730.0], [6.6, 743.0], [6.7, 764.0], [6.8, 778.0], [6.9, 791.0], [7.0, 807.0], [7.1, 820.0], [7.2, 840.0], [7.3, 861.0], [7.4, 880.0], [7.5, 904.0], [7.6, 942.0], [7.7, 978.0], [7.8, 1005.0], [7.9, 1031.0], [8.0, 1047.0], [8.1, 1063.0], [8.2, 1081.0], [8.3, 1096.0], [8.4, 1107.0], [8.5, 1119.0], [8.6, 1130.0], [8.7, 1142.0], [8.8, 1153.0], [8.9, 1164.0], [9.0, 1176.0], [9.1, 1184.0], [9.2, 1196.0], [9.3, 1206.0], [9.4, 1215.0], [9.5, 1225.0], [9.6, 1233.0], [9.7, 1245.0], [9.8, 1261.0], [9.9, 1277.0], [10.0, 1294.0], [10.1, 1305.0], [10.2, 1314.0], [10.3, 1326.0], [10.4, 1340.0], [10.5, 1349.0], [10.6, 1362.0], [10.7, 1376.0], [10.8, 1389.0], [10.9, 1407.0], [11.0, 1424.0], [11.1, 1437.0], [11.2, 1453.0], [11.3, 1467.0], [11.4, 1494.0], [11.5, 1512.0], [11.6, 1532.0], [11.7, 1545.0], [11.8, 1563.0], [11.9, 1576.0], [12.0, 1588.0], [12.1, 1607.0], [12.2, 1620.0], [12.3, 1636.0], [12.4, 1658.0], [12.5, 1672.0], [12.6, 1684.0], [12.7, 1701.0], [12.8, 1713.0], [12.9, 1733.0], [13.0, 1747.0], [13.1, 1769.0], [13.2, 1791.0], [13.3, 1807.0], [13.4, 1835.0], [13.5, 1855.0], [13.6, 1870.0], [13.7, 1882.0], [13.8, 1896.0], [13.9, 1908.0], [14.0, 1920.0], [14.1, 1932.0], [14.2, 1946.0], [14.3, 1960.0], [14.4, 1973.0], [14.5, 1983.0], [14.6, 1994.0], [14.7, 2002.0], [14.8, 2010.0], [14.9, 2017.0], [15.0, 2024.0], [15.1, 2033.0], [15.2, 2040.0], [15.3, 2046.0], [15.4, 2053.0], [15.5, 2059.0], [15.6, 2066.0], [15.7, 2071.0], [15.8, 2078.0], [15.9, 2086.0], [16.0, 2093.0], [16.1, 2099.0], [16.2, 2103.0], [16.3, 2109.0], [16.4, 2116.0], [16.5, 2124.0], [16.6, 2131.0], [16.7, 2138.0], [16.8, 2146.0], [16.9, 2152.0], [17.0, 2159.0], [17.1, 2169.0], [17.2, 2179.0], [17.3, 2187.0], [17.4, 2195.0], [17.5, 2203.0], [17.6, 2215.0], [17.7, 2221.0], [17.8, 2230.0], [17.9, 2243.0], [18.0, 2254.0], [18.1, 2262.0], [18.2, 2271.0], [18.3, 2279.0], [18.4, 2288.0], [18.5, 2297.0], [18.6, 2306.0], [18.7, 2315.0], [18.8, 2323.0], [18.9, 2331.0], [19.0, 2336.0], [19.1, 2342.0], [19.2, 2348.0], [19.3, 2353.0], [19.4, 2357.0], [19.5, 2360.0], [19.6, 2365.0], [19.7, 2369.0], [19.8, 2374.0], [19.9, 2378.0], [20.0, 2381.0], [20.1, 2386.0], [20.2, 2389.0], [20.3, 2392.0], [20.4, 2395.0], [20.5, 2398.0], [20.6, 2401.0], [20.7, 2404.0], [20.8, 2408.0], [20.9, 2410.0], [21.0, 2413.0], [21.1, 2416.0], [21.2, 2418.0], [21.3, 2420.0], [21.4, 2423.0], [21.5, 2426.0], [21.6, 2428.0], [21.7, 2430.0], [21.8, 2433.0], [21.9, 2436.0], [22.0, 2438.0], [22.1, 2440.0], [22.2, 2443.0], [22.3, 2444.0], [22.4, 2446.0], [22.5, 2449.0], [22.6, 2450.0], [22.7, 2453.0], [22.8, 2455.0], [22.9, 2456.0], [23.0, 2458.0], [23.1, 2460.0], [23.2, 2462.0], [23.3, 2465.0], [23.4, 2466.0], [23.5, 2469.0], [23.6, 2471.0], [23.7, 2472.0], [23.8, 2474.0], [23.9, 2475.0], [24.0, 2477.0], [24.1, 2479.0], [24.2, 2481.0], [24.3, 2483.0], [24.4, 2485.0], [24.5, 2487.0], [24.6, 2488.0], [24.7, 2490.0], [24.8, 2492.0], [24.9, 2494.0], [25.0, 2496.0], [25.1, 2497.0], [25.2, 2499.0], [25.3, 2500.0], [25.4, 2502.0], [25.5, 2504.0], [25.6, 2506.0], [25.7, 2508.0], [25.8, 2510.0], [25.9, 2512.0], [26.0, 2513.0], [26.1, 2514.0], [26.2, 2516.0], [26.3, 2517.0], [26.4, 2519.0], [26.5, 2521.0], [26.6, 2522.0], [26.7, 2524.0], [26.8, 2525.0], [26.9, 2527.0], [27.0, 2528.0], [27.1, 2530.0], [27.2, 2531.0], [27.3, 2533.0], [27.4, 2535.0], [27.5, 2536.0], [27.6, 2537.0], [27.7, 2538.0], [27.8, 2540.0], [27.9, 2541.0], [28.0, 2542.0], [28.1, 2543.0], [28.2, 2545.0], [28.3, 2546.0], [28.4, 2548.0], [28.5, 2550.0], [28.6, 2552.0], [28.7, 2553.0], [28.8, 2555.0], [28.9, 2556.0], [29.0, 2558.0], [29.1, 2559.0], [29.2, 2561.0], [29.3, 2562.0], [29.4, 2564.0], [29.5, 2566.0], [29.6, 2568.0], [29.7, 2569.0], [29.8, 2570.0], [29.9, 2572.0], [30.0, 2573.0], [30.1, 2574.0], [30.2, 2575.0], [30.3, 2577.0], [30.4, 2578.0], [30.5, 2580.0], [30.6, 2582.0], [30.7, 2583.0], [30.8, 2584.0], [30.9, 2586.0], [31.0, 2587.0], [31.1, 2589.0], [31.2, 2590.0], [31.3, 2591.0], [31.4, 2592.0], [31.5, 2594.0], [31.6, 2596.0], [31.7, 2598.0], [31.8, 2599.0], [31.9, 2600.0], [32.0, 2601.0], [32.1, 2603.0], [32.2, 2604.0], [32.3, 2605.0], [32.4, 2607.0], [32.5, 2608.0], [32.6, 2609.0], [32.7, 2610.0], [32.8, 2611.0], [32.9, 2612.0], [33.0, 2613.0], [33.1, 2615.0], [33.2, 2616.0], [33.3, 2617.0], [33.4, 2619.0], [33.5, 2620.0], [33.6, 2621.0], [33.7, 2623.0], [33.8, 2624.0], [33.9, 2626.0], [34.0, 2627.0], [34.1, 2629.0], [34.2, 2630.0], [34.3, 2631.0], [34.4, 2633.0], [34.5, 2634.0], [34.6, 2636.0], [34.7, 2637.0], [34.8, 2638.0], [34.9, 2640.0], [35.0, 2641.0], [35.1, 2643.0], [35.2, 2644.0], [35.3, 2645.0], [35.4, 2646.0], [35.5, 2648.0], [35.6, 2649.0], [35.7, 2650.0], [35.8, 2652.0], [35.9, 2653.0], [36.0, 2654.0], [36.1, 2656.0], [36.2, 2657.0], [36.3, 2659.0], [36.4, 2660.0], [36.5, 2662.0], [36.6, 2663.0], [36.7, 2665.0], [36.8, 2667.0], [36.9, 2668.0], [37.0, 2669.0], [37.1, 2670.0], [37.2, 2671.0], [37.3, 2673.0], [37.4, 2674.0], [37.5, 2676.0], [37.6, 2678.0], [37.7, 2679.0], [37.8, 2680.0], [37.9, 2682.0], [38.0, 2684.0], [38.1, 2685.0], [38.2, 2686.0], [38.3, 2687.0], [38.4, 2689.0], [38.5, 2690.0], [38.6, 2691.0], [38.7, 2692.0], [38.8, 2693.0], [38.9, 2695.0], [39.0, 2696.0], [39.1, 2698.0], [39.2, 2699.0], [39.3, 2700.0], [39.4, 2702.0], [39.5, 2703.0], [39.6, 2704.0], [39.7, 2705.0], [39.8, 2707.0], [39.9, 2708.0], [40.0, 2709.0], [40.1, 2710.0], [40.2, 2711.0], [40.3, 2713.0], [40.4, 2714.0], [40.5, 2715.0], [40.6, 2716.0], [40.7, 2718.0], [40.8, 2719.0], [40.9, 2720.0], [41.0, 2722.0], [41.1, 2723.0], [41.2, 2724.0], [41.3, 2726.0], [41.4, 2727.0], [41.5, 2728.0], [41.6, 2729.0], [41.7, 2730.0], [41.8, 2732.0], [41.9, 2733.0], [42.0, 2734.0], [42.1, 2735.0], [42.2, 2737.0], [42.3, 2738.0], [42.4, 2739.0], [42.5, 2741.0], [42.6, 2742.0], [42.7, 2744.0], [42.8, 2745.0], [42.9, 2747.0], [43.0, 2748.0], [43.1, 2749.0], [43.2, 2751.0], [43.3, 2752.0], [43.4, 2753.0], [43.5, 2755.0], [43.6, 2756.0], [43.7, 2757.0], [43.8, 2758.0], [43.9, 2760.0], [44.0, 2761.0], [44.1, 2762.0], [44.2, 2763.0], [44.3, 2765.0], [44.4, 2766.0], [44.5, 2768.0], [44.6, 2769.0], [44.7, 2771.0], [44.8, 2772.0], [44.9, 2773.0], [45.0, 2775.0], [45.1, 2776.0], [45.2, 2777.0], [45.3, 2779.0], [45.4, 2780.0], [45.5, 2781.0], [45.6, 2783.0], [45.7, 2784.0], [45.8, 2785.0], [45.9, 2787.0], [46.0, 2788.0], [46.1, 2789.0], [46.2, 2791.0], [46.3, 2792.0], [46.4, 2793.0], [46.5, 2795.0], [46.6, 2797.0], [46.7, 2798.0], [46.8, 2800.0], [46.9, 2801.0], [47.0, 2802.0], [47.1, 2803.0], [47.2, 2805.0], [47.3, 2806.0], [47.4, 2807.0], [47.5, 2809.0], [47.6, 2810.0], [47.7, 2811.0], [47.8, 2813.0], [47.9, 2815.0], [48.0, 2816.0], [48.1, 2817.0], [48.2, 2819.0], [48.3, 2820.0], [48.4, 2821.0], [48.5, 2822.0], [48.6, 2823.0], [48.7, 2824.0], [48.8, 2825.0], [48.9, 2826.0], [49.0, 2827.0], [49.1, 2829.0], [49.2, 2830.0], [49.3, 2831.0], [49.4, 2833.0], [49.5, 2834.0], [49.6, 2835.0], [49.7, 2836.0], [49.8, 2838.0], [49.9, 2839.0], [50.0, 2840.0], [50.1, 2842.0], [50.2, 2843.0], [50.3, 2845.0], [50.4, 2846.0], [50.5, 2848.0], [50.6, 2849.0], [50.7, 2850.0], [50.8, 2852.0], [50.9, 2853.0], [51.0, 2855.0], [51.1, 2856.0], [51.2, 2857.0], [51.3, 2859.0], [51.4, 2860.0], [51.5, 2862.0], [51.6, 2863.0], [51.7, 2865.0], [51.8, 2866.0], [51.9, 2868.0], [52.0, 2869.0], [52.1, 2871.0], [52.2, 2872.0], [52.3, 2873.0], [52.4, 2875.0], [52.5, 2877.0], [52.6, 2878.0], [52.7, 2879.0], [52.8, 2880.0], [52.9, 2881.0], [53.0, 2883.0], [53.1, 2884.0], [53.2, 2886.0], [53.3, 2888.0], [53.4, 2889.0], [53.5, 2891.0], [53.6, 2892.0], [53.7, 2894.0], [53.8, 2896.0], [53.9, 2898.0], [54.0, 2899.0], [54.1, 2900.0], [54.2, 2901.0], [54.3, 2903.0], [54.4, 2905.0], [54.5, 2906.0], [54.6, 2907.0], [54.7, 2909.0], [54.8, 2911.0], [54.9, 2912.0], [55.0, 2913.0], [55.1, 2914.0], [55.2, 2916.0], [55.3, 2917.0], [55.4, 2919.0], [55.5, 2921.0], [55.6, 2922.0], [55.7, 2923.0], [55.8, 2924.0], [55.9, 2926.0], [56.0, 2927.0], [56.1, 2929.0], [56.2, 2931.0], [56.3, 2932.0], [56.4, 2933.0], [56.5, 2935.0], [56.6, 2936.0], [56.7, 2937.0], [56.8, 2939.0], [56.9, 2941.0], [57.0, 2942.0], [57.1, 2943.0], [57.2, 2945.0], [57.3, 2946.0], [57.4, 2947.0], [57.5, 2949.0], [57.6, 2950.0], [57.7, 2952.0], [57.8, 2953.0], [57.9, 2954.0], [58.0, 2956.0], [58.1, 2957.0], [58.2, 2958.0], [58.3, 2960.0], [58.4, 2961.0], [58.5, 2963.0], [58.6, 2965.0], [58.7, 2966.0], [58.8, 2968.0], [58.9, 2969.0], [59.0, 2971.0], [59.1, 2972.0], [59.2, 2974.0], [59.3, 2975.0], [59.4, 2976.0], [59.5, 2978.0], [59.6, 2980.0], [59.7, 2981.0], [59.8, 2983.0], [59.9, 2984.0], [60.0, 2985.0], [60.1, 2987.0], [60.2, 2988.0], [60.3, 2990.0], [60.4, 2991.0], [60.5, 2993.0], [60.6, 2994.0], [60.7, 2995.0], [60.8, 2997.0], [60.9, 2999.0], [61.0, 3000.0], [61.1, 3002.0], [61.2, 3003.0], [61.3, 3005.0], [61.4, 3006.0], [61.5, 3008.0], [61.6, 3010.0], [61.7, 3011.0], [61.8, 3012.0], [61.9, 3014.0], [62.0, 3016.0], [62.1, 3017.0], [62.2, 3019.0], [62.3, 3020.0], [62.4, 3021.0], [62.5, 3023.0], [62.6, 3024.0], [62.7, 3026.0], [62.8, 3027.0], [62.9, 3029.0], [63.0, 3031.0], [63.1, 3032.0], [63.2, 3033.0], [63.3, 3035.0], [63.4, 3036.0], [63.5, 3038.0], [63.6, 3040.0], [63.7, 3041.0], [63.8, 3042.0], [63.9, 3044.0], [64.0, 3046.0], [64.1, 3047.0], [64.2, 3049.0], [64.3, 3051.0], [64.4, 3053.0], [64.5, 3055.0], [64.6, 3056.0], [64.7, 3058.0], [64.8, 3059.0], [64.9, 3061.0], [65.0, 3063.0], [65.1, 3064.0], [65.2, 3065.0], [65.3, 3067.0], [65.4, 3068.0], [65.5, 3071.0], [65.6, 3072.0], [65.7, 3074.0], [65.8, 3075.0], [65.9, 3077.0], [66.0, 3079.0], [66.1, 3080.0], [66.2, 3082.0], [66.3, 3084.0], [66.4, 3086.0], [66.5, 3087.0], [66.6, 3089.0], [66.7, 3090.0], [66.8, 3092.0], [66.9, 3094.0], [67.0, 3096.0], [67.1, 3098.0], [67.2, 3099.0], [67.3, 3101.0], [67.4, 3103.0], [67.5, 3105.0], [67.6, 3107.0], [67.7, 3109.0], [67.8, 3111.0], [67.9, 3112.0], [68.0, 3114.0], [68.1, 3116.0], [68.2, 3118.0], [68.3, 3120.0], [68.4, 3122.0], [68.5, 3123.0], [68.6, 3125.0], [68.7, 3127.0], [68.8, 3129.0], [68.9, 3132.0], [69.0, 3134.0], [69.1, 3136.0], [69.2, 3138.0], [69.3, 3140.0], [69.4, 3142.0], [69.5, 3144.0], [69.6, 3146.0], [69.7, 3147.0], [69.8, 3149.0], [69.9, 3152.0], [70.0, 3153.0], [70.1, 3155.0], [70.2, 3157.0], [70.3, 3160.0], [70.4, 3162.0], [70.5, 3164.0], [70.6, 3167.0], [70.7, 3169.0], [70.8, 3171.0], [70.9, 3173.0], [71.0, 3175.0], [71.1, 3177.0], [71.2, 3180.0], [71.3, 3182.0], [71.4, 3184.0], [71.5, 3186.0], [71.6, 3189.0], [71.7, 3191.0], [71.8, 3193.0], [71.9, 3196.0], [72.0, 3198.0], [72.1, 3201.0], [72.2, 3203.0], [72.3, 3206.0], [72.4, 3209.0], [72.5, 3211.0], [72.6, 3214.0], [72.7, 3217.0], [72.8, 3218.0], [72.9, 3220.0], [73.0, 3223.0], [73.1, 3226.0], [73.2, 3229.0], [73.3, 3233.0], [73.4, 3234.0], [73.5, 3238.0], [73.6, 3240.0], [73.7, 3244.0], [73.8, 3246.0], [73.9, 3249.0], [74.0, 3252.0], [74.1, 3255.0], [74.2, 3258.0], [74.3, 3260.0], [74.4, 3263.0], [74.5, 3266.0], [74.6, 3269.0], [74.7, 3273.0], [74.8, 3276.0], [74.9, 3280.0], [75.0, 3283.0], [75.1, 3286.0], [75.2, 3290.0], [75.3, 3294.0], [75.4, 3297.0], [75.5, 3300.0], [75.6, 3304.0], [75.7, 3307.0], [75.8, 3311.0], [75.9, 3315.0], [76.0, 3319.0], [76.1, 3322.0], [76.2, 3326.0], [76.3, 3330.0], [76.4, 3333.0], [76.5, 3337.0], [76.6, 3341.0], [76.7, 3345.0], [76.8, 3348.0], [76.9, 3351.0], [77.0, 3356.0], [77.1, 3360.0], [77.2, 3363.0], [77.3, 3367.0], [77.4, 3370.0], [77.5, 3375.0], [77.6, 3380.0], [77.7, 3384.0], [77.8, 3388.0], [77.9, 3392.0], [78.0, 3397.0], [78.1, 3402.0], [78.2, 3407.0], [78.3, 3412.0], [78.4, 3417.0], [78.5, 3421.0], [78.6, 3426.0], [78.7, 3431.0], [78.8, 3435.0], [78.9, 3439.0], [79.0, 3443.0], [79.1, 3447.0], [79.2, 3450.0], [79.3, 3456.0], [79.4, 3461.0], [79.5, 3466.0], [79.6, 3471.0], [79.7, 3476.0], [79.8, 3481.0], [79.9, 3487.0], [80.0, 3493.0], [80.1, 3497.0], [80.2, 3503.0], [80.3, 3507.0], [80.4, 3515.0], [80.5, 3520.0], [80.6, 3526.0], [80.7, 3532.0], [80.8, 3539.0], [80.9, 3546.0], [81.0, 3552.0], [81.1, 3558.0], [81.2, 3563.0], [81.3, 3571.0], [81.4, 3578.0], [81.5, 3583.0], [81.6, 3589.0], [81.7, 3596.0], [81.8, 3604.0], [81.9, 3610.0], [82.0, 3616.0], [82.1, 3623.0], [82.2, 3633.0], [82.3, 3642.0], [82.4, 3655.0], [82.5, 3666.0], [82.6, 3673.0], [82.7, 3686.0], [82.8, 3698.0], [82.9, 3708.0], [83.0, 3722.0], [83.1, 3736.0], [83.2, 3752.0], [83.3, 3767.0], [83.4, 3780.0], [83.5, 3796.0], [83.6, 3813.0], [83.7, 3833.0], [83.8, 3859.0], [83.9, 3876.0], [84.0, 3905.0], [84.1, 3927.0], [84.2, 3954.0], [84.3, 3980.0], [84.4, 4007.0], [84.5, 4038.0], [84.6, 4061.0], [84.7, 4085.0], [84.8, 4127.0], [84.9, 4168.0], [85.0, 4196.0], [85.1, 4240.0], [85.2, 4291.0], [85.3, 4355.0], [85.4, 4402.0], [85.5, 4462.0], [85.6, 4539.0], [85.7, 4618.0], [85.8, 4743.0], [85.9, 4929.0], [86.0, 5179.0], [86.1, 5522.0], [86.2, 5674.0], [86.3, 5835.0], [86.4, 6024.0], [86.5, 6190.0], [86.6, 6321.0], [86.7, 6604.0], [86.8, 6962.0], [86.9, 7164.0], [87.0, 7168.0], [87.1, 7168.0], [87.2, 7168.0], [87.3, 7172.0], [87.4, 7296.0], [87.5, 7424.0], [87.6, 7424.0], [87.7, 7428.0], [87.8, 7521.0], [87.9, 7675.0], [88.0, 7680.0], [88.1, 7680.0], [88.2, 7681.0], [88.3, 7841.0], [88.4, 7936.0], [88.5, 7936.0], [88.6, 8109.0], [88.7, 8190.0], [88.8, 8192.0], [88.9, 8192.0], [89.0, 8192.0], [89.1, 8196.0], [89.2, 8444.0], [89.3, 8448.0], [89.4, 8700.0], [89.5, 8703.0], [89.6, 8704.0], [89.7, 8704.0], [89.8, 8708.0], [89.9, 8960.0], [90.0, 8981.0], [90.1, 9212.0], [90.2, 9216.0], [90.3, 9216.0], [90.4, 9218.0], [90.5, 9293.0], [90.6, 9472.0], [90.7, 9664.0], [90.8, 9727.0], [90.9, 9728.0], [91.0, 9758.0], [91.1, 9980.0], [91.2, 9988.0], [91.3, 10237.0], [91.4, 10240.0], [91.5, 10305.0], [91.6, 10535.0], [91.7, 10752.0], [91.8, 10756.0], [91.9, 11008.0], [92.0, 11258.0], [92.1, 11264.0], [92.2, 11268.0], [92.3, 11524.0], [92.4, 11776.0], [92.5, 11779.0], [92.6, 12062.0], [92.7, 12402.0], [92.8, 12548.0], [92.9, 12800.0], [93.0, 13060.0], [93.1, 13236.0], [93.2, 13289.0], [93.3, 13308.0], [93.4, 13308.0], [93.5, 13308.0], [93.6, 13309.0], [93.7, 13311.0], [93.8, 13311.0], [93.9, 13311.0], [94.0, 13312.0], [94.1, 13312.0], [94.2, 13312.0], [94.3, 13312.0], [94.4, 13312.0], [94.5, 13312.0], [94.6, 13312.0], [94.7, 13312.0], [94.8, 13312.0], [94.9, 13312.0], [95.0, 13312.0], [95.1, 13312.0], [95.2, 13312.0], [95.3, 13312.0], [95.4, 13312.0], [95.5, 13312.0], [95.6, 13312.0], [95.7, 13312.0], [95.8, 13312.0], [95.9, 13313.0], [96.0, 13313.0], [96.1, 13316.0], [96.2, 13316.0], [96.3, 13316.0], [96.4, 13325.0], [96.5, 13354.0], [96.6, 13386.0], [96.7, 13505.0], [96.8, 13570.0], [96.9, 13820.0], [97.0, 13823.0], [97.1, 13824.0], [97.2, 13824.0], [97.3, 13824.0], [97.4, 13827.0], [97.5, 13828.0], [97.6, 14080.0], [97.7, 14332.0], [97.8, 14335.0], [97.9, 14336.0], [98.0, 14336.0], [98.1, 14337.0], [98.2, 14340.0], [98.3, 14614.0], [98.4, 15359.0], [98.5, 16384.0], [98.6, 17668.0], [98.7, 22524.0], [98.8, 26372.0], [98.9, 28672.0], [99.0, 53135.0], [99.1, 59043.0], [99.2, 69632.0], [99.3, 79108.0], [99.4, 100664.0], [99.5, 105728.0], [99.6, 106946.0], [99.7, 110596.0], [99.8, 140032.0], [99.9, 210432.0]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 2.0], [3.7, 2.0], [3.8, 4.0], [3.9, 6.0], [4.0, 19.0], [4.1, 21.0], [4.2, 25.0], [4.3, 26.0], [4.4, 29.0], [4.5, 29.0], [4.6, 34.0], [4.7, 34.0], [4.8, 35.0], [4.9, 35.0], [5.0, 40.0], [5.1, 40.0], [5.2, 42.0], [5.3, 102.0], [5.4, 102.0], [5.5, 172.0], [5.6, 175.0], [5.7, 194.0], [5.8, 211.0], [5.9, 216.0], [6.0, 219.0], [6.1, 237.0], [6.2, 267.0], [6.3, 269.0], [6.4, 279.0], [6.5, 292.0], [6.6, 329.0], [6.7, 335.0], [6.8, 405.0], [6.9, 407.0], [7.0, 412.0], [7.1, 415.0], [7.2, 417.0], [7.3, 417.0], [7.4, 432.0], [7.5, 443.0], [7.6, 445.0], [7.7, 470.0], [7.8, 475.0], [7.9, 513.0], [8.0, 523.0], [8.1, 544.0], [8.2, 572.0], [8.3, 590.0], [8.4, 601.0], [8.5, 604.0], [8.6, 627.0], [8.7, 650.0], [8.8, 741.0], [8.9, 764.0], [9.0, 827.0], [9.1, 848.0], [9.2, 850.0], [9.3, 868.0], [9.4, 889.0], [9.5, 934.0], [9.6, 940.0], [9.7, 977.0], [9.8, 995.0], [9.9, 998.0], [10.0, 1046.0], [10.1, 1058.0], [10.2, 1058.0], [10.3, 1062.0], [10.4, 1071.0], [10.5, 1096.0], [10.6, 1103.0], [10.7, 1149.0], [10.8, 1149.0], [10.9, 1190.0], [11.0, 1193.0], [11.1, 1193.0], [11.2, 1276.0], [11.3, 1308.0], [11.4, 1311.0], [11.5, 1319.0], [11.6, 1323.0], [11.7, 1375.0], [11.8, 1380.0], [11.9, 1388.0], [12.0, 1406.0], [12.1, 1413.0], [12.2, 1439.0], [12.3, 1450.0], [12.4, 1508.0], [12.5, 1537.0], [12.6, 1546.0], [12.7, 1596.0], [12.8, 1647.0], [12.9, 1647.0], [13.0, 1657.0], [13.1, 1659.0], [13.2, 1706.0], [13.3, 1740.0], [13.4, 1747.0], [13.5, 1776.0], [13.6, 1781.0], [13.7, 1802.0], [13.8, 1807.0], [13.9, 1821.0], [14.0, 1841.0], [14.1, 1841.0], [14.2, 1856.0], [14.3, 1859.0], [14.4, 1867.0], [14.5, 1872.0], [14.6, 1875.0], [14.7, 1875.0], [14.8, 1878.0], [14.9, 1892.0], [15.0, 1898.0], [15.1, 1928.0], [15.2, 1943.0], [15.3, 1950.0], [15.4, 1973.0], [15.5, 1974.0], [15.6, 1984.0], [15.7, 1992.0], [15.8, 2008.0], [15.9, 2015.0], [16.0, 2050.0], [16.1, 2120.0], [16.2, 2160.0], [16.3, 2165.0], [16.4, 2174.0], [16.5, 2186.0], [16.6, 2201.0], [16.7, 2217.0], [16.8, 2219.0], [16.9, 2226.0], [17.0, 2241.0], [17.1, 2278.0], [17.2, 2283.0], [17.3, 2291.0], [17.4, 2302.0], [17.5, 2303.0], [17.6, 2304.0], [17.7, 2304.0], [17.8, 2307.0], [17.9, 2313.0], [18.0, 2313.0], [18.1, 2326.0], [18.2, 2331.0], [18.3, 2336.0], [18.4, 2343.0], [18.5, 2343.0], [18.6, 2348.0], [18.7, 2353.0], [18.8, 2360.0], [18.9, 2363.0], [19.0, 2375.0], [19.1, 2393.0], [19.2, 2395.0], [19.3, 2397.0], [19.4, 2404.0], [19.5, 2406.0], [19.6, 2407.0], [19.7, 2413.0], [19.8, 2421.0], [19.9, 2424.0], [20.0, 2429.0], [20.1, 2437.0], [20.2, 2439.0], [20.3, 2448.0], [20.4, 2448.0], [20.5, 2450.0], [20.6, 2455.0], [20.7, 2456.0], [20.8, 2456.0], [20.9, 2457.0], [21.0, 2460.0], [21.1, 2468.0], [21.2, 2468.0], [21.3, 2472.0], [21.4, 2475.0], [21.5, 2488.0], [21.6, 2490.0], [21.7, 2508.0], [21.8, 2509.0], [21.9, 2510.0], [22.0, 2521.0], [22.1, 2522.0], [22.2, 2534.0], [22.3, 2553.0], [22.4, 2553.0], [22.5, 2570.0], [22.6, 2571.0], [22.7, 2583.0], [22.8, 2590.0], [22.9, 2591.0], [23.0, 2605.0], [23.1, 2610.0], [23.2, 2610.0], [23.3, 2611.0], [23.4, 2628.0], [23.5, 2632.0], [23.6, 2634.0], [23.7, 2636.0], [23.8, 2639.0], [23.9, 2642.0], [24.0, 2642.0], [24.1, 2643.0], [24.2, 2645.0], [24.3, 2645.0], [24.4, 2650.0], [24.5, 2655.0], [24.6, 2657.0], [24.7, 2659.0], [24.8, 2661.0], [24.9, 2675.0], [25.0, 2678.0], [25.1, 2684.0], [25.2, 2696.0], [25.3, 2705.0], [25.4, 2712.0], [25.5, 2714.0], [25.6, 2727.0], [25.7, 2728.0], [25.8, 2737.0], [25.9, 2737.0], [26.0, 2743.0], [26.1, 2747.0], [26.2, 2747.0], [26.3, 2749.0], [26.4, 2765.0], [26.5, 2765.0], [26.6, 2770.0], [26.7, 2773.0], [26.8, 2778.0], [26.9, 2780.0], [27.0, 2785.0], [27.1, 2805.0], [27.2, 2813.0], [27.3, 2814.0], [27.4, 2816.0], [27.5, 2826.0], [27.6, 2838.0], [27.7, 2839.0], [27.8, 2850.0], [27.9, 2851.0], [28.0, 2854.0], [28.1, 2857.0], [28.2, 2857.0], [28.3, 2857.0], [28.4, 2861.0], [28.5, 2862.0], [28.6, 2868.0], [28.7, 2868.0], [28.8, 2869.0], [28.9, 2873.0], [29.0, 2879.0], [29.1, 2883.0], [29.2, 2890.0], [29.3, 2890.0], [29.4, 2901.0], [29.5, 2913.0], [29.6, 2920.0], [29.7, 2929.0], [29.8, 2946.0], [29.9, 2948.0], [30.0, 2957.0], [30.1, 2957.0], [30.2, 2957.0], [30.3, 2957.0], [30.4, 2960.0], [30.5, 2964.0], [30.6, 2979.0], [30.7, 2980.0], [30.8, 2984.0], [30.9, 2984.0], [31.0, 2987.0], [31.1, 3003.0], [31.2, 3012.0], [31.3, 3025.0], [31.4, 3027.0], [31.5, 3032.0], [31.6, 3039.0], [31.7, 3043.0], [31.8, 3050.0], [31.9, 3050.0], [32.0, 3070.0], [32.1, 3091.0], [32.2, 3100.0], [32.3, 3102.0], [32.4, 3105.0], [32.5, 3121.0], [32.6, 3125.0], [32.7, 3141.0], [32.8, 3147.0], [32.9, 3181.0], [33.0, 3193.0], [33.1, 3199.0], [33.2, 3212.0], [33.3, 3212.0], [33.4, 3219.0], [33.5, 3227.0], [33.6, 3232.0], [33.7, 3244.0], [33.8, 3253.0], [33.9, 3254.0], [34.0, 3260.0], [34.1, 3272.0], [34.2, 3282.0], [34.3, 3283.0], [34.4, 3290.0], [34.5, 3290.0], [34.6, 3300.0], [34.7, 3304.0], [34.8, 3311.0], [34.9, 3317.0], [35.0, 3322.0], [35.1, 3331.0], [35.2, 3331.0], [35.3, 3335.0], [35.4, 3338.0], [35.5, 3344.0], [35.6, 3352.0], [35.7, 3355.0], [35.8, 3355.0], [35.9, 3356.0], [36.0, 3359.0], [36.1, 3377.0], [36.2, 3384.0], [36.3, 3385.0], [36.4, 3386.0], [36.5, 3395.0], [36.6, 3409.0], [36.7, 3417.0], [36.8, 3418.0], [36.9, 3430.0], [37.0, 3443.0], [37.1, 3462.0], [37.2, 3463.0], [37.3, 3467.0], [37.4, 3481.0], [37.5, 3530.0], [37.6, 3532.0], [37.7, 3550.0], [37.8, 3584.0], [37.9, 3597.0], [38.0, 3603.0], [38.1, 3605.0], [38.2, 3623.0], [38.3, 3632.0], [38.4, 3659.0], [38.5, 3662.0], [38.6, 3681.0], [38.7, 3683.0], [38.8, 3688.0], [38.9, 3713.0], [39.0, 3714.0], [39.1, 3720.0], [39.2, 3721.0], [39.3, 3745.0], [39.4, 3812.0], [39.5, 3814.0], [39.6, 3816.0], [39.7, 3818.0], [39.8, 3821.0], [39.9, 3905.0], [40.0, 3906.0], [40.1, 3919.0], [40.2, 3945.0], [40.3, 3992.0], [40.4, 4014.0], [40.5, 4041.0], [40.6, 4120.0], [40.7, 4143.0], [40.8, 4179.0], [40.9, 4193.0], [41.0, 4205.0], [41.1, 4221.0], [41.2, 4231.0], [41.3, 4245.0], [41.4, 4254.0], [41.5, 4261.0], [41.6, 4271.0], [41.7, 4334.0], [41.8, 4337.0], [41.9, 4340.0], [42.0, 4349.0], [42.1, 4361.0], [42.2, 4366.0], [42.3, 4386.0], [42.4, 4386.0], [42.5, 4462.0], [42.6, 4465.0], [42.7, 4516.0], [42.8, 4522.0], [42.9, 4526.0], [43.0, 4528.0], [43.1, 4601.0], [43.2, 4638.0], [43.3, 4656.0], [43.4, 4705.0], [43.5, 4708.0], [43.6, 4747.0], [43.7, 4819.0], [43.8, 4848.0], [43.9, 5322.0], [44.0, 5324.0], [44.1, 5353.0], [44.2, 5423.0], [44.3, 5470.0], [44.4, 5472.0], [44.5, 5487.0], [44.6, 5493.0], [44.7, 5561.0], [44.8, 5588.0], [44.9, 5599.0], [45.0, 5627.0], [45.1, 5678.0], [45.2, 5700.0], [45.3, 5714.0], [45.4, 5731.0], [45.5, 5757.0], [45.6, 5789.0], [45.7, 5876.0], [45.8, 5992.0], [45.9, 5997.0], [46.0, 6058.0], [46.1, 6077.0], [46.2, 6081.0], [46.3, 6167.0], [46.4, 6175.0], [46.5, 6177.0], [46.6, 6179.0], [46.7, 6194.0], [46.8, 6243.0], [46.9, 6255.0], [47.0, 6463.0], [47.1, 6664.0], [47.2, 6699.0], [47.3, 6776.0], [47.4, 6817.0], [47.5, 6888.0], [47.6, 6958.0], [47.7, 7002.0], [47.8, 7057.0], [47.9, 7090.0], [48.0, 7090.0], [48.1, 7092.0], [48.2, 7105.0], [48.3, 7130.0], [48.4, 7151.0], [48.5, 7162.0], [48.6, 7166.0], [48.7, 7167.0], [48.8, 7168.0], [48.9, 7168.0], [49.0, 7168.0], [49.1, 7168.0], [49.2, 7168.0], [49.3, 7168.0], [49.4, 7168.0], [49.5, 7168.0], [49.6, 7168.0], [49.7, 7172.0], [49.8, 7180.0], [49.9, 7212.0], [50.0, 7266.0], [50.1, 7288.0], [50.2, 7329.0], [50.3, 7393.0], [50.4, 7409.0], [50.5, 7419.0], [50.6, 7420.0], [50.7, 7424.0], [50.8, 7424.0], [50.9, 7424.0], [51.0, 7424.0], [51.1, 7424.0], [51.2, 7428.0], [51.3, 7428.0], [51.4, 7495.0], [51.5, 7522.0], [51.6, 7587.0], [51.7, 7600.0], [51.8, 7640.0], [51.9, 7674.0], [52.0, 7676.0], [52.1, 7676.0], [52.2, 7679.0], [52.3, 7679.0], [52.4, 7679.0], [52.5, 7680.0], [52.6, 7680.0], [52.7, 7680.0], [52.8, 7680.0], [52.9, 7708.0], [53.0, 7711.0], [53.1, 7733.0], [53.2, 7765.0], [53.3, 7932.0], [53.4, 7932.0], [53.5, 7936.0], [53.6, 7936.0], [53.7, 7936.0], [53.8, 7936.0], [53.9, 7936.0], [54.0, 7936.0], [54.1, 7936.0], [54.2, 7937.0], [54.3, 8026.0], [54.4, 8068.0], [54.5, 8105.0], [54.6, 8188.0], [54.7, 8188.0], [54.8, 8188.0], [54.9, 8188.0], [55.0, 8188.0], [55.1, 8189.0], [55.2, 8190.0], [55.3, 8192.0], [55.4, 8192.0], [55.5, 8192.0], [55.6, 8192.0], [55.7, 8192.0], [55.8, 8192.0], [55.9, 8192.0], [56.0, 8192.0], [56.1, 8196.0], [56.2, 8196.0], [56.3, 8196.0], [56.4, 8215.0], [56.5, 8242.0], [56.6, 8276.0], [56.7, 8309.0], [56.8, 8426.0], [56.9, 8447.0], [57.0, 8448.0], [57.1, 8448.0], [57.2, 8448.0], [57.3, 8585.0], [57.4, 8616.0], [57.5, 8649.0], [57.6, 8700.0], [57.7, 8700.0], [57.8, 8703.0], [57.9, 8704.0], [58.0, 8704.0], [58.1, 8704.0], [58.2, 8704.0], [58.3, 8704.0], [58.4, 8704.0], [58.5, 8704.0], [58.6, 8704.0], [58.7, 8704.0], [58.8, 8704.0], [58.9, 8704.0], [59.0, 8705.0], [59.1, 8764.0], [59.2, 8783.0], [59.3, 8856.0], [59.4, 8858.0], [59.5, 8860.0], [59.6, 8956.0], [59.7, 8956.0], [59.8, 8959.0], [59.9, 8959.0], [60.0, 8960.0], [60.1, 8964.0], [60.2, 9058.0], [60.3, 9083.0], [60.4, 9115.0], [60.5, 9212.0], [60.6, 9212.0], [60.7, 9212.0], [60.8, 9216.0], [60.9, 9216.0], [61.0, 9216.0], [61.1, 9216.0], [61.2, 9216.0], [61.3, 9216.0], [61.4, 9216.0], [61.5, 9219.0], [61.6, 9220.0], [61.7, 9220.0], [61.8, 9221.0], [61.9, 9229.0], [62.0, 9320.0], [62.1, 9670.0], [62.2, 9724.0], [62.3, 9728.0], [62.4, 9728.0], [62.5, 9728.0], [62.6, 9728.0], [62.7, 9728.0], [62.8, 9728.0], [62.9, 9758.0], [63.0, 9784.0], [63.1, 9789.0], [63.2, 9818.0], [63.3, 9822.0], [63.4, 9927.0], [63.5, 9939.0], [63.6, 9954.0], [63.7, 9984.0], [63.8, 9984.0], [63.9, 9984.0], [64.0, 9984.0], [64.1, 9984.0], [64.2, 9984.0], [64.3, 9984.0], [64.4, 10122.0], [64.5, 10122.0], [64.6, 10136.0], [64.7, 10221.0], [64.8, 10239.0], [64.9, 10240.0], [65.0, 10240.0], [65.1, 10240.0], [65.2, 10247.0], [65.3, 10266.0], [65.4, 10430.0], [65.5, 10469.0], [65.6, 10478.0], [65.7, 10496.0], [65.8, 10533.0], [65.9, 10559.0], [66.0, 10751.0], [66.1, 10752.0], [66.2, 10752.0], [66.3, 10752.0], [66.4, 10756.0], [66.5, 10816.0], [66.6, 10857.0], [66.7, 11011.0], [66.8, 11058.0], [66.9, 11081.0], [67.0, 11202.0], [67.1, 11260.0], [67.2, 11260.0], [67.3, 11264.0], [67.4, 11264.0], [67.5, 11310.0], [67.6, 11311.0], [67.7, 11322.0], [67.8, 11338.0], [67.9, 11448.0], [68.0, 11510.0], [68.1, 11668.0], [68.2, 11775.0], [68.3, 11776.0], [68.4, 11776.0], [68.5, 11776.0], [68.6, 11776.0], [68.7, 11776.0], [68.8, 11776.0], [68.9, 11776.0], [69.0, 11776.0], [69.1, 11780.0], [69.2, 11781.0], [69.3, 11874.0], [69.4, 12202.0], [69.5, 12277.0], [69.6, 12286.0], [69.7, 12288.0], [69.8, 12288.0], [69.9, 12288.0], [70.0, 12424.0], [70.1, 12491.0], [70.2, 12540.0], [70.3, 12544.0], [70.4, 12693.0], [70.5, 12722.0], [70.6, 12767.0], [70.7, 12799.0], [70.8, 12800.0], [70.9, 12800.0], [71.0, 13056.0], [71.1, 13056.0], [71.2, 13153.0], [71.3, 13167.0], [71.4, 13169.0], [71.5, 13170.0], [71.6, 13180.0], [71.7, 13195.0], [71.8, 13197.0], [71.9, 13200.0], [72.0, 13203.0], [72.1, 13221.0], [72.2, 13234.0], [72.3, 13247.0], [72.4, 13250.0], [72.5, 13255.0], [72.6, 13278.0], [72.7, 13281.0], [72.8, 13283.0], [72.9, 13296.0], [73.0, 13298.0], [73.1, 13298.0], [73.2, 13299.0], [73.3, 13300.0], [73.4, 13304.0], [73.5, 13306.0], [73.6, 13307.0], [73.7, 13307.0], [73.8, 13308.0], [73.9, 13308.0], [74.0, 13308.0], [74.1, 13308.0], [74.2, 13308.0], [74.3, 13310.0], [74.4, 13310.0], [74.5, 13311.0], [74.6, 13311.0], [74.7, 13311.0], [74.8, 13311.0], [74.9, 13311.0], [75.0, 13311.0], [75.1, 13311.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13312.0], [78.9, 13312.0], [79.0, 13312.0], [79.1, 13312.0], [79.2, 13312.0], [79.3, 13312.0], [79.4, 13312.0], [79.5, 13312.0], [79.6, 13312.0], [79.7, 13312.0], [79.8, 13312.0], [79.9, 13312.0], [80.0, 13312.0], [80.1, 13312.0], [80.2, 13312.0], [80.3, 13312.0], [80.4, 13312.0], [80.5, 13312.0], [80.6, 13312.0], [80.7, 13312.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13313.0], [81.3, 13313.0], [81.4, 13313.0], [81.5, 13313.0], [81.6, 13315.0], [81.7, 13315.0], [81.8, 13315.0], [81.9, 13315.0], [82.0, 13316.0], [82.1, 13316.0], [82.2, 13316.0], [82.3, 13316.0], [82.4, 13316.0], [82.5, 13316.0], [82.6, 13316.0], [82.7, 13316.0], [82.8, 13316.0], [82.9, 13317.0], [83.0, 13331.0], [83.1, 13348.0], [83.2, 13357.0], [83.3, 13360.0], [83.4, 13372.0], [83.5, 13372.0], [83.6, 13378.0], [83.7, 13381.0], [83.8, 13387.0], [83.9, 13389.0], [84.0, 13391.0], [84.1, 13405.0], [84.2, 13406.0], [84.3, 13407.0], [84.4, 13409.0], [84.5, 13411.0], [84.6, 13418.0], [84.7, 13440.0], [84.8, 13456.0], [84.9, 13496.0], [85.0, 13503.0], [85.1, 13504.0], [85.2, 13514.0], [85.3, 13522.0], [85.4, 13527.0], [85.5, 13568.0], [85.6, 13572.0], [85.7, 13694.0], [85.8, 13697.0], [85.9, 13722.0], [86.0, 13734.0], [86.1, 13820.0], [86.2, 13823.0], [86.3, 13823.0], [86.4, 13824.0], [86.5, 13824.0], [86.6, 13824.0], [86.7, 13824.0], [86.8, 13824.0], [86.9, 13824.0], [87.0, 13824.0], [87.1, 13824.0], [87.2, 13824.0], [87.3, 13824.0], [87.4, 13824.0], [87.5, 13824.0], [87.6, 13824.0], [87.7, 13824.0], [87.8, 13828.0], [87.9, 13833.0], [88.0, 13841.0], [88.1, 13851.0], [88.2, 14065.0], [88.3, 14084.0], [88.4, 14132.0], [88.5, 14195.0], [88.6, 14208.0], [88.7, 14210.0], [88.8, 14321.0], [88.9, 14332.0], [89.0, 14332.0], [89.1, 14332.0], [89.2, 14332.0], [89.3, 14332.0], [89.4, 14332.0], [89.5, 14334.0], [89.6, 14335.0], [89.7, 14335.0], [89.8, 14335.0], [89.9, 14335.0], [90.0, 14336.0], [90.1, 14336.0], [90.2, 14336.0], [90.3, 14336.0], [90.4, 14336.0], [90.5, 14336.0], [90.6, 14336.0], [90.7, 14336.0], [90.8, 14336.0], [90.9, 14336.0], [91.0, 14337.0], [91.1, 14337.0], [91.2, 14340.0], [91.3, 14359.0], [91.4, 14365.0], [91.5, 14564.0], [91.6, 14844.0], [91.7, 14852.0], [91.8, 15108.0], [91.9, 15359.0], [92.0, 15497.0], [92.1, 16291.0], [92.2, 16383.0], [92.3, 16549.0], [92.4, 16567.0], [92.5, 16640.0], [92.6, 16894.0], [92.7, 17175.0], [92.8, 17404.0], [92.9, 18172.0], [93.0, 18687.0], [93.1, 19018.0], [93.2, 20170.0], [93.3, 22015.0], [93.4, 26368.0], [93.5, 26368.0], [93.6, 26369.0], [93.7, 26377.0], [93.8, 26449.0], [93.9, 26449.0], [94.0, 27689.0], [94.1, 30716.0], [94.2, 30745.0], [94.3, 35976.0], [94.4, 47363.0], [94.5, 53275.0], [94.6, 53285.0], [94.7, 53289.0], [94.8, 53508.0], [94.9, 53613.0], [95.0, 54140.0], [95.1, 58904.0], [95.2, 59513.0], [95.3, 61284.0], [95.4, 62204.0], [95.5, 63962.0], [95.6, 68633.0], [95.7, 69631.0], [95.8, 73981.0], [95.9, 73986.0], [96.0, 75744.0], [96.1, 77350.0], [96.2, 79104.0], [96.3, 81916.0], [96.4, 89127.0], [96.5, 105471.0], [96.6, 105471.0], [96.7, 105472.0], [96.8, 105512.0], [96.9, 105704.0], [97.0, 106133.0], [97.1, 106240.0], [97.2, 106415.0], [97.3, 106756.0], [97.4, 106756.0], [97.5, 106795.0], [97.6, 106890.0], [97.7, 106906.0], [97.8, 106986.0], [97.9, 107008.0], [98.0, 107263.0], [98.1, 107264.0], [98.2, 108112.0], [98.3, 110129.0], [98.4, 110596.0], [98.5, 110844.0], [98.6, 111872.0], [98.7, 125954.0], [98.8, 140032.0], [98.9, 140032.0], [99.0, 144774.0], [99.1, 145408.0], [99.2, 145770.0], [99.3, 198980.0], [99.4, 210432.0], [99.5, 211712.0], [99.6, 211968.0], [99.7, 214528.0], [99.8, 214528.0], [99.9, 215552.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2474.0, "series": [{"data": [[0.0, 39.0], [145600.0, 1.0], [210400.0, 1.0], [136900.0, 2.0], [214500.0, 1.0], [67500.0, 1.0], [75900.0, 1.0], [73900.0, 1.0], [79100.0, 1.0], [147400.0, 1.0], [48700.0, 1.0], [58900.0, 1.0], [105400.0, 1.0], [107000.0, 2.0], [500.0, 2.0], [600.0, 3.0], [700.0, 3.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 6.0], [1100.0, 3.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 5.0], [2100.0, 2.0], [2300.0, 6.0], [2200.0, 3.0], [2400.0, 9.0], [2500.0, 8.0], [2600.0, 6.0], [2800.0, 7.0], [2700.0, 14.0], [2900.0, 15.0], [3000.0, 11.0], [3100.0, 14.0], [3300.0, 16.0], [3200.0, 14.0], [3400.0, 12.0], [3500.0, 14.0], [3600.0, 17.0], [3700.0, 18.0], [3800.0, 18.0], [3900.0, 18.0], [4000.0, 9.0], [4100.0, 15.0], [4200.0, 14.0], [4300.0, 15.0], [4600.0, 13.0], [4500.0, 9.0], [4400.0, 6.0], [4800.0, 18.0], [4700.0, 12.0], [75700.0, 1.0], [5000.0, 11.0], [5100.0, 13.0], [4900.0, 10.0], [5300.0, 14.0], [5200.0, 9.0], [5500.0, 9.0], [5400.0, 9.0], [5600.0, 15.0], [5700.0, 13.0], [5800.0, 4.0], [5900.0, 10.0], [6100.0, 8.0], [6000.0, 4.0], [6200.0, 2.0], [6300.0, 1.0], [6600.0, 1.0], [6500.0, 1.0], [105700.0, 1.0], [6400.0, 1.0], [6800.0, 2.0], [110500.0, 1.0], [7100.0, 10.0], [114100.0, 1.0], [7000.0, 2.0], [7400.0, 17.0], [7200.0, 1.0], [7300.0, 1.0], [116900.0, 4.0], [7600.0, 15.0], [7900.0, 13.0], [7700.0, 1.0], [8100.0, 19.0], [8700.0, 18.0], [8400.0, 4.0], [9100.0, 1.0], [8800.0, 1.0], [9200.0, 15.0], [8900.0, 4.0], [9700.0, 18.0], [9400.0, 5.0], [9900.0, 7.0], [10200.0, 7.0], [10100.0, 1.0], [10700.0, 6.0], [10400.0, 4.0], [10500.0, 1.0], [11000.0, 7.0], [11200.0, 8.0], [11700.0, 12.0], [11500.0, 4.0], [11300.0, 1.0], [12200.0, 6.0], [12500.0, 5.0], [13300.0, 114.0], [12800.0, 4.0], [13000.0, 3.0], [13200.0, 1.0], [13100.0, 1.0], [13600.0, 1.0], [13800.0, 16.0], [13500.0, 1.0], [14300.0, 16.0], [14000.0, 2.0], [14500.0, 3.0], [14800.0, 2.0], [15300.0, 1.0], [15100.0, 1.0], [15600.0, 1.0], [15800.0, 1.0], [16300.0, 1.0], [18100.0, 1.0], [17600.0, 1.0], [26300.0, 1.0], [27600.0, 1.0], [28600.0, 1.0], [29000.0, 1.0], [167900.0, 1.0], [53200.0, 2.0], [64200.0, 1.0], [69600.0, 1.0], [72400.0, 1.0], [80800.0, 1.0], [110800.0, 3.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 512.0], [140000.0, 4.0], [210400.0, 6.0], [212000.0, 1.0], [137700.0, 6.0], [148900.0, 1.0], [152100.0, 1.0], [214500.0, 1.0], [67500.0, 4.0], [76300.0, 1.0], [73900.0, 6.0], [81900.0, 5.0], [81100.0, 1.0], [92300.0, 1.0], [106700.0, 7.0], [215400.0, 1.0], [100.0, 134.0], [32900.0, 1.0], [40100.0, 1.0], [165100.0, 1.0], [47300.0, 1.0], [201900.0, 1.0], [200.0, 143.0], [52500.0, 1.0], [208300.0, 1.0], [53700.0, 1.0], [53300.0, 2.0], [54900.0, 1.0], [57300.0, 1.0], [57700.0, 1.0], [58500.0, 1.0], [61700.0, 1.0], [62100.0, 1.0], [67400.0, 1.0], [300.0, 232.0], [73800.0, 1.0], [83400.0, 4.0], [400.0, 273.0], [105800.0, 1.0], [108200.0, 2.0], [109800.0, 1.0], [111400.0, 1.0], [115400.0, 1.0], [119400.0, 1.0], [500.0, 375.0], [127400.0, 2.0], [600.0, 352.0], [700.0, 254.0], [800.0, 171.0], [215600.0, 1.0], [900.0, 97.0], [1000.0, 184.0], [1100.0, 290.0], [1200.0, 269.0], [1300.0, 267.0], [1400.0, 185.0], [1500.0, 208.0], [1600.0, 206.0], [1700.0, 182.0], [1800.0, 189.0], [1900.0, 276.0], [2000.0, 474.0], [2100.0, 433.0], [2200.0, 354.0], [2300.0, 664.0], [146100.0, 1.0], [2400.0, 1530.0], [2500.0, 2162.0], [2600.0, 2414.0], [166900.0, 1.0], [2700.0, 2474.0], [2800.0, 2372.0], [2900.0, 2260.0], [3000.0, 2042.0], [3100.0, 1587.0], [3200.0, 1116.0], [3300.0, 842.0], [211700.0, 8.0], [210100.0, 1.0], [3400.0, 687.0], [3500.0, 520.0], [3700.0, 232.0], [3600.0, 352.0], [3800.0, 153.0], [3900.0, 131.0], [4000.0, 110.0], [4200.0, 65.0], [4100.0, 91.0], [4300.0, 63.0], [68900.0, 2.0], [4400.0, 49.0], [4500.0, 43.0], [4600.0, 31.0], [73700.0, 9.0], [4800.0, 17.0], [4700.0, 18.0], [5000.0, 10.0], [4900.0, 16.0], [5100.0, 15.0], [5200.0, 7.0], [5300.0, 6.0], [5500.0, 23.0], [5600.0, 15.0], [89700.0, 1.0], [5400.0, 13.0], [5700.0, 26.0], [5800.0, 18.0], [6000.0, 21.0], [5900.0, 15.0], [6100.0, 20.0], [6200.0, 26.0], [6300.0, 11.0], [98500.0, 1.0], [6600.0, 13.0], [6500.0, 6.0], [105700.0, 13.0], [6400.0, 17.0], [6800.0, 9.0], [107300.0, 1.0], [6700.0, 8.0], [106500.0, 2.0], [6900.0, 7.0], [108100.0, 1.0], [110500.0, 7.0], [7100.0, 168.0], [7000.0, 7.0], [7400.0, 117.0], [7300.0, 11.0], [7200.0, 20.0], [118500.0, 1.0], [116900.0, 3.0], [7600.0, 127.0], [7500.0, 17.0], [7800.0, 21.0], [7900.0, 80.0], [7700.0, 13.0], [126500.0, 1.0], [8100.0, 170.0], [8000.0, 5.0], [8300.0, 7.0], [8200.0, 17.0], [8700.0, 156.0], [8400.0, 40.0], [8500.0, 6.0], [8600.0, 11.0], [8800.0, 8.0], [8900.0, 46.0], [9100.0, 13.0], [9200.0, 145.0], [9000.0, 5.0], [145400.0, 8.0], [9400.0, 34.0], [9700.0, 107.0], [9300.0, 7.0], [9500.0, 14.0], [9600.0, 13.0], [10000.0, 7.0], [9800.0, 9.0], [9900.0, 49.0], [10200.0, 74.0], [10100.0, 9.0], [10400.0, 22.0], [10700.0, 59.0], [10300.0, 13.0], [10500.0, 9.0], [10600.0, 4.0], [11000.0, 43.0], [11200.0, 74.0], [10800.0, 5.0], [10900.0, 3.0], [11100.0, 3.0], [11700.0, 86.0], [11300.0, 9.0], [11500.0, 19.0], [11400.0, 1.0], [11600.0, 1.0], [12100.0, 4.0], [12000.0, 6.0], [12200.0, 23.0], [11900.0, 5.0], [11800.0, 2.0], [12500.0, 29.0], [12600.0, 7.0], [12700.0, 12.0], [12400.0, 5.0], [12300.0, 3.0], [13300.0, 1110.0], [13200.0, 59.0], [12800.0, 31.0], [13000.0, 11.0], [13100.0, 14.0], [12900.0, 4.0], [13400.0, 22.0], [13800.0, 216.0], [13500.0, 41.0], [13700.0, 13.0], [13600.0, 7.0], [14000.0, 18.0], [14300.0, 192.0], [13900.0, 10.0], [14200.0, 3.0], [14100.0, 4.0], [222200.0, 2.0], [14800.0, 14.0], [14500.0, 18.0], [14400.0, 6.0], [14600.0, 2.0], [14700.0, 1.0], [15300.0, 10.0], [15200.0, 2.0], [15100.0, 9.0], [14900.0, 1.0], [15500.0, 1.0], [15800.0, 1.0], [15600.0, 10.0], [16300.0, 19.0], [16200.0, 2.0], [16000.0, 1.0], [17400.0, 1.0], [17200.0, 1.0], [16400.0, 3.0], [16600.0, 1.0], [17600.0, 5.0], [18000.0, 1.0], [17800.0, 1.0], [18800.0, 1.0], [19400.0, 2.0], [20800.0, 1.0], [22400.0, 1.0], [22000.0, 1.0], [23800.0, 1.0], [25400.0, 1.0], [26400.0, 7.0], [26200.0, 1.0], [26600.0, 1.0], [27600.0, 1.0], [28600.0, 4.0], [28400.0, 1.0], [27800.0, 6.0], [29200.0, 2.0], [29000.0, 3.0], [30000.0, 1.0], [33200.0, 1.0], [32800.0, 1.0], [37600.0, 1.0], [168700.0, 1.0], [45200.0, 1.0], [53200.0, 5.0], [211900.0, 3.0], [54000.0, 2.0], [53600.0, 2.0], [219900.0, 1.0], [56800.0, 1.0], [56400.0, 2.0], [58000.0, 1.0], [62400.0, 1.0], [69600.0, 4.0], [68800.0, 2.0], [80800.0, 1.0], [105600.0, 10.0], [108000.0, 1.0], [107200.0, 4.0], [126400.0, 1.0], [145600.0, 2.0], [140800.0, 2.0], [152000.0, 2.0], [179200.0, 1.0], [222400.0, 1.0], [210500.0, 1.0], [74300.0, 1.0], [79100.0, 3.0], [83900.0, 5.0], [85500.0, 3.0], [106300.0, 2.0], [104700.0, 2.0], [105500.0, 1.0], [110300.0, 1.0], [107100.0, 1.0], [107900.0, 2.0], [115900.0, 1.0], [118300.0, 1.0], [147400.0, 1.0], [145800.0, 1.0], [141000.0, 1.0], [34300.0, 1.0], [35500.0, 1.0], [48300.0, 1.0], [53100.0, 1.0], [53500.0, 2.0], [215500.0, 2.0], [57900.0, 1.0], [59100.0, 1.0], [72600.0, 1.0], [74200.0, 1.0], [85400.0, 1.0], [98200.0, 1.0], [100600.0, 1.0], [105400.0, 13.0], [106200.0, 4.0], [107000.0, 11.0], [111800.0, 1.0], [119000.0, 1.0], [123800.0, 1.0], [158800.0, 1.0], [210900.0, 2.0], [90100.0, 2.0], [102100.0, 1.0], [105300.0, 4.0], [106900.0, 3.0], [108500.0, 1.0], [110900.0, 2.0], [17100.0, 12.0], [16900.0, 1.0], [16500.0, 1.0], [17500.0, 2.0], [18100.0, 8.0], [17900.0, 7.0], [18300.0, 1.0], [18700.0, 2.0], [18500.0, 1.0], [19700.0, 1.0], [19900.0, 1.0], [22500.0, 3.0], [21700.0, 1.0], [22900.0, 1.0], [22700.0, 1.0], [26300.0, 30.0], [26100.0, 1.0], [27300.0, 2.0], [26900.0, 1.0], [27500.0, 1.0], [28500.0, 2.0], [27700.0, 4.0], [27900.0, 1.0], [29500.0, 1.0], [29100.0, 2.0], [29300.0, 1.0], [30500.0, 1.0], [32500.0, 1.0], [33000.0, 1.0], [35800.0, 2.0], [187100.0, 1.0], [52200.0, 1.0], [53000.0, 1.0], [212700.0, 3.0], [53400.0, 7.0], [57000.0, 1.0], [56600.0, 1.0], [59000.0, 2.0], [61800.0, 1.0], [62200.0, 5.0], [64200.0, 9.0], [72400.0, 9.0], [74000.0, 1.0], [91600.0, 4.0], [97200.0, 1.0], [106000.0, 2.0], [106800.0, 2.0], [110800.0, 6.0]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[0.0, 53.0], [140000.0, 2.0], [210400.0, 1.0], [145700.0, 1.0], [214500.0, 2.0], [73900.0, 2.0], [81900.0, 1.0], [79100.0, 1.0], [89100.0, 1.0], [105500.0, 1.0], [106700.0, 3.0], [125900.0, 1.0], [100.0, 5.0], [35900.0, 1.0], [47300.0, 1.0], [200.0, 8.0], [54100.0, 1.0], [53500.0, 1.0], [215500.0, 2.0], [58900.0, 1.0], [59500.0, 1.0], [63900.0, 1.0], [68600.0, 1.0], [300.0, 2.0], [400.0, 11.0], [106200.0, 1.0], [105400.0, 3.0], [107000.0, 1.0], [111800.0, 1.0], [500.0, 5.0], [600.0, 4.0], [700.0, 2.0], [800.0, 5.0], [900.0, 5.0], [1000.0, 6.0], [1100.0, 6.0], [1200.0, 1.0], [1300.0, 7.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 4.0], [1700.0, 5.0], [1800.0, 14.0], [1900.0, 7.0], [2000.0, 3.0], [2100.0, 5.0], [2300.0, 20.0], [2200.0, 9.0], [2400.0, 23.0], [2500.0, 13.0], [2600.0, 23.0], [2800.0, 23.0], [2700.0, 18.0], [2900.0, 17.0], [3000.0, 11.0], [3100.0, 10.0], [198900.0, 1.0], [3200.0, 15.0], [3300.0, 20.0], [211700.0, 1.0], [3400.0, 9.0], [3500.0, 5.0], [3700.0, 5.0], [3600.0, 9.0], [3800.0, 5.0], [3900.0, 5.0], [4000.0, 2.0], [4300.0, 8.0], [4100.0, 4.0], [4200.0, 7.0], [4600.0, 3.0], [4400.0, 2.0], [4500.0, 4.0], [4800.0, 2.0], [4700.0, 3.0], [75700.0, 1.0], [77300.0, 1.0], [5300.0, 3.0], [5500.0, 3.0], [5400.0, 5.0], [5600.0, 2.0], [5700.0, 5.0], [5800.0, 1.0], [6000.0, 3.0], [5900.0, 2.0], [6100.0, 5.0], [6200.0, 2.0], [105700.0, 1.0], [6600.0, 2.0], [6400.0, 1.0], [106100.0, 1.0], [6900.0, 1.0], [106900.0, 2.0], [110100.0, 1.0], [6700.0, 1.0], [6800.0, 2.0], [108100.0, 1.0], [110500.0, 1.0], [7000.0, 5.0], [7100.0, 17.0], [7300.0, 2.0], [7400.0, 11.0], [7200.0, 4.0], [7600.0, 12.0], [7500.0, 2.0], [7900.0, 10.0], [7700.0, 4.0], [8100.0, 19.0], [8000.0, 2.0], [8700.0, 17.0], [8200.0, 3.0], [8600.0, 2.0], [8400.0, 5.0], [8500.0, 1.0], [8300.0, 1.0], [9200.0, 15.0], [9000.0, 2.0], [8800.0, 3.0], [8900.0, 6.0], [9100.0, 1.0], [145400.0, 1.0], [9700.0, 10.0], [9600.0, 1.0], [9300.0, 1.0], [10100.0, 3.0], [10200.0, 7.0], [9800.0, 2.0], [9900.0, 10.0], [10400.0, 4.0], [10500.0, 2.0], [10700.0, 5.0], [10800.0, 2.0], [11000.0, 4.0], [11200.0, 5.0], [11300.0, 4.0], [11600.0, 1.0], [11700.0, 11.0], [11400.0, 1.0], [11500.0, 1.0], [12200.0, 6.0], [11800.0, 1.0], [12400.0, 2.0], [12700.0, 3.0], [12500.0, 2.0], [12600.0, 1.0], [13200.0, 14.0], [13300.0, 109.0], [13100.0, 7.0], [13000.0, 2.0], [12800.0, 2.0], [13400.0, 9.0], [13800.0, 21.0], [13600.0, 2.0], [13500.0, 7.0], [13700.0, 2.0], [14000.0, 2.0], [14300.0, 27.0], [14100.0, 2.0], [14200.0, 2.0], [14800.0, 2.0], [14500.0, 1.0], [15100.0, 1.0], [15300.0, 1.0], [15400.0, 1.0], [16300.0, 1.0], [16200.0, 1.0], [17100.0, 1.0], [16500.0, 2.0], [17400.0, 1.0], [16600.0, 1.0], [16800.0, 1.0], [18100.0, 1.0], [19000.0, 1.0], [18600.0, 1.0], [20100.0, 1.0], [22000.0, 1.0], [26400.0, 2.0], [26300.0, 4.0], [27600.0, 1.0], [30700.0, 2.0], [144700.0, 1.0], [53200.0, 3.0], [211900.0, 1.0], [53600.0, 1.0], [61200.0, 1.0], [62200.0, 1.0], [69600.0, 1.0], [106400.0, 1.0], [106800.0, 1.0], [107200.0, 2.0], [110800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 222400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 853.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25718.0, "series": [{"data": [[1.0, 2516.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5597.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 853.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 25718.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.392670157068064, "minX": 1.53939948E12, "maxY": 499.73249686323766, "series": [{"data": [[1.53939984E12, 344.65882048629123], [1.53939954E12, 44.92852257181931], [1.53940002E12, 499.73249686323766], [1.5393999E12, 404.0304105423209], [1.53939972E12, 223.76479024740047], [1.53940008E12, 475.4328147100425], [1.53939978E12, 285.34297520661164], [1.5393996E12, 104.01230769230759], [1.53939996E12, 464.6771042084173], [1.53939966E12, 163.14843205574905], [1.53940014E12, 42.71951219512194], [1.53939948E12, 9.392670157068064]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940014E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 215040.0, "series": [{"data": [[2.0, 1023.5], [4.0, 603.0], [5.0, 2314.0], [6.0, 742.0], [7.0, 2241.0], [8.0, 629.0], [10.0, 1680.0], [11.0, 589.0], [13.0, 1385.0], [14.0, 1067.0], [15.0, 718.0], [18.0, 813.0], [19.0, 2214.5], [20.0, 964.0], [21.0, 1075.0], [23.0, 2497.0], [24.0, 2164.0], [25.0, 1513.0], [26.0, 3417.0], [27.0, 1677.0], [28.0, 2659.0], [29.0, 992.0], [30.0, 3049.0], [31.0, 1165.0], [32.0, 3343.0], [33.0, 1723.0], [35.0, 1048.0], [36.0, 2245.5], [37.0, 1084.0], [38.0, 889.0], [39.0, 1063.0], [42.0, 2593.5], [44.0, 1266.0], [45.0, 2726.0], [46.0, 1138.0], [47.0, 73980.0], [48.0, 1877.0], [49.0, 1943.0], [51.0, 2085.5], [53.0, 58908.0], [54.0, 3183.5], [55.0, 2717.0], [56.0, 1711.0], [59.0, 3439.0], [60.0, 2650.5], [61.0, 2650.5], [62.0, 2087.0], [64.0, 2340.0], [67.0, 3206.0], [68.0, 3882.0], [70.0, 3071.0], [71.0, 4163.0], [72.0, 2431.0], [73.0, 15301.25], [75.0, 27762.5], [77.0, 3933.0], [78.0, 2814.5], [80.0, 3675.0], [81.0, 2000.0], [82.0, 3879.0], [84.0, 2104.5], [85.0, 3448.0], [86.0, 3885.0], [88.0, 2471.3333333333335], [89.0, 2164.0], [90.0, 2388.0], [92.0, 2586.0], [95.0, 3723.0], [96.0, 3314.5], [97.0, 2623.0], [100.0, 4884.0], [101.0, 4389.0], [102.0, 3879.0], [103.0, 88376.5], [106.0, 3623.5], [107.0, 3577.0], [108.0, 3103.0], [109.0, 2341.0], [111.0, 3570.5], [113.0, 2591.0], [114.0, 5021.0], [115.0, 15463.0], [116.0, 2578.0], [117.0, 5041.0], [119.0, 4329.0], [120.0, 3424.6666666666665], [123.0, 2730.0], [124.0, 4702.0], [125.0, 2862.0], [126.0, 4614.0], [128.0, 3816.0], [129.0, 3443.0], [131.0, 5146.0], [134.0, 4125.333333333333], [135.0, 3639.0], [132.0, 26368.0], [136.0, 3686.0], [137.0, 3958.5], [138.0, 3595.0], [139.0, 3014.0], [140.0, 2845.0], [143.0, 5008.0], [145.0, 5249.0], [146.0, 4972.0], [147.0, 4621.5], [150.0, 5404.0], [151.0, 5543.0], [153.0, 5654.0], [155.0, 3746.0], [156.0, 4032.0], [159.0, 4432.0], [152.0, 13363.0], [160.0, 17863.0], [161.0, 4139.0], [163.0, 4677.5], [168.0, 5788.0], [169.0, 3723.0], [173.0, 4377.0], [174.0, 4515.0], [176.0, 3682.0], [178.0, 3594.0], [179.0, 3105.0], [180.0, 4636.0], [181.0, 4460.0], [182.0, 4131.0], [183.0, 5419.0], [185.0, 3916.0], [186.0, 5645.0], [187.0, 5066.5], [189.0, 4763.5], [191.0, 4610.0], [190.0, 214528.0], [193.0, 3500.0], [194.0, 3182.0], [195.0, 3231.0], [196.0, 4004.0], [197.0, 4845.0], [199.0, 3599.0], [200.0, 3687.0], [201.0, 5341.0], [203.0, 5024.5], [204.0, 4585.0], [205.0, 3317.0], [208.0, 3588.0], [210.0, 3337.0], [212.0, 3983.0], [213.0, 4934.0], [219.0, 6125.0], [220.0, 3903.0], [221.0, 2682.0], [222.0, 3922.0], [223.0, 5465.0], [224.0, 5012.0], [225.0, 3400.6666666666665], [226.0, 3388.0], [228.0, 4521.5], [230.0, 5767.0], [231.0, 5861.0], [229.0, 10222.0], [232.0, 3932.0], [233.0, 6601.0], [235.0, 7315.0], [236.0, 4838.5], [237.0, 6469.5], [239.0, 2927.0], [240.0, 2900.0], [241.0, 3849.0], [243.0, 4705.0], [244.0, 19738.6], [247.0, 9668.0], [248.0, 9735.0], [249.0, 3799.0], [250.0, 1.0], [251.0, 8801.0], [253.0, 6181.0], [254.0, 5753.0], [258.0, 4930.0], [257.0, 6082.0], [259.0, 4549.0], [268.0, 3690.5], [269.0, 8589.75], [270.0, 3221.0], [260.0, 10396.5], [261.0, 10776.5], [262.0, 9860.5], [263.0, 5990.0], [264.0, 6591.5], [265.0, 2327.75], [266.0, 9501.5], [267.0, 4698.0], [273.0, 3374.0], [272.0, 5475.25], [274.0, 4887.0], [275.0, 1.0], [277.0, 3606.0], [278.0, 8623.5], [279.0, 28672.0], [280.0, 6286.75], [286.0, 13312.0], [287.0, 5826.0], [281.0, 4772.0], [289.0, 4907.5], [288.0, 13312.0], [290.0, 9322.5], [291.0, 23645.25], [292.0, 11006.0], [293.0, 13950.0], [294.0, 11010.0], [295.0, 6115.5], [297.0, 4367.0], [302.0, 7679.0], [303.0, 10031.333333333334], [300.0, 9216.0], [301.0, 5410.0], [298.0, 2207.0], [299.0, 5635.0], [305.0, 3623.0], [304.0, 3777.5], [307.0, 13311.5], [316.0, 2493.666666666667], [317.0, 8567.5], [318.0, 6571.5], [308.0, 8977.0], [309.0, 7995.666666666666], [310.0, 8007.166666666666], [311.0, 1.0], [312.0, 8746.0], [313.0, 3574.0], [315.0, 9948.4], [321.0, 4681.25], [320.0, 6247.5], [323.0, 4273.0], [332.0, 6279.0], [333.0, 4089.0], [334.0, 12287.0], [335.0, 4096.5], [324.0, 5614.666666666667], [325.0, 12800.0], [326.0, 45569.333333333336], [327.0, 4814.0], [328.0, 1.0], [330.0, 8481.333333333334], [331.0, 9602.0], [337.0, 6790.25], [336.0, 10312.0], [338.0, 3915.0], [339.0, 12800.0], [341.0, 16384.0], [342.0, 6000.75], [343.0, 7414.428571428572], [344.0, 5283.285714285714], [350.0, 27454.0], [351.0, 105728.0], [348.0, 5554.333333333333], [349.0, 3572.0], [345.0, 5641.0], [346.0, 6424.0], [353.0, 7286.4], [352.0, 6024.666666666667], [354.0, 2814.0], [355.0, 5681.5], [356.0, 10185.333333333334], [357.0, 8133.666666666667], [358.0, 8023.2], [359.0, 7295.5], [360.0, 6350.25], [366.0, 4330.0], [367.0, 5389.0], [364.0, 7249.0], [365.0, 6389.2], [361.0, 6294.4], [362.0, 5454.0], [363.0, 9543.8], [369.0, 3203.0], [368.0, 3340.0], [370.0, 13312.0], [371.0, 8781.333333333334], [372.0, 8503.0], [373.0, 5314.0], [374.0, 7594.333333333333], [375.0, 9472.0], [376.0, 4024.3333333333335], [383.0, 8367.0], [381.0, 8053.5], [382.0, 9566.4], [377.0, 7172.0], [378.0, 9900.333333333334], [379.0, 4610.0], [385.0, 20243.833333333332], [384.0, 5023.0], [386.0, 8700.0], [387.0, 8807.5], [388.0, 9164.5], [389.0, 5479.0], [390.0, 7373.0], [391.0, 8387.714285714286], [392.0, 9175.5], [398.0, 4670.666666666667], [399.0, 4716.75], [394.0, 8359.333333333334], [403.0, 9475.5], [401.0, 9966.75], [400.0, 9287.8], [402.0, 8020.666666666667], [405.0, 4053.0], [406.0, 5383.0], [408.0, 5358.8], [409.0, 5378.75], [412.0, 8340.0], [413.0, 11106.0], [414.0, 8003.0], [415.0, 11113.333333333334], [417.0, 4661.0], [416.0, 6656.0], [418.0, 8838.666666666666], [419.0, 2924.0], [420.0, 3085.0], [421.0, 4740.0], [422.0, 6773.5], [423.0, 13312.0], [424.0, 3927.0], [430.0, 13827.0], [431.0, 8403.666666666666], [428.0, 13312.0], [429.0, 11779.0], [425.0, 5885.5], [426.0, 13654.666666666666], [427.0, 4404.0], [433.0, 6826.0], [432.0, 11012.0], [435.0, 4630.5], [444.0, 2977.0], [445.0, 24382.25], [446.0, 8485.0], [447.0, 7641.0], [436.0, 6862.333333333333], [437.0, 9230.0], [438.0, 6368.666666666667], [439.0, 9621.714285714286], [440.0, 6866.75], [441.0, 7936.0], [442.0, 8243.5], [443.0, 4415.5], [449.0, 9983.0], [448.0, 3762.5], [450.0, 11437.0], [451.0, 9559.0], [452.0, 7401.5], [453.0, 9699.0], [454.0, 10599.2], [455.0, 8592.0], [456.0, 5862.333333333333], [462.0, 10488.0], [463.0, 4198.5], [460.0, 6718.0], [461.0, 4813.0], [457.0, 3967.0], [458.0, 8451.5], [459.0, 7739.333333333334], [465.0, 3877.0], [464.0, 9479.0], [466.0, 4969.0], [476.0, 9901.666666666666], [477.0, 5976.333333333334], [478.0, 5778.5], [479.0, 9242.5], [468.0, 14336.0], [469.0, 6095.0], [470.0, 7831.500000000001], [471.0, 5650.5], [472.0, 5486.0], [473.0, 9779.0], [474.0, 9622.4], [482.0, 60160.0], [480.0, 5245.0], [483.0, 9769.25], [492.0, 8746.0], [494.0, 7979.0], [493.0, 4273.0], [484.0, 5068.0], [485.0, 11773.5], [486.0, 6175.0], [488.0, 14209.5], [489.0, 4444.0], [490.0, 6826.666666666667], [491.0, 7423.0], [496.0, 9237.142857142857], [497.0, 5474.0], [498.0, 10276.0], [499.0, 5556.0], [500.0, 20041.85000000001]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[335.76536885245935, 10195.14139344263]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 139.33333333333334], [3.0, 164.58333333333334], [4.0, 166.93333333333337], [5.0, 171.4], [6.0, 9000.875], [7.0, 34992.48387096774], [8.0, 9041.32], [9.0, 206.63636363636363], [10.0, 220.38461538461544], [11.0, 229.02325581395348], [12.0, 19211.244444444445], [13.0, 4468.78], [14.0, 5056.522727272727], [15.0, 5421.09756097561], [16.0, 371.84615384615375], [17.0, 410.6388888888888], [18.0, 428.8611111111111], [19.0, 475.4166666666668], [20.0, 516.7741935483871], [21.0, 14181.609756097561], [22.0, 5054.477272727273], [23.0, 425.1020408163265], [24.0, 2881.1555555555556], [25.0, 584.0526315789473], [26.0, 516.3636363636364], [27.0, 503.75000000000006], [28.0, 4376.018518518518], [29.0, 525.458333333333], [30.0, 9465.204545454544], [31.0, 678.3571428571428], [32.0, 592.5999999999999], [33.0, 606.2156862745098], [34.0, 617.4680851063829], [35.0, 704.9374999999999], [36.0, 12128.381818181817], [37.0, 1662.8305084745762], [38.0, 569.578125], [39.0, 604.6833333333335], [40.0, 640.9166666666666], [41.0, 701.8235294117649], [42.0, 680.9464285714282], [43.0, 2204.04], [44.0, 826.3725490196081], [45.0, 2294.843137254902], [46.0, 1985.4237288135594], [47.0, 7116.016393442624], [48.0, 1979.442307692308], [49.0, 2031.46], [50.0, 2380.292682926829], [51.0, 2573.0697674418607], [52.0, 2481.5476190476193], [53.0, 1323.2903225806451], [54.0, 1550.3333333333333], [55.0, 3243.216216216216], [56.0, 2922.5116279069766], [57.0, 2747.818181818182], [58.0, 2772.195652173913], [59.0, 1256.4999999999998], [60.0, 4534.18], [61.0, 1969.803571428572], [62.0, 2097.9811320754707], [63.0, 2094.5087719298244], [64.0, 2162.0000000000005], [65.0, 1978.6379310344823], [66.0, 2388.5555555555557], [67.0, 1367.9750000000004], [68.0, 3927.3488372093025], [69.0, 2708.1555555555556], [70.0, 2423.2352941176473], [71.0, 1273.183673469388], [72.0, 1301.7547169811317], [73.0, 1279.232142857143], [74.0, 1192.8225806451605], [75.0, 1158.3749999999993], [76.0, 2707.111111111111], [77.0, 1541.804347826087], [78.0, 6712.351851851852], [79.0, 3289.854545454545], [80.0, 4343.5526315789475], [81.0, 3896.52], [82.0, 5481.341463414635], [83.0, 1719.2244897959185], [84.0, 3919.1489361702133], [85.0, 3787.5714285714284], [86.0, 3580.3773584905666], [87.0, 3910.478260869565], [88.0, 3989.152173913044], [89.0, 4168.840909090909], [90.0, 2013.783783783784], [91.0, 6515.617021276596], [92.0, 4633.8536585365855], [93.0, 4365.911111111111], [94.0, 4459.738095238095], [95.0, 2088.6904761904757], [96.0, 2845.4871794871797], [97.0, 2603.907407407407], [98.0, 1814.510204081633], [99.0, 1841.183673469388], [100.0, 1973.6744186046512], [101.0, 2054.1063829787236], [102.0, 2160.7000000000003], [103.0, 10166.07142857143], [104.0, 2486.5], [105.0, 2428.153846153846], [106.0, 2617.6222222222223], [107.0, 2513.6363636363635], [108.0, 2392.574074074074], [109.0, 2401.37037037037], [110.0, 2403.166666666667], [111.0, 2643.808510638298], [112.0, 2543.0], [113.0, 2646.787234042554], [114.0, 2246.136363636364], [115.0, 2275.703703703703], [116.0, 2148.444444444444], [117.0, 2686.310344827587], [118.0, 2453.1224489795923], [119.0, 3291.3999999999996], [120.0, 2498.211538461539], [121.0, 2120.7460317460313], [122.0, 2111.340909090909], [123.0, 2360.813953488372], [124.0, 2529.804347826087], [125.0, 2587.272727272726], [126.0, 2632.5319148936173], [127.0, 2636.7727272727266], [128.0, 2706.774193548387], [129.0, 3117.8965517241377], [130.0, 4834.541666666667], [131.0, 4515.119047619048], [132.0, 5186.018867924528], [133.0, 2861.3137254901962], [134.0, 2801.0212765957453], [135.0, 2665.7096774193546], [136.0, 2674.9791666666674], [137.0, 2647.980769230769], [138.0, 2650.4666666666667], [139.0, 2486.2916666666665], [140.0, 2823.5833333333326], [141.0, 2516.7291666666665], [142.0, 3045.28], [143.0, 3279.4791666666674], [144.0, 3105.977272727273], [145.0, 3160.2978723404267], [146.0, 4026.42], [147.0, 3446.215686274509], [148.0, 3023.408163265305], [149.0, 2974.6923076923076], [150.0, 3457.4651162790706], [151.0, 3156.37037037037], [152.0, 2824.456140350877], [153.0, 2837.4230769230767], [154.0, 3265.177777777778], [155.0, 3180.567567567568], [156.0, 3848.2195121951218], [157.0, 3641.895833333333], [158.0, 3452.2549019607845], [159.0, 3663.116279069767], [160.0, 3003.073170731707], [161.0, 3637.530612244897], [162.0, 3788.5853658536585], [163.0, 4036.2666666666673], [164.0, 3073.7083333333326], [165.0, 3514.8490566037735], [166.0, 2916.1842105263163], [167.0, 3821.06976744186], [168.0, 3921.9761904761913], [169.0, 3349.3272727272733], [170.0, 3311.55737704918], [171.0, 2587.6190476190477], [172.0, 2553.1666666666674], [173.0, 2635.2105263157887], [174.0, 2700.735849056604], [175.0, 2564.8245614035095], [176.0, 2526.6964285714284], [177.0, 2812.886792452831], [178.0, 3037.888888888889], [179.0, 3506.6249999999995], [180.0, 3736.888888888889], [181.0, 3620.236842105263], [182.0, 3824.6363636363635], [183.0, 3612.0476190476193], [184.0, 3409.853658536586], [185.0, 3697.5517241379307], [186.0, 3473.472222222222], [187.0, 3695.3658536585363], [188.0, 3608.8461538461534], [189.0, 9264.675675675675], [190.0, 14340.048780487805], [191.0, 7611.924528301886], [192.0, 3268.8367346938785], [193.0, 2933.3333333333326], [194.0, 2952.938775510204], [195.0, 3030.386363636363], [196.0, 3216.13953488372], [197.0, 4516.930232558139], [198.0, 3220.9756097560976], [199.0, 3925.833333333333], [200.0, 3626.8076923076924], [201.0, 4021.96], [202.0, 3680.666666666667], [203.0, 3465.095238095238], [204.0, 3089.3518518518513], [205.0, 2830.9636363636364], [206.0, 2756.0999999999985], [207.0, 2596.8035714285716], [208.0, 2451.8529411764703], [209.0, 2241.6557377049176], [210.0, 2381.28813559322], [211.0, 3973.6756756756754], [212.0, 3272.6111111111113], [213.0, 3486.454545454546], [214.0, 3530.9799999999996], [215.0, 3636.5641025641025], [216.0, 3328.4999999999995], [217.0, 3739.9374999999995], [218.0, 3894.0714285714284], [219.0, 4112.22], [220.0, 3271.0196078431377], [221.0, 3475.2173913043475], [222.0, 2976.9473684210525], [223.0, 4133.354166666666], [224.0, 4097.1960784313715], [225.0, 3306.177777777778], [226.0, 3064.627906976744], [227.0, 3298.459459459459], [228.0, 3648.088235294117], [229.0, 3923.640000000001], [230.0, 5890.073170731707], [231.0, 4115.900000000001], [232.0, 3893.7288135593217], [233.0, 2733.523809523809], [234.0, 3543.9534883720935], [235.0, 3151.738095238095], [236.0, 5023.055555555557], [237.0, 3007.059999999999], [238.0, 3131.524590163935], [239.0, 2804.1568627450984], [240.0, 3014.0740740740744], [241.0, 3210.40625], [242.0, 3030.9999999999995], [243.0, 2693.3404255319156], [244.0, 4075.448275862069], [245.0, 2817.3269230769233], [246.0, 2746.933333333333], [247.0, 3742.5227272727275], [248.0, 6166.241379310345], [249.0, 3711.3103448275865], [250.0, 5829.375000000001], [251.0, 4254.896551724139], [252.0, 7062.888888888889], [253.0, 4638.375], [254.0, 8879.224489795919], [255.0, 4418.160000000002], [257.0, 3987.2682926829266], [256.0, 4653.183673469388], [258.0, 6392.577777777778], [259.0, 3610.5499999999997], [260.0, 3705.7173913043475], [261.0, 7135.294117647063], [262.0, 8055.813559322034], [263.0, 7920.659999999995], [264.0, 3567.5098039215695], [270.0, 3623.714285714286], [271.0, 3471.6153846153843], [268.0, 4693.807692307693], [269.0, 4501.254901960784], [265.0, 5903.411764705881], [266.0, 3071.830188679245], [267.0, 5694.79245283019], [273.0, 7381.56896551724], [272.0, 3773.4081632653065], [274.0, 4310.180327868851], [275.0, 5277.676923076925], [276.0, 2686.916666666667], [277.0, 4452.258064516129], [278.0, 3514.508196721312], [279.0, 9450.149999999998], [280.0, 3379.820000000001], [286.0, 4684.620689655172], [287.0, 7217.515151515152], [284.0, 4622.91111111111], [285.0, 7325.25], [281.0, 9797.21818181818], [282.0, 4477.387096774193], [283.0, 22036.41509433963], [289.0, 11478.926829268292], [288.0, 5029.209302325583], [290.0, 4642.058823529412], [291.0, 5337.500000000001], [292.0, 4774.426229508194], [293.0, 6753.610169491523], [294.0, 4580.884057971016], [295.0, 7322.918032786886], [296.0, 5528.838709677419], [302.0, 5161.470588235294], [303.0, 5537.833333333332], [300.0, 3910.545454545455], [301.0, 6242.46], [297.0, 4157.020408163265], [298.0, 5947.975609756098], [299.0, 8470.173076923078], [305.0, 4064.75], [304.0, 3841.0909090909086], [306.0, 4781.130434782607], [307.0, 4355.596153846154], [308.0, 3415.519999999999], [309.0, 6847.850574712645], [310.0, 4417.836065573771], [311.0, 4235.142857142857], [312.0, 4374.687499999999], [318.0, 5219.378787878789], [319.0, 4805.645833333335], [316.0, 10369.019607843136], [317.0, 5706.328358208955], [313.0, 3400.3728813559323], [314.0, 4968.685185185186], [315.0, 4134.872340425533], [321.0, 5507.999999999999], [320.0, 6464.25], [322.0, 4018.382352941176], [323.0, 3948.744186046512], [324.0, 6358.711538461537], [325.0, 5557.75806451613], [326.0, 6646.603448275862], [327.0, 5652.4137931034475], [328.0, 3470.2456140350896], [334.0, 5223.182926829269], [335.0, 4454.653333333334], [332.0, 5003.01818181818], [333.0, 3885.241379310346], [329.0, 3917.6885245901626], [330.0, 3388.4827586206898], [331.0, 3909.8367346938776], [337.0, 3826.4576271186443], [336.0, 3396.3584905660377], [338.0, 3509.4423076923085], [339.0, 4353.014492753622], [340.0, 3097.7499999999995], [341.0, 4419.472727272727], [342.0, 5074.333333333333], [343.0, 5620.469387755103], [344.0, 5492.883333333332], [350.0, 4074.313253012049], [351.0, 8235.435483870968], [348.0, 4505.561643835619], [349.0, 5504.049180327866], [345.0, 3714.163636363636], [346.0, 4517.149253731345], [347.0, 4328.683544303799], [353.0, 4338.666666666667], [352.0, 4098.1639344262285], [354.0, 3375.1777777777775], [355.0, 3937.391304347826], [356.0, 4984.142857142855], [357.0, 5389.566037735847], [358.0, 4959.272727272726], [359.0, 6008.754385964912], [360.0, 4598.403846153846], [366.0, 4268.946428571429], [367.0, 4760.870967741934], [364.0, 3868.745454545456], [365.0, 7341.619047619048], [361.0, 5214.863636363635], [362.0, 4100.553571428571], [363.0, 6175.835820895522], [369.0, 4789.108108108108], [368.0, 3412.4166666666665], [370.0, 5173.577464788733], [371.0, 4424.2807017543855], [372.0, 6700.44155844156], [373.0, 4029.4062500000014], [374.0, 4165.25974025974], [375.0, 3674.75806451613], [376.0, 2865.934426229508], [382.0, 5193.267605633801], [383.0, 8330.718750000004], [380.0, 3163.8235294117635], [381.0, 3151.3103448275874], [377.0, 4257.591549295774], [378.0, 4110.432835820897], [379.0, 3706.1132075471705], [385.0, 11497.358024691359], [384.0, 4023.5862068965525], [386.0, 4557.352941176471], [387.0, 10384.953125], [388.0, 5466.379310344828], [389.0, 3856.3148148148152], [390.0, 5372.966101694917], [391.0, 4842.538461538464], [392.0, 3944.708333333334], [398.0, 4352.25], [399.0, 5407.948051948052], [396.0, 6949.711538461539], [397.0, 4234.763157894738], [393.0, 4618.754385964911], [394.0, 4688.212121212121], [395.0, 3204.180327868852], [401.0, 5469.080000000002], [400.0, 5992.027027027029], [402.0, 3575.597014925372], [403.0, 4517.235294117648], [404.0, 5121.588235294118], [405.0, 4158.344262295083], [406.0, 4254.600000000001], [407.0, 3971.517857142857], [408.0, 4180.551020408164], [414.0, 5571.058823529412], [415.0, 4248.272727272729], [412.0, 4670.882352941177], [413.0, 5699.973333333332], [409.0, 4180.017241379311], [410.0, 3761.2500000000005], [411.0, 3864.6451612903224], [417.0, 3485.0169491525426], [416.0, 5809.98717948718], [418.0, 3187.878787878788], [419.0, 3983.90909090909], [420.0, 3973.433333333334], [421.0, 4720.655737704918], [422.0, 3974.634615384616], [423.0, 4328.166666666669], [424.0, 3978.0], [430.0, 5232.927536231884], [431.0, 4410.567567567568], [428.0, 4832.735849056603], [429.0, 4884.199999999999], [425.0, 5268.409836065573], [426.0, 6058.69230769231], [427.0, 4683.7169811320755], [433.0, 4044.4999999999995], [432.0, 3692.0461538461545], [434.0, 4894.569230769232], [435.0, 3139.053571428572], [436.0, 3587.023255813953], [437.0, 4906.954545454545], [438.0, 4761.11111111111], [439.0, 5853.142857142858], [440.0, 5249.732142857141], [446.0, 4125.951612903225], [447.0, 3702.084745762712], [444.0, 5362.068965517241], [445.0, 22308.153846153833], [441.0, 6517.237499999997], [442.0, 5276.224489795919], [443.0, 5124.964285714284], [449.0, 4895.616666666665], [448.0, 3926.6379310344832], [450.0, 4933.283582089552], [451.0, 4315.057142857144], [452.0, 5024.233766233765], [453.0, 12047.8125], [454.0, 5548.662337662337], [455.0, 4320.294871794872], [456.0, 3426.593220338983], [462.0, 5502.339622641509], [463.0, 4035.557377049181], [460.0, 3625.5862068965516], [461.0, 5174.88], [457.0, 4324.468750000001], [458.0, 3699.19298245614], [459.0, 4840.361702127661], [465.0, 4532.579710144928], [464.0, 6277.614285714287], [466.0, 4879.583333333332], [467.0, 5093.549999999999], [468.0, 4024.894736842105], [469.0, 4299.393442622951], [470.0, 5547.058823529413], [471.0, 3402.2727272727266], [472.0, 3697.3333333333326], [478.0, 4213.7750000000015], [479.0, 6050.917808219178], [476.0, 9101.254237288136], [477.0, 6067.607142857142], [473.0, 5510.761194029848], [474.0, 4983.887096774193], [475.0, 4634.169811320755], [481.0, 6812.064516129032], [480.0, 3464.967213114755], [482.0, 18351.081967213115], [483.0, 4762.268656716419], [484.0, 5749.76388888889], [485.0, 4357.493506493509], [486.0, 3971.1025641025644], [487.0, 2526.4897959183672], [488.0, 3658.483870967743], [494.0, 6735.62068965517], [495.0, 3660.945454545455], [492.0, 5186.211267605632], [493.0, 4726.30985915493], [489.0, 4391.753846153845], [490.0, 4102.378048780488], [491.0, 3496.048387096774], [496.0, 5692.016666666668], [497.0, 3413.6511627906975], [498.0, 4283.944444444446], [499.0, 3322.962962962964], [500.0, 6633.13473100047]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[314.85095712800626, 4786.552535013126]], "isOverall": false, "label": "Diarios-Aggregated", "isController": false}, {"data": [[2.0, 40.0], [3.0, 34.0], [4.0, 26.0], [5.0, 42.0], [6.0, 34.0], [7.0, 105998.5], [8.0, 35.0], [9.0, 21.0], [10.0, 19.0], [11.0, 25.0], [12.0, 35.0], [13.0, 29.0], [14.0, 40.0], [15.0, 102.0], [16.0, 175.0], [17.0, 194.0], [18.0, 172.0], [19.0, 216.0], [20.0, 269.0], [21.0, 93447.66666666667], [22.0, 219.0], [23.0, 99595.5], [24.0, 292.0], [25.0, 407.0], [26.0, 267.0], [27.0, 237.0], [28.0, 544.0], [29.0, 329.0], [30.0, 52973.5], [31.0, 415.0], [32.0, 405.0], [33.0, 445.0], [34.0, 417.0], [35.0, 432.0], [36.0, 523.0], [37.0, 412.0], [38.0, 335.0], [39.0, 417.0], [40.0, 37214.5], [41.0, 590.0], [42.0, 470.0], [43.0, 513.0], [44.0, 604.0], [45.0, 627.0], [46.0, 572.0], [47.0, 37291.0], [48.0, 650.0], [49.0, 741.0], [50.0, 934.0], [51.0, 848.0], [53.0, 1062.0], [54.0, 30146.0], [55.0, 1193.0], [56.0, 1092.5], [58.0, 1028.0], [59.0, 68633.0], [60.0, 957.0], [61.0, 764.0], [62.0, 850.0], [63.0, 827.0], [64.0, 889.0], [66.0, 1276.0], [67.0, 1149.0], [68.0, 1319.0], [69.0, 1308.0], [70.0, 1193.0], [71.0, 27173.5], [72.0, 27178.0], [73.0, 1040.0], [74.0, 27107.5], [76.0, 1096.0], [77.0, 1323.0], [78.0, 1311.0], [79.0, 1149.0], [80.0, 1380.0], [81.0, 1647.0], [82.0, 1375.0], [83.0, 35890.333333333336], [85.0, 1426.0], [86.0, 1450.0], [87.0, 1406.0], [88.0, 1546.0], [89.0, 1596.0], [90.0, 1856.0], [91.0, 1872.0], [92.0, 1807.0], [93.0, 1841.0], [94.0, 1875.0], [95.0, 53685.5], [96.0, 1974.0], [97.0, 1740.0], [98.0, 1508.0], [99.0, 1657.0], [100.0, 1776.0], [101.0, 1867.0], [102.0, 1898.0], [103.0, 1802.0], [104.0, 1706.0], [105.0, 1781.0], [106.0, 1821.0], [107.0, 1747.0], [108.0, 1647.0], [109.0, 1659.0], [110.0, 1841.0], [111.0, 1875.0], [112.0, 1892.0], [113.0, 1943.0], [115.0, 2052.0], [114.0, 27689.0], [116.0, 1928.0], [117.0, 1973.0], [118.0, 1950.0], [120.0, 2003.5], [121.0, 1878.0], [122.0, 2008.0], [124.0, 2406.0], [125.0, 2353.0], [126.0, 2429.0], [127.0, 2360.0], [128.0, 2661.0], [130.0, 3212.0], [131.0, 3094.5], [132.0, 14438.0], [133.0, 2448.0], [134.0, 2326.0], [135.0, 2313.0], [136.0, 2165.0], [137.0, 2160.0], [138.0, 2303.0], [139.0, 2186.0], [140.0, 2201.0], [141.0, 2278.0], [142.0, 2424.0], [143.0, 2645.0], [144.0, 2850.0], [145.0, 2780.0], [147.0, 2639.0], [151.0, 4334.0], [152.0, 2714.0], [153.0, 2749.0], [154.0, 5588.0], [157.0, 4848.0], [158.0, 4656.0], [159.0, 3745.0], [162.0, 2957.0], [163.0, 5034.5], [165.0, 2642.0], [168.0, 3662.0], [169.0, 11311.0], [170.0, 9229.0], [172.0, 2343.0], [175.0, 9736.0], [176.0, 5871.0], [178.0, 4460.5], [180.0, 11668.0], [181.0, 6141.0], [183.0, 4120.0], [184.0, 3219.0], [185.0, 3681.0], [186.0, 3550.0], [189.0, 3530.0], [191.0, 3430.0], [190.0, 215040.0], [192.0, 11744.333333333334], [195.0, 4717.5], [196.0, 2920.0], [198.0, 4409.0], [199.0, 53613.0], [202.0, 3283.0], [203.0, 6255.0], [205.0, 5972.333333333334], [207.0, 2226.0], [204.0, 10266.0], [208.0, 8175.0], [209.0, 5988.5], [212.0, 16383.0], [213.0, 3359.0], [214.0, 3260.0], [215.0, 21632.0], [217.0, 11005.5], [218.0, 10533.0], [219.0, 12109.333333333334], [221.0, 8856.0], [222.0, 20660.666666666664], [223.0, 2914.3333333333335], [224.0, 2926.5], [225.0, 13203.0], [228.0, 3417.0], [230.0, 9469.5], [231.0, 4143.0], [232.0, 4357.5], [235.0, 2.0], [236.0, 2949.0], [238.0, 16577.4], [239.0, 2514.5], [240.0, 4819.0], [242.0, 3379.5], [244.0, 1.0], [245.0, 7905.5], [246.0, 9854.5], [248.0, 3282.0], [250.0, 58699.0], [252.0, 9085.0], [253.0, 4462.0], [254.0, 55560.5], [255.0, 6925.666666666667], [257.0, 8500.5], [256.0, 9320.0], [258.0, 106986.0], [268.0, 17766.0], [269.0, 3862.5], [270.0, 15497.0], [260.0, 3331.0], [261.0, 8176.0], [262.0, 11322.0], [263.0, 3050.0], [264.0, 2705.0], [265.0, 67483.0], [266.0, 8494.5], [267.0, 3952.6666666666665], [273.0, 8745.5], [272.0, 8275.0], [274.0, 4528.0], [275.0, 13635.0], [277.0, 3905.0], [278.0, 7010.2], [279.0, 0.0], [280.0, 7674.0], [287.0, 11075.5], [284.0, 8583.5], [285.0, 4559.333333333333], [281.0, 18208.0], [282.0, 7419.0], [283.0, 3818.0], [289.0, 59064.0], [291.0, 35496.33333333333], [300.0, 9090.0], [301.0, 7395.833333333334], [302.0, 7495.0], [303.0, 8111.0], [292.0, 12246.666666666668], [293.0, 3125.0], [294.0, 8827.75], [295.0, 6739.0], [296.0, 61284.0], [297.0, 18249.5], [298.0, 9055.5], [299.0, 20170.0], [306.0, 13323.666666666666], [304.0, 8964.0], [307.0, 5534.333333333334], [316.0, 13832.5], [317.0, 11266.0], [318.0, 7946.0], [319.0, 9265.5], [309.0, 7162.0], [310.0, 6407.333333333334], [311.0, 10094.666666666666], [312.0, 5318.142857142857], [313.0, 7704.0], [314.0, 8026.0], [315.0, 7977.0], [321.0, 7898.166666666667], [320.0, 29934.8], [323.0, 13094.0], [322.0, 2987.0], [332.0, 11037.666666666666], [333.0, 4041.0], [334.0, 10164.333333333334], [335.0, 8548.0], [324.0, 6536.666666666667], [325.0, 11134.5], [326.0, 3659.0], [327.0, 7743.571428571428], [328.0, 13312.0], [329.0, 3463.0], [330.0, 8703.0], [337.0, 8102.666666666666], [336.0, 12288.0], [338.0, 3866.5], [339.0, 2554.5], [340.0, 5576.0], [342.0, 11262.0], [343.0, 10052.0], [344.0, 14222.666666666666], [350.0, 10441.0], [351.0, 6660.0], [348.0, 6341.0], [349.0, 7540.0], [345.0, 7030.0], [346.0, 7926.5], [347.0, 12489.666666666666], [353.0, 8041.0], [352.0, 6551.6], [354.0, 11746.0], [355.0, 3920.0], [356.0, 8892.25], [357.0, 7813.0], [358.0, 13900.333333333334], [359.0, 11107.666666666666], [360.0, 11874.0], [367.0, 12211.5], [365.0, 7252.333333333333], [366.0, 6278.5], [361.0, 6902.666666666667], [362.0, 7360.25], [363.0, 13180.0], [369.0, 8831.0], [368.0, 2870.5], [370.0, 13312.0], [371.0, 8402.0], [372.0, 13103.285714285714], [373.0, 10226.5], [374.0, 5335.75], [375.0, 10451.0], [376.0, 2283.0], [383.0, 37788.0], [381.0, 6817.0], [382.0, 7362.166666666667], [377.0, 10213.5], [378.0, 5410.333333333333], [379.0, 9088.25], [385.0, 18364.166666666668], [384.0, 2455.3333333333335], [386.0, 6838.75], [396.0, 13169.0], [397.0, 5410.5], [399.0, 12697.6], [388.0, 7664.5], [389.0, 11083.5], [390.0, 13054.0], [391.0, 11010.0], [392.0, 9748.333333333334], [393.0, 6841.666666666667], [394.0, 6736.142857142857], [402.0, 6735.5], [401.0, 6991.285714285714], [403.0, 11947.666666666666], [412.0, 8020.5], [413.0, 10094.333333333334], [414.0, 12798.0], [415.0, 14336.0], [404.0, 8556.5], [405.0, 13824.0], [406.0, 8610.5], [407.0, 18687.0], [408.0, 5601.0], [409.0, 9088.0], [410.0, 2838.0], [411.0, 6453.666666666667], [417.0, 3971.5], [416.0, 9895.285714285714], [418.0, 8215.0], [419.0, 10496.0], [420.0, 2765.0], [421.0, 7400.0], [422.0, 4556.333333333333], [423.0, 9822.0], [424.0, 7679.0], [430.0, 8098.0], [431.0, 5627.0], [428.0, 12187.666666666666], [429.0, 13195.0], [425.0, 8464.5], [426.0, 10764.25], [433.0, 10421.333333333334], [432.0, 4116.8], [434.0, 8517.5], [435.0, 9870.333333333334], [436.0, 3554.666666666667], [437.0, 0.0], [438.0, 7076.5], [439.0, 9045.666666666668], [440.0, 2151.6666666666665], [446.0, 8572.0], [447.0, 6439.0], [444.0, 8776.5], [445.0, 62718.66666666667], [441.0, 8249.4], [442.0, 1445.5], [449.0, 8877.5], [448.0, 2610.0], [450.0, 1.0], [451.0, 7085.0], [452.0, 12253.5], [453.0, 37250.0], [454.0, 7648.5], [455.0, 9695.666666666666], [456.0, 5225.666666666667], [463.0, 9214.0], [461.0, 8190.333333333334], [462.0, 7932.0], [457.0, 14190.333333333334], [458.0, 8045.25], [459.0, 10169.0], [465.0, 3481.3333333333335], [464.0, 12002.4], [466.0, 13820.0], [467.0, 3908.5], [469.0, 8387.0], [470.0, 12797.0], [471.0, 8034.0], [473.0, 7618.333333333334], [476.0, 13300.0], [477.0, 7527.333333333333], [479.0, 6930.666666666667], [474.0, 7251.0], [482.0, 83682.5], [480.0, 3352.0], [483.0, 10825.285714285716], [492.0, 2393.0], [493.0, 7070.8], [494.0, 10060.666666666668], [495.0, 6195.0], [484.0, 2957.0], [485.0, 9903.75], [486.0, 10624.0], [487.0, 11436.5], [488.0, 2331.0], [489.0, 13844.5], [490.0, 9216.75], [491.0, 8921.5], [496.0, 8533.666666666668], [498.0, 7168.0], [499.0, 3105.0], [500.0, 22187.985714285707], [1.0, 102.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[329.64910536779297, 12955.99005964213]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 334.0833333333333, "minX": 1.53939948E12, "maxY": 3479276.566666667, "series": [{"data": [[1.53939984E12, 3223501.8333333335], [1.53939954E12, 3285301.2666666666], [1.53940002E12, 3479276.566666667], [1.5393999E12, 3336079.9833333334], [1.53939972E12, 3095949.0833333335], [1.53940008E12, 3043795.6666666665], [1.53939978E12, 3328706.6], [1.5393996E12, 3264630.1166666667], [1.53939996E12, 3316389.3], [1.53939966E12, 3246402.683333333], [1.53940014E12, 30767.6], [1.53939948E12, 415962.6666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939984E12, 16627.366666666665], [1.53939954E12, 12733.316666666668], [1.53940002E12, 17184.683333333334], [1.5393999E12, 16962.983333333334], [1.53939972E12, 12109.25], [1.53940008E12, 15237.833333333334], [1.53939978E12, 14618.633333333333], [1.5393996E12, 12732.683333333332], [1.53939996E12, 17171.033333333333], [1.53939966E12, 12489.1], [1.53940014E12, 334.0833333333333], [1.53939948E12, 1667.7666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940014E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 36.5, "minX": 1.53939948E12, "maxY": 119324.22727272728, "series": [{"data": [[1.53939984E12, 8415.254777070068], [1.53939954E12, 2208.586206896551], [1.53940002E12, 17591.565217391304], [1.5393999E12, 8597.792857142864], [1.53939972E12, 5887.583333333333], [1.53940008E12, 28564.693333333333], [1.53939978E12, 7731.784313725491], [1.5393996E12, 3459.689655172414], [1.53939996E12, 8981.129251700686], [1.53939966E12, 4530.212765957448], [1.53940014E12, 59859.75], [1.53939948E12, 1303.6923076923078]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939984E12, 4799.931549295771], [1.53939954E12, 868.9237620235159], [1.53940002E12, 5691.56907981967], [1.5393999E12, 4848.66293056315], [1.53939972E12, 3395.067242674674], [1.53940008E12, 8680.673746312685], [1.53939978E12, 5447.506149479647], [1.5393996E12, 2069.574278589236], [1.53939996E12, 5470.422065600436], [1.53939966E12, 2942.509005763684], [1.53940014E12, 119324.22727272728], [1.53939948E12, 222.5859154929577]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53939984E12, 9626.710691823899], [1.53939954E12, 667.186440677966], [1.53940002E12, 12607.040404040405], [1.5393999E12, 9151.635135135137], [1.53939972E12, 10837.029850746265], [1.53940008E12, 45086.71428571429], [1.53939978E12, 13703.078260869568], [1.5393996E12, 1843.2166666666674], [1.53939996E12, 11694.923076923078], [1.53939966E12, 5017.489361702128], [1.53940014E12, 102653.08333333334], [1.53939948E12, 36.5]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940014E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 36.35714285714286, "minX": 1.53939948E12, "maxY": 119324.16666666669, "series": [{"data": [[1.53939984E12, 8415.248407643317], [1.53939954E12, 2208.586206896551], [1.53940002E12, 17591.547826086957], [1.5393999E12, 8597.792857142864], [1.53939972E12, 5887.566666666668], [1.53940008E12, 28564.666666666664], [1.53939978E12, 7731.784313725491], [1.5393996E12, 3459.689655172414], [1.53939996E12, 8981.129251700686], [1.53939966E12, 4530.212765957448], [1.53940014E12, 59859.5], [1.53939948E12, 1303.6923076923078]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939984E12, 4799.537746478875], [1.53939954E12, 868.4164588528681], [1.53940002E12, 5691.184301246345], [1.5393999E12, 4848.296336796063], [1.53939972E12, 3394.5822689706997], [1.53940008E12, 8680.268731563416], [1.53939978E12, 5447.053295490382], [1.5393996E12, 2069.097256857852], [1.53939996E12, 5470.07590132828], [1.53939966E12, 2941.9942363112323], [1.53940014E12, 119324.16666666669], [1.53939948E12, 222.149295774648]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53939984E12, 9626.691823899373], [1.53939954E12, 667.1525423728813], [1.53940002E12, 12607.030303030304], [1.5393999E12, 9151.614864864867], [1.53939972E12, 10837.029850746265], [1.53940008E12, 45086.69999999999], [1.53939978E12, 13703.060869565217], [1.5393996E12, 1843.2166666666674], [1.53939996E12, 11694.916666666657], [1.53939966E12, 5017.489361702128], [1.53940014E12, 102653.08333333334], [1.53939948E12, 36.35714285714286]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940014E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53939948E12, "maxY": 3.8571428571428577, "series": [{"data": [[1.53939984E12, 0.4458598726114648], [1.53939954E12, 0.0], [1.53940002E12, 0.36521739130434794], [1.5393999E12, 0.4285714285714286], [1.53939972E12, 0.65], [1.53940008E12, 0.3866666666666667], [1.53939978E12, 0.6274509803921566], [1.5393996E12, 0.17241379310344826], [1.53939996E12, 0.37414965986394566], [1.53939966E12, 0.6382978723404253], [1.53940014E12, 0.75], [1.53939948E12, 0.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939984E12, 0.34309859154929595], [1.53939954E12, 0.23263270395440006], [1.53940002E12, 0.37841421373641015], [1.5393999E12, 0.39775833788955733], [1.53939972E12, 0.4158527422990233], [1.53940008E12, 0.34218289085545683], [1.53939978E12, 0.3784295175023653], [1.5393996E12, 0.4071962949768433], [1.53939996E12, 0.33992952019517525], [1.53939966E12, 0.49171469740633855], [1.53940014E12, 0.196969696969697], [1.53939948E12, 0.09014084507042258]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53939984E12, 0.3459119496855344], [1.53939954E12, 1.0847457627118644], [1.53940002E12, 0.39393939393939403], [1.5393999E12, 0.6621621621621618], [1.53939972E12, 0.8805970149253729], [1.53940008E12, 0.14285714285714293], [1.53939978E12, 0.6347826086956521], [1.5393996E12, 0.966666666666667], [1.53939996E12, 0.44230769230769246], [1.53939966E12, 0.9361702127659575], [1.53940014E12, 0.33333333333333337], [1.53939948E12, 3.8571428571428577]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940014E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.53939948E12, "maxY": 108517.0, "series": [{"data": [[1.53939984E12, 10816.0], [1.53939954E12, 4163.0], [1.53940002E12, 108517.0], [1.5393999E12, 29548.0], [1.53939972E12, 59513.0], [1.53940008E12, 106133.0], [1.53939978E12, 61759.0], [1.5393996E12, 5706.0], [1.53939996E12, 58507.0], [1.53939966E12, 26449.0], [1.53940014E12, 106810.0], [1.53939948E12, 3108.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939984E12, 2185.0], [1.53939954E12, 102.0], [1.53940002E12, 2204.0], [1.5393999E12, 2283.0], [1.53939972E12, 2032.0], [1.53940008E12, 2304.0], [1.53939978E12, 2174.0], [1.5393996E12, 940.0], [1.53939996E12, 2161.0], [1.53939966E12, 2160.0], [1.53940014E12, 53275.0], [1.53939948E12, 19.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939984E12, 3547.0], [1.53939954E12, 1368.1], [1.53940002E12, 3599.9000000000015], [1.5393999E12, 3532.0], [1.53939972E12, 3457.0], [1.53940008E12, 3602.0], [1.53939978E12, 3507.0], [1.5393996E12, 2351.3], [1.53939996E12, 3576.0], [1.53939966E12, 3204.0], [1.53940014E12, 3608.9000000000015], [1.53939948E12, 346.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939984E12, 5791.049999999992], [1.53939954E12, 2164.599999999986], [1.53940002E12, 6367.0], [1.5393999E12, 6021.960000000006], [1.53939972E12, 4847.779999999999], [1.53940008E12, 8347.340000000106], [1.53939978E12, 5472.560000000012], [1.5393996E12, 3441.49], [1.53939996E12, 6226.790000000034], [1.53939966E12, 4145.17], [1.53940014E12, 9540.850000000024], [1.53939948E12, 1539.0800000000058]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939984E12, 3880.0499999999993], [1.53939954E12, 1496.0], [1.53940002E12, 4078.0], [1.5393999E12, 3904.9500000000007], [1.53939972E12, 3720.449999999999], [1.53940008E12, 4241.950000000001], [1.53939978E12, 3839.3499999999985], [1.5393996E12, 2684.2999999999993], [1.53939996E12, 4015.0], [1.53939966E12, 3501.0], [1.53940014E12, 4277.950000000001], [1.53939948E12, 511.69999999999766]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940014E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 140032.0, "series": [{"data": [[64.0, 2984.0], [65.0, 2820.0], [66.0, 2843.0], [1.0, 58058.0], [47.0, 2896.5], [46.0, 3039.0], [6.0, 210.0], [48.0, 1454.0], [56.0, 2947.5], [58.0, 2847.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 9984.0], [65.0, 12287.0], [66.0, 11776.0], [1.0, 140032.0], [47.0, 1.0], [46.0, 13304.0], [6.0, 2.0], [48.0, 1.0], [56.0, 13289.0], [58.0, 13312.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 66.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 140032.0, "series": [{"data": [[64.0, 2984.0], [65.0, 2819.0], [66.0, 2842.0], [1.0, 58058.0], [47.0, 2896.0], [46.0, 3038.0], [6.0, 209.0], [48.0, 1454.0], [56.0, 2947.5], [58.0, 2847.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[64.0, 9984.0], [65.0, 12287.0], [66.0, 11776.0], [1.0, 140032.0], [47.0, 1.0], [46.0, 13304.0], [6.0, 2.0], [48.0, 1.0], [56.0, 13289.0], [58.0, 13312.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 66.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.6, "minX": 1.53939948E12, "maxY": 67.53333333333333, "series": [{"data": [[1.53939984E12, 65.43333333333334], [1.53939954E12, 49.733333333333334], [1.53940002E12, 66.51666666666667], [1.5393999E12, 66.76666666666667], [1.53939972E12, 47.483333333333334], [1.53940008E12, 51.95], [1.53939978E12, 57.46666666666667], [1.5393996E12, 49.75], [1.53939996E12, 67.53333333333333], [1.53939966E12, 48.833333333333336], [1.53939948E12, 6.6]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940008E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939948E12, "maxY": 49.68333333333333, "series": [{"data": [[1.53939984E12, 46.2], [1.53939954E12, 47.65], [1.53940002E12, 49.68333333333333], [1.5393999E12, 49.0], [1.53939972E12, 44.65], [1.53940008E12, 43.46666666666667], [1.53939978E12, 46.916666666666664], [1.5393996E12, 47.68333333333333], [1.53939996E12, 48.416666666666664], [1.53939966E12, 46.983333333333334], [1.53940014E12, 0.48333333333333334], [1.53939948E12, 6.133333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939984E12, 0.9], [1.53939954E12, 0.9666666666666667], [1.53940002E12, 0.4166666666666667], [1.5393999E12, 0.6833333333333333], [1.53939972E12, 0.8166666666666667], [1.53940008E12, 0.2], [1.53939978E12, 0.7833333333333333], [1.5393996E12, 0.95], [1.53939996E12, 0.8], [1.53939966E12, 0.7833333333333333], [1.53939948E12, 0.21666666666666667]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939984E12, 17.1], [1.53939954E12, 0.11666666666666667], [1.53940002E12, 16.15], [1.5393999E12, 15.833333333333334], [1.53939972E12, 0.8833333333333333], [1.53940008E12, 15.05], [1.53939978E12, 8.583333333333334], [1.5393996E12, 0.1], [1.53939996E12, 17.116666666666667], [1.53939966E12, 0.06666666666666667], [1.53940014E12, 0.8333333333333334], [1.53939948E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939984E12, 0.23333333333333334], [1.53940002E12, 0.16666666666666666], [1.5393999E12, 0.25], [1.53939972E12, 0.13333333333333333], [1.53940008E12, 0.2], [1.53939978E12, 0.18333333333333332], [1.5393996E12, 0.016666666666666666], [1.53939996E12, 0.2], [1.53940014E12, 0.05]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940014E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939948E12, "maxY": 49.25, "series": [{"data": [[1.53939984E12, 0.7666666666666667], [1.53939954E12, 0.9833333333333333], [1.53940002E12, 0.43333333333333335], [1.5393999E12, 0.85], [1.53939972E12, 0.8333333333333334], [1.53940008E12, 0.36666666666666664], [1.53939978E12, 0.8833333333333333], [1.5393996E12, 0.9833333333333333], [1.53939996E12, 0.8166666666666667], [1.53939966E12, 0.7833333333333333], [1.53940014E12, 0.08333333333333333], [1.53939948E12, 0.23333333333333334]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939984E12, 13.733333333333333], [1.53939954E12, 0.11666666666666667], [1.53940002E12, 13.6], [1.5393999E12, 12.816666666666666], [1.53939972E12, 0.55], [1.53940008E12, 13.4], [1.53939978E12, 6.816666666666666], [1.5393996E12, 0.08333333333333333], [1.53939996E12, 13.883333333333333], [1.53939966E12, 0.06666666666666667], [1.53940014E12, 0.7], [1.53939948E12, 0.016666666666666666]], "isOverall": false, "label": "Diarios-failure", "isController": false}, {"data": [[1.53939984E12, 0.9], [1.53939954E12, 0.9666666666666667], [1.53940002E12, 0.4166666666666667], [1.5393999E12, 0.6833333333333333], [1.53939972E12, 0.8166666666666667], [1.53940008E12, 0.2], [1.53939978E12, 0.7833333333333333], [1.5393996E12, 0.95], [1.53939996E12, 0.8], [1.53939966E12, 0.7833333333333333], [1.53939948E12, 0.21666666666666667]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939984E12, 45.43333333333333], [1.53939954E12, 46.666666666666664], [1.53940002E12, 49.25], [1.5393999E12, 48.15], [1.53939972E12, 43.81666666666667], [1.53940008E12, 43.1], [1.53939978E12, 46.03333333333333], [1.5393996E12, 46.7], [1.53939996E12, 47.6], [1.53939966E12, 46.2], [1.53940014E12, 0.4], [1.53939948E12, 5.9]], "isOverall": false, "label": "Diarios-success", "isController": false}, {"data": [[1.53939984E12, 1.8833333333333333], [1.53940002E12, 1.2166666666666666], [1.5393999E12, 1.6166666666666667], [1.53939972E12, 0.2833333333333333], [1.53940008E12, 0.8], [1.53939978E12, 1.0333333333333334], [1.5393996E12, 0.016666666666666666], [1.53939996E12, 1.7833333333333334], [1.53940014E12, 0.11666666666666667]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939984E12, 1.7166666666666666], [1.53940002E12, 1.5], [1.5393999E12, 1.65], [1.53939972E12, 0.18333333333333332], [1.53940008E12, 1.05], [1.53939978E12, 0.9166666666666666], [1.5393996E12, 0.016666666666666666], [1.53939996E12, 1.65], [1.53940014E12, 0.06666666666666667]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940014E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
