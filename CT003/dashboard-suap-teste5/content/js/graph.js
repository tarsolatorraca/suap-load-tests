/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 219135.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 22.0], [4.8, 591.0], [4.9, 613.0], [5.0, 676.0], [5.1, 736.0], [5.2, 739.0], [5.3, 748.0], [5.4, 780.0], [5.5, 791.0], [5.6, 825.0], [5.7, 869.0], [5.8, 902.0], [5.9, 965.0], [6.0, 1098.0], [6.1, 1176.0], [6.2, 1231.0], [6.3, 1371.0], [6.4, 1375.0], [6.5, 1375.0], [6.6, 1377.0], [6.7, 1409.0], [6.8, 1441.0], [6.9, 1484.0], [7.0, 1594.0], [7.1, 1780.0], [7.2, 1797.0], [7.3, 1803.0], [7.4, 1813.0], [7.5, 1824.0], [7.6, 1825.0], [7.7, 1832.0], [7.8, 1839.0], [7.9, 1849.0], [8.0, 1858.0], [8.1, 1937.0], [8.2, 1959.0], [8.3, 1966.0], [8.4, 1982.0], [8.5, 1989.0], [8.6, 2008.0], [8.7, 2015.0], [8.8, 2037.0], [8.9, 2039.0], [9.0, 2046.0], [9.1, 2050.0], [9.2, 2053.0], [9.3, 2068.0], [9.4, 2070.0], [9.5, 2109.0], [9.6, 2186.0], [9.7, 2231.0], [9.8, 2294.0], [9.9, 2312.0], [10.0, 2318.0], [10.1, 2322.0], [10.2, 2323.0], [10.3, 2335.0], [10.4, 2337.0], [10.5, 2386.0], [10.6, 2405.0], [10.7, 2410.0], [10.8, 2413.0], [10.9, 2440.0], [11.0, 2442.0], [11.1, 2446.0], [11.2, 2454.0], [11.3, 2475.0], [11.4, 2482.0], [11.5, 2514.0], [11.6, 2519.0], [11.7, 2538.0], [11.8, 2548.0], [11.9, 2562.0], [12.0, 2570.0], [12.1, 2591.0], [12.2, 2593.0], [12.3, 2616.0], [12.4, 2640.0], [12.5, 2647.0], [12.6, 2658.0], [12.7, 2662.0], [12.8, 2671.0], [12.9, 2684.0], [13.0, 2688.0], [13.1, 2692.0], [13.2, 2707.0], [13.3, 2728.0], [13.4, 2729.0], [13.5, 2730.0], [13.6, 2730.0], [13.7, 2732.0], [13.8, 2739.0], [13.9, 2740.0], [14.0, 2749.0], [14.1, 2750.0], [14.2, 2753.0], [14.3, 2762.0], [14.4, 2772.0], [14.5, 2778.0], [14.6, 2789.0], [14.7, 2789.0], [14.8, 2791.0], [14.9, 2797.0], [15.0, 2797.0], [15.1, 2808.0], [15.2, 2809.0], [15.3, 2809.0], [15.4, 2813.0], [15.5, 2820.0], [15.6, 2823.0], [15.7, 2837.0], [15.8, 2848.0], [15.9, 2852.0], [16.0, 2860.0], [16.1, 2921.0], [16.2, 2933.0], [16.3, 2934.0], [16.4, 2936.0], [16.5, 2942.0], [16.6, 2942.0], [16.7, 2945.0], [16.8, 2946.0], [16.9, 2958.0], [17.0, 2958.0], [17.1, 2960.0], [17.2, 2961.0], [17.3, 2965.0], [17.4, 2965.0], [17.5, 2970.0], [17.6, 2974.0], [17.7, 2981.0], [17.8, 2989.0], [17.9, 2992.0], [18.0, 3000.0], [18.1, 3001.0], [18.2, 3002.0], [18.3, 3003.0], [18.4, 3005.0], [18.5, 3016.0], [18.6, 3016.0], [18.7, 3019.0], [18.8, 3025.0], [18.9, 3032.0], [19.0, 3033.0], [19.1, 3033.0], [19.2, 3036.0], [19.3, 3036.0], [19.4, 3038.0], [19.5, 3038.0], [19.6, 3045.0], [19.7, 3050.0], [19.8, 3058.0], [19.9, 3062.0], [20.0, 3065.0], [20.1, 3070.0], [20.2, 3087.0], [20.3, 3087.0], [20.4, 3094.0], [20.5, 3106.0], [20.6, 3107.0], [20.7, 3112.0], [20.8, 3112.0], [20.9, 3114.0], [21.0, 3115.0], [21.1, 3128.0], [21.2, 3131.0], [21.3, 3134.0], [21.4, 3137.0], [21.5, 3144.0], [21.6, 3145.0], [21.7, 3167.0], [21.8, 3168.0], [21.9, 3170.0], [22.0, 3170.0], [22.1, 3189.0], [22.2, 3191.0], [22.3, 3198.0], [22.4, 3199.0], [22.5, 3207.0], [22.6, 3210.0], [22.7, 3223.0], [22.8, 3226.0], [22.9, 3228.0], [23.0, 3243.0], [23.1, 3250.0], [23.2, 3251.0], [23.3, 3254.0], [23.4, 3254.0], [23.5, 3256.0], [23.6, 3256.0], [23.7, 3259.0], [23.8, 3264.0], [23.9, 3264.0], [24.0, 3275.0], [24.1, 3279.0], [24.2, 3281.0], [24.3, 3289.0], [24.4, 3290.0], [24.5, 3300.0], [24.6, 3306.0], [24.7, 3322.0], [24.8, 3332.0], [24.9, 3334.0], [25.0, 3336.0], [25.1, 3352.0], [25.2, 3366.0], [25.3, 3367.0], [25.4, 3370.0], [25.5, 3371.0], [25.6, 3372.0], [25.7, 3411.0], [25.8, 3412.0], [25.9, 3426.0], [26.0, 3427.0], [26.1, 3433.0], [26.2, 3436.0], [26.3, 3452.0], [26.4, 3454.0], [26.5, 3458.0], [26.6, 3463.0], [26.7, 3470.0], [26.8, 3472.0], [26.9, 3477.0], [27.0, 3491.0], [27.1, 3496.0], [27.2, 3498.0], [27.3, 3500.0], [27.4, 3503.0], [27.5, 3509.0], [27.6, 3517.0], [27.7, 3517.0], [27.8, 3520.0], [27.9, 3524.0], [28.0, 3526.0], [28.1, 3532.0], [28.2, 3538.0], [28.3, 3543.0], [28.4, 3550.0], [28.5, 3556.0], [28.6, 3571.0], [28.7, 3577.0], [28.8, 3586.0], [28.9, 3588.0], [29.0, 3597.0], [29.1, 3597.0], [29.2, 3598.0], [29.3, 3617.0], [29.4, 3618.0], [29.5, 3619.0], [29.6, 3620.0], [29.7, 3621.0], [29.8, 3629.0], [29.9, 3632.0], [30.0, 3634.0], [30.1, 3636.0], [30.2, 3648.0], [30.3, 3668.0], [30.4, 3668.0], [30.5, 3673.0], [30.6, 3685.0], [30.7, 3698.0], [30.8, 3724.0], [30.9, 3725.0], [31.0, 3747.0], [31.1, 3750.0], [31.2, 3754.0], [31.3, 3758.0], [31.4, 3769.0], [31.5, 3773.0], [31.6, 3790.0], [31.7, 3798.0], [31.8, 3803.0], [31.9, 3803.0], [32.0, 3823.0], [32.1, 3830.0], [32.2, 3832.0], [32.3, 3845.0], [32.4, 3846.0], [32.5, 3846.0], [32.6, 3852.0], [32.7, 3866.0], [32.8, 3869.0], [32.9, 3873.0], [33.0, 3876.0], [33.1, 3902.0], [33.2, 3903.0], [33.3, 3907.0], [33.4, 3920.0], [33.5, 3926.0], [33.6, 3929.0], [33.7, 3939.0], [33.8, 3941.0], [33.9, 3956.0], [34.0, 3972.0], [34.1, 3973.0], [34.2, 3976.0], [34.3, 3999.0], [34.4, 4016.0], [34.5, 4020.0], [34.6, 4049.0], [34.7, 4051.0], [34.8, 4064.0], [34.9, 4073.0], [35.0, 4084.0], [35.1, 4092.0], [35.2, 4103.0], [35.3, 4125.0], [35.4, 4141.0], [35.5, 4142.0], [35.6, 4143.0], [35.7, 4182.0], [35.8, 4196.0], [35.9, 4205.0], [36.0, 4208.0], [36.1, 4210.0], [36.2, 4241.0], [36.3, 4250.0], [36.4, 4269.0], [36.5, 4292.0], [36.6, 4335.0], [36.7, 4342.0], [36.8, 4355.0], [36.9, 4355.0], [37.0, 4358.0], [37.1, 4364.0], [37.2, 4393.0], [37.3, 4394.0], [37.4, 4405.0], [37.5, 4406.0], [37.6, 4428.0], [37.7, 4428.0], [37.8, 4430.0], [37.9, 4434.0], [38.0, 4445.0], [38.1, 4448.0], [38.2, 4449.0], [38.3, 4475.0], [38.4, 4479.0], [38.5, 4488.0], [38.6, 4491.0], [38.7, 4502.0], [38.8, 4505.0], [38.9, 4507.0], [39.0, 4523.0], [39.1, 4547.0], [39.2, 4562.0], [39.3, 4577.0], [39.4, 4577.0], [39.5, 4580.0], [39.6, 4588.0], [39.7, 4597.0], [39.8, 4603.0], [39.9, 4619.0], [40.0, 4636.0], [40.1, 4639.0], [40.2, 4641.0], [40.3, 4647.0], [40.4, 4649.0], [40.5, 4652.0], [40.6, 4653.0], [40.7, 4662.0], [40.8, 4668.0], [40.9, 4678.0], [41.0, 4688.0], [41.1, 4725.0], [41.2, 4732.0], [41.3, 4732.0], [41.4, 4736.0], [41.5, 4738.0], [41.6, 4747.0], [41.7, 4758.0], [41.8, 4759.0], [41.9, 4780.0], [42.0, 4784.0], [42.1, 4788.0], [42.2, 4792.0], [42.3, 4817.0], [42.4, 4819.0], [42.5, 4819.0], [42.6, 4819.0], [42.7, 4830.0], [42.8, 4833.0], [42.9, 4841.0], [43.0, 4842.0], [43.1, 4847.0], [43.2, 4872.0], [43.3, 4885.0], [43.4, 4895.0], [43.5, 4897.0], [43.6, 4897.0], [43.7, 4900.0], [43.8, 4901.0], [43.9, 4907.0], [44.0, 4910.0], [44.1, 4910.0], [44.2, 4923.0], [44.3, 4929.0], [44.4, 4931.0], [44.5, 4932.0], [44.6, 4967.0], [44.7, 4975.0], [44.8, 4980.0], [44.9, 4984.0], [45.0, 4992.0], [45.1, 4998.0], [45.2, 4999.0], [45.3, 5015.0], [45.4, 5027.0], [45.5, 5040.0], [45.6, 5047.0], [45.7, 5050.0], [45.8, 5073.0], [45.9, 5074.0], [46.0, 5082.0], [46.1, 5107.0], [46.2, 5110.0], [46.3, 5119.0], [46.4, 5125.0], [46.5, 5130.0], [46.6, 5151.0], [46.7, 5162.0], [46.8, 5180.0], [46.9, 5184.0], [47.0, 5185.0], [47.1, 5189.0], [47.2, 5204.0], [47.3, 5206.0], [47.4, 5207.0], [47.5, 5210.0], [47.6, 5213.0], [47.7, 5223.0], [47.8, 5224.0], [47.9, 5250.0], [48.0, 5295.0], [48.1, 5295.0], [48.2, 5301.0], [48.3, 5313.0], [48.4, 5318.0], [48.5, 5323.0], [48.6, 5356.0], [48.7, 5359.0], [48.8, 5360.0], [48.9, 5375.0], [49.0, 5390.0], [49.1, 5394.0], [49.2, 5424.0], [49.3, 5432.0], [49.4, 5434.0], [49.5, 5436.0], [49.6, 5459.0], [49.7, 5478.0], [49.8, 5479.0], [49.9, 5499.0], [50.0, 5511.0], [50.1, 5518.0], [50.2, 5523.0], [50.3, 5540.0], [50.4, 5546.0], [50.5, 5550.0], [50.6, 5550.0], [50.7, 5551.0], [50.8, 5559.0], [50.9, 5573.0], [51.0, 5574.0], [51.1, 5580.0], [51.2, 5585.0], [51.3, 5588.0], [51.4, 5613.0], [51.5, 5622.0], [51.6, 5628.0], [51.7, 5642.0], [51.8, 5652.0], [51.9, 5668.0], [52.0, 5685.0], [52.1, 5687.0], [52.2, 5692.0], [52.3, 5708.0], [52.4, 5713.0], [52.5, 5745.0], [52.6, 5779.0], [52.7, 5792.0], [52.8, 5824.0], [52.9, 5835.0], [53.0, 5837.0], [53.1, 5837.0], [53.2, 5844.0], [53.3, 5847.0], [53.4, 5847.0], [53.5, 5852.0], [53.6, 5931.0], [53.7, 5944.0], [53.8, 5947.0], [53.9, 5951.0], [54.0, 5962.0], [54.1, 6047.0], [54.2, 6049.0], [54.3, 6073.0], [54.4, 6128.0], [54.5, 6185.0], [54.6, 6196.0], [54.7, 6206.0], [54.8, 6226.0], [54.9, 6231.0], [55.0, 6350.0], [55.1, 6401.0], [55.2, 6403.0], [55.3, 6405.0], [55.4, 6416.0], [55.5, 6428.0], [55.6, 6432.0], [55.7, 6484.0], [55.8, 6492.0], [55.9, 6499.0], [56.0, 6583.0], [56.1, 6634.0], [56.2, 6645.0], [56.3, 6668.0], [56.4, 6694.0], [56.5, 6789.0], [56.6, 6834.0], [56.7, 6835.0], [56.8, 6894.0], [56.9, 6949.0], [57.0, 7044.0], [57.1, 7134.0], [57.2, 7164.0], [57.3, 7164.0], [57.4, 7167.0], [57.5, 7167.0], [57.6, 7167.0], [57.7, 7167.0], [57.8, 7167.0], [57.9, 7167.0], [58.0, 7168.0], [58.1, 7168.0], [58.2, 7168.0], [58.3, 7168.0], [58.4, 7168.0], [58.5, 7168.0], [58.6, 7168.0], [58.7, 7168.0], [58.8, 7172.0], [58.9, 7423.0], [59.0, 7423.0], [59.1, 7423.0], [59.2, 7423.0], [59.3, 7423.0], [59.4, 7424.0], [59.5, 7424.0], [59.6, 7424.0], [59.7, 7424.0], [59.8, 7424.0], [59.9, 7424.0], [60.0, 7424.0], [60.1, 7424.0], [60.2, 7424.0], [60.3, 7425.0], [60.4, 7427.0], [60.5, 7428.0], [60.6, 7428.0], [60.7, 7676.0], [60.8, 7679.0], [60.9, 7680.0], [61.0, 7680.0], [61.1, 7680.0], [61.2, 7680.0], [61.3, 7680.0], [61.4, 7683.0], [61.5, 7684.0], [61.6, 7707.0], [61.7, 7847.0], [61.8, 7919.0], [61.9, 7931.0], [62.0, 7931.0], [62.1, 7931.0], [62.2, 7932.0], [62.3, 7932.0], [62.4, 7935.0], [62.5, 7936.0], [62.6, 7936.0], [62.7, 7936.0], [62.8, 7939.0], [62.9, 7940.0], [63.0, 8188.0], [63.1, 8191.0], [63.2, 8191.0], [63.3, 8192.0], [63.4, 8192.0], [63.5, 8192.0], [63.6, 8192.0], [63.7, 8192.0], [63.8, 8192.0], [63.9, 8192.0], [64.0, 8196.0], [64.1, 8196.0], [64.2, 8277.0], [64.3, 8378.0], [64.4, 8418.0], [64.5, 8448.0], [64.6, 8448.0], [64.7, 8448.0], [64.8, 8617.0], [64.9, 8699.0], [65.0, 8700.0], [65.1, 8700.0], [65.2, 8703.0], [65.3, 8703.0], [65.4, 8703.0], [65.5, 8703.0], [65.6, 8703.0], [65.7, 8703.0], [65.8, 8704.0], [65.9, 8704.0], [66.0, 8704.0], [66.1, 8704.0], [66.2, 8704.0], [66.3, 8704.0], [66.4, 8704.0], [66.5, 8704.0], [66.6, 8704.0], [66.7, 8704.0], [66.8, 8704.0], [66.9, 8704.0], [67.0, 8704.0], [67.1, 8704.0], [67.2, 8704.0], [67.3, 8704.0], [67.4, 8704.0], [67.5, 8770.0], [67.6, 8772.0], [67.7, 8899.0], [67.8, 8964.0], [67.9, 9015.0], [68.0, 9215.0], [68.1, 9215.0], [68.2, 9215.0], [68.3, 9216.0], [68.4, 9216.0], [68.5, 9216.0], [68.6, 9216.0], [68.7, 9216.0], [68.8, 9216.0], [68.9, 9216.0], [69.0, 9216.0], [69.1, 9216.0], [69.2, 9216.0], [69.3, 9216.0], [69.4, 9216.0], [69.5, 9220.0], [69.6, 9220.0], [69.7, 9220.0], [69.8, 9472.0], [69.9, 9472.0], [70.0, 9476.0], [70.1, 9724.0], [70.2, 9724.0], [70.3, 9726.0], [70.4, 9727.0], [70.5, 9727.0], [70.6, 9727.0], [70.7, 9728.0], [70.8, 9728.0], [70.9, 9728.0], [71.0, 9728.0], [71.1, 9728.0], [71.2, 9728.0], [71.3, 9728.0], [71.4, 9728.0], [71.5, 9728.0], [71.6, 9728.0], [71.7, 9728.0], [71.8, 9732.0], [71.9, 9980.0], [72.0, 9984.0], [72.1, 9984.0], [72.2, 9984.0], [72.3, 9984.0], [72.4, 9984.0], [72.5, 9984.0], [72.6, 9984.0], [72.7, 9984.0], [72.8, 10117.0], [72.9, 10238.0], [73.0, 10240.0], [73.1, 10240.0], [73.2, 10240.0], [73.3, 10240.0], [73.4, 10244.0], [73.5, 10496.0], [73.6, 10496.0], [73.7, 10752.0], [73.8, 10752.0], [73.9, 10752.0], [74.0, 10752.0], [74.1, 10752.0], [74.2, 11004.0], [74.3, 11008.0], [74.4, 11264.0], [74.5, 11264.0], [74.6, 11264.0], [74.7, 11264.0], [74.8, 11264.0], [74.9, 11268.0], [75.0, 11268.0], [75.1, 11619.0], [75.2, 11775.0], [75.3, 11776.0], [75.4, 11776.0], [75.5, 11776.0], [75.6, 11776.0], [75.7, 11776.0], [75.8, 11776.0], [75.9, 11776.0], [76.0, 12032.0], [76.1, 12033.0], [76.2, 12284.0], [76.3, 12284.0], [76.4, 12286.0], [76.5, 12288.0], [76.6, 12288.0], [76.7, 12288.0], [76.8, 12289.0], [76.9, 12290.0], [77.0, 12292.0], [77.1, 12292.0], [77.2, 12544.0], [77.3, 12799.0], [77.4, 12800.0], [77.5, 12800.0], [77.6, 12800.0], [77.7, 12800.0], [77.8, 12800.0], [77.9, 12804.0], [78.0, 13056.0], [78.1, 13057.0], [78.2, 13059.0], [78.3, 13059.0], [78.4, 13184.0], [78.5, 13307.0], [78.6, 13307.0], [78.7, 13308.0], [78.8, 13308.0], [78.9, 13308.0], [79.0, 13308.0], [79.1, 13308.0], [79.2, 13308.0], [79.3, 13308.0], [79.4, 13308.0], [79.5, 13308.0], [79.6, 13308.0], [79.7, 13308.0], [79.8, 13308.0], [79.9, 13308.0], [80.0, 13308.0], [80.1, 13310.0], [80.2, 13310.0], [80.3, 13311.0], [80.4, 13311.0], [80.5, 13311.0], [80.6, 13311.0], [80.7, 13311.0], [80.8, 13311.0], [80.9, 13311.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13312.0], [83.1, 13312.0], [83.2, 13312.0], [83.3, 13312.0], [83.4, 13312.0], [83.5, 13312.0], [83.6, 13312.0], [83.7, 13312.0], [83.8, 13312.0], [83.9, 13312.0], [84.0, 13312.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13312.0], [85.8, 13312.0], [85.9, 13312.0], [86.0, 13312.0], [86.1, 13312.0], [86.2, 13312.0], [86.3, 13312.0], [86.4, 13312.0], [86.5, 13312.0], [86.6, 13312.0], [86.7, 13312.0], [86.8, 13312.0], [86.9, 13312.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13313.0], [87.9, 13313.0], [88.0, 13316.0], [88.1, 13316.0], [88.2, 13316.0], [88.3, 13316.0], [88.4, 13316.0], [88.5, 13316.0], [88.6, 13316.0], [88.7, 13316.0], [88.8, 13316.0], [88.9, 13316.0], [89.0, 13364.0], [89.1, 13429.0], [89.2, 13823.0], [89.3, 13823.0], [89.4, 13823.0], [89.5, 13824.0], [89.6, 13824.0], [89.7, 13824.0], [89.8, 13824.0], [89.9, 13824.0], [90.0, 13824.0], [90.1, 13824.0], [90.2, 13824.0], [90.3, 13824.0], [90.4, 13824.0], [90.5, 13824.0], [90.6, 13824.0], [90.7, 13824.0], [90.8, 13825.0], [90.9, 13828.0], [91.0, 13828.0], [91.1, 13828.0], [91.2, 13828.0], [91.3, 13828.0], [91.4, 13828.0], [91.5, 14080.0], [91.6, 14080.0], [91.7, 14080.0], [91.8, 14332.0], [91.9, 14332.0], [92.0, 14334.0], [92.1, 14335.0], [92.2, 14335.0], [92.3, 14335.0], [92.4, 14335.0], [92.5, 14335.0], [92.6, 14336.0], [92.7, 14336.0], [92.8, 14336.0], [92.9, 14336.0], [93.0, 14336.0], [93.1, 14336.0], [93.2, 14336.0], [93.3, 14336.0], [93.4, 14336.0], [93.5, 14336.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14336.0], [94.2, 14336.0], [94.3, 14339.0], [94.4, 14339.0], [94.5, 14588.0], [94.6, 14592.0], [94.7, 14592.0], [94.8, 14592.0], [94.9, 14596.0], [95.0, 14843.0], [95.1, 14847.0], [95.2, 15360.0], [95.3, 15360.0], [95.4, 15612.0], [95.5, 16253.0], [95.6, 16380.0], [95.7, 16384.0], [95.8, 16384.0], [95.9, 17152.0], [96.0, 17920.0], [96.1, 17920.0], [96.2, 18232.0], [96.3, 18688.0], [96.4, 18688.0], [96.5, 19456.0], [96.6, 22276.0], [96.7, 25057.0], [96.8, 26368.0], [96.9, 26368.0], [97.0, 26368.0], [97.1, 26368.0], [97.2, 35137.0], [97.3, 46588.0], [97.4, 57444.0], [97.5, 61467.0], [97.6, 66066.0], [97.7, 80896.0], [97.8, 95488.0], [97.9, 102912.0], [98.0, 102912.0], [98.1, 105463.0], [98.2, 105472.0], [98.3, 106240.0], [98.4, 110588.0], [98.5, 110591.0], [98.6, 110592.0], [98.7, 110592.0], [98.8, 110618.0], [98.9, 123392.0], [99.0, 125951.0], [99.1, 133376.0], [99.2, 133376.0], [99.3, 137988.0], [99.4, 139523.0], [99.5, 140800.0], [99.6, 147455.0], [99.7, 147456.0], [99.8, 192764.0], [99.9, 192764.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 84.0], [1.8, 100.0], [1.9, 107.0], [2.0, 114.0], [2.1, 164.0], [2.2, 185.0], [2.3, 198.0], [2.4, 216.0], [2.5, 237.0], [2.6, 251.0], [2.7, 259.0], [2.8, 269.0], [2.9, 280.0], [3.0, 296.0], [3.1, 309.0], [3.2, 320.0], [3.3, 331.0], [3.4, 343.0], [3.5, 354.0], [3.6, 368.0], [3.7, 378.0], [3.8, 390.0], [3.9, 405.0], [4.0, 421.0], [4.1, 435.0], [4.2, 449.0], [4.3, 473.0], [4.4, 489.0], [4.5, 502.0], [4.6, 513.0], [4.7, 532.0], [4.8, 552.0], [4.9, 572.0], [5.0, 588.0], [5.1, 605.0], [5.2, 625.0], [5.3, 642.0], [5.4, 662.0], [5.5, 673.0], [5.6, 683.0], [5.7, 696.0], [5.8, 706.0], [5.9, 716.0], [6.0, 725.0], [6.1, 736.0], [6.2, 746.0], [6.3, 758.0], [6.4, 767.0], [6.5, 775.0], [6.6, 783.0], [6.7, 790.0], [6.8, 801.0], [6.9, 813.0], [7.0, 823.0], [7.1, 834.0], [7.2, 845.0], [7.3, 854.0], [7.4, 862.0], [7.5, 872.0], [7.6, 882.0], [7.7, 893.0], [7.8, 905.0], [7.9, 916.0], [8.0, 928.0], [8.1, 936.0], [8.2, 946.0], [8.3, 957.0], [8.4, 970.0], [8.5, 980.0], [8.6, 993.0], [8.7, 1005.0], [8.8, 1019.0], [8.9, 1030.0], [9.0, 1043.0], [9.1, 1054.0], [9.2, 1067.0], [9.3, 1085.0], [9.4, 1105.0], [9.5, 1123.0], [9.6, 1144.0], [9.7, 1171.0], [9.8, 1206.0], [9.9, 1243.0], [10.0, 1264.0], [10.1, 1278.0], [10.2, 1290.0], [10.3, 1300.0], [10.4, 1308.0], [10.5, 1321.0], [10.6, 1335.0], [10.7, 1343.0], [10.8, 1351.0], [10.9, 1358.0], [11.0, 1366.0], [11.1, 1375.0], [11.2, 1384.0], [11.3, 1393.0], [11.4, 1407.0], [11.5, 1415.0], [11.6, 1428.0], [11.7, 1440.0], [11.8, 1451.0], [11.9, 1461.0], [12.0, 1473.0], [12.1, 1488.0], [12.2, 1504.0], [12.3, 1518.0], [12.4, 1528.0], [12.5, 1546.0], [12.6, 1564.0], [12.7, 1578.0], [12.8, 1588.0], [12.9, 1598.0], [13.0, 1610.0], [13.1, 1621.0], [13.2, 1629.0], [13.3, 1640.0], [13.4, 1650.0], [13.5, 1659.0], [13.6, 1671.0], [13.7, 1681.0], [13.8, 1698.0], [13.9, 1707.0], [14.0, 1722.0], [14.1, 1741.0], [14.2, 1760.0], [14.3, 1787.0], [14.4, 1807.0], [14.5, 1829.0], [14.6, 1855.0], [14.7, 1874.0], [14.8, 1891.0], [14.9, 1905.0], [15.0, 1920.0], [15.1, 1939.0], [15.2, 1952.0], [15.3, 1964.0], [15.4, 1978.0], [15.5, 1987.0], [15.6, 2002.0], [15.7, 2017.0], [15.8, 2029.0], [15.9, 2039.0], [16.0, 2051.0], [16.1, 2062.0], [16.2, 2075.0], [16.3, 2090.0], [16.4, 2099.0], [16.5, 2109.0], [16.6, 2118.0], [16.7, 2127.0], [16.8, 2133.0], [16.9, 2138.0], [17.0, 2143.0], [17.1, 2148.0], [17.2, 2154.0], [17.3, 2161.0], [17.4, 2167.0], [17.5, 2172.0], [17.6, 2176.0], [17.7, 2180.0], [17.8, 2186.0], [17.9, 2189.0], [18.0, 2193.0], [18.1, 2196.0], [18.2, 2199.0], [18.3, 2203.0], [18.4, 2207.0], [18.5, 2212.0], [18.6, 2216.0], [18.7, 2220.0], [18.8, 2224.0], [18.9, 2228.0], [19.0, 2231.0], [19.1, 2236.0], [19.2, 2239.0], [19.3, 2245.0], [19.4, 2248.0], [19.5, 2251.0], [19.6, 2255.0], [19.7, 2259.0], [19.8, 2262.0], [19.9, 2265.0], [20.0, 2268.0], [20.1, 2271.0], [20.2, 2275.0], [20.3, 2279.0], [20.4, 2282.0], [20.5, 2286.0], [20.6, 2290.0], [20.7, 2293.0], [20.8, 2296.0], [20.9, 2299.0], [21.0, 2302.0], [21.1, 2305.0], [21.2, 2308.0], [21.3, 2312.0], [21.4, 2314.0], [21.5, 2318.0], [21.6, 2321.0], [21.7, 2324.0], [21.8, 2327.0], [21.9, 2329.0], [22.0, 2331.0], [22.1, 2334.0], [22.2, 2337.0], [22.3, 2340.0], [22.4, 2343.0], [22.5, 2347.0], [22.6, 2350.0], [22.7, 2352.0], [22.8, 2355.0], [22.9, 2358.0], [23.0, 2362.0], [23.1, 2365.0], [23.2, 2367.0], [23.3, 2370.0], [23.4, 2372.0], [23.5, 2374.0], [23.6, 2377.0], [23.7, 2380.0], [23.8, 2382.0], [23.9, 2385.0], [24.0, 2388.0], [24.1, 2391.0], [24.2, 2394.0], [24.3, 2397.0], [24.4, 2399.0], [24.5, 2402.0], [24.6, 2405.0], [24.7, 2407.0], [24.8, 2410.0], [24.9, 2412.0], [25.0, 2415.0], [25.1, 2417.0], [25.2, 2419.0], [25.3, 2421.0], [25.4, 2424.0], [25.5, 2426.0], [25.6, 2429.0], [25.7, 2432.0], [25.8, 2435.0], [25.9, 2437.0], [26.0, 2439.0], [26.1, 2443.0], [26.2, 2445.0], [26.3, 2448.0], [26.4, 2450.0], [26.5, 2452.0], [26.6, 2455.0], [26.7, 2458.0], [26.8, 2460.0], [26.9, 2463.0], [27.0, 2466.0], [27.1, 2468.0], [27.2, 2470.0], [27.3, 2474.0], [27.4, 2476.0], [27.5, 2478.0], [27.6, 2480.0], [27.7, 2482.0], [27.8, 2484.0], [27.9, 2487.0], [28.0, 2488.0], [28.1, 2490.0], [28.2, 2492.0], [28.3, 2494.0], [28.4, 2497.0], [28.5, 2499.0], [28.6, 2502.0], [28.7, 2504.0], [28.8, 2507.0], [28.9, 2509.0], [29.0, 2511.0], [29.1, 2513.0], [29.2, 2516.0], [29.3, 2519.0], [29.4, 2521.0], [29.5, 2523.0], [29.6, 2526.0], [29.7, 2529.0], [29.8, 2531.0], [29.9, 2533.0], [30.0, 2535.0], [30.1, 2538.0], [30.2, 2540.0], [30.3, 2542.0], [30.4, 2544.0], [30.5, 2546.0], [30.6, 2548.0], [30.7, 2549.0], [30.8, 2552.0], [30.9, 2554.0], [31.0, 2556.0], [31.1, 2558.0], [31.2, 2560.0], [31.3, 2561.0], [31.4, 2563.0], [31.5, 2565.0], [31.6, 2567.0], [31.7, 2569.0], [31.8, 2571.0], [31.9, 2573.0], [32.0, 2575.0], [32.1, 2577.0], [32.2, 2579.0], [32.3, 2581.0], [32.4, 2583.0], [32.5, 2584.0], [32.6, 2586.0], [32.7, 2588.0], [32.8, 2590.0], [32.9, 2591.0], [33.0, 2593.0], [33.1, 2595.0], [33.2, 2596.0], [33.3, 2598.0], [33.4, 2600.0], [33.5, 2602.0], [33.6, 2604.0], [33.7, 2605.0], [33.8, 2607.0], [33.9, 2608.0], [34.0, 2610.0], [34.1, 2611.0], [34.2, 2613.0], [34.3, 2615.0], [34.4, 2616.0], [34.5, 2617.0], [34.6, 2619.0], [34.7, 2621.0], [34.8, 2622.0], [34.9, 2624.0], [35.0, 2626.0], [35.1, 2627.0], [35.2, 2628.0], [35.3, 2630.0], [35.4, 2632.0], [35.5, 2633.0], [35.6, 2635.0], [35.7, 2636.0], [35.8, 2637.0], [35.9, 2639.0], [36.0, 2640.0], [36.1, 2642.0], [36.2, 2643.0], [36.3, 2645.0], [36.4, 2646.0], [36.5, 2647.0], [36.6, 2649.0], [36.7, 2650.0], [36.8, 2652.0], [36.9, 2654.0], [37.0, 2655.0], [37.1, 2657.0], [37.2, 2658.0], [37.3, 2660.0], [37.4, 2662.0], [37.5, 2663.0], [37.6, 2665.0], [37.7, 2667.0], [37.8, 2669.0], [37.9, 2671.0], [38.0, 2672.0], [38.1, 2673.0], [38.2, 2674.0], [38.3, 2676.0], [38.4, 2677.0], [38.5, 2679.0], [38.6, 2680.0], [38.7, 2681.0], [38.8, 2683.0], [38.9, 2685.0], [39.0, 2687.0], [39.1, 2689.0], [39.2, 2690.0], [39.3, 2692.0], [39.4, 2694.0], [39.5, 2695.0], [39.6, 2696.0], [39.7, 2698.0], [39.8, 2699.0], [39.9, 2701.0], [40.0, 2702.0], [40.1, 2704.0], [40.2, 2705.0], [40.3, 2707.0], [40.4, 2708.0], [40.5, 2709.0], [40.6, 2711.0], [40.7, 2713.0], [40.8, 2714.0], [40.9, 2716.0], [41.0, 2717.0], [41.1, 2719.0], [41.2, 2720.0], [41.3, 2722.0], [41.4, 2724.0], [41.5, 2725.0], [41.6, 2727.0], [41.7, 2728.0], [41.8, 2730.0], [41.9, 2730.0], [42.0, 2731.0], [42.1, 2733.0], [42.2, 2734.0], [42.3, 2735.0], [42.4, 2737.0], [42.5, 2738.0], [42.6, 2740.0], [42.7, 2741.0], [42.8, 2742.0], [42.9, 2744.0], [43.0, 2746.0], [43.1, 2747.0], [43.2, 2749.0], [43.3, 2750.0], [43.4, 2751.0], [43.5, 2753.0], [43.6, 2754.0], [43.7, 2756.0], [43.8, 2758.0], [43.9, 2759.0], [44.0, 2761.0], [44.1, 2762.0], [44.2, 2764.0], [44.3, 2766.0], [44.4, 2768.0], [44.5, 2769.0], [44.6, 2771.0], [44.7, 2772.0], [44.8, 2774.0], [44.9, 2775.0], [45.0, 2777.0], [45.1, 2778.0], [45.2, 2780.0], [45.3, 2781.0], [45.4, 2782.0], [45.5, 2784.0], [45.6, 2785.0], [45.7, 2787.0], [45.8, 2788.0], [45.9, 2790.0], [46.0, 2792.0], [46.1, 2793.0], [46.2, 2794.0], [46.3, 2795.0], [46.4, 2797.0], [46.5, 2798.0], [46.6, 2800.0], [46.7, 2801.0], [46.8, 2803.0], [46.9, 2804.0], [47.0, 2805.0], [47.1, 2806.0], [47.2, 2808.0], [47.3, 2809.0], [47.4, 2811.0], [47.5, 2812.0], [47.6, 2813.0], [47.7, 2815.0], [47.8, 2816.0], [47.9, 2818.0], [48.0, 2818.0], [48.1, 2820.0], [48.2, 2822.0], [48.3, 2823.0], [48.4, 2824.0], [48.5, 2825.0], [48.6, 2827.0], [48.7, 2829.0], [48.8, 2830.0], [48.9, 2832.0], [49.0, 2833.0], [49.1, 2834.0], [49.2, 2835.0], [49.3, 2837.0], [49.4, 2838.0], [49.5, 2840.0], [49.6, 2841.0], [49.7, 2842.0], [49.8, 2843.0], [49.9, 2845.0], [50.0, 2847.0], [50.1, 2848.0], [50.2, 2850.0], [50.3, 2851.0], [50.4, 2852.0], [50.5, 2853.0], [50.6, 2855.0], [50.7, 2856.0], [50.8, 2858.0], [50.9, 2859.0], [51.0, 2860.0], [51.1, 2861.0], [51.2, 2863.0], [51.3, 2865.0], [51.4, 2866.0], [51.5, 2868.0], [51.6, 2869.0], [51.7, 2870.0], [51.8, 2872.0], [51.9, 2874.0], [52.0, 2875.0], [52.1, 2876.0], [52.2, 2878.0], [52.3, 2879.0], [52.4, 2880.0], [52.5, 2882.0], [52.6, 2884.0], [52.7, 2885.0], [52.8, 2887.0], [52.9, 2889.0], [53.0, 2890.0], [53.1, 2891.0], [53.2, 2893.0], [53.3, 2894.0], [53.4, 2895.0], [53.5, 2897.0], [53.6, 2898.0], [53.7, 2900.0], [53.8, 2902.0], [53.9, 2903.0], [54.0, 2904.0], [54.1, 2906.0], [54.2, 2907.0], [54.3, 2909.0], [54.4, 2910.0], [54.5, 2911.0], [54.6, 2913.0], [54.7, 2914.0], [54.8, 2916.0], [54.9, 2917.0], [55.0, 2918.0], [55.1, 2920.0], [55.2, 2921.0], [55.3, 2922.0], [55.4, 2924.0], [55.5, 2925.0], [55.6, 2927.0], [55.7, 2928.0], [55.8, 2930.0], [55.9, 2932.0], [56.0, 2933.0], [56.1, 2935.0], [56.2, 2936.0], [56.3, 2938.0], [56.4, 2939.0], [56.5, 2941.0], [56.6, 2943.0], [56.7, 2944.0], [56.8, 2945.0], [56.9, 2947.0], [57.0, 2949.0], [57.1, 2950.0], [57.2, 2952.0], [57.3, 2954.0], [57.4, 2955.0], [57.5, 2957.0], [57.6, 2958.0], [57.7, 2960.0], [57.8, 2962.0], [57.9, 2964.0], [58.0, 2965.0], [58.1, 2967.0], [58.2, 2968.0], [58.3, 2969.0], [58.4, 2970.0], [58.5, 2972.0], [58.6, 2973.0], [58.7, 2975.0], [58.8, 2976.0], [58.9, 2978.0], [59.0, 2979.0], [59.1, 2981.0], [59.2, 2983.0], [59.3, 2985.0], [59.4, 2986.0], [59.5, 2988.0], [59.6, 2989.0], [59.7, 2991.0], [59.8, 2992.0], [59.9, 2993.0], [60.0, 2995.0], [60.1, 2996.0], [60.2, 2997.0], [60.3, 3000.0], [60.4, 3001.0], [60.5, 3003.0], [60.6, 3005.0], [60.7, 3007.0], [60.8, 3008.0], [60.9, 3010.0], [61.0, 3012.0], [61.1, 3014.0], [61.2, 3015.0], [61.3, 3017.0], [61.4, 3019.0], [61.5, 3021.0], [61.6, 3022.0], [61.7, 3024.0], [61.8, 3025.0], [61.9, 3027.0], [62.0, 3028.0], [62.1, 3030.0], [62.2, 3032.0], [62.3, 3034.0], [62.4, 3035.0], [62.5, 3037.0], [62.6, 3039.0], [62.7, 3041.0], [62.8, 3042.0], [62.9, 3043.0], [63.0, 3045.0], [63.1, 3048.0], [63.2, 3050.0], [63.3, 3051.0], [63.4, 3053.0], [63.5, 3054.0], [63.6, 3056.0], [63.7, 3058.0], [63.8, 3059.0], [63.9, 3062.0], [64.0, 3064.0], [64.1, 3066.0], [64.2, 3068.0], [64.3, 3069.0], [64.4, 3071.0], [64.5, 3072.0], [64.6, 3075.0], [64.7, 3077.0], [64.8, 3078.0], [64.9, 3080.0], [65.0, 3082.0], [65.1, 3084.0], [65.2, 3086.0], [65.3, 3087.0], [65.4, 3089.0], [65.5, 3091.0], [65.6, 3093.0], [65.7, 3095.0], [65.8, 3096.0], [65.9, 3099.0], [66.0, 3101.0], [66.1, 3102.0], [66.2, 3103.0], [66.3, 3105.0], [66.4, 3107.0], [66.5, 3109.0], [66.6, 3111.0], [66.7, 3113.0], [66.8, 3114.0], [66.9, 3116.0], [67.0, 3117.0], [67.1, 3119.0], [67.2, 3121.0], [67.3, 3123.0], [67.4, 3125.0], [67.5, 3128.0], [67.6, 3130.0], [67.7, 3132.0], [67.8, 3135.0], [67.9, 3137.0], [68.0, 3139.0], [68.1, 3142.0], [68.2, 3144.0], [68.3, 3146.0], [68.4, 3148.0], [68.5, 3150.0], [68.6, 3152.0], [68.7, 3155.0], [68.8, 3157.0], [68.9, 3159.0], [69.0, 3161.0], [69.1, 3163.0], [69.2, 3165.0], [69.3, 3167.0], [69.4, 3169.0], [69.5, 3172.0], [69.6, 3174.0], [69.7, 3177.0], [69.8, 3179.0], [69.9, 3181.0], [70.0, 3184.0], [70.1, 3187.0], [70.2, 3190.0], [70.3, 3193.0], [70.4, 3194.0], [70.5, 3197.0], [70.6, 3200.0], [70.7, 3203.0], [70.8, 3205.0], [70.9, 3207.0], [71.0, 3210.0], [71.1, 3212.0], [71.2, 3215.0], [71.3, 3217.0], [71.4, 3220.0], [71.5, 3223.0], [71.6, 3225.0], [71.7, 3228.0], [71.8, 3230.0], [71.9, 3232.0], [72.0, 3234.0], [72.1, 3237.0], [72.2, 3242.0], [72.3, 3244.0], [72.4, 3248.0], [72.5, 3250.0], [72.6, 3253.0], [72.7, 3256.0], [72.8, 3259.0], [72.9, 3262.0], [73.0, 3265.0], [73.1, 3268.0], [73.2, 3271.0], [73.3, 3274.0], [73.4, 3277.0], [73.5, 3280.0], [73.6, 3283.0], [73.7, 3286.0], [73.8, 3290.0], [73.9, 3292.0], [74.0, 3296.0], [74.1, 3300.0], [74.2, 3303.0], [74.3, 3306.0], [74.4, 3309.0], [74.5, 3313.0], [74.6, 3315.0], [74.7, 3319.0], [74.8, 3322.0], [74.9, 3325.0], [75.0, 3328.0], [75.1, 3332.0], [75.2, 3335.0], [75.3, 3338.0], [75.4, 3341.0], [75.5, 3344.0], [75.6, 3347.0], [75.7, 3352.0], [75.8, 3355.0], [75.9, 3358.0], [76.0, 3362.0], [76.1, 3365.0], [76.2, 3369.0], [76.3, 3374.0], [76.4, 3378.0], [76.5, 3382.0], [76.6, 3385.0], [76.7, 3389.0], [76.8, 3392.0], [76.9, 3397.0], [77.0, 3401.0], [77.1, 3406.0], [77.2, 3410.0], [77.3, 3414.0], [77.4, 3419.0], [77.5, 3424.0], [77.6, 3428.0], [77.7, 3432.0], [77.8, 3436.0], [77.9, 3441.0], [78.0, 3446.0], [78.1, 3449.0], [78.2, 3454.0], [78.3, 3459.0], [78.4, 3465.0], [78.5, 3470.0], [78.6, 3476.0], [78.7, 3482.0], [78.8, 3487.0], [78.9, 3494.0], [79.0, 3501.0], [79.1, 3507.0], [79.2, 3515.0], [79.3, 3519.0], [79.4, 3527.0], [79.5, 3531.0], [79.6, 3540.0], [79.7, 3545.0], [79.8, 3551.0], [79.9, 3557.0], [80.0, 3564.0], [80.1, 3569.0], [80.2, 3577.0], [80.3, 3583.0], [80.4, 3590.0], [80.5, 3599.0], [80.6, 3608.0], [80.7, 3615.0], [80.8, 3622.0], [80.9, 3628.0], [81.0, 3639.0], [81.1, 3648.0], [81.2, 3657.0], [81.3, 3670.0], [81.4, 3679.0], [81.5, 3693.0], [81.6, 3705.0], [81.7, 3717.0], [81.8, 3731.0], [81.9, 3744.0], [82.0, 3760.0], [82.1, 3777.0], [82.2, 3794.0], [82.3, 3817.0], [82.4, 3836.0], [82.5, 3853.0], [82.6, 3868.0], [82.7, 3887.0], [82.8, 3908.0], [82.9, 3921.0], [83.0, 3936.0], [83.1, 3951.0], [83.2, 3964.0], [83.3, 3980.0], [83.4, 3996.0], [83.5, 4010.0], [83.6, 4029.0], [83.7, 4047.0], [83.8, 4062.0], [83.9, 4078.0], [84.0, 4099.0], [84.1, 4114.0], [84.2, 4134.0], [84.3, 4157.0], [84.4, 4180.0], [84.5, 4208.0], [84.6, 4237.0], [84.7, 4276.0], [84.8, 4311.0], [84.9, 4340.0], [85.0, 4376.0], [85.1, 4414.0], [85.2, 4452.0], [85.3, 4507.0], [85.4, 4595.0], [85.5, 4727.0], [85.6, 4929.0], [85.7, 5133.0], [85.8, 5438.0], [85.9, 5628.0], [86.0, 5818.0], [86.1, 5972.0], [86.2, 6174.0], [86.3, 6334.0], [86.4, 6524.0], [86.5, 6693.0], [86.6, 6974.0], [86.7, 7137.0], [86.8, 7165.0], [86.9, 7168.0], [87.0, 7168.0], [87.1, 7168.0], [87.2, 7172.0], [87.3, 7315.0], [87.4, 7423.0], [87.5, 7424.0], [87.6, 7424.0], [87.7, 7425.0], [87.8, 7428.0], [87.9, 7556.0], [88.0, 7679.0], [88.1, 7680.0], [88.2, 7680.0], [88.3, 7684.0], [88.4, 7912.0], [88.5, 7933.0], [88.6, 7936.0], [88.7, 7936.0], [88.8, 7968.0], [88.9, 8188.0], [89.0, 8191.0], [89.1, 8192.0], [89.2, 8192.0], [89.3, 8301.0], [89.4, 8447.0], [89.5, 8450.0], [89.6, 8700.0], [89.7, 8703.0], [89.8, 8704.0], [89.9, 8704.0], [90.0, 8704.0], [90.1, 8708.0], [90.2, 8752.0], [90.3, 8960.0], [90.4, 9079.0], [90.5, 9216.0], [90.6, 9216.0], [90.7, 9216.0], [90.8, 9265.0], [90.9, 9475.0], [91.0, 9723.0], [91.1, 9727.0], [91.2, 9728.0], [91.3, 9732.0], [91.4, 9877.0], [91.5, 9984.0], [91.6, 10054.0], [91.7, 10240.0], [91.8, 10248.0], [91.9, 10496.0], [92.0, 10748.0], [92.1, 10752.0], [92.2, 10983.0], [92.3, 11264.0], [92.4, 11408.0], [92.5, 11589.0], [92.6, 11776.0], [92.7, 12032.0], [92.8, 12288.0], [92.9, 12544.0], [93.0, 12800.0], [93.1, 13056.0], [93.2, 13097.0], [93.3, 13213.0], [93.4, 13253.0], [93.5, 13307.0], [93.6, 13308.0], [93.7, 13308.0], [93.8, 13308.0], [93.9, 13310.0], [94.0, 13311.0], [94.1, 13311.0], [94.2, 13311.0], [94.3, 13311.0], [94.4, 13312.0], [94.5, 13312.0], [94.6, 13312.0], [94.7, 13312.0], [94.8, 13312.0], [94.9, 13312.0], [95.0, 13312.0], [95.1, 13312.0], [95.2, 13312.0], [95.3, 13312.0], [95.4, 13312.0], [95.5, 13312.0], [95.6, 13312.0], [95.7, 13312.0], [95.8, 13312.0], [95.9, 13312.0], [96.0, 13312.0], [96.1, 13313.0], [96.2, 13314.0], [96.3, 13316.0], [96.4, 13316.0], [96.5, 13337.0], [96.6, 13347.0], [96.7, 13377.0], [96.8, 13409.0], [96.9, 13505.0], [97.0, 13687.0], [97.1, 13820.0], [97.2, 13824.0], [97.3, 13824.0], [97.4, 13824.0], [97.5, 13828.0], [97.6, 13957.0], [97.7, 14177.0], [97.8, 14335.0], [97.9, 14335.0], [98.0, 14336.0], [98.1, 14336.0], [98.2, 14391.0], [98.3, 14596.0], [98.4, 15108.0], [98.5, 16306.0], [98.6, 16384.0], [98.7, 17407.0], [98.8, 18432.0], [98.9, 21248.0], [99.0, 29187.0], [99.1, 54689.0], [99.2, 65528.0], [99.3, 79359.0], [99.4, 102911.0], [99.5, 106928.0], [99.6, 110877.0], [99.7, 126716.0], [99.8, 133377.0], [99.9, 146945.0], [100.0, 219135.0]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 2.0], [2.6, 18.0], [2.7, 19.0], [2.8, 20.0], [2.9, 22.0], [3.0, 27.0], [3.1, 28.0], [3.2, 30.0], [3.3, 33.0], [3.4, 34.0], [3.5, 34.0], [3.6, 36.0], [3.7, 44.0], [3.8, 44.0], [3.9, 50.0], [4.0, 75.0], [4.1, 76.0], [4.2, 87.0], [4.3, 130.0], [4.4, 152.0], [4.5, 152.0], [4.6, 169.0], [4.7, 188.0], [4.8, 207.0], [4.9, 211.0], [5.0, 256.0], [5.1, 270.0], [5.2, 298.0], [5.3, 301.0], [5.4, 387.0], [5.5, 451.0], [5.6, 479.0], [5.7, 498.0], [5.8, 525.0], [5.9, 539.0], [6.0, 541.0], [6.1, 552.0], [6.2, 557.0], [6.3, 557.0], [6.4, 572.0], [6.5, 581.0], [6.6, 608.0], [6.7, 619.0], [6.8, 620.0], [6.9, 650.0], [7.0, 670.0], [7.1, 694.0], [7.2, 729.0], [7.3, 752.0], [7.4, 754.0], [7.5, 764.0], [7.6, 783.0], [7.7, 788.0], [7.8, 798.0], [7.9, 811.0], [8.0, 824.0], [8.1, 842.0], [8.2, 893.0], [8.3, 896.0], [8.4, 989.0], [8.5, 1061.0], [8.6, 1063.0], [8.7, 1076.0], [8.8, 1076.0], [8.9, 1122.0], [9.0, 1158.0], [9.1, 1175.0], [9.2, 1193.0], [9.3, 1212.0], [9.4, 1220.0], [9.5, 1241.0], [9.6, 1248.0], [9.7, 1266.0], [9.8, 1284.0], [9.9, 1312.0], [10.0, 1344.0], [10.1, 1382.0], [10.2, 1383.0], [10.3, 1396.0], [10.4, 1404.0], [10.5, 1415.0], [10.6, 1435.0], [10.7, 1439.0], [10.8, 1460.0], [10.9, 1487.0], [11.0, 1510.0], [11.1, 1520.0], [11.2, 1556.0], [11.3, 1636.0], [11.4, 1657.0], [11.5, 1698.0], [11.6, 1715.0], [11.7, 1737.0], [11.8, 1751.0], [11.9, 1758.0], [12.0, 1764.0], [12.1, 1815.0], [12.2, 1831.0], [12.3, 1844.0], [12.4, 1860.0], [12.5, 1903.0], [12.6, 1927.0], [12.7, 1932.0], [12.8, 1942.0], [12.9, 1962.0], [13.0, 1969.0], [13.1, 1972.0], [13.2, 1989.0], [13.3, 1992.0], [13.4, 1996.0], [13.5, 2003.0], [13.6, 2022.0], [13.7, 2029.0], [13.8, 2035.0], [13.9, 2099.0], [14.0, 2114.0], [14.1, 2125.0], [14.2, 2136.0], [14.3, 2142.0], [14.4, 2154.0], [14.5, 2192.0], [14.6, 2208.0], [14.7, 2242.0], [14.8, 2245.0], [14.9, 2248.0], [15.0, 2255.0], [15.1, 2258.0], [15.2, 2260.0], [15.3, 2269.0], [15.4, 2276.0], [15.5, 2281.0], [15.6, 2285.0], [15.7, 2292.0], [15.8, 2293.0], [15.9, 2307.0], [16.0, 2312.0], [16.1, 2338.0], [16.2, 2345.0], [16.3, 2346.0], [16.4, 2356.0], [16.5, 2363.0], [16.6, 2373.0], [16.7, 2376.0], [16.8, 2390.0], [16.9, 2398.0], [17.0, 2401.0], [17.1, 2402.0], [17.2, 2417.0], [17.3, 2418.0], [17.4, 2419.0], [17.5, 2426.0], [17.6, 2429.0], [17.7, 2445.0], [17.8, 2454.0], [17.9, 2459.0], [18.0, 2459.0], [18.1, 2476.0], [18.2, 2498.0], [18.3, 2508.0], [18.4, 2509.0], [18.5, 2511.0], [18.6, 2512.0], [18.7, 2513.0], [18.8, 2516.0], [18.9, 2517.0], [19.0, 2518.0], [19.1, 2519.0], [19.2, 2523.0], [19.3, 2525.0], [19.4, 2529.0], [19.5, 2529.0], [19.6, 2529.0], [19.7, 2532.0], [19.8, 2536.0], [19.9, 2540.0], [20.0, 2541.0], [20.1, 2543.0], [20.2, 2549.0], [20.3, 2550.0], [20.4, 2551.0], [20.5, 2553.0], [20.6, 2553.0], [20.7, 2554.0], [20.8, 2556.0], [20.9, 2558.0], [21.0, 2558.0], [21.1, 2571.0], [21.2, 2571.0], [21.3, 2585.0], [21.4, 2587.0], [21.5, 2600.0], [21.6, 2606.0], [21.7, 2608.0], [21.8, 2613.0], [21.9, 2614.0], [22.0, 2616.0], [22.1, 2616.0], [22.2, 2623.0], [22.3, 2623.0], [22.4, 2624.0], [22.5, 2626.0], [22.6, 2635.0], [22.7, 2646.0], [22.8, 2649.0], [22.9, 2650.0], [23.0, 2656.0], [23.1, 2661.0], [23.2, 2667.0], [23.3, 2680.0], [23.4, 2688.0], [23.5, 2694.0], [23.6, 2694.0], [23.7, 2698.0], [23.8, 2699.0], [23.9, 2714.0], [24.0, 2724.0], [24.1, 2728.0], [24.2, 2729.0], [24.3, 2740.0], [24.4, 2744.0], [24.5, 2750.0], [24.6, 2764.0], [24.7, 2777.0], [24.8, 2788.0], [24.9, 2789.0], [25.0, 2792.0], [25.1, 2795.0], [25.2, 2800.0], [25.3, 2807.0], [25.4, 2808.0], [25.5, 2812.0], [25.6, 2814.0], [25.7, 2814.0], [25.8, 2819.0], [25.9, 2822.0], [26.0, 2829.0], [26.1, 2831.0], [26.2, 2836.0], [26.3, 2840.0], [26.4, 2841.0], [26.5, 2842.0], [26.6, 2848.0], [26.7, 2854.0], [26.8, 2872.0], [26.9, 2877.0], [27.0, 2877.0], [27.1, 2879.0], [27.2, 2902.0], [27.3, 2902.0], [27.4, 2914.0], [27.5, 2915.0], [27.6, 2919.0], [27.7, 2919.0], [27.8, 2923.0], [27.9, 2932.0], [28.0, 2939.0], [28.1, 2944.0], [28.2, 2953.0], [28.3, 2954.0], [28.4, 2955.0], [28.5, 2957.0], [28.6, 2969.0], [28.7, 2972.0], [28.8, 2975.0], [28.9, 2976.0], [29.0, 2986.0], [29.1, 2989.0], [29.2, 2997.0], [29.3, 3007.0], [29.4, 3012.0], [29.5, 3039.0], [29.6, 3044.0], [29.7, 3057.0], [29.8, 3057.0], [29.9, 3061.0], [30.0, 3070.0], [30.1, 3083.0], [30.2, 3112.0], [30.3, 3117.0], [30.4, 3123.0], [30.5, 3124.0], [30.6, 3138.0], [30.7, 3143.0], [30.8, 3172.0], [30.9, 3173.0], [31.0, 3185.0], [31.1, 3186.0], [31.2, 3196.0], [31.3, 3199.0], [31.4, 3213.0], [31.5, 3214.0], [31.6, 3215.0], [31.7, 3226.0], [31.8, 3227.0], [31.9, 3234.0], [32.0, 3250.0], [32.1, 3281.0], [32.2, 3302.0], [32.3, 3321.0], [32.4, 3321.0], [32.5, 3330.0], [32.6, 3342.0], [32.7, 3352.0], [32.8, 3352.0], [32.9, 3357.0], [33.0, 3360.0], [33.1, 3369.0], [33.2, 3390.0], [33.3, 3409.0], [33.4, 3413.0], [33.5, 3423.0], [33.6, 3427.0], [33.7, 3445.0], [33.8, 3447.0], [33.9, 3449.0], [34.0, 3481.0], [34.1, 3488.0], [34.2, 3500.0], [34.3, 3503.0], [34.4, 3533.0], [34.5, 3537.0], [34.6, 3551.0], [34.7, 3570.0], [34.8, 3576.0], [34.9, 3581.0], [35.0, 3582.0], [35.1, 3590.0], [35.2, 3619.0], [35.3, 3637.0], [35.4, 3640.0], [35.5, 3649.0], [35.6, 3728.0], [35.7, 3733.0], [35.8, 3791.0], [35.9, 3798.0], [36.0, 3811.0], [36.1, 3837.0], [36.2, 3873.0], [36.3, 3891.0], [36.4, 3897.0], [36.5, 3913.0], [36.6, 3916.0], [36.7, 3917.0], [36.8, 3958.0], [36.9, 4004.0], [37.0, 4007.0], [37.1, 4013.0], [37.2, 4026.0], [37.3, 4031.0], [37.4, 4038.0], [37.5, 4108.0], [37.6, 4152.0], [37.7, 4152.0], [37.8, 4188.0], [37.9, 4203.0], [38.0, 4207.0], [38.1, 4209.0], [38.2, 4224.0], [38.3, 4226.0], [38.4, 4233.0], [38.5, 4259.0], [38.6, 4323.0], [38.7, 4457.0], [38.8, 4468.0], [38.9, 4475.0], [39.0, 4486.0], [39.1, 4505.0], [39.2, 4609.0], [39.3, 4706.0], [39.4, 4780.0], [39.5, 4806.0], [39.6, 4842.0], [39.7, 4846.0], [39.8, 4849.0], [39.9, 4886.0], [40.0, 5034.0], [40.1, 5070.0], [40.2, 5098.0], [40.3, 5144.0], [40.4, 5146.0], [40.5, 5235.0], [40.6, 5276.0], [40.7, 5283.0], [40.8, 5434.0], [40.9, 5494.0], [41.0, 5545.0], [41.1, 5695.0], [41.2, 5844.0], [41.3, 5846.0], [41.4, 5917.0], [41.5, 5917.0], [41.6, 5929.0], [41.7, 5958.0], [41.8, 5984.0], [41.9, 5990.0], [42.0, 6017.0], [42.1, 6086.0], [42.2, 6106.0], [42.3, 6162.0], [42.4, 6176.0], [42.5, 6201.0], [42.6, 6215.0], [42.7, 6227.0], [42.8, 6242.0], [42.9, 6391.0], [43.0, 6392.0], [43.1, 6419.0], [43.2, 6500.0], [43.3, 6570.0], [43.4, 6646.0], [43.5, 6763.0], [43.6, 6787.0], [43.7, 6844.0], [43.8, 6862.0], [43.9, 6884.0], [44.0, 6963.0], [44.1, 7004.0], [44.2, 7090.0], [44.3, 7100.0], [44.4, 7118.0], [44.5, 7128.0], [44.6, 7142.0], [44.7, 7164.0], [44.8, 7164.0], [44.9, 7165.0], [45.0, 7165.0], [45.1, 7168.0], [45.2, 7168.0], [45.3, 7168.0], [45.4, 7168.0], [45.5, 7168.0], [45.6, 7168.0], [45.7, 7168.0], [45.8, 7171.0], [45.9, 7172.0], [46.0, 7172.0], [46.1, 7178.0], [46.2, 7203.0], [46.3, 7206.0], [46.4, 7252.0], [46.5, 7334.0], [46.6, 7342.0], [46.7, 7355.0], [46.8, 7358.0], [46.9, 7361.0], [47.0, 7366.0], [47.1, 7386.0], [47.2, 7401.0], [47.3, 7414.0], [47.4, 7420.0], [47.5, 7423.0], [47.6, 7423.0], [47.7, 7424.0], [47.8, 7424.0], [47.9, 7424.0], [48.0, 7424.0], [48.1, 7424.0], [48.2, 7425.0], [48.3, 7428.0], [48.4, 7429.0], [48.5, 7429.0], [48.6, 7550.0], [48.7, 7572.0], [48.8, 7595.0], [48.9, 7621.0], [49.0, 7679.0], [49.1, 7679.0], [49.2, 7679.0], [49.3, 7680.0], [49.4, 7680.0], [49.5, 7681.0], [49.6, 7683.0], [49.7, 7684.0], [49.8, 7702.0], [49.9, 7714.0], [50.0, 7760.0], [50.1, 7782.0], [50.2, 7786.0], [50.3, 7830.0], [50.4, 7833.0], [50.5, 7897.0], [50.6, 7924.0], [50.7, 7932.0], [50.8, 7932.0], [50.9, 7932.0], [51.0, 7936.0], [51.1, 7936.0], [51.2, 7936.0], [51.3, 7936.0], [51.4, 7936.0], [51.5, 7936.0], [51.6, 7936.0], [51.7, 7936.0], [51.8, 7944.0], [51.9, 7973.0], [52.0, 7978.0], [52.1, 8086.0], [52.2, 8137.0], [52.3, 8188.0], [52.4, 8188.0], [52.5, 8192.0], [52.6, 8192.0], [52.7, 8192.0], [52.8, 8192.0], [52.9, 8192.0], [53.0, 8192.0], [53.1, 8192.0], [53.2, 8192.0], [53.3, 8192.0], [53.4, 8192.0], [53.5, 8192.0], [53.6, 8193.0], [53.7, 8196.0], [53.8, 8196.0], [53.9, 8196.0], [54.0, 8237.0], [54.1, 8290.0], [54.2, 8439.0], [54.3, 8444.0], [54.4, 8448.0], [54.5, 8448.0], [54.6, 8448.0], [54.7, 8448.0], [54.8, 8448.0], [54.9, 8448.0], [55.0, 8448.0], [55.1, 8458.0], [55.2, 8480.0], [55.3, 8565.0], [55.4, 8668.0], [55.5, 8700.0], [55.6, 8702.0], [55.7, 8703.0], [55.8, 8703.0], [55.9, 8703.0], [56.0, 8703.0], [56.1, 8704.0], [56.2, 8704.0], [56.3, 8704.0], [56.4, 8704.0], [56.5, 8704.0], [56.6, 8704.0], [56.7, 8704.0], [56.8, 8704.0], [56.9, 8704.0], [57.0, 8705.0], [57.1, 8708.0], [57.2, 8725.0], [57.3, 8754.0], [57.4, 8779.0], [57.5, 8820.0], [57.6, 8838.0], [57.7, 8852.0], [57.8, 8916.0], [57.9, 8951.0], [58.0, 8960.0], [58.1, 8960.0], [58.2, 8960.0], [58.3, 8960.0], [58.4, 8960.0], [58.5, 9046.0], [58.6, 9089.0], [58.7, 9097.0], [58.8, 9115.0], [58.9, 9137.0], [59.0, 9184.0], [59.1, 9215.0], [59.2, 9216.0], [59.3, 9216.0], [59.4, 9216.0], [59.5, 9216.0], [59.6, 9216.0], [59.7, 9216.0], [59.8, 9216.0], [59.9, 9216.0], [60.0, 9216.0], [60.1, 9228.0], [60.2, 9250.0], [60.3, 9275.0], [60.4, 9301.0], [60.5, 9356.0], [60.6, 9468.0], [60.7, 9472.0], [60.8, 9476.0], [60.9, 9661.0], [61.0, 9709.0], [61.1, 9724.0], [61.2, 9726.0], [61.3, 9727.0], [61.4, 9727.0], [61.5, 9727.0], [61.6, 9727.0], [61.7, 9727.0], [61.8, 9728.0], [61.9, 9728.0], [62.0, 9728.0], [62.1, 9728.0], [62.2, 9728.0], [62.3, 9728.0], [62.4, 9728.0], [62.5, 9728.0], [62.6, 9728.0], [62.7, 9728.0], [62.8, 9728.0], [62.9, 9732.0], [63.0, 9768.0], [63.1, 9789.0], [63.2, 9820.0], [63.3, 9839.0], [63.4, 9846.0], [63.5, 9890.0], [63.6, 9979.0], [63.7, 9980.0], [63.8, 9984.0], [63.9, 9984.0], [64.0, 9984.0], [64.1, 9984.0], [64.2, 9984.0], [64.3, 9984.0], [64.4, 10001.0], [64.5, 10039.0], [64.6, 10099.0], [64.7, 10152.0], [64.8, 10198.0], [64.9, 10208.0], [65.0, 10221.0], [65.1, 10230.0], [65.2, 10240.0], [65.3, 10294.0], [65.4, 10331.0], [65.5, 10391.0], [65.6, 10412.0], [65.7, 10496.0], [65.8, 10496.0], [65.9, 10496.0], [66.0, 10545.0], [66.1, 10643.0], [66.2, 10689.0], [66.3, 10752.0], [66.4, 10752.0], [66.5, 10765.0], [66.6, 10802.0], [66.7, 10841.0], [66.8, 10860.0], [66.9, 11004.0], [67.0, 11005.0], [67.1, 11260.0], [67.2, 11264.0], [67.3, 11264.0], [67.4, 11264.0], [67.5, 11267.0], [67.6, 11268.0], [67.7, 11293.0], [67.8, 11364.0], [67.9, 11480.0], [68.0, 11580.0], [68.1, 11688.0], [68.2, 11720.0], [68.3, 11765.0], [68.4, 11772.0], [68.5, 11774.0], [68.6, 11776.0], [68.7, 11776.0], [68.8, 11780.0], [68.9, 11841.0], [69.0, 11894.0], [69.1, 12028.0], [69.2, 12034.0], [69.3, 12180.0], [69.4, 12206.0], [69.5, 12257.0], [69.6, 12286.0], [69.7, 12286.0], [69.8, 12491.0], [69.9, 12544.0], [70.0, 12559.0], [70.1, 12665.0], [70.2, 12726.0], [70.3, 12737.0], [70.4, 12799.0], [70.5, 12800.0], [70.6, 12800.0], [70.7, 12800.0], [70.8, 12800.0], [70.9, 12853.0], [71.0, 13028.0], [71.1, 13056.0], [71.2, 13056.0], [71.3, 13059.0], [71.4, 13068.0], [71.5, 13166.0], [71.6, 13183.0], [71.7, 13185.0], [71.8, 13188.0], [71.9, 13190.0], [72.0, 13191.0], [72.1, 13212.0], [72.2, 13214.0], [72.3, 13219.0], [72.4, 13232.0], [72.5, 13235.0], [72.6, 13237.0], [72.7, 13249.0], [72.8, 13253.0], [72.9, 13260.0], [73.0, 13261.0], [73.1, 13263.0], [73.2, 13270.0], [73.3, 13287.0], [73.4, 13291.0], [73.5, 13295.0], [73.6, 13307.0], [73.7, 13308.0], [73.8, 13308.0], [73.9, 13308.0], [74.0, 13308.0], [74.1, 13308.0], [74.2, 13308.0], [74.3, 13308.0], [74.4, 13308.0], [74.5, 13309.0], [74.6, 13310.0], [74.7, 13310.0], [74.8, 13310.0], [74.9, 13311.0], [75.0, 13311.0], [75.1, 13311.0], [75.2, 13311.0], [75.3, 13311.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13312.0], [78.9, 13312.0], [79.0, 13312.0], [79.1, 13312.0], [79.2, 13312.0], [79.3, 13312.0], [79.4, 13312.0], [79.5, 13312.0], [79.6, 13312.0], [79.7, 13312.0], [79.8, 13312.0], [79.9, 13312.0], [80.0, 13312.0], [80.1, 13312.0], [80.2, 13312.0], [80.3, 13312.0], [80.4, 13312.0], [80.5, 13312.0], [80.6, 13312.0], [80.7, 13312.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13313.0], [81.5, 13313.0], [81.6, 13313.0], [81.7, 13313.0], [81.8, 13314.0], [81.9, 13315.0], [82.0, 13316.0], [82.1, 13316.0], [82.2, 13316.0], [82.3, 13316.0], [82.4, 13316.0], [82.5, 13316.0], [82.6, 13316.0], [82.7, 13317.0], [82.8, 13319.0], [82.9, 13321.0], [83.0, 13326.0], [83.1, 13338.0], [83.2, 13345.0], [83.3, 13346.0], [83.4, 13348.0], [83.5, 13351.0], [83.6, 13353.0], [83.7, 13357.0], [83.8, 13364.0], [83.9, 13368.0], [84.0, 13378.0], [84.1, 13388.0], [84.2, 13390.0], [84.3, 13391.0], [84.4, 13391.0], [84.5, 13393.0], [84.6, 13395.0], [84.7, 13404.0], [84.8, 13406.0], [84.9, 13415.0], [85.0, 13439.0], [85.1, 13472.0], [85.2, 13489.0], [85.3, 13502.0], [85.4, 13585.0], [85.5, 13697.0], [85.6, 13709.0], [85.7, 13718.0], [85.8, 13784.0], [85.9, 13788.0], [86.0, 13810.0], [86.1, 13820.0], [86.2, 13823.0], [86.3, 13824.0], [86.4, 13824.0], [86.5, 13824.0], [86.6, 13824.0], [86.7, 13824.0], [86.8, 13824.0], [86.9, 13824.0], [87.0, 13824.0], [87.1, 13824.0], [87.2, 13824.0], [87.3, 13824.0], [87.4, 13825.0], [87.5, 13828.0], [87.6, 13828.0], [87.7, 13828.0], [87.8, 13830.0], [87.9, 13855.0], [88.0, 13887.0], [88.1, 13906.0], [88.2, 13931.0], [88.3, 13998.0], [88.4, 14080.0], [88.5, 14080.0], [88.6, 14121.0], [88.7, 14148.0], [88.8, 14187.0], [88.9, 14212.0], [89.0, 14331.0], [89.1, 14332.0], [89.2, 14332.0], [89.3, 14335.0], [89.4, 14335.0], [89.5, 14336.0], [89.6, 14336.0], [89.7, 14336.0], [89.8, 14336.0], [89.9, 14336.0], [90.0, 14336.0], [90.1, 14336.0], [90.2, 14336.0], [90.3, 14336.0], [90.4, 14338.0], [90.5, 14340.0], [90.6, 14489.0], [90.7, 14507.0], [90.8, 14596.0], [90.9, 14596.0], [91.0, 14718.0], [91.1, 15104.0], [91.2, 15105.0], [91.3, 15191.0], [91.4, 15360.0], [91.5, 15616.0], [91.6, 15872.0], [91.7, 16083.0], [91.8, 16384.0], [91.9, 16388.0], [92.0, 17138.0], [92.1, 17147.0], [92.2, 17152.0], [92.3, 17491.0], [92.4, 17920.0], [92.5, 18382.0], [92.6, 18688.0], [92.7, 18688.0], [92.8, 18718.0], [92.9, 19452.0], [93.0, 20026.0], [93.1, 20992.0], [93.2, 20992.0], [93.3, 22784.0], [93.4, 25536.0], [93.5, 25821.0], [93.6, 26323.0], [93.7, 26364.0], [93.8, 26365.0], [93.9, 26718.0], [94.0, 28160.0], [94.1, 29403.0], [94.2, 33032.0], [94.3, 39253.0], [94.4, 41630.0], [94.5, 51581.0], [94.6, 52545.0], [94.7, 54066.0], [94.8, 56684.0], [94.9, 57160.0], [95.0, 61459.0], [95.1, 66081.0], [95.2, 66117.0], [95.3, 73311.0], [95.4, 78079.0], [95.5, 85760.0], [95.6, 88064.0], [95.7, 93409.0], [95.8, 95488.0], [95.9, 95488.0], [96.0, 95643.0], [96.1, 97646.0], [96.2, 102911.0], [96.3, 102912.0], [96.4, 105510.0], [96.5, 106218.0], [96.6, 106878.0], [96.7, 107128.0], [96.8, 107264.0], [96.9, 108031.0], [97.0, 110588.0], [97.1, 110631.0], [97.2, 111616.0], [97.3, 113793.0], [97.4, 122075.0], [97.5, 123392.0], [97.6, 126843.0], [97.7, 127744.0], [97.8, 128000.0], [97.9, 130307.0], [98.0, 132611.0], [98.1, 133376.0], [98.2, 136444.0], [98.3, 137215.0], [98.4, 137216.0], [98.5, 137754.0], [98.6, 138039.0], [98.7, 138074.0], [98.8, 139519.0], [98.9, 139523.0], [99.0, 146433.0], [99.1, 146944.0], [99.2, 146945.0], [99.3, 146945.0], [99.4, 147456.0], [99.5, 147459.0], [99.6, 192754.0], [99.7, 192764.0], [99.8, 211712.0], [99.9, 214017.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2340.0, "series": [{"data": [[0.0, 49.0], [140800.0, 1.0], [125900.0, 1.0], [147400.0, 2.0], [137900.0, 1.0], [35100.0, 1.0], [139500.0, 1.0], [46500.0, 1.0], [95400.0, 1.0], [106200.0, 1.0], [105400.0, 2.0], [110600.0, 1.0], [500.0, 1.0], [600.0, 2.0], [700.0, 5.0], [800.0, 2.0], [214000.0, 1.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 1.0], [1700.0, 2.0], [1800.0, 9.0], [1900.0, 5.0], [2000.0, 9.0], [2100.0, 2.0], [133300.0, 2.0], [2300.0, 7.0], [2200.0, 2.0], [2400.0, 9.0], [2500.0, 9.0], [2600.0, 9.0], [2700.0, 19.0], [2800.0, 11.0], [2900.0, 19.0], [3000.0, 26.0], [3100.0, 20.0], [3300.0, 12.0], [3200.0, 21.0], [3400.0, 16.0], [3500.0, 21.0], [3700.0, 10.0], [3600.0, 15.0], [3800.0, 14.0], [3900.0, 13.0], [4000.0, 8.0], [4300.0, 8.0], [4100.0, 7.0], [4200.0, 8.0], [4500.0, 11.0], [4400.0, 13.0], [4600.0, 14.0], [4800.0, 14.0], [4700.0, 12.0], [5100.0, 11.0], [4900.0, 17.0], [5000.0, 8.0], [5300.0, 10.0], [5200.0, 11.0], [5600.0, 10.0], [5500.0, 14.0], [5400.0, 8.0], [5700.0, 5.0], [5800.0, 8.0], [6100.0, 3.0], [5900.0, 5.0], [6000.0, 3.0], [6200.0, 3.0], [6300.0, 1.0], [6500.0, 2.0], [6400.0, 9.0], [6600.0, 4.0], [102900.0, 2.0], [6700.0, 1.0], [6800.0, 3.0], [6900.0, 1.0], [110500.0, 4.0], [7100.0, 18.0], [7000.0, 1.0], [7400.0, 19.0], [7600.0, 9.0], [7900.0, 12.0], [7800.0, 1.0], [123300.0, 1.0], [7700.0, 1.0], [8100.0, 13.0], [8700.0, 27.0], [8200.0, 1.0], [8300.0, 1.0], [8400.0, 4.0], [8600.0, 2.0], [8800.0, 1.0], [9200.0, 19.0], [9000.0, 1.0], [8900.0, 1.0], [9700.0, 18.0], [9400.0, 3.0], [10200.0, 6.0], [9900.0, 10.0], [10100.0, 1.0], [10700.0, 5.0], [10400.0, 2.0], [11200.0, 7.0], [11000.0, 2.0], [11600.0, 1.0], [11700.0, 8.0], [12000.0, 3.0], [12200.0, 10.0], [12500.0, 1.0], [12700.0, 1.0], [13300.0, 109.0], [13000.0, 4.0], [12800.0, 6.0], [13100.0, 1.0], [13800.0, 23.0], [13400.0, 1.0], [14300.0, 28.0], [14000.0, 3.0], [14500.0, 5.0], [14800.0, 2.0], [15300.0, 2.0], [15600.0, 1.0], [16300.0, 3.0], [16200.0, 1.0], [17100.0, 1.0], [18200.0, 1.0], [17900.0, 2.0], [17600.0, 1.0], [18600.0, 2.0], [19400.0, 1.0], [22200.0, 1.0], [25000.0, 1.0], [26300.0, 4.0], [192700.0, 2.0], [57400.0, 1.0], [61400.0, 1.0], [66000.0, 1.0], [80800.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 593.0], [146400.0, 4.0], [152800.0, 2.0], [69100.0, 3.0], [85100.0, 1.0], [105900.0, 3.0], [106700.0, 2.0], [122700.0, 1.0], [119500.0, 2.0], [126700.0, 9.0], [125900.0, 2.0], [143400.0, 1.0], [148200.0, 1.0], [159400.0, 1.0], [210600.0, 2.0], [100.0, 169.0], [137900.0, 9.0], [131500.0, 2.0], [139500.0, 6.0], [50100.0, 1.0], [200.0, 235.0], [52100.0, 1.0], [52900.0, 1.0], [53700.0, 1.0], [57300.0, 1.0], [59300.0, 1.0], [61700.0, 3.0], [64500.0, 1.0], [65300.0, 2.0], [70600.0, 1.0], [300.0, 275.0], [95400.0, 2.0], [400.0, 205.0], [105800.0, 1.0], [105000.0, 1.0], [107400.0, 1.0], [109000.0, 5.0], [108200.0, 1.0], [110600.0, 1.0], [500.0, 191.0], [600.0, 220.0], [700.0, 349.0], [194800.0, 5.0], [800.0, 325.0], [214000.0, 2.0], [900.0, 294.0], [1000.0, 241.0], [1100.0, 126.0], [1200.0, 173.0], [1300.0, 345.0], [1400.0, 276.0], [1500.0, 244.0], [1600.0, 300.0], [1700.0, 175.0], [1800.0, 168.0], [1900.0, 234.0], [2000.0, 275.0], [2100.0, 596.0], [131700.0, 1.0], [133300.0, 6.0], [2200.0, 892.0], [2300.0, 1154.0], [141300.0, 1.0], [2400.0, 1351.0], [154100.0, 1.0], [2500.0, 1605.0], [2600.0, 2121.0], [2700.0, 2234.0], [2800.0, 2340.0], [2900.0, 2184.0], [3000.0, 1859.0], [3100.0, 1534.0], [3300.0, 951.0], [3200.0, 1157.0], [211700.0, 2.0], [3400.0, 662.0], [3500.0, 504.0], [3600.0, 344.0], [3700.0, 227.0], [3800.0, 171.0], [3900.0, 223.0], [4000.0, 188.0], [4300.0, 97.0], [4200.0, 100.0], [4100.0, 154.0], [4400.0, 73.0], [4500.0, 38.0], [4600.0, 22.0], [4700.0, 23.0], [4800.0, 17.0], [5100.0, 15.0], [4900.0, 10.0], [5000.0, 18.0], [78500.0, 5.0], [79300.0, 3.0], [5300.0, 9.0], [5200.0, 13.0], [85700.0, 3.0], [5500.0, 19.0], [5600.0, 21.0], [5400.0, 10.0], [5700.0, 15.0], [5800.0, 27.0], [93700.0, 1.0], [6100.0, 19.0], [5900.0, 15.0], [6000.0, 17.0], [97700.0, 1.0], [6300.0, 22.0], [6200.0, 18.0], [99300.0, 1.0], [6500.0, 21.0], [6600.0, 17.0], [6400.0, 14.0], [6800.0, 14.0], [106500.0, 1.0], [6900.0, 8.0], [6700.0, 13.0], [110500.0, 7.0], [7100.0, 184.0], [7000.0, 23.0], [7200.0, 20.0], [7300.0, 11.0], [7400.0, 172.0], [7500.0, 23.0], [7600.0, 131.0], [7900.0, 141.0], [7700.0, 12.0], [7800.0, 13.0], [123300.0, 2.0], [8100.0, 134.0], [8000.0, 11.0], [128100.0, 1.0], [8600.0, 16.0], [8300.0, 12.0], [8400.0, 63.0], [8700.0, 206.0], [8500.0, 7.0], [8200.0, 13.0], [132600.0, 2.0], [8800.0, 8.0], [9200.0, 126.0], [9100.0, 9.0], [8900.0, 41.0], [9000.0, 11.0], [9400.0, 25.0], [9600.0, 18.0], [9700.0, 124.0], [9300.0, 10.0], [9500.0, 7.0], [10000.0, 7.0], [9800.0, 13.0], [9900.0, 60.0], [10200.0, 64.0], [10100.0, 6.0], [10600.0, 8.0], [10400.0, 22.0], [10300.0, 11.0], [10700.0, 61.0], [10500.0, 13.0], [11000.0, 22.0], [10800.0, 4.0], [11200.0, 33.0], [10900.0, 6.0], [11100.0, 4.0], [11700.0, 54.0], [11300.0, 5.0], [11500.0, 31.0], [11600.0, 2.0], [11400.0, 3.0], [12000.0, 16.0], [12200.0, 35.0], [11800.0, 5.0], [12100.0, 2.0], [12300.0, 1.0], [12600.0, 2.0], [12700.0, 11.0], [12500.0, 19.0], [12400.0, 2.0], [13300.0, 1085.0], [13200.0, 64.0], [12900.0, 4.0], [12800.0, 39.0], [13000.0, 39.0], [13100.0, 28.0], [13600.0, 7.0], [13800.0, 178.0], [13400.0, 42.0], [13500.0, 30.0], [13700.0, 11.0], [14100.0, 7.0], [13900.0, 11.0], [14000.0, 23.0], [14300.0, 160.0], [14200.0, 4.0], [14500.0, 29.0], [14600.0, 3.0], [14400.0, 4.0], [14800.0, 21.0], [15200.0, 1.0], [15100.0, 10.0], [15300.0, 8.0], [15000.0, 1.0], [15500.0, 1.0], [15600.0, 15.0], [15800.0, 2.0], [15400.0, 2.0], [16300.0, 42.0], [16100.0, 1.0], [16800.0, 4.0], [16400.0, 2.0], [17000.0, 1.0], [17400.0, 1.0], [18400.0, 4.0], [18200.0, 1.0], [18000.0, 1.0], [17600.0, 14.0], [18600.0, 10.0], [19400.0, 6.0], [18800.0, 1.0], [19000.0, 1.0], [20400.0, 2.0], [21200.0, 4.0], [21400.0, 1.0], [22400.0, 1.0], [26400.0, 4.0], [26200.0, 2.0], [26600.0, 3.0], [27600.0, 2.0], [26800.0, 1.0], [27200.0, 1.0], [28600.0, 2.0], [29400.0, 2.0], [31600.0, 2.0], [32200.0, 1.0], [34000.0, 1.0], [36800.0, 1.0], [168700.0, 2.0], [192700.0, 1.0], [51600.0, 1.0], [53200.0, 1.0], [57200.0, 2.0], [57600.0, 1.0], [60400.0, 1.0], [61600.0, 9.0], [64400.0, 1.0], [81600.0, 3.0], [88000.0, 3.0], [87200.0, 3.0], [92800.0, 1.0], [106400.0, 6.0], [105600.0, 1.0], [107200.0, 1.0], [108000.0, 9.0], [115200.0, 1.0], [128000.0, 4.0], [127200.0, 1.0], [136900.0, 4.0], [156100.0, 1.0], [70300.0, 1.0], [72700.0, 1.0], [71100.0, 1.0], [76700.0, 1.0], [89500.0, 1.0], [94300.0, 1.0], [103100.0, 1.0], [107100.0, 1.0], [110300.0, 2.0], [115100.0, 1.0], [127900.0, 1.0], [147400.0, 8.0], [132300.0, 4.0], [38700.0, 1.0], [153100.0, 1.0], [41900.0, 2.0], [167500.0, 1.0], [44700.0, 1.0], [175500.0, 1.0], [47100.0, 1.0], [53100.0, 1.0], [57100.0, 1.0], [58700.0, 1.0], [58300.0, 1.0], [59500.0, 1.0], [65500.0, 2.0], [67000.0, 1.0], [66200.0, 8.0], [77400.0, 1.0], [95000.0, 1.0], [99800.0, 1.0], [106200.0, 3.0], [111800.0, 1.0], [111000.0, 1.0], [115000.0, 1.0], [119000.0, 1.0], [136400.0, 1.0], [138000.0, 1.0], [141200.0, 1.0], [146900.0, 3.0], [140500.0, 1.0], [66100.0, 2.0], [82100.0, 1.0], [92500.0, 1.0], [106100.0, 3.0], [102900.0, 8.0], [106900.0, 2.0], [114100.0, 1.0], [114900.0, 2.0], [127700.0, 4.0], [16900.0, 2.0], [16700.0, 1.0], [17100.0, 13.0], [16500.0, 1.0], [17500.0, 1.0], [18100.0, 2.0], [17900.0, 13.0], [19100.0, 1.0], [20500.0, 1.0], [20900.0, 5.0], [22100.0, 1.0], [24700.0, 1.0], [26300.0, 7.0], [26500.0, 3.0], [27300.0, 1.0], [27700.0, 1.0], [29100.0, 1.0], [29300.0, 1.0], [29700.0, 1.0], [32700.0, 1.0], [34200.0, 1.0], [132700.0, 1.0], [39800.0, 1.0], [40600.0, 1.0], [45800.0, 1.0], [46600.0, 1.0], [46200.0, 1.0], [48200.0, 1.0], [47800.0, 1.0], [53000.0, 1.0], [54600.0, 1.0], [53800.0, 1.0], [219100.0, 1.0], [55800.0, 1.0], [57400.0, 1.0], [60600.0, 2.0], [61800.0, 1.0], [65400.0, 1.0], [68400.0, 1.0], [71600.0, 1.0], [79600.0, 1.0], [78000.0, 4.0], [85200.0, 3.0], [106000.0, 3.0], [106800.0, 1.0], [111600.0, 12.0], [110800.0, 5.0], [118800.0, 1.0], [129200.0, 1.0]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[0.0, 45.0], [146400.0, 1.0], [137700.0, 1.0], [105900.0, 1.0], [100.0, 5.0], [139500.0, 2.0], [200.0, 5.0], [52500.0, 1.0], [53700.0, 1.0], [300.0, 3.0], [95400.0, 2.0], [400.0, 3.0], [110600.0, 1.0], [500.0, 8.0], [137200.0, 2.0], [600.0, 6.0], [700.0, 8.0], [800.0, 5.0], [214000.0, 2.0], [900.0, 1.0], [1000.0, 4.0], [1100.0, 5.0], [1200.0, 6.0], [1300.0, 5.0], [1400.0, 7.0], [1500.0, 3.0], [1600.0, 3.0], [1700.0, 5.0], [1800.0, 4.0], [1900.0, 11.0], [2000.0, 5.0], [2100.0, 7.0], [133300.0, 1.0], [2300.0, 12.0], [2200.0, 13.0], [2400.0, 14.0], [2500.0, 34.0], [2600.0, 25.0], [2700.0, 14.0], [2800.0, 21.0], [2900.0, 22.0], [3000.0, 9.0], [3100.0, 13.0], [3300.0, 11.0], [3200.0, 9.0], [211700.0, 1.0], [3400.0, 10.0], [3500.0, 10.0], [3700.0, 5.0], [3600.0, 4.0], [3800.0, 5.0], [3900.0, 4.0], [4000.0, 7.0], [4100.0, 4.0], [4200.0, 7.0], [4300.0, 1.0], [4600.0, 2.0], [4400.0, 4.0], [4500.0, 1.0], [4800.0, 5.0], [4700.0, 2.0], [5100.0, 2.0], [5000.0, 3.0], [5200.0, 3.0], [85700.0, 1.0], [5500.0, 1.0], [5400.0, 2.0], [5600.0, 2.0], [5800.0, 2.0], [5900.0, 6.0], [6100.0, 3.0], [6000.0, 2.0], [6200.0, 4.0], [6300.0, 3.0], [6400.0, 1.0], [6600.0, 1.0], [6500.0, 2.0], [6700.0, 2.0], [6800.0, 3.0], [6900.0, 1.0], [110500.0, 1.0], [7100.0, 20.0], [7000.0, 2.0], [113700.0, 1.0], [7300.0, 8.0], [7200.0, 3.0], [7400.0, 15.0], [7600.0, 9.0], [7500.0, 3.0], [7900.0, 16.0], [7700.0, 6.0], [7800.0, 3.0], [123300.0, 1.0], [8000.0, 1.0], [8100.0, 19.0], [8600.0, 2.0], [8400.0, 11.0], [8700.0, 21.0], [8200.0, 2.0], [8500.0, 1.0], [132600.0, 1.0], [8900.0, 7.0], [9000.0, 3.0], [9100.0, 4.0], [8800.0, 3.0], [9200.0, 13.0], [9400.0, 4.0], [9700.0, 23.0], [9300.0, 2.0], [9600.0, 1.0], [10100.0, 2.0], [10200.0, 5.0], [9900.0, 9.0], [9800.0, 4.0], [10000.0, 3.0], [10300.0, 2.0], [10600.0, 3.0], [10400.0, 4.0], [10700.0, 3.0], [10500.0, 1.0], [11200.0, 7.0], [10800.0, 3.0], [11000.0, 2.0], [11300.0, 1.0], [11700.0, 7.0], [11600.0, 1.0], [11500.0, 1.0], [11400.0, 2.0], [12000.0, 2.0], [11800.0, 2.0], [12200.0, 5.0], [12100.0, 1.0], [12700.0, 3.0], [12500.0, 2.0], [12600.0, 1.0], [12400.0, 1.0], [13300.0, 117.0], [13100.0, 7.0], [13200.0, 16.0], [12800.0, 5.0], [13000.0, 5.0], [13700.0, 5.0], [13400.0, 6.0], [13800.0, 22.0], [13500.0, 2.0], [13600.0, 1.0], [14100.0, 3.0], [14300.0, 17.0], [13900.0, 3.0], [14000.0, 2.0], [14200.0, 1.0], [14400.0, 1.0], [14500.0, 3.0], [14700.0, 1.0], [14800.0, 1.0], [15100.0, 3.0], [15300.0, 1.0], [15800.0, 1.0], [15600.0, 1.0], [16300.0, 2.0], [16000.0, 1.0], [17400.0, 1.0], [19200.0, 1.0], [18600.0, 2.0], [19400.0, 1.0], [20000.0, 1.0], [25800.0, 1.0], [29400.0, 1.0], [39200.0, 1.0], [41600.0, 1.0], [192700.0, 2.0], [54000.0, 1.0], [88000.0, 1.0], [97600.0, 1.0], [108000.0, 1.0], [107200.0, 1.0], [128000.0, 1.0], [136900.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [130300.0, 1.0], [147400.0, 2.0], [51500.0, 1.0], [57100.0, 1.0], [93400.0, 1.0], [106200.0, 1.0], [138000.0, 2.0], [136400.0, 1.0], [146900.0, 3.0], [66100.0, 1.0], [73300.0, 1.0], [102900.0, 2.0], [127700.0, 1.0], [17100.0, 3.0], [18300.0, 1.0], [17900.0, 1.0], [18700.0, 1.0], [20900.0, 2.0], [22700.0, 1.0], [25500.0, 1.0], [26300.0, 3.0], [26700.0, 1.0], [28100.0, 1.0], [33000.0, 1.0], [56600.0, 1.0], [61400.0, 1.0], [66000.0, 1.0], [78000.0, 1.0], [95600.0, 1.0], [106800.0, 1.0], [111600.0, 1.0], [122000.0, 1.0], [126800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 219100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 953.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25584.0, "series": [{"data": [[1.0, 2616.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5915.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 953.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 25584.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 14.694411414982174, "minX": 1.53940098E12, "maxY": 500.0, "series": [{"data": [[1.53940128E12, 295.1102629346898], [1.53940098E12, 14.694411414982174], [1.53940146E12, 472.7710783087321], [1.53940116E12, 172.48127090300997], [1.53940164E12, 26.06], [1.53940134E12, 353.33426395939114], [1.53940104E12, 53.537940379403935], [1.53940152E12, 500.0], [1.53940122E12, 233.39322829366424], [1.5394014E12, 413.20347648261793], [1.5394011E12, 112.72485509717013], [1.53940158E12, 465.3217241379316]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940164E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 211712.0, "series": [{"data": [[2.0, 1375.0], [4.0, 2318.0], [5.0, 2231.0], [6.0, 2740.0], [7.0, 990.6666666666666], [8.0, 2109.0], [9.0, 591.0], [10.0, 780.0], [11.0, 2965.0], [12.0, 1055.0], [15.0, 1594.0], [16.0, 2322.0], [18.0, 1579.6666666666667], [19.0, 736.0], [21.0, 1100.0], [24.0, 2562.0], [25.0, 2753.0], [26.0, 902.0], [27.0, 2062.5], [28.0, 869.0], [30.0, 2593.0], [31.0, 1176.0], [32.0, 2149.5], [34.0, 1780.0], [35.0, 66066.0], [36.0, 2359.0], [37.0, 1824.0], [40.0, 2482.5], [41.0, 2847.5], [42.0, 1966.0], [43.0, 1813.0], [44.0, 1849.0], [45.0, 1832.0], [46.0, 1098.0], [47.0, 2082.5], [51.0, 3333.5], [50.0, 110618.0], [52.0, 1441.0], [53.0, 3634.0], [54.0, 2573.0], [55.0, 1594.0], [56.0, 2015.0], [57.0, 2050.0], [59.0, 2084.0], [60.0, 2037.0], [61.0, 2070.0], [63.0, 3112.0], [65.0, 3223.0], [67.0, 3117.3333333333335], [69.0, 2730.0], [70.0, 2068.0], [71.0, 2046.0], [72.0, 4523.0], [74.0, 3099.5], [76.0, 2598.6666666666665], [77.0, 3876.0], [78.0, 1891.0], [80.0, 3251.0], [82.0, 3264.6666666666665], [83.0, 1989.0], [81.0, 61467.0], [85.0, 2412.5], [86.0, 2186.0], [88.0, 2750.0], [89.0, 2345.5], [90.0, 1839.0], [91.0, 1825.0], [94.0, 3837.5], [95.0, 1982.0], [96.0, 4507.0], [97.0, 3087.0], [98.0, 2848.0], [99.0, 16253.0], [100.0, 3372.0], [103.0, 5130.0], [105.0, 6583.0], [106.0, 4540.0], [107.0, 4488.0], [109.0, 3750.25], [111.0, 3155.5], [113.0, 109078.0], [114.0, 2335.0], [115.0, 4502.0], [117.0, 3812.0], [118.0, 2538.0], [119.0, 2640.0], [120.0, 2728.0], [121.0, 2707.0], [122.0, 2548.0], [123.0, 2475.0], [126.0, 4269.0], [127.0, 4636.0], [128.0, 3562.0], [129.0, 2514.0], [132.0, 4174.0], [133.0, 3530.0], [135.0, 3750.0], [139.0, 7406.5], [140.0, 6405.0], [141.0, 5197.333333333333], [142.0, 3226.0], [143.0, 5107.0], [144.0, 3005.0], [145.0, 5550.0], [146.0, 5082.0], [147.0, 3968.0], [149.0, 3529.0], [155.0, 3883.3333333333335], [159.0, 3754.0], [160.0, 3636.0], [161.0, 3277.0], [163.0, 3025.0], [164.0, 5434.0], [167.0, 3596.0], [169.0, 5360.0], [170.0, 4597.0], [172.0, 6789.0], [174.0, 6483.5], [176.0, 3798.0], [177.0, 2946.0], [178.0, 4759.0], [180.0, 5213.0], [181.0, 6037.0], [183.0, 5417.5], [184.0, 2692.0], [186.0, 4393.0], [187.0, 3517.0], [194.0, 5073.0], [195.0, 4568.666666666667], [196.0, 3454.0], [197.0, 5180.0], [198.0, 3747.75], [201.0, 4096.0], [204.0, 4619.0], [203.0, 7707.0], [210.0, 6225.0], [211.0, 8236.333333333334], [212.0, 6133.0], [213.0, 4727.0], [215.0, 3503.0], [216.0, 4220.5], [218.0, 4119.5], [219.0, 4668.0], [222.0, 2960.0], [224.0, 4156.5], [226.0, 4142.0], [228.0, 3038.0], [229.0, 4433.0], [230.0, 3167.0], [232.0, 2785.5], [233.0, 2823.0], [234.0, 5745.0], [235.0, 5184.0], [236.0, 8290.5], [237.0, 4980.0], [238.0, 7939.0], [240.0, 5119.0], [242.0, 8277.0], [243.0, 6894.0], [244.0, 3869.0], [245.0, 13305.0], [246.0, 5359.0], [247.0, 8902.0], [241.0, 5550.0], [248.0, 5602.5], [249.0, 6302.0], [250.0, 18518.666666666668], [252.0, 4397.0], [257.0, 13312.0], [256.0, 3668.0], [258.0, 10818.666666666666], [268.0, 8427.5], [269.0, 4549.5], [270.0, 6251.0], [271.0, 19739.5], [261.0, 3131.0], [262.0, 3145.0], [263.0, 2837.0], [264.0, 2743.5], [265.0, 8801.5], [267.0, 6941.5], [274.0, 5713.0], [272.0, 8171.666666666667], [275.0, 3795.0], [284.0, 3847.0], [285.0, 9120.6], [286.0, 7776.0], [287.0, 8164.0], [276.0, 7424.0], [277.0, 8554.714285714286], [278.0, 70557.0], [279.0, 5620.666666666667], [280.0, 8385.0], [281.0, 4172.5], [282.0, 5952.2], [283.0, 2813.0], [289.0, 2789.0], [288.0, 8719.0], [290.0, 3005.0], [291.0, 4319.75], [292.0, 4343.0], [293.0, 3698.0], [294.0, 1963.5], [295.0, 8480.6], [296.0, 4629.666666666667], [302.0, 2970.0], [303.0, 4057.6666666666665], [300.0, 4837.666666666667], [301.0, 6002.333333333334], [297.0, 10657.25], [298.0, 10752.0], [299.0, 5976.0], [305.0, 6628.0], [304.0, 1.0], [306.0, 21556.333333333332], [307.0, 9627.2], [308.0, 18818.0], [310.0, 4055.666666666667], [311.0, 6337.5], [313.0, 3134.0], [318.0, 6993.142857142857], [319.0, 8980.0], [316.0, 12284.0], [317.0, 10624.0], [314.0, 2620.0], [315.0, 6184.0], [321.0, 7765.2], [320.0, 4818.25], [322.0, 4702.5], [323.0, 1483.0], [324.0, 9286.5], [325.0, 7413.333333333334], [327.0, 4100.0], [328.0, 8344.333333333334], [334.0, 4949.666666666666], [335.0, 13312.0], [332.0, 7059.666666666666], [333.0, 8875.0], [329.0, 8418.0], [330.0, 12630.666666666666], [331.0, 3621.0], [337.0, 9109.0], [336.0, 4588.5], [338.0, 7804.8], [339.0, 6139.0], [340.0, 8192.0], [341.0, 4094.0], [342.0, 7237.0], [343.0, 7127.5], [345.0, 7936.0], [350.0, 9573.5], [351.0, 7428.0], [348.0, 7018.0], [349.0, 4984.0], [346.0, 15701.333333333334], [347.0, 4896.5], [353.0, 8338.0], [352.0, 8191.333333333333], [354.0, 6239.333333333334], [355.0, 5804.0], [356.0, 11788.333333333334], [357.0, 11738.0], [359.0, 5632.5], [360.0, 6423.0], [366.0, 5356.0], [367.0, 11094.4], [364.0, 4282.0], [365.0, 11263.75], [361.0, 2164.75], [362.0, 6129.0], [369.0, 5069.333333333333], [368.0, 7446.5], [370.0, 10999.2], [371.0, 6331.5], [372.0, 2990.3333333333335], [373.0, 9866.0], [375.0, 6283.0], [376.0, 8587.0], [382.0, 2343.666666666667], [383.0, 7260.333333333333], [380.0, 8979.5], [381.0, 11126.5], [377.0, 4250.666666666667], [379.0, 9752.0], [385.0, 3517.0], [384.0, 13004.8], [386.0, 11353.8], [387.0, 7936.0], [388.0, 4900.0], [389.0, 11010.0], [390.0, 8140.333333333333], [391.0, 7425.0], [392.0, 11394.5], [398.0, 5534.5], [399.0, 7422.5], [396.0, 4649.0], [397.0, 5883.0], [394.0, 8704.0], [395.0, 12416.75], [401.0, 6484.0], [400.0, 3620.0], [402.0, 11520.0], [403.0, 10161.4], [404.0, 10508.0], [405.0, 12457.333333333334], [406.0, 9216.0], [407.0, 7688.6], [408.0, 6814.666666666667], [412.0, 5166.5], [413.0, 4805.0], [414.0, 5808.0], [415.0, 1.0], [411.0, 10466.0], [417.0, 11286.0], [416.0, 33284.333333333336], [418.0, 6528.0], [419.0, 5050.0], [420.0, 9676.0], [421.0, 7657.666666666667], [422.0, 3050.0], [423.0, 5529.75], [424.0, 2706.5], [430.0, 13312.0], [431.0, 4448.333333333333], [428.0, 4036.3333333333335], [429.0, 9287.333333333334], [425.0, 13567.5], [426.0, 5776.4], [427.0, 8402.333333333334], [433.0, 5502.8], [432.0, 7063.333333333333], [434.0, 4241.0], [444.0, 9033.0], [445.0, 9471.5], [446.0, 10421.0], [447.0, 8334.0], [436.0, 7940.0], [437.0, 6717.5], [438.0, 9728.0], [439.0, 10625.5], [440.0, 4661.5], [441.0, 4191.0], [442.0, 5344.25], [443.0, 3946.0], [449.0, 7302.0], [448.0, 5931.0], [450.0, 8365.0], [461.0, 5301.0], [462.0, 9047.5], [463.0, 9185.0], [452.0, 9688.0], [453.0, 9303.5], [454.0, 3112.0], [455.0, 13312.0], [456.0, 11520.0], [457.0, 4087.0], [458.0, 11780.0], [459.0, 6323.75], [465.0, 8134.5], [464.0, 13312.0], [466.0, 4647.0], [476.0, 5331.5], [477.0, 8966.2], [478.0, 71410.5], [479.0, 3733.5], [468.0, 3648.0], [469.0, 8000.0], [470.0, 5551.0], [471.0, 12288.0], [473.0, 2466.5], [474.0, 32985.5], [475.0, 6403.0], [482.0, 11008.0], [480.0, 3577.0], [483.0, 13312.0], [492.0, 35368.25], [493.0, 4688.0], [494.0, 4236.0], [495.0, 5640.0], [484.0, 9157.5], [485.0, 8367.666666666666], [486.0, 11774.875], [487.0, 7137.0], [488.0, 140800.0], [489.0, 8627.5], [490.0, 3106.0], [491.0, 9152.0], [496.0, 58930.25], [498.0, 9371.0], [499.0, 1.0], [500.0, 17099.505376344077]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[340.6624390243898, 9969.877073170725]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 84354.0], [3.0, 99.77777777777777], [4.0, 127.6923076923077], [5.0, 7632.0], [6.0, 6840.809523809525], [7.0, 4827.125], [8.0, 5216.0], [9.0, 3550.2258064516127], [10.0, 244.68749999999997], [11.0, 254.57500000000007], [12.0, 8186.916666666666], [13.0, 2076.714285714286], [14.0, 238.3043478260869], [15.0, 274.8043478260871], [16.0, 279.84615384615387], [17.0, 296.6199999999999], [18.0, 324.55102040816337], [19.0, 3322.083333333333], [20.0, 13281.745762711864], [21.0, 394.7083333333333], [22.0, 3103.2653061224487], [23.0, 1684.7115384615386], [24.0, 1814.2083333333335], [25.0, 1904.7333333333336], [26.0, 543.595744680851], [27.0, 3910.1372549019607], [28.0, 1765.2884615384614], [29.0, 1944.382978723404], [30.0, 1981.4791666666665], [31.0, 2698.952380952381], [32.0, 2179.5227272727275], [33.0, 1958.5510204081634], [34.0, 765.05], [35.0, 824.5897435897435], [36.0, 2709.7727272727275], [37.0, 2722.441860465116], [38.0, 3023.5641025641025], [39.0, 3834.4999999999995], [40.0, 838.0], [41.0, 7185.854166666666], [42.0, 2783.796296296296], [43.0, 2646.3508771929824], [44.0, 2794.3148148148152], [45.0, 2613.796610169492], [46.0, 2724.232142857143], [47.0, 1920.685185185185], [48.0, 2642.766666666667], [49.0, 865.272727272727], [50.0, 1113.8249999999998], [51.0, 3337.531914893617], [52.0, 2978.9807692307695], [53.0, 946.3541666666669], [54.0, 1045.5799999999997], [55.0, 965.5384615384612], [56.0, 952.9649122807018], [57.0, 968.2931034482757], [58.0, 981.8490566037733], [59.0, 10267.85], [60.0, 2867.7636363636366], [61.0, 1075.9423076923078], [62.0, 1118.1636363636364], [63.0, 1271.2], [64.0, 1483.2619047619048], [65.0, 16066.916666666668], [66.0, 3906.3448275862065], [67.0, 3458.8205128205127], [68.0, 3092.8048780487807], [69.0, 3160.75], [70.0, 3361.114285714286], [71.0, 3088.4222222222224], [72.0, 2766.375], [73.0, 2653.500000000001], [74.0, 2414.9464285714284], [75.0, 2586.8775510204077], [76.0, 2648.5714285714284], [77.0, 2496.410714285714], [78.0, 2306.366666666667], [79.0, 1304.375], [80.0, 3387.6065573770493], [81.0, 1375.6326530612246], [82.0, 1594.0681818181818], [83.0, 3146.0208333333335], [84.0, 1678.5744680851062], [85.0, 1644.1800000000007], [86.0, 1659.1458333333335], [87.0, 1668.3800000000006], [88.0, 1657.7599999999998], [89.0, 1577.5254237288138], [90.0, 1354.6911764705883], [91.0, 1341.0322580645154], [92.0, 18577.01408450704], [93.0, 1949.8571428571427], [94.0, 2097.759259259259], [95.0, 2270.333333333333], [96.0, 2746.970588235294], [97.0, 2875.8139534883717], [98.0, 2830.659090909091], [99.0, 2290.8709677419356], [100.0, 4413.166666666666], [101.0, 4470.228571428572], [102.0, 4462.085714285713], [103.0, 4361.405405405405], [104.0, 3913.4285714285716], [105.0, 2919.611111111111], [106.0, 2750.3260869565215], [107.0, 2728.4347826086964], [108.0, 2321.0566037735853], [109.0, 2028.8750000000002], [110.0, 5624.810344827587], [111.0, 1953.098039215686], [112.0, 1983.709090909091], [113.0, 5974.528301886792], [114.0, 2129.661290322581], [115.0, 2072.767857142857], [116.0, 2177.2830188679245], [117.0, 2436.3799999999997], [118.0, 2459.28], [119.0, 2456.74], [120.0, 2504.0], [121.0, 2421.714285714285], [122.0, 2422.8301886792456], [123.0, 2344.3559322033893], [124.0, 2378.245283018868], [125.0, 2347.1929824561403], [126.0, 2366.6734693877543], [127.0, 2524.306122448979], [128.0, 2441.9666666666662], [129.0, 2292.6545454545453], [130.0, 2464.023255813954], [131.0, 2884.428571428571], [132.0, 3268.5348837209312], [133.0, 3409.7567567567567], [134.0, 3515.3428571428567], [135.0, 3412.6410256410254], [136.0, 3774.428571428571], [137.0, 5358.6578947368425], [138.0, 5285.384615384615], [139.0, 3545.195121951219], [140.0, 4809.953488372094], [141.0, 3047.230769230769], [142.0, 3943.0], [143.0, 3959.217391304348], [144.0, 4527.43137254902], [145.0, 2785.82], [146.0, 2779.58], [147.0, 2643.1206896551726], [148.0, 2432.4406779661012], [149.0, 2392.2131147540986], [150.0, 2573.6562500000005], [151.0, 2331.606557377049], [152.0, 2309.524590163935], [153.0, 2784.1960784313724], [154.0, 2769.2400000000002], [155.0, 2785.557692307692], [156.0, 2869.8666666666672], [157.0, 3985.5238095238096], [158.0, 2838.410714285715], [159.0, 3489.8627450980393], [160.0, 2760.358490566038], [161.0, 2897.176470588235], [162.0, 2834.3389830508468], [163.0, 2822.0599999999995], [164.0, 2814.9361702127653], [165.0, 2814.822222222223], [166.0, 3614.1842105263163], [167.0, 3422.870967741935], [168.0, 3681.709677419354], [169.0, 4157.25806451613], [170.0, 22310.433333333334], [171.0, 4392.71875], [172.0, 4662.756756756758], [173.0, 4256.533333333333], [174.0, 3633.941176470588], [175.0, 2968.8214285714284], [176.0, 2800.632653061224], [177.0, 3046.16], [178.0, 3036.761904761905], [179.0, 3632.893617021277], [180.0, 3156.2400000000007], [181.0, 3065.325581395349], [182.0, 3345.448979591837], [183.0, 2894.522388059701], [184.0, 2458.3437499999995], [185.0, 2493.7096774193546], [186.0, 2333.9500000000003], [187.0, 2590.4310344827577], [188.0, 3316.0967741935474], [189.0, 2520.532258064516], [190.0, 2635.6734693877547], [191.0, 2935.1071428571427], [192.0, 2815.5399999999995], [193.0, 2765.5], [194.0, 3097.6444444444446], [195.0, 3815.3125], [196.0, 3030.744680851063], [197.0, 3099.7000000000003], [198.0, 3259.6226415094343], [199.0, 3045.25], [200.0, 3319.878787878788], [201.0, 3413.624999999999], [202.0, 3854.1081081081084], [203.0, 4033.0606060606065], [204.0, 4392.366666666667], [205.0, 4546.0], [206.0, 4171.914285714285], [207.0, 4761.628571428572], [208.0, 3996.2380952380954], [209.0, 4321.4047619047615], [210.0, 4122.227272727273], [211.0, 3689.6888888888893], [212.0, 3249.87037037037], [213.0, 2675.0317460317456], [214.0, 2485.5396825396824], [215.0, 2695.4776119402986], [216.0, 2274.3484848484845], [217.0, 2709.0], [218.0, 2443.6562499999995], [219.0, 2260.6461538461544], [220.0, 2311.857142857142], [221.0, 2891.389830508475], [222.0, 2631.9130434782614], [223.0, 2792.8823529411766], [224.0, 3265.3720930232557], [225.0, 3702.9555555555557], [226.0, 3371.410714285714], [227.0, 4241.282608695651], [228.0, 4475.368421052631], [229.0, 2979.210526315789], [230.0, 3001.84], [231.0, 2554.4615384615377], [232.0, 2474.411764705883], [233.0, 2585.4999999999995], [234.0, 4917.0], [235.0, 3273.272727272727], [236.0, 3453.875], [237.0, 5705.921052631579], [238.0, 6369.187499999999], [239.0, 4561.774193548386], [240.0, 6027.343749999999], [241.0, 4466.23076923077], [242.0, 5526.219512195122], [243.0, 3763.790697674419], [244.0, 5212.833333333333], [245.0, 4109.478260869565], [246.0, 4254.119047619049], [247.0, 3965.3157894736837], [248.0, 4305.200000000001], [249.0, 2875.4406779661017], [250.0, 7100.561403508771], [251.0, 2751.8571428571427], [252.0, 5622.944444444444], [253.0, 3769.65625], [254.0, 2701.232142857143], [255.0, 4127.22448979592], [257.0, 3522.4523809523807], [256.0, 3036.289473684211], [258.0, 3943.4], [259.0, 5953.296296296297], [260.0, 3941.790697674419], [261.0, 12690.86], [262.0, 3589.645833333333], [263.0, 3648.6181818181817], [264.0, 3659.6034482758614], [270.0, 4651.625000000002], [271.0, 8163.914285714287], [268.0, 5177.242424242425], [269.0, 8389.588235294117], [265.0, 4791.362068965517], [266.0, 2858.795454545454], [267.0, 7682.59523809524], [273.0, 6235.84375], [272.0, 4140.578947368421], [274.0, 4404.574468085106], [275.0, 6749.7], [276.0, 3505.234042553191], [277.0, 6027.120689655171], [278.0, 23543.93846153846], [279.0, 5721.327272727272], [280.0, 4548.065217391304], [286.0, 3861.239436619719], [287.0, 3742.8064516129034], [284.0, 4441.294117647059], [285.0, 8793.844827586208], [281.0, 7377.163636363636], [282.0, 4502.586206896551], [283.0, 4672.896551724138], [289.0, 3695.7857142857147], [288.0, 3308.305084745763], [290.0, 3762.6734693877547], [291.0, 8830.566037735849], [292.0, 4889.2745098039195], [293.0, 7572.056603773584], [294.0, 3989.538461538461], [295.0, 4013.6610169491537], [296.0, 4989.113636363636], [302.0, 6792.909090909089], [303.0, 4170.264150943394], [300.0, 6442.521739130431], [301.0, 3308.375], [297.0, 9123.60344827586], [298.0, 4401.204081632653], [299.0, 3752.1860465116274], [305.0, 4396.063492063493], [304.0, 9583.328125000005], [306.0, 6641.966666666669], [307.0, 4675.68253968254], [308.0, 5200.0526315789475], [309.0, 4254.851851851852], [310.0, 5265.593750000001], [311.0, 3519.1090909090904], [312.0, 6122.288461538462], [318.0, 5562.294117647057], [319.0, 4924.971830985916], [316.0, 5650.192307692311], [317.0, 3911.131147540985], [313.0, 3322.723404255319], [314.0, 3349.553846153846], [315.0, 4470.851351351353], [321.0, 3267.418181818182], [320.0, 6555.370967741936], [322.0, 3584.3225806451605], [323.0, 3458.800000000001], [324.0, 6594.718750000001], [325.0, 4211.392156862745], [326.0, 5090.321428571429], [327.0, 4188.653061224489], [328.0, 4992.107142857142], [334.0, 4356.243902439022], [335.0, 3152.878787878788], [332.0, 6738.114285714284], [333.0, 5211.414634146338], [329.0, 4464.524590163934], [330.0, 4859.444444444444], [331.0, 5377.171874999998], [337.0, 4717.2], [336.0, 3509.759259259258], [338.0, 4654.246153846153], [339.0, 4473.44776119403], [340.0, 5814.513888888888], [341.0, 5108.768115942028], [342.0, 4497.9811320754725], [343.0, 3879.7500000000014], [344.0, 3929.133333333331], [350.0, 4151.477611940298], [351.0, 3261.9393939393944], [348.0, 5217.944444444444], [349.0, 4100.859649122806], [345.0, 4787.507462686566], [346.0, 5636.862068965518], [347.0, 4616.000000000001], [353.0, 2958.344827586206], [352.0, 4102.902777777778], [354.0, 5767.843373493976], [355.0, 4734.4769230769225], [356.0, 5014.018181818184], [357.0, 4563.779661016948], [358.0, 3615.5636363636363], [359.0, 4444.579999999997], [360.0, 5132.862068965517], [366.0, 4008.2881355932204], [367.0, 6157.679012345678], [364.0, 4499.950819672129], [365.0, 3727.867647058822], [361.0, 5779.636363636365], [362.0, 4352.843749999999], [363.0, 5045.86153846154], [369.0, 3910.985507246377], [368.0, 3714.4615384615377], [370.0, 3776.0158730158732], [371.0, 4418.819672131146], [372.0, 3581.4000000000005], [373.0, 4639.838709677418], [374.0, 4867.716417910448], [375.0, 4776.258064516128], [376.0, 5470.973333333332], [382.0, 4294.040000000001], [383.0, 4774.225806451612], [380.0, 4444.196721311477], [381.0, 5467.687500000002], [377.0, 4677.000000000001], [378.0, 4869.844827586208], [379.0, 4376.254237288138], [385.0, 3469.1718750000005], [384.0, 5859.696202531643], [386.0, 5996.41772151899], [387.0, 3856.499999999998], [388.0, 2816.115384615384], [389.0, 6228.425], [390.0, 4314.758620689654], [391.0, 5477.428571428572], [392.0, 4404.693548387097], [398.0, 5203.792452830189], [399.0, 5551.841269841269], [396.0, 5292.276595744681], [397.0, 5332.41304347826], [393.0, 3265.9333333333334], [394.0, 3883.3], [395.0, 5443.851851851852], [401.0, 4372.520000000001], [400.0, 3444.1627906976746], [402.0, 5980.492307692307], [403.0, 5362.859375], [404.0, 5199.708860759492], [405.0, 4515.773333333334], [406.0, 3109.1803278688526], [407.0, 4413.4358974358975], [408.0, 3791.739130434782], [414.0, 4220.897959183673], [415.0, 5363.584905660377], [412.0, 5100.615384615385], [413.0, 3964.3913043478265], [409.0, 3786.725490196078], [410.0, 3192.2380952380954], [411.0, 6523.203125], [417.0, 5195.586666666667], [416.0, 7226.30303030303], [418.0, 15014.127272727266], [419.0, 4541.101265822784], [420.0, 5351.5180722891555], [421.0, 3895.7272727272725], [422.0, 3359.7592592592587], [423.0, 3581.30303030303], [424.0, 3249.7843137254904], [430.0, 4385.019230769233], [431.0, 5297.396551724139], [428.0, 3407.0], [429.0, 5958.566265060242], [425.0, 5051.084337349398], [426.0, 5424.235294117647], [427.0, 4245.163636363637], [433.0, 6522.123287671233], [432.0, 4031.538461538461], [434.0, 3679.76], [435.0, 3300.625], [436.0, 4023.88888888889], [437.0, 4666.141025641024], [438.0, 5252.133333333333], [439.0, 4434.78431372549], [440.0, 5044.955223880596], [446.0, 5356.887323943664], [447.0, 3659.359375], [444.0, 4466.103448275861], [445.0, 5089.421052631577], [441.0, 3811.1969696969695], [442.0, 4455.913793103449], [443.0, 5276.389830508474], [449.0, 4141.74], [448.0, 3504.5319148936164], [450.0, 5004.06153846154], [451.0, 5262.666666666666], [452.0, 5196.375], [453.0, 5326.863013698629], [454.0, 3498.5737704918033], [455.0, 4242.878787878788], [456.0, 5076.802631578947], [462.0, 5477.844155844156], [463.0, 7266.6410256410245], [460.0, 3651.140350877193], [461.0, 4094.0701754385973], [457.0, 3182.2244897959185], [458.0, 6207.17441860465], [459.0, 6222.630769230769], [465.0, 8471.4375], [464.0, 4482.328125000001], [466.0, 3696.8139534883726], [467.0, 9055.4], [468.0, 4823.980769230769], [469.0, 12411.928571428572], [470.0, 5460.028571428572], [471.0, 5387.275362318839], [472.0, 5124.081967213114], [478.0, 10453.720588235297], [479.0, 4356.445945945945], [476.0, 5837.507042253521], [477.0, 5481.243243243245], [473.0, 3552.983870967742], [474.0, 14721.700000000008], [475.0, 4684.985714285715], [481.0, 3228.7857142857147], [480.0, 5866.333333333333], [482.0, 3294.910714285713], [483.0, 5124.111111111111], [484.0, 7109.67213114754], [485.0, 19396.130434782608], [486.0, 6087.298701298701], [487.0, 5627.439024390245], [488.0, 4079.0312500000027], [494.0, 3796.698113207547], [495.0, 4957.983050847457], [492.0, 12981.769230769232], [493.0, 3474.295454545455], [489.0, 3866.1249999999995], [490.0, 3002.745454545454], [491.0, 5303.506666666666], [496.0, 14207.754098360658], [497.0, 3604.9574468085116], [498.0, 6882.157142857144], [499.0, 6328.056603773585], [500.0, 6273.184521000474]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[312.8361778882589, 4689.305544608507]], "isOverall": false, "label": "Diarios-Aggregated", "isController": false}, {"data": [[2.0, 44.0], [3.0, 44.0], [4.0, 91488.66666666667], [5.0, 33.0], [6.0, 34.0], [7.0, 9.5], [8.0, 36.0], [9.0, 19.0], [10.0, 20.0], [11.0, 22.0], [12.0, 28.0], [13.0, 30.0], [14.0, 34.0], [15.0, 75.0], [16.0, 50.0], [17.0, 27.0], [18.0, 152.0], [19.0, 76.0], [20.0, 73281.5], [21.0, 188.0], [22.0, 256.0], [23.0, 207.0], [24.0, 152.0], [25.0, 169.0], [26.0, 211.0], [27.0, 270.0], [28.0, 301.0], [29.0, 298.0], [30.0, 387.0], [31.0, 451.0], [32.0, 479.0], [33.0, 352.0], [34.0, 33310.0], [35.0, 670.0], [36.0, 557.0], [37.0, 541.0], [38.0, 650.0], [39.0, 694.0], [40.0, 581.0], [41.0, 608.0], [42.0, 525.0], [43.0, 498.0], [44.0, 572.0], [45.0, 557.0], [46.0, 552.0], [47.0, 620.0], [48.0, 619.0], [49.0, 55697.5], [50.0, 842.0], [51.0, 783.0], [52.0, 729.0], [53.0, 798.0], [54.0, 811.0], [55.0, 752.0], [56.0, 727.0], [57.0, 754.0], [58.0, 893.0], [59.0, 110405.5], [60.0, 824.0], [61.0, 896.0], [62.0, 989.0], [64.0, 1382.0], [65.0, 66961.5], [66.0, 1715.0], [67.0, 1657.0], [68.0, 1266.0], [69.0, 1435.0], [70.0, 1396.0], [71.0, 1520.0], [72.0, 1284.0], [73.0, 1193.0], [74.0, 1212.0], [75.0, 1063.0], [76.0, 1220.0], [77.0, 1175.0], [78.0, 1125.0], [79.0, 1076.0], [80.0, 1248.0], [81.0, 1061.0], [82.0, 31421.0], [83.0, 1443.0], [84.0, 1510.0], [85.0, 1460.0], [86.0, 1404.0], [87.0, 1487.0], [88.0, 1415.0], [89.0, 1344.0], [90.0, 1122.0], [91.0, 1076.0], [92.0, 1158.0], [93.0, 1241.0], [94.0, 1439.0], [95.0, 1556.0], [97.0, 2114.0], [98.0, 2049.0], [100.0, 2401.0], [101.0, 2792.0], [103.0, 2952.5], [104.0, 2376.0], [105.0, 2312.0], [106.0, 2276.0], [107.0, 1979.5], [108.0, 1844.0], [109.0, 1737.0], [110.0, 1764.0], [111.0, 1751.0], [112.0, 1758.0], [113.0, 143283.0], [114.0, 1698.0], [115.0, 1636.0], [116.0, 1831.0], [117.0, 1989.0], [119.0, 2035.0], [120.0, 2154.0], [121.0, 2060.5], [122.0, 1932.0], [123.0, 1900.0], [124.0, 1942.0], [125.0, 1992.0], [127.0, 2140.0], [128.0, 2057.0], [129.0, 1969.0], [131.0, 2600.0], [132.0, 2961.0], [134.0, 3123.0], [135.0, 6517.5], [136.0, 3360.0], [137.0, 3537.0], [138.0, 3481.0], [139.0, 3390.0], [140.0, 3007.5], [141.0, 5626.5], [142.0, 2476.0], [143.0, 2356.0], [144.0, 2624.0], [145.0, 2626.0], [146.0, 2509.0], [150.0, 3371.0], [152.0, 2541.0], [155.0, 2616.0], [156.0, 2656.0], [158.0, 2698.0], [159.0, 13309.0], [157.0, 13824.0], [153.0, 13313.0], [160.0, 3413.0], [163.0, 6762.5], [164.0, 3250.0], [165.0, 4843.0], [168.0, 3798.5], [173.0, 4013.0], [174.0, 5273.5], [175.0, 5856.5], [171.0, 10099.0], [170.0, 211712.0], [176.0, 18718.0], [177.0, 4429.0], [178.0, 10331.0], [181.0, 2836.0], [182.0, 6106.0], [184.0, 2281.0], [189.0, 3214.0], [190.0, 4144.0], [191.0, 2789.0], [186.0, 8137.0], [192.0, 9137.0], [193.0, 13348.0], [194.0, 3989.6666666666665], [195.0, 18382.0], [197.0, 3231.5], [199.0, 3503.0], [203.0, 5545.0], [204.0, 7004.0], [205.0, 21546.0], [207.0, 3873.0], [208.0, 3917.0], [209.0, 3427.0], [211.0, 3946.5], [213.0, 4546.5], [215.0, 2029.0], [216.0, 26365.0], [219.0, 7978.0], [220.0, 2282.5], [222.0, 41630.0], [223.0, 10783.0], [224.0, 40334.5], [225.0, 26323.0], [226.0, 4468.0], [227.0, 8061.0], [228.0, 13391.0], [229.0, 5791.0], [230.0, 7593.333333333334], [232.0, 7879.0], [233.0, 4026.0], [234.0, 25536.0], [235.0, 3143.0], [236.0, 4576.0], [237.0, 3196.0], [240.0, 4457.0], [241.0, 6880.0], [243.0, 4224.0], [244.0, 13260.0], [245.0, 2840.0], [246.0, 2872.0], [248.0, 5624.0], [250.0, 105937.0], [252.0, 2848.0], [253.0, 2902.0], [254.0, 13753.0], [255.0, 13270.0], [251.0, 10001.0], [257.0, 54066.0], [256.0, 11293.0], [258.0, 10852.5], [259.0, 48807.25], [260.0, 8640.0], [261.0, 5886.666666666667], [263.0, 14876.666666666666], [264.0, 4796.0], [271.0, 55273.5], [268.0, 5477.0], [269.0, 9089.0], [265.0, 14725.333333333332], [266.0, 2558.0], [267.0, 19848.5], [273.0, 9802.5], [272.0, 15354.0], [274.0, 12737.0], [275.0, 61500.5], [276.0, 5010.5], [277.0, 11531.166666666664], [278.0, 69453.0], [279.0, 9892.666666666666], [280.0, 8041.5], [286.0, 6998.8], [287.0, 30511.0], [284.0, 11816.0], [285.0, 12298.6], [281.0, 34883.333333333336], [282.0, 4464.666666666666], [283.0, 4057.0], [289.0, 51703.0], [288.0, 1169.5], [290.0, 8290.0], [291.0, 13824.0], [292.0, 8749.0], [293.0, 12832.0], [294.0, 7592.8], [296.0, 9984.0], [302.0, 2530.0], [303.0, 10894.5], [300.0, 8692.5], [301.0, 11159.333333333334], [297.0, 3366.0], [299.0, 4594.0], [305.0, 5332.5], [304.0, 16203.833333333334], [306.0, 58996.0], [307.0, 8280.75], [308.0, 12792.666666666666], [309.0, 13232.0], [310.0, 11272.0], [311.0, 12033.333333333334], [312.0, 10871.5], [318.0, 13190.0], [319.0, 13279.666666666666], [316.0, 4907.0], [317.0, 5949.5], [313.0, 3980.75], [314.0, 8163.5], [315.0, 9216.0], [323.0, 6079.666666666667], [321.0, 6027.75], [320.0, 10291.0], [322.0, 7165.0], [324.0, 2418.0], [327.0, 12233.0], [328.0, 8262.5], [334.0, 7872.25], [332.0, 8779.0], [333.0, 7220.333333333334], [329.0, 7366.666666666667], [330.0, 9600.25], [331.0, 11364.666666666666], [339.0, 7069.166666666666], [337.0, 7386.0], [336.0, 13310.0], [338.0, 8581.0], [341.0, 10880.0], [342.0, 2674.5], [344.0, 15261.0], [350.0, 1470.0], [351.0, 14218.0], [348.0, 13391.0], [349.0, 9325.0], [345.0, 7165.0], [346.0, 13107.0], [347.0, 6897.5], [353.0, 7884.5], [352.0, 1.0], [354.0, 12480.0], [355.0, 8007.0], [356.0, 10488.75], [357.0, 11116.75], [358.0, 4790.0], [359.0, 13395.0], [360.0, 11641.0], [366.0, 12287.0], [367.0, 11558.5], [364.0, 3018.0], [365.0, 13308.0], [361.0, 11799.666666666666], [362.0, 8190.0], [363.0, 9259.0], [369.0, 4831.166666666667], [368.0, 9412.6], [371.0, 2788.0], [380.0, 8402.333333333332], [381.0, 7376.0], [382.0, 11772.0], [383.0, 10091.25], [372.0, 7575.8], [373.0, 8526.333333333334], [374.0, 13824.0], [375.0, 75668.5], [376.0, 11682.0], [377.0, 6392.0], [378.0, 4386.25], [379.0, 8223.0], [385.0, 2646.0], [384.0, 9090.0], [386.0, 12615.0], [387.0, 1.0], [389.0, 9199.8], [390.0, 4224.5], [391.0, 10024.25], [392.0, 8324.75], [398.0, 4846.0], [399.0, 12971.833333333334], [396.0, 9715.5], [397.0, 7627.5], [393.0, 9218.5], [394.0, 2915.0], [395.0, 10918.666666666666], [401.0, 13364.0], [403.0, 13311.0], [412.0, 5616.5], [413.0, 11817.0], [414.0, 3447.0], [415.0, 12864.5], [404.0, 8974.25], [405.0, 8458.0], [406.0, 6213.333333333333], [407.0, 7768.285714285715], [408.0, 7802.25], [410.0, 4609.0], [411.0, 9215.0], [417.0, 9191.0], [416.0, 67242.66666666667], [418.0, 43352.0], [419.0, 11008.0], [420.0, 8446.0], [421.0, 6728.25], [423.0, 5409.25], [424.0, 2434.5], [430.0, 2764.0], [431.0, 14335.0], [428.0, 7936.0], [429.0, 17010.25], [425.0, 6527.333333333333], [426.0, 9231.333333333334], [427.0, 8283.666666666666], [433.0, 11834.0], [432.0, 1.0], [434.0, 9455.5], [435.0, 4681.666666666667], [436.0, 6172.0], [437.0, 6687.333333333333], [438.0, 9236.6], [440.0, 6688.75], [446.0, 7920.4], [447.0, 2814.0], [444.0, 4108.0], [445.0, 9315.25], [441.0, 10802.0], [442.0, 7961.0], [443.0, 9316.0], [451.0, 8670.333333333334], [449.0, 9728.0], [448.0, 2512.0], [450.0, 13312.0], [452.0, 7171.8], [453.0, 1.0], [456.0, 7782.8], [457.0, 2954.0], [462.0, 9526.666666666666], [463.0, 57600.0], [460.0, 9414.75], [461.0, 13536.5], [458.0, 13312.0], [459.0, 39374.0], [465.0, 10860.0], [464.0, 6554.0], [466.0, 3480.0], [476.0, 7171.666666666667], [477.0, 9978.8], [478.0, 2402.0], [468.0, 5462.333333333333], [469.0, 37461.33333333333], [470.0, 10365.5], [471.0, 10881.0], [472.0, 54510.33333333333], [473.0, 9533.4], [474.0, 93927.33333333334], [475.0, 8123.25], [481.0, 6346.0], [480.0, 6063.0], [482.0, 11264.0], [483.0, 4637.0], [484.0, 11280.333333333334], [485.0, 6535.666666666667], [486.0, 11659.0], [487.0, 3619.0], [488.0, 2176.6666666666665], [495.0, 12091.75], [494.0, 5695.0], [492.0, 46032.66666666667], [493.0, 10066.5], [489.0, 5053.0], [490.0, 4152.0], [491.0, 11958.333333333334], [496.0, 8877.333333333332], [497.0, 2841.0], [498.0, 10747.0], [499.0, 13312.0], [500.0, 20740.52272727273], [1.0, 87.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[334.7964015151515, 13581.267992424215]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 206.93333333333334, "minX": 1.53940098E12, "maxY": 3496638.6333333333, "series": [{"data": [[1.53940128E12, 3178796.15], [1.53940098E12, 939609.4], [1.53940146E12, 3288075.316666667], [1.53940116E12, 3402403.85], [1.53940164E12, 27945.566666666666], [1.53940134E12, 3343947.0833333335], [1.53940104E12, 3312934.6333333333], [1.53940152E12, 3496638.6333333333], [1.53940122E12, 3319516.3333333335], [1.5394014E12, 3327666.1666666665], [1.5394011E12, 3291414.55], [1.53940158E12, 2489211.3666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53940128E12, 15226.8], [1.53940098E12, 3661.866666666667], [1.53940146E12, 17196.15], [1.53940116E12, 13015.266666666666], [1.53940164E12, 206.93333333333334], [1.53940134E12, 16934.083333333332], [1.53940104E12, 12857.8], [1.53940152E12, 17356.333333333332], [1.53940122E12, 12911.933333333332], [1.5394014E12, 16825.8], [1.5394011E12, 12765.95], [1.53940158E12, 12467.733333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940164E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 68.58333333333333, "minX": 1.53940098E12, "maxY": 119515.2, "series": [{"data": [[1.53940128E12, 7467.085526315792], [1.53940098E12, 1517.0909090909092], [1.53940146E12, 12399.604316546764], [1.53940116E12, 4320.425531914893], [1.53940164E12, 88342.0], [1.53940134E12, 7716.435374149658], [1.53940104E12, 2434.847457627119], [1.53940152E12, 16278.939655172417], [1.53940122E12, 6331.000000000001], [1.5394014E12, 8504.83448275862], [1.5394011E12, 3661.2321428571427], [1.53940158E12, 23879.951807228914]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53940128E12, 5108.37163208424], [1.53940098E12, 289.10440251572305], [1.53940146E12, 5747.8508748317545], [1.53940116E12, 2887.1055536391837], [1.53940164E12, 111158.88372093023], [1.53940134E12, 4634.4018691588835], [1.53940104E12, 1037.6305575158776], [1.53940152E12, 5939.836001049608], [1.53940122E12, 3748.605604203156], [1.5394014E12, 4852.619021288387], [1.5394011E12, 2250.3495386799145], [1.53940158E12, 9669.061105012815]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53940128E12, 13344.608974358971], [1.53940098E12, 68.58333333333333], [1.53940146E12, 14155.79020979021], [1.53940116E12, 5314.386363636361], [1.53940164E12, 119515.2], [1.53940134E12, 8862.348387096772], [1.53940104E12, 836.7627118644069], [1.53940152E12, 17806.53773584906], [1.53940122E12, 14124.098591549297], [1.5394014E12, 10455.88666666667], [1.5394011E12, 2131.677966101695], [1.53940158E12, 40419.49999999999]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940164E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 68.41666666666669, "minX": 1.53940098E12, "maxY": 119515.2, "series": [{"data": [[1.53940128E12, 7467.085526315792], [1.53940098E12, 1517.0909090909092], [1.53940146E12, 12399.604316546764], [1.53940116E12, 4320.425531914893], [1.53940164E12, 88342.0], [1.53940134E12, 7716.435374149658], [1.53940104E12, 2434.847457627119], [1.53940152E12, 16278.939655172417], [1.53940122E12, 6331.000000000001], [1.5394014E12, 8504.83448275862], [1.5394011E12, 3661.2321428571427], [1.53940158E12, 23879.951807228914]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53940128E12, 5107.839888510376], [1.53940098E12, 288.66163522012596], [1.53940146E12, 5747.4810228802235], [1.53940116E12, 2886.5719213521966], [1.53940164E12, 111158.6511627907], [1.53940134E12, 4634.027487630562], [1.53940104E12, 1037.1270289343704], [1.53940152E12, 5939.458409866184], [1.53940122E12, 3748.1075306479893], [1.5394014E12, 4852.24163671551], [1.5394011E12, 2249.857700496809], [1.53940158E12, 9668.639956092204]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53940128E12, 13344.608974358971], [1.53940098E12, 68.41666666666669], [1.53940146E12, 14155.79020979021], [1.53940116E12, 5314.386363636361], [1.53940164E12, 119515.2], [1.53940134E12, 8862.341935483873], [1.53940104E12, 836.7627118644069], [1.53940152E12, 17806.53773584906], [1.53940122E12, 14124.098591549297], [1.5394014E12, 10455.880000000005], [1.5394011E12, 2131.64406779661], [1.53940158E12, 40419.49999999999]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940164E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53940098E12, "maxY": 3.333333333333333, "series": [{"data": [[1.53940128E12, 0.7894736842105267], [1.53940098E12, 0.0], [1.53940146E12, 0.5971223021582731], [1.53940116E12, 0.7021276595744682], [1.53940164E12, 1.0], [1.53940134E12, 0.5986394557823131], [1.53940104E12, 0.0], [1.53940152E12, 0.5775862068965518], [1.53940122E12, 0.6842105263157894], [1.5394014E12, 0.6482758620689651], [1.5394011E12, 0.46428571428571425], [1.53940158E12, 1.216867469879518]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53940128E12, 0.39331062248374177], [1.53940098E12, 0.14213836477987407], [1.53940146E12, 0.38869448183041716], [1.53940116E12, 0.4598137288720249], [1.53940164E12, 0.7209302325581398], [1.53940134E12, 0.37300714678394753], [1.53940104E12, 0.24417784050811595], [1.53940152E12, 0.3752295985305689], [1.53940122E12, 0.42136602451838984], [1.5394014E12, 0.3898258225048383], [1.5394011E12, 0.4325762952448543], [1.53940158E12, 0.3823637028905965]], "isOverall": false, "label": "Diarios", "isController": false}, {"data": [[1.53940128E12, 0.6474358974358975], [1.53940098E12, 3.333333333333333], [1.53940146E12, 0.4265734265734266], [1.53940116E12, 1.1363636363636362], [1.53940164E12, 0.8], [1.53940134E12, 0.5354838709677417], [1.53940104E12, 0.7966101694915255], [1.53940152E12, 0.49056603773584895], [1.53940122E12, 0.7183098591549295], [1.5394014E12, 0.7800000000000002], [1.5394011E12, 0.9322033898305087], [1.53940158E12, 0.5238095238095238]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940164E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.53940098E12, "maxY": 111015.0, "series": [{"data": [[1.53940128E12, 57366.0], [1.53940098E12, 2965.0], [1.53940146E12, 52946.0], [1.53940116E12, 31637.0], [1.53940164E12, 111015.0], [1.53940134E12, 33032.0], [1.53940104E12, 4523.0], [1.53940152E12, 76782.0], [1.53940122E12, 58722.0], [1.5394014E12, 51581.0], [1.5394011E12, 6583.0], [1.53940158E12, 106280.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53940128E12, 2192.0], [1.53940098E12, 18.0], [1.53940146E12, 2206.0], [1.53940116E12, 2018.0], [1.53940164E12, 60413.0], [1.53940134E12, 2170.0], [1.53940104E12, 152.0], [1.53940152E12, 1903.0], [1.53940122E12, 2003.0], [1.5394014E12, 2260.0], [1.5394011E12, 1076.0], [1.53940158E12, 2003.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53940128E12, 3508.0], [1.53940098E12, 461.0], [1.53940146E12, 3619.0], [1.53940116E12, 3070.0], [1.53940164E12, 3686.800000000003], [1.53940134E12, 3487.0], [1.53940104E12, 1565.0], [1.53940152E12, 3632.0], [1.53940122E12, 3399.0], [1.5394014E12, 3533.0], [1.5394011E12, 2658.0], [1.53940158E12, 3676.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53940128E12, 5569.299999999997], [1.53940098E12, 2185.8599999999997], [1.53940146E12, 6351.970000000005], [1.53940116E12, 4472.039999999999], [1.53940164E12, 8968.970000000005], [1.53940134E12, 5844.0], [1.53940104E12, 2377.999999999998], [1.53940152E12, 6547.890000000018], [1.53940122E12, 5162.3099999999995], [1.5394014E12, 6173.890000000018], [1.5394011E12, 3718.88], [1.53940158E12, 8222.840000000026]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53940128E12, 4013.0], [1.53940098E12, 534.7499999999999], [1.53940146E12, 4111.950000000001], [1.53940116E12, 3586.0], [1.53940164E12, 4324.0], [1.53940134E12, 4006.5], [1.53940104E12, 1718.0], [1.53940152E12, 4158.950000000001], [1.53940122E12, 3972.0999999999985], [1.5394014E12, 4038.0], [1.5394011E12, 3218.399999999998], [1.53940158E12, 4287.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940164E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 143409.0, "series": [{"data": [[65.0, 2921.0], [66.0, 2919.0], [67.0, 2892.5], [0.0, 85210.0], [49.0, 2499.0], [48.0, 2514.0], [14.0, 281.0], [58.0, 2932.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[65.0, 10496.0], [66.0, 11519.0], [67.0, 12800.0], [0.0, 143409.0], [49.0, 13300.0], [48.0, 12800.0], [14.0, 1.0], [58.0, 11773.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 67.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 143409.0, "series": [{"data": [[65.0, 2920.0], [66.0, 2918.0], [67.0, 2892.0], [0.0, 85209.0], [49.0, 2499.0], [48.0, 2513.5], [14.0, 281.0], [58.0, 2931.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[65.0, 10496.0], [66.0, 11519.0], [67.0, 12800.0], [0.0, 143409.0], [49.0, 13300.0], [48.0, 12800.0], [14.0, 1.0], [58.0, 11773.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 67.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.4, "minX": 1.53940098E12, "maxY": 67.56666666666666, "series": [{"data": [[1.53940128E12, 59.95], [1.53940098E12, 14.4], [1.53940146E12, 67.56666666666666], [1.53940116E12, 50.833333333333336], [1.53940134E12, 66.66666666666667], [1.53940104E12, 50.2], [1.53940152E12, 67.21666666666667], [1.53940122E12, 50.71666666666667], [1.5394014E12, 66.2], [1.5394011E12, 49.88333333333333], [1.53940158E12, 40.833333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940158E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53940098E12, "maxY": 49.13333333333333, "series": [{"data": [[1.53940128E12, 46.1], [1.53940098E12, 13.583333333333334], [1.53940146E12, 47.1], [1.53940116E12, 48.95], [1.53940164E12, 0.45], [1.53940134E12, 47.516666666666666], [1.53940104E12, 48.06666666666667], [1.53940152E12, 49.13333333333333], [1.53940122E12, 47.233333333333334], [1.5394014E12, 47.38333333333333], [1.5394011E12, 47.93333333333333], [1.53940158E12, 34.916666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53940128E12, 0.9833333333333333], [1.53940098E12, 0.35], [1.53940146E12, 0.7166666666666667], [1.53940116E12, 0.7833333333333333], [1.53940134E12, 0.75], [1.53940104E12, 0.9833333333333333], [1.53940152E12, 0.3], [1.53940122E12, 0.65], [1.5394014E12, 0.8166666666666667], [1.5394011E12, 0.9333333333333333], [1.53940158E12, 0.25]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53940128E12, 11.4], [1.53940098E12, 0.06666666666666667], [1.53940146E12, 18.383333333333333], [1.53940116E12, 0.1], [1.53940164E12, 0.35], [1.53940134E12, 17.183333333333334], [1.53940104E12, 0.15], [1.53940152E12, 17.25], [1.53940122E12, 1.6166666666666667], [1.5394014E12, 16.75], [1.5394011E12, 0.016666666666666666], [1.53940158E12, 12.666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53940128E12, 0.4666666666666667], [1.53940098E12, 0.016666666666666666], [1.53940146E12, 0.16666666666666666], [1.53940164E12, 0.03333333333333333], [1.53940134E12, 0.21666666666666667], [1.53940152E12, 0.18333333333333332], [1.53940122E12, 0.21666666666666667], [1.5394014E12, 0.2], [1.53940158E12, 0.25]], "isOverall": false, "label": "403", "isController": false}, {"data": [[1.53940146E12, 0.25], [1.53940152E12, 0.35], [1.5394014E12, 0.05], [1.53940158E12, 0.25]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53940164E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53940098E12, "maxY": 48.833333333333336, "series": [{"data": [[1.53940128E12, 1.0666666666666667], [1.53940098E12, 0.38333333333333336], [1.53940146E12, 0.75], [1.53940116E12, 0.7333333333333333], [1.53940164E12, 0.03333333333333333], [1.53940134E12, 0.7166666666666667], [1.53940104E12, 0.9833333333333333], [1.53940152E12, 0.3], [1.53940122E12, 0.6833333333333333], [1.5394014E12, 0.85], [1.5394011E12, 0.9833333333333333], [1.53940158E12, 0.4166666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53940128E12, 8.783333333333333], [1.53940098E12, 0.05], [1.53940146E12, 15.566666666666666], [1.53940116E12, 0.1], [1.53940164E12, 0.3], [1.53940134E12, 13.833333333333334], [1.53940104E12, 0.15], [1.53940152E12, 14.683333333333334], [1.53940122E12, 1.0333333333333334], [1.5394014E12, 13.75], [1.5394011E12, 0.016666666666666666], [1.53940158E12, 11.05]], "isOverall": false, "label": "Diarios-failure", "isController": false}, {"data": [[1.53940128E12, 0.9833333333333333], [1.53940098E12, 0.35], [1.53940146E12, 0.7166666666666667], [1.53940116E12, 0.7833333333333333], [1.53940134E12, 0.75], [1.53940104E12, 0.9833333333333333], [1.53940152E12, 0.3], [1.53940122E12, 0.65], [1.5394014E12, 0.8166666666666667], [1.5394011E12, 0.9333333333333333], [1.53940158E12, 0.25]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53940128E12, 45.03333333333333], [1.53940098E12, 13.2], [1.53940146E12, 46.35], [1.53940116E12, 48.21666666666667], [1.53940164E12, 0.4166666666666667], [1.53940134E12, 46.8], [1.53940104E12, 47.083333333333336], [1.53940152E12, 48.833333333333336], [1.53940122E12, 46.55], [1.5394014E12, 46.53333333333333], [1.5394011E12, 46.95], [1.53940158E12, 34.5]], "isOverall": false, "label": "Diarios-success", "isController": false}, {"data": [[1.53940128E12, 1.5333333333333334], [1.53940098E12, 0.016666666666666666], [1.53940146E12, 1.6333333333333333], [1.53940164E12, 0.05], [1.53940134E12, 1.8666666666666667], [1.53940152E12, 1.4666666666666666], [1.53940122E12, 0.5], [1.5394014E12, 1.65], [1.53940158E12, 0.9833333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53940128E12, 1.55], [1.53940098E12, 0.016666666666666666], [1.53940146E12, 1.6], [1.53940164E12, 0.03333333333333333], [1.53940134E12, 1.7], [1.53940152E12, 1.6333333333333333], [1.53940122E12, 0.3], [1.5394014E12, 1.6], [1.53940158E12, 1.1333333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53940164E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
