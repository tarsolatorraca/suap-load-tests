/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 229377.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 1252.0], [3.0, 1282.0], [3.1, 1307.0], [3.2, 1326.0], [3.3, 1351.0], [3.4, 1371.0], [3.5, 1393.0], [3.6, 1412.0], [3.7, 1425.0], [3.8, 1442.0], [3.9, 1491.0], [4.0, 1541.0], [4.1, 1618.0], [4.2, 1725.0], [4.3, 1782.0], [4.4, 1831.0], [4.5, 1884.0], [4.6, 1944.0], [4.7, 2016.0], [4.8, 2098.0], [4.9, 2141.0], [5.0, 2202.0], [5.1, 2261.0], [5.2, 2401.0], [5.3, 2491.0], [5.4, 2581.0], [5.5, 2664.0], [5.6, 2760.0], [5.7, 2819.0], [5.8, 2851.0], [5.9, 2897.0], [6.0, 2923.0], [6.1, 3021.0], [6.2, 3082.0], [6.3, 3153.0], [6.4, 3215.0], [6.5, 3348.0], [6.6, 3392.0], [6.7, 3415.0], [6.8, 3457.0], [6.9, 3515.0], [7.0, 3600.0], [7.1, 3647.0], [7.2, 3674.0], [7.3, 3704.0], [7.4, 3719.0], [7.5, 3737.0], [7.6, 3781.0], [7.7, 3855.0], [7.8, 3926.0], [7.9, 4016.0], [8.0, 4074.0], [8.1, 4111.0], [8.2, 4156.0], [8.3, 4198.0], [8.4, 4230.0], [8.5, 4300.0], [8.6, 4412.0], [8.7, 4564.0], [8.8, 4680.0], [8.9, 4775.0], [9.0, 4852.0], [9.1, 4924.0], [9.2, 5025.0], [9.3, 5134.0], [9.4, 5226.0], [9.5, 5275.0], [9.6, 5352.0], [9.7, 5392.0], [9.8, 5428.0], [9.9, 5447.0], [10.0, 5490.0], [10.1, 5518.0], [10.2, 5575.0], [10.3, 5645.0], [10.4, 5744.0], [10.5, 5915.0], [10.6, 6086.0], [10.7, 6286.0], [10.8, 6437.0], [10.9, 6549.0], [11.0, 6613.0], [11.1, 6644.0], [11.2, 6701.0], [11.3, 6776.0], [11.4, 6854.0], [11.5, 6893.0], [11.6, 6962.0], [11.7, 7022.0], [11.8, 7072.0], [11.9, 7120.0], [12.0, 7164.0], [12.1, 7164.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7169.0], [13.4, 7171.0], [13.5, 7172.0], [13.6, 7172.0], [13.7, 7172.0], [13.8, 7174.0], [13.9, 7194.0], [14.0, 7233.0], [14.1, 7266.0], [14.2, 7322.0], [14.3, 7364.0], [14.4, 7388.0], [14.5, 7404.0], [14.6, 7421.0], [14.7, 7423.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7427.0], [15.4, 7436.0], [15.5, 7465.0], [15.6, 7502.0], [15.7, 7543.0], [15.8, 7596.0], [15.9, 7667.0], [16.0, 7678.0], [16.1, 7679.0], [16.2, 7680.0], [16.3, 7680.0], [16.4, 7680.0], [16.5, 7680.0], [16.6, 7681.0], [16.7, 7684.0], [16.8, 7717.0], [16.9, 7810.0], [17.0, 7866.0], [17.1, 7918.0], [17.2, 7935.0], [17.3, 7936.0], [17.4, 7936.0], [17.5, 7936.0], [17.6, 7936.0], [17.7, 7936.0], [17.8, 7940.0], [17.9, 7941.0], [18.0, 7973.0], [18.1, 8032.0], [18.2, 8102.0], [18.3, 8187.0], [18.4, 8191.0], [18.5, 8192.0], [18.6, 8192.0], [18.7, 8192.0], [18.8, 8192.0], [18.9, 8198.0], [19.0, 8305.0], [19.1, 8366.0], [19.2, 8394.0], [19.3, 8444.0], [19.4, 8447.0], [19.5, 8448.0], [19.6, 8452.0], [19.7, 8489.0], [19.8, 8565.0], [19.9, 8599.0], [20.0, 8643.0], [20.1, 8699.0], [20.2, 8700.0], [20.3, 8703.0], [20.4, 8703.0], [20.5, 8703.0], [20.6, 8704.0], [20.7, 8704.0], [20.8, 8704.0], [20.9, 8704.0], [21.0, 8704.0], [21.1, 8705.0], [21.2, 8708.0], [21.3, 8735.0], [21.4, 8782.0], [21.5, 8836.0], [21.6, 8885.0], [21.7, 8957.0], [21.8, 8960.0], [21.9, 8960.0], [22.0, 8963.0], [22.1, 9019.0], [22.2, 9167.0], [22.3, 9211.0], [22.4, 9212.0], [22.5, 9216.0], [22.6, 9216.0], [22.7, 9216.0], [22.8, 9218.0], [22.9, 9220.0], [23.0, 9223.0], [23.1, 9319.0], [23.2, 9417.0], [23.3, 9472.0], [23.4, 9486.0], [23.5, 9557.0], [23.6, 9693.0], [23.7, 9724.0], [23.8, 9727.0], [23.9, 9727.0], [24.0, 9728.0], [24.1, 9728.0], [24.2, 9728.0], [24.3, 9728.0], [24.4, 9728.0], [24.5, 9728.0], [24.6, 9729.0], [24.7, 9732.0], [24.8, 9765.0], [24.9, 9823.0], [25.0, 9883.0], [25.1, 9970.0], [25.2, 9982.0], [25.3, 9984.0], [25.4, 9986.0], [25.5, 10003.0], [25.6, 10031.0], [25.7, 10068.0], [25.8, 10120.0], [25.9, 10179.0], [26.0, 10218.0], [26.1, 10236.0], [26.2, 10239.0], [26.3, 10239.0], [26.4, 10240.0], [26.5, 10240.0], [26.6, 10240.0], [26.7, 10243.0], [26.8, 10244.0], [26.9, 10272.0], [27.0, 10301.0], [27.1, 10347.0], [27.2, 10392.0], [27.3, 10418.0], [27.4, 10493.0], [27.5, 10496.0], [27.6, 10515.0], [27.7, 10632.0], [27.8, 10694.0], [27.9, 10750.0], [28.0, 10751.0], [28.1, 10752.0], [28.2, 10752.0], [28.3, 10756.0], [28.4, 10829.0], [28.5, 10901.0], [28.6, 10957.0], [28.7, 11003.0], [28.8, 11007.0], [28.9, 11008.0], [29.0, 11015.0], [29.1, 11051.0], [29.2, 11092.0], [29.3, 11143.0], [29.4, 11193.0], [29.5, 11228.0], [29.6, 11250.0], [29.7, 11262.0], [29.8, 11264.0], [29.9, 11281.0], [30.0, 11304.0], [30.1, 11321.0], [30.2, 11340.0], [30.3, 11348.0], [30.4, 11365.0], [30.5, 11376.0], [30.6, 11385.0], [30.7, 11393.0], [30.8, 11405.0], [30.9, 11416.0], [31.0, 11425.0], [31.1, 11438.0], [31.2, 11446.0], [31.3, 11461.0], [31.4, 11475.0], [31.5, 11486.0], [31.6, 11500.0], [31.7, 11505.0], [31.8, 11514.0], [31.9, 11520.0], [32.0, 11520.0], [32.1, 11525.0], [32.2, 11528.0], [32.3, 11536.0], [32.4, 11548.0], [32.5, 11562.0], [32.6, 11569.0], [32.7, 11581.0], [32.8, 11591.0], [32.9, 11597.0], [33.0, 11604.0], [33.1, 11610.0], [33.2, 11615.0], [33.3, 11621.0], [33.4, 11628.0], [33.5, 11632.0], [33.6, 11636.0], [33.7, 11642.0], [33.8, 11646.0], [33.9, 11651.0], [34.0, 11658.0], [34.1, 11665.0], [34.2, 11670.0], [34.3, 11675.0], [34.4, 11680.0], [34.5, 11684.0], [34.6, 11687.0], [34.7, 11692.0], [34.8, 11697.0], [34.9, 11706.0], [35.0, 11711.0], [35.1, 11714.0], [35.2, 11718.0], [35.3, 11722.0], [35.4, 11726.0], [35.5, 11730.0], [35.6, 11733.0], [35.7, 11737.0], [35.8, 11741.0], [35.9, 11745.0], [36.0, 11749.0], [36.1, 11752.0], [36.2, 11758.0], [36.3, 11762.0], [36.4, 11766.0], [36.5, 11771.0], [36.6, 11774.0], [36.7, 11775.0], [36.8, 11776.0], [36.9, 11777.0], [37.0, 11780.0], [37.1, 11783.0], [37.2, 11786.0], [37.3, 11791.0], [37.4, 11794.0], [37.5, 11796.0], [37.6, 11798.0], [37.7, 11803.0], [37.8, 11807.0], [37.9, 11811.0], [38.0, 11815.0], [38.1, 11817.0], [38.2, 11821.0], [38.3, 11824.0], [38.4, 11827.0], [38.5, 11831.0], [38.6, 11835.0], [38.7, 11838.0], [38.8, 11842.0], [38.9, 11846.0], [39.0, 11849.0], [39.1, 11853.0], [39.2, 11857.0], [39.3, 11860.0], [39.4, 11863.0], [39.5, 11868.0], [39.6, 11873.0], [39.7, 11875.0], [39.8, 11878.0], [39.9, 11881.0], [40.0, 11883.0], [40.1, 11886.0], [40.2, 11890.0], [40.3, 11893.0], [40.4, 11897.0], [40.5, 11899.0], [40.6, 11903.0], [40.7, 11908.0], [40.8, 11911.0], [40.9, 11915.0], [41.0, 11917.0], [41.1, 11921.0], [41.2, 11924.0], [41.3, 11928.0], [41.4, 11933.0], [41.5, 11936.0], [41.6, 11938.0], [41.7, 11940.0], [41.8, 11943.0], [41.9, 11947.0], [42.0, 11951.0], [42.1, 11954.0], [42.2, 11957.0], [42.3, 11959.0], [42.4, 11964.0], [42.5, 11966.0], [42.6, 11971.0], [42.7, 11974.0], [42.8, 11979.0], [42.9, 11982.0], [43.0, 11986.0], [43.1, 11991.0], [43.2, 11994.0], [43.3, 11997.0], [43.4, 12001.0], [43.5, 12003.0], [43.6, 12009.0], [43.7, 12012.0], [43.8, 12018.0], [43.9, 12020.0], [44.0, 12023.0], [44.1, 12026.0], [44.2, 12029.0], [44.3, 12032.0], [44.4, 12036.0], [44.5, 12040.0], [44.6, 12043.0], [44.7, 12047.0], [44.8, 12048.0], [44.9, 12052.0], [45.0, 12058.0], [45.1, 12061.0], [45.2, 12066.0], [45.3, 12068.0], [45.4, 12074.0], [45.5, 12079.0], [45.6, 12083.0], [45.7, 12090.0], [45.8, 12094.0], [45.9, 12097.0], [46.0, 12100.0], [46.1, 12103.0], [46.2, 12105.0], [46.3, 12108.0], [46.4, 12111.0], [46.5, 12114.0], [46.6, 12120.0], [46.7, 12123.0], [46.8, 12125.0], [46.9, 12128.0], [47.0, 12130.0], [47.1, 12133.0], [47.2, 12138.0], [47.3, 12141.0], [47.4, 12146.0], [47.5, 12149.0], [47.6, 12152.0], [47.7, 12154.0], [47.8, 12158.0], [47.9, 12163.0], [48.0, 12165.0], [48.1, 12170.0], [48.2, 12172.0], [48.3, 12176.0], [48.4, 12178.0], [48.5, 12181.0], [48.6, 12184.0], [48.7, 12187.0], [48.8, 12192.0], [48.9, 12195.0], [49.0, 12197.0], [49.1, 12200.0], [49.2, 12203.0], [49.3, 12208.0], [49.4, 12211.0], [49.5, 12215.0], [49.6, 12220.0], [49.7, 12222.0], [49.8, 12227.0], [49.9, 12231.0], [50.0, 12234.0], [50.1, 12238.0], [50.2, 12241.0], [50.3, 12244.0], [50.4, 12248.0], [50.5, 12251.0], [50.6, 12255.0], [50.7, 12257.0], [50.8, 12262.0], [50.9, 12265.0], [51.0, 12268.0], [51.1, 12269.0], [51.2, 12273.0], [51.3, 12275.0], [51.4, 12279.0], [51.5, 12283.0], [51.6, 12287.0], [51.7, 12288.0], [51.8, 12288.0], [51.9, 12288.0], [52.0, 12290.0], [52.1, 12292.0], [52.2, 12295.0], [52.3, 12300.0], [52.4, 12303.0], [52.5, 12305.0], [52.6, 12307.0], [52.7, 12311.0], [52.8, 12313.0], [52.9, 12316.0], [53.0, 12320.0], [53.1, 12323.0], [53.2, 12326.0], [53.3, 12329.0], [53.4, 12333.0], [53.5, 12335.0], [53.6, 12339.0], [53.7, 12344.0], [53.8, 12346.0], [53.9, 12350.0], [54.0, 12354.0], [54.1, 12357.0], [54.2, 12360.0], [54.3, 12363.0], [54.4, 12365.0], [54.5, 12370.0], [54.6, 12374.0], [54.7, 12376.0], [54.8, 12380.0], [54.9, 12381.0], [55.0, 12384.0], [55.1, 12388.0], [55.2, 12391.0], [55.3, 12393.0], [55.4, 12397.0], [55.5, 12399.0], [55.6, 12403.0], [55.7, 12406.0], [55.8, 12409.0], [55.9, 12411.0], [56.0, 12415.0], [56.1, 12419.0], [56.2, 12421.0], [56.3, 12424.0], [56.4, 12427.0], [56.5, 12432.0], [56.6, 12436.0], [56.7, 12439.0], [56.8, 12445.0], [56.9, 12449.0], [57.0, 12452.0], [57.1, 12457.0], [57.2, 12460.0], [57.3, 12464.0], [57.4, 12467.0], [57.5, 12469.0], [57.6, 12473.0], [57.7, 12478.0], [57.8, 12480.0], [57.9, 12483.0], [58.0, 12488.0], [58.1, 12492.0], [58.2, 12494.0], [58.3, 12497.0], [58.4, 12501.0], [58.5, 12504.0], [58.6, 12507.0], [58.7, 12508.0], [58.8, 12510.0], [58.9, 12514.0], [59.0, 12518.0], [59.1, 12521.0], [59.2, 12523.0], [59.3, 12528.0], [59.4, 12531.0], [59.5, 12533.0], [59.6, 12537.0], [59.7, 12540.0], [59.8, 12541.0], [59.9, 12544.0], [60.0, 12546.0], [60.1, 12549.0], [60.2, 12551.0], [60.3, 12553.0], [60.4, 12555.0], [60.5, 12557.0], [60.6, 12559.0], [60.7, 12563.0], [60.8, 12565.0], [60.9, 12570.0], [61.0, 12572.0], [61.1, 12577.0], [61.2, 12580.0], [61.3, 12581.0], [61.4, 12584.0], [61.5, 12587.0], [61.6, 12592.0], [61.7, 12597.0], [61.8, 12601.0], [61.9, 12605.0], [62.0, 12607.0], [62.1, 12609.0], [62.2, 12613.0], [62.3, 12614.0], [62.4, 12619.0], [62.5, 12624.0], [62.6, 12628.0], [62.7, 12631.0], [62.8, 12635.0], [62.9, 12637.0], [63.0, 12640.0], [63.1, 12644.0], [63.2, 12648.0], [63.3, 12652.0], [63.4, 12656.0], [63.5, 12658.0], [63.6, 12661.0], [63.7, 12665.0], [63.8, 12667.0], [63.9, 12670.0], [64.0, 12674.0], [64.1, 12677.0], [64.2, 12683.0], [64.3, 12687.0], [64.4, 12691.0], [64.5, 12696.0], [64.6, 12699.0], [64.7, 12704.0], [64.8, 12706.0], [64.9, 12710.0], [65.0, 12714.0], [65.1, 12717.0], [65.2, 12720.0], [65.3, 12726.0], [65.4, 12730.0], [65.5, 12733.0], [65.6, 12735.0], [65.7, 12739.0], [65.8, 12743.0], [65.9, 12745.0], [66.0, 12749.0], [66.1, 12753.0], [66.2, 12757.0], [66.3, 12760.0], [66.4, 12764.0], [66.5, 12770.0], [66.6, 12774.0], [66.7, 12776.0], [66.8, 12779.0], [66.9, 12783.0], [67.0, 12788.0], [67.1, 12794.0], [67.2, 12796.0], [67.3, 12798.0], [67.4, 12799.0], [67.5, 12800.0], [67.6, 12800.0], [67.7, 12806.0], [67.8, 12810.0], [67.9, 12815.0], [68.0, 12819.0], [68.1, 12824.0], [68.2, 12827.0], [68.3, 12831.0], [68.4, 12834.0], [68.5, 12836.0], [68.6, 12839.0], [68.7, 12842.0], [68.8, 12846.0], [68.9, 12850.0], [69.0, 12854.0], [69.1, 12859.0], [69.2, 12863.0], [69.3, 12867.0], [69.4, 12870.0], [69.5, 12873.0], [69.6, 12877.0], [69.7, 12881.0], [69.8, 12884.0], [69.9, 12887.0], [70.0, 12889.0], [70.1, 12893.0], [70.2, 12896.0], [70.3, 12899.0], [70.4, 12902.0], [70.5, 12907.0], [70.6, 12911.0], [70.7, 12914.0], [70.8, 12918.0], [70.9, 12926.0], [71.0, 12931.0], [71.1, 12936.0], [71.2, 12940.0], [71.3, 12946.0], [71.4, 12952.0], [71.5, 12955.0], [71.6, 12958.0], [71.7, 12964.0], [71.8, 12967.0], [71.9, 12969.0], [72.0, 12973.0], [72.1, 12976.0], [72.2, 12981.0], [72.3, 12986.0], [72.4, 12989.0], [72.5, 12995.0], [72.6, 12998.0], [72.7, 13001.0], [72.8, 13006.0], [72.9, 13010.0], [73.0, 13015.0], [73.1, 13019.0], [73.2, 13024.0], [73.3, 13029.0], [73.4, 13033.0], [73.5, 13038.0], [73.6, 13043.0], [73.7, 13047.0], [73.8, 13051.0], [73.9, 13055.0], [74.0, 13057.0], [74.1, 13062.0], [74.2, 13067.0], [74.3, 13075.0], [74.4, 13081.0], [74.5, 13087.0], [74.6, 13094.0], [74.7, 13101.0], [74.8, 13106.0], [74.9, 13112.0], [75.0, 13117.0], [75.1, 13128.0], [75.2, 13136.0], [75.3, 13142.0], [75.4, 13150.0], [75.5, 13159.0], [75.6, 13166.0], [75.7, 13171.0], [75.8, 13176.0], [75.9, 13184.0], [76.0, 13188.0], [76.1, 13193.0], [76.2, 13203.0], [76.3, 13212.0], [76.4, 13216.0], [76.5, 13222.0], [76.6, 13234.0], [76.7, 13239.0], [76.8, 13247.0], [76.9, 13249.0], [77.0, 13252.0], [77.1, 13263.0], [77.2, 13270.0], [77.3, 13279.0], [77.4, 13281.0], [77.5, 13293.0], [77.6, 13301.0], [77.7, 13306.0], [77.8, 13307.0], [77.9, 13307.0], [78.0, 13307.0], [78.1, 13308.0], [78.2, 13308.0], [78.3, 13308.0], [78.4, 13308.0], [78.5, 13308.0], [78.6, 13308.0], [78.7, 13309.0], [78.8, 13310.0], [78.9, 13310.0], [79.0, 13311.0], [79.1, 13311.0], [79.2, 13311.0], [79.3, 13311.0], [79.4, 13311.0], [79.5, 13311.0], [79.6, 13311.0], [79.7, 13311.0], [79.8, 13312.0], [79.9, 13312.0], [80.0, 13312.0], [80.1, 13312.0], [80.2, 13312.0], [80.3, 13312.0], [80.4, 13312.0], [80.5, 13312.0], [80.6, 13312.0], [80.7, 13312.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13313.0], [82.6, 13313.0], [82.7, 13313.0], [82.8, 13313.0], [82.9, 13313.0], [83.0, 13315.0], [83.1, 13315.0], [83.2, 13316.0], [83.3, 13316.0], [83.4, 13316.0], [83.5, 13316.0], [83.6, 13317.0], [83.7, 13317.0], [83.8, 13326.0], [83.9, 13331.0], [84.0, 13339.0], [84.1, 13343.0], [84.2, 13349.0], [84.3, 13359.0], [84.4, 13363.0], [84.5, 13375.0], [84.6, 13383.0], [84.7, 13390.0], [84.8, 13398.0], [84.9, 13408.0], [85.0, 13414.0], [85.1, 13422.0], [85.2, 13432.0], [85.3, 13438.0], [85.4, 13449.0], [85.5, 13460.0], [85.6, 13471.0], [85.7, 13484.0], [85.8, 13490.0], [85.9, 13506.0], [86.0, 13518.0], [86.1, 13530.0], [86.2, 13542.0], [86.3, 13557.0], [86.4, 13567.0], [86.5, 13568.0], [86.6, 13582.0], [86.7, 13607.0], [86.8, 13623.0], [86.9, 13646.0], [87.0, 13664.0], [87.1, 13674.0], [87.2, 13686.0], [87.3, 13702.0], [87.4, 13720.0], [87.5, 13731.0], [87.6, 13742.0], [87.7, 13760.0], [87.8, 13777.0], [87.9, 13789.0], [88.0, 13804.0], [88.1, 13818.0], [88.2, 13819.0], [88.3, 13820.0], [88.4, 13823.0], [88.5, 13823.0], [88.6, 13824.0], [88.7, 13824.0], [88.8, 13824.0], [88.9, 13824.0], [89.0, 13824.0], [89.1, 13824.0], [89.2, 13825.0], [89.3, 13828.0], [89.4, 13834.0], [89.5, 13844.0], [89.6, 13854.0], [89.7, 13862.0], [89.8, 13871.0], [89.9, 13879.0], [90.0, 13892.0], [90.1, 13909.0], [90.2, 13924.0], [90.3, 13937.0], [90.4, 13945.0], [90.5, 13957.0], [90.6, 13975.0], [90.7, 13988.0], [90.8, 14005.0], [90.9, 14027.0], [91.0, 14037.0], [91.1, 14054.0], [91.2, 14080.0], [91.3, 14083.0], [91.4, 14110.0], [91.5, 14142.0], [91.6, 14155.0], [91.7, 14170.0], [91.8, 14205.0], [91.9, 14221.0], [92.0, 14238.0], [92.1, 14262.0], [92.2, 14296.0], [92.3, 14330.0], [92.4, 14331.0], [92.5, 14332.0], [92.6, 14334.0], [92.7, 14335.0], [92.8, 14335.0], [92.9, 14335.0], [93.0, 14336.0], [93.1, 14336.0], [93.2, 14336.0], [93.3, 14337.0], [93.4, 14339.0], [93.5, 14342.0], [93.6, 14366.0], [93.7, 14381.0], [93.8, 14419.0], [93.9, 14485.0], [94.0, 14560.0], [94.1, 14591.0], [94.2, 14592.0], [94.3, 14593.0], [94.4, 14715.0], [94.5, 14829.0], [94.6, 14847.0], [94.7, 14848.0], [94.8, 14857.0], [94.9, 15100.0], [95.0, 15207.0], [95.1, 15359.0], [95.2, 15424.0], [95.3, 15616.0], [95.4, 15872.0], [95.5, 16141.0], [95.6, 16378.0], [95.7, 16383.0], [95.8, 16384.0], [95.9, 16513.0], [96.0, 16745.0], [96.1, 16925.0], [96.2, 17152.0], [96.3, 17500.0], [96.4, 18184.0], [96.5, 19126.0], [96.6, 20224.0], [96.7, 21248.0], [96.8, 22367.0], [96.9, 26367.0], [97.0, 26371.0], [97.1, 27392.0], [97.2, 28635.0], [97.3, 29269.0], [97.4, 29998.0], [97.5, 31894.0], [97.6, 33486.0], [97.7, 34394.0], [97.8, 36865.0], [97.9, 50500.0], [98.0, 56316.0], [98.1, 66642.0], [98.2, 102143.0], [98.3, 105591.0], [98.4, 106239.0], [98.5, 106658.0], [98.6, 107263.0], [98.7, 107777.0], [98.8, 108284.0], [98.9, 110592.0], [99.0, 116479.0], [99.1, 118024.0], [99.2, 120318.0], [99.3, 121089.0], [99.4, 126464.0], [99.5, 131584.0], [99.6, 138496.0], [99.7, 141056.0], [99.8, 155132.0], [99.9, 172544.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 4.0], [6.0, 589.0], [6.1, 592.0], [6.2, 611.0], [6.3, 619.0], [6.4, 653.0], [6.5, 666.0], [6.6, 829.0], [6.7, 1199.0], [6.8, 1290.0], [6.9, 1325.0], [7.0, 1386.0], [7.1, 1530.0], [7.2, 1700.0], [7.3, 2026.0], [7.4, 2046.0], [7.5, 2155.0], [7.6, 2216.0], [7.7, 2232.0], [7.8, 2289.0], [7.9, 2357.0], [8.0, 2592.0], [8.1, 2603.0], [8.2, 2778.0], [8.3, 2866.0], [8.4, 2944.0], [8.5, 3041.0], [8.6, 3249.0], [8.7, 3308.0], [8.8, 3485.0], [8.9, 3782.0], [9.0, 3827.0], [9.1, 3857.0], [9.2, 4273.0], [9.3, 4316.0], [9.4, 4516.0], [9.5, 4739.0], [9.6, 4832.0], [9.7, 4871.0], [9.8, 5451.0], [9.9, 5855.0], [10.0, 6154.0], [10.1, 6201.0], [10.2, 6310.0], [10.3, 6467.0], [10.4, 6529.0], [10.5, 6561.0], [10.6, 6600.0], [10.7, 6686.0], [10.8, 7021.0], [10.9, 7065.0], [11.0, 7122.0], [11.1, 7164.0], [11.2, 7164.0], [11.3, 7164.0], [11.4, 7166.0], [11.5, 7167.0], [11.6, 7167.0], [11.7, 7167.0], [11.8, 7167.0], [11.9, 7167.0], [12.0, 7167.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7169.0], [14.6, 7170.0], [14.7, 7171.0], [14.8, 7171.0], [14.9, 7172.0], [15.0, 7172.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7173.0], [15.4, 7295.0], [15.5, 7419.0], [15.6, 7420.0], [15.7, 7420.0], [15.8, 7420.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7427.0], [17.2, 7428.0], [17.3, 7457.0], [17.4, 7486.0], [17.5, 7673.0], [17.6, 7675.0], [17.7, 7676.0], [17.8, 7679.0], [17.9, 7679.0], [18.0, 7679.0], [18.1, 7679.0], [18.2, 7679.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7681.0], [19.3, 7681.0], [19.4, 7684.0], [19.5, 7684.0], [19.6, 7684.0], [19.7, 7685.0], [19.8, 7685.0], [19.9, 7685.0], [20.0, 7821.0], [20.1, 7932.0], [20.2, 7933.0], [20.3, 7935.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7937.0], [21.5, 7940.0], [21.6, 7940.0], [21.7, 7941.0], [21.8, 8149.0], [21.9, 8187.0], [22.0, 8188.0], [22.1, 8188.0], [22.2, 8188.0], [22.3, 8191.0], [22.4, 8191.0], [22.5, 8191.0], [22.6, 8191.0], [22.7, 8192.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8193.0], [23.6, 8195.0], [23.7, 8196.0], [23.8, 8289.0], [23.9, 8443.0], [24.0, 8446.0], [24.1, 8447.0], [24.2, 8447.0], [24.3, 8447.0], [24.4, 8447.0], [24.5, 8448.0], [24.6, 8448.0], [24.7, 8448.0], [24.8, 8449.0], [24.9, 8619.0], [25.0, 8632.0], [25.1, 8641.0], [25.2, 8699.0], [25.3, 8700.0], [25.4, 8703.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8705.0], [27.0, 8705.0], [27.1, 8708.0], [27.2, 8789.0], [27.3, 8907.0], [27.4, 8956.0], [27.5, 8959.0], [27.6, 8959.0], [27.7, 8959.0], [27.8, 8959.0], [27.9, 8960.0], [28.0, 8960.0], [28.1, 8960.0], [28.2, 9133.0], [28.3, 9156.0], [28.4, 9211.0], [28.5, 9212.0], [28.6, 9212.0], [28.7, 9214.0], [28.8, 9215.0], [28.9, 9215.0], [29.0, 9215.0], [29.1, 9215.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9216.0], [29.5, 9216.0], [29.6, 9216.0], [29.7, 9216.0], [29.8, 9216.0], [29.9, 9216.0], [30.0, 9219.0], [30.1, 9219.0], [30.2, 9219.0], [30.3, 9219.0], [30.4, 9220.0], [30.5, 9220.0], [30.6, 9404.0], [30.7, 9467.0], [30.8, 9467.0], [30.9, 9472.0], [31.0, 9472.0], [31.1, 9472.0], [31.2, 9510.0], [31.3, 9518.0], [31.4, 9567.0], [31.5, 9622.0], [31.6, 9686.0], [31.7, 9723.0], [31.8, 9724.0], [31.9, 9724.0], [32.0, 9726.0], [32.1, 9726.0], [32.2, 9727.0], [32.3, 9727.0], [32.4, 9727.0], [32.5, 9727.0], [32.6, 9727.0], [32.7, 9727.0], [32.8, 9727.0], [32.9, 9728.0], [33.0, 9728.0], [33.1, 9728.0], [33.2, 9728.0], [33.3, 9728.0], [33.4, 9728.0], [33.5, 9728.0], [33.6, 9728.0], [33.7, 9728.0], [33.8, 9728.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9729.0], [34.7, 9731.0], [34.8, 9732.0], [34.9, 9732.0], [35.0, 9732.0], [35.1, 9732.0], [35.2, 9838.0], [35.3, 9887.0], [35.4, 9979.0], [35.5, 9980.0], [35.6, 9981.0], [35.7, 9984.0], [35.8, 9984.0], [35.9, 9984.0], [36.0, 10030.0], [36.1, 10221.0], [36.2, 10236.0], [36.3, 10236.0], [36.4, 10236.0], [36.5, 10239.0], [36.6, 10240.0], [36.7, 10240.0], [36.8, 10240.0], [36.9, 10240.0], [37.0, 10240.0], [37.1, 10240.0], [37.2, 10240.0], [37.3, 10240.0], [37.4, 10243.0], [37.5, 10243.0], [37.6, 10243.0], [37.7, 10244.0], [37.8, 10244.0], [37.9, 10306.0], [38.0, 10452.0], [38.1, 10480.0], [38.2, 10491.0], [38.3, 10495.0], [38.4, 10496.0], [38.5, 10496.0], [38.6, 10560.0], [38.7, 10597.0], [38.8, 10614.0], [38.9, 10646.0], [39.0, 10682.0], [39.1, 10696.0], [39.2, 10730.0], [39.3, 10750.0], [39.4, 10750.0], [39.5, 10750.0], [39.6, 10751.0], [39.7, 10751.0], [39.8, 10751.0], [39.9, 10751.0], [40.0, 10751.0], [40.1, 10751.0], [40.2, 10751.0], [40.3, 10752.0], [40.4, 10752.0], [40.5, 10752.0], [40.6, 10755.0], [40.7, 10755.0], [40.8, 10756.0], [40.9, 10761.0], [41.0, 10788.0], [41.1, 10797.0], [41.2, 10804.0], [41.3, 10820.0], [41.4, 10828.0], [41.5, 10845.0], [41.6, 10856.0], [41.7, 10864.0], [41.8, 10902.0], [41.9, 10938.0], [42.0, 10939.0], [42.1, 10963.0], [42.2, 10996.0], [42.3, 11000.0], [42.4, 11004.0], [42.5, 11006.0], [42.6, 11007.0], [42.7, 11007.0], [42.8, 11007.0], [42.9, 11008.0], [43.0, 11014.0], [43.1, 11014.0], [43.2, 11022.0], [43.3, 11029.0], [43.4, 11033.0], [43.5, 11042.0], [43.6, 11049.0], [43.7, 11066.0], [43.8, 11069.0], [43.9, 11097.0], [44.0, 11116.0], [44.1, 11135.0], [44.2, 11146.0], [44.3, 11150.0], [44.4, 11169.0], [44.5, 11181.0], [44.6, 11200.0], [44.7, 11236.0], [44.8, 11253.0], [44.9, 11258.0], [45.0, 11260.0], [45.1, 11264.0], [45.2, 11264.0], [45.3, 11264.0], [45.4, 11273.0], [45.5, 11287.0], [45.6, 11293.0], [45.7, 11306.0], [45.8, 11322.0], [45.9, 11340.0], [46.0, 11354.0], [46.1, 11376.0], [46.2, 11381.0], [46.3, 11386.0], [46.4, 11392.0], [46.5, 11403.0], [46.6, 11417.0], [46.7, 11442.0], [46.8, 11447.0], [46.9, 11483.0], [47.0, 11516.0], [47.1, 11516.0], [47.2, 11519.0], [47.3, 11520.0], [47.4, 11520.0], [47.5, 11520.0], [47.6, 11535.0], [47.7, 11545.0], [47.8, 11550.0], [47.9, 11562.0], [48.0, 11567.0], [48.1, 11571.0], [48.2, 11583.0], [48.3, 11620.0], [48.4, 11628.0], [48.5, 11649.0], [48.6, 11652.0], [48.7, 11658.0], [48.8, 11679.0], [48.9, 11682.0], [49.0, 11687.0], [49.1, 11691.0], [49.2, 11752.0], [49.3, 11753.0], [49.4, 11765.0], [49.5, 11775.0], [49.6, 11776.0], [49.7, 11776.0], [49.8, 11776.0], [49.9, 11777.0], [50.0, 11777.0], [50.1, 11779.0], [50.2, 11782.0], [50.3, 11844.0], [50.4, 11845.0], [50.5, 11863.0], [50.6, 11886.0], [50.7, 11887.0], [50.8, 11900.0], [50.9, 11909.0], [51.0, 11927.0], [51.1, 11942.0], [51.2, 11968.0], [51.3, 11968.0], [51.4, 11995.0], [51.5, 12010.0], [51.6, 12028.0], [51.7, 12029.0], [51.8, 12031.0], [51.9, 12046.0], [52.0, 12076.0], [52.1, 12112.0], [52.2, 12125.0], [52.3, 12171.0], [52.4, 12200.0], [52.5, 12222.0], [52.6, 12238.0], [52.7, 12261.0], [52.8, 12272.0], [52.9, 12284.0], [53.0, 12287.0], [53.1, 12288.0], [53.2, 12288.0], [53.3, 12288.0], [53.4, 12289.0], [53.5, 12320.0], [53.6, 12325.0], [53.7, 12338.0], [53.8, 12365.0], [53.9, 12366.0], [54.0, 12418.0], [54.1, 12434.0], [54.2, 12439.0], [54.3, 12471.0], [54.4, 12517.0], [54.5, 12528.0], [54.6, 12543.0], [54.7, 12544.0], [54.8, 12544.0], [54.9, 12544.0], [55.0, 12595.0], [55.1, 12612.0], [55.2, 12634.0], [55.3, 12640.0], [55.4, 12664.0], [55.5, 12665.0], [55.6, 12675.0], [55.7, 12684.0], [55.8, 12694.0], [55.9, 12740.0], [56.0, 12796.0], [56.1, 12799.0], [56.2, 12799.0], [56.3, 12799.0], [56.4, 12800.0], [56.5, 12800.0], [56.6, 12800.0], [56.7, 12803.0], [56.8, 12806.0], [56.9, 12810.0], [57.0, 12837.0], [57.1, 12906.0], [57.2, 12916.0], [57.3, 12934.0], [57.4, 12947.0], [57.5, 13036.0], [57.6, 13056.0], [57.7, 13058.0], [57.8, 13059.0], [57.9, 13061.0], [58.0, 13078.0], [58.1, 13096.0], [58.2, 13124.0], [58.3, 13140.0], [58.4, 13143.0], [58.5, 13171.0], [58.6, 13214.0], [58.7, 13217.0], [58.8, 13229.0], [58.9, 13292.0], [59.0, 13306.0], [59.1, 13307.0], [59.2, 13307.0], [59.3, 13307.0], [59.4, 13307.0], [59.5, 13308.0], [59.6, 13308.0], [59.7, 13308.0], [59.8, 13308.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13309.0], [60.7, 13309.0], [60.8, 13310.0], [60.9, 13310.0], [61.0, 13310.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13315.0], [71.7, 13315.0], [71.8, 13315.0], [71.9, 13315.0], [72.0, 13315.0], [72.1, 13315.0], [72.2, 13315.0], [72.3, 13315.0], [72.4, 13315.0], [72.5, 13316.0], [72.6, 13316.0], [72.7, 13316.0], [72.8, 13316.0], [72.9, 13316.0], [73.0, 13316.0], [73.1, 13316.0], [73.2, 13316.0], [73.3, 13316.0], [73.4, 13316.0], [73.5, 13316.0], [73.6, 13316.0], [73.7, 13316.0], [73.8, 13316.0], [73.9, 13316.0], [74.0, 13316.0], [74.1, 13316.0], [74.2, 13317.0], [74.3, 13317.0], [74.4, 13317.0], [74.5, 13317.0], [74.6, 13339.0], [74.7, 13342.0], [74.8, 13372.0], [74.9, 13472.0], [75.0, 13508.0], [75.1, 13513.0], [75.2, 13562.0], [75.3, 13567.0], [75.4, 13567.0], [75.5, 13568.0], [75.6, 13568.0], [75.7, 13581.0], [75.8, 13615.0], [75.9, 13676.0], [76.0, 13763.0], [76.1, 13801.0], [76.2, 13818.0], [76.3, 13818.0], [76.4, 13818.0], [76.5, 13819.0], [76.6, 13819.0], [76.7, 13820.0], [76.8, 13820.0], [76.9, 13821.0], [77.0, 13822.0], [77.1, 13823.0], [77.2, 13823.0], [77.3, 13823.0], [77.4, 13823.0], [77.5, 13823.0], [77.6, 13823.0], [77.7, 13823.0], [77.8, 13823.0], [77.9, 13823.0], [78.0, 13823.0], [78.1, 13823.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13825.0], [79.6, 13827.0], [79.7, 13828.0], [79.8, 13828.0], [79.9, 13828.0], [80.0, 13829.0], [80.1, 13880.0], [80.2, 13900.0], [80.3, 14012.0], [80.4, 14079.0], [80.5, 14079.0], [80.6, 14079.0], [80.7, 14080.0], [80.8, 14080.0], [80.9, 14151.0], [81.0, 14202.0], [81.1, 14230.0], [81.2, 14284.0], [81.3, 14331.0], [81.4, 14331.0], [81.5, 14331.0], [81.6, 14331.0], [81.7, 14331.0], [81.8, 14331.0], [81.9, 14332.0], [82.0, 14332.0], [82.1, 14332.0], [82.2, 14332.0], [82.3, 14334.0], [82.4, 14334.0], [82.5, 14335.0], [82.6, 14335.0], [82.7, 14335.0], [82.8, 14335.0], [82.9, 14335.0], [83.0, 14335.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14339.0], [85.0, 14345.0], [85.1, 14544.0], [85.2, 14573.0], [85.3, 14590.0], [85.4, 14592.0], [85.5, 14592.0], [85.6, 14592.0], [85.7, 14617.0], [85.8, 14636.0], [85.9, 14691.0], [86.0, 14775.0], [86.1, 14825.0], [86.2, 14847.0], [86.3, 14847.0], [86.4, 14847.0], [86.5, 14848.0], [86.6, 14848.0], [86.7, 14848.0], [86.8, 14990.0], [86.9, 15044.0], [87.0, 15099.0], [87.1, 15103.0], [87.2, 15104.0], [87.3, 15104.0], [87.4, 15104.0], [87.5, 15235.0], [87.6, 15313.0], [87.7, 15354.0], [87.8, 15360.0], [87.9, 15360.0], [88.0, 15540.0], [88.1, 15614.0], [88.2, 15615.0], [88.3, 15616.0], [88.4, 15620.0], [88.5, 15786.0], [88.6, 15985.0], [88.7, 16378.0], [88.8, 16379.0], [88.9, 16380.0], [89.0, 16382.0], [89.1, 16383.0], [89.2, 16383.0], [89.3, 16384.0], [89.4, 16496.0], [89.5, 16737.0], [89.6, 16895.0], [89.7, 16896.0], [89.8, 17009.0], [89.9, 17152.0], [90.0, 17407.0], [90.1, 17408.0], [90.2, 17409.0], [90.3, 17412.0], [90.4, 17445.0], [90.5, 17641.0], [90.6, 17703.0], [90.7, 17970.0], [90.8, 18140.0], [90.9, 18172.0], [91.0, 18428.0], [91.1, 18431.0], [91.2, 18683.0], [91.3, 18771.0], [91.4, 18944.0], [91.5, 20223.0], [91.6, 20991.0], [91.7, 21095.0], [91.8, 25087.0], [91.9, 25926.0], [92.0, 26363.0], [92.1, 26368.0], [92.2, 26372.0], [92.3, 27392.0], [92.4, 27611.0], [92.5, 27647.0], [92.6, 28017.0], [92.7, 28270.0], [92.8, 28370.0], [92.9, 28415.0], [93.0, 29448.0], [93.1, 31173.0], [93.2, 31748.0], [93.3, 32216.0], [93.4, 32554.0], [93.5, 32614.0], [93.6, 32623.0], [93.7, 32798.0], [93.8, 34808.0], [93.9, 36864.0], [94.0, 43519.0], [94.1, 53248.0], [94.2, 55295.0], [94.3, 56315.0], [94.4, 64238.0], [94.5, 64841.0], [94.6, 64899.0], [94.7, 81919.0], [94.8, 82175.0], [94.9, 86015.0], [95.0, 88064.0], [95.1, 105472.0], [95.2, 105472.0], [95.3, 106244.0], [95.4, 106749.0], [95.5, 107008.0], [95.6, 107260.0], [95.7, 107520.0], [95.8, 107524.0], [95.9, 107776.0], [96.0, 108032.0], [96.1, 108033.0], [96.2, 108036.0], [96.3, 108284.0], [96.4, 109056.0], [96.5, 109056.0], [96.6, 110080.0], [96.7, 110081.0], [96.8, 110332.0], [96.9, 110592.0], [97.0, 112127.0], [97.1, 115967.0], [97.2, 115968.0], [97.3, 116475.0], [97.4, 117504.0], [97.5, 118015.0], [97.6, 120064.0], [97.7, 120065.0], [97.8, 120319.0], [97.9, 121089.0], [98.0, 122881.0], [98.1, 124156.0], [98.2, 126463.0], [98.3, 126463.0], [98.4, 126463.0], [98.5, 126467.0], [98.6, 126719.0], [98.7, 126720.0], [98.8, 128252.0], [98.9, 137472.0], [99.0, 139008.0], [99.1, 141056.0], [99.2, 145408.0], [99.3, 153088.0], [99.4, 153600.0], [99.5, 161538.0], [99.6, 172543.0], [99.7, 172543.0], [99.8, 172544.0], [99.9, 204799.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 6.0], [6.0, 21.0], [6.1, 22.0], [6.2, 23.0], [6.3, 32.0], [6.4, 34.0], [6.5, 35.0], [6.6, 37.0], [6.7, 37.0], [6.8, 76.0], [6.9, 171.0], [7.0, 456.0], [7.1, 547.0], [7.2, 745.0], [7.3, 812.0], [7.4, 877.0], [7.5, 1028.0], [7.6, 1088.0], [7.7, 1381.0], [7.8, 1615.0], [7.9, 1695.0], [8.0, 1739.0], [8.1, 1854.0], [8.2, 2048.0], [8.3, 2113.0], [8.4, 2255.0], [8.5, 2278.0], [8.6, 2299.0], [8.7, 2580.0], [8.8, 2603.0], [8.9, 2694.0], [9.0, 3071.0], [9.1, 3438.0], [9.2, 3588.0], [9.3, 3669.0], [9.4, 3878.0], [9.5, 4095.0], [9.6, 4127.0], [9.7, 4252.0], [9.8, 4262.0], [9.9, 4739.0], [10.0, 4888.0], [10.1, 5190.0], [10.2, 5371.0], [10.3, 5495.0], [10.4, 5631.0], [10.5, 5693.0], [10.6, 5842.0], [10.7, 5929.0], [10.8, 5947.0], [10.9, 5990.0], [11.0, 6041.0], [11.1, 6054.0], [11.2, 6430.0], [11.3, 6510.0], [11.4, 6825.0], [11.5, 6999.0], [11.6, 7060.0], [11.7, 7102.0], [11.8, 7115.0], [11.9, 7139.0], [12.0, 7157.0], [12.1, 7164.0], [12.2, 7164.0], [12.3, 7166.0], [12.4, 7166.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7169.0], [14.5, 7169.0], [14.6, 7169.0], [14.7, 7169.0], [14.8, 7169.0], [14.9, 7171.0], [15.0, 7171.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7172.0], [15.4, 7172.0], [15.5, 7172.0], [15.6, 7172.0], [15.7, 7172.0], [15.8, 7173.0], [15.9, 7186.0], [16.0, 7186.0], [16.1, 7209.0], [16.2, 7211.0], [16.3, 7239.0], [16.4, 7262.0], [16.5, 7299.0], [16.6, 7344.0], [16.7, 7403.0], [16.8, 7419.0], [16.9, 7419.0], [17.0, 7420.0], [17.1, 7420.0], [17.2, 7420.0], [17.3, 7421.0], [17.4, 7421.0], [17.5, 7422.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7424.0], [19.2, 7425.0], [19.3, 7425.0], [19.4, 7427.0], [19.5, 7428.0], [19.6, 7428.0], [19.7, 7428.0], [19.8, 7528.0], [19.9, 7557.0], [20.0, 7569.0], [20.1, 7590.0], [20.2, 7614.0], [20.3, 7650.0], [20.4, 7653.0], [20.5, 7675.0], [20.6, 7676.0], [20.7, 7678.0], [20.8, 7679.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7680.0], [21.8, 7680.0], [21.9, 7681.0], [22.0, 7683.0], [22.1, 7684.0], [22.2, 7684.0], [22.3, 7685.0], [22.4, 7703.0], [22.5, 7756.0], [22.6, 7760.0], [22.7, 7846.0], [22.8, 7934.0], [22.9, 7935.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7936.0], [23.4, 7936.0], [23.5, 7936.0], [23.6, 7936.0], [23.7, 7936.0], [23.8, 7936.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7940.0], [24.3, 7976.0], [24.4, 7984.0], [24.5, 8035.0], [24.6, 8163.0], [24.7, 8187.0], [24.8, 8188.0], [24.9, 8190.0], [25.0, 8191.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8192.0], [25.8, 8192.0], [25.9, 8192.0], [26.0, 8192.0], [26.1, 8194.0], [26.2, 8196.0], [26.3, 8237.0], [26.4, 8383.0], [26.5, 8429.0], [26.6, 8444.0], [26.7, 8446.0], [26.8, 8447.0], [26.9, 8447.0], [27.0, 8447.0], [27.1, 8449.0], [27.2, 8449.0], [27.3, 8452.0], [27.4, 8469.0], [27.5, 8540.0], [27.6, 8560.0], [27.7, 8604.0], [27.8, 8626.0], [27.9, 8639.0], [28.0, 8680.0], [28.1, 8700.0], [28.2, 8700.0], [28.3, 8700.0], [28.4, 8700.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8703.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8704.0], [29.8, 8705.0], [29.9, 8705.0], [30.0, 8707.0], [30.1, 8708.0], [30.2, 8708.0], [30.3, 8717.0], [30.4, 8734.0], [30.5, 8774.0], [30.6, 8781.0], [30.7, 8788.0], [30.8, 8841.0], [30.9, 8900.0], [31.0, 8903.0], [31.1, 8922.0], [31.2, 8955.0], [31.3, 8959.0], [31.4, 8960.0], [31.5, 8960.0], [31.6, 8963.0], [31.7, 9132.0], [31.8, 9164.0], [31.9, 9193.0], [32.0, 9212.0], [32.1, 9212.0], [32.2, 9213.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9217.0], [33.6, 9219.0], [33.7, 9220.0], [33.8, 9220.0], [33.9, 9220.0], [34.0, 9221.0], [34.1, 9233.0], [34.2, 9256.0], [34.3, 9296.0], [34.4, 9345.0], [34.5, 9468.0], [34.6, 9468.0], [34.7, 9472.0], [34.8, 9571.0], [34.9, 9627.0], [35.0, 9656.0], [35.1, 9673.0], [35.2, 9686.0], [35.3, 9724.0], [35.4, 9724.0], [35.5, 9724.0], [35.6, 9725.0], [35.7, 9726.0], [35.8, 9727.0], [35.9, 9727.0], [36.0, 9727.0], [36.1, 9727.0], [36.2, 9727.0], [36.3, 9727.0], [36.4, 9728.0], [36.5, 9728.0], [36.6, 9728.0], [36.7, 9728.0], [36.8, 9728.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9729.0], [37.8, 9729.0], [37.9, 9732.0], [38.0, 9756.0], [38.1, 9772.0], [38.2, 9847.0], [38.3, 9854.0], [38.4, 9878.0], [38.5, 9891.0], [38.6, 9934.0], [38.7, 9979.0], [38.8, 9980.0], [38.9, 9983.0], [39.0, 9984.0], [39.1, 9984.0], [39.2, 9984.0], [39.3, 9990.0], [39.4, 10046.0], [39.5, 10103.0], [39.6, 10157.0], [39.7, 10165.0], [39.8, 10204.0], [39.9, 10205.0], [40.0, 10235.0], [40.1, 10236.0], [40.2, 10236.0], [40.3, 10239.0], [40.4, 10239.0], [40.5, 10240.0], [40.6, 10240.0], [40.7, 10240.0], [40.8, 10240.0], [40.9, 10240.0], [41.0, 10240.0], [41.1, 10240.0], [41.2, 10240.0], [41.3, 10243.0], [41.4, 10243.0], [41.5, 10244.0], [41.6, 10244.0], [41.7, 10244.0], [41.8, 10245.0], [41.9, 10284.0], [42.0, 10310.0], [42.1, 10310.0], [42.2, 10322.0], [42.3, 10372.0], [42.4, 10412.0], [42.5, 10426.0], [42.6, 10433.0], [42.7, 10440.0], [42.8, 10446.0], [42.9, 10454.0], [43.0, 10463.0], [43.1, 10493.0], [43.2, 10495.0], [43.3, 10496.0], [43.4, 10496.0], [43.5, 10496.0], [43.6, 10496.0], [43.7, 10497.0], [43.8, 10499.0], [43.9, 10500.0], [44.0, 10527.0], [44.1, 10566.0], [44.2, 10601.0], [44.3, 10602.0], [44.4, 10617.0], [44.5, 10633.0], [44.6, 10649.0], [44.7, 10656.0], [44.8, 10671.0], [44.9, 10683.0], [45.0, 10695.0], [45.1, 10713.0], [45.2, 10726.0], [45.3, 10744.0], [45.4, 10746.0], [45.5, 10749.0], [45.6, 10749.0], [45.7, 10750.0], [45.8, 10751.0], [45.9, 10751.0], [46.0, 10751.0], [46.1, 10751.0], [46.2, 10752.0], [46.3, 10752.0], [46.4, 10752.0], [46.5, 10752.0], [46.6, 10753.0], [46.7, 10755.0], [46.8, 10762.0], [46.9, 10780.0], [47.0, 10787.0], [47.1, 10801.0], [47.2, 10811.0], [47.3, 10817.0], [47.4, 10820.0], [47.5, 10828.0], [47.6, 10853.0], [47.7, 10894.0], [47.8, 10904.0], [47.9, 10914.0], [48.0, 10931.0], [48.1, 10945.0], [48.2, 10959.0], [48.3, 10976.0], [48.4, 10980.0], [48.5, 10987.0], [48.6, 10995.0], [48.7, 11001.0], [48.8, 11008.0], [48.9, 11008.0], [49.0, 11008.0], [49.1, 11014.0], [49.2, 11016.0], [49.3, 11063.0], [49.4, 11116.0], [49.5, 11139.0], [49.6, 11153.0], [49.7, 11169.0], [49.8, 11175.0], [49.9, 11239.0], [50.0, 11247.0], [50.1, 11264.0], [50.2, 11264.0], [50.3, 11264.0], [50.4, 11264.0], [50.5, 11264.0], [50.6, 11278.0], [50.7, 11284.0], [50.8, 11293.0], [50.9, 11301.0], [51.0, 11323.0], [51.1, 11338.0], [51.2, 11341.0], [51.3, 11344.0], [51.4, 11348.0], [51.5, 11376.0], [51.6, 11382.0], [51.7, 11402.0], [51.8, 11409.0], [51.9, 11448.0], [52.0, 11463.0], [52.1, 11477.0], [52.2, 11516.0], [52.3, 11518.0], [52.4, 11520.0], [52.5, 11537.0], [52.6, 11542.0], [52.7, 11552.0], [52.8, 11603.0], [52.9, 11618.0], [53.0, 11634.0], [53.1, 11635.0], [53.2, 11654.0], [53.3, 11669.0], [53.4, 11754.0], [53.5, 11758.0], [53.6, 11768.0], [53.7, 11770.0], [53.8, 11771.0], [53.9, 11772.0], [54.0, 11773.0], [54.1, 11776.0], [54.2, 11776.0], [54.3, 11776.0], [54.4, 11777.0], [54.5, 11792.0], [54.6, 11840.0], [54.7, 11847.0], [54.8, 11952.0], [54.9, 11953.0], [55.0, 12017.0], [55.1, 12032.0], [55.2, 12032.0], [55.3, 12048.0], [55.4, 12072.0], [55.5, 12139.0], [55.6, 12181.0], [55.7, 12194.0], [55.8, 12201.0], [55.9, 12231.0], [56.0, 12243.0], [56.1, 12266.0], [56.2, 12283.0], [56.3, 12285.0], [56.4, 12288.0], [56.5, 12289.0], [56.6, 12291.0], [56.7, 12292.0], [56.8, 12366.0], [56.9, 12398.0], [57.0, 12428.0], [57.1, 12451.0], [57.2, 12484.0], [57.3, 12539.0], [57.4, 12544.0], [57.5, 12544.0], [57.6, 12544.0], [57.7, 12588.0], [57.8, 12676.0], [57.9, 12750.0], [58.0, 12793.0], [58.1, 12798.0], [58.2, 12799.0], [58.3, 12799.0], [58.4, 12800.0], [58.5, 12800.0], [58.6, 12801.0], [58.7, 12804.0], [58.8, 12950.0], [58.9, 12953.0], [59.0, 13005.0], [59.1, 13050.0], [59.2, 13055.0], [59.3, 13055.0], [59.4, 13066.0], [59.5, 13134.0], [59.6, 13162.0], [59.7, 13174.0], [59.8, 13175.0], [59.9, 13192.0], [60.0, 13198.0], [60.1, 13206.0], [60.2, 13207.0], [60.3, 13226.0], [60.4, 13233.0], [60.5, 13237.0], [60.6, 13251.0], [60.7, 13252.0], [60.8, 13259.0], [60.9, 13262.0], [61.0, 13281.0], [61.1, 13283.0], [61.2, 13285.0], [61.3, 13296.0], [61.4, 13306.0], [61.5, 13307.0], [61.6, 13307.0], [61.7, 13307.0], [61.8, 13308.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13308.0], [62.2, 13308.0], [62.3, 13308.0], [62.4, 13308.0], [62.5, 13308.0], [62.6, 13308.0], [62.7, 13308.0], [62.8, 13308.0], [62.9, 13308.0], [63.0, 13308.0], [63.1, 13308.0], [63.2, 13309.0], [63.3, 13309.0], [63.4, 13310.0], [63.5, 13310.0], [63.6, 13310.0], [63.7, 13310.0], [63.8, 13310.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13315.0], [72.1, 13315.0], [72.2, 13316.0], [72.3, 13316.0], [72.4, 13316.0], [72.5, 13316.0], [72.6, 13316.0], [72.7, 13316.0], [72.8, 13316.0], [72.9, 13317.0], [73.0, 13317.0], [73.1, 13317.0], [73.2, 13318.0], [73.3, 13322.0], [73.4, 13327.0], [73.5, 13330.0], [73.6, 13341.0], [73.7, 13346.0], [73.8, 13349.0], [73.9, 13350.0], [74.0, 13355.0], [74.1, 13362.0], [74.2, 13364.0], [74.3, 13370.0], [74.4, 13371.0], [74.5, 13381.0], [74.6, 13397.0], [74.7, 13414.0], [74.8, 13416.0], [74.9, 13426.0], [75.0, 13509.0], [75.1, 13513.0], [75.2, 13517.0], [75.3, 13556.0], [75.4, 13567.0], [75.5, 13568.0], [75.6, 13572.0], [75.7, 13590.0], [75.8, 13692.0], [75.9, 13722.0], [76.0, 13769.0], [76.1, 13811.0], [76.2, 13818.0], [76.3, 13819.0], [76.4, 13819.0], [76.5, 13820.0], [76.6, 13820.0], [76.7, 13820.0], [76.8, 13820.0], [76.9, 13822.0], [77.0, 13822.0], [77.1, 13823.0], [77.2, 13823.0], [77.3, 13824.0], [77.4, 13824.0], [77.5, 13824.0], [77.6, 13824.0], [77.7, 13824.0], [77.8, 13824.0], [77.9, 13824.0], [78.0, 13824.0], [78.1, 13824.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13825.0], [78.8, 13825.0], [78.9, 13825.0], [79.0, 13828.0], [79.1, 13829.0], [79.2, 13860.0], [79.3, 13867.0], [79.4, 13904.0], [79.5, 14005.0], [79.6, 14078.0], [79.7, 14079.0], [79.8, 14080.0], [79.9, 14080.0], [80.0, 14080.0], [80.1, 14080.0], [80.2, 14110.0], [80.3, 14183.0], [80.4, 14242.0], [80.5, 14331.0], [80.6, 14332.0], [80.7, 14332.0], [80.8, 14332.0], [80.9, 14332.0], [81.0, 14333.0], [81.1, 14334.0], [81.2, 14334.0], [81.3, 14335.0], [81.4, 14335.0], [81.5, 14335.0], [81.6, 14335.0], [81.7, 14335.0], [81.8, 14335.0], [81.9, 14335.0], [82.0, 14335.0], [82.1, 14336.0], [82.2, 14336.0], [82.3, 14336.0], [82.4, 14336.0], [82.5, 14336.0], [82.6, 14336.0], [82.7, 14336.0], [82.8, 14336.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14336.0], [83.7, 14337.0], [83.8, 14337.0], [83.9, 14339.0], [84.0, 14340.0], [84.1, 14340.0], [84.2, 14340.0], [84.3, 14340.0], [84.4, 14340.0], [84.5, 14365.0], [84.6, 14423.0], [84.7, 14433.0], [84.8, 14511.0], [84.9, 14588.0], [85.0, 14591.0], [85.1, 14592.0], [85.2, 14846.0], [85.3, 14847.0], [85.4, 14847.0], [85.5, 14848.0], [85.6, 14848.0], [85.7, 14848.0], [85.8, 14848.0], [85.9, 14848.0], [86.0, 14971.0], [86.1, 15077.0], [86.2, 15100.0], [86.3, 15104.0], [86.4, 15104.0], [86.5, 15307.0], [86.6, 15365.0], [86.7, 15365.0], [86.8, 15387.0], [86.9, 15612.0], [87.0, 15700.0], [87.1, 15871.0], [87.2, 15872.0], [87.3, 16379.0], [87.4, 16380.0], [87.5, 16380.0], [87.6, 16383.0], [87.7, 16384.0], [87.8, 16384.0], [87.9, 16384.0], [88.0, 16384.0], [88.1, 16385.0], [88.2, 16388.0], [88.3, 16714.0], [88.4, 16895.0], [88.5, 16895.0], [88.6, 17152.0], [88.7, 17152.0], [88.8, 17355.0], [88.9, 17406.0], [89.0, 17407.0], [89.1, 17408.0], [89.2, 17408.0], [89.3, 17423.0], [89.4, 17531.0], [89.5, 17756.0], [89.6, 18172.0], [89.7, 18485.0], [89.8, 20763.0], [89.9, 20784.0], [90.0, 21053.0], [90.1, 23202.0], [90.2, 24326.0], [90.3, 24410.0], [90.4, 26357.0], [90.5, 26368.0], [90.6, 26368.0], [90.7, 26368.0], [90.8, 26624.0], [90.9, 27114.0], [91.0, 27392.0], [91.1, 28044.0], [91.2, 28100.0], [91.3, 28290.0], [91.4, 28349.0], [91.5, 28435.0], [91.6, 28441.0], [91.7, 28724.0], [91.8, 30200.0], [91.9, 31183.0], [92.0, 31553.0], [92.1, 31554.0], [92.2, 32573.0], [92.3, 33740.0], [92.4, 36109.0], [92.5, 39339.0], [92.6, 41352.0], [92.7, 52249.0], [92.8, 53299.0], [92.9, 56698.0], [93.0, 62344.0], [93.1, 64823.0], [93.2, 64912.0], [93.3, 65026.0], [93.4, 65882.0], [93.5, 71444.0], [93.6, 73590.0], [93.7, 81406.0], [93.8, 82175.0], [93.9, 82176.0], [94.0, 84688.0], [94.1, 88064.0], [94.2, 94974.0], [94.3, 95825.0], [94.4, 102144.0], [94.5, 102148.0], [94.6, 102877.0], [94.7, 103781.0], [94.8, 105461.0], [94.9, 105767.0], [95.0, 105909.0], [95.1, 106213.0], [95.2, 106244.0], [95.3, 106245.0], [95.4, 106500.0], [95.5, 106609.0], [95.6, 106754.0], [95.7, 106990.0], [95.8, 107178.0], [95.9, 107264.0], [96.0, 107410.0], [96.1, 107507.0], [96.2, 107549.0], [96.3, 108036.0], [96.4, 110333.0], [96.5, 110333.0], [96.6, 110556.0], [96.7, 110592.0], [96.8, 110598.0], [96.9, 114842.0], [97.0, 114936.0], [97.1, 115967.0], [97.2, 116475.0], [97.3, 116476.0], [97.4, 116477.0], [97.5, 116479.0], [97.6, 118784.0], [97.7, 118787.0], [97.8, 119808.0], [97.9, 120063.0], [98.0, 120580.0], [98.1, 122370.0], [98.2, 122879.0], [98.3, 124156.0], [98.4, 126464.0], [98.5, 126891.0], [98.6, 130224.0], [98.7, 131072.0], [98.8, 138902.0], [98.9, 144370.0], [99.0, 151808.0], [99.1, 153600.0], [99.2, 153601.0], [99.3, 155137.0], [99.4, 161538.0], [99.5, 172544.0], [99.6, 172544.0], [99.7, 204800.0], [99.8, 212991.0], [99.9, 227072.0], [100.0, 229377.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 664.0, "series": [{"data": [[0.0, 260.0], [138400.0, 5.0], [136100.0, 1.0], [148900.0, 1.0], [86700.0, 1.0], [105900.0, 2.0], [102700.0, 1.0], [107500.0, 2.0], [106700.0, 1.0], [115500.0, 1.0], [118700.0, 2.0], [121900.0, 1.0], [120300.0, 5.0], [126700.0, 6.0], [153000.0, 1.0], [33700.0, 2.0], [131500.0, 2.0], [32900.0, 3.0], [36100.0, 1.0], [40100.0, 1.0], [157100.0, 3.0], [50500.0, 1.0], [52500.0, 1.0], [57300.0, 1.0], [66600.0, 1.0], [65800.0, 1.0], [102600.0, 1.0], [108200.0, 4.0], [109800.0, 1.0], [106600.0, 1.0], [109000.0, 2.0], [121000.0, 4.0], [137200.0, 1.0], [150000.0, 1.0], [1100.0, 1.0], [1200.0, 22.0], [1300.0, 44.0], [1400.0, 32.0], [1500.0, 13.0], [1600.0, 11.0], [1700.0, 16.0], [1800.0, 17.0], [1900.0, 14.0], [2000.0, 11.0], [2100.0, 17.0], [2200.0, 11.0], [2300.0, 7.0], [2400.0, 12.0], [2500.0, 9.0], [2600.0, 11.0], [2700.0, 11.0], [2800.0, 23.0], [2900.0, 16.0], [3000.0, 13.0], [3100.0, 14.0], [3200.0, 9.0], [3300.0, 14.0], [3400.0, 22.0], [3500.0, 11.0], [3700.0, 31.0], [3600.0, 27.0], [3800.0, 11.0], [3900.0, 12.0], [4000.0, 18.0], [4100.0, 23.0], [4200.0, 16.0], [4300.0, 9.0], [65700.0, 1.0], [4600.0, 8.0], [4400.0, 7.0], [4500.0, 5.0], [4700.0, 12.0], [4800.0, 12.0], [5000.0, 10.0], [4900.0, 8.0], [5100.0, 10.0], [5200.0, 17.0], [5300.0, 14.0], [5500.0, 16.0], [5400.0, 30.0], [5600.0, 13.0], [5700.0, 6.0], [5800.0, 6.0], [6000.0, 7.0], [6100.0, 4.0], [5900.0, 5.0], [6200.0, 5.0], [6300.0, 4.0], [6500.0, 10.0], [6400.0, 8.0], [6600.0, 22.0], [105700.0, 2.0], [6700.0, 12.0], [6800.0, 17.0], [6900.0, 13.0], [110500.0, 2.0], [7100.0, 188.0], [7000.0, 19.0], [7300.0, 31.0], [7200.0, 21.0], [7400.0, 102.0], [7600.0, 90.0], [7500.0, 19.0], [7800.0, 16.0], [7700.0, 10.0], [7900.0, 88.0], [124100.0, 3.0], [8000.0, 15.0], [8100.0, 66.0], [8300.0, 19.0], [8500.0, 18.0], [8700.0, 122.0], [8600.0, 19.0], [8400.0, 46.0], [8200.0, 8.0], [139000.0, 1.0], [8900.0, 41.0], [8800.0, 17.0], [9000.0, 8.0], [9100.0, 12.0], [9200.0, 74.0], [145400.0, 2.0], [9300.0, 8.0], [9400.0, 21.0], [9500.0, 13.0], [9700.0, 113.0], [9600.0, 5.0], [151800.0, 1.0], [9900.0, 44.0], [10000.0, 25.0], [9800.0, 16.0], [10100.0, 17.0], [10200.0, 95.0], [10300.0, 21.0], [10700.0, 51.0], [10400.0, 33.0], [10500.0, 10.0], [10600.0, 12.0], [11100.0, 19.0], [10800.0, 11.0], [11000.0, 48.0], [10900.0, 18.0], [11200.0, 52.0], [11300.0, 69.0], [11600.0, 176.0], [11700.0, 258.0], [11400.0, 78.0], [11500.0, 121.0], [11800.0, 262.0], [11900.0, 262.0], [12000.0, 241.0], [12100.0, 284.0], [12200.0, 292.0], [12300.0, 297.0], [12500.0, 312.0], [12400.0, 263.0], [12600.0, 259.0], [12700.0, 262.0], [12800.0, 262.0], [12900.0, 212.0], [13100.0, 132.0], [13000.0, 189.0], [13300.0, 664.0], [13200.0, 134.0], [212600.0, 1.0], [13500.0, 77.0], [13400.0, 93.0], [13600.0, 54.0], [13700.0, 64.0], [13800.0, 192.0], [14100.0, 40.0], [14000.0, 53.0], [13900.0, 65.0], [14200.0, 41.0], [14300.0, 138.0], [14800.0, 33.0], [14500.0, 39.0], [14600.0, 6.0], [14700.0, 6.0], [14400.0, 15.0], [15000.0, 4.0], [15100.0, 10.0], [15200.0, 5.0], [15300.0, 13.0], [14900.0, 2.0], [15800.0, 6.0], [15600.0, 14.0], [15400.0, 2.0], [15500.0, 2.0], [16200.0, 3.0], [16300.0, 28.0], [16100.0, 4.0], [16000.0, 3.0], [15900.0, 1.0], [17400.0, 4.0], [16800.0, 6.0], [16600.0, 3.0], [16400.0, 2.0], [17200.0, 1.0], [17600.0, 1.0], [18400.0, 2.0], [17800.0, 1.0], [18200.0, 1.0], [18600.0, 2.0], [19200.0, 1.0], [19000.0, 1.0], [20400.0, 1.0], [20200.0, 5.0], [19800.0, 1.0], [19600.0, 1.0], [21200.0, 2.0], [21000.0, 1.0], [22400.0, 1.0], [22000.0, 1.0], [22200.0, 3.0], [22800.0, 1.0], [26400.0, 3.0], [26600.0, 1.0], [26200.0, 1.0], [26000.0, 1.0], [27600.0, 2.0], [28400.0, 1.0], [28600.0, 2.0], [29200.0, 2.0], [29400.0, 2.0], [29600.0, 2.0], [30200.0, 2.0], [30000.0, 1.0], [31200.0, 1.0], [31600.0, 1.0], [32600.0, 1.0], [31800.0, 1.0], [32800.0, 1.0], [34800.0, 1.0], [36800.0, 3.0], [35200.0, 1.0], [40800.0, 2.0], [40400.0, 1.0], [53600.0, 1.0], [55200.0, 1.0], [64800.0, 1.0], [65600.0, 1.0], [66400.0, 1.0], [106400.0, 4.0], [107200.0, 7.0], [108000.0, 4.0], [120000.0, 4.0], [126400.0, 3.0], [140800.0, 1.0], [153600.0, 1.0], [82300.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [117500.0, 1.0], [115900.0, 1.0], [122300.0, 1.0], [141000.0, 3.0], [33500.0, 1.0], [33900.0, 3.0], [34300.0, 1.0], [34700.0, 1.0], [39100.0, 1.0], [40700.0, 1.0], [43500.0, 1.0], [52700.0, 1.0], [53500.0, 1.0], [56300.0, 1.0], [66200.0, 1.0], [79000.0, 1.0], [106200.0, 5.0], [105400.0, 1.0], [107000.0, 3.0], [119800.0, 2.0], [131000.0, 2.0], [140500.0, 1.0], [172500.0, 9.0], [66100.0, 1.0], [70100.0, 1.0], [82100.0, 2.0], [86900.0, 1.0], [102100.0, 7.0], [106100.0, 1.0], [110100.0, 1.0], [107700.0, 8.0], [115700.0, 1.0], [120500.0, 1.0], [131800.0, 4.0], [16700.0, 5.0], [17100.0, 9.0], [16900.0, 4.0], [16500.0, 4.0], [17500.0, 1.0], [18300.0, 1.0], [18100.0, 6.0], [17900.0, 1.0], [19100.0, 2.0], [19300.0, 1.0], [18500.0, 2.0], [19500.0, 1.0], [20100.0, 1.0], [20500.0, 1.0], [20900.0, 2.0], [22300.0, 2.0], [21900.0, 1.0], [22100.0, 1.0], [26300.0, 15.0], [26700.0, 1.0], [27300.0, 5.0], [27500.0, 3.0], [27700.0, 1.0], [28700.0, 2.0], [28900.0, 3.0], [29100.0, 2.0], [30500.0, 1.0], [29700.0, 1.0], [29900.0, 3.0], [30100.0, 1.0], [31700.0, 1.0], [32300.0, 1.0], [32500.0, 1.0], [137500.0, 1.0], [33400.0, 1.0], [33800.0, 1.0], [33000.0, 1.0], [34200.0, 2.0], [34600.0, 1.0], [35800.0, 1.0], [155100.0, 2.0], [39000.0, 1.0], [161500.0, 3.0], [204700.0, 1.0], [52600.0, 1.0], [54200.0, 1.0], [53400.0, 1.0], [75600.0, 1.0], [106000.0, 2.0], [110000.0, 1.0], [118000.0, 7.0], [116400.0, 7.0], [122800.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 101.0], [212900.0, 1.0], [81900.0, 1.0], [106700.0, 1.0], [107500.0, 3.0], [118700.0, 1.0], [120300.0, 1.0], [126700.0, 4.0], [153000.0, 1.0], [33700.0, 1.0], [109000.0, 3.0], [108200.0, 2.0], [121000.0, 1.0], [500.0, 2.0], [128200.0, 1.0], [600.0, 8.0], [800.0, 1.0], [900.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 4.0], [1500.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [2000.0, 2.0], [2100.0, 3.0], [2200.0, 5.0], [2300.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 3.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 2.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 3.0], [4200.0, 1.0], [4100.0, 1.0], [4300.0, 1.0], [4400.0, 1.0], [4500.0, 2.0], [4800.0, 3.0], [4700.0, 1.0], [5100.0, 1.0], [5400.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6100.0, 2.0], [6300.0, 1.0], [6200.0, 2.0], [6500.0, 3.0], [6600.0, 4.0], [6400.0, 2.0], [110500.0, 1.0], [7100.0, 75.0], [7000.0, 2.0], [111300.0, 1.0], [112100.0, 1.0], [7300.0, 1.0], [7400.0, 33.0], [7200.0, 1.0], [7500.0, 1.0], [7600.0, 41.0], [7800.0, 2.0], [7700.0, 1.0], [7900.0, 28.0], [124100.0, 2.0], [8100.0, 34.0], [8600.0, 6.0], [8200.0, 1.0], [8300.0, 1.0], [8700.0, 34.0], [8400.0, 17.0], [139000.0, 2.0], [137400.0, 1.0], [8900.0, 16.0], [9100.0, 3.0], [9200.0, 36.0], [145400.0, 2.0], [9500.0, 5.0], [9400.0, 10.0], [9600.0, 3.0], [9300.0, 1.0], [9700.0, 60.0], [151800.0, 1.0], [9800.0, 2.0], [10000.0, 2.0], [10200.0, 30.0], [9900.0, 10.0], [10100.0, 1.0], [10300.0, 2.0], [10600.0, 7.0], [10700.0, 33.0], [10500.0, 4.0], [10400.0, 9.0], [169400.0, 1.0], [10800.0, 11.0], [11000.0, 28.0], [11100.0, 10.0], [11200.0, 18.0], [10900.0, 9.0], [11500.0, 21.0], [11400.0, 9.0], [11300.0, 14.0], [11700.0, 20.0], [11600.0, 15.0], [11900.0, 11.0], [12200.0, 19.0], [11800.0, 8.0], [12000.0, 10.0], [12100.0, 6.0], [12300.0, 8.0], [12600.0, 12.0], [12700.0, 9.0], [12500.0, 12.0], [12400.0, 7.0], [13100.0, 7.0], [13300.0, 268.0], [12900.0, 6.0], [12800.0, 12.0], [13200.0, 7.0], [13000.0, 12.0], [13400.0, 2.0], [13600.0, 4.0], [13800.0, 69.0], [13500.0, 13.0], [13700.0, 2.0], [14000.0, 9.0], [14200.0, 4.0], [14100.0, 3.0], [14300.0, 64.0], [13900.0, 2.0], [14500.0, 11.0], [14600.0, 4.0], [14800.0, 12.0], [14700.0, 3.0], [14900.0, 1.0], [15100.0, 8.0], [15300.0, 6.0], [15000.0, 3.0], [15200.0, 1.0], [15500.0, 1.0], [15400.0, 1.0], [15600.0, 7.0], [15800.0, 1.0], [15700.0, 1.0], [16300.0, 12.0], [16000.0, 1.0], [15900.0, 1.0], [17400.0, 8.0], [16800.0, 3.0], [17000.0, 1.0], [16400.0, 1.0], [18400.0, 3.0], [17600.0, 3.0], [18600.0, 2.0], [19600.0, 1.0], [20200.0, 2.0], [21000.0, 1.0], [25000.0, 1.0], [25800.0, 1.0], [27600.0, 3.0], [28000.0, 1.0], [28200.0, 1.0], [28400.0, 2.0], [29400.0, 1.0], [32200.0, 1.0], [32600.0, 2.0], [34800.0, 2.0], [36800.0, 1.0], [53200.0, 3.0], [55200.0, 1.0], [64800.0, 3.0], [88000.0, 1.0], [106400.0, 1.0], [107200.0, 2.0], [108000.0, 4.0], [120000.0, 3.0], [126400.0, 6.0], [153600.0, 1.0], [76700.0, 1.0], [110300.0, 2.0], [117500.0, 1.0], [115900.0, 2.0], [141000.0, 1.0], [43500.0, 1.0], [56300.0, 1.0], [87800.0, 1.0], [105400.0, 2.0], [106200.0, 2.0], [107000.0, 2.0], [120600.0, 1.0], [172500.0, 5.0], [82100.0, 2.0], [102100.0, 1.0], [107700.0, 2.0], [114900.0, 1.0], [131800.0, 1.0], [17100.0, 2.0], [16700.0, 2.0], [17700.0, 2.0], [18100.0, 4.0], [17900.0, 1.0], [18700.0, 1.0], [18900.0, 1.0], [20900.0, 1.0], [21700.0, 1.0], [26300.0, 5.0], [25900.0, 1.0], [27300.0, 2.0], [27700.0, 1.0], [28300.0, 2.0], [30100.0, 1.0], [31700.0, 1.0], [31100.0, 1.0], [31500.0, 1.0], [32500.0, 2.0], [32300.0, 1.0], [32700.0, 2.0], [155100.0, 1.0], [161500.0, 1.0], [204700.0, 1.0], [64200.0, 2.0], [86000.0, 1.0], [110000.0, 4.0], [116400.0, 3.0], [118000.0, 1.0], [122800.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 121.0], [212900.0, 2.0], [101900.0, 1.0], [105900.0, 1.0], [105100.0, 1.0], [107500.0, 3.0], [106700.0, 1.0], [118700.0, 3.0], [116300.0, 1.0], [122700.0, 1.0], [126700.0, 1.0], [100.0, 2.0], [131500.0, 1.0], [33700.0, 1.0], [36100.0, 1.0], [34900.0, 1.0], [144300.0, 2.0], [40100.0, 1.0], [39300.0, 1.0], [157100.0, 1.0], [41300.0, 1.0], [52100.0, 1.0], [64900.0, 2.0], [65800.0, 1.0], [71400.0, 1.0], [74600.0, 1.0], [400.0, 2.0], [105800.0, 1.0], [106600.0, 1.0], [107400.0, 1.0], [500.0, 2.0], [127400.0, 1.0], [700.0, 2.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 2.0], [1300.0, 2.0], [1500.0, 1.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 4.0], [2500.0, 3.0], [2600.0, 2.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [229300.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 3.0], [4400.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [5100.0, 2.0], [5300.0, 1.0], [5400.0, 2.0], [5600.0, 3.0], [5500.0, 1.0], [5800.0, 2.0], [5900.0, 5.0], [6000.0, 3.0], [6300.0, 1.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 1.0], [105700.0, 2.0], [102500.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [106500.0, 2.0], [110500.0, 5.0], [107300.0, 1.0], [7100.0, 78.0], [7000.0, 2.0], [111300.0, 1.0], [7200.0, 8.0], [7400.0, 54.0], [7300.0, 3.0], [7600.0, 39.0], [7500.0, 8.0], [121700.0, 1.0], [7700.0, 4.0], [7900.0, 30.0], [7800.0, 2.0], [124100.0, 1.0], [8100.0, 31.0], [8000.0, 2.0], [8400.0, 18.0], [8500.0, 4.0], [8300.0, 1.0], [8600.0, 7.0], [8700.0, 47.0], [8200.0, 2.0], [8900.0, 13.0], [8800.0, 3.0], [9200.0, 43.0], [9100.0, 4.0], [9000.0, 1.0], [9300.0, 3.0], [9600.0, 6.0], [9700.0, 51.0], [9500.0, 2.0], [9400.0, 5.0], [151800.0, 1.0], [9800.0, 7.0], [10000.0, 1.0], [9900.0, 15.0], [10200.0, 38.0], [10100.0, 7.0], [10300.0, 7.0], [10600.0, 15.0], [10400.0, 27.0], [10700.0, 36.0], [10500.0, 6.0], [11000.0, 13.0], [11200.0, 18.0], [10900.0, 16.0], [10800.0, 12.0], [11100.0, 8.0], [11400.0, 9.0], [11500.0, 9.0], [11600.0, 12.0], [11300.0, 15.0], [11700.0, 20.0], [12100.0, 6.0], [12200.0, 17.0], [11800.0, 5.0], [11900.0, 3.0], [12000.0, 8.0], [12400.0, 5.0], [12300.0, 4.0], [12600.0, 2.0], [12500.0, 9.0], [12700.0, 9.0], [13000.0, 9.0], [13100.0, 10.0], [13200.0, 23.0], [12800.0, 8.0], [13300.0, 236.0], [12900.0, 3.0], [13500.0, 14.0], [13700.0, 5.0], [13800.0, 58.0], [13400.0, 6.0], [13600.0, 1.0], [14000.0, 12.0], [14100.0, 4.0], [14200.0, 2.0], [13900.0, 2.0], [14300.0, 72.0], [227000.0, 2.0], [14500.0, 6.0], [14800.0, 14.0], [14400.0, 4.0], [14700.0, 1.0], [15300.0, 6.0], [15000.0, 3.0], [15100.0, 5.0], [14900.0, 1.0], [15700.0, 2.0], [15800.0, 3.0], [15600.0, 2.0], [15500.0, 1.0], [16300.0, 17.0], [17200.0, 1.0], [17400.0, 8.0], [16800.0, 2.0], [16600.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [19400.0, 1.0], [21000.0, 2.0], [23200.0, 1.0], [24400.0, 1.0], [26200.0, 1.0], [26600.0, 2.0], [28200.0, 2.0], [28400.0, 2.0], [28000.0, 1.0], [28600.0, 1.0], [30200.0, 1.0], [32000.0, 1.0], [53200.0, 1.0], [55200.0, 1.0], [64800.0, 2.0], [88000.0, 1.0], [106400.0, 1.0], [108000.0, 2.0], [107200.0, 2.0], [115200.0, 1.0], [120000.0, 3.0], [126400.0, 2.0], [153600.0, 3.0], [204800.0, 1.0], [73500.0, 1.0], [110300.0, 3.0], [107100.0, 1.0], [115900.0, 1.0], [122300.0, 1.0], [52300.0, 1.0], [62300.0, 1.0], [64300.0, 1.0], [81400.0, 1.0], [84600.0, 1.0], [95800.0, 1.0], [106200.0, 4.0], [105400.0, 1.0], [107000.0, 1.0], [119800.0, 1.0], [131000.0, 1.0], [130200.0, 1.0], [138900.0, 1.0], [140500.0, 1.0], [172500.0, 4.0], [82100.0, 4.0], [88500.0, 1.0], [87700.0, 1.0], [94900.0, 1.0], [102100.0, 3.0], [106100.0, 1.0], [103700.0, 1.0], [106900.0, 1.0], [114900.0, 1.0], [120500.0, 1.0], [17300.0, 2.0], [17100.0, 4.0], [16700.0, 2.0], [17500.0, 2.0], [18300.0, 1.0], [17700.0, 1.0], [18100.0, 1.0], [20900.0, 1.0], [20700.0, 2.0], [23900.0, 1.0], [24300.0, 1.0], [26300.0, 7.0], [27300.0, 3.0], [27100.0, 1.0], [28100.0, 1.0], [28300.0, 3.0], [29300.0, 1.0], [28700.0, 1.0], [30700.0, 1.0], [31500.0, 2.0], [31100.0, 2.0], [32500.0, 2.0], [155100.0, 2.0], [161500.0, 1.0], [52200.0, 1.0], [56600.0, 1.0], [65000.0, 1.0], [66800.0, 1.0], [72400.0, 1.0], [102800.0, 1.0], [106800.0, 1.0], [110000.0, 1.0], [114800.0, 1.0], [116400.0, 6.0], [118000.0, 1.0], [122800.0, 1.0], [126800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 229300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7032.0, "series": [{"data": [[1.0, 129.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5451.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 20.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7032.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 14.304347826086957, "minX": 1.53945168E12, "maxY": 500.0, "series": [{"data": [[1.53945168E12, 30.139240506329124], [1.53945216E12, 493.6592414208307], [1.53945228E12, 327.7408536585364], [1.53945186E12, 202.40175953079202], [1.53945204E12, 382.38488783943336], [1.53945174E12, 82.38789546079778], [1.53945222E12, 500.0], [1.53945192E12, 265.5780409041985], [1.5394521E12, 442.32619718309866], [1.53945234E12, 14.304347826086957], [1.5394518E12, 143.015047879617], [1.53945198E12, 323.54663212435264]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945234E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 212991.0, "series": [{"data": [[4.0, 1196.0], [5.0, 1230.0], [6.0, 79226.33333333333], [7.0, 1393.3333333333333], [8.0, 1303.3333333333333], [9.0, 1400.8], [10.0, 1131.375], [11.0, 39765.125], [12.0, 1393.2], [13.0, 1385.0], [14.0, 1402.9999999999998], [15.0, 1464.375], [16.0, 1440.7], [17.0, 1464.1538461538462], [18.0, 1462.0], [19.0, 1460.142857142857], [20.0, 9899.999999999998], [21.0, 17047.571428571428], [22.0, 8919.800000000001], [23.0, 1727.7], [24.0, 1861.3846153846155], [25.0, 2005.4444444444443], [26.0, 1936.9999999999998], [27.0, 2071.0], [28.0, 11683.909090909092], [29.0, 2237.0999999999995], [30.0, 2493.166666666667], [31.0, 2512.6000000000004], [32.0, 2495.2000000000003], [33.0, 2702.181818181818], [34.0, 21931.272727272728], [35.0, 31652.09090909091], [36.0, 18013.142857142855], [37.0, 2900.2999999999997], [38.0, 2908.666666666667], [39.0, 3037.5], [40.0, 3093.75], [41.0, 3231.545454545454], [42.0, 42904.08333333333], [43.0, 6794.714285714286], [44.0, 3422.75], [45.0, 3471.3333333333335], [46.0, 3619.5], [47.0, 3775.2000000000003], [48.0, 3649.4], [49.0, 3750.3333333333335], [50.0, 3822.4], [51.0, 3771.25], [52.0, 3804.0], [53.0, 3993.4444444444443], [54.0, 3977.5], [55.0, 51450.473684210534], [56.0, 4177.857142857143], [57.0, 40431.5], [58.0, 7661.733333333334], [59.0, 8816.636363636364], [60.0, 4666.222222222223], [61.0, 4665.545454545453], [62.0, 15320.076923076924], [63.0, 4549.749999999999], [64.0, 17244.090909090908], [65.0, 7560.75], [66.0, 8987.625], [67.0, 7541.384615384615], [68.0, 8023.0], [69.0, 8156.181818181818], [70.0, 7516.428571428572], [71.0, 8681.222222222223], [72.0, 7699.333333333334], [73.0, 7518.5], [74.0, 8069.636363636364], [75.0, 8002.454545454544], [76.0, 8460.8], [77.0, 8649.3], [78.0, 8781.636363636364], [79.0, 9374.444444444445], [80.0, 6695.636363636364], [81.0, 6779.583333333334], [82.0, 11434.833333333332], [83.0, 8783.0], [84.0, 9305.583333333334], [85.0, 9502.3], [86.0, 6853.272727272727], [87.0, 9261.0], [88.0, 6820.8], [89.0, 9926.3], [90.0, 9334.166666666668], [91.0, 9792.0], [92.0, 7426.7692307692305], [93.0, 9665.3], [94.0, 9443.727272727272], [95.0, 7456.899999999999], [96.0, 8868.857142857145], [97.0, 9652.7], [98.0, 9247.153846153848], [99.0, 7530.75], [100.0, 7577.363636363636], [101.0, 7708.727272727273], [102.0, 7830.099999999999], [103.0, 9859.454545454546], [104.0, 10019.583333333334], [105.0, 8204.25], [106.0, 7637.499999999999], [107.0, 8402.699999999999], [108.0, 8441.888888888889], [109.0, 8496.999999999998], [110.0, 8621.545454545454], [111.0, 8720.636363636364], [112.0, 10362.75], [113.0, 8516.857142857143], [114.0, 10078.8], [115.0, 11525.125], [116.0, 8880.099999999999], [117.0, 8408.5], [118.0, 11448.555555555555], [119.0, 11161.454545454546], [120.0, 9618.727272727274], [121.0, 12218.25], [122.0, 9812.636363636364], [123.0, 10045.1], [124.0, 10130.375], [125.0, 10399.999999999998], [126.0, 9383.181818181818], [127.0, 10194.249999999998], [128.0, 10332.800000000001], [129.0, 29950.285714285717], [130.0, 10116.454545454544], [131.0, 10180.0], [132.0, 10003.375], [133.0, 10170.785714285714], [134.0, 10275.083333333334], [135.0, 24463.6], [136.0, 10459.615384615387], [137.0, 10685.142857142857], [138.0, 18062.199999999997], [139.0, 12492.69230769231], [140.0, 11077.5], [141.0, 12711.1], [142.0, 11995.357142857143], [143.0, 11508.8], [144.0, 11257.181818181818], [145.0, 11567.111111111111], [146.0, 12895.111111111111], [147.0, 11573.545454545454], [148.0, 11733.76923076923], [149.0, 12809.666666666666], [150.0, 11827.5], [151.0, 11818.166666666668], [152.0, 11917.555555555555], [153.0, 11988.153846153846], [154.0, 12020.0], [155.0, 12180.888888888889], [156.0, 12940.615384615383], [157.0, 12879.307692307691], [158.0, 12777.0], [159.0, 12069.285714285714], [160.0, 11809.8], [161.0, 13041.933333333332], [162.0, 11895.444444444445], [163.0, 12759.800000000001], [164.0, 15094.176470588238], [165.0, 13835.0], [166.0, 11675.416666666668], [167.0, 13012.076923076922], [168.0, 11087.714285714284], [169.0, 16614.363636363636], [170.0, 15730.153846153848], [171.0, 15672.461538461537], [172.0, 17015.7], [173.0, 12364.818181818182], [174.0, 11775.63636363636], [175.0, 12185.5], [176.0, 12503.928571428572], [177.0, 12835.833333333334], [178.0, 13065.8], [179.0, 12374.800000000001], [180.0, 17139.916666666664], [181.0, 12723.727272727274], [182.0, 13444.7], [183.0, 13398.916666666666], [184.0, 13010.363636363636], [185.0, 13043.249999999998], [186.0, 31307.923076923078], [187.0, 12866.833333333334], [188.0, 13457.142857142859], [189.0, 14570.2], [190.0, 12889.099999999999], [191.0, 13236.3], [192.0, 16322.933333333334], [193.0, 13910.999999999998], [194.0, 14619.444444444445], [195.0, 13704.857142857145], [196.0, 13572.42857142857], [197.0, 12419.0], [198.0, 12958.833333333332], [199.0, 12560.583333333334], [200.0, 12027.8], [201.0, 12428.07142857143], [202.0, 13114.66666666667], [203.0, 12210.999999999998], [204.0, 12016.166666666668], [205.0, 12011.923076923078], [206.0, 12255.3], [207.0, 12588.583333333334], [208.0, 12385.363636363636], [209.0, 12786.818181818182], [210.0, 12998.09090909091], [211.0, 13951.90909090909], [212.0, 13019.181818181818], [213.0, 12673.818181818182], [214.0, 12779.8], [215.0, 12929.818181818182], [216.0, 13102.6], [217.0, 13050.6], [218.0, 13298.23076923077], [219.0, 13402.999999999998], [220.0, 12593.100000000002], [221.0, 12000.500000000002], [222.0, 13897.0], [223.0, 14196.625], [224.0, 14146.692307692305], [225.0, 14107.333333333334], [226.0, 14134.0], [227.0, 18703.181818181816], [228.0, 14569.0], [229.0, 14520.583333333334], [230.0, 15379.57142857143], [231.0, 14252.916666666668], [232.0, 14118.0], [233.0, 14106.09090909091], [234.0, 12777.166666666668], [235.0, 14053.363636363636], [236.0, 13422.545454545454], [237.0, 15600.454545454546], [238.0, 13383.222222222223], [239.0, 16826.714285714286], [240.0, 15741.6], [241.0, 12809.333333333332], [242.0, 12602.454545454546], [243.0, 13693.076923076922], [244.0, 14117.300000000001], [245.0, 12741.8], [246.0, 12548.624999999998], [247.0, 12499.111111111111], [248.0, 15065.066666666666], [249.0, 12689.100000000002], [250.0, 12146.461538461539], [251.0, 12597.0], [252.0, 14622.916666666668], [253.0, 12589.888888888889], [254.0, 12437.642857142859], [255.0, 12317.90909090909], [257.0, 15902.571428571428], [256.0, 15847.375], [258.0, 13775.76923076923], [259.0, 24966.454545454544], [260.0, 12937.923076923076], [261.0, 20231.384615384617], [262.0, 12693.9], [263.0, 33397.38888888889], [264.0, 12774.111111111111], [270.0, 32038.538461538465], [271.0, 13521.642857142859], [268.0, 14970.900000000001], [269.0, 13365.083333333332], [265.0, 12631.625], [266.0, 13131.882352941177], [267.0, 13786.111111111111], [273.0, 13159.111111111111], [272.0, 16807.500000000004], [274.0, 19460.722222222223], [275.0, 14245.4], [276.0, 16612.066666666666], [277.0, 14043.615384615385], [278.0, 15348.818181818182], [279.0, 12912.157894736843], [280.0, 15648.571428571428], [286.0, 20483.8125], [287.0, 12421.733333333332], [284.0, 12040.647058823528], [285.0, 12766.166666666666], [281.0, 13381.363636363638], [282.0, 25356.57142857143], [283.0, 13182.777777777777], [289.0, 12198.615384615387], [288.0, 11314.153846153848], [290.0, 19547.619047619046], [291.0, 10938.692307692307], [292.0, 23981.86666666667], [293.0, 11476.142857142857], [294.0, 16857.5], [295.0, 20647.30769230769], [296.0, 21898.94117647059], [302.0, 14978.866666666665], [303.0, 36059.61538461538], [300.0, 16216.888888888889], [301.0, 12044.437500000002], [297.0, 31333.26666666667], [298.0, 11784.750000000002], [299.0, 12101.6875], [305.0, 11299.133333333335], [304.0, 20850.384615384613], [306.0, 11775.857142857143], [307.0, 15875.22727272727], [308.0, 12668.863636363636], [309.0, 11291.736842105262], [310.0, 12412.272727272728], [311.0, 19957.583333333332], [312.0, 12043.857142857141], [318.0, 8830.800000000001], [319.0, 11396.000000000002], [316.0, 11853.750000000002], [317.0, 15537.187500000002], [313.0, 12146.6], [314.0, 11251.766666666665], [315.0, 10974.368421052632], [321.0, 11956.416666666666], [320.0, 10931.210526315788], [322.0, 11940.0], [323.0, 22364.823529411766], [324.0, 13161.666666666666], [325.0, 11118.083333333334], [326.0, 12400.066666666668], [327.0, 19155.571428571424], [328.0, 12488.307692307695], [334.0, 11513.833333333334], [335.0, 11078.647058823532], [332.0, 11923.266666666666], [333.0, 22699.588235294123], [329.0, 16313.560000000003], [330.0, 12461.666666666666], [331.0, 12559.526315789477], [337.0, 12575.000000000002], [336.0, 13354.307692307691], [338.0, 12246.818181818182], [339.0, 11774.083333333332], [340.0, 11699.300000000001], [341.0, 11093.882352941175], [342.0, 11668.735294117647], [343.0, 11270.466666666665], [344.0, 12118.464285714284], [350.0, 11932.882352941178], [351.0, 11762.07142857143], [348.0, 11522.000000000002], [349.0, 8209.25], [345.0, 16235.842105263155], [346.0, 11470.750000000002], [347.0, 11618.444444444445], [353.0, 12024.09090909091], [352.0, 16443.909090909092], [354.0, 15904.045454545458], [355.0, 11405.526315789473], [356.0, 12482.0], [357.0, 11443.758620689658], [358.0, 11480.357142857141], [359.0, 11989.470588235294], [360.0, 11540.842105263157], [366.0, 11756.312500000002], [367.0, 11648.818181818182], [364.0, 12165.916666666666], [365.0, 11684.538461538461], [361.0, 11352.0], [362.0, 9754.000000000002], [363.0, 10748.369565217388], [369.0, 11959.315789473683], [368.0, 12124.09090909091], [370.0, 11024.354838709682], [371.0, 12565.846153846154], [372.0, 12029.0], [373.0, 11395.761904761905], [374.0, 11961.72], [375.0, 12264.428571428572], [376.0, 12004.954545454544], [382.0, 12025.333333333332], [383.0, 12093.750000000002], [380.0, 10949.230769230768], [381.0, 12235.692307692307], [377.0, 15014.9375], [378.0, 12756.636363636362], [379.0, 12645.363636363636], [385.0, 12002.062499999998], [384.0, 11030.333333333336], [386.0, 10727.9], [387.0, 10512.916666666668], [388.0, 12388.656249999998], [389.0, 11191.521739130436], [390.0, 11028.916666666668], [391.0, 10407.551724137933], [392.0, 10625.888888888887], [398.0, 11596.352941176472], [399.0, 12732.076923076924], [396.0, 10598.470588235292], [397.0, 11983.052631578943], [393.0, 11809.888888888887], [394.0, 12000.333333333334], [395.0, 9946.333333333332], [401.0, 11747.285714285714], [400.0, 11902.749999999998], [402.0, 13420.25], [403.0, 13167.571428571428], [404.0, 11902.43333333333], [405.0, 12444.571428571428], [406.0, 13010.066666666666], [407.0, 12955.444444444445], [408.0, 12676.5], [414.0, 13229.727272727272], [415.0, 13034.208333333334], [412.0, 13313.900000000001], [413.0, 13524.384615384615], [409.0, 11399.866666666669], [410.0, 12801.999999999998], [411.0, 12610.78947368421], [417.0, 12701.346153846152], [416.0, 13778.461538461537], [418.0, 11795.809523809525], [419.0, 10648.021276595742], [420.0, 12672.714285714286], [421.0, 13009.875], [422.0, 12094.166666666666], [423.0, 12524.999999999998], [424.0, 12011.611111111111], [430.0, 10074.560000000001], [431.0, 11391.260869565218], [428.0, 12996.75], [429.0, 11656.88888888889], [425.0, 12969.862068965514], [426.0, 10894.578947368422], [427.0, 37794.0], [433.0, 11341.470588235294], [432.0, 10574.580645161292], [434.0, 26170.478260869564], [435.0, 11986.833333333334], [436.0, 10772.74074074074], [437.0, 9979.8], [438.0, 10020.0], [439.0, 12657.11111111111], [440.0, 12087.300000000001], [446.0, 11428.555555555555], [447.0, 12102.857142857141], [444.0, 10734.818181818184], [445.0, 12892.2], [441.0, 10069.727272727272], [442.0, 12159.571428571426], [443.0, 11485.000000000002], [449.0, 11828.428571428572], [448.0, 10287.100000000002], [450.0, 12499.285714285714], [451.0, 13507.27777777778], [452.0, 12518.666666666668], [453.0, 12084.300000000001], [454.0, 20901.40909090909], [455.0, 11088.500000000002], [456.0, 11351.739130434784], [462.0, 25851.176470588234], [463.0, 9942.304347826088], [460.0, 12601.9375], [461.0, 12062.25], [457.0, 9624.451612903224], [458.0, 11896.720000000003], [459.0, 10960.913043478262], [465.0, 12131.0], [464.0, 12641.941176470587], [466.0, 11373.09090909091], [467.0, 12592.411764705881], [468.0, 11104.958333333332], [469.0, 12179.722222222223], [470.0, 15181.151515151516], [471.0, 11546.258064516127], [472.0, 12898.105263157895], [478.0, 11917.142857142859], [479.0, 11752.8125], [476.0, 12911.083333333332], [477.0, 25465.27272727273], [473.0, 10793.862068965518], [474.0, 12162.833333333334], [475.0, 12446.384615384613], [481.0, 11496.272727272726], [480.0, 10649.653846153848], [482.0, 10236.285714285716], [483.0, 17462.391304347824], [484.0, 10386.444444444445], [485.0, 13384.764705882353], [486.0, 11800.227272727272], [487.0, 11235.416666666668], [488.0, 9957.166666666664], [494.0, 10086.849999999999], [495.0, 9809.45], [492.0, 11448.61904761905], [493.0, 24315.952380952378], [489.0, 11313.692307692309], [490.0, 10414.705882352942], [491.0, 10629.32142857143], [496.0, 11825.333333333334], [497.0, 11273.214285714286], [498.0, 12337.314285714288], [499.0, 10527.869565217392], [500.0, 15996.557482656093]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[335.6866957470012, 13308.447982551783]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[2.0, 212991.0], [3.0, 589.0], [4.0, 1379.0], [5.0, 602.0], [6.0, 619.0], [9.0, 3593.0], [10.0, 617.0], [11.0, 155132.0], [13.0, 2357.0], [14.0, 2388.0], [15.0, 1360.3333333333333], [16.0, 618.0], [17.0, 653.0], [19.0, 666.0], [20.0, 94750.42857142857], [21.0, 829.0], [23.0, 1199.0], [24.0, 2165.5], [25.0, 941.0], [27.0, 1325.0], [28.0, 1306.0], [29.0, 1530.0], [30.0, 1700.0], [31.0, 1577.0], [32.0, 1868.0], [34.0, 2135.0], [35.0, 2289.0], [37.0, 2497.0], [36.0, 107776.0], [38.0, 2046.0], [39.0, 2155.0], [40.0, 2297.0], [42.0, 82070.5], [44.0, 2797.0], [45.0, 3432.5], [47.0, 2980.0], [48.0, 3055.0], [49.0, 2817.5], [51.0, 2944.0], [52.0, 3249.0], [53.0, 3308.0], [55.0, 114026.0], [56.0, 3485.0], [57.0, 3521.0], [58.0, 3452.0], [59.0, 3857.0], [60.0, 3855.0], [61.0, 3827.0], [63.0, 3782.0], [62.0, 107520.0], [65.0, 4316.0], [66.0, 5855.0], [67.0, 4832.0], [68.0, 4404.0], [69.0, 4739.0], [70.0, 4871.0], [71.0, 4525.0], [72.0, 4516.0], [74.0, 4828.0], [76.0, 5177.0], [77.0, 5990.0], [80.0, 6738.5], [82.0, 6020.5], [81.0, 33719.0], [84.0, 6293.0], [85.0, 6179.0], [86.0, 19499.5], [89.0, 7457.0], [90.0, 6600.0], [91.0, 7360.333333333333], [88.0, 32740.0], [93.0, 6686.0], [94.0, 6561.0], [95.0, 31531.0], [96.0, 6467.0], [97.0, 7590.0], [98.0, 6695.0], [100.0, 18601.0], [101.0, 7113.5], [103.0, 7065.0], [104.0, 7295.0], [105.0, 19940.5], [106.0, 20074.0], [107.0, 32614.0], [108.0, 7855.0], [110.0, 7673.0], [111.0, 9838.0], [109.0, 32591.0], [113.0, 16624.666666666668], [114.0, 8829.5], [116.0, 20252.5], [117.0, 8632.0], [118.0, 19778.0], [120.0, 8619.0], [121.0, 8789.0], [122.0, 9404.0], [124.0, 16808.333333333332], [126.0, 9686.0], [127.0, 9622.0], [128.0, 9156.0], [130.0, 10030.0], [131.0, 9472.5], [133.0, 9319.0], [134.0, 9518.0], [136.0, 10021.0], [137.0, 11535.0], [138.0, 58079.0], [139.0, 12366.0], [140.0, 10282.5], [142.0, 10306.0], [143.0, 10696.0], [144.0, 19621.5], [145.0, 19723.0], [147.0, 10682.0], [148.0, 10750.0], [149.0, 10788.0], [150.0, 19713.5], [151.0, 10827.5], [154.0, 12670.0], [155.0, 17502.666666666668], [156.0, 11181.0], [157.0, 11349.0], [158.0, 11253.0], [159.0, 11066.0], [153.0, 28309.0], [160.0, 11340.0], [161.0, 11029.0], [164.0, 11573.5], [165.0, 10846.0], [166.0, 27700.0], [162.0, 28017.0], [169.0, 10820.0], [171.0, 10730.0], [172.0, 10999.0], [175.0, 11013.5], [168.0, 27611.0], [179.0, 16430.5], [180.0, 11636.0], [182.0, 12261.0], [184.0, 13467.0], [185.0, 15939.5], [186.0, 11892.0], [189.0, 11886.0], [191.0, 64899.0], [198.0, 13171.0], [199.0, 64238.0], [201.0, 11567.0], [203.0, 13907.5], [205.0, 14150.5], [207.0, 11442.0], [200.0, 64215.0], [209.0, 11386.0], [214.0, 12076.0], [215.0, 14012.0], [213.0, 64841.0], [220.0, 12592.0], [221.0, 18154.0], [218.0, 17445.0], [216.0, 64819.0], [227.0, 15265.0], [229.0, 12740.0], [231.0, 17970.0], [226.0, 17641.0], [225.0, 17661.0], [233.0, 14360.0], [237.0, 17065.0], [238.0, 12328.0], [239.0, 11687.0], [234.0, 15322.0], [242.0, 14496.0], [245.0, 11752.0], [246.0, 11632.5], [247.0, 24932.5], [249.0, 26363.0], [250.0, 14321.0], [251.0, 12171.0], [253.0, 12425.5], [254.0, 11380.5], [255.0, 15235.0], [248.0, 15044.0], [256.0, 11583.0], [260.0, 12700.0], [261.0, 12248.0], [262.0, 13618.0], [265.0, 14151.0], [267.0, 15029.5], [268.0, 12362.0], [270.0, 11622.0], [271.0, 13109.0], [273.0, 18432.0], [272.0, 14593.666666666666], [274.0, 13808.166666666668], [275.0, 14800.0], [276.0, 15036.2], [277.0, 9044.666666666668], [279.0, 13453.666666666666], [280.0, 21981.0], [286.0, 7955.4], [287.0, 11139.0], [284.0, 13311.0], [285.0, 13048.8], [281.0, 25859.0], [283.0, 13313.5], [290.0, 9728.0], [289.0, 11007.5], [291.0, 12031.0], [300.0, 36864.0], [301.0, 14205.0], [302.0, 14841.0], [303.0, 58016.181818181816], [292.0, 22528.333333333332], [293.0, 8595.875], [294.0, 8832.0], [296.0, 26972.0], [297.0, 11755.5], [298.0, 19547.181818181816], [299.0, 39084.666666666664], [305.0, 10480.333333333334], [307.0, 12622.125], [308.0, 12408.571428571428], [309.0, 11262.5], [310.0, 11822.4], [311.0, 32881.5], [314.0, 11600.315789473683], [315.0, 18783.875], [316.0, 6754.5], [317.0, 5695.25], [318.0, 11812.909090909092], [319.0, 9569.2], [321.0, 12930.0], [320.0, 10283.5], [322.0, 13829.0], [323.0, 62889.66666666667], [324.0, 35907.0], [325.0, 4097.0], [327.0, 25191.0], [328.0, 11236.699999999997], [334.0, 9807.0], [335.0, 9471.384615384613], [332.0, 13655.0], [333.0, 45301.0], [329.0, 10649.4], [330.0, 10259.0], [331.0, 10827.333333333334], [338.0, 12289.5], [337.0, 16470.333333333332], [339.0, 11032.666666666666], [348.0, 2.0], [349.0, 11313.6], [351.0, 11538.666666666666], [340.0, 12665.0], [341.0, 11602.0], [342.0, 11475.352941176468], [343.0, 8857.4], [344.0, 10169.538461538463], [345.0, 8206.666666666666], [346.0, 10845.0], [347.0, 10804.0], [353.0, 11407.25], [352.0, 11010.9], [354.0, 24115.42857142857], [355.0, 10580.5], [356.0, 12830.0], [357.0, 11555.42857142857], [358.0, 14319.666666666666], [359.0, 3587.0], [360.0, 10253.714285714286], [366.0, 12776.0], [367.0, 9549.666666666666], [364.0, 11062.666666666666], [365.0, 12392.0], [361.0, 10458.333333333334], [362.0, 8590.90909090909], [363.0, 10289.400000000001], [369.0, 12513.555555555555], [368.0, 8192.0], [370.0, 10747.866666666665], [371.0, 12029.0], [372.0, 5472.75], [373.0, 9898.333333333334], [374.0, 13987.363636363638], [375.0, 12442.166666666666], [376.0, 11465.375], [383.0, 10382.923076923076], [380.0, 9208.333333333334], [382.0, 12733.0], [377.0, 35156.66666666667], [378.0, 8956.0], [386.0, 7864.8], [384.0, 10936.75], [385.0, 13205.0], [387.0, 15160.0], [396.0, 9573.9], [397.0, 9794.93333333333], [398.0, 10956.8], [399.0, 14202.0], [388.0, 11517.222222222223], [389.0, 14078.5], [390.0, 7684.0], [391.0, 13209.4], [392.0, 12169.666666666666], [393.0, 10099.222222222223], [394.0, 11376.0], [395.0, 8473.333333333332], [401.0, 12238.0], [404.0, 13566.636363636362], [405.0, 12910.333333333334], [406.0, 4440.0], [408.0, 15042.0], [414.0, 13428.666666666666], [415.0, 11805.833333333332], [409.0, 13313.0], [410.0, 10375.416666666668], [411.0, 13647.636363636362], [412.0, 13697.666666666666], [402.0, 14333.5], [413.0, 13910.666666666666], [418.0, 8532.666666666666], [417.0, 11193.25], [416.0, 12634.0], [419.0, 9274.8125], [428.0, 12576.0], [429.0, 10506.4], [430.0, 8506.0], [431.0, 8114.714285714286], [420.0, 9726.0], [421.0, 13308.0], [422.0, 13310.0], [423.0, 12115.0], [424.0, 8788.666666666666], [425.0, 7620.888888888889], [426.0, 9279.25], [427.0, 80855.57142857143], [433.0, 13676.0], [432.0, 10393.866666666667], [434.0, 27394.8], [435.0, 11873.0], [436.0, 9471.285714285716], [437.0, 7642.4], [438.0, 6031.999999999999], [439.0, 12623.5], [440.0, 8105.0], [446.0, 9918.727272727274], [447.0, 11390.0], [444.0, 11518.75], [445.0, 13481.333333333334], [441.0, 10308.916666666668], [442.0, 13581.0], [443.0, 14345.0], [450.0, 12976.75], [448.0, 5569.625], [451.0, 17152.0], [460.0, 14331.333333333334], [462.0, 14334.0], [463.0, 8980.77777777778], [452.0, 9098.333333333332], [453.0, 13312.0], [454.0, 36675.25], [455.0, 11904.0], [456.0, 9555.5], [457.0, 8086.181818181817], [458.0, 10650.0], [459.0, 10696.6], [465.0, 12252.75], [464.0, 8874.666666666666], [466.0, 11177.0], [467.0, 13311.75], [468.0, 10881.0], [469.0, 12173.5], [470.0, 11038.444444444445], [471.0, 19115.272727272728], [472.0, 11903.833333333334], [477.0, 25918.0], [479.0, 77311.0], [473.0, 11976.833333333334], [474.0, 67964.0], [475.0, 11932.0], [481.0, 11137.727272727272], [480.0, 9548.142857142857], [482.0, 11458.2], [483.0, 59582.75], [484.0, 11477.0], [485.0, 11116.8], [486.0, 12887.857142857143], [487.0, 49553.0], [488.0, 8432.0], [494.0, 13124.0], [495.0, 12458.666666666666], [492.0, 8264.0], [493.0, 25833.666666666668], [489.0, 10567.0], [490.0, 10022.5], [491.0, 10087.571428571428], [496.0, 13873.0], [497.0, 13084.333333333334], [498.0, 10754.555555555555], [499.0, 6962.2], [500.0, 25457.70027247956]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[373.2251184834123, 17194.66113744078]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 106512.0], [3.0, 37.0], [4.0, 37.0], [5.0, 35.0], [6.0, 78604.0], [7.0, 28.0], [8.0, 34.0], [9.0, 745.0], [10.0, 21.0], [11.0, 103431.33333333333], [12.0, 34.0], [13.0, 36.0], [14.0, 22.0], [15.0, 40.0], [16.0, 32.0], [17.0, 21.0], [18.0, 76.0], [19.0, 142.0], [20.0, 73704.0], [21.0, 456.0], [22.0, 171.0], [23.0, 54048.0], [24.0, 548.0], [25.0, 877.0], [26.0, 812.0], [27.0, 115108.0], [28.0, 187127.66666666666], [29.0, 1028.0], [30.0, 1013.0], [32.0, 1377.0], [33.0, 1381.0], [34.0, 1695.0], [35.0, 1773.0], [36.0, 1739.0], [37.0, 1512.0], [38.0, 1615.0], [39.0, 1685.0], [40.0, 1971.0], [41.0, 1854.0], [43.0, 2255.0], [42.0, 187245.0], [44.0, 2048.0], [45.0, 2113.0], [46.0, 2286.0], [47.0, 2057.0], [48.0, 2190.0], [49.0, 2278.0], [50.0, 2510.0], [51.0, 2299.0], [52.0, 2598.0], [53.0, 2580.0], [54.0, 2694.0], [55.0, 103701.5], [56.0, 2824.0], [58.0, 3071.0], [59.0, 3438.0], [60.0, 27991.0], [61.0, 3198.0], [62.0, 3588.0], [63.0, 3669.0], [64.0, 72004.0], [65.0, 3878.0], [67.0, 4127.0], [68.0, 4262.0], [69.0, 4203.0], [70.0, 4217.5], [72.0, 4095.0], [73.0, 4252.0], [74.0, 4107.0], [75.0, 4761.0], [76.0, 4888.0], [77.0, 4739.0], [79.0, 5164.0], [80.0, 19573.5], [81.0, 5693.0], [82.0, 5190.0], [83.0, 5495.0], [84.0, 5586.0], [85.0, 5371.0], [86.0, 5631.0], [87.0, 5929.0], [88.0, 5669.0], [89.0, 5826.0], [90.0, 5947.0], [92.0, 14509.333333333334], [93.0, 5939.0], [94.0, 5842.0], [96.0, 6041.0], [97.0, 6022.0], [99.0, 18324.0], [100.0, 6336.0], [101.0, 18850.0], [102.0, 18806.5], [103.0, 6682.0], [104.0, 6970.0], [106.0, 6982.0], [108.0, 19796.5], [109.0, 7262.0], [110.0, 19382.5], [111.0, 19988.0], [112.0, 7653.0], [113.0, 7115.0], [114.0, 7576.0], [115.0, 7621.0], [116.0, 7528.0], [117.0, 7760.0], [119.0, 8190.0], [120.0, 20271.0], [121.0, 8540.0], [122.0, 18553.5], [123.0, 19832.0], [124.0, 8604.0], [125.0, 8787.0], [126.0, 8958.0], [127.0, 8560.0], [128.0, 8816.0], [129.0, 55515.5], [130.0, 70971.33333333333], [131.0, 8903.0], [132.0, 8734.0], [133.0, 8578.0], [134.0, 8841.0], [135.0, 82176.0], [136.0, 9386.0], [137.0, 9684.0], [138.0, 64064.75], [139.0, 9831.0], [140.0, 19251.5], [141.0, 2.0], [142.0, 9948.0], [143.0, 28435.0], [144.0, 10316.0], [145.0, 10282.5], [147.0, 10309.0], [148.0, 19336.5], [149.0, 10158.0], [150.0, 10428.0], [151.0, 28349.0], [152.0, 19320.5], [153.0, 10780.0], [154.0, 19508.0], [159.0, 21052.5], [161.0, 11192.5], [164.0, 14761.5], [166.0, 13099.0], [168.0, 14402.666666666666], [170.0, 13005.0], [171.0, 13155.0], [172.0, 11840.0], [174.0, 16116.0], [175.0, 20763.0], [177.0, 12484.0], [182.0, 21053.0], [181.0, 21073.0], [185.0, 14511.0], [190.0, 38639.0], [187.0, 20980.0], [186.0, 131583.0], [192.0, 11542.0], [194.0, 11027.0], [196.0, 11278.0], [198.0, 12186.0], [197.0, 64369.0], [201.0, 13594.0], [202.0, 12676.0], [207.0, 11978.0], [206.0, 16714.0], [204.0, 16768.0], [212.0, 13497.333333333334], [215.0, 64823.0], [214.0, 64826.0], [208.0, 16697.0], [216.0, 9633.0], [218.0, 23202.0], [219.0, 13226.0], [220.0, 15337.0], [221.0, 7976.0], [223.0, 12855.0], [225.0, 12804.0], [227.0, 34461.0], [228.0, 26530.5], [233.0, 38203.666666666664], [235.0, 37813.5], [237.0, 13340.0], [238.0, 26357.0], [239.0, 13413.0], [232.0, 15387.0], [240.0, 12370.5], [241.0, 38431.66666666667], [244.0, 11377.5], [245.0, 49928.5], [247.0, 17582.0], [246.0, 15060.0], [248.0, 13213.0], [249.0, 74646.0], [251.0, 58247.5], [253.0, 105767.0], [254.0, 14609.5], [255.0, 56058.5], [258.0, 11358.0], [257.0, 69032.33333333333], [259.0, 43050.33333333333], [270.0, 79131.5], [271.0, 11317.0], [261.0, 28431.8], [263.0, 29382.8], [264.0, 8221.0], [265.0, 11254.0], [266.0, 60288.5], [267.0, 15359.0], [273.0, 8143.666666666667], [272.0, 27547.0], [274.0, 7168.0], [275.0, 1.0], [276.0, 14131.0], [277.0, 8550.0], [278.0, 81834.5], [279.0, 6671.0], [280.0, 37021.333333333336], [286.0, 42123.555555555555], [287.0, 11256.0], [284.0, 12900.0], [285.0, 9399.5], [281.0, 13134.0], [282.0, 41629.66666666667], [289.0, 10336.833333333334], [288.0, 106609.0], [290.0, 37687.200000000004], [291.0, 12469.0], [292.0, 48435.75], [293.0, 11313.5], [294.0, 9385.0], [295.0, 20830.5], [296.0, 11356.5], [302.0, 23843.833333333332], [303.0, 46762.333333333336], [300.0, 45339.142857142855], [301.0, 7179.6], [297.0, 35325.25], [298.0, 31006.4], [299.0, 9521.5], [305.0, 7424.0], [304.0, 41831.0], [306.0, 8214.5], [307.0, 23464.153846153844], [308.0, 11906.0], [309.0, 8386.0], [310.0, 9403.8], [311.0, 10329.0], [312.0, 10169.0], [318.0, 9143.333333333332], [319.0, 16814.555555555555], [316.0, 10900.666666666666], [317.0, 9032.0], [313.0, 105109.0], [314.0, 10203.8], [315.0, 8784.8], [321.0, 8440.8], [320.0, 11619.25], [323.0, 106926.0], [332.0, 16283.6], [333.0, 27479.200000000004], [334.0, 7550.25], [335.0, 10466.153846153848], [324.0, 13568.0], [325.0, 7991.6], [326.0, 10979.0], [327.0, 11780.5], [328.0, 13450.692307692307], [329.0, 12287.6], [330.0, 11091.333333333332], [331.0, 9930.8], [337.0, 10995.0], [336.0, 12139.0], [339.0, 10836.833333333332], [348.0, 14336.0], [349.0, 10560.6], [350.0, 12546.0], [351.0, 9665.5], [340.0, 12569.5], [341.0, 32961.5], [342.0, 9915.250000000002], [343.0, 12031.0], [344.0, 11007.562500000002], [345.0, 7900.857142857142], [346.0, 17489.2], [347.0, 11175.0], [353.0, 7016.333333333334], [352.0, 10283.285714285716], [354.0, 18897.636363636364], [355.0, 8197.5], [356.0, 12323.0], [357.0, 13952.545454545456], [358.0, 13509.0], [359.0, 7172.0], [360.0, 9150.166666666666], [364.0, 13877.0], [365.0, 9517.0], [361.0, 11768.0], [362.0, 9509.166666666668], [363.0, 11210.800000000001], [369.0, 10329.57142857143], [368.0, 12746.0], [370.0, 10348.857142857141], [371.0, 12162.0], [372.0, 11046.666666666666], [373.0, 8410.0], [374.0, 11864.777777777777], [375.0, 12465.75], [376.0, 8804.6], [382.0, 11771.6], [383.0, 11570.190476190473], [380.0, 12604.666666666668], [381.0, 11284.0], [377.0, 29418.0], [378.0, 9062.75], [385.0, 10687.0], [384.0, 12799.0], [386.0, 11324.666666666666], [387.0, 13311.5], [388.0, 11150.888888888889], [389.0, 11505.75], [390.0, 5122.0], [391.0, 9287.875], [392.0, 1.0], [398.0, 12313.714285714286], [399.0, 11285.2], [396.0, 9655.2], [397.0, 9936.727272727272], [393.0, 10289.666666666666], [395.0, 10201.333333333332], [401.0, 8882.8], [400.0, 11602.0], [402.0, 11338.0], [412.0, 14339.5], [414.0, 18485.0], [415.0, 11518.666666666666], [404.0, 10272.5], [405.0, 12882.5], [406.0, 13320.0], [407.0, 11655.0], [408.0, 8953.0], [409.0, 13286.4], [410.0, 11893.416666666668], [411.0, 12872.769230769229], [417.0, 9222.499999999998], [416.0, 11341.666666666666], [418.0, 10603.5], [419.0, 9691.0], [420.0, 11204.0], [422.0, 12284.0], [423.0, 11860.75], [424.0, 9239.333333333334], [430.0, 10447.625], [431.0, 6143.4], [428.0, 10748.5], [429.0, 7490.0], [425.0, 14426.249999999998], [426.0, 9584.0], [427.0, 39535.71428571429], [433.0, 9244.0], [432.0, 9366.000000000002], [434.0, 37814.333333333336], [435.0, 11376.0], [436.0, 9087.0], [437.0, 9038.714285714284], [438.0, 9391.333333333334], [439.0, 12231.5], [440.0, 11330.875], [446.0, 9830.0], [447.0, 12861.0], [444.0, 6384.0], [445.0, 1.0], [441.0, 8189.0], [442.0, 16512.0], [443.0, 7860.0], [449.0, 8704.0], [448.0, 9534.454545454546], [450.0, 8580.0], [451.0, 17152.0], [452.0, 12959.25], [453.0, 13259.5], [454.0, 46936.11111111112], [455.0, 10312.285714285716], [456.0, 7332.166666666666], [462.0, 42103.75], [463.0, 6990.0], [460.0, 9234.666666666668], [461.0, 15868.0], [457.0, 7931.857142857144], [458.0, 12891.166666666666], [459.0, 10879.666666666666], [465.0, 13234.0], [464.0, 10024.0], [467.0, 13398.0], [476.0, 9076.5], [477.0, 9554.666666666666], [478.0, 13823.0], [479.0, 10610.75], [468.0, 10745.777777777777], [469.0, 10311.0], [470.0, 10373.000000000002], [471.0, 23216.777777777777], [472.0, 10049.5], [473.0, 11165.166666666668], [474.0, 9622.0], [475.0, 11332.0], [481.0, 10256.272727272728], [480.0, 10663.833333333334], [482.0, 10882.833333333332], [483.0, 41486.0], [484.0, 9399.428571428572], [485.0, 27221.666666666664], [486.0, 11981.75], [487.0, 28379.6], [488.0, 10590.666666666666], [495.0, 11776.0], [492.0, 12077.0], [493.0, 54755.57142857143], [490.0, 9286.8], [491.0, 8811.333333333334], [496.0, 10820.0], [497.0, 11266.0], [498.0, 14959.0], [499.0, 18091.0], [500.0, 23777.907563025194], [1.0, 751.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[368.57722660653917, 18183.145997745218]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 89.85, "minX": 1.53945168E12, "maxY": 991211.75, "series": [{"data": [[1.53945168E12, 697461.85], [1.53945216E12, 991211.75], [1.53945228E12, 520055.01666666666], [1.53945186E12, 955144.0833333334], [1.53945204E12, 955839.75], [1.53945174E12, 950168.4333333333], [1.53945222E12, 965463.4166666666], [1.53945192E12, 944837.2166666667], [1.5394521E12, 963622.9833333333], [1.53945234E12, 3193.7], [1.5394518E12, 952222.6666666666], [1.53945198E12, 971747.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53945168E12, 2579.4], [1.53945216E12, 7204.666666666667], [1.53945228E12, 2819.4], [1.53945186E12, 3159.483333333333], [1.53945204E12, 7220.566666666667], [1.53945174E12, 3379.6], [1.53945222E12, 7251.4], [1.53945192E12, 4071.016666666667], [1.5394521E12, 7572.966666666666], [1.53945234E12, 89.85], [1.5394518E12, 3410.3], [1.53945198E12, 6598.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945234E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 983.0599999999998, "minX": 1.53945168E12, "maxY": 144095.0, "series": [{"data": [[1.53945168E12, 2497.918859649122], [1.53945216E12, 13119.710144927532], [1.53945228E12, 27204.597872340437], [1.53945186E12, 12971.85284810127], [1.53945204E12, 11742.400369003706], [1.53945174E12, 6412.9935794542525], [1.53945222E12, 17103.24165988609], [1.53945192E12, 14983.103496503492], [1.5394521E12, 12988.72351421187], [1.53945234E12, 138750.625], [1.5394518E12, 10868.007949125607], [1.53945198E12, 13174.621212121217]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945168E12, 1962.9361702127655], [1.53945216E12, 16758.77083333334], [1.53945228E12, 45557.07954545455], [1.53945186E12, 12632.608695652176], [1.53945204E12, 11408.768707482988], [1.53945174E12, 5941.755102040816], [1.53945222E12, 30529.517699115033], [1.53945192E12, 14056.744186046513], [1.5394521E12, 12367.199335548174], [1.53945234E12, 128638.99999999999], [1.5394518E12, 10291.941176470586], [1.53945198E12, 13019.08727272727]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945168E12, 983.0599999999998], [1.53945216E12, 14433.334677419356], [1.53945228E12, 51099.734693877544], [1.53945186E12, 15568.407407407409], [1.53945204E12, 11158.373417721523], [1.53945174E12, 5185.927272727272], [1.53945222E12, 30710.965346534653], [1.53945192E12, 29046.695312500004], [1.5394521E12, 12385.287539936104], [1.53945234E12, 144095.0], [1.5394518E12, 9977.823529411766], [1.53945198E12, 14599.164874551978]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945234E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 983.0200000000001, "minX": 1.53945168E12, "maxY": 144095.0, "series": [{"data": [[1.53945168E12, 2496.995614035087], [1.53945216E12, 13119.093776641104], [1.53945228E12, 27203.66808510639], [1.53945186E12, 12970.645569620261], [1.53945204E12, 11741.705719557196], [1.53945174E12, 6411.736757624392], [1.53945222E12, 17102.64930838079], [1.53945192E12, 14982.092307692295], [1.5394521E12, 12988.123169681312], [1.53945234E12, 138750.375], [1.5394518E12, 10866.817170111302], [1.53945198E12, 13173.835353535349]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945168E12, 1962.9361702127655], [1.53945216E12, 16758.7625], [1.53945228E12, 45557.07954545455], [1.53945186E12, 12632.608695652176], [1.53945204E12, 11408.761904761906], [1.53945174E12, 5941.734693877549], [1.53945222E12, 30529.513274336274], [1.53945192E12, 14056.73255813953], [1.5394521E12, 12367.199335548174], [1.53945234E12, 128638.99999999999], [1.5394518E12, 10291.921568627447], [1.53945198E12, 13019.080000000002]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945168E12, 983.0200000000001], [1.53945216E12, 14433.330645161292], [1.53945228E12, 51099.734693877544], [1.53945186E12, 15568.407407407409], [1.53945204E12, 11158.373417721523], [1.53945174E12, 5185.927272727272], [1.53945222E12, 30710.965346534653], [1.53945192E12, 29046.695312500004], [1.5394521E12, 12385.287539936104], [1.53945234E12, 144095.0], [1.5394518E12, 9977.78431372549], [1.53945198E12, 14599.161290322585]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945234E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.19148936170212766, "minX": 1.53945168E12, "maxY": 4.3870967741935445, "series": [{"data": [[1.53945168E12, 0.7083333333333335], [1.53945216E12, 0.5993179880647908], [1.53945228E12, 0.6191489361702135], [1.53945186E12, 0.6708860759493666], [1.53945204E12, 0.6503690036900365], [1.53945174E12, 0.7544141252006428], [1.53945222E12, 0.5345809601301875], [1.53945192E12, 0.6937062937062939], [1.5394521E12, 0.5788113695090434], [1.53945234E12, 0.75], [1.5394518E12, 0.7058823529411759], [1.53945198E12, 0.7212121212121203]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945168E12, 0.19148936170212766], [1.53945216E12, 0.6999999999999994], [1.53945228E12, 0.7045454545454547], [1.53945186E12, 0.9130434782608695], [1.53945204E12, 0.72108843537415], [1.53945174E12, 1.306122448979592], [1.53945222E12, 0.6769911504424776], [1.53945192E12, 0.9186046511627909], [1.5394521E12, 0.6312292358803988], [1.53945234E12, 0.375], [1.5394518E12, 0.8823529411764705], [1.53945198E12, 0.8327272727272733]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945168E12, 2.2399999999999998], [1.53945216E12, 0.7258064516129034], [1.53945228E12, 0.7346938775510201], [1.53945186E12, 0.962962962962963], [1.53945204E12, 0.7594936708860761], [1.53945174E12, 0.9090909090909092], [1.53945222E12, 0.6683168316831686], [1.53945192E12, 0.8515624999999999], [1.5394521E12, 0.7252396166134183], [1.53945234E12, 0.8571428571428572], [1.5394518E12, 1.4313725490196079], [1.53945198E12, 4.3870967741935445]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945234E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.53945168E12, "maxY": 109085.0, "series": [{"data": [[1.53945168E12, 7168.0], [1.53945216E12, 28044.0], [1.53945228E12, 66642.0], [1.53945186E12, 39339.0], [1.53945204E12, 18417.0], [1.53945174E12, 9838.0], [1.53945222E12, 21064.0], [1.53945192E12, 71444.0], [1.5394521E12, 24326.0], [1.53945234E12, 109085.0], [1.5394518E12, 17531.0], [1.53945198E12, 17441.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53945168E12, 20.0], [1.53945216E12, 9756.0], [1.53945228E12, 10787.0], [1.53945186E12, 10996.0], [1.53945204E12, 10527.0], [1.53945174E12, 2580.0], [1.53945222E12, 10828.0], [1.53945192E12, 10713.0], [1.5394521E12, 10412.0], [1.53945234E12, 107549.0], [1.5394518E12, 7115.0], [1.53945198E12, 10169.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53945168E12, 3687.9], [1.53945216E12, 13167.0], [1.53945228E12, 13540.0], [1.53945186E12, 12894.2], [1.53945204E12, 13153.8], [1.53945174E12, 7786.8], [1.53945222E12, 13413.2], [1.53945192E12, 13290.0], [1.5394521E12, 13176.300000000001], [1.53945234E12, 13542.8], [1.5394518E12, 11720.6], [1.53945198E12, 13181.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53945168E12, 4118.52], [1.53945216E12, 14819.850000000002], [1.53945228E12, 29326.440000000006], [1.53945186E12, 14487.539999999997], [1.53945204E12, 14684.039999999979], [1.53945174E12, 8782.0], [1.53945222E12, 14912.079999999998], [1.53945192E12, 14783.399999999998], [1.5394521E12, 14821.650000000001], [1.53945234E12, 29628.800000000003], [1.5394518E12, 12395.58], [1.53945198E12, 14719.8]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53945168E12, 3785.9000000000005], [1.53945216E12, 13687.95], [1.53945228E12, 14149.099999999999], [1.53945186E12, 13469.199999999999], [1.53945204E12, 13786.699999999999], [1.53945174E12, 8346.4], [1.53945222E12, 13901.099999999999], [1.53945192E12, 13906.099999999999], [1.5394521E12, 13752.400000000001], [1.53945234E12, 14151.9], [1.5394518E12, 11946.599999999999], [1.53945198E12, 13855.8]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945234E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155132.0, "series": [{"data": [[0.0, 109017.0], [9.0, 2226.5], [10.0, 12668.0], [11.0, 12733.0], [12.0, 8619.0], [25.0, 12137.0], [27.0, 12634.0], [28.0, 12236.0], [29.0, 12513.0], [15.0, 12661.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 155132.0], [9.0, 1.0], [10.0, 16380.0], [11.0, 13251.0], [12.0, 2.0], [25.0, 11264.0], [27.0, 12028.0], [28.0, 12796.0], [29.0, 9984.0], [15.0, 13311.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155132.0, "series": [{"data": [[0.0, 109016.0], [9.0, 2225.5], [10.0, 12666.0], [11.0, 12732.0], [12.0, 8618.0], [25.0, 12136.5], [27.0, 12633.0], [28.0, 12234.0], [29.0, 12512.5], [15.0, 12660.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 155132.0], [9.0, 1.0], [10.0, 16380.0], [11.0, 13251.0], [12.0, 2.0], [25.0, 11264.0], [27.0, 12028.0], [28.0, 12796.0], [29.0, 9984.0], [15.0, 13311.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.9833333333333334, "minX": 1.53945168E12, "maxY": 30.583333333333332, "series": [{"data": [[1.53945168E12, 10.1], [1.53945216E12, 28.133333333333333], [1.53945228E12, 2.9833333333333334], [1.53945186E12, 12.366666666666667], [1.53945204E12, 29.233333333333334], [1.53945174E12, 13.116666666666667], [1.53945222E12, 27.616666666666667], [1.53945192E12, 16.483333333333334], [1.5394521E12, 30.583333333333332], [1.5394518E12, 13.166666666666666], [1.53945198E12, 26.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945228E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945168E12, "maxY": 17.866666666666667, "series": [{"data": [[1.53945168E12, 8.416666666666666], [1.53945216E12, 11.4], [1.53945228E12, 6.3], [1.53945186E12, 10.75], [1.53945204E12, 10.95], [1.53945174E12, 11.266666666666667], [1.53945222E12, 10.683333333333334], [1.53945192E12, 10.9], [1.5394521E12, 10.95], [1.53945234E12, 0.05], [1.5394518E12, 11.233333333333333], [1.53945198E12, 11.183333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53945168E12, 0.7833333333333333], [1.53945216E12, 0.4666666666666667], [1.53945228E12, 0.05], [1.53945186E12, 0.36666666666666664], [1.53945204E12, 0.5666666666666667], [1.53945174E12, 0.8166666666666667], [1.53945222E12, 0.26666666666666666], [1.53945192E12, 0.38333333333333336], [1.5394521E12, 0.48333333333333334], [1.5394518E12, 0.8333333333333334], [1.53945198E12, 0.5833333333333334]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945168E12, 0.016666666666666666], [1.53945216E12, 15.583333333333334], [1.53945228E12, 3.9], [1.53945186E12, 0.23333333333333334], [1.53945204E12, 16.5], [1.53945174E12, 0.03333333333333333], [1.53945222E12, 16.533333333333335], [1.53945192E12, 4.016666666666667], [1.5394521E12, 17.866666666666667], [1.53945234E12, 0.3333333333333333], [1.5394518E12, 0.1], [1.53945198E12, 13.6]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53945216E12, 0.23333333333333334], [1.53945228E12, 0.6833333333333333], [1.53945186E12, 0.016666666666666666], [1.53945204E12, 0.21666666666666667], [1.53945222E12, 0.13333333333333333], [1.53945192E12, 0.18333333333333332], [1.5394521E12, 0.2833333333333333], [1.5394518E12, 0.016666666666666666], [1.53945198E12, 0.36666666666666664]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945234E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945168E12, "maxY": 10.783333333333333, "series": [{"data": [[1.53945168E12, 0.8333333333333334], [1.53945216E12, 0.6166666666666667], [1.53945228E12, 0.6666666666666666], [1.53945186E12, 0.3], [1.53945204E12, 0.5666666666666667], [1.53945174E12, 0.9166666666666666], [1.53945222E12, 0.15], [1.53945192E12, 0.5333333333333333], [1.5394521E12, 0.48333333333333334], [1.53945234E12, 0.016666666666666666], [1.5394518E12, 0.8333333333333334], [1.53945198E12, 0.5833333333333334]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53945168E12, 0.7833333333333333], [1.53945216E12, 0.4666666666666667], [1.53945228E12, 0.05], [1.53945186E12, 0.36666666666666664], [1.53945204E12, 0.5666666666666667], [1.53945174E12, 0.8166666666666667], [1.53945222E12, 0.26666666666666666], [1.53945192E12, 0.38333333333333336], [1.5394521E12, 0.48333333333333334], [1.5394518E12, 0.8333333333333334], [1.53945198E12, 0.5833333333333334]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53945168E12, 7.583333333333333], [1.53945216E12, 10.783333333333333], [1.53945228E12, 5.633333333333334], [1.53945186E12, 10.45], [1.53945204E12, 10.383333333333333], [1.53945174E12, 10.35], [1.53945222E12, 10.533333333333333], [1.53945192E12, 10.366666666666667], [1.5394521E12, 10.466666666666667], [1.53945234E12, 0.03333333333333333], [1.5394518E12, 10.4], [1.53945198E12, 10.6]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945168E12, 0.016666666666666666], [1.53945216E12, 8.766666666666667], [1.53945228E12, 2.2], [1.53945186E12, 0.08333333333333333], [1.53945204E12, 7.683333333333334], [1.53945174E12, 0.03333333333333333], [1.53945222E12, 9.95], [1.53945192E12, 1.55], [1.5394521E12, 8.883333333333333], [1.53945234E12, 0.1], [1.5394518E12, 0.08333333333333333], [1.53945198E12, 5.9]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53945216E12, 3.5166666666666666], [1.53945228E12, 0.9666666666666667], [1.53945186E12, 0.15], [1.53945204E12, 4.7], [1.53945222E12, 3.216666666666667], [1.53945192E12, 1.6], [1.5394521E12, 4.733333333333333], [1.53945234E12, 0.1], [1.5394518E12, 0.016666666666666666], [1.53945198E12, 4.066666666666666]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53945216E12, 3.533333333333333], [1.53945228E12, 1.4166666666666667], [1.53945186E12, 0.016666666666666666], [1.53945204E12, 4.333333333333333], [1.53945222E12, 3.5], [1.53945192E12, 1.05], [1.5394521E12, 4.533333333333333], [1.53945234E12, 0.13333333333333333], [1.5394518E12, 0.016666666666666666], [1.53945198E12, 4.0]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945234E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
