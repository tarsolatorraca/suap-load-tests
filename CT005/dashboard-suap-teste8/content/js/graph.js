/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 211711.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 16.0], [3.0, 1260.0], [3.1, 1296.0], [3.2, 1317.0], [3.3, 1352.0], [3.4, 1369.0], [3.5, 1385.0], [3.6, 1396.0], [3.7, 1418.0], [3.8, 1447.0], [3.9, 1488.0], [4.0, 1557.0], [4.1, 1631.0], [4.2, 1701.0], [4.3, 1745.0], [4.4, 1821.0], [4.5, 1890.0], [4.6, 2024.0], [4.7, 2068.0], [4.8, 2166.0], [4.9, 2217.0], [5.0, 2323.0], [5.1, 2438.0], [5.2, 2497.0], [5.3, 2590.0], [5.4, 2636.0], [5.5, 2703.0], [5.6, 2729.0], [5.7, 2760.0], [5.8, 2774.0], [5.9, 2813.0], [6.0, 2835.0], [6.1, 2896.0], [6.2, 2961.0], [6.3, 3028.0], [6.4, 3069.0], [6.5, 3152.0], [6.6, 3186.0], [6.7, 3311.0], [6.8, 3405.0], [6.9, 3478.0], [7.0, 3539.0], [7.1, 3581.0], [7.2, 3629.0], [7.3, 3721.0], [7.4, 3789.0], [7.5, 3840.0], [7.6, 3891.0], [7.7, 3931.0], [7.8, 3981.0], [7.9, 4039.0], [8.0, 4086.0], [8.1, 4118.0], [8.2, 4191.0], [8.3, 4233.0], [8.4, 4335.0], [8.5, 4425.0], [8.6, 4512.0], [8.7, 4624.0], [8.8, 4739.0], [8.9, 4865.0], [9.0, 5096.0], [9.1, 5243.0], [9.2, 5365.0], [9.3, 5454.0], [9.4, 5505.0], [9.5, 5528.0], [9.6, 5558.0], [9.7, 5585.0], [9.8, 5608.0], [9.9, 5635.0], [10.0, 5669.0], [10.1, 5678.0], [10.2, 5728.0], [10.3, 5743.0], [10.4, 5769.0], [10.5, 5785.0], [10.6, 5811.0], [10.7, 5845.0], [10.8, 5900.0], [10.9, 5921.0], [11.0, 5947.0], [11.1, 6009.0], [11.2, 6084.0], [11.3, 6163.0], [11.4, 6286.0], [11.5, 6395.0], [11.6, 6483.0], [11.7, 6578.0], [11.8, 6688.0], [11.9, 6800.0], [12.0, 7003.0], [12.1, 7027.0], [12.2, 7102.0], [12.3, 7155.0], [12.4, 7164.0], [12.5, 7164.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7171.0], [13.4, 7172.0], [13.5, 7206.0], [13.6, 7241.0], [13.7, 7328.0], [13.8, 7387.0], [13.9, 7418.0], [14.0, 7420.0], [14.1, 7423.0], [14.2, 7424.0], [14.3, 7424.0], [14.4, 7424.0], [14.5, 7424.0], [14.6, 7425.0], [14.7, 7427.0], [14.8, 7428.0], [14.9, 7435.0], [15.0, 7450.0], [15.1, 7470.0], [15.2, 7492.0], [15.3, 7528.0], [15.4, 7561.0], [15.5, 7591.0], [15.6, 7673.0], [15.7, 7679.0], [15.8, 7680.0], [15.9, 7680.0], [16.0, 7680.0], [16.1, 7680.0], [16.2, 7680.0], [16.3, 7684.0], [16.4, 7717.0], [16.5, 7765.0], [16.6, 7813.0], [16.7, 7895.0], [16.8, 7932.0], [16.9, 7934.0], [17.0, 7935.0], [17.1, 7936.0], [17.2, 7936.0], [17.3, 7936.0], [17.4, 7936.0], [17.5, 7936.0], [17.6, 7936.0], [17.7, 7940.0], [17.8, 7951.0], [17.9, 8017.0], [18.0, 8133.0], [18.1, 8188.0], [18.2, 8190.0], [18.3, 8191.0], [18.4, 8191.0], [18.5, 8192.0], [18.6, 8192.0], [18.7, 8192.0], [18.8, 8192.0], [18.9, 8195.0], [19.0, 8196.0], [19.1, 8261.0], [19.2, 8438.0], [19.3, 8448.0], [19.4, 8492.0], [19.5, 8672.0], [19.6, 8700.0], [19.7, 8701.0], [19.8, 8703.0], [19.9, 8703.0], [20.0, 8704.0], [20.1, 8704.0], [20.2, 8704.0], [20.3, 8704.0], [20.4, 8704.0], [20.5, 8704.0], [20.6, 8704.0], [20.7, 8705.0], [20.8, 8794.0], [20.9, 8828.0], [21.0, 8864.0], [21.1, 8899.0], [21.2, 8935.0], [21.3, 8959.0], [21.4, 8960.0], [21.5, 8960.0], [21.6, 8966.0], [21.7, 9019.0], [21.8, 9057.0], [21.9, 9104.0], [22.0, 9166.0], [22.1, 9211.0], [22.2, 9212.0], [22.3, 9215.0], [22.4, 9216.0], [22.5, 9216.0], [22.6, 9216.0], [22.7, 9216.0], [22.8, 9216.0], [22.9, 9219.0], [23.0, 9220.0], [23.1, 9220.0], [23.2, 9224.0], [23.3, 9305.0], [23.4, 9383.0], [23.5, 9411.0], [23.6, 9468.0], [23.7, 9472.0], [23.8, 9472.0], [23.9, 9472.0], [24.0, 9476.0], [24.1, 9496.0], [24.2, 9523.0], [24.3, 9557.0], [24.4, 9592.0], [24.5, 9643.0], [24.6, 9710.0], [24.7, 9724.0], [24.8, 9727.0], [24.9, 9728.0], [25.0, 9728.0], [25.1, 9728.0], [25.2, 9728.0], [25.3, 9729.0], [25.4, 9732.0], [25.5, 9820.0], [25.6, 9979.0], [25.7, 9982.0], [25.8, 9984.0], [25.9, 9984.0], [26.0, 9984.0], [26.1, 10013.0], [26.2, 10088.0], [26.3, 10150.0], [26.4, 10215.0], [26.5, 10229.0], [26.6, 10238.0], [26.7, 10239.0], [26.8, 10240.0], [26.9, 10240.0], [27.0, 10240.0], [27.1, 10244.0], [27.2, 10247.0], [27.3, 10270.0], [27.4, 10280.0], [27.5, 10317.0], [27.6, 10345.0], [27.7, 10383.0], [27.8, 10400.0], [27.9, 10433.0], [28.0, 10469.0], [28.1, 10495.0], [28.2, 10496.0], [28.3, 10507.0], [28.4, 10598.0], [28.5, 10676.0], [28.6, 10723.0], [28.7, 10746.0], [28.8, 10751.0], [28.9, 10752.0], [29.0, 10752.0], [29.1, 10755.0], [29.2, 10786.0], [29.3, 10839.0], [29.4, 10888.0], [29.5, 10937.0], [29.6, 10990.0], [29.7, 11006.0], [29.8, 11008.0], [29.9, 11008.0], [30.0, 11022.0], [30.1, 11058.0], [30.2, 11083.0], [30.3, 11108.0], [30.4, 11125.0], [30.5, 11159.0], [30.6, 11197.0], [30.7, 11242.0], [30.8, 11263.0], [30.9, 11264.0], [31.0, 11264.0], [31.1, 11264.0], [31.2, 11267.0], [31.3, 11284.0], [31.4, 11304.0], [31.5, 11328.0], [31.6, 11361.0], [31.7, 11376.0], [31.8, 11413.0], [31.9, 11429.0], [32.0, 11446.0], [32.1, 11466.0], [32.2, 11486.0], [32.3, 11496.0], [32.4, 11508.0], [32.5, 11518.0], [32.6, 11520.0], [32.7, 11520.0], [32.8, 11525.0], [32.9, 11533.0], [33.0, 11541.0], [33.1, 11544.0], [33.2, 11554.0], [33.3, 11565.0], [33.4, 11575.0], [33.5, 11581.0], [33.6, 11587.0], [33.7, 11593.0], [33.8, 11597.0], [33.9, 11607.0], [34.0, 11614.0], [34.1, 11623.0], [34.2, 11627.0], [34.3, 11634.0], [34.4, 11641.0], [34.5, 11644.0], [34.6, 11652.0], [34.7, 11660.0], [34.8, 11665.0], [34.9, 11670.0], [35.0, 11675.0], [35.1, 11678.0], [35.2, 11684.0], [35.3, 11690.0], [35.4, 11696.0], [35.5, 11699.0], [35.6, 11703.0], [35.7, 11711.0], [35.8, 11717.0], [35.9, 11721.0], [36.0, 11726.0], [36.1, 11729.0], [36.2, 11739.0], [36.3, 11743.0], [36.4, 11748.0], [36.5, 11750.0], [36.6, 11758.0], [36.7, 11763.0], [36.8, 11768.0], [36.9, 11770.0], [37.0, 11774.0], [37.1, 11775.0], [37.2, 11776.0], [37.3, 11776.0], [37.4, 11778.0], [37.5, 11780.0], [37.6, 11786.0], [37.7, 11789.0], [37.8, 11794.0], [37.9, 11798.0], [38.0, 11803.0], [38.1, 11808.0], [38.2, 11811.0], [38.3, 11813.0], [38.4, 11819.0], [38.5, 11824.0], [38.6, 11829.0], [38.7, 11832.0], [38.8, 11837.0], [38.9, 11840.0], [39.0, 11842.0], [39.1, 11845.0], [39.2, 11849.0], [39.3, 11854.0], [39.4, 11858.0], [39.5, 11863.0], [39.6, 11866.0], [39.7, 11870.0], [39.8, 11873.0], [39.9, 11879.0], [40.0, 11884.0], [40.1, 11887.0], [40.2, 11890.0], [40.3, 11894.0], [40.4, 11899.0], [40.5, 11903.0], [40.6, 11906.0], [40.7, 11910.0], [40.8, 11913.0], [40.9, 11920.0], [41.0, 11926.0], [41.1, 11933.0], [41.2, 11936.0], [41.3, 11941.0], [41.4, 11944.0], [41.5, 11949.0], [41.6, 11954.0], [41.7, 11958.0], [41.8, 11962.0], [41.9, 11965.0], [42.0, 11968.0], [42.1, 11970.0], [42.2, 11974.0], [42.3, 11980.0], [42.4, 11984.0], [42.5, 11989.0], [42.6, 11991.0], [42.7, 11994.0], [42.8, 11997.0], [42.9, 12003.0], [43.0, 12006.0], [43.1, 12009.0], [43.2, 12012.0], [43.3, 12016.0], [43.4, 12018.0], [43.5, 12021.0], [43.6, 12025.0], [43.7, 12028.0], [43.8, 12031.0], [43.9, 12033.0], [44.0, 12038.0], [44.1, 12040.0], [44.2, 12043.0], [44.3, 12047.0], [44.4, 12049.0], [44.5, 12052.0], [44.6, 12055.0], [44.7, 12059.0], [44.8, 12064.0], [44.9, 12065.0], [45.0, 12067.0], [45.1, 12071.0], [45.2, 12075.0], [45.3, 12081.0], [45.4, 12083.0], [45.5, 12086.0], [45.6, 12090.0], [45.7, 12092.0], [45.8, 12094.0], [45.9, 12099.0], [46.0, 12101.0], [46.1, 12104.0], [46.2, 12107.0], [46.3, 12110.0], [46.4, 12115.0], [46.5, 12117.0], [46.6, 12121.0], [46.7, 12123.0], [46.8, 12125.0], [46.9, 12128.0], [47.0, 12130.0], [47.1, 12132.0], [47.2, 12135.0], [47.3, 12139.0], [47.4, 12142.0], [47.5, 12145.0], [47.6, 12147.0], [47.7, 12152.0], [47.8, 12154.0], [47.9, 12159.0], [48.0, 12162.0], [48.1, 12165.0], [48.2, 12168.0], [48.3, 12172.0], [48.4, 12174.0], [48.5, 12175.0], [48.6, 12177.0], [48.7, 12182.0], [48.8, 12186.0], [48.9, 12188.0], [49.0, 12192.0], [49.1, 12196.0], [49.2, 12197.0], [49.3, 12200.0], [49.4, 12205.0], [49.5, 12207.0], [49.6, 12209.0], [49.7, 12213.0], [49.8, 12217.0], [49.9, 12219.0], [50.0, 12223.0], [50.1, 12228.0], [50.2, 12231.0], [50.3, 12237.0], [50.4, 12241.0], [50.5, 12245.0], [50.6, 12248.0], [50.7, 12250.0], [50.8, 12254.0], [50.9, 12257.0], [51.0, 12261.0], [51.1, 12266.0], [51.2, 12268.0], [51.3, 12271.0], [51.4, 12273.0], [51.5, 12274.0], [51.6, 12277.0], [51.7, 12279.0], [51.8, 12282.0], [51.9, 12284.0], [52.0, 12287.0], [52.1, 12288.0], [52.2, 12288.0], [52.3, 12289.0], [52.4, 12293.0], [52.5, 12295.0], [52.6, 12298.0], [52.7, 12301.0], [52.8, 12304.0], [52.9, 12309.0], [53.0, 12314.0], [53.1, 12318.0], [53.2, 12321.0], [53.3, 12324.0], [53.4, 12327.0], [53.5, 12329.0], [53.6, 12331.0], [53.7, 12334.0], [53.8, 12336.0], [53.9, 12339.0], [54.0, 12341.0], [54.1, 12343.0], [54.2, 12346.0], [54.3, 12349.0], [54.4, 12353.0], [54.5, 12355.0], [54.6, 12359.0], [54.7, 12361.0], [54.8, 12365.0], [54.9, 12367.0], [55.0, 12370.0], [55.1, 12373.0], [55.2, 12376.0], [55.3, 12381.0], [55.4, 12384.0], [55.5, 12387.0], [55.6, 12388.0], [55.7, 12392.0], [55.8, 12394.0], [55.9, 12398.0], [56.0, 12401.0], [56.1, 12404.0], [56.2, 12407.0], [56.3, 12409.0], [56.4, 12412.0], [56.5, 12415.0], [56.6, 12418.0], [56.7, 12421.0], [56.8, 12425.0], [56.9, 12428.0], [57.0, 12431.0], [57.1, 12434.0], [57.2, 12436.0], [57.3, 12439.0], [57.4, 12442.0], [57.5, 12444.0], [57.6, 12447.0], [57.7, 12451.0], [57.8, 12456.0], [57.9, 12460.0], [58.0, 12463.0], [58.1, 12465.0], [58.2, 12469.0], [58.3, 12474.0], [58.4, 12476.0], [58.5, 12479.0], [58.6, 12481.0], [58.7, 12486.0], [58.8, 12489.0], [58.9, 12492.0], [59.0, 12496.0], [59.1, 12498.0], [59.2, 12500.0], [59.3, 12504.0], [59.4, 12505.0], [59.5, 12507.0], [59.6, 12510.0], [59.7, 12512.0], [59.8, 12516.0], [59.9, 12519.0], [60.0, 12522.0], [60.1, 12524.0], [60.2, 12529.0], [60.3, 12533.0], [60.4, 12539.0], [60.5, 12540.0], [60.6, 12542.0], [60.7, 12544.0], [60.8, 12547.0], [60.9, 12549.0], [61.0, 12553.0], [61.1, 12556.0], [61.2, 12561.0], [61.3, 12565.0], [61.4, 12569.0], [61.5, 12573.0], [61.6, 12576.0], [61.7, 12578.0], [61.8, 12581.0], [61.9, 12584.0], [62.0, 12588.0], [62.1, 12592.0], [62.2, 12597.0], [62.3, 12601.0], [62.4, 12605.0], [62.5, 12608.0], [62.6, 12611.0], [62.7, 12615.0], [62.8, 12621.0], [62.9, 12624.0], [63.0, 12628.0], [63.1, 12631.0], [63.2, 12634.0], [63.3, 12636.0], [63.4, 12640.0], [63.5, 12644.0], [63.6, 12647.0], [63.7, 12650.0], [63.8, 12655.0], [63.9, 12658.0], [64.0, 12663.0], [64.1, 12667.0], [64.2, 12669.0], [64.3, 12674.0], [64.4, 12675.0], [64.5, 12678.0], [64.6, 12680.0], [64.7, 12685.0], [64.8, 12688.0], [64.9, 12692.0], [65.0, 12694.0], [65.1, 12699.0], [65.2, 12704.0], [65.3, 12707.0], [65.4, 12710.0], [65.5, 12715.0], [65.6, 12718.0], [65.7, 12720.0], [65.8, 12721.0], [65.9, 12725.0], [66.0, 12728.0], [66.1, 12735.0], [66.2, 12738.0], [66.3, 12740.0], [66.4, 12742.0], [66.5, 12745.0], [66.6, 12748.0], [66.7, 12752.0], [66.8, 12754.0], [66.9, 12758.0], [67.0, 12761.0], [67.1, 12765.0], [67.2, 12768.0], [67.3, 12773.0], [67.4, 12778.0], [67.5, 12780.0], [67.6, 12785.0], [67.7, 12790.0], [67.8, 12794.0], [67.9, 12797.0], [68.0, 12800.0], [68.1, 12800.0], [68.2, 12802.0], [68.3, 12804.0], [68.4, 12808.0], [68.5, 12812.0], [68.6, 12815.0], [68.7, 12819.0], [68.8, 12823.0], [68.9, 12826.0], [69.0, 12829.0], [69.1, 12833.0], [69.2, 12837.0], [69.3, 12842.0], [69.4, 12844.0], [69.5, 12848.0], [69.6, 12851.0], [69.7, 12856.0], [69.8, 12859.0], [69.9, 12862.0], [70.0, 12866.0], [70.1, 12869.0], [70.2, 12871.0], [70.3, 12874.0], [70.4, 12877.0], [70.5, 12882.0], [70.6, 12884.0], [70.7, 12888.0], [70.8, 12893.0], [70.9, 12898.0], [71.0, 12903.0], [71.1, 12908.0], [71.2, 12912.0], [71.3, 12918.0], [71.4, 12923.0], [71.5, 12925.0], [71.6, 12929.0], [71.7, 12935.0], [71.8, 12940.0], [71.9, 12943.0], [72.0, 12946.0], [72.1, 12947.0], [72.2, 12950.0], [72.3, 12953.0], [72.4, 12958.0], [72.5, 12962.0], [72.6, 12965.0], [72.7, 12968.0], [72.8, 12972.0], [72.9, 12977.0], [73.0, 12979.0], [73.1, 12983.0], [73.2, 12986.0], [73.3, 12989.0], [73.4, 12993.0], [73.5, 12997.0], [73.6, 13004.0], [73.7, 13008.0], [73.8, 13016.0], [73.9, 13021.0], [74.0, 13028.0], [74.1, 13031.0], [74.2, 13034.0], [74.3, 13036.0], [74.4, 13041.0], [74.5, 13048.0], [74.6, 13053.0], [74.7, 13056.0], [74.8, 13058.0], [74.9, 13060.0], [75.0, 13064.0], [75.1, 13073.0], [75.2, 13082.0], [75.3, 13085.0], [75.4, 13089.0], [75.5, 13096.0], [75.6, 13101.0], [75.7, 13107.0], [75.8, 13113.0], [75.9, 13121.0], [76.0, 13128.0], [76.1, 13133.0], [76.2, 13139.0], [76.3, 13148.0], [76.4, 13153.0], [76.5, 13160.0], [76.6, 13163.0], [76.7, 13170.0], [76.8, 13176.0], [76.9, 13180.0], [77.0, 13184.0], [77.1, 13191.0], [77.2, 13195.0], [77.3, 13200.0], [77.4, 13212.0], [77.5, 13216.0], [77.6, 13219.0], [77.7, 13223.0], [77.8, 13229.0], [77.9, 13235.0], [78.0, 13240.0], [78.1, 13244.0], [78.2, 13249.0], [78.3, 13253.0], [78.4, 13259.0], [78.5, 13265.0], [78.6, 13270.0], [78.7, 13278.0], [78.8, 13284.0], [78.9, 13289.0], [79.0, 13293.0], [79.1, 13299.0], [79.2, 13303.0], [79.3, 13307.0], [79.4, 13308.0], [79.5, 13308.0], [79.6, 13308.0], [79.7, 13308.0], [79.8, 13308.0], [79.9, 13308.0], [80.0, 13310.0], [80.1, 13310.0], [80.2, 13311.0], [80.3, 13311.0], [80.4, 13311.0], [80.5, 13311.0], [80.6, 13311.0], [80.7, 13311.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13312.0], [83.1, 13312.0], [83.2, 13312.0], [83.3, 13312.0], [83.4, 13312.0], [83.5, 13312.0], [83.6, 13313.0], [83.7, 13313.0], [83.8, 13313.0], [83.9, 13313.0], [84.0, 13315.0], [84.1, 13315.0], [84.2, 13316.0], [84.3, 13316.0], [84.4, 13316.0], [84.5, 13316.0], [84.6, 13319.0], [84.7, 13324.0], [84.8, 13327.0], [84.9, 13334.0], [85.0, 13339.0], [85.1, 13344.0], [85.2, 13346.0], [85.3, 13349.0], [85.4, 13356.0], [85.5, 13361.0], [85.6, 13366.0], [85.7, 13372.0], [85.8, 13376.0], [85.9, 13383.0], [86.0, 13388.0], [86.1, 13399.0], [86.2, 13405.0], [86.3, 13409.0], [86.4, 13415.0], [86.5, 13419.0], [86.6, 13426.0], [86.7, 13433.0], [86.8, 13440.0], [86.9, 13446.0], [87.0, 13454.0], [87.1, 13465.0], [87.2, 13470.0], [87.3, 13475.0], [87.4, 13483.0], [87.5, 13488.0], [87.6, 13496.0], [87.7, 13502.0], [87.8, 13508.0], [87.9, 13518.0], [88.0, 13526.0], [88.1, 13535.0], [88.2, 13540.0], [88.3, 13545.0], [88.4, 13555.0], [88.5, 13561.0], [88.6, 13564.0], [88.7, 13568.0], [88.8, 13572.0], [88.9, 13580.0], [89.0, 13590.0], [89.1, 13596.0], [89.2, 13601.0], [89.3, 13606.0], [89.4, 13622.0], [89.5, 13633.0], [89.6, 13652.0], [89.7, 13663.0], [89.8, 13678.0], [89.9, 13693.0], [90.0, 13707.0], [90.1, 13719.0], [90.2, 13723.0], [90.3, 13729.0], [90.4, 13739.0], [90.5, 13754.0], [90.6, 13764.0], [90.7, 13776.0], [90.8, 13793.0], [90.9, 13805.0], [91.0, 13819.0], [91.1, 13820.0], [91.2, 13821.0], [91.3, 13823.0], [91.4, 13823.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13824.0], [92.0, 13824.0], [92.1, 13824.0], [92.2, 13825.0], [92.3, 13828.0], [92.4, 13848.0], [92.5, 13865.0], [92.6, 13880.0], [92.7, 13892.0], [92.8, 13905.0], [92.9, 13939.0], [93.0, 13955.0], [93.1, 13982.0], [93.2, 14028.0], [93.3, 14066.0], [93.4, 14079.0], [93.5, 14086.0], [93.6, 14134.0], [93.7, 14193.0], [93.8, 14259.0], [93.9, 14332.0], [94.0, 14335.0], [94.1, 14336.0], [94.2, 14336.0], [94.3, 14362.0], [94.4, 14465.0], [94.5, 14587.0], [94.6, 14596.0], [94.7, 14843.0], [94.8, 14847.0], [94.9, 14849.0], [95.0, 14950.0], [95.1, 15100.0], [95.2, 15190.0], [95.3, 15341.0], [95.4, 15360.0], [95.5, 15488.0], [95.6, 15616.0], [95.7, 15870.0], [95.8, 15898.0], [95.9, 16095.0], [96.0, 16350.0], [96.1, 16387.0], [96.2, 16815.0], [96.3, 16970.0], [96.4, 17152.0], [96.5, 17406.0], [96.6, 17920.0], [96.7, 18469.0], [96.8, 18768.0], [96.9, 19716.0], [97.0, 20225.0], [97.1, 21320.0], [97.2, 23940.0], [97.3, 24576.0], [97.4, 26367.0], [97.5, 26368.0], [97.6, 28416.0], [97.7, 34337.0], [97.8, 44307.0], [97.9, 44941.0], [98.0, 47682.0], [98.1, 55534.0], [98.2, 66755.0], [98.3, 71812.0], [98.4, 94037.0], [98.5, 106238.0], [98.6, 106496.0], [98.7, 106498.0], [98.8, 107140.0], [98.9, 110595.0], [99.0, 111105.0], [99.1, 114529.0], [99.2, 115618.0], [99.3, 121343.0], [99.4, 123135.0], [99.5, 124415.0], [99.6, 131069.0], [99.7, 135424.0], [99.8, 153088.0], [99.9, 160511.0], [100.0, 210944.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 3.0], [6.2, 167.0], [6.3, 639.0], [6.4, 641.0], [6.5, 797.0], [6.6, 912.0], [6.7, 1327.0], [6.8, 1345.0], [6.9, 1357.0], [7.0, 1456.0], [7.1, 1847.0], [7.2, 2066.0], [7.3, 2091.0], [7.4, 2256.0], [7.5, 2290.0], [7.6, 2346.0], [7.7, 2420.0], [7.8, 2499.0], [7.9, 2672.0], [8.0, 2747.0], [8.1, 2820.0], [8.2, 2906.0], [8.3, 2908.0], [8.4, 3135.0], [8.5, 3313.0], [8.6, 3473.0], [8.7, 3479.0], [8.8, 3504.0], [8.9, 3687.0], [9.0, 3979.0], [9.1, 4125.0], [9.2, 4456.0], [9.3, 4762.0], [9.4, 4955.0], [9.5, 5015.0], [9.6, 5048.0], [9.7, 5144.0], [9.8, 5200.0], [9.9, 5362.0], [10.0, 5491.0], [10.1, 5655.0], [10.2, 6207.0], [10.3, 6343.0], [10.4, 6428.0], [10.5, 6657.0], [10.6, 6664.0], [10.7, 6671.0], [10.8, 6685.0], [10.9, 6919.0], [11.0, 7089.0], [11.1, 7163.0], [11.2, 7164.0], [11.3, 7164.0], [11.4, 7164.0], [11.5, 7164.0], [11.6, 7164.0], [11.7, 7165.0], [11.8, 7167.0], [11.9, 7167.0], [12.0, 7167.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7169.0], [13.9, 7171.0], [14.0, 7171.0], [14.1, 7171.0], [14.2, 7172.0], [14.3, 7264.0], [14.4, 7419.0], [14.5, 7420.0], [14.6, 7420.0], [14.7, 7420.0], [14.8, 7420.0], [14.9, 7421.0], [15.0, 7423.0], [15.1, 7423.0], [15.2, 7423.0], [15.3, 7423.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7427.0], [16.5, 7427.0], [16.6, 7427.0], [16.7, 7427.0], [16.8, 7427.0], [16.9, 7428.0], [17.0, 7428.0], [17.1, 7428.0], [17.2, 7563.0], [17.3, 7676.0], [17.4, 7676.0], [17.5, 7678.0], [17.6, 7679.0], [17.7, 7679.0], [17.8, 7679.0], [17.9, 7679.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7682.0], [19.1, 7682.0], [19.2, 7684.0], [19.3, 7893.0], [19.4, 7932.0], [19.5, 7932.0], [19.6, 7934.0], [19.7, 7934.0], [19.8, 7935.0], [19.9, 7935.0], [20.0, 7935.0], [20.1, 7935.0], [20.2, 7935.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7965.0], [21.9, 8158.0], [22.0, 8186.0], [22.1, 8188.0], [22.2, 8188.0], [22.3, 8190.0], [22.4, 8191.0], [22.5, 8191.0], [22.6, 8192.0], [22.7, 8192.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8195.0], [23.6, 8196.0], [23.7, 8196.0], [23.8, 8444.0], [23.9, 8444.0], [24.0, 8444.0], [24.1, 8445.0], [24.2, 8447.0], [24.3, 8447.0], [24.4, 8448.0], [24.5, 8448.0], [24.6, 8492.0], [24.7, 8696.0], [24.8, 8697.0], [24.9, 8699.0], [25.0, 8700.0], [25.1, 8700.0], [25.2, 8700.0], [25.3, 8700.0], [25.4, 8702.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8703.0], [25.9, 8703.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8705.0], [28.1, 8705.0], [28.2, 8799.0], [28.3, 8820.0], [28.4, 8877.0], [28.5, 8955.0], [28.6, 8956.0], [28.7, 8958.0], [28.8, 8959.0], [28.9, 8960.0], [29.0, 8960.0], [29.1, 8960.0], [29.2, 8960.0], [29.3, 8960.0], [29.4, 8960.0], [29.5, 8963.0], [29.6, 9065.0], [29.7, 9211.0], [29.8, 9211.0], [29.9, 9212.0], [30.0, 9214.0], [30.1, 9215.0], [30.2, 9215.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9217.0], [31.5, 9219.0], [31.6, 9219.0], [31.7, 9220.0], [31.8, 9220.0], [31.9, 9220.0], [32.0, 9220.0], [32.1, 9220.0], [32.2, 9220.0], [32.3, 9222.0], [32.4, 9468.0], [32.5, 9471.0], [32.6, 9471.0], [32.7, 9471.0], [32.8, 9472.0], [32.9, 9472.0], [33.0, 9479.0], [33.1, 9672.0], [33.2, 9723.0], [33.3, 9724.0], [33.4, 9724.0], [33.5, 9725.0], [33.6, 9727.0], [33.7, 9727.0], [33.8, 9728.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9729.0], [34.9, 9731.0], [35.0, 9732.0], [35.1, 9847.0], [35.2, 9969.0], [35.3, 9980.0], [35.4, 9980.0], [35.5, 9983.0], [35.6, 9983.0], [35.7, 9983.0], [35.8, 9983.0], [35.9, 9983.0], [36.0, 9983.0], [36.1, 9984.0], [36.2, 9984.0], [36.3, 9984.0], [36.4, 9984.0], [36.5, 9984.0], [36.6, 9984.0], [36.7, 9988.0], [36.8, 10008.0], [36.9, 10184.0], [37.0, 10225.0], [37.1, 10236.0], [37.2, 10236.0], [37.3, 10236.0], [37.4, 10236.0], [37.5, 10236.0], [37.6, 10239.0], [37.7, 10239.0], [37.8, 10239.0], [37.9, 10240.0], [38.0, 10240.0], [38.1, 10240.0], [38.2, 10240.0], [38.3, 10240.0], [38.4, 10240.0], [38.5, 10240.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10240.0], [38.9, 10240.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10243.0], [39.3, 10244.0], [39.4, 10244.0], [39.5, 10250.0], [39.6, 10314.0], [39.7, 10470.0], [39.8, 10492.0], [39.9, 10495.0], [40.0, 10496.0], [40.1, 10496.0], [40.2, 10496.0], [40.3, 10496.0], [40.4, 10499.0], [40.5, 10500.0], [40.6, 10500.0], [40.7, 10604.0], [40.8, 10691.0], [40.9, 10706.0], [41.0, 10731.0], [41.1, 10748.0], [41.2, 10751.0], [41.3, 10751.0], [41.4, 10751.0], [41.5, 10751.0], [41.6, 10752.0], [41.7, 10752.0], [41.8, 10752.0], [41.9, 10752.0], [42.0, 10752.0], [42.1, 10752.0], [42.2, 10756.0], [42.3, 10774.0], [42.4, 10781.0], [42.5, 10885.0], [42.6, 10887.0], [42.7, 10940.0], [42.8, 10950.0], [42.9, 10971.0], [43.0, 10971.0], [43.1, 10986.0], [43.2, 10997.0], [43.3, 11006.0], [43.4, 11006.0], [43.5, 11006.0], [43.6, 11008.0], [43.7, 11008.0], [43.8, 11012.0], [43.9, 11012.0], [44.0, 11012.0], [44.1, 11023.0], [44.2, 11031.0], [44.3, 11035.0], [44.4, 11041.0], [44.5, 11054.0], [44.6, 11066.0], [44.7, 11067.0], [44.8, 11071.0], [44.9, 11088.0], [45.0, 11149.0], [45.1, 11172.0], [45.2, 11182.0], [45.3, 11188.0], [45.4, 11194.0], [45.5, 11196.0], [45.6, 11251.0], [45.7, 11263.0], [45.8, 11264.0], [45.9, 11264.0], [46.0, 11264.0], [46.1, 11264.0], [46.2, 11264.0], [46.3, 11264.0], [46.4, 11264.0], [46.5, 11267.0], [46.6, 11268.0], [46.7, 11268.0], [46.8, 11269.0], [46.9, 11277.0], [47.0, 11280.0], [47.1, 11295.0], [47.2, 11297.0], [47.3, 11317.0], [47.4, 11334.0], [47.5, 11338.0], [47.6, 11338.0], [47.7, 11366.0], [47.8, 11390.0], [47.9, 11425.0], [48.0, 11429.0], [48.1, 11459.0], [48.2, 11465.0], [48.3, 11486.0], [48.4, 11486.0], [48.5, 11498.0], [48.6, 11519.0], [48.7, 11520.0], [48.8, 11520.0], [48.9, 11522.0], [49.0, 11540.0], [49.1, 11564.0], [49.2, 11591.0], [49.3, 11604.0], [49.4, 11620.0], [49.5, 11626.0], [49.6, 11629.0], [49.7, 11638.0], [49.8, 11645.0], [49.9, 11648.0], [50.0, 11677.0], [50.1, 11687.0], [50.2, 11710.0], [50.3, 11729.0], [50.4, 11737.0], [50.5, 11739.0], [50.6, 11771.0], [50.7, 11775.0], [50.8, 11775.0], [50.9, 11775.0], [51.0, 11775.0], [51.1, 11776.0], [51.2, 11776.0], [51.3, 11776.0], [51.4, 11776.0], [51.5, 11776.0], [51.6, 11776.0], [51.7, 11776.0], [51.8, 11776.0], [51.9, 11779.0], [52.0, 11780.0], [52.1, 11781.0], [52.2, 11816.0], [52.3, 11842.0], [52.4, 11851.0], [52.5, 11862.0], [52.6, 11882.0], [52.7, 11911.0], [52.8, 11941.0], [52.9, 11946.0], [53.0, 11949.0], [53.1, 11970.0], [53.2, 11994.0], [53.3, 11998.0], [53.4, 12002.0], [53.5, 12025.0], [53.6, 12032.0], [53.7, 12032.0], [53.8, 12036.0], [53.9, 12039.0], [54.0, 12054.0], [54.1, 12065.0], [54.2, 12074.0], [54.3, 12095.0], [54.4, 12114.0], [54.5, 12146.0], [54.6, 12156.0], [54.7, 12169.0], [54.8, 12187.0], [54.9, 12246.0], [55.0, 12265.0], [55.1, 12283.0], [55.2, 12288.0], [55.3, 12288.0], [55.4, 12289.0], [55.5, 12291.0], [55.6, 12294.0], [55.7, 12338.0], [55.8, 12355.0], [55.9, 12388.0], [56.0, 12425.0], [56.1, 12443.0], [56.2, 12444.0], [56.3, 12458.0], [56.4, 12483.0], [56.5, 12519.0], [56.6, 12534.0], [56.7, 12540.0], [56.8, 12542.0], [56.9, 12543.0], [57.0, 12544.0], [57.1, 12544.0], [57.2, 12544.0], [57.3, 12544.0], [57.4, 12548.0], [57.5, 12573.0], [57.6, 12622.0], [57.7, 12706.0], [57.8, 12710.0], [57.9, 12725.0], [58.0, 12740.0], [58.1, 12778.0], [58.2, 12794.0], [58.3, 12799.0], [58.4, 12799.0], [58.5, 12800.0], [58.6, 12800.0], [58.7, 12800.0], [58.8, 12801.0], [58.9, 12840.0], [59.0, 12888.0], [59.1, 12956.0], [59.2, 12987.0], [59.3, 13055.0], [59.4, 13056.0], [59.5, 13056.0], [59.6, 13060.0], [59.7, 13074.0], [59.8, 13105.0], [59.9, 13129.0], [60.0, 13135.0], [60.1, 13204.0], [60.2, 13208.0], [60.3, 13226.0], [60.4, 13245.0], [60.5, 13270.0], [60.6, 13297.0], [60.7, 13300.0], [60.8, 13305.0], [60.9, 13307.0], [61.0, 13307.0], [61.1, 13307.0], [61.2, 13307.0], [61.3, 13308.0], [61.4, 13308.0], [61.5, 13308.0], [61.6, 13308.0], [61.7, 13308.0], [61.8, 13308.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13308.0], [62.2, 13308.0], [62.3, 13308.0], [62.4, 13308.0], [62.5, 13308.0], [62.6, 13308.0], [62.7, 13308.0], [62.8, 13308.0], [62.9, 13308.0], [63.0, 13308.0], [63.1, 13308.0], [63.2, 13309.0], [63.3, 13309.0], [63.4, 13310.0], [63.5, 13310.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13315.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13315.0], [75.1, 13315.0], [75.2, 13315.0], [75.3, 13315.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13316.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13334.0], [76.8, 13377.0], [76.9, 13383.0], [77.0, 13473.0], [77.1, 13490.0], [77.2, 13542.0], [77.3, 13550.0], [77.4, 13564.0], [77.5, 13568.0], [77.6, 13568.0], [77.7, 13568.0], [77.8, 13607.0], [77.9, 13637.0], [78.0, 13653.0], [78.1, 13674.0], [78.2, 13704.0], [78.3, 13757.0], [78.4, 13780.0], [78.5, 13818.0], [78.6, 13819.0], [78.7, 13819.0], [78.8, 13820.0], [78.9, 13820.0], [79.0, 13820.0], [79.1, 13820.0], [79.2, 13822.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13825.0], [82.2, 13825.0], [82.3, 13825.0], [82.4, 13825.0], [82.5, 13826.0], [82.6, 13827.0], [82.7, 13828.0], [82.8, 13828.0], [82.9, 13828.0], [83.0, 13896.0], [83.1, 13906.0], [83.2, 13931.0], [83.3, 13969.0], [83.4, 14012.0], [83.5, 14017.0], [83.6, 14068.0], [83.7, 14078.0], [83.8, 14079.0], [83.9, 14080.0], [84.0, 14080.0], [84.1, 14080.0], [84.2, 14080.0], [84.3, 14080.0], [84.4, 14082.0], [84.5, 14083.0], [84.6, 14109.0], [84.7, 14147.0], [84.8, 14153.0], [84.9, 14192.0], [85.0, 14220.0], [85.1, 14290.0], [85.2, 14323.0], [85.3, 14331.0], [85.4, 14331.0], [85.5, 14331.0], [85.6, 14332.0], [85.7, 14334.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14336.0], [86.6, 14337.0], [86.7, 14339.0], [86.8, 14340.0], [86.9, 14340.0], [87.0, 14354.0], [87.1, 14530.0], [87.2, 14548.0], [87.3, 14592.0], [87.4, 14614.0], [87.5, 14676.0], [87.6, 14758.0], [87.7, 14837.0], [87.8, 14847.0], [87.9, 14848.0], [88.0, 14858.0], [88.1, 14980.0], [88.2, 15100.0], [88.3, 15104.0], [88.4, 15107.0], [88.5, 15359.0], [88.6, 15360.0], [88.7, 15400.0], [88.8, 15546.0], [88.9, 15615.0], [89.0, 15616.0], [89.1, 15616.0], [89.2, 15616.0], [89.3, 15641.0], [89.4, 15660.0], [89.5, 15813.0], [89.6, 15876.0], [89.7, 15876.0], [89.8, 15955.0], [89.9, 16384.0], [90.0, 16384.0], [90.1, 16388.0], [90.2, 16638.0], [90.3, 16796.0], [90.4, 16892.0], [90.5, 16900.0], [90.6, 17152.0], [90.7, 17152.0], [90.8, 17155.0], [90.9, 17156.0], [91.0, 17188.0], [91.1, 17412.0], [91.2, 17607.0], [91.3, 17694.0], [91.4, 17871.0], [91.5, 18038.0], [91.6, 18436.0], [91.7, 18688.0], [91.8, 18688.0], [91.9, 18713.0], [92.0, 18837.0], [92.1, 18914.0], [92.2, 19452.0], [92.3, 20740.0], [92.4, 21248.0], [92.5, 21436.0], [92.6, 23922.0], [92.7, 24860.0], [92.8, 26367.0], [92.9, 26368.0], [93.0, 26368.0], [93.1, 26368.0], [93.2, 26368.0], [93.3, 26368.0], [93.4, 26368.0], [93.5, 26623.0], [93.6, 28928.0], [93.7, 32768.0], [93.8, 36864.0], [93.9, 42197.0], [94.0, 42870.0], [94.1, 43446.0], [94.2, 52479.0], [94.3, 52480.0], [94.4, 53247.0], [94.5, 61167.0], [94.6, 65563.0], [94.7, 65565.0], [94.8, 68159.0], [94.9, 68604.0], [95.0, 69371.0], [95.1, 86784.0], [95.2, 88831.0], [95.3, 90618.0], [95.4, 93185.0], [95.5, 93696.0], [95.6, 97023.0], [95.7, 105471.0], [95.8, 106239.0], [95.9, 106240.0], [96.0, 106496.0], [96.1, 106496.0], [96.2, 106496.0], [96.3, 106496.0], [96.4, 106539.0], [96.5, 106755.0], [96.6, 107263.0], [96.7, 107264.0], [96.8, 110084.0], [96.9, 110596.0], [97.0, 111620.0], [97.1, 111620.0], [97.2, 111620.0], [97.3, 112958.0], [97.4, 113527.0], [97.5, 114461.0], [97.6, 115711.0], [97.7, 116988.0], [97.8, 117755.0], [97.9, 118015.0], [98.0, 121344.0], [98.1, 123135.0], [98.2, 123135.0], [98.3, 123391.0], [98.4, 123392.0], [98.5, 123392.0], [98.6, 126912.0], [98.7, 129787.0], [98.8, 130303.0], [98.9, 131068.0], [99.0, 131068.0], [99.1, 131068.0], [99.2, 131835.0], [99.3, 137472.0], [99.4, 147968.0], [99.5, 160511.0], [99.6, 160511.0], [99.7, 162815.0], [99.8, 163580.0], [99.9, 210432.0], [100.0, 210688.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 3.0], [5.0, 4.0], [5.1, 22.0], [5.2, 22.0], [5.3, 22.0], [5.4, 31.0], [5.5, 32.0], [5.6, 34.0], [5.7, 35.0], [5.8, 37.0], [5.9, 49.0], [6.0, 83.0], [6.1, 228.0], [6.2, 332.0], [6.3, 528.0], [6.4, 793.0], [6.5, 948.0], [6.6, 1115.0], [6.7, 1200.0], [6.8, 1321.0], [6.9, 1367.0], [7.0, 1510.0], [7.1, 1701.0], [7.2, 1902.0], [7.3, 1984.0], [7.4, 2171.0], [7.5, 2287.0], [7.6, 2545.0], [7.7, 2677.0], [7.8, 2801.0], [7.9, 2872.0], [8.0, 3028.0], [8.1, 3321.0], [8.2, 3483.0], [8.3, 4013.0], [8.4, 4100.0], [8.5, 4180.0], [8.6, 4267.0], [8.7, 4346.0], [8.8, 4362.0], [8.9, 4423.0], [9.0, 4445.0], [9.1, 4474.0], [9.2, 4594.0], [9.3, 4945.0], [9.4, 5132.0], [9.5, 5652.0], [9.6, 5781.0], [9.7, 5814.0], [9.8, 5880.0], [9.9, 6038.0], [10.0, 6093.0], [10.1, 6352.0], [10.2, 6489.0], [10.3, 6879.0], [10.4, 7073.0], [10.5, 7083.0], [10.6, 7114.0], [10.7, 7144.0], [10.8, 7164.0], [10.9, 7165.0], [11.0, 7166.0], [11.1, 7167.0], [11.2, 7168.0], [11.3, 7168.0], [11.4, 7168.0], [11.5, 7168.0], [11.6, 7168.0], [11.7, 7168.0], [11.8, 7168.0], [11.9, 7168.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7169.0], [12.8, 7171.0], [12.9, 7171.0], [13.0, 7172.0], [13.1, 7172.0], [13.2, 7172.0], [13.3, 7172.0], [13.4, 7172.0], [13.5, 7174.0], [13.6, 7297.0], [13.7, 7307.0], [13.8, 7310.0], [13.9, 7315.0], [14.0, 7326.0], [14.1, 7413.0], [14.2, 7417.0], [14.3, 7420.0], [14.4, 7420.0], [14.5, 7423.0], [14.6, 7424.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7425.0], [15.8, 7425.0], [15.9, 7427.0], [16.0, 7427.0], [16.1, 7427.0], [16.2, 7428.0], [16.3, 7428.0], [16.4, 7428.0], [16.5, 7428.0], [16.6, 7463.0], [16.7, 7539.0], [16.8, 7596.0], [16.9, 7631.0], [17.0, 7651.0], [17.1, 7675.0], [17.2, 7676.0], [17.3, 7676.0], [17.4, 7676.0], [17.5, 7678.0], [17.6, 7678.0], [17.7, 7679.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7681.0], [18.7, 7682.0], [18.8, 7683.0], [18.9, 7684.0], [19.0, 7687.0], [19.1, 7722.0], [19.2, 7767.0], [19.3, 7842.0], [19.4, 7848.0], [19.5, 7870.0], [19.6, 7919.0], [19.7, 7932.0], [19.8, 7932.0], [19.9, 7933.0], [20.0, 7933.0], [20.1, 7934.0], [20.2, 7935.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7937.0], [21.4, 7939.0], [21.5, 7940.0], [21.6, 7958.0], [21.7, 7974.0], [21.8, 8027.0], [21.9, 8050.0], [22.0, 8133.0], [22.1, 8188.0], [22.2, 8188.0], [22.3, 8188.0], [22.4, 8189.0], [22.5, 8190.0], [22.6, 8191.0], [22.7, 8191.0], [22.8, 8191.0], [22.9, 8191.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8193.0], [23.9, 8196.0], [24.0, 8275.0], [24.1, 8281.0], [24.2, 8340.0], [24.3, 8403.0], [24.4, 8442.0], [24.5, 8444.0], [24.6, 8445.0], [24.7, 8447.0], [24.8, 8448.0], [24.9, 8448.0], [25.0, 8448.0], [25.1, 8451.0], [25.2, 8547.0], [25.3, 8591.0], [25.4, 8669.0], [25.5, 8696.0], [25.6, 8697.0], [25.7, 8700.0], [25.8, 8700.0], [25.9, 8703.0], [26.0, 8703.0], [26.1, 8703.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8704.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8705.0], [27.8, 8705.0], [27.9, 8705.0], [28.0, 8705.0], [28.1, 8708.0], [28.2, 8710.0], [28.3, 8720.0], [28.4, 8741.0], [28.5, 8744.0], [28.6, 8760.0], [28.7, 8769.0], [28.8, 8833.0], [28.9, 8890.0], [29.0, 8910.0], [29.1, 8938.0], [29.2, 8956.0], [29.3, 8956.0], [29.4, 8957.0], [29.5, 8960.0], [29.6, 8960.0], [29.7, 8960.0], [29.8, 8960.0], [29.9, 8960.0], [30.0, 8964.0], [30.1, 8986.0], [30.2, 9002.0], [30.3, 9025.0], [30.4, 9032.0], [30.5, 9037.0], [30.6, 9078.0], [30.7, 9131.0], [30.8, 9170.0], [30.9, 9210.0], [31.0, 9211.0], [31.1, 9212.0], [31.2, 9212.0], [31.3, 9212.0], [31.4, 9212.0], [31.5, 9212.0], [31.6, 9212.0], [31.7, 9212.0], [31.8, 9214.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9216.0], [33.9, 9217.0], [34.0, 9220.0], [34.1, 9220.0], [34.2, 9220.0], [34.3, 9220.0], [34.4, 9220.0], [34.5, 9234.0], [34.6, 9239.0], [34.7, 9338.0], [34.8, 9386.0], [34.9, 9466.0], [35.0, 9468.0], [35.1, 9471.0], [35.2, 9472.0], [35.3, 9472.0], [35.4, 9472.0], [35.5, 9472.0], [35.6, 9472.0], [35.7, 9486.0], [35.8, 9507.0], [35.9, 9617.0], [36.0, 9664.0], [36.1, 9713.0], [36.2, 9723.0], [36.3, 9724.0], [36.4, 9724.0], [36.5, 9726.0], [36.6, 9727.0], [36.7, 9727.0], [36.8, 9727.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9728.0], [37.9, 9728.0], [38.0, 9729.0], [38.1, 9729.0], [38.2, 9729.0], [38.3, 9729.0], [38.4, 9729.0], [38.5, 9732.0], [38.6, 9732.0], [38.7, 9732.0], [38.8, 9732.0], [38.9, 9750.0], [39.0, 9876.0], [39.1, 9921.0], [39.2, 9983.0], [39.3, 9983.0], [39.4, 9984.0], [39.5, 9984.0], [39.6, 9984.0], [39.7, 9984.0], [39.8, 9984.0], [39.9, 9985.0], [40.0, 9986.0], [40.1, 9988.0], [40.2, 9988.0], [40.3, 10054.0], [40.4, 10113.0], [40.5, 10151.0], [40.6, 10169.0], [40.7, 10202.0], [40.8, 10212.0], [40.9, 10224.0], [41.0, 10235.0], [41.1, 10235.0], [41.2, 10236.0], [41.3, 10236.0], [41.4, 10236.0], [41.5, 10237.0], [41.6, 10239.0], [41.7, 10240.0], [41.8, 10240.0], [41.9, 10240.0], [42.0, 10240.0], [42.1, 10240.0], [42.2, 10240.0], [42.3, 10240.0], [42.4, 10240.0], [42.5, 10240.0], [42.6, 10240.0], [42.7, 10241.0], [42.8, 10243.0], [42.9, 10244.0], [43.0, 10244.0], [43.1, 10244.0], [43.2, 10280.0], [43.3, 10295.0], [43.4, 10306.0], [43.5, 10329.0], [43.6, 10353.0], [43.7, 10358.0], [43.8, 10381.0], [43.9, 10400.0], [44.0, 10422.0], [44.1, 10447.0], [44.2, 10489.0], [44.3, 10491.0], [44.4, 10500.0], [44.5, 10527.0], [44.6, 10540.0], [44.7, 10545.0], [44.8, 10570.0], [44.9, 10572.0], [45.0, 10605.0], [45.1, 10625.0], [45.2, 10629.0], [45.3, 10645.0], [45.4, 10674.0], [45.5, 10680.0], [45.6, 10694.0], [45.7, 10707.0], [45.8, 10734.0], [45.9, 10743.0], [46.0, 10748.0], [46.1, 10750.0], [46.2, 10751.0], [46.3, 10751.0], [46.4, 10752.0], [46.5, 10752.0], [46.6, 10752.0], [46.7, 10752.0], [46.8, 10753.0], [46.9, 10755.0], [47.0, 10756.0], [47.1, 10768.0], [47.2, 10820.0], [47.3, 10841.0], [47.4, 10873.0], [47.5, 10893.0], [47.6, 10914.0], [47.7, 10929.0], [47.8, 10943.0], [47.9, 10944.0], [48.0, 10950.0], [48.1, 10965.0], [48.2, 11004.0], [48.3, 11006.0], [48.4, 11008.0], [48.5, 11008.0], [48.6, 11008.0], [48.7, 11008.0], [48.8, 11009.0], [48.9, 11012.0], [49.0, 11017.0], [49.1, 11019.0], [49.2, 11042.0], [49.3, 11049.0], [49.4, 11064.0], [49.5, 11086.0], [49.6, 11095.0], [49.7, 11117.0], [49.8, 11140.0], [49.9, 11144.0], [50.0, 11149.0], [50.1, 11186.0], [50.2, 11202.0], [50.3, 11228.0], [50.4, 11243.0], [50.5, 11253.0], [50.6, 11261.0], [50.7, 11263.0], [50.8, 11263.0], [50.9, 11264.0], [51.0, 11264.0], [51.1, 11264.0], [51.2, 11264.0], [51.3, 11264.0], [51.4, 11265.0], [51.5, 11267.0], [51.6, 11268.0], [51.7, 11268.0], [51.8, 11268.0], [51.9, 11281.0], [52.0, 11319.0], [52.1, 11350.0], [52.2, 11359.0], [52.3, 11380.0], [52.4, 11392.0], [52.5, 11424.0], [52.6, 11464.0], [52.7, 11492.0], [52.8, 11494.0], [52.9, 11501.0], [53.0, 11520.0], [53.1, 11520.0], [53.2, 11520.0], [53.3, 11553.0], [53.4, 11569.0], [53.5, 11608.0], [53.6, 11653.0], [53.7, 11730.0], [53.8, 11745.0], [53.9, 11771.0], [54.0, 11772.0], [54.1, 11772.0], [54.2, 11774.0], [54.3, 11775.0], [54.4, 11776.0], [54.5, 11776.0], [54.6, 11776.0], [54.7, 11776.0], [54.8, 11776.0], [54.9, 11776.0], [55.0, 11776.0], [55.1, 11777.0], [55.2, 11778.0], [55.3, 11783.0], [55.4, 11829.0], [55.5, 11857.0], [55.6, 11869.0], [55.7, 11900.0], [55.8, 11905.0], [55.9, 11930.0], [56.0, 11948.0], [56.1, 11981.0], [56.2, 12032.0], [56.3, 12033.0], [56.4, 12041.0], [56.5, 12056.0], [56.6, 12145.0], [56.7, 12152.0], [56.8, 12169.0], [56.9, 12203.0], [57.0, 12241.0], [57.1, 12283.0], [57.2, 12284.0], [57.3, 12284.0], [57.4, 12287.0], [57.5, 12288.0], [57.6, 12288.0], [57.7, 12288.0], [57.8, 12290.0], [57.9, 12292.0], [58.0, 12322.0], [58.1, 12356.0], [58.2, 12363.0], [58.3, 12419.0], [58.4, 12464.0], [58.5, 12505.0], [58.6, 12541.0], [58.7, 12544.0], [58.8, 12544.0], [58.9, 12570.0], [59.0, 12666.0], [59.1, 12678.0], [59.2, 12708.0], [59.3, 12728.0], [59.4, 12735.0], [59.5, 12768.0], [59.6, 12798.0], [59.7, 12800.0], [59.8, 12800.0], [59.9, 12800.0], [60.0, 12832.0], [60.1, 12874.0], [60.2, 12918.0], [60.3, 12974.0], [60.4, 12987.0], [60.5, 13010.0], [60.6, 13056.0], [60.7, 13056.0], [60.8, 13056.0], [60.9, 13056.0], [61.0, 13056.0], [61.1, 13056.0], [61.2, 13060.0], [61.3, 13060.0], [61.4, 13151.0], [61.5, 13162.0], [61.6, 13166.0], [61.7, 13176.0], [61.8, 13197.0], [61.9, 13199.0], [62.0, 13206.0], [62.1, 13209.0], [62.2, 13216.0], [62.3, 13222.0], [62.4, 13233.0], [62.5, 13234.0], [62.6, 13246.0], [62.7, 13256.0], [62.8, 13260.0], [62.9, 13267.0], [63.0, 13280.0], [63.1, 13287.0], [63.2, 13289.0], [63.3, 13306.0], [63.4, 13307.0], [63.5, 13307.0], [63.6, 13308.0], [63.7, 13308.0], [63.8, 13308.0], [63.9, 13308.0], [64.0, 13308.0], [64.1, 13308.0], [64.2, 13308.0], [64.3, 13308.0], [64.4, 13308.0], [64.5, 13308.0], [64.6, 13308.0], [64.7, 13308.0], [64.8, 13309.0], [64.9, 13309.0], [65.0, 13309.0], [65.1, 13310.0], [65.2, 13310.0], [65.3, 13310.0], [65.4, 13310.0], [65.5, 13310.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13314.0], [73.7, 13314.0], [73.8, 13315.0], [73.9, 13315.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13317.0], [75.7, 13317.0], [75.8, 13317.0], [75.9, 13327.0], [76.0, 13332.0], [76.1, 13336.0], [76.2, 13346.0], [76.3, 13354.0], [76.4, 13355.0], [76.5, 13361.0], [76.6, 13370.0], [76.7, 13375.0], [76.8, 13380.0], [76.9, 13386.0], [77.0, 13404.0], [77.1, 13410.0], [77.2, 13449.0], [77.3, 13486.0], [77.4, 13568.0], [77.5, 13643.0], [77.6, 13643.0], [77.7, 13703.0], [77.8, 13750.0], [77.9, 13774.0], [78.0, 13801.0], [78.1, 13820.0], [78.2, 13820.0], [78.3, 13820.0], [78.4, 13820.0], [78.5, 13820.0], [78.6, 13821.0], [78.7, 13822.0], [78.8, 13823.0], [78.9, 13823.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13825.0], [80.5, 13826.0], [80.6, 13827.0], [80.7, 13828.0], [80.8, 13850.0], [80.9, 13881.0], [81.0, 13994.0], [81.1, 14079.0], [81.2, 14079.0], [81.3, 14079.0], [81.4, 14080.0], [81.5, 14080.0], [81.6, 14080.0], [81.7, 14080.0], [81.8, 14084.0], [81.9, 14084.0], [82.0, 14127.0], [82.1, 14133.0], [82.2, 14166.0], [82.3, 14210.0], [82.4, 14238.0], [82.5, 14307.0], [82.6, 14326.0], [82.7, 14332.0], [82.8, 14335.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14337.0], [83.6, 14339.0], [83.7, 14339.0], [83.8, 14340.0], [83.9, 14344.0], [84.0, 14354.0], [84.1, 14399.0], [84.2, 14402.0], [84.3, 14409.0], [84.4, 14590.0], [84.5, 14592.0], [84.6, 14592.0], [84.7, 14592.0], [84.8, 14631.0], [84.9, 14653.0], [85.0, 14844.0], [85.1, 14848.0], [85.2, 14852.0], [85.3, 14905.0], [85.4, 15104.0], [85.5, 15104.0], [85.6, 15119.0], [85.7, 15223.0], [85.8, 15325.0], [85.9, 15359.0], [86.0, 15360.0], [86.1, 15372.0], [86.2, 15383.0], [86.3, 15419.0], [86.4, 15547.0], [86.5, 15616.0], [86.6, 15665.0], [86.7, 15714.0], [86.8, 15840.0], [86.9, 16128.0], [87.0, 16182.0], [87.1, 16384.0], [87.2, 16384.0], [87.3, 16388.0], [87.4, 16876.0], [87.5, 16900.0], [87.6, 17152.0], [87.7, 17152.0], [87.8, 17153.0], [87.9, 17155.0], [88.0, 17156.0], [88.1, 17157.0], [88.2, 17355.0], [88.3, 17425.0], [88.4, 17664.0], [88.5, 17664.0], [88.6, 17664.0], [88.7, 17921.0], [88.8, 18153.0], [88.9, 18436.0], [89.0, 18684.0], [89.1, 18684.0], [89.2, 18687.0], [89.3, 18688.0], [89.4, 18694.0], [89.5, 18839.0], [89.6, 18992.0], [89.7, 19116.0], [89.8, 21193.0], [89.9, 21248.0], [90.0, 22750.0], [90.1, 23889.0], [90.2, 24063.0], [90.3, 24575.0], [90.4, 24576.0], [90.5, 25032.0], [90.6, 26252.0], [90.7, 26364.0], [90.8, 26367.0], [90.9, 26368.0], [91.0, 26368.0], [91.1, 26368.0], [91.2, 26368.0], [91.3, 26368.0], [91.4, 26368.0], [91.5, 26368.0], [91.6, 26414.0], [91.7, 27394.0], [91.8, 37891.0], [91.9, 39602.0], [92.0, 42415.0], [92.1, 43144.0], [92.2, 43235.0], [92.3, 43545.0], [92.4, 45140.0], [92.5, 54043.0], [92.6, 55475.0], [92.7, 60905.0], [92.8, 62475.0], [92.9, 65569.0], [93.0, 74436.0], [93.1, 76193.0], [93.2, 77906.0], [93.3, 86784.0], [93.4, 87451.0], [93.5, 92592.0], [93.6, 94865.0], [93.7, 105483.0], [93.8, 105721.0], [93.9, 105811.0], [94.0, 105816.0], [94.1, 105906.0], [94.2, 106236.0], [94.3, 106244.0], [94.4, 106435.0], [94.5, 106496.0], [94.6, 106496.0], [94.7, 106498.0], [94.8, 106543.0], [94.9, 106752.0], [95.0, 106866.0], [95.1, 106950.0], [95.2, 106999.0], [95.3, 107098.0], [95.4, 107201.0], [95.5, 107264.0], [95.6, 107339.0], [95.7, 108243.0], [95.8, 109568.0], [95.9, 110084.0], [96.0, 110150.0], [96.1, 110596.0], [96.2, 110596.0], [96.3, 111620.0], [96.4, 111621.0], [96.5, 112116.0], [96.6, 112732.0], [96.7, 112774.0], [96.8, 113460.0], [96.9, 113893.0], [97.0, 115455.0], [97.1, 115710.0], [97.2, 116733.0], [97.3, 117755.0], [97.4, 117961.0], [97.5, 118589.0], [97.6, 120723.0], [97.7, 121344.0], [97.8, 122720.0], [97.9, 123134.0], [98.0, 123136.0], [98.1, 123136.0], [98.2, 123349.0], [98.3, 123392.0], [98.4, 130239.0], [98.5, 131068.0], [98.6, 131836.0], [98.7, 135424.0], [98.8, 137471.0], [98.9, 139661.0], [99.0, 147968.0], [99.1, 152622.0], [99.2, 156416.0], [99.3, 156417.0], [99.4, 160511.0], [99.5, 160512.0], [99.6, 164863.0], [99.7, 180440.0], [99.8, 193968.0], [99.9, 210688.0], [100.0, 211711.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 633.0, "series": [{"data": [[0.0, 263.0], [176800.0, 1.0], [131300.0, 2.0], [66700.0, 4.0], [105900.0, 2.0], [106700.0, 7.0], [125900.0, 1.0], [135400.0, 4.0], [153000.0, 1.0], [180200.0, 2.0], [210600.0, 1.0], [131500.0, 1.0], [38900.0, 1.0], [44500.0, 1.0], [44900.0, 1.0], [46500.0, 1.0], [47300.0, 1.0], [52900.0, 1.0], [53700.0, 2.0], [83400.0, 1.0], [105800.0, 1.0], [113800.0, 1.0], [115400.0, 2.0], [121800.0, 1.0], [156400.0, 5.0], [162800.0, 2.0], [1100.0, 2.0], [1200.0, 18.0], [1300.0, 43.0], [1400.0, 28.0], [1500.0, 12.0], [1600.0, 13.0], [1700.0, 15.0], [1800.0, 13.0], [1900.0, 7.0], [2000.0, 15.0], [2100.0, 11.0], [2200.0, 11.0], [2300.0, 8.0], [2400.0, 12.0], [2500.0, 9.0], [160500.0, 3.0], [2600.0, 17.0], [2800.0, 22.0], [2700.0, 33.0], [2900.0, 12.0], [3000.0, 17.0], [3100.0, 18.0], [3300.0, 9.0], [3200.0, 5.0], [3400.0, 14.0], [3500.0, 20.0], [3700.0, 11.0], [3600.0, 12.0], [3800.0, 21.0], [3900.0, 18.0], [4000.0, 17.0], [4300.0, 9.0], [4100.0, 17.0], [4200.0, 13.0], [4500.0, 9.0], [4400.0, 11.0], [4600.0, 8.0], [69700.0, 1.0], [4700.0, 7.0], [4800.0, 6.0], [5000.0, 4.0], [4900.0, 4.0], [5100.0, 8.0], [5300.0, 12.0], [5200.0, 3.0], [5400.0, 12.0], [5500.0, 36.0], [5600.0, 34.0], [5700.0, 37.0], [5800.0, 20.0], [5900.0, 27.0], [6100.0, 10.0], [6000.0, 11.0], [6200.0, 9.0], [6300.0, 8.0], [6600.0, 8.0], [6400.0, 14.0], [6500.0, 6.0], [105700.0, 2.0], [6700.0, 7.0], [6800.0, 8.0], [6900.0, 1.0], [110500.0, 5.0], [7000.0, 18.0], [7100.0, 116.0], [114500.0, 2.0], [7200.0, 19.0], [7400.0, 124.0], [7300.0, 14.0], [117700.0, 2.0], [116900.0, 1.0], [115300.0, 1.0], [7500.0, 27.0], [7600.0, 78.0], [7900.0, 105.0], [7800.0, 14.0], [7700.0, 17.0], [123300.0, 2.0], [8000.0, 10.0], [8100.0, 94.0], [129700.0, 1.0], [8200.0, 10.0], [8300.0, 4.0], [8600.0, 10.0], [8400.0, 21.0], [8500.0, 3.0], [8700.0, 113.0], [137400.0, 1.0], [8800.0, 27.0], [8900.0, 49.0], [9000.0, 21.0], [9200.0, 114.0], [9100.0, 14.0], [9500.0, 27.0], [9600.0, 15.0], [9400.0, 57.0], [9300.0, 16.0], [9700.0, 82.0], [10000.0, 10.0], [9800.0, 8.0], [9900.0, 48.0], [10200.0, 98.0], [10100.0, 14.0], [10300.0, 31.0], [10400.0, 41.0], [10500.0, 15.0], [10600.0, 13.0], [10700.0, 62.0], [11200.0, 69.0], [11100.0, 33.0], [10800.0, 17.0], [10900.0, 19.0], [11000.0, 56.0], [11300.0, 34.0], [11600.0, 152.0], [11500.0, 134.0], [11400.0, 54.0], [11700.0, 216.0], [11800.0, 227.0], [12000.0, 278.0], [12100.0, 304.0], [12200.0, 306.0], [11900.0, 220.0], [12300.0, 297.0], [12400.0, 292.0], [12600.0, 259.0], [12500.0, 278.0], [12700.0, 260.0], [12900.0, 232.0], [12800.0, 268.0], [13100.0, 156.0], [13200.0, 165.0], [13000.0, 184.0], [13300.0, 633.0], [13600.0, 71.0], [13500.0, 138.0], [13400.0, 140.0], [13800.0, 173.0], [13700.0, 80.0], [13900.0, 33.0], [14100.0, 19.0], [14200.0, 9.0], [14000.0, 35.0], [14300.0, 47.0], [14400.0, 8.0], [14500.0, 20.0], [14700.0, 4.0], [14800.0, 24.0], [15000.0, 6.0], [15100.0, 10.0], [15300.0, 19.0], [15200.0, 4.0], [14900.0, 6.0], [15400.0, 5.0], [15500.0, 3.0], [15600.0, 13.0], [15700.0, 1.0], [15800.0, 10.0], [16000.0, 6.0], [16300.0, 12.0], [15900.0, 3.0], [16100.0, 6.0], [16200.0, 1.0], [17200.0, 1.0], [17400.0, 3.0], [16600.0, 3.0], [16400.0, 2.0], [16800.0, 2.0], [17000.0, 2.0], [18400.0, 3.0], [17600.0, 4.0], [18000.0, 1.0], [18600.0, 6.0], [19400.0, 2.0], [19000.0, 1.0], [19200.0, 1.0], [19800.0, 1.0], [20000.0, 1.0], [20200.0, 4.0], [20800.0, 1.0], [21000.0, 1.0], [22200.0, 1.0], [24000.0, 3.0], [23800.0, 1.0], [24800.0, 1.0], [25400.0, 1.0], [26400.0, 3.0], [26600.0, 1.0], [26200.0, 1.0], [25600.0, 1.0], [28400.0, 1.0], [28600.0, 2.0], [29400.0, 3.0], [147900.0, 1.0], [43200.0, 1.0], [43600.0, 2.0], [44800.0, 2.0], [44000.0, 2.0], [44400.0, 2.0], [45200.0, 1.0], [46800.0, 1.0], [47600.0, 1.0], [53200.0, 1.0], [52800.0, 1.0], [54800.0, 1.0], [54000.0, 1.0], [55600.0, 1.0], [62400.0, 2.0], [69600.0, 1.0], [70400.0, 1.0], [106400.0, 18.0], [107200.0, 4.0], [115200.0, 1.0], [126400.0, 1.0], [134400.0, 1.0], [148100.0, 1.0], [77500.0, 1.0], [80700.0, 1.0], [107100.0, 1.0], [109500.0, 2.0], [111100.0, 5.0], [114300.0, 2.0], [116700.0, 1.0], [123100.0, 9.0], [130300.0, 1.0], [34300.0, 2.0], [38300.0, 1.0], [43900.0, 1.0], [44300.0, 4.0], [55500.0, 1.0], [55900.0, 1.0], [67000.0, 1.0], [71800.0, 2.0], [94200.0, 1.0], [92600.0, 1.0], [106200.0, 2.0], [114200.0, 1.0], [124600.0, 1.0], [131000.0, 4.0], [142800.0, 1.0], [155600.0, 1.0], [210900.0, 2.0], [70100.0, 1.0], [75700.0, 2.0], [115700.0, 2.0], [114900.0, 2.0], [121300.0, 5.0], [131800.0, 2.0], [138200.0, 3.0], [155800.0, 1.0], [16900.0, 9.0], [17300.0, 2.0], [16700.0, 2.0], [17100.0, 11.0], [18100.0, 2.0], [18300.0, 1.0], [17900.0, 6.0], [18700.0, 2.0], [19300.0, 1.0], [18900.0, 2.0], [19700.0, 2.0], [19500.0, 1.0], [19900.0, 1.0], [20100.0, 2.0], [20300.0, 3.0], [21300.0, 2.0], [20700.0, 1.0], [20500.0, 1.0], [21900.0, 2.0], [21700.0, 2.0], [22900.0, 1.0], [24500.0, 5.0], [23900.0, 1.0], [24100.0, 1.0], [25300.0, 1.0], [25500.0, 1.0], [26300.0, 14.0], [25700.0, 1.0], [28300.0, 1.0], [31700.0, 1.0], [31900.0, 1.0], [44200.0, 1.0], [45400.0, 2.0], [46600.0, 2.0], [55000.0, 1.0], [56200.0, 2.0], [66800.0, 1.0], [70000.0, 1.0], [80400.0, 1.0], [94000.0, 1.0], [106000.0, 1.0], [106800.0, 1.0], [111600.0, 4.0], [110800.0, 2.0], [118000.0, 2.0], [114800.0, 1.0], [115600.0, 1.0], [122800.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 108.0], [210400.0, 1.0], [86700.0, 1.0], [93100.0, 1.0], [106700.0, 2.0], [125900.0, 1.0], [180200.0, 1.0], [210600.0, 1.0], [100.0, 1.0], [163500.0, 1.0], [42100.0, 1.0], [54100.0, 1.0], [90600.0, 1.0], [97000.0, 1.0], [600.0, 4.0], [156400.0, 1.0], [162800.0, 2.0], [700.0, 2.0], [900.0, 2.0], [1300.0, 6.0], [1400.0, 1.0], [1800.0, 2.0], [2000.0, 3.0], [2200.0, 3.0], [2300.0, 2.0], [2400.0, 4.0], [160500.0, 3.0], [2600.0, 1.0], [2700.0, 3.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 3.0], [3500.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [68100.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [5100.0, 3.0], [4900.0, 3.0], [5000.0, 2.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [6600.0, 7.0], [6400.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [110500.0, 3.0], [106500.0, 1.0], [7100.0, 56.0], [7000.0, 1.0], [112900.0, 1.0], [7300.0, 1.0], [7200.0, 2.0], [7400.0, 49.0], [117700.0, 3.0], [116900.0, 1.0], [7500.0, 1.0], [7600.0, 35.0], [7900.0, 45.0], [7800.0, 2.0], [123300.0, 4.0], [8100.0, 33.0], [129700.0, 2.0], [8400.0, 15.0], [8700.0, 57.0], [8600.0, 6.0], [137400.0, 3.0], [8800.0, 4.0], [9000.0, 2.0], [9200.0, 48.0], [8900.0, 19.0], [9700.0, 35.0], [9400.0, 12.0], [9600.0, 1.0], [10000.0, 2.0], [9900.0, 28.0], [10200.0, 46.0], [9800.0, 1.0], [10100.0, 2.0], [10400.0, 14.0], [10300.0, 1.0], [10600.0, 4.0], [10700.0, 27.0], [10500.0, 4.0], [10900.0, 11.0], [11000.0, 30.0], [11200.0, 30.0], [10800.0, 3.0], [11100.0, 10.0], [11700.0, 35.0], [11300.0, 11.0], [11400.0, 12.0], [11600.0, 16.0], [11500.0, 12.0], [11900.0, 13.0], [12000.0, 17.0], [12100.0, 9.0], [11800.0, 9.0], [12200.0, 14.0], [12700.0, 13.0], [12600.0, 2.0], [12400.0, 10.0], [12500.0, 19.0], [12300.0, 5.0], [12900.0, 3.0], [13300.0, 286.0], [13200.0, 10.0], [13000.0, 10.0], [13100.0, 5.0], [12800.0, 11.0], [13700.0, 5.0], [13400.0, 5.0], [13800.0, 81.0], [13600.0, 7.0], [13500.0, 10.0], [14000.0, 21.0], [13900.0, 6.0], [14300.0, 33.0], [14100.0, 6.0], [14200.0, 4.0], [14700.0, 2.0], [14500.0, 5.0], [14800.0, 7.0], [14600.0, 4.0], [15000.0, 1.0], [15100.0, 5.0], [14900.0, 1.0], [15300.0, 4.0], [15500.0, 1.0], [15600.0, 10.0], [15800.0, 4.0], [15700.0, 1.0], [15400.0, 2.0], [16100.0, 1.0], [15900.0, 2.0], [16300.0, 4.0], [17400.0, 2.0], [16600.0, 3.0], [16800.0, 2.0], [17600.0, 3.0], [18400.0, 1.0], [17800.0, 1.0], [18200.0, 1.0], [18000.0, 1.0], [18600.0, 4.0], [19400.0, 1.0], [18800.0, 2.0], [20400.0, 1.0], [21400.0, 1.0], [21200.0, 2.0], [24800.0, 1.0], [26600.0, 1.0], [36800.0, 2.0], [147900.0, 1.0], [42800.0, 1.0], [44000.0, 1.0], [53200.0, 2.0], [52400.0, 2.0], [88800.0, 2.0], [93600.0, 2.0], [106400.0, 8.0], [107200.0, 3.0], [114400.0, 1.0], [112700.0, 1.0], [113500.0, 1.0], [114300.0, 1.0], [116700.0, 1.0], [123100.0, 4.0], [130300.0, 2.0], [61100.0, 1.0], [65500.0, 3.0], [68600.0, 3.0], [87800.0, 1.0], [92600.0, 1.0], [105400.0, 2.0], [106200.0, 3.0], [107000.0, 1.0], [131000.0, 5.0], [69300.0, 1.0], [66100.0, 1.0], [115700.0, 1.0], [121300.0, 2.0], [126900.0, 1.0], [131800.0, 1.0], [16700.0, 1.0], [17100.0, 9.0], [16900.0, 1.0], [17900.0, 1.0], [17500.0, 1.0], [18700.0, 2.0], [18900.0, 1.0], [20700.0, 2.0], [23900.0, 2.0], [26300.0, 13.0], [27300.0, 1.0], [28900.0, 2.0], [32700.0, 1.0], [42200.0, 1.0], [43000.0, 1.0], [43400.0, 1.0], [110000.0, 1.0], [111600.0, 4.0], [113200.0, 1.0], [118000.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 111.0], [210400.0, 1.0], [155300.0, 1.0], [77900.0, 1.0], [83500.0, 1.0], [86700.0, 1.0], [105900.0, 1.0], [106700.0, 2.0], [117900.0, 1.0], [122700.0, 1.0], [135400.0, 1.0], [210600.0, 1.0], [131500.0, 1.0], [43300.0, 1.0], [44100.0, 1.0], [193900.0, 1.0], [200.0, 2.0], [54900.0, 1.0], [60900.0, 1.0], [300.0, 1.0], [77000.0, 1.0], [87400.0, 1.0], [400.0, 1.0], [105800.0, 3.0], [108200.0, 1.0], [107400.0, 1.0], [113800.0, 1.0], [115400.0, 2.0], [500.0, 2.0], [156400.0, 3.0], [162800.0, 1.0], [700.0, 1.0], [180400.0, 1.0], [800.0, 1.0], [900.0, 1.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 2.0], [1700.0, 2.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 1.0], [147700.0, 1.0], [2500.0, 2.0], [160500.0, 3.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [190900.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [211700.0, 1.0], [3400.0, 2.0], [3900.0, 1.0], [4000.0, 2.0], [4100.0, 3.0], [4300.0, 4.0], [4200.0, 1.0], [4400.0, 5.0], [4500.0, 2.0], [4700.0, 1.0], [76100.0, 1.0], [4900.0, 2.0], [5100.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 2.0], [5800.0, 3.0], [6000.0, 4.0], [6100.0, 1.0], [6300.0, 2.0], [6500.0, 1.0], [6400.0, 1.0], [105700.0, 2.0], [6800.0, 1.0], [106500.0, 2.0], [107300.0, 1.0], [110500.0, 3.0], [7000.0, 3.0], [7100.0, 55.0], [112100.0, 1.0], [7400.0, 48.0], [7200.0, 2.0], [7300.0, 7.0], [118500.0, 1.0], [117700.0, 2.0], [116900.0, 1.0], [7600.0, 40.0], [7500.0, 4.0], [7900.0, 41.0], [7800.0, 5.0], [7700.0, 5.0], [123300.0, 4.0], [8100.0, 37.0], [8000.0, 3.0], [8200.0, 4.0], [8400.0, 17.0], [8300.0, 1.0], [8700.0, 57.0], [8600.0, 6.0], [8500.0, 3.0], [137400.0, 1.0], [8900.0, 22.0], [9000.0, 8.0], [8800.0, 4.0], [9200.0, 69.0], [9100.0, 5.0], [9300.0, 3.0], [9400.0, 17.0], [9600.0, 4.0], [9500.0, 2.0], [9700.0, 53.0], [10000.0, 1.0], [9800.0, 2.0], [10100.0, 6.0], [10200.0, 49.0], [9900.0, 22.0], [10500.0, 11.0], [10300.0, 10.0], [10400.0, 9.0], [10600.0, 12.0], [10700.0, 29.0], [11000.0, 27.0], [10800.0, 6.0], [10900.0, 12.0], [11100.0, 10.0], [11200.0, 33.0], [11700.0, 32.0], [11500.0, 11.0], [11300.0, 8.0], [11400.0, 8.0], [11600.0, 3.0], [12100.0, 7.0], [12200.0, 20.0], [12000.0, 7.0], [11900.0, 8.0], [11800.0, 6.0], [12600.0, 5.0], [12500.0, 8.0], [12400.0, 4.0], [12300.0, 5.0], [12700.0, 9.0], [13300.0, 251.0], [13200.0, 25.0], [13100.0, 11.0], [12800.0, 8.0], [12900.0, 6.0], [13000.0, 16.0], [13400.0, 8.0], [13700.0, 6.0], [13800.0, 54.0], [13600.0, 3.0], [13500.0, 2.0], [14300.0, 31.0], [14200.0, 3.0], [14100.0, 7.0], [13900.0, 2.0], [14000.0, 16.0], [14800.0, 6.0], [14400.0, 3.0], [14700.0, 1.0], [14500.0, 9.0], [14600.0, 2.0], [15100.0, 5.0], [15300.0, 8.0], [15200.0, 2.0], [14900.0, 2.0], [15800.0, 2.0], [15500.0, 1.0], [15400.0, 3.0], [15600.0, 4.0], [15700.0, 1.0], [16000.0, 1.0], [16100.0, 3.0], [16200.0, 1.0], [16300.0, 4.0], [16600.0, 1.0], [17400.0, 3.0], [17200.0, 1.0], [16800.0, 2.0], [18400.0, 3.0], [17600.0, 5.0], [18600.0, 8.0], [18800.0, 2.0], [20200.0, 1.0], [21200.0, 2.0], [22600.0, 1.0], [23800.0, 2.0], [24000.0, 2.0], [25000.0, 1.0], [26200.0, 3.0], [26400.0, 1.0], [28200.0, 1.0], [147900.0, 2.0], [39600.0, 1.0], [42400.0, 1.0], [43200.0, 1.0], [54000.0, 1.0], [62400.0, 1.0], [70400.0, 1.0], [74400.0, 1.0], [88800.0, 1.0], [93600.0, 1.0], [106400.0, 7.0], [107200.0, 4.0], [112800.0, 1.0], [164800.0, 2.0], [105500.0, 1.0], [107100.0, 1.0], [109500.0, 2.0], [112700.0, 4.0], [116700.0, 2.0], [120700.0, 1.0], [121500.0, 1.0], [123100.0, 5.0], [37900.0, 1.0], [42300.0, 1.0], [43100.0, 1.0], [43500.0, 1.0], [45100.0, 1.0], [53900.0, 1.0], [64700.0, 1.0], [65500.0, 1.0], [101400.0, 1.0], [106200.0, 4.0], [105400.0, 1.0], [107000.0, 2.0], [110200.0, 1.0], [111800.0, 1.0], [113400.0, 2.0], [130200.0, 1.0], [131000.0, 2.0], [139600.0, 1.0], [75700.0, 1.0], [92500.0, 1.0], [106100.0, 1.0], [106900.0, 3.0], [110100.0, 1.0], [115700.0, 1.0], [121300.0, 2.0], [131800.0, 2.0], [138200.0, 1.0], [152600.0, 1.0], [17300.0, 1.0], [16900.0, 1.0], [17100.0, 11.0], [18100.0, 1.0], [17900.0, 2.0], [18700.0, 1.0], [18900.0, 1.0], [19100.0, 1.0], [21100.0, 1.0], [22700.0, 1.0], [24300.0, 1.0], [24500.0, 2.0], [24700.0, 1.0], [26300.0, 16.0], [26700.0, 1.0], [27300.0, 1.0], [37800.0, 1.0], [43000.0, 1.0], [55800.0, 1.0], [55400.0, 1.0], [94800.0, 1.0], [110000.0, 2.0], [106800.0, 1.0], [111600.0, 3.0], [118000.0, 1.0], [122800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7019.0, "series": [{"data": [[1.0, 119.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5477.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7019.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.722222222222222, "minX": 1.53945468E12, "maxY": 498.451856148492, "series": [{"data": [[1.53945468E12, 4.722222222222222], [1.53945516E12, 457.48914956011737], [1.53945486E12, 156.4741980474198], [1.53945534E12, 152.4602649006622], [1.5394548E12, 96.5062761506276], [1.53945528E12, 488.7181168057212], [1.53945498E12, 281.43608340888534], [1.53945492E12, 216.9845070422533], [1.5394551E12, 397.9477374123646], [1.53945504E12, 337.9663120567374], [1.53945474E12, 38.202279202279236], [1.53945522E12, 498.451856148492]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945534E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 210560.0, "series": [{"data": [[2.0, 138237.0], [4.0, 92597.0], [5.0, 1344.6666666666667], [7.0, 1314.25], [8.0, 1252.0], [9.0, 31079.14285714286], [10.0, 1293.8333333333335], [11.0, 1289.6666666666665], [12.0, 61212.42857142857], [13.0, 7861.272727272727], [14.0, 9162.222222222223], [15.0, 1351.25], [16.0, 1541.5833333333333], [17.0, 1431.0], [18.0, 21316.272727272728], [19.0, 6851.0], [20.0, 1475.0], [21.0, 1658.6666666666667], [22.0, 1774.0], [23.0, 1931.5454545454545], [24.0, 2016.5454545454547], [25.0, 1851.25], [26.0, 2086.083333333333], [27.0, 2253.5454545454545], [28.0, 2238.5], [29.0, 2380.3636363636365], [30.0, 14160.111111111111], [31.0, 2547.1], [32.0, 2647.7000000000003], [33.0, 12157.545454545454], [34.0, 12097.636363636364], [35.0, 12199.090909090908], [36.0, 2806.0666666666666], [37.0, 2749.375], [38.0, 2634.5], [39.0, 2937.153846153846], [40.0, 12428.818181818182], [41.0, 41857.93750000001], [42.0, 10541.142857142857], [43.0, 9705.0], [44.0, 11223.5], [45.0, 3690.5], [46.0, 3807.8571428571427], [47.0, 3911.75], [48.0, 8354.357142857143], [49.0, 16265.4], [50.0, 7717.1875], [51.0, 8706.384615384615], [52.0, 3883.8181818181815], [53.0, 3849.0909090909095], [54.0, 4020.0909090909095], [55.0, 4009.583333333333], [56.0, 4192.5], [57.0, 4190.444444444444], [58.0, 4356.428571428572], [59.0, 4411.666666666667], [60.0, 33349.0], [61.0, 8082.7692307692305], [62.0, 9351.09090909091], [63.0, 20113.5], [64.0, 5332.222222222223], [65.0, 5442.0], [66.0, 5630.1], [67.0, 32497.692307692312], [68.0, 10006.7], [69.0, 9781.599999999999], [70.0, 8959.692307692309], [71.0, 9498.818181818182], [72.0, 9399.0], [73.0, 9921.416666666666], [74.0, 8485.538461538461], [75.0, 10747.400000000001], [76.0, 8512.42857142857], [77.0, 8950.166666666668], [78.0, 10218.272727272728], [79.0, 9065.916666666668], [80.0, 9109.333333333334], [81.0, 10076.166666666666], [82.0, 9636.818181818184], [83.0, 9166.692307692309], [84.0, 10116.800000000001], [85.0, 6358.153846153847], [86.0, 10272.8], [87.0, 10466.3], [88.0, 6759.099999999999], [89.0, 10378.90909090909], [90.0, 7044.583333333334], [91.0, 10254.5], [92.0, 10414.166666666668], [93.0, 10835.90909090909], [94.0, 10305.692307692309], [95.0, 11177.5], [96.0, 9529.357142857143], [97.0, 10892.818181818182], [98.0, 7545.0], [99.0, 10767.909090909092], [100.0, 7601.181818181818], [101.0, 11244.800000000001], [102.0, 7773.1], [103.0, 7877.363636363637], [104.0, 21623.25], [105.0, 8447.4], [106.0, 20505.11111111111], [107.0, 8839.272727272728], [108.0, 22448.125], [109.0, 19885.5], [110.0, 18333.75], [111.0, 9696.625], [112.0, 9712.81818181818], [113.0, 13974.9], [114.0, 17703.615384615387], [115.0, 18248.5], [116.0, 9272.833333333332], [117.0, 17778.916666666668], [118.0, 19603.6], [119.0, 17768.5], [120.0, 8940.25], [121.0, 9118.142857142857], [122.0, 9411.857142857141], [123.0, 21235.11111111111], [124.0, 11097.81818181818], [125.0, 10184.0], [126.0, 10296.5], [127.0, 10427.181818181818], [128.0, 19299.166666666668], [129.0, 22191.555555555555], [130.0, 11893.076923076924], [131.0, 11878.90909090909], [132.0, 10907.461538461539], [133.0, 12150.6], [134.0, 11485.466666666667], [135.0, 10384.999999999998], [136.0, 11595.083333333334], [137.0, 11485.230769230768], [138.0, 10189.0], [139.0, 10253.083333333332], [140.0, 11576.583333333332], [141.0, 10389.375], [142.0, 11652.909090909092], [143.0, 10848.636363636364], [144.0, 12101.599999999999], [145.0, 11104.5], [146.0, 11193.1], [147.0, 10470.0], [148.0, 11523.444444444443], [149.0, 11746.0], [150.0, 12155.0], [151.0, 11745.363636363636], [152.0, 12140.916666666666], [153.0, 12134.23076923077], [154.0, 11702.0], [155.0, 12152.166666666666], [156.0, 11656.714285714284], [157.0, 12577.09090909091], [158.0, 14790.75], [159.0, 15123.642857142857], [160.0, 11995.4], [161.0, 11924.23076923077], [162.0, 12108.5], [163.0, 11877.75], [164.0, 12727.85714285714], [165.0, 12002.5], [166.0, 12882.642857142859], [167.0, 13125.166666666664], [168.0, 12201.57142857143], [169.0, 12409.384615384615], [170.0, 13248.090909090908], [171.0, 13599.699999999999], [172.0, 12705.300000000001], [173.0, 13281.0], [174.0, 13613.9], [175.0, 13891.249999999998], [176.0, 12885.166666666668], [177.0, 11653.090909090908], [178.0, 12751.333333333332], [179.0, 12836.909090909092], [180.0, 13059.75], [181.0, 12956.000000000002], [182.0, 14023.0], [183.0, 13085.333333333334], [184.0, 13925.555555555555], [185.0, 11791.636363636364], [186.0, 13038.285714285714], [187.0, 13607.1], [188.0, 13616.545454545454], [189.0, 13099.066666666668], [190.0, 13583.818181818184], [191.0, 12731.166666666666], [192.0, 13255.714285714286], [193.0, 12836.0], [194.0, 12640.230769230771], [195.0, 12567.384615384615], [196.0, 12393.818181818182], [197.0, 14803.0], [198.0, 12125.692307692309], [199.0, 11971.083333333332], [200.0, 11893.222222222223], [201.0, 12967.0], [202.0, 12254.615384615385], [203.0, 12235.666666666668], [204.0, 12065.454545454544], [205.0, 12143.0], [206.0, 12332.833333333332], [207.0, 12461.7], [208.0, 13111.166666666666], [209.0, 12762.8], [210.0, 13455.818181818184], [211.0, 13262.099999999999], [212.0, 13912.0], [213.0, 13500.727272727274], [214.0, 13718.357142857143], [215.0, 14040.249999999998], [216.0, 13525.25], [217.0, 13499.7], [218.0, 13800.357142857141], [219.0, 13089.46153846154], [220.0, 16446.818181818184], [221.0, 12756.466666666665], [222.0, 12853.199999999999], [223.0, 12474.923076923076], [224.0, 12331.727272727272], [225.0, 12790.923076923076], [226.0, 12082.833333333334], [227.0, 12898.615384615383], [228.0, 12222.846153846152], [229.0, 12193.0], [230.0, 11075.999999999998], [231.0, 11508.714285714286], [232.0, 12359.9], [233.0, 12466.999999999998], [234.0, 12609.444444444445], [235.0, 12796.181818181818], [236.0, 12899.4], [237.0, 13194.125], [238.0, 13334.0], [239.0, 23796.266666666666], [240.0, 14341.181818181818], [241.0, 13615.846153846154], [242.0, 17853.769230769234], [243.0, 13711.1], [244.0, 13968.307692307693], [245.0, 13749.444444444445], [246.0, 13663.923076923076], [247.0, 13548.272727272728], [248.0, 13600.363636363636], [249.0, 13516.875], [250.0, 13195.785714285714], [251.0, 21571.545454545456], [252.0, 13061.714285714286], [253.0, 15563.866666666667], [254.0, 12863.8], [255.0, 17499.1], [257.0, 13741.636363636364], [256.0, 13597.23076923077], [258.0, 13601.363636363638], [259.0, 20051.86666666667], [260.0, 13686.90909090909], [261.0, 19085.363636363636], [262.0, 13484.0], [263.0, 13433.888888888889], [264.0, 13451.818181818182], [270.0, 57685.875], [271.0, 12808.1875], [268.0, 40551.75], [269.0, 12134.800000000001], [265.0, 13698.8125], [266.0, 14870.090909090908], [267.0, 12668.357142857141], [273.0, 12859.583333333334], [272.0, 10864.8125], [274.0, 16213.111111111115], [275.0, 12365.666666666666], [276.0, 14672.61111111111], [277.0, 12447.5], [278.0, 11551.857142857143], [279.0, 11883.25], [280.0, 14339.5], [286.0, 20348.190476190477], [287.0, 11237.722222222223], [284.0, 30219.444444444438], [285.0, 12877.571428571428], [281.0, 13978.76923076923], [282.0, 12794.916666666668], [283.0, 14713.076923076922], [289.0, 10912.444444444443], [288.0, 12130.0], [290.0, 19691.42105263158], [291.0, 11667.916666666664], [292.0, 14691.733333333332], [293.0, 12045.09090909091], [294.0, 10843.55], [295.0, 12101.437500000002], [296.0, 17877.636363636364], [302.0, 13974.095238095239], [303.0, 12552.416666666666], [300.0, 18622.846153846152], [301.0, 10782.5625], [297.0, 11258.25], [298.0, 12547.777777777777], [299.0, 11698.04761904762], [305.0, 12280.550000000001], [304.0, 13503.875], [306.0, 11842.588235294117], [307.0, 12001.312499999998], [308.0, 10980.444444444443], [309.0, 10642.181818181818], [310.0, 10993.000000000002], [311.0, 11476.285714285714], [312.0, 8757.818181818182], [318.0, 11080.500000000002], [319.0, 15785.45454545454], [316.0, 11181.333333333334], [317.0, 11311.000000000002], [313.0, 10975.555555555557], [314.0, 11736.181818181818], [315.0, 11833.65], [321.0, 16437.5], [320.0, 11079.2], [322.0, 13588.090909090908], [323.0, 12459.266666666666], [324.0, 10944.833333333334], [325.0, 16230.360000000004], [326.0, 12468.055555555555], [327.0, 11786.666666666666], [328.0, 11294.055555555553], [334.0, 10319.692307692307], [335.0, 10555.250000000002], [332.0, 11898.692307692309], [333.0, 12942.857142857143], [329.0, 11777.48], [330.0, 12589.357142857143], [331.0, 12233.0], [337.0, 20331.166666666668], [336.0, 12065.421052631578], [338.0, 11965.812499999998], [339.0, 10462.052631578948], [340.0, 13183.764705882353], [341.0, 12755.750000000002], [342.0, 12560.399999999998], [343.0, 11133.863636363638], [344.0, 12223.285714285714], [350.0, 10279.2], [351.0, 10653.909090909092], [348.0, 11010.349999999999], [349.0, 10203.29166666667], [345.0, 12001.999999999998], [346.0, 11157.241379310344], [347.0, 9702.739130434782], [353.0, 11189.277777777777], [352.0, 19162.0], [354.0, 8854.86956521739], [355.0, 11681.874999999998], [356.0, 11101.78947368421], [357.0, 12346.9], [358.0, 10959.0], [359.0, 12240.733333333335], [360.0, 13728.363636363636], [366.0, 12206.350000000002], [367.0, 10942.119999999999], [364.0, 12170.600000000002], [365.0, 12890.037037037036], [361.0, 12229.611111111111], [362.0, 11011.0], [363.0, 12296.77777777778], [369.0, 11265.941176470587], [368.0, 12055.5], [370.0, 11407.357142857143], [371.0, 11292.846153846154], [372.0, 10677.90909090909], [373.0, 9907.320000000002], [374.0, 10477.125], [375.0, 11509.249999999998], [376.0, 12773.806451612902], [382.0, 12159.833333333332], [383.0, 12704.88888888889], [380.0, 10623.833333333332], [381.0, 12370.8], [377.0, 10751.333333333334], [378.0, 12006.421052631578], [379.0, 13123.944444444445], [385.0, 13941.866666666667], [384.0, 12726.800000000001], [386.0, 12505.27272727273], [387.0, 12246.5625], [388.0, 10147.764705882355], [389.0, 11729.535714285714], [390.0, 23053.846153846152], [391.0, 12931.666666666668], [392.0, 12119.812499999998], [398.0, 11092.571428571428], [399.0, 13696.0], [396.0, 11971.928571428572], [397.0, 13700.6875], [393.0, 13065.333333333334], [394.0, 12876.266666666666], [395.0, 11290.210526315792], [401.0, 13816.6], [400.0, 13508.2], [402.0, 12496.586206896553], [403.0, 13523.727272727274], [404.0, 13002.04761904762], [405.0, 10108.636363636364], [406.0, 11980.160000000002], [407.0, 13379.250000000002], [408.0, 13240.125], [414.0, 11156.478260869566], [415.0, 13033.681818181822], [412.0, 10660.541666666666], [413.0, 11307.052631578948], [409.0, 11601.333333333332], [410.0, 12482.785714285714], [411.0, 10773.95652173913], [417.0, 13649.8], [416.0, 11843.642857142857], [418.0, 12434.857142857143], [419.0, 12380.785714285714], [420.0, 11811.0], [421.0, 17069.222222222223], [422.0, 10015.916666666666], [423.0, 9383.96], [424.0, 11970.961538461539], [430.0, 9575.322580645161], [431.0, 10034.079999999996], [428.0, 11655.05], [429.0, 11475.666666666666], [425.0, 12013.5], [426.0, 12104.421052631578], [427.0, 12183.333333333332], [433.0, 9665.159999999998], [432.0, 10482.666666666666], [434.0, 10321.545454545454], [435.0, 11451.1], [436.0, 11272.875], [437.0, 11733.636363636366], [438.0, 11096.230769230773], [439.0, 11398.782608695652], [440.0, 17712.26923076923], [446.0, 11336.736842105263], [447.0, 13266.799999999997], [444.0, 11823.5625], [445.0, 12462.428571428572], [441.0, 11830.375], [442.0, 21229.263157894737], [443.0, 11944.000000000002], [449.0, 12784.312500000002], [448.0, 19792.399999999998], [450.0, 12692.727272727272], [451.0, 11503.085714285713], [452.0, 15124.939393939394], [453.0, 11461.777777777777], [454.0, 12949.3125], [455.0, 12251.555555555557], [456.0, 10572.117647058823], [462.0, 28324.21428571428], [463.0, 10785.923076923078], [460.0, 15104.88888888889], [461.0, 10129.684210526315], [457.0, 10097.0], [458.0, 24163.333333333336], [459.0, 11795.0], [465.0, 11928.933333333332], [464.0, 11923.499999999998], [466.0, 35262.333333333336], [467.0, 11511.952380952378], [468.0, 16581.157894736843], [469.0, 12178.35], [470.0, 17287.454545454548], [471.0, 11859.666666666666], [472.0, 11462.0], [478.0, 11191.2], [479.0, 11319.187499999998], [476.0, 12331.9375], [477.0, 11053.866666666667], [473.0, 11649.35], [474.0, 11484.0], [475.0, 11672.275862068967], [481.0, 18229.687500000004], [480.0, 11189.692307692309], [482.0, 11513.966666666667], [483.0, 34090.33333333333], [484.0, 9959.35294117647], [485.0, 11778.666666666668], [486.0, 10233.25], [487.0, 10165.904761904756], [488.0, 10249.296296296296], [494.0, 11965.250000000002], [495.0, 11905.347826086956], [492.0, 9829.375], [493.0, 9353.304347826086], [489.0, 11508.941176470587], [490.0, 12065.411764705883], [491.0, 11722.0], [496.0, 11304.875], [497.0, 15619.550000000001], [498.0, 12367.153846153846], [499.0, 25105.111111111106], [500.0, 14826.512072434605]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[333.5453339230418, 13059.014374170747]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[3.0, 1346.0], [4.0, 626.0], [6.0, 1345.0], [8.0, 2290.0], [9.0, 5152.0], [10.0, 1493.0], [12.0, 210560.0], [13.0, 2428.0], [14.0, 1834.0], [15.0, 2747.0], [16.0, 1080.0], [17.0, 639.0], [18.0, 797.0], [19.0, 167.0], [20.0, 1456.0], [21.0, 905.0], [22.0, 1357.0], [24.0, 2085.0], [26.0, 1327.0], [27.0, 2770.5], [28.0, 2420.0], [29.0, 1847.0], [33.0, 3315.6666666666665], [34.0, 2066.0], [35.0, 2091.0], [36.0, 2732.0], [38.0, 2820.0], [39.0, 2627.0], [41.0, 54412.5], [43.0, 2672.0], [42.0, 106504.6], [45.0, 34650.0], [47.0, 4071.5], [48.0, 2906.0], [50.0, 3495.0], [51.0, 2842.0], [52.0, 3313.0], [53.0, 34361.0], [55.0, 24388.666666666668], [54.0, 65563.0], [57.0, 3535.0], [58.0, 3473.0], [60.0, 109828.66666666667], [61.0, 4995.0], [62.0, 3979.0], [63.0, 4456.0], [65.0, 5595.0], [66.0, 92454.0], [67.0, 4908.0], [69.0, 4762.0], [70.0, 6639.0], [72.0, 6685.0], [73.0, 5921.5], [74.0, 5015.0], [76.0, 5491.0], [77.0, 6028.0], [79.0, 5200.0], [80.0, 6303.5], [81.0, 5048.0], [82.0, 5144.0], [84.0, 5784.0], [85.0, 5362.0], [86.0, 5655.0], [88.0, 6919.0], [89.0, 6207.0], [90.0, 6252.0], [91.0, 6428.0], [93.0, 6657.0], [94.0, 6343.0], [95.0, 6668.0], [97.0, 7110.5], [98.0, 30501.5], [99.0, 6664.0], [100.0, 7089.0], [101.0, 6947.0], [103.0, 7893.0], [102.0, 44080.0], [104.0, 7262.0], [105.0, 25666.0], [109.0, 10009.0], [110.0, 9230.5], [112.0, 20759.666666666664], [115.0, 9557.0], [118.0, 9927.5], [119.0, 8489.0], [116.0, 42870.0], [121.0, 8877.0], [123.0, 9443.0], [126.0, 26232.5], [127.0, 62111.5], [125.0, 42202.0], [129.0, 11393.0], [130.0, 10717.5], [132.0, 10636.0], [133.0, 9983.0], [135.0, 113527.0], [136.0, 10263.333333333334], [137.0, 9471.0], [141.0, 45374.666666666664], [142.0, 10611.0], [143.0, 61604.0], [145.0, 10893.5], [147.0, 44898.333333333336], [148.0, 10731.0], [149.0, 10887.0], [150.0, 11041.0], [151.0, 62202.0], [153.0, 11866.5], [154.0, 10950.0], [155.0, 10906.0], [156.0, 10781.0], [158.0, 10534.5], [160.0, 11338.0], [161.0, 11459.0], [162.0, 11645.0], [163.0, 17478.0], [165.0, 11564.0], [166.0, 11325.0], [168.0, 18018.0], [169.0, 11390.0], [171.0, 12039.0], [172.0, 15486.0], [176.0, 11998.0], [180.0, 12169.0], [183.0, 14082.0], [181.0, 61167.0], [179.0, 15364.0], [177.0, 15400.0], [187.0, 11941.0], [186.0, 15641.0], [185.0, 15660.0], [192.0, 11842.0], [198.0, 18880.0], [200.0, 14082.666666666666], [206.0, 11591.0], [204.0, 13766.0], [208.0, 11917.0], [209.0, 12997.0], [210.0, 13752.0], [212.0, 13473.0], [213.0, 12956.0], [215.0, 12709.0], [214.0, 18713.0], [218.0, 12461.0], [217.0, 16855.0], [228.0, 13311.0], [229.0, 12294.0], [230.0, 15407.5], [231.0, 17594.0], [225.0, 20759.0], [237.0, 15768.0], [238.0, 14731.0], [241.0, 13815.0], [246.0, 13308.0], [247.0, 12789.0], [249.0, 21436.0], [251.0, 12054.0], [252.0, 12425.0], [253.0, 9983.0], [254.0, 11280.0], [268.0, 13060.0], [256.0, 15029.0], [258.0, 8704.0], [260.0, 13962.0], [266.0, 12085.0], [267.0, 12033.0], [269.0, 16540.5], [270.0, 94122.66666666667], [271.0, 12458.0], [273.0, 13311.5], [272.0, 12245.0], [274.0, 2.0], [275.0, 12341.333333333334], [276.0, 17061.0], [277.0, 13312.0], [278.0, 30888.5], [279.0, 14610.8], [280.0, 13730.5], [286.0, 14563.5], [287.0, 13312.0], [284.0, 2.0], [285.0, 12987.333333333334], [282.0, 22047.4], [283.0, 11317.0], [290.0, 24055.0], [288.0, 23721.0], [291.0, 13312.0], [300.0, 20032.25], [301.0, 9276.8], [302.0, 28686.444444444445], [292.0, 23466.25], [293.0, 12021.8], [294.0, 8837.166666666668], [295.0, 7936.0], [296.0, 20992.0], [297.0, 13645.8], [298.0, 23289.5], [299.0, 12720.0], [305.0, 13262.888888888889], [304.0, 17186.444444444445], [307.0, 10653.0], [316.0, 10959.6], [317.0, 35363.25], [318.0, 6270.5], [319.0, 16661.92857142857], [308.0, 12306.5], [309.0, 6141.0], [310.0, 10477.0], [311.0, 28898.666666666664], [312.0, 8246.0], [313.0, 12292.0], [314.0, 13826.0], [315.0, 12410.727272727274], [321.0, 12758.5], [320.0, 7653.666666666667], [322.0, 12368.0], [323.0, 10068.0], [324.0, 8539.555555555555], [325.0, 11572.375], [326.0, 12631.0], [327.0, 13823.5], [328.0, 11454.125], [335.0, 26633.25], [332.0, 13484.57142857143], [334.0, 6178.0], [329.0, 12200.846153846152], [330.0, 12160.0], [337.0, 51988.444444444445], [336.0, 8583.5], [338.0, 7071.333333333334], [339.0, 7853.0], [340.0, 12233.5], [341.0, 15576.0], [342.0, 12362.0], [343.0, 12083.0], [344.0, 11980.0], [350.0, 7171.0], [351.0, 15615.666666666666], [348.0, 9591.461538461539], [349.0, 11386.333333333334], [345.0, 12468.0], [346.0, 11400.4], [347.0, 10225.249999999998], [353.0, 9354.0], [352.0, 11808.0], [354.0, 7168.2], [355.0, 11136.5], [356.0, 11007.833333333332], [357.0, 7970.0], [358.0, 10301.75], [359.0, 11042.6], [360.0, 10749.0], [366.0, 8000.75], [367.0, 10510.0], [364.0, 8498.333333333332], [365.0, 12997.888888888887], [361.0, 12016.0], [362.0, 8705.916666666666], [363.0, 8788.6], [369.0, 8186.875], [370.0, 12792.5], [380.0, 11006.5], [381.0, 11958.666666666666], [382.0, 12063.0], [372.0, 9650.0], [373.0, 9261.818181818182], [374.0, 8697.0], [375.0, 14080.0], [376.0, 11408.857142857141], [377.0, 11190.0], [378.0, 12571.888888888889], [379.0, 10152.875], [386.0, 13313.375], [385.0, 15107.0], [387.0, 12368.0], [396.0, 8022.125], [397.0, 6408.5], [398.0, 8703.333333333334], [399.0, 17115.0], [388.0, 12330.583333333332], [389.0, 13312.285714285714], [390.0, 11777.25], [391.0, 13311.0], [392.0, 13138.666666666666], [393.0, 11375.0], [394.0, 13312.0], [395.0, 7494.636363636364], [401.0, 13312.0], [400.0, 21248.0], [402.0, 13764.5], [403.0, 12792.0], [404.0, 14418.666666666668], [405.0, 13868.111111111111], [406.0, 10753.222222222223], [407.0, 10057.857142857143], [408.0, 12204.0], [414.0, 9244.0], [415.0, 12776.363636363634], [412.0, 11199.25], [413.0, 8247.0], [409.0, 7165.0], [411.0, 10608.8], [417.0, 5715.0], [416.0, 12104.4], [418.0, 11983.57142857143], [419.0, 13239.5], [420.0, 11546.750000000002], [421.0, 10205.0], [422.0, 7663.0], [423.0, 9062.6], [424.0, 11777.5], [430.0, 8563.166666666666], [431.0, 8340.222222222223], [428.0, 9317.4], [429.0, 10728.0], [425.0, 10827.8], [426.0, 11369.181818181818], [427.0, 12077.333333333334], [433.0, 10637.285714285714], [432.0, 11717.5], [435.0, 11540.0], [444.0, 14290.0], [445.0, 13548.0], [446.0, 12414.333333333334], [447.0, 11519.0], [437.0, 6656.5], [438.0, 8412.666666666666], [439.0, 11369.714285714286], [440.0, 32212.500000000004], [441.0, 8746.5], [442.0, 26648.61538461539], [443.0, 9130.666666666666], [449.0, 13542.6], [451.0, 10467.666666666666], [460.0, 38848.12499999999], [461.0, 9984.0], [462.0, 9074.666666666666], [463.0, 10383.166666666668], [452.0, 20992.916666666664], [453.0, 11028.25], [454.0, 12619.0], [455.0, 13311.333333333334], [456.0, 7187.25], [457.0, 10101.0], [458.0, 106755.0], [459.0, 7420.0], [466.0, 65479.00000000001], [465.0, 11275.0], [467.0, 14908.692307692305], [476.0, 10310.333333333334], [477.0, 11510.857142857143], [478.0, 7168.0], [479.0, 9819.899999999998], [468.0, 21094.6], [469.0, 9914.4], [471.0, 14134.333333333334], [472.0, 10077.285714285714], [473.0, 12863.75], [474.0, 12318.749999999998], [475.0, 10628.111111111111], [481.0, 34432.5], [480.0, 11974.555555555555], [482.0, 14353.6], [483.0, 11154.0], [484.0, 6528.0], [485.0, 11470.0], [486.0, 6366.714285714286], [487.0, 12143.111111111111], [488.0, 10685.0], [494.0, 10802.0], [495.0, 12919.714285714284], [492.0, 7711.285714285715], [493.0, 9354.5], [489.0, 1.0], [490.0, 6528.5], [491.0, 11604.0], [497.0, 57750.0], [499.0, 24532.42857142857], [500.0, 20159.545871559643]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[380.45620022753104, 16608.944823663252]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 36.0], [3.0, 447.0], [4.0, 69135.0], [5.0, 37.0], [6.0, 34.0], [7.0, 31.0], [8.0, 41.0], [9.0, 22.0], [10.0, 22.0], [11.0, 35.0], [12.0, 158216.75], [13.0, 31.0], [14.0, 22.0], [15.0, 97008.5], [16.0, 95481.5], [17.0, 22.0], [18.0, 32.0], [19.0, 43.5], [20.0, 228.0], [21.0, 332.0], [22.0, 271.0], [23.0, 528.0], [24.0, 793.0], [26.0, 821.0], [27.0, 862.0], [29.0, 1121.5], [30.0, 106498.0], [31.0, 1321.0], [32.0, 1200.0], [33.0, 1329.0], [34.0, 71370.33333333333], [35.0, 1367.0], [36.0, 1444.0], [37.0, 1510.0], [38.0, 1902.0], [39.0, 1566.0], [40.0, 1701.0], [41.0, 106496.0], [42.0, 2007.5], [44.0, 2171.0], [45.0, 2801.0], [46.0, 2545.0], [47.0, 110671.33333333333], [48.0, 2330.5], [50.0, 2379.0], [51.0, 2746.0], [52.0, 33824.5], [53.0, 2584.0], [54.0, 2872.0], [56.0, 3013.5], [58.0, 3234.0], [59.0, 3451.0], [60.0, 83068.5], [61.0, 3483.0], [63.0, 3985.5], [65.0, 4073.0], [66.0, 4196.0], [67.0, 92372.0], [68.0, 4267.0], [69.0, 4100.0], [70.0, 4362.0], [71.0, 4474.0], [72.0, 4445.0], [73.0, 4359.0], [74.0, 4180.0], [75.0, 4346.0], [76.0, 4404.0], [77.0, 4428.0], [78.0, 4423.0], [79.0, 4748.0], [80.0, 4566.0], [81.0, 4594.0], [82.0, 4945.0], [83.0, 4984.0], [85.0, 76422.0], [86.0, 5478.0], [87.0, 5781.0], [88.0, 30276.0], [89.0, 5762.0], [90.0, 25477.0], [92.0, 6093.0], [93.0, 5943.0], [94.0, 5880.0], [96.0, 6074.0], [97.0, 6352.0], [98.0, 6101.0], [99.0, 6038.0], [100.0, 25267.5], [101.0, 6573.0], [102.0, 6489.0], [103.0, 25212.0], [105.0, 7083.0], [106.0, 7400.0], [107.0, 25397.5], [109.0, 8133.0], [110.0, 8283.0], [111.0, 25718.5], [112.0, 8155.5], [114.0, 7960.0], [115.0, 7745.0], [116.0, 7554.0], [117.0, 7596.0], [118.0, 7848.0], [119.0, 7459.0], [120.0, 25203.0], [121.0, 16791.0], [123.0, 8435.0], [122.0, 43395.0], [125.0, 8999.0], [126.0, 9034.0], [127.0, 9364.0], [128.0, 9466.0], [129.0, 9654.0], [131.0, 9562.0], [132.0, 43980.666666666664], [134.0, 8994.0], [135.0, 8833.0], [136.0, 8720.0], [137.0, 8895.0], [139.0, 43793.333333333336], [140.0, 9078.0], [141.0, 9032.0], [142.0, 9713.0], [143.0, 9664.0], [138.0, 113479.0], [145.0, 44234.666666666664], [147.0, 61435.5], [148.0, 10527.0], [149.0, 78558.33333333333], [150.0, 10349.0], [151.0, 10306.0], [152.0, 10353.0], [153.0, 10224.0], [154.0, 61258.0], [155.0, 10151.0], [156.0, 61579.0], [157.0, 10629.0], [159.0, 10166.0], [164.0, 12151.0], [165.0, 23861.0], [168.0, 17355.0], [169.0, 13381.5], [175.0, 11777.0], [173.0, 15466.0], [176.0, 7710.5], [181.0, 25032.0], [178.0, 15383.0], [185.0, 18153.0], [188.0, 11501.0], [189.0, 18547.0], [191.0, 22750.0], [195.0, 24367.0], [196.0, 17966.0], [197.0, 12265.0], [198.0, 10541.0], [199.0, 18863.0], [200.0, 10694.0], [202.0, 10943.0], [205.0, 12766.5], [210.0, 9234.0], [212.0, 15801.0], [215.0, 13361.0], [211.0, 18839.0], [217.0, 13057.5], [221.0, 26252.0], [222.0, 13267.0], [223.0, 39196.666666666664], [216.0, 16876.0], [227.0, 14238.0], [228.0, 12934.0], [229.0, 13179.0], [230.0, 12703.0], [233.0, 8279.0], [234.0, 11380.0], [239.0, 52579.0], [235.0, 17425.0], [241.0, 12672.0], [242.0, 12533.0], [243.0, 13260.0], [246.0, 12786.5], [244.0, 11853.0], [248.0, 12494.0], [249.0, 13404.0], [250.0, 13370.0], [252.0, 24731.0], [253.0, 58904.5], [254.0, 17777.5], [255.0, 40282.2], [258.0, 12912.0], [259.0, 62656.333333333336], [268.0, 111678.25], [269.0, 10132.5], [270.0, 137107.0], [271.0, 12994.5], [260.0, 15415.0], [261.0, 52284.333333333336], [262.0, 13486.0], [263.0, 11857.0], [264.0, 49660.0], [265.0, 22112.0], [266.0, 27799.0], [267.0, 9200.75], [273.0, 3.0], [272.0, 36616.666666666664], [274.0, 67744.75], [275.0, 7981.5], [276.0, 10785.0], [277.0, 10127.666666666666], [278.0, 9082.5], [279.0, 9841.0], [280.0, 11861.0], [284.0, 70863.0], [285.0, 11224.8], [286.0, 63933.0], [287.0, 10457.8], [281.0, 12003.0], [289.0, 12110.8], [288.0, 48412.33333333333], [290.0, 11986.25], [291.0, 13410.0], [292.0, 11473.8], [293.0, 12027.5], [294.0, 63442.33333333333], [295.0, 10335.0], [296.0, 33190.666666666664], [302.0, 14887.57142857143], [300.0, 35547.33333333333], [301.0, 10214.285714285714], [297.0, 11297.25], [298.0, 57194.5], [299.0, 6530.5], [305.0, 11482.166666666668], [304.0, 22677.363636363636], [306.0, 11008.666666666666], [307.0, 11593.2], [308.0, 11819.6], [309.0, 9482.75], [310.0, 8983.0], [311.0, 7401.5], [312.0, 7921.8], [318.0, 8377.5], [319.0, 10327.1], [316.0, 10618.0], [317.0, 59182.5], [313.0, 10799.333333333332], [314.0, 12929.5], [315.0, 18347.53846153846], [321.0, 52424.4], [320.0, 11164.666666666666], [322.0, 9212.0], [323.0, 12420.333333333334], [324.0, 6547.0], [325.0, 26411.857142857145], [326.0, 13216.0], [327.0, 59364.5], [328.0, 11239.0], [334.0, 9023.0], [335.0, 9693.333333333334], [332.0, 11118.583333333332], [333.0, 17264.2], [329.0, 10416.625], [330.0, 12390.833333333334], [331.0, 10211.0], [337.0, 24608.625], [336.0, 11094.555555555555], [338.0, 10483.5], [339.0, 10914.0], [340.0, 11098.333333333334], [341.0, 13314.2], [343.0, 12558.666666666666], [345.0, 12182.6], [350.0, 7477.4], [351.0, 6871.6], [348.0, 12588.0], [349.0, 27769.857142857145], [346.0, 8474.2], [347.0, 11252.5], [353.0, 10763.0], [352.0, 13046.5], [354.0, 8143.083333333333], [355.0, 11792.5], [356.0, 6569.250000000001], [358.0, 11547.333333333334], [359.0, 11067.75], [360.0, 12029.8], [366.0, 10373.166666666666], [367.0, 11627.599999999999], [364.0, 8334.25], [365.0, 16012.0], [361.0, 12387.571428571428], [362.0, 11092.916666666668], [363.0, 9728.0], [369.0, 9424.666666666668], [370.0, 11654.333333333334], [380.0, 8963.25], [381.0, 10206.25], [382.0, 15767.5], [372.0, 10631.5], [373.0, 9898.750000000002], [374.0, 8588.777777777777], [375.0, 11033.0], [376.0, 12406.833333333334], [378.0, 8747.555555555555], [379.0, 11687.363636363636], [386.0, 13315.0], [385.0, 15312.5], [387.0, 5764.25], [388.0, 11487.181818181818], [389.0, 13028.142857142857], [390.0, 11697.4], [391.0, 13264.0], [395.0, 7777.0625], [399.0, 7413.0], [397.0, 10858.0], [398.0, 9874.5], [396.0, 9803.999999999998], [401.0, 10387.0], [400.0, 21247.5], [402.0, 11933.777777777777], [403.0, 13308.0], [404.0, 12550.25], [405.0, 11961.333333333334], [406.0, 9082.846153846154], [407.0, 13203.5], [408.0, 7050.0], [414.0, 7399.0], [415.0, 10159.444444444445], [412.0, 9648.75], [413.0, 11585.777777777777], [410.0, 7678.0], [411.0, 7065.8], [417.0, 8760.222222222223], [416.0, 13316.0], [418.0, 12124.5], [419.0, 11459.833333333334], [420.0, 7424.25], [421.0, 8577.0], [422.0, 9224.125], [423.0, 10176.375], [424.0, 12665.75], [430.0, 9076.0], [431.0, 11303.300000000001], [428.0, 11304.375], [429.0, 10782.5], [425.0, 13778.0], [426.0, 11126.166666666666], [427.0, 10760.5], [433.0, 12528.0], [432.0, 9287.333333333334], [434.0, 8587.0], [435.0, 10985.25], [436.0, 9795.5], [437.0, 13312.0], [438.0, 12182.9], [439.0, 13445.125], [440.0, 26524.636363636364], [446.0, 32333.8], [447.0, 12890.666666666666], [444.0, 10913.5], [445.0, 12978.0], [441.0, 10552.833333333332], [442.0, 11005.636363636364], [443.0, 13823.666666666668], [449.0, 1.0], [451.0, 12915.666666666666], [460.0, 23472.18181818182], [461.0, 9892.0], [462.0, 8833.166666666668], [463.0, 12010.42857142857], [452.0, 24359.555555555555], [453.0, 12045.714285714286], [454.0, 24603.714285714286], [455.0, 12199.5], [456.0, 8985.0], [457.0, 1.0], [458.0, 106652.5], [459.0, 6716.8], [465.0, 9211.666666666666], [464.0, 9942.75], [466.0, 68177.11111111111], [467.0, 7868.200000000001], [468.0, 23450.555555555555], [469.0, 14774.6], [470.0, 11527.5], [471.0, 8888.333333333332], [472.0, 8559.75], [479.0, 12117.6], [476.0, 10112.0], [477.0, 9983.5], [473.0, 9984.0], [474.0, 10703.714285714284], [475.0, 8704.5], [481.0, 9436.42857142857], [480.0, 12388.0], [482.0, 10309.857142857143], [483.0, 135424.0], [484.0, 8510.181818181818], [485.0, 18692.0], [486.0, 8706.333333333334], [487.0, 9669.631578947368], [488.0, 11494.7], [494.0, 12840.8], [495.0, 13260.0], [492.0, 7267.5], [493.0, 10132.4], [489.0, 11017.0], [490.0, 12842.666666666666], [491.0, 10929.0], [497.0, 9728.0], [499.0, 31742.545454545452], [500.0, 22160.149769585252], [1.0, 81.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[375.4915531335146, 18626.322615803812]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 78.41666666666667, "minX": 1.53945468E12, "maxY": 989197.4166666666, "series": [{"data": [[1.53945468E12, 11163.65], [1.53945516E12, 989197.4166666666], [1.53945486E12, 965954.8666666667], [1.53945534E12, 252668.75], [1.5394548E12, 928387.3666666667], [1.53945528E12, 968718.4166666666], [1.53945498E12, 948655.8666666667], [1.53945492E12, 986111.1166666667], [1.5394551E12, 958733.25], [1.53945504E12, 966255.4], [1.53945474E12, 898022.2833333333], [1.53945522E12, 963094.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53945468E12, 78.41666666666667], [1.53945516E12, 7307.716666666666], [1.53945486E12, 3355.4], [1.53945534E12, 1279.2166666666667], [1.5394548E12, 3336.65], [1.53945528E12, 7293.333333333333], [1.53945498E12, 4780.566666666667], [1.53945492E12, 3261.25], [1.5394551E12, 6655.983333333334], [1.53945504E12, 7204.733333333334], [1.53945474E12, 3273.3333333333335], [1.53945522E12, 7439.283333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945534E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 100.0, "minX": 1.53945468E12, "maxY": 87219.79999999997, "series": [{"data": [[1.53945468E12, 1317.0], [1.53945516E12, 13781.565566458543], [1.53945486E12, 11696.767660910511], [1.53945534E12, 49899.0515463918], [1.5394548E12, 7568.918032786878], [1.53945528E12, 15418.297548605231], [1.53945498E12, 14436.522670025195], [1.53945492E12, 13236.31145038168], [1.5394551E12, 11903.62834489595], [1.53945504E12, 11752.084269662915], [1.53945474E12, 3059.696610169494], [1.53945522E12, 13741.188775510207]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945468E12, 985.75], [1.53945516E12, 16678.616724738702], [1.53945486E12, 11092.441860465118], [1.53945534E12, 68614.49056603773], [1.5394548E12, 7323.392156862745], [1.53945528E12, 23435.105468750004], [1.53945498E12, 16015.31617647059], [1.53945492E12, 13022.190476190475], [1.5394551E12, 11072.106617647063], [1.53945504E12, 11994.263843648205], [1.53945474E12, 2754.89090909091], [1.53945522E12, 16939.472527472535]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945468E12, 100.0], [1.53945516E12, 15998.737373737382], [1.53945486E12, 10425.89189189189], [1.53945534E12, 87219.79999999997], [1.5394548E12, 6235.517857142859], [1.53945528E12, 23094.146443514637], [1.53945498E12, 29375.901734104038], [1.53945492E12, 19333.147058823535], [1.5394551E12, 10401.527777777774], [1.53945504E12, 13227.892744479495], [1.53945474E12, 1631.1403508771932], [1.53945522E12, 19469.909090909103]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945534E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 99.71428571428571, "minX": 1.53945468E12, "maxY": 87219.79999999997, "series": [{"data": [[1.53945468E12, 1316.2857142857142], [1.53945516E12, 13780.9241748439], [1.53945486E12, 11695.571428571428], [1.53945534E12, 49898.05154639173], [1.5394548E12, 7567.695081967209], [1.53945528E12, 15417.622147083688], [1.53945498E12, 14435.541561712862], [1.53945492E12, 13235.042748091606], [1.5394551E12, 11902.887016848355], [1.53945504E12, 11751.367041198499], [1.53945474E12, 3058.6271186440663], [1.53945522E12, 13740.53146258502]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945468E12, 985.5], [1.53945516E12, 16678.616724738702], [1.53945486E12, 11092.441860465118], [1.53945534E12, 68614.49056603773], [1.5394548E12, 7323.392156862745], [1.53945528E12, 23435.10156250001], [1.53945498E12, 16015.31617647059], [1.53945492E12, 13022.190476190475], [1.5394551E12, 11072.106617647063], [1.53945504E12, 11994.260586319226], [1.53945474E12, 2754.8727272727274], [1.53945522E12, 16939.472527472535]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945468E12, 99.71428571428571], [1.53945516E12, 15998.737373737382], [1.53945486E12, 10425.783783783781], [1.53945534E12, 87219.79999999997], [1.5394548E12, 6235.482142857144], [1.53945528E12, 23094.13807531381], [1.53945498E12, 29375.901734104038], [1.53945492E12, 19333.147058823535], [1.5394551E12, 10401.52430555556], [1.53945504E12, 13227.892744479495], [1.53945474E12, 1631.1052631578948], [1.53945522E12, 19469.89818181818]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945534E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53945468E12, "maxY": 6.571428571428572, "series": [{"data": [[1.53945468E12, 0.14285714285714288], [1.53945516E12, 0.5218554861730597], [1.53945486E12, 2.2558869701726847], [1.53945534E12, 0.5927835051546391], [1.5394548E12, 0.7000000000000004], [1.53945528E12, 0.5756551141166529], [1.53945498E12, 0.6801007556675057], [1.53945492E12, 0.6748091603053435], [1.5394551E12, 0.5877106045589702], [1.53945504E12, 0.701310861423221], [1.53945474E12, 0.8288135593220335], [1.53945522E12, 0.5187074829931976]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945468E12, 0.0], [1.53945516E12, 0.7108013937282228], [1.53945486E12, 0.8604651162790696], [1.53945534E12, 0.641509433962264], [1.5394548E12, 0.96078431372549], [1.53945528E12, 0.7929687500000006], [1.53945498E12, 0.8897058823529411], [1.53945492E12, 0.9047619047619049], [1.5394551E12, 0.6544117647058827], [1.53945504E12, 0.8078175895765476], [1.53945474E12, 0.3636363636363636], [1.53945522E12, 0.6153846153846156]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945468E12, 6.571428571428572], [1.53945516E12, 0.6127946127946133], [1.53945486E12, 1.2972972972972971], [1.53945534E12, 0.6181818181818184], [1.5394548E12, 0.8571428571428571], [1.53945528E12, 0.6861924686192464], [1.53945498E12, 0.8497109826589595], [1.53945492E12, 0.8823529411764706], [1.5394551E12, 0.7187499999999999], [1.53945504E12, 0.8044164037854887], [1.53945474E12, 1.4736842105263157], [1.53945522E12, 0.618181818181818]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945534E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.53945468E12, "maxY": 115704.0, "series": [{"data": [[1.53945468E12, 1697.0], [1.53945516E12, 19716.0], [1.53945486E12, 25032.0], [1.53945534E12, 115704.0], [1.5394548E12, 10987.0], [1.53945528E12, 23832.0], [1.53945498E12, 20060.0], [1.53945492E12, 64752.0], [1.5394551E12, 31963.0], [1.53945504E12, 19574.0], [1.53945474E12, 7965.0], [1.53945522E12, 19069.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53945468E12, 31.0], [1.53945516E12, 9715.0], [1.53945486E12, 8720.0], [1.53945534E12, 11297.0], [1.5394548E12, 4100.0], [1.53945528E12, 10741.0], [1.53945498E12, 10240.0], [1.53945492E12, 10541.0], [1.5394551E12, 10627.0], [1.53945504E12, 10169.0], [1.53945474E12, 22.0], [1.53945522E12, 10212.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53945468E12, 1381.1000000000006], [1.53945516E12, 13370.0], [1.53945486E12, 12238.2], [1.53945534E12, 13483.0], [1.5394548E12, 9218.8], [1.53945528E12, 13385.0], [1.53945498E12, 13395.900000000001], [1.53945492E12, 13033.800000000001], [1.5394551E12, 13428.4], [1.53945504E12, 13364.8], [1.53945474E12, 4656.0], [1.53945522E12, 13356.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53945468E12, 1697.0], [1.53945516E12, 15262.090000000006], [1.53945486E12, 13270.080000000004], [1.53945534E12, 43571.910000000025], [1.5394548E12, 10371.76], [1.53945528E12, 15517.599999999973], [1.53945498E12, 14441.679999999991], [1.53945492E12, 14137.08], [1.5394551E12, 14993.229999999978], [1.53945504E12, 14780.979999999978], [1.53945474E12, 5671.7], [1.53945522E12, 15378.25]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53945468E12, 1697.0], [1.53945516E12, 13693.0], [1.53945486E12, 12835.0], [1.53945534E12, 13895.95], [1.5394548E12, 9609.2], [1.53945528E12, 13710.0], [1.53945498E12, 13707.899999999998], [1.53945492E12, 13571.0], [1.5394551E12, 13721.349999999999], [1.53945504E12, 13694.9], [1.53945474E12, 5217.5], [1.53945522E12, 13680.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945534E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 873.5, "minX": 0.0, "maxY": 106498.0, "series": [{"data": [[0.0, 873.5], [18.0, 12938.5], [5.0, 19918.0], [11.0, 10081.0], [26.0, 12669.0], [27.0, 12564.0], [28.0, 12281.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[18.0, 13311.0], [5.0, 106498.0], [11.0, 10965.5], [26.0, 10427.0], [27.0, 12539.0], [28.0, 10752.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 873.5, "minX": 0.0, "maxY": 106498.0, "series": [{"data": [[0.0, 873.5], [18.0, 12937.0], [5.0, 19917.0], [11.0, 10080.5], [26.0, 12668.0], [27.0, 12563.0], [28.0, 12280.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[18.0, 13311.0], [5.0, 106498.0], [11.0, 10965.5], [26.0, 10427.0], [27.0, 12539.0], [28.0, 10752.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4166666666666667, "minX": 1.53945468E12, "maxY": 29.416666666666668, "series": [{"data": [[1.53945468E12, 0.4166666666666667], [1.53945516E12, 29.416666666666668], [1.53945486E12, 12.95], [1.5394548E12, 12.95], [1.53945528E12, 24.666666666666668], [1.53945498E12, 19.383333333333333], [1.53945492E12, 12.833333333333334], [1.5394551E12, 27.15], [1.53945504E12, 29.2], [1.53945474E12, 12.7], [1.53945522E12, 28.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945528E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945468E12, "maxY": 17.05, "series": [{"data": [[1.53945468E12, 0.23333333333333334], [1.53945516E12, 11.283333333333333], [1.53945486E12, 11.15], [1.53945534E12, 3.316666666666667], [1.5394548E12, 11.033333333333333], [1.53945528E12, 11.016666666666667], [1.53945498E12, 10.883333333333333], [1.53945492E12, 11.1], [1.5394551E12, 10.85], [1.53945504E12, 11.066666666666666], [1.53945474E12, 10.7], [1.53945522E12, 11.033333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53945468E12, 0.06666666666666667], [1.53945516E12, 0.55], [1.53945486E12, 0.7], [1.53945534E12, 0.03333333333333333], [1.5394548E12, 0.85], [1.53945528E12, 0.4], [1.53945498E12, 0.45], [1.53945492E12, 0.3], [1.5394551E12, 0.3333333333333333], [1.53945504E12, 0.5833333333333334], [1.53945474E12, 0.9], [1.53945522E12, 0.5]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945516E12, 16.3], [1.53945486E12, 0.08333333333333333], [1.53945534E12, 1.0833333333333333], [1.5394548E12, 0.06666666666666667], [1.53945528E12, 16.383333333333333], [1.53945498E12, 6.85], [1.53945492E12, 0.4166666666666667], [1.5394551E12, 14.666666666666666], [1.53945504E12, 16.35], [1.53945474E12, 0.08333333333333333], [1.53945522E12, 17.05]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53945516E12, 0.2833333333333333], [1.53945486E12, 0.016666666666666666], [1.53945534E12, 0.6], [1.53945528E12, 0.16666666666666666], [1.53945498E12, 0.2], [1.53945492E12, 0.016666666666666666], [1.5394551E12, 0.3], [1.53945504E12, 0.2], [1.53945474E12, 0.016666666666666666], [1.53945522E12, 0.15]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945534E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945468E12, "maxY": 10.766666666666667, "series": [{"data": [[1.53945468E12, 0.11666666666666667], [1.53945516E12, 0.55], [1.53945486E12, 0.6], [1.53945534E12, 0.6], [1.5394548E12, 0.9166666666666666], [1.53945528E12, 0.45], [1.53945498E12, 0.55], [1.53945492E12, 0.3333333333333333], [1.5394551E12, 0.4666666666666667], [1.53945504E12, 0.5666666666666667], [1.53945474E12, 0.9333333333333333], [1.53945522E12, 0.55]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53945468E12, 0.06666666666666667], [1.53945516E12, 0.55], [1.53945486E12, 0.7], [1.53945534E12, 0.03333333333333333], [1.5394548E12, 0.85], [1.53945528E12, 0.4], [1.53945498E12, 0.45], [1.53945492E12, 0.3], [1.5394551E12, 0.3333333333333333], [1.53945504E12, 0.5833333333333334], [1.53945474E12, 0.9], [1.53945522E12, 0.5]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53945468E12, 0.11666666666666667], [1.53945516E12, 10.733333333333333], [1.53945486E12, 10.55], [1.53945534E12, 2.716666666666667], [1.5394548E12, 10.116666666666667], [1.53945528E12, 10.566666666666666], [1.53945498E12, 10.333333333333334], [1.53945492E12, 10.766666666666667], [1.5394551E12, 10.383333333333333], [1.53945504E12, 10.5], [1.53945474E12, 9.766666666666667], [1.53945522E12, 10.483333333333333]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945516E12, 7.95], [1.53945486E12, 0.06666666666666667], [1.53945534E12, 0.5166666666666667], [1.5394548E12, 0.05], [1.53945528E12, 9.15], [1.53945498E12, 2.9], [1.53945492E12, 0.15], [1.5394551E12, 6.433333333333334], [1.53945504E12, 7.3], [1.53945474E12, 0.06666666666666667], [1.53945522E12, 9.116666666666667]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53945516E12, 4.4], [1.53945486E12, 0.016666666666666666], [1.53945534E12, 0.31666666666666665], [1.5394548E12, 0.016666666666666666], [1.53945528E12, 3.533333333333333], [1.53945498E12, 2.3333333333333335], [1.53945492E12, 0.23333333333333334], [1.5394551E12, 4.333333333333333], [1.53945504E12, 4.716666666666667], [1.53945474E12, 0.016666666666666666], [1.53945522E12, 4.033333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53945516E12, 4.233333333333333], [1.53945486E12, 0.016666666666666666], [1.53945534E12, 0.85], [1.53945528E12, 3.8666666666666667], [1.53945498E12, 1.8166666666666667], [1.53945492E12, 0.05], [1.5394551E12, 4.2], [1.53945504E12, 4.533333333333333], [1.53945474E12, 0.016666666666666666], [1.53945522E12, 4.05]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945534E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
