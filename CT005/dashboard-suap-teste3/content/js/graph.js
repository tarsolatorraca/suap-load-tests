/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 232885.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 2.0], [2.9, 2.0], [3.0, 3.0], [3.1, 1221.0], [3.2, 1274.0], [3.3, 1315.0], [3.4, 1346.0], [3.5, 1382.0], [3.6, 1399.0], [3.7, 1414.0], [3.8, 1436.0], [3.9, 1478.0], [4.0, 1505.0], [4.1, 1548.0], [4.2, 1584.0], [4.3, 1647.0], [4.4, 1702.0], [4.5, 1756.0], [4.6, 1792.0], [4.7, 1844.0], [4.8, 1983.0], [4.9, 2018.0], [5.0, 2086.0], [5.1, 2161.0], [5.2, 2195.0], [5.3, 2290.0], [5.4, 2378.0], [5.5, 2463.0], [5.6, 2548.0], [5.7, 2663.0], [5.8, 2710.0], [5.9, 2755.0], [6.0, 2794.0], [6.1, 2839.0], [6.2, 2907.0], [6.3, 2957.0], [6.4, 3006.0], [6.5, 3049.0], [6.6, 3077.0], [6.7, 3134.0], [6.8, 3204.0], [6.9, 3260.0], [7.0, 3301.0], [7.1, 3405.0], [7.2, 3612.0], [7.3, 3880.0], [7.4, 3972.0], [7.5, 4022.0], [7.6, 4081.0], [7.7, 4144.0], [7.8, 4178.0], [7.9, 4223.0], [8.0, 4265.0], [8.1, 4326.0], [8.2, 4353.0], [8.3, 4382.0], [8.4, 4430.0], [8.5, 4455.0], [8.6, 4500.0], [8.7, 4529.0], [8.8, 4582.0], [8.9, 4632.0], [9.0, 4680.0], [9.1, 4732.0], [9.2, 4805.0], [9.3, 4857.0], [9.4, 4979.0], [9.5, 5076.0], [9.6, 5120.0], [9.7, 5209.0], [9.8, 5249.0], [9.9, 5286.0], [10.0, 5350.0], [10.1, 5378.0], [10.2, 5409.0], [10.3, 5440.0], [10.4, 5465.0], [10.5, 5485.0], [10.6, 5527.0], [10.7, 5586.0], [10.8, 5619.0], [10.9, 5685.0], [11.0, 5772.0], [11.1, 5915.0], [11.2, 6006.0], [11.3, 6078.0], [11.4, 6229.0], [11.5, 6408.0], [11.6, 6600.0], [11.7, 6761.0], [11.8, 6885.0], [11.9, 7008.0], [12.0, 7054.0], [12.1, 7091.0], [12.2, 7112.0], [12.3, 7147.0], [12.4, 7163.0], [12.5, 7166.0], [12.6, 7167.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7169.0], [13.6, 7172.0], [13.7, 7179.0], [13.8, 7200.0], [13.9, 7213.0], [14.0, 7235.0], [14.1, 7253.0], [14.2, 7281.0], [14.3, 7295.0], [14.4, 7323.0], [14.5, 7367.0], [14.6, 7385.0], [14.7, 7401.0], [14.8, 7420.0], [14.9, 7423.0], [15.0, 7423.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7428.0], [15.7, 7440.0], [15.8, 7476.0], [15.9, 7529.0], [16.0, 7591.0], [16.1, 7623.0], [16.2, 7660.0], [16.3, 7676.0], [16.4, 7677.0], [16.5, 7680.0], [16.6, 7680.0], [16.7, 7680.0], [16.8, 7680.0], [16.9, 7680.0], [17.0, 7680.0], [17.1, 7682.0], [17.2, 7685.0], [17.3, 7751.0], [17.4, 7841.0], [17.5, 7932.0], [17.6, 7936.0], [17.7, 7936.0], [17.8, 7936.0], [17.9, 7936.0], [18.0, 7939.0], [18.1, 7969.0], [18.2, 8102.0], [18.3, 8145.0], [18.4, 8188.0], [18.5, 8192.0], [18.6, 8192.0], [18.7, 8192.0], [18.8, 8193.0], [18.9, 8196.0], [19.0, 8236.0], [19.1, 8273.0], [19.2, 8306.0], [19.3, 8341.0], [19.4, 8373.0], [19.5, 8414.0], [19.6, 8443.0], [19.7, 8447.0], [19.8, 8448.0], [19.9, 8448.0], [20.0, 8464.0], [20.1, 8499.0], [20.2, 8530.0], [20.3, 8570.0], [20.4, 8614.0], [20.5, 8653.0], [20.6, 8696.0], [20.7, 8700.0], [20.8, 8700.0], [20.9, 8703.0], [21.0, 8704.0], [21.1, 8704.0], [21.2, 8704.0], [21.3, 8704.0], [21.4, 8704.0], [21.5, 8705.0], [21.6, 8732.0], [21.7, 8763.0], [21.8, 8792.0], [21.9, 8902.0], [22.0, 8959.0], [22.1, 8960.0], [22.2, 8961.0], [22.3, 8964.0], [22.4, 9041.0], [22.5, 9098.0], [22.6, 9212.0], [22.7, 9212.0], [22.8, 9216.0], [22.9, 9216.0], [23.0, 9216.0], [23.1, 9216.0], [23.2, 9216.0], [23.3, 9218.0], [23.4, 9220.0], [23.5, 9261.0], [23.6, 9376.0], [23.7, 9456.0], [23.8, 9476.0], [23.9, 9553.0], [24.0, 9682.0], [24.1, 9716.0], [24.2, 9726.0], [24.3, 9728.0], [24.4, 9728.0], [24.5, 9728.0], [24.6, 9728.0], [24.7, 9728.0], [24.8, 9731.0], [24.9, 9776.0], [25.0, 9847.0], [25.1, 9924.0], [25.2, 9980.0], [25.3, 9984.0], [25.4, 9984.0], [25.5, 9984.0], [25.6, 9984.0], [25.7, 9988.0], [25.8, 10082.0], [25.9, 10233.0], [26.0, 10240.0], [26.1, 10240.0], [26.2, 10240.0], [26.3, 10248.0], [26.4, 10386.0], [26.5, 10437.0], [26.6, 10496.0], [26.7, 10500.0], [26.8, 10552.0], [26.9, 10668.0], [27.0, 10739.0], [27.1, 10751.0], [27.2, 10752.0], [27.3, 10752.0], [27.4, 10875.0], [27.5, 10933.0], [27.6, 10968.0], [27.7, 11004.0], [27.8, 11008.0], [27.9, 11008.0], [28.0, 11008.0], [28.1, 11044.0], [28.2, 11062.0], [28.3, 11103.0], [28.4, 11155.0], [28.5, 11178.0], [28.6, 11200.0], [28.7, 11219.0], [28.8, 11240.0], [28.9, 11263.0], [29.0, 11264.0], [29.1, 11266.0], [29.2, 11299.0], [29.3, 11335.0], [29.4, 11363.0], [29.5, 11383.0], [29.6, 11397.0], [29.7, 11418.0], [29.8, 11437.0], [29.9, 11457.0], [30.0, 11472.0], [30.1, 11503.0], [30.2, 11516.0], [30.3, 11519.0], [30.4, 11520.0], [30.5, 11531.0], [30.6, 11540.0], [30.7, 11550.0], [30.8, 11561.0], [30.9, 11573.0], [31.0, 11587.0], [31.1, 11600.0], [31.2, 11610.0], [31.3, 11622.0], [31.4, 11631.0], [31.5, 11638.0], [31.6, 11643.0], [31.7, 11652.0], [31.8, 11663.0], [31.9, 11668.0], [32.0, 11674.0], [32.1, 11679.0], [32.2, 11686.0], [32.3, 11693.0], [32.4, 11697.0], [32.5, 11704.0], [32.6, 11709.0], [32.7, 11713.0], [32.8, 11720.0], [32.9, 11725.0], [33.0, 11732.0], [33.1, 11737.0], [33.2, 11745.0], [33.3, 11748.0], [33.4, 11753.0], [33.5, 11761.0], [33.6, 11766.0], [33.7, 11771.0], [33.8, 11773.0], [33.9, 11775.0], [34.0, 11776.0], [34.1, 11779.0], [34.2, 11783.0], [34.3, 11787.0], [34.4, 11792.0], [34.5, 11797.0], [34.6, 11800.0], [34.7, 11806.0], [34.8, 11813.0], [34.9, 11818.0], [35.0, 11823.0], [35.1, 11827.0], [35.2, 11832.0], [35.3, 11834.0], [35.4, 11836.0], [35.5, 11839.0], [35.6, 11844.0], [35.7, 11848.0], [35.8, 11852.0], [35.9, 11856.0], [36.0, 11859.0], [36.1, 11864.0], [36.2, 11868.0], [36.3, 11871.0], [36.4, 11875.0], [36.5, 11880.0], [36.6, 11885.0], [36.7, 11887.0], [36.8, 11889.0], [36.9, 11891.0], [37.0, 11895.0], [37.1, 11900.0], [37.2, 11903.0], [37.3, 11905.0], [37.4, 11909.0], [37.5, 11913.0], [37.6, 11915.0], [37.7, 11917.0], [37.8, 11921.0], [37.9, 11926.0], [38.0, 11932.0], [38.1, 11934.0], [38.2, 11937.0], [38.3, 11941.0], [38.4, 11944.0], [38.5, 11948.0], [38.6, 11950.0], [38.7, 11953.0], [38.8, 11955.0], [38.9, 11961.0], [39.0, 11967.0], [39.1, 11969.0], [39.2, 11972.0], [39.3, 11976.0], [39.4, 11981.0], [39.5, 11983.0], [39.6, 11986.0], [39.7, 11989.0], [39.8, 11991.0], [39.9, 11994.0], [40.0, 11998.0], [40.1, 12001.0], [40.2, 12004.0], [40.3, 12005.0], [40.4, 12009.0], [40.5, 12011.0], [40.6, 12013.0], [40.7, 12016.0], [40.8, 12019.0], [40.9, 12023.0], [41.0, 12027.0], [41.1, 12029.0], [41.2, 12032.0], [41.3, 12034.0], [41.4, 12038.0], [41.5, 12040.0], [41.6, 12043.0], [41.7, 12047.0], [41.8, 12051.0], [41.9, 12053.0], [42.0, 12057.0], [42.1, 12058.0], [42.2, 12062.0], [42.3, 12065.0], [42.4, 12069.0], [42.5, 12070.0], [42.6, 12075.0], [42.7, 12077.0], [42.8, 12079.0], [42.9, 12082.0], [43.0, 12086.0], [43.1, 12089.0], [43.2, 12093.0], [43.3, 12094.0], [43.4, 12098.0], [43.5, 12102.0], [43.6, 12104.0], [43.7, 12106.0], [43.8, 12109.0], [43.9, 12112.0], [44.0, 12115.0], [44.1, 12118.0], [44.2, 12121.0], [44.3, 12123.0], [44.4, 12125.0], [44.5, 12127.0], [44.6, 12129.0], [44.7, 12131.0], [44.8, 12133.0], [44.9, 12135.0], [45.0, 12138.0], [45.1, 12139.0], [45.2, 12143.0], [45.3, 12145.0], [45.4, 12147.0], [45.5, 12149.0], [45.6, 12154.0], [45.7, 12157.0], [45.8, 12160.0], [45.9, 12164.0], [46.0, 12167.0], [46.1, 12169.0], [46.2, 12172.0], [46.3, 12174.0], [46.4, 12180.0], [46.5, 12182.0], [46.6, 12187.0], [46.7, 12188.0], [46.8, 12190.0], [46.9, 12193.0], [47.0, 12194.0], [47.1, 12197.0], [47.2, 12201.0], [47.3, 12203.0], [47.4, 12205.0], [47.5, 12209.0], [47.6, 12212.0], [47.7, 12215.0], [47.8, 12216.0], [47.9, 12218.0], [48.0, 12221.0], [48.1, 12224.0], [48.2, 12225.0], [48.3, 12226.0], [48.4, 12229.0], [48.5, 12232.0], [48.6, 12234.0], [48.7, 12235.0], [48.8, 12238.0], [48.9, 12239.0], [49.0, 12241.0], [49.1, 12246.0], [49.2, 12248.0], [49.3, 12251.0], [49.4, 12254.0], [49.5, 12257.0], [49.6, 12259.0], [49.7, 12263.0], [49.8, 12267.0], [49.9, 12270.0], [50.0, 12273.0], [50.1, 12275.0], [50.2, 12277.0], [50.3, 12279.0], [50.4, 12283.0], [50.5, 12284.0], [50.6, 12284.0], [50.7, 12286.0], [50.8, 12287.0], [50.9, 12288.0], [51.0, 12288.0], [51.1, 12288.0], [51.2, 12290.0], [51.3, 12292.0], [51.4, 12296.0], [51.5, 12297.0], [51.6, 12298.0], [51.7, 12299.0], [51.8, 12302.0], [51.9, 12304.0], [52.0, 12306.0], [52.1, 12307.0], [52.2, 12310.0], [52.3, 12313.0], [52.4, 12315.0], [52.5, 12316.0], [52.6, 12319.0], [52.7, 12321.0], [52.8, 12323.0], [52.9, 12327.0], [53.0, 12328.0], [53.1, 12330.0], [53.2, 12333.0], [53.3, 12336.0], [53.4, 12339.0], [53.5, 12342.0], [53.6, 12345.0], [53.7, 12348.0], [53.8, 12353.0], [53.9, 12356.0], [54.0, 12361.0], [54.1, 12364.0], [54.2, 12366.0], [54.3, 12368.0], [54.4, 12371.0], [54.5, 12373.0], [54.6, 12375.0], [54.7, 12380.0], [54.8, 12382.0], [54.9, 12385.0], [55.0, 12387.0], [55.1, 12390.0], [55.2, 12392.0], [55.3, 12395.0], [55.4, 12398.0], [55.5, 12401.0], [55.6, 12402.0], [55.7, 12405.0], [55.8, 12407.0], [55.9, 12410.0], [56.0, 12412.0], [56.1, 12414.0], [56.2, 12417.0], [56.3, 12419.0], [56.4, 12421.0], [56.5, 12422.0], [56.6, 12425.0], [56.7, 12426.0], [56.8, 12428.0], [56.9, 12429.0], [57.0, 12432.0], [57.1, 12434.0], [57.2, 12436.0], [57.3, 12438.0], [57.4, 12442.0], [57.5, 12445.0], [57.6, 12447.0], [57.7, 12449.0], [57.8, 12452.0], [57.9, 12454.0], [58.0, 12457.0], [58.1, 12458.0], [58.2, 12461.0], [58.3, 12464.0], [58.4, 12467.0], [58.5, 12470.0], [58.6, 12472.0], [58.7, 12474.0], [58.8, 12477.0], [58.9, 12480.0], [59.0, 12483.0], [59.1, 12486.0], [59.2, 12488.0], [59.3, 12490.0], [59.4, 12494.0], [59.5, 12497.0], [59.6, 12499.0], [59.7, 12502.0], [59.8, 12504.0], [59.9, 12509.0], [60.0, 12510.0], [60.1, 12515.0], [60.2, 12517.0], [60.3, 12519.0], [60.4, 12523.0], [60.5, 12527.0], [60.6, 12530.0], [60.7, 12533.0], [60.8, 12535.0], [60.9, 12538.0], [61.0, 12541.0], [61.1, 12544.0], [61.2, 12547.0], [61.3, 12548.0], [61.4, 12552.0], [61.5, 12554.0], [61.6, 12557.0], [61.7, 12562.0], [61.8, 12566.0], [61.9, 12568.0], [62.0, 12571.0], [62.1, 12574.0], [62.2, 12577.0], [62.3, 12581.0], [62.4, 12583.0], [62.5, 12586.0], [62.6, 12591.0], [62.7, 12593.0], [62.8, 12596.0], [62.9, 12598.0], [63.0, 12602.0], [63.1, 12606.0], [63.2, 12609.0], [63.3, 12612.0], [63.4, 12614.0], [63.5, 12617.0], [63.6, 12621.0], [63.7, 12626.0], [63.8, 12629.0], [63.9, 12634.0], [64.0, 12638.0], [64.1, 12640.0], [64.2, 12643.0], [64.3, 12647.0], [64.4, 12649.0], [64.5, 12651.0], [64.6, 12656.0], [64.7, 12659.0], [64.8, 12661.0], [64.9, 12664.0], [65.0, 12667.0], [65.1, 12670.0], [65.2, 12674.0], [65.3, 12678.0], [65.4, 12682.0], [65.5, 12685.0], [65.6, 12690.0], [65.7, 12694.0], [65.8, 12698.0], [65.9, 12702.0], [66.0, 12704.0], [66.1, 12707.0], [66.2, 12711.0], [66.3, 12714.0], [66.4, 12716.0], [66.5, 12719.0], [66.6, 12721.0], [66.7, 12724.0], [66.8, 12727.0], [66.9, 12729.0], [67.0, 12733.0], [67.1, 12738.0], [67.2, 12740.0], [67.3, 12743.0], [67.4, 12745.0], [67.5, 12749.0], [67.6, 12753.0], [67.7, 12758.0], [67.8, 12762.0], [67.9, 12766.0], [68.0, 12770.0], [68.1, 12774.0], [68.2, 12777.0], [68.3, 12780.0], [68.4, 12785.0], [68.5, 12788.0], [68.6, 12792.0], [68.7, 12795.0], [68.8, 12799.0], [68.9, 12800.0], [69.0, 12800.0], [69.1, 12801.0], [69.2, 12804.0], [69.3, 12807.0], [69.4, 12809.0], [69.5, 12812.0], [69.6, 12818.0], [69.7, 12822.0], [69.8, 12826.0], [69.9, 12831.0], [70.0, 12835.0], [70.1, 12839.0], [70.2, 12842.0], [70.3, 12846.0], [70.4, 12849.0], [70.5, 12851.0], [70.6, 12853.0], [70.7, 12856.0], [70.8, 12859.0], [70.9, 12862.0], [71.0, 12865.0], [71.1, 12869.0], [71.2, 12872.0], [71.3, 12878.0], [71.4, 12881.0], [71.5, 12883.0], [71.6, 12886.0], [71.7, 12888.0], [71.8, 12895.0], [71.9, 12899.0], [72.0, 12902.0], [72.1, 12904.0], [72.2, 12907.0], [72.3, 12911.0], [72.4, 12914.0], [72.5, 12918.0], [72.6, 12926.0], [72.7, 12931.0], [72.8, 12938.0], [72.9, 12941.0], [73.0, 12946.0], [73.1, 12949.0], [73.2, 12953.0], [73.3, 12957.0], [73.4, 12962.0], [73.5, 12968.0], [73.6, 12971.0], [73.7, 12973.0], [73.8, 12975.0], [73.9, 12979.0], [74.0, 12983.0], [74.1, 12989.0], [74.2, 12993.0], [74.3, 12996.0], [74.4, 12998.0], [74.5, 13003.0], [74.6, 13007.0], [74.7, 13012.0], [74.8, 13018.0], [74.9, 13024.0], [75.0, 13027.0], [75.1, 13030.0], [75.2, 13034.0], [75.3, 13042.0], [75.4, 13048.0], [75.5, 13052.0], [75.6, 13056.0], [75.7, 13060.0], [75.8, 13064.0], [75.9, 13072.0], [76.0, 13075.0], [76.1, 13079.0], [76.2, 13083.0], [76.3, 13092.0], [76.4, 13095.0], [76.5, 13099.0], [76.6, 13110.0], [76.7, 13114.0], [76.8, 13118.0], [76.9, 13122.0], [77.0, 13128.0], [77.1, 13134.0], [77.2, 13140.0], [77.3, 13145.0], [77.4, 13150.0], [77.5, 13154.0], [77.6, 13158.0], [77.7, 13165.0], [77.8, 13170.0], [77.9, 13175.0], [78.0, 13179.0], [78.1, 13181.0], [78.2, 13184.0], [78.3, 13188.0], [78.4, 13192.0], [78.5, 13195.0], [78.6, 13200.0], [78.7, 13205.0], [78.8, 13215.0], [78.9, 13218.0], [79.0, 13224.0], [79.1, 13231.0], [79.2, 13234.0], [79.3, 13242.0], [79.4, 13249.0], [79.5, 13254.0], [79.6, 13257.0], [79.7, 13260.0], [79.8, 13263.0], [79.9, 13266.0], [80.0, 13269.0], [80.1, 13274.0], [80.2, 13279.0], [80.3, 13282.0], [80.4, 13286.0], [80.5, 13293.0], [80.6, 13298.0], [80.7, 13305.0], [80.8, 13307.0], [80.9, 13308.0], [81.0, 13308.0], [81.1, 13308.0], [81.2, 13308.0], [81.3, 13308.0], [81.4, 13309.0], [81.5, 13309.0], [81.6, 13311.0], [81.7, 13311.0], [81.8, 13311.0], [81.9, 13311.0], [82.0, 13311.0], [82.1, 13311.0], [82.2, 13311.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13312.0], [83.1, 13312.0], [83.2, 13312.0], [83.3, 13312.0], [83.4, 13312.0], [83.5, 13312.0], [83.6, 13312.0], [83.7, 13312.0], [83.8, 13312.0], [83.9, 13312.0], [84.0, 13312.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13312.0], [84.6, 13312.0], [84.7, 13312.0], [84.8, 13312.0], [84.9, 13312.0], [85.0, 13312.0], [85.1, 13312.0], [85.2, 13312.0], [85.3, 13312.0], [85.4, 13312.0], [85.5, 13312.0], [85.6, 13312.0], [85.7, 13313.0], [85.8, 13314.0], [85.9, 13315.0], [86.0, 13316.0], [86.1, 13316.0], [86.2, 13316.0], [86.3, 13316.0], [86.4, 13318.0], [86.5, 13325.0], [86.6, 13332.0], [86.7, 13339.0], [86.8, 13345.0], [86.9, 13349.0], [87.0, 13359.0], [87.1, 13363.0], [87.2, 13369.0], [87.3, 13376.0], [87.4, 13380.0], [87.5, 13388.0], [87.6, 13396.0], [87.7, 13402.0], [87.8, 13411.0], [87.9, 13418.0], [88.0, 13422.0], [88.1, 13436.0], [88.2, 13445.0], [88.3, 13451.0], [88.4, 13460.0], [88.5, 13465.0], [88.6, 13475.0], [88.7, 13486.0], [88.8, 13502.0], [88.9, 13518.0], [89.0, 13537.0], [89.1, 13548.0], [89.2, 13558.0], [89.3, 13568.0], [89.4, 13581.0], [89.5, 13590.0], [89.6, 13609.0], [89.7, 13633.0], [89.8, 13641.0], [89.9, 13660.0], [90.0, 13699.0], [90.1, 13726.0], [90.2, 13738.0], [90.3, 13756.0], [90.4, 13767.0], [90.5, 13787.0], [90.6, 13811.0], [90.7, 13820.0], [90.8, 13823.0], [90.9, 13824.0], [91.0, 13824.0], [91.1, 13824.0], [91.2, 13824.0], [91.3, 13824.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13826.0], [91.9, 13828.0], [92.0, 13830.0], [92.1, 13866.0], [92.2, 13886.0], [92.3, 13907.0], [92.4, 13924.0], [92.5, 13961.0], [92.6, 13998.0], [92.7, 14019.0], [92.8, 14046.0], [92.9, 14067.0], [93.0, 14080.0], [93.1, 14080.0], [93.2, 14084.0], [93.3, 14102.0], [93.4, 14136.0], [93.5, 14161.0], [93.6, 14199.0], [93.7, 14254.0], [93.8, 14284.0], [93.9, 14332.0], [94.0, 14335.0], [94.1, 14335.0], [94.2, 14336.0], [94.3, 14336.0], [94.4, 14336.0], [94.5, 14340.0], [94.6, 14383.0], [94.7, 14560.0], [94.8, 14592.0], [94.9, 14601.0], [95.0, 14810.0], [95.1, 14848.0], [95.2, 14943.0], [95.3, 15104.0], [95.4, 15214.0], [95.5, 15320.0], [95.6, 15360.0], [95.7, 15361.0], [95.8, 15602.0], [95.9, 15893.0], [96.0, 16238.0], [96.1, 16384.0], [96.2, 16885.0], [96.3, 17152.0], [96.4, 17156.0], [96.5, 17262.0], [96.6, 17987.0], [96.7, 18688.0], [96.8, 19592.0], [96.9, 19899.0], [97.0, 22251.0], [97.1, 22760.0], [97.2, 26364.0], [97.3, 26368.0], [97.4, 26368.0], [97.5, 26372.0], [97.6, 27801.0], [97.7, 31682.0], [97.8, 32887.0], [97.9, 34849.0], [98.0, 54724.0], [98.1, 56334.0], [98.2, 66204.0], [98.3, 75512.0], [98.4, 104192.0], [98.5, 105732.0], [98.6, 105981.0], [98.7, 106492.0], [98.8, 106574.0], [98.9, 106756.0], [99.0, 107772.0], [99.1, 108293.0], [99.2, 112132.0], [99.3, 115199.0], [99.4, 123652.0], [99.5, 126720.0], [99.6, 132096.0], [99.7, 136192.0], [99.8, 140545.0], [99.9, 192049.0], [100.0, 232885.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 3.0], [6.0, 4.0], [6.1, 23.0], [6.2, 614.0], [6.3, 615.0], [6.4, 741.0], [6.5, 762.0], [6.6, 811.0], [6.7, 969.0], [6.8, 1345.0], [6.9, 1377.0], [7.0, 1379.0], [7.1, 1445.0], [7.2, 1609.0], [7.3, 1790.0], [7.4, 2122.0], [7.5, 2169.0], [7.6, 2283.0], [7.7, 2296.0], [7.8, 2507.0], [7.9, 2630.0], [8.0, 2770.0], [8.1, 2964.0], [8.2, 3287.0], [8.3, 3603.0], [8.4, 3635.0], [8.5, 3766.0], [8.6, 3983.0], [8.7, 4151.0], [8.8, 4294.0], [8.9, 4403.0], [9.0, 4558.0], [9.1, 4715.0], [9.2, 4763.0], [9.3, 4778.0], [9.4, 4961.0], [9.5, 5083.0], [9.6, 5410.0], [9.7, 5523.0], [9.8, 5569.0], [9.9, 5791.0], [10.0, 5947.0], [10.1, 6458.0], [10.2, 6501.0], [10.3, 6640.0], [10.4, 6656.0], [10.5, 6686.0], [10.6, 7087.0], [10.7, 7164.0], [10.8, 7164.0], [10.9, 7167.0], [11.0, 7167.0], [11.1, 7167.0], [11.2, 7167.0], [11.3, 7167.0], [11.4, 7168.0], [11.5, 7168.0], [11.6, 7168.0], [11.7, 7168.0], [11.8, 7168.0], [11.9, 7168.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7170.0], [13.2, 7172.0], [13.3, 7172.0], [13.4, 7271.0], [13.5, 7420.0], [13.6, 7420.0], [13.7, 7420.0], [13.8, 7420.0], [13.9, 7420.0], [14.0, 7420.0], [14.1, 7423.0], [14.2, 7423.0], [14.3, 7423.0], [14.4, 7423.0], [14.5, 7424.0], [14.6, 7424.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7426.0], [17.1, 7427.0], [17.2, 7562.0], [17.3, 7628.0], [17.4, 7673.0], [17.5, 7674.0], [17.6, 7676.0], [17.7, 7676.0], [17.8, 7679.0], [17.9, 7679.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7684.0], [19.9, 7684.0], [20.0, 7685.0], [20.1, 7932.0], [20.2, 7936.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7938.0], [21.6, 7940.0], [21.7, 7940.0], [21.8, 7940.0], [21.9, 7978.0], [22.0, 8188.0], [22.1, 8188.0], [22.2, 8188.0], [22.3, 8190.0], [22.4, 8191.0], [22.5, 8192.0], [22.6, 8192.0], [22.7, 8192.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8195.0], [24.0, 8196.0], [24.1, 8196.0], [24.2, 8196.0], [24.3, 8196.0], [24.4, 8240.0], [24.5, 8409.0], [24.6, 8443.0], [24.7, 8443.0], [24.8, 8444.0], [24.9, 8444.0], [25.0, 8446.0], [25.1, 8447.0], [25.2, 8447.0], [25.3, 8447.0], [25.4, 8448.0], [25.5, 8448.0], [25.6, 8448.0], [25.7, 8448.0], [25.8, 8449.0], [25.9, 8453.0], [26.0, 8545.0], [26.1, 8657.0], [26.2, 8700.0], [26.3, 8700.0], [26.4, 8700.0], [26.5, 8703.0], [26.6, 8703.0], [26.7, 8703.0], [26.8, 8703.0], [26.9, 8703.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8704.0], [28.2, 8714.0], [28.3, 8955.0], [28.4, 8959.0], [28.5, 8959.0], [28.6, 8959.0], [28.7, 8960.0], [28.8, 8960.0], [28.9, 8960.0], [29.0, 8963.0], [29.1, 8963.0], [29.2, 8964.0], [29.3, 8964.0], [29.4, 8974.0], [29.5, 9075.0], [29.6, 9177.0], [29.7, 9210.0], [29.8, 9212.0], [29.9, 9212.0], [30.0, 9212.0], [30.1, 9212.0], [30.2, 9212.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9216.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9218.0], [32.0, 9219.0], [32.1, 9219.0], [32.2, 9219.0], [32.3, 9220.0], [32.4, 9220.0], [32.5, 9220.0], [32.6, 9472.0], [32.7, 9472.0], [32.8, 9472.0], [32.9, 9472.0], [33.0, 9557.0], [33.1, 9718.0], [33.2, 9723.0], [33.3, 9724.0], [33.4, 9727.0], [33.5, 9727.0], [33.6, 9727.0], [33.7, 9727.0], [33.8, 9727.0], [33.9, 9727.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9728.0], [35.3, 9979.0], [35.4, 9980.0], [35.5, 9983.0], [35.6, 9983.0], [35.7, 9984.0], [35.8, 9984.0], [35.9, 9984.0], [36.0, 9984.0], [36.1, 9984.0], [36.2, 9984.0], [36.3, 9984.0], [36.4, 9984.0], [36.5, 9984.0], [36.6, 9984.0], [36.7, 9984.0], [36.8, 9984.0], [36.9, 9984.0], [37.0, 9984.0], [37.1, 9987.0], [37.2, 10056.0], [37.3, 10235.0], [37.4, 10236.0], [37.5, 10239.0], [37.6, 10239.0], [37.7, 10239.0], [37.8, 10240.0], [37.9, 10240.0], [38.0, 10240.0], [38.1, 10240.0], [38.2, 10240.0], [38.3, 10240.0], [38.4, 10240.0], [38.5, 10240.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10241.0], [38.9, 10243.0], [39.0, 10244.0], [39.1, 10302.0], [39.2, 10394.0], [39.3, 10478.0], [39.4, 10495.0], [39.5, 10496.0], [39.6, 10496.0], [39.7, 10496.0], [39.8, 10499.0], [39.9, 10499.0], [40.0, 10521.0], [40.1, 10553.0], [40.2, 10595.0], [40.3, 10609.0], [40.4, 10631.0], [40.5, 10652.0], [40.6, 10656.0], [40.7, 10684.0], [40.8, 10709.0], [40.9, 10725.0], [41.0, 10749.0], [41.1, 10752.0], [41.2, 10752.0], [41.3, 10752.0], [41.4, 10752.0], [41.5, 10752.0], [41.6, 10752.0], [41.7, 10752.0], [41.8, 10752.0], [41.9, 10752.0], [42.0, 10752.0], [42.1, 10752.0], [42.2, 10752.0], [42.3, 10752.0], [42.4, 10756.0], [42.5, 10776.0], [42.6, 10811.0], [42.7, 10871.0], [42.8, 10933.0], [42.9, 10970.0], [43.0, 10973.0], [43.1, 10992.0], [43.2, 11002.0], [43.3, 11007.0], [43.4, 11007.0], [43.5, 11008.0], [43.6, 11008.0], [43.7, 11008.0], [43.8, 11036.0], [43.9, 11064.0], [44.0, 11082.0], [44.1, 11084.0], [44.2, 11090.0], [44.3, 11101.0], [44.4, 11110.0], [44.5, 11142.0], [44.6, 11150.0], [44.7, 11158.0], [44.8, 11160.0], [44.9, 11178.0], [45.0, 11180.0], [45.1, 11193.0], [45.2, 11210.0], [45.3, 11223.0], [45.4, 11230.0], [45.5, 11237.0], [45.6, 11263.0], [45.7, 11264.0], [45.8, 11264.0], [45.9, 11264.0], [46.0, 11268.0], [46.1, 11268.0], [46.2, 11268.0], [46.3, 11280.0], [46.4, 11311.0], [46.5, 11327.0], [46.6, 11332.0], [46.7, 11344.0], [46.8, 11355.0], [46.9, 11360.0], [47.0, 11379.0], [47.1, 11395.0], [47.2, 11427.0], [47.3, 11438.0], [47.4, 11443.0], [47.5, 11449.0], [47.6, 11472.0], [47.7, 11490.0], [47.8, 11494.0], [47.9, 11500.0], [48.0, 11515.0], [48.1, 11516.0], [48.2, 11519.0], [48.3, 11519.0], [48.4, 11520.0], [48.5, 11523.0], [48.6, 11523.0], [48.7, 11540.0], [48.8, 11551.0], [48.9, 11562.0], [49.0, 11571.0], [49.1, 11588.0], [49.2, 11618.0], [49.3, 11628.0], [49.4, 11652.0], [49.5, 11678.0], [49.6, 11693.0], [49.7, 11710.0], [49.8, 11727.0], [49.9, 11747.0], [50.0, 11761.0], [50.1, 11771.0], [50.2, 11772.0], [50.3, 11775.0], [50.4, 11775.0], [50.5, 11775.0], [50.6, 11775.0], [50.7, 11776.0], [50.8, 11776.0], [50.9, 11776.0], [51.0, 11776.0], [51.1, 11776.0], [51.2, 11776.0], [51.3, 11779.0], [51.4, 11780.0], [51.5, 11783.0], [51.6, 11794.0], [51.7, 11811.0], [51.8, 11827.0], [51.9, 11842.0], [52.0, 11857.0], [52.1, 11858.0], [52.2, 11885.0], [52.3, 11893.0], [52.4, 11901.0], [52.5, 11909.0], [52.6, 11917.0], [52.7, 11941.0], [52.8, 11978.0], [52.9, 11979.0], [53.0, 11987.0], [53.1, 12021.0], [53.2, 12027.0], [53.3, 12028.0], [53.4, 12032.0], [53.5, 12039.0], [53.6, 12083.0], [53.7, 12109.0], [53.8, 12127.0], [53.9, 12129.0], [54.0, 12161.0], [54.1, 12177.0], [54.2, 12219.0], [54.3, 12225.0], [54.4, 12232.0], [54.5, 12260.0], [54.6, 12284.0], [54.7, 12284.0], [54.8, 12287.0], [54.9, 12287.0], [55.0, 12287.0], [55.1, 12288.0], [55.2, 12288.0], [55.3, 12288.0], [55.4, 12288.0], [55.5, 12288.0], [55.6, 12288.0], [55.7, 12292.0], [55.8, 12300.0], [55.9, 12326.0], [56.0, 12331.0], [56.1, 12363.0], [56.2, 12426.0], [56.3, 12460.0], [56.4, 12467.0], [56.5, 12527.0], [56.6, 12540.0], [56.7, 12543.0], [56.8, 12548.0], [56.9, 12555.0], [57.0, 12568.0], [57.1, 12603.0], [57.2, 12611.0], [57.3, 12629.0], [57.4, 12710.0], [57.5, 12731.0], [57.6, 12761.0], [57.7, 12771.0], [57.8, 12790.0], [57.9, 12795.0], [58.0, 12799.0], [58.1, 12800.0], [58.2, 12800.0], [58.3, 12800.0], [58.4, 12800.0], [58.5, 12800.0], [58.6, 12800.0], [58.7, 12800.0], [58.8, 12800.0], [58.9, 12800.0], [59.0, 12803.0], [59.1, 12804.0], [59.2, 12829.0], [59.3, 12895.0], [59.4, 12933.0], [59.5, 12933.0], [59.6, 12954.0], [59.7, 12962.0], [59.8, 13056.0], [59.9, 13056.0], [60.0, 13102.0], [60.1, 13118.0], [60.2, 13124.0], [60.3, 13145.0], [60.4, 13170.0], [60.5, 13184.0], [60.6, 13223.0], [60.7, 13265.0], [60.8, 13306.0], [60.9, 13306.0], [61.0, 13307.0], [61.1, 13307.0], [61.2, 13307.0], [61.3, 13307.0], [61.4, 13307.0], [61.5, 13308.0], [61.6, 13308.0], [61.7, 13308.0], [61.8, 13308.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13308.0], [62.2, 13309.0], [62.3, 13310.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13314.0], [73.9, 13314.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13353.0], [75.6, 13359.0], [75.7, 13395.0], [75.8, 13489.0], [75.9, 13504.0], [76.0, 13509.0], [76.1, 13531.0], [76.2, 13566.0], [76.3, 13567.0], [76.4, 13577.0], [76.5, 13626.0], [76.6, 13751.0], [76.7, 13819.0], [76.8, 13820.0], [76.9, 13820.0], [77.0, 13820.0], [77.1, 13820.0], [77.2, 13820.0], [77.3, 13823.0], [77.4, 13823.0], [77.5, 13823.0], [77.6, 13823.0], [77.7, 13823.0], [77.8, 13824.0], [77.9, 13824.0], [78.0, 13824.0], [78.1, 13824.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13825.0], [81.4, 13827.0], [81.5, 13828.0], [81.6, 13828.0], [81.7, 13840.0], [81.8, 13858.0], [81.9, 13861.0], [82.0, 13890.0], [82.1, 13948.0], [82.2, 14042.0], [82.3, 14080.0], [82.4, 14080.0], [82.5, 14080.0], [82.6, 14080.0], [82.7, 14080.0], [82.8, 14080.0], [82.9, 14080.0], [83.0, 14080.0], [83.1, 14081.0], [83.2, 14084.0], [83.3, 14084.0], [83.4, 14120.0], [83.5, 14181.0], [83.6, 14213.0], [83.7, 14242.0], [83.8, 14293.0], [83.9, 14329.0], [84.0, 14332.0], [84.1, 14332.0], [84.2, 14332.0], [84.3, 14332.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14336.0], [86.6, 14338.0], [86.7, 14340.0], [86.8, 14344.0], [86.9, 14354.0], [87.0, 14377.0], [87.1, 14436.0], [87.2, 14570.0], [87.3, 14591.0], [87.4, 14592.0], [87.5, 14592.0], [87.6, 14592.0], [87.7, 14592.0], [87.8, 14596.0], [87.9, 14654.0], [88.0, 14844.0], [88.1, 14847.0], [88.2, 14847.0], [88.3, 14848.0], [88.4, 14848.0], [88.5, 14849.0], [88.6, 14942.0], [88.7, 15100.0], [88.8, 15104.0], [88.9, 15138.0], [89.0, 15359.0], [89.1, 15360.0], [89.2, 15360.0], [89.3, 15360.0], [89.4, 15360.0], [89.5, 15526.0], [89.6, 15536.0], [89.7, 15615.0], [89.8, 15616.0], [89.9, 15616.0], [90.0, 15630.0], [90.1, 15724.0], [90.2, 16047.0], [90.3, 16065.0], [90.4, 16248.0], [90.5, 16384.0], [90.6, 16384.0], [90.7, 16388.0], [90.8, 16640.0], [90.9, 17154.0], [91.0, 17155.0], [91.1, 17156.0], [91.2, 17403.0], [91.3, 17793.0], [91.4, 17817.0], [91.5, 18176.0], [91.6, 18306.0], [91.7, 18415.0], [91.8, 18688.0], [91.9, 18688.0], [92.0, 19456.0], [92.1, 19715.0], [92.2, 19862.0], [92.3, 20224.0], [92.4, 20224.0], [92.5, 20987.0], [92.6, 23296.0], [92.7, 25064.0], [92.8, 26368.0], [92.9, 26368.0], [93.0, 26368.0], [93.1, 26368.0], [93.2, 26368.0], [93.3, 26368.0], [93.4, 26368.0], [93.5, 26368.0], [93.6, 26368.0], [93.7, 26372.0], [93.8, 28667.0], [93.9, 28671.0], [94.0, 30854.0], [94.1, 31927.0], [94.2, 32780.0], [94.3, 32910.0], [94.4, 38907.0], [94.5, 50964.0], [94.6, 53248.0], [94.7, 53616.0], [94.8, 54907.0], [94.9, 68109.0], [95.0, 73728.0], [95.1, 85248.0], [95.2, 85248.0], [95.3, 104191.0], [95.4, 104192.0], [95.5, 104192.0], [95.6, 105980.0], [95.7, 105988.0], [95.8, 106492.0], [95.9, 106492.0], [96.0, 106492.0], [96.1, 106496.0], [96.2, 106747.0], [96.3, 106747.0], [96.4, 106747.0], [96.5, 106748.0], [96.6, 106748.0], [96.7, 106748.0], [96.8, 106751.0], [96.9, 106752.0], [97.0, 107266.0], [97.1, 107520.0], [97.2, 108292.0], [97.3, 108292.0], [97.4, 108292.0], [97.5, 108800.0], [97.6, 111108.0], [97.7, 111108.0], [97.8, 114176.0], [97.9, 114432.0], [98.0, 114939.0], [98.1, 114939.0], [98.2, 120575.0], [98.3, 124385.0], [98.4, 126719.0], [98.5, 126720.0], [98.6, 126720.0], [98.7, 126720.0], [98.8, 130812.0], [98.9, 130816.0], [99.0, 135940.0], [99.1, 136192.0], [99.2, 140544.0], [99.3, 140545.0], [99.4, 151070.0], [99.5, 160512.0], [99.6, 170239.0], [99.7, 222207.0], [99.8, 222208.0], [99.9, 222208.0], [100.0, 230655.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 4.0], [6.4, 6.0], [6.5, 23.0], [6.6, 27.0], [6.7, 30.0], [6.8, 32.0], [6.9, 36.0], [7.0, 40.0], [7.1, 48.0], [7.2, 51.0], [7.3, 157.0], [7.4, 223.0], [7.5, 375.0], [7.6, 559.0], [7.7, 634.0], [7.8, 925.0], [7.9, 1144.0], [8.0, 1357.0], [8.1, 1411.0], [8.2, 1560.0], [8.3, 1772.0], [8.4, 1881.0], [8.5, 2167.0], [8.6, 2263.0], [8.7, 2694.0], [8.8, 2867.0], [8.9, 2926.0], [9.0, 2947.0], [9.1, 3070.0], [9.2, 3152.0], [9.3, 3173.0], [9.4, 3407.0], [9.5, 3491.0], [9.6, 3763.0], [9.7, 3901.0], [9.8, 3951.0], [9.9, 4133.0], [10.0, 4202.0], [10.1, 4220.0], [10.2, 4465.0], [10.3, 4717.0], [10.4, 5398.0], [10.5, 5595.0], [10.6, 5825.0], [10.7, 5846.0], [10.8, 5917.0], [10.9, 5944.0], [11.0, 6002.0], [11.1, 6045.0], [11.2, 6081.0], [11.3, 6300.0], [11.4, 6799.0], [11.5, 6845.0], [11.6, 7069.0], [11.7, 7085.0], [11.8, 7107.0], [11.9, 7138.0], [12.0, 7150.0], [12.1, 7164.0], [12.2, 7164.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7169.0], [14.5, 7172.0], [14.6, 7172.0], [14.7, 7217.0], [14.8, 7222.0], [14.9, 7262.0], [15.0, 7287.0], [15.1, 7312.0], [15.2, 7334.0], [15.3, 7349.0], [15.4, 7377.0], [15.5, 7419.0], [15.6, 7420.0], [15.7, 7420.0], [15.8, 7420.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7423.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7425.0], [18.1, 7425.0], [18.2, 7427.0], [18.3, 7481.0], [18.4, 7617.0], [18.5, 7663.0], [18.6, 7676.0], [18.7, 7676.0], [18.8, 7676.0], [18.9, 7676.0], [19.0, 7679.0], [19.1, 7679.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7681.0], [20.4, 7682.0], [20.5, 7683.0], [20.6, 7684.0], [20.7, 7685.0], [20.8, 7710.0], [20.9, 7747.0], [21.0, 7763.0], [21.1, 7827.0], [21.2, 7833.0], [21.3, 7932.0], [21.4, 7935.0], [21.5, 7935.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7940.0], [22.6, 7940.0], [22.7, 7941.0], [22.8, 7993.0], [22.9, 8084.0], [23.0, 8139.0], [23.1, 8166.0], [23.2, 8187.0], [23.3, 8188.0], [23.4, 8188.0], [23.5, 8188.0], [23.6, 8191.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8192.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8196.0], [25.3, 8196.0], [25.4, 8196.0], [25.5, 8196.0], [25.6, 8262.0], [25.7, 8348.0], [25.8, 8370.0], [25.9, 8442.0], [26.0, 8447.0], [26.1, 8448.0], [26.2, 8448.0], [26.3, 8448.0], [26.4, 8448.0], [26.5, 8448.0], [26.6, 8448.0], [26.7, 8455.0], [26.8, 8478.0], [26.9, 8556.0], [27.0, 8632.0], [27.1, 8638.0], [27.2, 8646.0], [27.3, 8667.0], [27.4, 8697.0], [27.5, 8698.0], [27.6, 8700.0], [27.7, 8700.0], [27.8, 8700.0], [27.9, 8701.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8704.0], [29.8, 8704.0], [29.9, 8704.0], [30.0, 8704.0], [30.1, 8706.0], [30.2, 8708.0], [30.3, 8715.0], [30.4, 8735.0], [30.5, 8809.0], [30.6, 8890.0], [30.7, 8956.0], [30.8, 8956.0], [30.9, 8960.0], [31.0, 8960.0], [31.1, 8960.0], [31.2, 8960.0], [31.3, 8960.0], [31.4, 8964.0], [31.5, 8964.0], [31.6, 9042.0], [31.7, 9121.0], [31.8, 9155.0], [31.9, 9201.0], [32.0, 9211.0], [32.1, 9211.0], [32.2, 9212.0], [32.3, 9212.0], [32.4, 9212.0], [32.5, 9212.0], [32.6, 9212.0], [32.7, 9212.0], [32.8, 9215.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9216.0], [33.9, 9216.0], [34.0, 9216.0], [34.1, 9216.0], [34.2, 9216.0], [34.3, 9217.0], [34.4, 9220.0], [34.5, 9220.0], [34.6, 9220.0], [34.7, 9220.0], [34.8, 9250.0], [34.9, 9470.0], [35.0, 9471.0], [35.1, 9471.0], [35.2, 9472.0], [35.3, 9484.0], [35.4, 9524.0], [35.5, 9574.0], [35.6, 9639.0], [35.7, 9696.0], [35.8, 9707.0], [35.9, 9724.0], [36.0, 9724.0], [36.1, 9726.0], [36.2, 9727.0], [36.3, 9727.0], [36.4, 9727.0], [36.5, 9727.0], [36.6, 9728.0], [36.7, 9728.0], [36.8, 9728.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9728.0], [37.9, 9728.0], [38.0, 9732.0], [38.1, 9749.0], [38.2, 9828.0], [38.3, 9845.0], [38.4, 9860.0], [38.5, 9892.0], [38.6, 9974.0], [38.7, 9980.0], [38.8, 9980.0], [38.9, 9980.0], [39.0, 9983.0], [39.1, 9984.0], [39.2, 9984.0], [39.3, 9984.0], [39.4, 9984.0], [39.5, 9984.0], [39.6, 9984.0], [39.7, 9984.0], [39.8, 9984.0], [39.9, 9987.0], [40.0, 10018.0], [40.1, 10044.0], [40.2, 10120.0], [40.3, 10147.0], [40.4, 10180.0], [40.5, 10221.0], [40.6, 10234.0], [40.7, 10236.0], [40.8, 10236.0], [40.9, 10239.0], [41.0, 10239.0], [41.1, 10239.0], [41.2, 10240.0], [41.3, 10240.0], [41.4, 10240.0], [41.5, 10240.0], [41.6, 10240.0], [41.7, 10240.0], [41.8, 10240.0], [41.9, 10240.0], [42.0, 10240.0], [42.1, 10240.0], [42.2, 10240.0], [42.3, 10240.0], [42.4, 10240.0], [42.5, 10240.0], [42.6, 10243.0], [42.7, 10249.0], [42.8, 10260.0], [42.9, 10276.0], [43.0, 10323.0], [43.1, 10328.0], [43.2, 10355.0], [43.3, 10443.0], [43.4, 10457.0], [43.5, 10468.0], [43.6, 10486.0], [43.7, 10488.0], [43.8, 10490.0], [43.9, 10496.0], [44.0, 10500.0], [44.1, 10500.0], [44.2, 10532.0], [44.3, 10559.0], [44.4, 10568.0], [44.5, 10576.0], [44.6, 10578.0], [44.7, 10586.0], [44.8, 10593.0], [44.9, 10613.0], [45.0, 10643.0], [45.1, 10661.0], [45.2, 10682.0], [45.3, 10699.0], [45.4, 10716.0], [45.5, 10748.0], [45.6, 10749.0], [45.7, 10751.0], [45.8, 10752.0], [45.9, 10752.0], [46.0, 10752.0], [46.1, 10752.0], [46.2, 10752.0], [46.3, 10752.0], [46.4, 10752.0], [46.5, 10752.0], [46.6, 10784.0], [46.7, 10805.0], [46.8, 10808.0], [46.9, 10827.0], [47.0, 10843.0], [47.1, 10852.0], [47.2, 10877.0], [47.3, 10898.0], [47.4, 10924.0], [47.5, 10958.0], [47.6, 10974.0], [47.7, 10984.0], [47.8, 11004.0], [47.9, 11007.0], [48.0, 11008.0], [48.1, 11008.0], [48.2, 11008.0], [48.3, 11008.0], [48.4, 11008.0], [48.5, 11008.0], [48.6, 11012.0], [48.7, 11014.0], [48.8, 11034.0], [48.9, 11047.0], [49.0, 11072.0], [49.1, 11079.0], [49.2, 11091.0], [49.3, 11098.0], [49.4, 11101.0], [49.5, 11128.0], [49.6, 11149.0], [49.7, 11203.0], [49.8, 11234.0], [49.9, 11262.0], [50.0, 11263.0], [50.1, 11264.0], [50.2, 11264.0], [50.3, 11264.0], [50.4, 11265.0], [50.5, 11268.0], [50.6, 11268.0], [50.7, 11278.0], [50.8, 11338.0], [50.9, 11365.0], [51.0, 11393.0], [51.1, 11406.0], [51.2, 11452.0], [51.3, 11475.0], [51.4, 11487.0], [51.5, 11506.0], [51.6, 11515.0], [51.7, 11516.0], [51.8, 11519.0], [51.9, 11520.0], [52.0, 11520.0], [52.1, 11520.0], [52.2, 11520.0], [52.3, 11520.0], [52.4, 11521.0], [52.5, 11529.0], [52.6, 11534.0], [52.7, 11595.0], [52.8, 11599.0], [52.9, 11622.0], [53.0, 11634.0], [53.1, 11653.0], [53.2, 11675.0], [53.3, 11703.0], [53.4, 11771.0], [53.5, 11772.0], [53.6, 11775.0], [53.7, 11776.0], [53.8, 11776.0], [53.9, 11776.0], [54.0, 11776.0], [54.1, 11776.0], [54.2, 11776.0], [54.3, 11780.0], [54.4, 11799.0], [54.5, 11810.0], [54.6, 11836.0], [54.7, 11900.0], [54.8, 11904.0], [54.9, 11947.0], [55.0, 11974.0], [55.1, 12000.0], [55.2, 12021.0], [55.3, 12032.0], [55.4, 12032.0], [55.5, 12039.0], [55.6, 12118.0], [55.7, 12142.0], [55.8, 12150.0], [55.9, 12176.0], [56.0, 12229.0], [56.1, 12277.0], [56.2, 12284.0], [56.3, 12286.0], [56.4, 12287.0], [56.5, 12288.0], [56.6, 12288.0], [56.7, 12288.0], [56.8, 12288.0], [56.9, 12288.0], [57.0, 12288.0], [57.1, 12288.0], [57.2, 12288.0], [57.3, 12288.0], [57.4, 12292.0], [57.5, 12317.0], [57.6, 12412.0], [57.7, 12416.0], [57.8, 12443.0], [57.9, 12487.0], [58.0, 12496.0], [58.1, 12537.0], [58.2, 12548.0], [58.3, 12548.0], [58.4, 12602.0], [58.5, 12766.0], [58.6, 12799.0], [58.7, 12799.0], [58.8, 12800.0], [58.9, 12800.0], [59.0, 12800.0], [59.1, 12800.0], [59.2, 12812.0], [59.3, 12844.0], [59.4, 12857.0], [59.5, 12885.0], [59.6, 12989.0], [59.7, 13056.0], [59.8, 13112.0], [59.9, 13142.0], [60.0, 13174.0], [60.1, 13198.0], [60.2, 13203.0], [60.3, 13209.0], [60.4, 13215.0], [60.5, 13222.0], [60.6, 13227.0], [60.7, 13237.0], [60.8, 13240.0], [60.9, 13243.0], [61.0, 13262.0], [61.1, 13280.0], [61.2, 13290.0], [61.3, 13299.0], [61.4, 13307.0], [61.5, 13308.0], [61.6, 13308.0], [61.7, 13308.0], [61.8, 13308.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13308.0], [62.2, 13308.0], [62.3, 13308.0], [62.4, 13308.0], [62.5, 13308.0], [62.6, 13308.0], [62.7, 13309.0], [62.8, 13309.0], [62.9, 13310.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13314.0], [73.7, 13315.0], [73.8, 13315.0], [73.9, 13315.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13317.0], [75.2, 13329.0], [75.3, 13339.0], [75.4, 13343.0], [75.5, 13352.0], [75.6, 13359.0], [75.7, 13374.0], [75.8, 13398.0], [75.9, 13400.0], [76.0, 13406.0], [76.1, 13412.0], [76.2, 13431.0], [76.3, 13481.0], [76.4, 13489.0], [76.5, 13504.0], [76.6, 13530.0], [76.7, 13567.0], [76.8, 13568.0], [76.9, 13595.0], [77.0, 13606.0], [77.1, 13630.0], [77.2, 13657.0], [77.3, 13688.0], [77.4, 13697.0], [77.5, 13739.0], [77.6, 13767.0], [77.7, 13820.0], [77.8, 13820.0], [77.9, 13822.0], [78.0, 13824.0], [78.1, 13824.0], [78.2, 13824.0], [78.3, 13824.0], [78.4, 13824.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13825.0], [80.5, 13826.0], [80.6, 13828.0], [80.7, 13828.0], [80.8, 13828.0], [80.9, 13829.0], [81.0, 13846.0], [81.1, 13873.0], [81.2, 13881.0], [81.3, 13894.0], [81.4, 13952.0], [81.5, 13963.0], [81.6, 14069.0], [81.7, 14080.0], [81.8, 14080.0], [81.9, 14080.0], [82.0, 14080.0], [82.1, 14083.0], [82.2, 14083.0], [82.3, 14084.0], [82.4, 14169.0], [82.5, 14178.0], [82.6, 14187.0], [82.7, 14222.0], [82.8, 14227.0], [82.9, 14276.0], [83.0, 14315.0], [83.1, 14332.0], [83.2, 14332.0], [83.3, 14332.0], [83.4, 14333.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14336.0], [85.0, 14337.0], [85.1, 14338.0], [85.2, 14340.0], [85.3, 14482.0], [85.4, 14499.0], [85.5, 14552.0], [85.6, 14588.0], [85.7, 14592.0], [85.8, 14592.0], [85.9, 14592.0], [86.0, 14592.0], [86.1, 14596.0], [86.2, 14598.0], [86.3, 14646.0], [86.4, 14847.0], [86.5, 14848.0], [86.6, 14852.0], [86.7, 14893.0], [86.8, 15095.0], [86.9, 15104.0], [87.0, 15159.0], [87.1, 15263.0], [87.2, 15327.0], [87.3, 15359.0], [87.4, 15360.0], [87.5, 15360.0], [87.6, 15412.0], [87.7, 15616.0], [87.8, 15825.0], [87.9, 15876.0], [88.0, 16228.0], [88.1, 16384.0], [88.2, 16384.0], [88.3, 16386.0], [88.4, 16511.0], [88.5, 16640.0], [88.6, 17152.0], [88.7, 17156.0], [88.8, 17157.0], [88.9, 17920.0], [89.0, 17976.0], [89.1, 18176.0], [89.2, 18688.0], [89.3, 18688.0], [89.4, 18737.0], [89.5, 19456.0], [89.6, 19711.0], [89.7, 19712.0], [89.8, 19716.0], [89.9, 19716.0], [90.0, 20849.0], [90.1, 22456.0], [90.2, 24630.0], [90.3, 26254.0], [90.4, 26364.0], [90.5, 26367.0], [90.6, 26368.0], [90.7, 26368.0], [90.8, 26368.0], [90.9, 26368.0], [91.0, 26368.0], [91.1, 26368.0], [91.2, 26368.0], [91.3, 26368.0], [91.4, 26375.0], [91.5, 26602.0], [91.6, 26930.0], [91.7, 28475.0], [91.8, 28671.0], [91.9, 30388.0], [92.0, 30813.0], [92.1, 30996.0], [92.2, 31905.0], [92.3, 32048.0], [92.4, 32876.0], [92.5, 32928.0], [92.6, 37999.0], [92.7, 38399.0], [92.8, 38400.0], [92.9, 44432.0], [93.0, 51527.0], [93.1, 52766.0], [93.2, 53628.0], [93.3, 53952.0], [93.4, 59339.0], [93.5, 59394.0], [93.6, 59867.0], [93.7, 62816.0], [93.8, 64793.0], [93.9, 67784.0], [94.0, 67823.0], [94.1, 70240.0], [94.2, 71148.0], [94.3, 74752.0], [94.4, 78463.0], [94.5, 81803.0], [94.6, 85248.0], [94.7, 86564.0], [94.8, 98526.0], [94.9, 104192.0], [95.0, 105419.0], [95.1, 105523.0], [95.2, 105636.0], [95.3, 105732.0], [95.4, 105732.0], [95.5, 105843.0], [95.6, 105980.0], [95.7, 105991.0], [95.8, 106039.0], [95.9, 106192.0], [96.0, 106441.0], [96.1, 106492.0], [96.2, 106522.0], [96.3, 106546.0], [96.4, 106548.0], [96.5, 106549.0], [96.6, 106617.0], [96.7, 106752.0], [96.8, 106755.0], [96.9, 106842.0], [97.0, 106898.0], [97.1, 106939.0], [97.2, 107007.0], [97.3, 107042.0], [97.4, 107136.0], [97.5, 107235.0], [97.6, 107991.0], [97.7, 108682.0], [97.8, 110577.0], [97.9, 111104.0], [98.0, 111108.0], [98.1, 112131.0], [98.2, 114246.0], [98.3, 114428.0], [98.4, 115200.0], [98.5, 116096.0], [98.6, 121347.0], [98.7, 126720.0], [98.8, 128768.0], [98.9, 135939.0], [99.0, 136115.0], [99.1, 136192.0], [99.2, 137404.0], [99.3, 140543.0], [99.4, 140544.0], [99.5, 140544.0], [99.6, 148062.0], [99.7, 160512.0], [99.8, 170240.0], [99.9, 219159.0], [100.0, 222207.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 626.0, "series": [{"data": [[0.0, 272.0], [132000.0, 1.0], [232800.0, 1.0], [136100.0, 4.0], [137700.0, 1.0], [75500.0, 1.0], [105900.0, 9.0], [106700.0, 9.0], [107500.0, 2.0], [126700.0, 12.0], [32900.0, 1.0], [34100.0, 1.0], [34500.0, 1.0], [52100.0, 1.0], [55700.0, 2.0], [56100.0, 1.0], [60500.0, 1.0], [60900.0, 2.0], [69000.0, 1.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 6.0], [115400.0, 1.0], [120200.0, 1.0], [128200.0, 1.0], [1100.0, 2.0], [1200.0, 18.0], [1300.0, 30.0], [1400.0, 34.0], [1500.0, 20.0], [1600.0, 17.0], [1700.0, 20.0], [1800.0, 8.0], [1900.0, 10.0], [2000.0, 17.0], [2100.0, 18.0], [2300.0, 10.0], [2200.0, 9.0], [2400.0, 11.0], [2500.0, 10.0], [160500.0, 3.0], [2600.0, 9.0], [2800.0, 17.0], [2700.0, 21.0], [2900.0, 15.0], [3000.0, 27.0], [3100.0, 11.0], [3200.0, 18.0], [3300.0, 9.0], [211700.0, 1.0], [3400.0, 4.0], [3500.0, 6.0], [3600.0, 4.0], [3700.0, 3.0], [3800.0, 4.0], [3900.0, 10.0], [4000.0, 17.0], [4200.0, 17.0], [4300.0, 22.0], [4100.0, 23.0], [4400.0, 25.0], [4500.0, 20.0], [4600.0, 19.0], [4800.0, 13.0], [4700.0, 14.0], [76900.0, 1.0], [5000.0, 12.0], [5100.0, 10.0], [4900.0, 8.0], [5200.0, 21.0], [5300.0, 24.0], [5400.0, 33.0], [5600.0, 14.0], [5500.0, 19.0], [5700.0, 9.0], [5800.0, 4.0], [6000.0, 14.0], [5900.0, 11.0], [6100.0, 4.0], [6200.0, 6.0], [6300.0, 3.0], [6600.0, 5.0], [6400.0, 3.0], [6500.0, 7.0], [105700.0, 5.0], [104100.0, 5.0], [6800.0, 7.0], [6900.0, 6.0], [6700.0, 7.0], [106500.0, 5.0], [7000.0, 22.0], [7100.0, 148.0], [112100.0, 2.0], [7300.0, 30.0], [7400.0, 103.0], [7200.0, 51.0], [7500.0, 15.0], [7600.0, 109.0], [7700.0, 10.0], [7800.0, 8.0], [7900.0, 62.0], [8000.0, 6.0], [8100.0, 66.0], [8200.0, 22.0], [8300.0, 28.0], [8400.0, 56.0], [8500.0, 21.0], [8600.0, 27.0], [8700.0, 107.0], [8900.0, 39.0], [9200.0, 85.0], [9000.0, 15.0], [8800.0, 4.0], [9100.0, 5.0], [9400.0, 21.0], [9300.0, 10.0], [9500.0, 7.0], [9700.0, 80.0], [9600.0, 9.0], [9800.0, 12.0], [10100.0, 6.0], [10200.0, 42.0], [9900.0, 58.0], [10000.0, 9.0], [10400.0, 22.0], [10300.0, 7.0], [10500.0, 14.0], [10600.0, 7.0], [10700.0, 40.0], [10900.0, 18.0], [10800.0, 7.0], [11100.0, 27.0], [11200.0, 55.0], [11000.0, 58.0], [11500.0, 90.0], [11400.0, 43.0], [11300.0, 35.0], [11600.0, 122.0], [11700.0, 187.0], [12000.0, 303.0], [12200.0, 406.0], [11800.0, 227.0], [11900.0, 265.0], [12100.0, 331.0], [12700.0, 272.0], [12600.0, 260.0], [12300.0, 335.0], [12500.0, 297.0], [12400.0, 371.0], [12800.0, 273.0], [13000.0, 185.0], [13100.0, 187.0], [12900.0, 222.0], [13200.0, 184.0], [13300.0, 626.0], [13500.0, 70.0], [13400.0, 99.0], [13700.0, 50.0], [13600.0, 40.0], [13800.0, 150.0], [14000.0, 61.0], [13900.0, 33.0], [14100.0, 28.0], [14200.0, 19.0], [14300.0, 70.0], [222200.0, 3.0], [14500.0, 22.0], [14400.0, 4.0], [14800.0, 17.0], [14600.0, 6.0], [14700.0, 2.0], [15300.0, 21.0], [15000.0, 3.0], [15100.0, 13.0], [15200.0, 9.0], [14900.0, 4.0], [15600.0, 4.0], [15500.0, 2.0], [15800.0, 4.0], [15700.0, 3.0], [15400.0, 2.0], [15900.0, 4.0], [16300.0, 9.0], [16000.0, 1.0], [16200.0, 3.0], [16100.0, 3.0], [16800.0, 4.0], [16600.0, 3.0], [17400.0, 4.0], [17200.0, 5.0], [17000.0, 1.0], [18200.0, 2.0], [17800.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [19200.0, 1.0], [18600.0, 4.0], [18800.0, 1.0], [19400.0, 1.0], [19800.0, 1.0], [19600.0, 1.0], [20400.0, 1.0], [20200.0, 3.0], [21400.0, 1.0], [22200.0, 3.0], [21800.0, 1.0], [22400.0, 2.0], [22600.0, 2.0], [23600.0, 1.0], [24400.0, 1.0], [26200.0, 1.0], [26400.0, 2.0], [27600.0, 1.0], [27400.0, 1.0], [27000.0, 1.0], [27800.0, 1.0], [28600.0, 1.0], [29200.0, 1.0], [30400.0, 2.0], [31600.0, 1.0], [31000.0, 2.0], [32000.0, 4.0], [32200.0, 1.0], [135100.0, 1.0], [33200.0, 1.0], [34400.0, 1.0], [32800.0, 1.0], [34800.0, 1.0], [38400.0, 2.0], [52000.0, 1.0], [55600.0, 1.0], [56000.0, 2.0], [61200.0, 1.0], [69600.0, 1.0], [94400.0, 1.0], [105600.0, 1.0], [106400.0, 11.0], [107200.0, 2.0], [108000.0, 1.0], [108800.0, 2.0], [114400.0, 3.0], [115200.0, 5.0], [192000.0, 1.0], [213700.0, 2.0], [87900.0, 1.0], [111100.0, 2.0], [115100.0, 3.0], [128700.0, 1.0], [230600.0, 1.0], [34700.0, 1.0], [38300.0, 2.0], [39900.0, 1.0], [47500.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [60700.0, 1.0], [61500.0, 1.0], [69400.0, 2.0], [66200.0, 2.0], [72600.0, 1.0], [105400.0, 2.0], [107000.0, 1.0], [140500.0, 8.0], [105300.0, 1.0], [107700.0, 3.0], [108500.0, 3.0], [106900.0, 1.0], [114900.0, 4.0], [170200.0, 4.0], [17100.0, 19.0], [16900.0, 3.0], [17300.0, 1.0], [17900.0, 2.0], [18100.0, 2.0], [18900.0, 1.0], [19100.0, 2.0], [19700.0, 7.0], [19500.0, 2.0], [22100.0, 2.0], [22500.0, 1.0], [22700.0, 1.0], [25500.0, 1.0], [25100.0, 1.0], [26300.0, 30.0], [26100.0, 2.0], [27300.0, 2.0], [28100.0, 1.0], [30300.0, 1.0], [31900.0, 1.0], [32100.0, 1.0], [32500.0, 1.0], [135900.0, 4.0], [34200.0, 2.0], [140700.0, 1.0], [56200.0, 2.0], [60600.0, 1.0], [61400.0, 1.0], [69200.0, 1.0], [73200.0, 1.0], [85200.0, 2.0], [123600.0, 1.0], [130800.0, 3.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 114.0], [136100.0, 2.0], [67500.0, 1.0], [105900.0, 3.0], [106700.0, 14.0], [107500.0, 1.0], [124300.0, 1.0], [126700.0, 7.0], [32900.0, 1.0], [38900.0, 1.0], [50900.0, 2.0], [54900.0, 1.0], [95400.0, 1.0], [108200.0, 4.0], [600.0, 3.0], [700.0, 5.0], [800.0, 1.0], [900.0, 3.0], [1300.0, 4.0], [1400.0, 2.0], [1600.0, 3.0], [1700.0, 1.0], [1900.0, 1.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 1.0], [2500.0, 2.0], [160500.0, 3.0], [2600.0, 2.0], [2700.0, 1.0], [2900.0, 2.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3600.0, 2.0], [3700.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 1.0], [68100.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [73700.0, 1.0], [4700.0, 5.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 2.0], [5200.0, 1.0], [5500.0, 2.0], [5400.0, 2.0], [5700.0, 3.0], [5900.0, 1.0], [6000.0, 1.0], [6600.0, 5.0], [6500.0, 1.0], [6400.0, 2.0], [104100.0, 5.0], [105700.0, 1.0], [6900.0, 1.0], [106500.0, 1.0], [110500.0, 1.0], [7000.0, 1.0], [7100.0, 50.0], [112100.0, 1.0], [7200.0, 2.0], [7300.0, 1.0], [7400.0, 69.0], [7500.0, 2.0], [7600.0, 51.0], [7900.0, 35.0], [7700.0, 1.0], [8100.0, 45.0], [8200.0, 1.0], [8400.0, 27.0], [8600.0, 3.0], [8500.0, 2.0], [8700.0, 38.0], [9000.0, 2.0], [8900.0, 22.0], [9100.0, 3.0], [9200.0, 53.0], [9400.0, 8.0], [9500.0, 1.0], [9600.0, 1.0], [9700.0, 41.0], [10000.0, 1.0], [10200.0, 35.0], [9900.0, 35.0], [10500.0, 7.0], [10700.0, 33.0], [10600.0, 9.0], [10300.0, 2.0], [10400.0, 13.0], [10900.0, 9.0], [11100.0, 17.0], [11000.0, 20.0], [11200.0, 22.0], [10800.0, 3.0], [11300.0, 14.0], [11400.0, 14.0], [11600.0, 10.0], [11500.0, 23.0], [11700.0, 37.0], [12200.0, 31.0], [11800.0, 13.0], [11900.0, 14.0], [12100.0, 9.0], [12000.0, 10.0], [12400.0, 6.0], [12600.0, 5.0], [12700.0, 13.0], [12500.0, 12.0], [12300.0, 6.0], [13200.0, 5.0], [12900.0, 7.0], [13300.0, 277.0], [13100.0, 10.0], [13000.0, 5.0], [12800.0, 24.0], [13800.0, 100.0], [13500.0, 11.0], [13700.0, 2.0], [13400.0, 3.0], [13600.0, 1.0], [14100.0, 4.0], [13900.0, 3.0], [14200.0, 5.0], [14300.0, 60.0], [14000.0, 22.0], [222200.0, 6.0], [14500.0, 12.0], [14600.0, 2.0], [14800.0, 12.0], [14400.0, 2.0], [15000.0, 1.0], [15300.0, 11.0], [15100.0, 4.0], [14900.0, 1.0], [15500.0, 3.0], [15600.0, 8.0], [15700.0, 2.0], [16300.0, 6.0], [16200.0, 1.0], [16100.0, 1.0], [16000.0, 2.0], [17400.0, 2.0], [16600.0, 2.0], [18400.0, 1.0], [17800.0, 2.0], [18600.0, 4.0], [19400.0, 1.0], [19800.0, 1.0], [20200.0, 4.0], [23200.0, 1.0], [25000.0, 2.0], [28600.0, 3.0], [29600.0, 1.0], [30800.0, 1.0], [32800.0, 1.0], [38400.0, 1.0], [53200.0, 2.0], [53600.0, 1.0], [106400.0, 7.0], [107200.0, 2.0], [108800.0, 1.0], [114400.0, 2.0], [115200.0, 1.0], [71100.0, 1.0], [111100.0, 3.0], [128700.0, 1.0], [230600.0, 1.0], [107000.0, 1.0], [140500.0, 4.0], [108500.0, 1.0], [107700.0, 1.0], [114100.0, 1.0], [114900.0, 3.0], [120500.0, 2.0], [151000.0, 1.0], [170200.0, 1.0], [17100.0, 6.0], [18100.0, 2.0], [18300.0, 1.0], [17900.0, 1.0], [17700.0, 1.0], [18700.0, 1.0], [19700.0, 3.0], [20900.0, 1.0], [21100.0, 1.0], [26300.0, 19.0], [30900.0, 1.0], [31900.0, 2.0], [32700.0, 1.0], [135900.0, 1.0], [54200.0, 1.0], [85200.0, 3.0], [130800.0, 4.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 141.0], [148000.0, 1.0], [136100.0, 3.0], [74700.0, 1.0], [84300.0, 1.0], [105900.0, 5.0], [103500.0, 1.0], [106700.0, 5.0], [114700.0, 1.0], [126700.0, 3.0], [100.0, 2.0], [33700.0, 1.0], [32900.0, 1.0], [38100.0, 1.0], [50900.0, 1.0], [200.0, 2.0], [52500.0, 1.0], [59300.0, 3.0], [65300.0, 1.0], [300.0, 1.0], [81800.0, 1.0], [400.0, 1.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 1.0], [109800.0, 1.0], [111400.0, 1.0], [500.0, 1.0], [600.0, 2.0], [700.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1300.0, 2.0], [1400.0, 3.0], [1500.0, 1.0], [1700.0, 2.0], [1800.0, 3.0], [2100.0, 2.0], [2200.0, 1.0], [160500.0, 1.0], [2600.0, 3.0], [2800.0, 1.0], [2900.0, 3.0], [3000.0, 3.0], [189300.0, 1.0], [3100.0, 3.0], [3200.0, 1.0], [3400.0, 3.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 4.0], [4100.0, 2.0], [4200.0, 3.0], [68900.0, 1.0], [4400.0, 2.0], [4600.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 2.0], [86500.0, 1.0], [5800.0, 3.0], [5700.0, 1.0], [6000.0, 6.0], [5900.0, 4.0], [6300.0, 1.0], [98500.0, 1.0], [6400.0, 1.0], [105700.0, 4.0], [104100.0, 2.0], [6700.0, 1.0], [6800.0, 2.0], [107300.0, 1.0], [106500.0, 7.0], [110500.0, 1.0], [7000.0, 5.0], [7100.0, 56.0], [112100.0, 2.0], [7200.0, 8.0], [7300.0, 7.0], [7400.0, 56.0], [7600.0, 47.0], [7500.0, 1.0], [7800.0, 4.0], [7700.0, 6.0], [7900.0, 30.0], [8000.0, 2.0], [8100.0, 50.0], [8300.0, 3.0], [8400.0, 19.0], [8500.0, 3.0], [8600.0, 11.0], [8700.0, 57.0], [8200.0, 3.0], [137400.0, 1.0], [8800.0, 3.0], [9000.0, 2.0], [9200.0, 58.0], [9100.0, 4.0], [8900.0, 19.0], [9500.0, 5.0], [9600.0, 3.0], [9700.0, 46.0], [9400.0, 9.0], [10000.0, 4.0], [10100.0, 6.0], [10200.0, 48.0], [9800.0, 9.0], [9900.0, 26.0], [10300.0, 7.0], [10400.0, 13.0], [10500.0, 18.0], [10600.0, 9.0], [10700.0, 25.0], [11200.0, 20.0], [10800.0, 14.0], [11000.0, 30.0], [10900.0, 9.0], [11100.0, 7.0], [11600.0, 9.0], [11400.0, 9.0], [11500.0, 26.0], [11700.0, 22.0], [11300.0, 6.0], [12200.0, 30.0], [12100.0, 8.0], [11900.0, 8.0], [11800.0, 5.0], [12000.0, 8.0], [12400.0, 9.0], [12500.0, 7.0], [12700.0, 7.0], [12600.0, 1.0], [12300.0, 2.0], [13300.0, 282.0], [13200.0, 22.0], [13100.0, 8.0], [12800.0, 14.0], [13000.0, 3.0], [12900.0, 2.0], [13600.0, 10.0], [13500.0, 9.0], [13400.0, 12.0], [13800.0, 73.0], [13700.0, 4.0], [14200.0, 6.0], [13900.0, 4.0], [14300.0, 44.0], [14000.0, 14.0], [14100.0, 7.0], [222200.0, 1.0], [14600.0, 3.0], [14500.0, 15.0], [14400.0, 4.0], [14800.0, 7.0], [15000.0, 1.0], [15100.0, 4.0], [14900.0, 1.0], [15200.0, 2.0], [15300.0, 8.0], [15600.0, 2.0], [15500.0, 1.0], [15800.0, 3.0], [15400.0, 1.0], [15900.0, 1.0], [16300.0, 6.0], [16200.0, 1.0], [16600.0, 2.0], [17400.0, 1.0], [16400.0, 1.0], [18000.0, 1.0], [19400.0, 3.0], [18600.0, 4.0], [20800.0, 1.0], [21200.0, 1.0], [22400.0, 1.0], [24600.0, 1.0], [26000.0, 1.0], [26600.0, 2.0], [26400.0, 1.0], [26200.0, 1.0], [27600.0, 1.0], [28400.0, 1.0], [28600.0, 2.0], [29800.0, 1.0], [31000.0, 1.0], [30800.0, 1.0], [32000.0, 1.0], [32800.0, 3.0], [38400.0, 2.0], [44400.0, 1.0], [53600.0, 1.0], [62800.0, 1.0], [78400.0, 1.0], [106400.0, 4.0], [105600.0, 2.0], [107200.0, 1.0], [114400.0, 1.0], [115200.0, 2.0], [116000.0, 1.0], [70300.0, 1.0], [71100.0, 1.0], [105500.0, 2.0], [107100.0, 2.0], [107900.0, 1.0], [111100.0, 3.0], [128700.0, 1.0], [37900.0, 1.0], [38300.0, 1.0], [51500.0, 1.0], [52700.0, 1.0], [53900.0, 1.0], [54700.0, 1.0], [59500.0, 1.0], [61500.0, 1.0], [64700.0, 2.0], [67800.0, 2.0], [70200.0, 1.0], [79000.0, 1.0], [87800.0, 1.0], [106200.0, 1.0], [105400.0, 2.0], [107000.0, 4.0], [108600.0, 1.0], [114200.0, 1.0], [118200.0, 1.0], [140500.0, 7.0], [67700.0, 1.0], [76500.0, 1.0], [74100.0, 1.0], [106100.0, 2.0], [106900.0, 3.0], [121300.0, 1.0], [136600.0, 1.0], [151000.0, 1.0], [170200.0, 2.0], [17100.0, 6.0], [16500.0, 1.0], [17900.0, 3.0], [18100.0, 1.0], [18700.0, 1.0], [19700.0, 8.0], [24100.0, 1.0], [26300.0, 21.0], [26900.0, 1.0], [30300.0, 1.0], [30700.0, 1.0], [30900.0, 2.0], [31900.0, 2.0], [135900.0, 2.0], [53400.0, 1.0], [53800.0, 1.0], [219100.0, 1.0], [59800.0, 1.0], [85200.0, 1.0], [106000.0, 1.0], [106800.0, 3.0], [110800.0, 1.0], [130800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 232800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7038.0, "series": [{"data": [[1.0, 113.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5560.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7038.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.5394509E12, "maxY": 500.0, "series": [{"data": [[1.53945138E12, 485.53711526855767], [1.53945108E12, 188.36123348017608], [1.53945144E12, 500.0], [1.53945114E12, 250.35849056603766], [1.5394515E12, 401.7715517241383], [1.5394512E12, 310.63400389357497], [1.5394509E12, 22.66933333333333], [1.53945156E12, 13.66666666666667], [1.53945126E12, 368.18208603417816], [1.53945096E12, 68.5510204081632], [1.53945162E12, 2.0], [1.53945132E12, 428.6534883720933], [1.53945102E12, 128.511789181692]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945162E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 230655.0, "series": [{"data": [[2.0, 230655.0], [5.0, 1232.0], [6.0, 1193.0], [7.0, 54896.0], [8.0, 1291.8333333333333], [9.0, 1243.2], [10.0, 1279.6666666666665], [11.0, 29969.272727272724], [12.0, 1236.5555555555557], [13.0, 1392.6], [14.0, 1529.2], [15.0, 1478.3], [16.0, 1319.0000000000002], [17.0, 1531.0], [18.0, 1536.0], [19.0, 33553.38461538462], [20.0, 11266.909090909092], [21.0, 4990.4], [22.0, 6768.0], [23.0, 1761.181818181818], [24.0, 1794.4615384615386], [25.0, 2066.1111111111113], [26.0, 2101.75], [27.0, 18398.76923076923], [28.0, 4398.0], [29.0, 10157.0], [30.0, 6083.117647058823], [31.0, 2521.333333333333], [32.0, 5769.0], [33.0, 5080.357142857143], [34.0, 7315.846153846154], [35.0, 8988.2], [36.0, 6698.333333333334], [37.0, 2853.7], [38.0, 3136.1428571428573], [39.0, 7014.533333333333], [40.0, 7244.785714285715], [41.0, 11324.142857142857], [42.0, 6917.8], [43.0, 9001.5], [44.0, 10503.875], [45.0, 8224.333333333334], [46.0, 6519.454545454545], [47.0, 6504.181818181818], [48.0, 7135.222222222223], [49.0, 4219.444444444444], [50.0, 6773.833333333334], [51.0, 6964.545454545454], [52.0, 8581.571428571428], [53.0, 6528.571428571429], [54.0, 4531.545454545455], [55.0, 6235.714285714287], [56.0, 4291.5], [57.0, 13104.266666666666], [58.0, 4375.545454545455], [59.0, 4488.0], [60.0, 4414.363636363636], [61.0, 4566.384615384613], [62.0, 4690.249999999999], [63.0, 4672.25], [64.0, 4771.999999999999], [65.0, 4969.230769230769], [66.0, 5039.444444444444], [67.0, 5206.111111111111], [68.0, 5304.833333333333], [69.0, 5420.9], [70.0, 5400.714285714285], [71.0, 5419.444444444444], [72.0, 5474.6], [73.0, 5446.5], [74.0, 5560.545454545455], [75.0, 5384.111111111111], [76.0, 5585.0], [77.0, 5657.916666666667], [78.0, 5739.444444444444], [79.0, 5914.5], [80.0, 16929.81818181818], [81.0, 21350.625], [82.0, 15536.615384615385], [83.0, 47615.600000000006], [84.0, 20070.0], [85.0, 6950.3], [86.0, 18221.5], [87.0, 6439.8], [88.0, 45373.4375], [89.0, 9466.416666666668], [90.0, 7160.6], [91.0, 10312.888888888889], [92.0, 8511.692307692309], [93.0, 7200.923076923077], [94.0, 7377.375], [95.0, 9305.76923076923], [96.0, 9126.23076923077], [97.0, 9243.75], [98.0, 7403.999999999999], [99.0, 9697.09090909091], [100.0, 6973.461538461538], [101.0, 7554.999999999999], [102.0, 9431.0], [103.0, 9869.5], [104.0, 9942.57142857143], [105.0, 9486.916666666668], [106.0, 8352.727272727272], [107.0, 9774.1], [108.0, 8600.181818181818], [109.0, 8632.92857142857], [110.0, 8585.9], [111.0, 8544.888888888889], [112.0, 9516.92857142857], [113.0, 8242.636363636362], [114.0, 9625.09090909091], [115.0, 8417.666666666666], [116.0, 14602.0], [117.0, 8613.444444444443], [118.0, 9989.0], [119.0, 13602.076923076922], [120.0, 15273.8], [121.0, 15168.7], [122.0, 9510.200000000003], [123.0, 9637.454545454544], [124.0, 15146.81818181818], [125.0, 9886.2], [126.0, 9886.555555555555], [127.0, 10976.416666666666], [128.0, 11288.909090909092], [129.0, 11305.499999999998], [130.0, 11782.77777777778], [131.0, 12286.153846153846], [132.0, 11970.111111111111], [133.0, 10893.0], [134.0, 15267.90909090909], [135.0, 15818.2], [136.0, 15996.8], [137.0, 11531.666666666666], [138.0, 15813.454545454546], [139.0, 15520.666666666666], [140.0, 11926.88888888889], [141.0, 15255.538461538461], [142.0, 11816.272727272726], [143.0, 16679.555555555555], [144.0, 11579.416666666664], [145.0, 11877.230769230768], [146.0, 11265.1], [147.0, 14912.0], [148.0, 14879.749999999998], [149.0, 11119.076923076922], [150.0, 11101.875], [151.0, 11103.499999999998], [152.0, 11173.099999999999], [153.0, 11638.90909090909], [154.0, 11810.636363636364], [155.0, 11558.0], [156.0, 11793.75], [157.0, 12192.833333333334], [158.0, 11313.615384615385], [159.0, 12482.583333333332], [160.0, 12454.0], [161.0, 12034.333333333336], [162.0, 12247.666666666666], [163.0, 12795.454545454544], [164.0, 13016.300000000001], [165.0, 12931.545454545456], [166.0, 12624.538461538463], [167.0, 12975.199999999999], [168.0, 12879.916666666666], [169.0, 12872.307692307693], [170.0, 13006.2], [171.0, 13168.81818181818], [172.0, 12606.133333333333], [173.0, 12956.916666666668], [174.0, 12913.25], [175.0, 11458.5], [176.0, 12343.5], [177.0, 12412.461538461539], [178.0, 13120.699999999999], [179.0, 12721.461538461537], [180.0, 12555.199999999999], [181.0, 12608.166666666666], [182.0, 12775.777777777777], [183.0, 13389.4], [184.0, 13451.642857142857], [185.0, 13000.42857142857], [186.0, 13065.615384615385], [187.0, 13212.0], [188.0, 13036.083333333334], [189.0, 12868.0], [190.0, 13258.363636363636], [191.0, 13132.307692307695], [192.0, 13836.444444444445], [193.0, 13587.583333333332], [194.0, 13882.75], [195.0, 13564.222222222223], [196.0, 13490.5], [197.0, 13425.071428571428], [198.0, 13431.125], [199.0, 13323.083333333332], [200.0, 23471.357142857145], [201.0, 13343.727272727272], [202.0, 13398.222222222223], [203.0, 13228.416666666668], [204.0, 13195.818181818182], [205.0, 13276.999999999998], [206.0, 13059.727272727274], [207.0, 13215.818181818182], [208.0, 13301.222222222223], [209.0, 12111.714285714288], [210.0, 13271.0], [211.0, 13192.125], [212.0, 13087.785714285716], [213.0, 13600.428571428574], [214.0, 13005.818181818182], [215.0, 13197.7], [216.0, 13295.000000000002], [217.0, 12961.555555555555], [218.0, 12888.461538461539], [219.0, 11895.857142857141], [220.0, 12665.6], [221.0, 12523.166666666666], [222.0, 12337.000000000002], [223.0, 12277.800000000001], [224.0, 12291.111111111111], [225.0, 12193.75], [226.0, 12428.071428571428], [227.0, 12485.444444444445], [228.0, 12435.846153846152], [229.0, 12524.333333333334], [230.0, 12512.625], [231.0, 12681.0], [232.0, 13003.6], [233.0, 13050.444444444445], [234.0, 13175.9], [235.0, 13235.454545454544], [236.0, 13485.571428571428], [237.0, 13471.0], [238.0, 12182.76923076923], [239.0, 13258.923076923076], [240.0, 13322.363636363636], [241.0, 13331.4], [242.0, 13280.600000000002], [243.0, 13130.444444444445], [244.0, 12981.636363636364], [245.0, 12819.714285714284], [246.0, 12864.599999999999], [247.0, 12649.999999999998], [248.0, 15211.642857142855], [249.0, 23051.11111111111], [250.0, 12578.666666666668], [251.0, 12706.846153846154], [252.0, 12716.375], [253.0, 34182.61111111111], [254.0, 12762.846153846152], [255.0, 14577.400000000001], [257.0, 12703.0], [256.0, 12509.846153846154], [258.0, 12545.300000000001], [259.0, 12490.312500000002], [260.0, 12746.0], [261.0, 12323.642857142857], [262.0, 20298.33333333333], [263.0, 12019.933333333336], [264.0, 17190.687499999996], [270.0, 13441.333333333334], [271.0, 13596.272727272726], [268.0, 18974.357142857138], [269.0, 12186.166666666666], [265.0, 12322.333333333332], [266.0, 12144.166666666666], [267.0, 11660.714285714286], [273.0, 12150.916666666668], [272.0, 14012.92857142857], [274.0, 12490.888888888889], [275.0, 11693.166666666666], [276.0, 12835.099999999999], [277.0, 12889.8], [278.0, 13161.8], [279.0, 11107.285714285714], [280.0, 24666.555555555555], [286.0, 13847.933333333332], [287.0, 13632.92857142857], [284.0, 22502.473684210527], [285.0, 13190.0], [281.0, 13746.25], [282.0, 20645.81818181818], [283.0, 13062.769230769229], [289.0, 12099.38888888889], [288.0, 19360.5], [290.0, 19478.533333333333], [291.0, 10355.692307692309], [292.0, 13001.999999999996], [293.0, 13055.000000000002], [294.0, 21558.333333333336], [295.0, 12033.944444444443], [296.0, 15113.35294117647], [302.0, 10603.29411764706], [303.0, 10105.90909090909], [300.0, 23159.69230769231], [301.0, 12240.833333333334], [297.0, 11345.7], [298.0, 13128.92857142857], [299.0, 12006.2], [305.0, 11961.727272727274], [304.0, 10580.761904761905], [306.0, 11061.642857142857], [307.0, 17555.85714285714], [308.0, 11822.142857142857], [309.0, 10715.615384615385], [310.0, 11744.541666666668], [311.0, 15164.947368421055], [312.0, 10744.428571428572], [318.0, 11275.454545454544], [319.0, 12104.499999999998], [316.0, 10567.11111111111], [317.0, 52672.47368421052], [313.0, 11598.25], [314.0, 19876.071428571428], [315.0, 12141.416666666666], [321.0, 17359.294117647056], [320.0, 10101.774193548386], [322.0, 12095.266666666666], [323.0, 9949.500000000002], [324.0, 11204.642857142857], [325.0, 12182.3125], [326.0, 10549.272727272728], [327.0, 10585.857142857141], [328.0, 10343.192307692309], [334.0, 10352.69230769231], [335.0, 14301.275862068966], [332.0, 11057.4375], [333.0, 11071.076923076924], [329.0, 11031.437499999996], [330.0, 10333.0], [331.0, 11636.277777777777], [337.0, 11295.214285714288], [336.0, 11078.0], [338.0, 11155.916666666668], [339.0, 12350.2], [340.0, 12149.428571428572], [341.0, 13202.956521739134], [342.0, 13010.875], [343.0, 12751.083333333334], [344.0, 11500.111111111111], [350.0, 12061.23076923077], [351.0, 10480.714285714286], [348.0, 11615.499999999996], [349.0, 12437.916666666666], [345.0, 11821.117647058823], [346.0, 12400.571428571428], [347.0, 12931.666666666668], [353.0, 11173.741935483871], [352.0, 11117.222222222223], [354.0, 12309.250000000002], [355.0, 10790.714285714288], [356.0, 11051.944444444443], [357.0, 11891.647058823532], [358.0, 11427.466666666667], [359.0, 11754.666666666664], [360.0, 10689.375000000002], [366.0, 12171.0], [367.0, 11545.45], [364.0, 12018.800000000001], [365.0, 11689.478260869566], [361.0, 11020.785714285714], [362.0, 12417.714285714286], [363.0, 11279.285714285716], [369.0, 11793.57142857143], [368.0, 11514.733333333334], [370.0, 11160.444444444445], [371.0, 10475.499999999998], [372.0, 11358.480000000001], [373.0, 11891.92857142857], [374.0, 11576.666666666664], [375.0, 11784.363636363636], [376.0, 10226.432432432432], [382.0, 12641.80769230769], [383.0, 10810.260869565218], [380.0, 11949.0625], [381.0, 12217.000000000002], [377.0, 12517.166666666668], [378.0, 12506.142857142857], [379.0, 11310.210526315788], [385.0, 11054.105263157893], [384.0, 10512.699999999995], [386.0, 12216.571428571428], [387.0, 11740.842105263158], [388.0, 11446.0], [389.0, 12267.61111111111], [390.0, 11786.588235294117], [391.0, 12489.599999999999], [392.0, 11364.884615384615], [398.0, 12902.714285714284], [399.0, 12661.818181818184], [396.0, 12760.052631578947], [397.0, 11869.68], [393.0, 12809.0625], [394.0, 10956.444444444445], [395.0, 11714.033333333333], [401.0, 12304.374999999998], [400.0, 12072.777777777777], [402.0, 12340.461538461539], [403.0, 10195.624999999998], [404.0, 11664.64], [405.0, 11017.842105263158], [406.0, 10792.583333333336], [407.0, 10282.052631578947], [408.0, 11725.181818181816], [414.0, 11800.0], [415.0, 11003.3], [412.0, 9110.0], [413.0, 11292.037037037036], [409.0, 22042.53333333333], [410.0, 12611.291666666664], [411.0, 11387.999999999996], [417.0, 12278.666666666668], [416.0, 11656.882352941175], [418.0, 12424.333333333334], [419.0, 11989.842105263157], [420.0, 10362.678571428574], [421.0, 12152.000000000002], [422.0, 13636.894736842105], [423.0, 13983.636363636364], [424.0, 13811.1875], [430.0, 11143.434782608694], [431.0, 36355.89473684211], [428.0, 13387.600000000002], [429.0, 14330.076923076924], [425.0, 12766.499999999996], [426.0, 12808.266666666666], [427.0, 13936.09090909091], [433.0, 11795.380952380952], [432.0, 11439.75], [434.0, 10928.393939393944], [435.0, 12188.05], [436.0, 11153.823529411764], [437.0, 10530.071428571426], [438.0, 11367.333333333334], [439.0, 12259.375], [440.0, 11172.22222222222], [446.0, 10197.863636363634], [447.0, 12416.0], [444.0, 11401.294117647061], [445.0, 11156.000000000002], [441.0, 11421.944444444443], [442.0, 15961.000000000002], [443.0, 11799.4], [449.0, 11687.78947368421], [448.0, 8997.90909090909], [450.0, 12703.538461538463], [451.0, 11468.047619047618], [452.0, 12053.464285714286], [453.0, 11238.31818181818], [454.0, 12697.25], [455.0, 10851.812499999998], [456.0, 18161.77777777778], [462.0, 11238.56], [463.0, 12538.916666666666], [460.0, 11269.388888888889], [461.0, 12130.666666666666], [457.0, 10486.333333333332], [458.0, 12710.733333333334], [459.0, 12241.5], [465.0, 10460.949999999999], [464.0, 17149.833333333332], [466.0, 11654.782608695652], [467.0, 11612.199999999999], [468.0, 12524.222222222223], [469.0, 12893.666666666668], [470.0, 11606.476190476189], [471.0, 9352.823529411762], [472.0, 17709.76923076923], [478.0, 9615.777777777777], [479.0, 13959.153846153846], [476.0, 10245.692307692309], [477.0, 12638.318181818182], [473.0, 10005.12], [474.0, 12270.64285714286], [475.0, 12530.277777777777], [481.0, 10197.583333333332], [480.0, 11066.935483870966], [482.0, 11329.45], [483.0, 11739.947368421052], [484.0, 11786.900000000001], [485.0, 11816.095238095237], [486.0, 12740.4], [487.0, 29510.565217391304], [488.0, 10710.181818181818], [494.0, 11415.833333333332], [495.0, 11786.3], [492.0, 11242.499999999998], [493.0, 32565.61363636363], [489.0, 11906.000000000004], [490.0, 10274.714285714286], [491.0, 10594.13043478261], [496.0, 11359.624999999996], [497.0, 10934.076923076922], [498.0, 10529.411764705883], [499.0, 11959.666666666668], [500.0, 16140.877894736845]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[331.68898343036057, 13087.489587998245]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[2.0, 230655.0], [4.0, 1979.0], [5.0, 1493.5], [6.0, 2899.666666666667], [7.0, 108286.0], [8.0, 670.6666666666666], [9.0, 762.0], [11.0, 989.0], [12.0, 615.0], [13.0, 746.0], [15.0, 984.0], [16.0, 772.0], [17.0, 2169.0], [19.0, 54043.75], [20.0, 811.0], [21.0, 913.0], [22.0, 1608.0], [23.0, 969.0], [24.0, 26172.0], [25.0, 26154.5], [27.0, 1609.0], [29.0, 1741.5], [31.0, 2510.0], [33.0, 2406.3333333333335], [36.0, 4492.0], [37.0, 2296.0], [38.0, 3130.0], [39.0, 2395.0], [41.0, 2142.0], [42.0, 2916.0], [44.0, 3390.5], [46.0, 2964.0], [47.0, 3287.0], [48.0, 3382.0], [50.0, 3635.0], [52.0, 3731.0], [53.0, 5725.0], [54.0, 3744.5], [56.0, 4294.0], [58.0, 4727.666666666667], [61.0, 5791.0], [62.0, 4612.0], [63.0, 4156.0], [64.0, 4778.0], [66.0, 4641.0], [68.0, 5410.0], [69.0, 4748.0], [70.0, 4558.0], [71.0, 4715.0], [72.0, 4763.0], [73.0, 4888.0], [74.0, 4774.0], [76.0, 5523.0], [77.0, 5083.0], [78.0, 5062.0], [79.0, 5271.0], [82.0, 5947.0], [83.0, 7463.0], [84.0, 6060.0], [86.0, 96778.5], [87.0, 6501.0], [88.0, 109013.16666666666], [90.0, 7087.0], [91.0, 7271.0], [92.0, 6458.0], [93.0, 38814.0], [94.0, 7379.0], [96.0, 6640.0], [97.0, 8409.0], [98.0, 7978.0], [99.0, 6929.0], [100.0, 7136.0], [101.0, 6656.0], [104.0, 7703.0], [105.0, 8513.5], [106.0, 7628.0], [107.0, 7657.0], [109.0, 20783.5], [110.0, 7955.0], [111.0, 7581.0], [112.0, 7493.0], [113.0, 7673.0], [115.0, 32838.0], [116.0, 9075.0], [117.0, 16960.666666666668], [119.0, 8749.5], [120.0, 8430.0], [122.0, 20719.0], [123.0, 9114.0], [124.0, 9636.0], [125.0, 20822.5], [126.0, 8939.0], [127.0, 9186.0], [131.0, 10277.5], [132.0, 10056.0], [133.0, 11500.5], [135.0, 10992.0], [136.0, 10595.0], [137.0, 15939.0], [138.0, 11150.0], [140.0, 39603.5], [142.0, 12225.0], [143.0, 10726.0], [144.0, 10684.0], [146.0, 10521.0], [147.0, 12606.0], [148.0, 11327.0], [149.0, 11210.0], [150.0, 17393.666666666668], [151.0, 29477.0], [153.0, 11047.0], [155.0, 16469.0], [156.0, 11020.0], [157.0, 11101.0], [158.0, 11237.0], [160.0, 11449.0], [161.0, 11443.0], [163.0, 12444.0], [165.0, 12243.5], [167.0, 11551.0], [162.0, 54907.0], [168.0, 11827.0], [171.0, 33040.5], [175.0, 15623.0], [172.0, 15644.0], [178.0, 11833.0], [181.0, 11909.0], [183.0, 12162.0], [182.0, 15630.0], [177.0, 15526.0], [176.0, 15545.0], [186.0, 16047.0], [185.0, 16065.0], [192.0, 12933.0], [198.0, 12710.0], [200.0, 14181.0], [203.0, 15019.0], [207.0, 16173.0], [206.0, 13626.0], [209.0, 13948.0], [213.0, 12426.0], [214.0, 12219.0], [212.0, 17793.0], [211.0, 17812.0], [223.0, 11332.0], [219.0, 13556.0], [229.0, 14300.0], [224.0, 12843.0], [232.0, 13241.5], [233.0, 13385.0], [235.0, 13324.0], [236.0, 12527.0], [240.0, 13170.0], [244.0, 12290.5], [247.0, 12776.0], [252.0, 13311.0], [255.0, 15991.0], [253.0, 106500.0], [268.0, 8195.333333333332], [258.0, 14242.0], [259.0, 2.0], [261.0, 13509.0], [262.0, 2.0], [263.0, 10754.0], [264.0, 12929.0], [265.0, 9216.0], [267.0, 7167.25], [269.0, 10563.0], [270.0, 6939.0], [271.0, 12301.5], [273.0, 11090.0], [272.0, 1.0], [274.0, 12326.0], [275.0, 11947.666666666666], [276.0, 12731.0], [277.0, 30648.0], [279.0, 13282.333333333334], [280.0, 16487.8], [286.0, 36864.5], [287.0, 13197.0], [284.0, 14979.5], [285.0, 14077.0], [281.0, 13308.0], [282.0, 13890.0], [283.0, 13358.5], [289.0, 12459.333333333334], [288.0, 7647.5], [290.0, 13568.0], [291.0, 7423.8], [292.0, 20424.5], [293.0, 11535.0], [294.0, 13570.0], [295.0, 12758.666666666666], [296.0, 15155.2], [302.0, 11093.333333333334], [303.0, 9201.0], [300.0, 10842.0], [301.0, 9731.666666666666], [297.0, 13000.666666666666], [298.0, 32046.25], [299.0, 8510.5], [305.0, 5713.75], [304.0, 8959.727272727274], [306.0, 8556.0], [307.0, 11776.0], [308.0, 14427.5], [309.0, 8745.5], [310.0, 12227.384615384613], [311.0, 6999.666666666667], [312.0, 9774.8], [318.0, 10977.111111111111], [319.0, 12417.5], [316.0, 28319.571428571428], [317.0, 78186.85714285714], [313.0, 12513.0], [314.0, 10525.0], [315.0, 10717.0], [321.0, 11361.5], [320.0, 11716.875], [322.0, 10037.8], [323.0, 10193.714285714286], [324.0, 7679.5], [325.0, 12534.714285714286], [326.0, 12184.222222222223], [327.0, 19536.300000000003], [328.0, 8132.333333333333], [334.0, 9694.90909090909], [335.0, 19113.666666666668], [332.0, 6484.0], [333.0, 10466.125], [329.0, 8195.6], [330.0, 14954.5], [331.0, 11121.0], [337.0, 9794.0], [336.0, 11470.5], [338.0, 10969.6], [339.0, 12499.0], [340.0, 8218.5], [341.0, 15365.933333333332], [342.0, 12913.333333333334], [343.0, 12021.428571428572], [344.0, 5460.666666666666], [350.0, 30334.249999999996], [351.0, 8828.333333333332], [348.0, 10237.4], [349.0, 9556.5], [346.0, 9344.875], [347.0, 12039.5], [353.0, 9318.4], [352.0, 12846.636363636362], [354.0, 12933.0], [355.0, 12569.666666666668], [356.0, 11348.0], [357.0, 9407.375], [358.0, 11379.0], [359.0, 11585.285714285716], [360.0, 23931.625000000004], [367.0, 7426.0], [364.0, 12807.666666666666], [365.0, 12920.75], [361.0, 9113.7], [362.0, 13567.0], [363.0, 12369.833333333334], [369.0, 10878.833333333332], [368.0, 12922.285714285714], [370.0, 8309.625], [371.0, 9338.099999999999], [372.0, 11392.0], [373.0, 9596.75], [374.0, 11147.333333333334], [375.0, 11438.0], [376.0, 10458.714285714284], [382.0, 8306.111111111111], [383.0, 12031.8], [380.0, 14764.0], [381.0, 11549.0], [377.0, 9054.666666666666], [378.0, 15099.0], [379.0, 14093.333333333334], [385.0, 8413.333333333334], [384.0, 10149.272727272728], [386.0, 11481.0], [387.0, 9792.333333333332], [388.0, 13521.0], [389.0, 11554.0], [390.0, 10522.142857142857], [391.0, 12804.0], [392.0, 9378.75], [396.0, 15241.5], [397.0, 13155.0], [398.0, 9557.0], [399.0, 10341.90909090909], [395.0, 13311.363636363638], [401.0, 11698.0], [400.0, 12099.500000000002], [402.0, 10684.0], [403.0, 9089.0], [404.0, 10503.0], [405.0, 11330.636363636362], [406.0, 7936.0], [407.0, 8506.5], [409.0, 55346.6], [414.0, 11588.571428571428], [415.0, 11441.0], [412.0, 7840.857142857144], [413.0, 11905.0], [410.0, 12635.0], [411.0, 13311.333333333334], [418.0, 8703.0], [416.0, 13311.5], [419.0, 8957.0], [428.0, 14344.0], [429.0, 13504.0], [430.0, 13298.166666666666], [431.0, 77274.71428571429], [420.0, 10751.818181818184], [421.0, 13652.0], [422.0, 13191.75], [423.0, 12824.0], [424.0, 9216.333333333332], [425.0, 9588.5], [426.0, 7936.0], [427.0, 14179.166666666666], [433.0, 12928.699999999999], [432.0, 1.5], [434.0, 8779.400000000001], [435.0, 12218.92857142857], [436.0, 10358.833333333334], [437.0, 10052.454545454544], [438.0, 13060.333333333334], [439.0, 11490.0], [440.0, 9730.0], [446.0, 5802.666666666666], [447.0, 12554.066666666668], [444.0, 12800.0], [445.0, 11298.076923076924], [441.0, 10641.0], [442.0, 33747.0], [443.0, 13104.0], [449.0, 11903.5], [448.0, 10967.0], [451.0, 9557.333333333332], [460.0, 10621.666666666668], [461.0, 13312.0], [462.0, 12338.25], [463.0, 11583.5], [452.0, 9641.833333333332], [453.0, 10499.0], [454.0, 11727.0], [455.0, 8190.666666666667], [456.0, 8502.272727272728], [457.0, 10157.538461538461], [458.0, 13597.0], [459.0, 8642.0], [465.0, 8192.0], [464.0, 128768.0], [466.0, 13402.5], [467.0, 11132.666666666666], [468.0, 37494.22222222222], [469.0, 11497.0], [470.0, 9629.75], [471.0, 10364.181818181816], [472.0, 38400.0], [478.0, 8500.8], [479.0, 21109.411764705885], [476.0, 15295.5], [477.0, 11373.714285714286], [473.0, 9926.5], [475.0, 9786.0], [481.0, 8676.333333333334], [480.0, 12457.888888888889], [482.0, 8021.166666666667], [483.0, 12833.0], [484.0, 10580.5], [485.0, 8332.571428571428], [486.0, 9218.0], [487.0, 12098.666666666666], [488.0, 10124.583333333334], [494.0, 13216.333333333334], [492.0, 13112.5], [493.0, 42314.733333333344], [489.0, 12005.166666666668], [490.0, 11636.3], [491.0, 8704.0], [497.0, 9526.0], [498.0, 11270.0], [499.0, 90753.0], [500.0, 23439.639658848602]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[383.077544426494, 16645.579967689817]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 375.0], [3.0, 37.0], [4.0, 43.0], [5.0, 32.0], [6.0, 35.0], [7.0, 30.0], [8.0, 12.0], [9.0, 36.0], [10.0, 28.0], [11.0, 53268.0], [12.0, 23.0], [13.0, 24.0], [14.0, 53004.0], [15.0, 51.0], [16.0, 31.0], [17.0, 157.0], [18.0, 48.0], [19.0, 53115.0], [20.0, 162.0], [21.0, 223.0], [22.0, 618.0], [23.0, 25719.0], [24.0, 559.0], [25.0, 925.0], [26.0, 136641.0], [27.0, 1063.0], [29.0, 1000.0], [30.0, 968.5], [31.0, 27670.0], [32.0, 669.5], [34.0, 1380.5], [35.0, 1886.0], [36.0, 1861.0], [37.0, 1411.0], [38.0, 43822.333333333336], [39.0, 1560.0], [40.0, 1709.0], [42.0, 2168.0], [43.0, 1969.5], [45.0, 2263.0], [46.0, 2631.0], [47.0, 2694.0], [48.0, 2697.0], [49.0, 59867.0], [50.0, 3037.0], [51.0, 2926.0], [53.0, 3173.0], [54.0, 21856.333333333332], [55.0, 2867.0], [57.0, 70242.5], [58.0, 3431.0], [59.0, 3290.0], [60.0, 3022.0], [61.0, 3407.0], [62.0, 3574.0], [63.0, 3152.0], [64.0, 3491.0], [65.0, 3918.0], [66.0, 3763.0], [68.0, 4017.0], [70.0, 4092.5], [71.0, 3951.0], [73.0, 4030.5], [75.0, 4217.0], [76.0, 4406.0], [77.0, 4202.0], [78.0, 4465.0], [79.0, 4717.0], [80.0, 4676.0], [82.0, 65960.0], [83.0, 5595.0], [84.0, 5581.0], [85.0, 5825.0], [86.0, 95608.66666666667], [87.0, 5398.0], [89.0, 5951.0], [90.0, 32641.5], [91.0, 6002.0], [88.0, 135014.0], [93.0, 5935.5], [95.0, 6023.0], [94.0, 71148.0], [96.0, 6029.0], [97.0, 5917.0], [98.0, 18468.0], [100.0, 18556.5], [101.0, 18440.5], [102.0, 6435.0], [103.0, 6799.0], [105.0, 7275.0], [106.0, 18741.0], [107.0, 7085.0], [108.0, 20152.5], [109.0, 7329.0], [110.0, 20102.0], [111.0, 15601.333333333334], [112.0, 6845.0], [114.0, 7003.0], [115.0, 7107.0], [113.0, 32860.0], [116.0, 7192.0], [117.0, 7896.0], [118.0, 7748.0], [119.0, 7682.0], [121.0, 8063.0], [122.0, 4175.5], [123.0, 20056.5], [124.0, 8478.0], [125.0, 8537.0], [126.0, 20397.5], [127.0, 8646.0], [129.0, 9056.0], [130.0, 9250.0], [132.0, 9566.0], [134.0, 10018.0], [135.0, 10180.0], [133.0, 21292.0], [136.0, 10355.0], [137.0, 10153.0], [138.0, 10475.0], [139.0, 10452.0], [140.0, 10221.0], [141.0, 10200.0], [142.0, 39075.5], [143.0, 10044.0], [144.0, 29216.0], [145.0, 9658.0], [146.0, 38837.5], [147.0, 9696.0], [148.0, 9577.0], [149.0, 20359.5], [150.0, 9484.0], [151.0, 9749.0], [152.0, 20405.0], [153.0, 9892.0], [155.0, 10489.0], [156.0, 15704.0], [159.0, 12277.0], [166.0, 34473.5], [161.0, 189312.0], [169.0, 11653.0], [171.0, 11234.0], [179.0, 11246.0], [181.0, 15650.0], [180.0, 15412.0], [185.0, 12464.0], [186.0, 15095.0], [188.0, 13649.5], [189.0, 15825.0], [195.0, 12169.0], [201.0, 14499.0], [202.0, 16212.5], [204.0, 13657.0], [203.0, 16494.0], [212.0, 23972.5], [214.0, 14169.0], [209.0, 14867.0], [219.0, 11634.0], [221.0, 26027.0], [222.0, 19614.0], [223.0, 18274.5], [218.0, 13574.0], [224.0, 13352.0], [226.0, 11904.0], [229.0, 13237.0], [231.0, 26930.0], [230.0, 14274.0], [225.0, 24100.0], [233.0, 10840.0], [235.0, 31654.333333333332], [236.0, 8656.0], [239.0, 12216.0], [234.0, 14187.0], [242.0, 12130.0], [243.0, 44529.5], [244.0, 13339.0], [245.0, 30334.0], [248.0, 11094.0], [251.0, 13146.5], [252.0, 1.0], [253.0, 66965.33333333333], [255.0, 106342.5], [257.0, 106903.0], [256.0, 8370.0], [258.0, 9684.5], [259.0, 59895.66666666667], [260.0, 13190.0], [261.0, 10984.0], [262.0, 65059.25], [263.0, 11852.0], [264.0, 69545.0], [270.0, 78501.25], [271.0, 14238.0], [268.0, 75557.66666666667], [269.0, 12053.0], [265.0, 10883.0], [266.0, 93086.5], [267.0, 19875.0], [284.0, 51153.0], [272.0, 51478.66666666667], [274.0, 13071.5], [285.0, 10497.0], [286.0, 43624.0], [287.0, 13504.0], [276.0, 44825.666666666664], [278.0, 26742.0], [279.0, 9582.666666666666], [280.0, 37929.8], [281.0, 12953.5], [282.0, 52990.8], [283.0, 12289.5], [289.0, 10016.0], [288.0, 25692.77777777778], [290.0, 59543.0], [291.0, 10873.5], [292.0, 17707.333333333332], [293.0, 21871.0], [294.0, 47311.75], [295.0, 9286.0], [296.0, 20421.5], [302.0, 9565.75], [303.0, 9563.5], [300.0, 44445.25], [301.0, 8708.0], [297.0, 8293.666666666666], [298.0, 45387.0], [299.0, 12249.75], [305.0, 36154.500000000015], [304.0, 9860.5], [306.0, 7168.0], [307.0, 37773.142857142855], [308.0, 12882.5], [309.0, 10124.571428571428], [310.0, 8738.25], [311.0, 6633.833333333334], [312.0, 9635.25], [318.0, 11660.6], [319.0, 31397.8], [316.0, 9153.8], [317.0, 104705.25], [313.0, 10628.6], [314.0, 11994.0], [315.0, 10805.0], [321.0, 10944.6], [320.0, 10596.699999999999], [322.0, 12514.375], [323.0, 33385.125], [324.0, 5120.333333333334], [325.0, 34088.25], [326.0, 10006.1], [327.0, 18029.636363636364], [328.0, 8657.333333333334], [334.0, 8465.125], [335.0, 9872.818181818182], [332.0, 7663.0], [333.0, 10952.2], [329.0, 9313.666666666666], [330.0, 9728.0], [331.0, 42380.666666666664], [338.0, 8402.0], [336.0, 4864.5], [339.0, 7334.0], [348.0, 7076.888888888888], [349.0, 11125.714285714284], [350.0, 8753.166666666666], [351.0, 10300.5], [340.0, 11425.6], [341.0, 7539.0], [342.0, 13312.0], [343.0, 13392.666666666666], [344.0, 9521.142857142857], [345.0, 13310.333333333334], [346.0, 11632.642857142855], [347.0, 9522.0], [353.0, 8588.384615384615], [352.0, 11996.0], [355.0, 11420.23076923077], [364.0, 13568.0], [365.0, 12171.8], [366.0, 9526.0], [367.0, 9872.666666666666], [356.0, 10525.5], [357.0, 8964.0], [358.0, 16639.0], [359.0, 10636.833333333332], [360.0, 8996.111111111111], [361.0, 8000.25], [362.0, 24466.0], [363.0, 7043.666666666666], [369.0, 7678.500000000001], [368.0, 12795.333333333334], [370.0, 8206.0], [371.0, 10055.875], [372.0, 9101.6], [373.0, 13429.5], [374.0, 10381.333333333334], [375.0, 12184.333333333334], [376.0, 10634.166666666666], [383.0, 10356.777777777777], [380.0, 14734.25], [382.0, 10972.058823529413], [377.0, 16368.0], [378.0, 16865.666666666668], [379.0, 14080.0], [385.0, 10828.222222222223], [384.0, 9754.166666666666], [386.0, 10324.666666666666], [387.0, 12225.666666666668], [388.0, 12876.75], [389.0, 10535.0], [390.0, 10595.2], [391.0, 14137.0], [392.0, 8858.7], [398.0, 11223.2], [399.0, 13044.076923076924], [396.0, 8071.333333333334], [397.0, 13384.0], [393.0, 11475.0], [394.0, 13873.0], [395.0, 11040.599999999999], [401.0, 11396.25], [400.0, 12459.333333333332], [402.0, 8809.0], [403.0, 7936.0], [404.0, 11932.4], [405.0, 8988.888888888889], [406.0, 9637.666666666666], [407.0, 7559.299999999999], [408.0, 13697.0], [414.0, 13303.75], [412.0, 7330.6], [413.0, 10011.0], [409.0, 24260.0], [410.0, 12609.2], [411.0, 13297.333333333334], [417.0, 12788.0], [416.0, 12261.2], [418.0, 8704.0], [419.0, 14591.0], [420.0, 9555.050000000003], [421.0, 13240.0], [422.0, 10185.2], [424.0, 13577.57142857143], [431.0, 31290.555555555555], [428.0, 13843.25], [429.0, 16512.0], [430.0, 9956.0], [425.0, 11520.857142857141], [426.0, 11860.5], [427.0, 10736.666666666666], [433.0, 12683.0], [432.0, 10639.4], [434.0, 12886.0], [435.0, 15469.250000000002], [436.0, 11316.0], [437.0, 5803.333333333333], [438.0, 10078.5], [440.0, 7550.5], [446.0, 9983.90909090909], [447.0, 11425.428571428572], [444.0, 12455.5], [445.0, 10786.5], [441.0, 9472.0], [442.0, 9901.5], [449.0, 11016.5], [448.0, 7424.0], [450.0, 7420.0], [451.0, 6989.75], [452.0, 12924.333333333332], [453.0, 10913.0], [454.0, 8452.2], [455.0, 8363.2], [456.0, 8430.2], [462.0, 12546.333333333334], [463.0, 11937.5], [460.0, 7743.75], [461.0, 10908.0], [457.0, 10368.2], [458.0, 11591.266666666666], [465.0, 7424.0], [464.0, 71005.5], [466.0, 11500.142857142857], [467.0, 10443.25], [468.0, 10680.833333333334], [469.0, 13311.0], [470.0, 13137.555555555555], [471.0, 10833.5], [472.0, 32344.25], [478.0, 10173.0], [479.0, 8652.0], [476.0, 6929.4], [477.0, 8705.0], [473.0, 9067.0], [474.0, 8735.0], [475.0, 10675.5], [481.0, 7378.666666666667], [480.0, 9543.444444444445], [482.0, 8830.6], [483.0, 12118.0], [484.0, 11978.0], [485.0, 9845.0], [486.0, 10400.5], [487.0, 37301.0], [488.0, 6698.571428571428], [494.0, 14339.0], [495.0, 10205.4], [492.0, 13157.6], [493.0, 31395.5], [489.0, 13268.375], [490.0, 7884.6], [491.0, 8975.0], [496.0, 8776.333333333334], [497.0, 10643.0], [498.0, 13824.0], [499.0, 59894.2], [500.0, 20364.541573033708], [1.0, 99.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[376.5159465020583, 17300.868827160495]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 9.233333333333333, "minX": 1.5394509E12, "maxY": 984552.4166666666, "series": [{"data": [[1.53945138E12, 966422.7833333333], [1.53945108E12, 984552.4166666666], [1.53945144E12, 969529.1833333333], [1.53945114E12, 980286.3166666667], [1.5394515E12, 717499.4], [1.5394512E12, 950496.95], [1.5394509E12, 456397.2833333333], [1.53945156E12, 1606.1166666666666], [1.53945126E12, 975104.5], [1.53945096E12, 956906.9333333333], [1.53945162E12, 11.0], [1.53945132E12, 961079.0166666667], [1.53945102E12, 933492.9833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53945138E12, 7114.466666666666], [1.53945108E12, 3179.2], [1.53945144E12, 7005.366666666667], [1.53945114E12, 3534.633333333333], [1.5394515E12, 4993.916666666667], [1.5394512E12, 6523.766666666666], [1.5394509E12, 1743.2], [1.53945156E12, 76.21666666666667], [1.53945126E12, 7202.683333333333], [1.53945096E12, 3420.0333333333333], [1.53945162E12, 9.233333333333333], [1.53945132E12, 7280.85], [1.53945102E12, 3365.516666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945162E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 526.8974358974359, "minX": 1.5394509E12, "maxY": 230655.0, "series": [{"data": [[1.53945138E12, 12924.143248175182], [1.53945108E12, 12842.640986132517], [1.53945144E12, 16593.88746569075], [1.53945114E12, 13254.163934426235], [1.5394515E12, 22939.99110546378], [1.5394512E12, 12888.376705141638], [1.5394509E12, 1977.743333333333], [1.53945156E12, 106891.45454545454], [1.53945126E12, 11642.189265536716], [1.53945096E12, 5304.560509554142], [1.53945162E12, 230655.0], [1.53945132E12, 12383.45973782771], [1.53945102E12, 9967.495921696585]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945138E12, 15470.66666666667], [1.53945108E12, 12461.473684210523], [1.53945144E12, 27358.61010830323], [1.53945114E12, 11341.568181818182], [1.5394515E12, 30002.58421052633], [1.5394512E12, 12121.971223021577], [1.5394509E12, 1744.722222222222], [1.53945156E12, 107133.0], [1.53945126E12, 11574.445161290327], [1.53945096E12, 5060.274509803921], [1.53945162E12, 230655.0], [1.53945132E12, 13154.581250000005], [1.53945102E12, 9726.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394512E12, 19481.954838709687], [1.5394509E12, 526.8974358974359], [1.53945138E12, 15261.312499999996], [1.53945108E12, 14690.846153846152], [1.53945156E12, 106152.33333333333], [1.53945126E12, 10902.82153846154], [1.53945096E12, 4084.928571428572], [1.53945144E12, 20855.885057471285], [1.53945114E12, 40574.97500000001], [1.53945132E12, 11540.509036144573], [1.53945102E12, 8565.388888888883], [1.5394515E12, 32309.841530054648]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945162E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 526.8461538461538, "minX": 1.5394509E12, "maxY": 230655.0, "series": [{"data": [[1.53945138E12, 12923.064781021896], [1.53945108E12, 12841.462249614782], [1.53945144E12, 16593.229643183902], [1.53945114E12, 13253.056631892703], [1.5394515E12, 22939.2960609911], [1.5394512E12, 12887.652675760768], [1.5394509E12, 1976.7900000000006], [1.53945156E12, 106891.36363636362], [1.53945126E12, 11641.509416195862], [1.53945096E12, 5303.4331210191085], [1.53945162E12, 230655.0], [1.53945132E12, 12382.781835205991], [1.53945102E12, 9966.247960848284]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945138E12, 15470.65934065935], [1.53945108E12, 12461.473684210523], [1.53945144E12, 27358.606498194928], [1.53945114E12, 11341.568181818182], [1.5394515E12, 30002.563157894732], [1.5394512E12, 12121.956834532371], [1.5394509E12, 1744.722222222222], [1.53945156E12, 107133.0], [1.53945126E12, 11574.40967741936], [1.53945096E12, 5060.274509803921], [1.53945162E12, 230655.0], [1.53945132E12, 13154.562499999996], [1.53945102E12, 9725.981481481484]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394512E12, 19481.951612903227], [1.5394509E12, 526.8461538461538], [1.53945138E12, 15261.302083333325], [1.53945108E12, 14690.846153846152], [1.53945156E12, 106152.33333333333], [1.53945126E12, 10902.812307692304], [1.53945096E12, 4084.8928571428564], [1.53945144E12, 20855.869731800783], [1.53945114E12, 40574.96250000001], [1.53945132E12, 11540.496987951818], [1.53945102E12, 8565.333333333332], [1.5394515E12, 32309.825136612024]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945162E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5394509E12, "maxY": 2.692307692307692, "series": [{"data": [[1.53945138E12, 0.39963503649635024], [1.53945108E12, 0.6409861325115555], [1.53945144E12, 0.4053064958828914], [1.53945114E12, 0.6408345752608045], [1.5394515E12, 0.9733163913595932], [1.5394512E12, 0.6012591815320039], [1.5394509E12, 0.6866666666666668], [1.53945156E12, 0.09090909090909093], [1.53945126E12, 0.5461393596986822], [1.53945096E12, 0.8312101910828027], [1.53945162E12, 0.0], [1.53945132E12, 0.43352059925093656], [1.53945102E12, 0.7128874388254487]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945138E12, 0.41758241758241754], [1.53945108E12, 0.6842105263157896], [1.53945144E12, 0.33935018050541516], [1.53945114E12, 0.9090909090909092], [1.5394515E12, 1.0157894736842106], [1.5394512E12, 0.7841726618705036], [1.5394509E12, 0.05555555555555555], [1.53945156E12, 0.25], [1.53945126E12, 0.6612903225806451], [1.53945096E12, 0.9803921568627452], [1.53945162E12, 0.0], [1.53945132E12, 0.4562500000000005], [1.53945102E12, 0.8888888888888887]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394512E12, 0.7677419354838714], [1.5394509E12, 2.692307692307692], [1.53945138E12, 0.39930555555555564], [1.53945108E12, 1.0], [1.53945156E12, 0.33333333333333337], [1.53945126E12, 0.621538461538462], [1.53945096E12, 0.9642857142857142], [1.53945144E12, 0.24521072796934884], [1.53945114E12, 0.9999999999999999], [1.53945132E12, 0.45180722891566255], [1.53945102E12, 1.2407407407407407], [1.5394515E12, 0.9726775956284149]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945162E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.5394509E12, "maxY": 108054.0, "series": [{"data": [[1.5394512E12, 16885.0], [1.5394509E12, 5569.0], [1.53945138E12, 25149.0], [1.53945108E12, 38114.0], [1.53945156E12, 108054.0], [1.53945126E12, 18040.0], [1.53945096E12, 8409.0], [1.53945144E12, 54724.0], [1.53945114E12, 39996.0], [1.53945132E12, 86564.0], [1.53945102E12, 12731.0], [1.5394515E12, 72688.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5394512E12, 10120.0], [1.5394509E12, 20.0], [1.53945138E12, 10457.0], [1.53945108E12, 11234.0], [1.53945156E12, 108054.0], [1.53945126E12, 10468.0], [1.53945096E12, 1560.0], [1.53945144E12, 10576.0], [1.53945114E12, 10852.0], [1.53945132E12, 10486.0], [1.53945102E12, 6085.0], [1.5394515E12, 10654.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5394512E12, 13186.4], [1.5394509E12, 2805.3], [1.53945138E12, 13194.8], [1.53945108E12, 13023.8], [1.53945156E12, 13358.000000000002], [1.53945126E12, 13158.0], [1.53945096E12, 7114.7], [1.53945144E12, 13276.0], [1.53945114E12, 13112.7], [1.53945132E12, 13220.1], [1.53945102E12, 11248.0], [1.5394515E12, 13355.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5394512E12, 14104.959999999994], [1.5394509E12, 3597.040000000002], [1.53945138E12, 14570.0], [1.53945108E12, 13591.559999999998], [1.53945156E12, 30961.96000000001], [1.53945126E12, 14265.960000000006], [1.53945096E12, 7624.92], [1.53945144E12, 14780.200000000019], [1.53945114E12, 13697.54], [1.53945132E12, 14471.44000000001], [1.53945102E12, 12011.38], [1.5394515E12, 30849.989999999936]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5394512E12, 13422.199999999999], [1.5394509E12, 2968.4000000000005], [1.53945138E12, 13522.0], [1.53945108E12, 13217.2], [1.53945156E12, 13935.3], [1.53945126E12, 13418.299999999997], [1.53945096E12, 7289.8], [1.53945144E12, 13646.0], [1.53945114E12, 13293.35], [1.53945132E12, 13541.1], [1.53945102E12, 11645.5], [1.5394515E12, 13931.749999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945156E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 108054.0, "series": [{"data": [[0.0, 108054.0], [19.0, 12826.0], [11.0, 12886.5], [6.0, 1757.5], [12.0, 7370.0], [25.0, 12038.0], [13.0, 12583.0], [27.0, 12387.0], [28.0, 12343.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 106496.0], [19.0, 12799.0], [11.0, 3.0], [6.0, 2.0], [12.0, 2.0], [25.0, 10097.0], [13.0, 13312.0], [27.0, 12539.0], [28.0, 11427.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 108053.0, "series": [{"data": [[0.0, 108053.0], [19.0, 12825.0], [11.0, 12885.0], [6.0, 1755.0], [12.0, 7369.0], [25.0, 12038.0], [13.0, 12582.0], [27.0, 12379.0], [28.0, 12342.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 106496.0], [19.0, 12799.0], [11.0, 3.0], [6.0, 2.0], [12.0, 2.0], [25.0, 10097.0], [13.0, 13312.0], [27.0, 12539.0], [28.0, 11427.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.883333333333334, "minX": 1.5394509E12, "maxY": 29.65, "series": [{"data": [[1.5394512E12, 26.683333333333334], [1.5394509E12, 6.883333333333334], [1.53945138E12, 28.316666666666666], [1.53945108E12, 12.35], [1.53945126E12, 29.3], [1.53945096E12, 13.25], [1.53945144E12, 27.183333333333334], [1.53945114E12, 14.25], [1.53945132E12, 29.65], [1.53945102E12, 13.016666666666667], [1.5394515E12, 11.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5394515E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394509E12, "maxY": 17.033333333333335, "series": [{"data": [[1.5394512E12, 11.083333333333334], [1.5394509E12, 5.566666666666666], [1.53945138E12, 11.166666666666666], [1.53945108E12, 10.983333333333333], [1.53945156E12, 0.016666666666666666], [1.53945126E12, 11.233333333333333], [1.53945096E12, 11.35], [1.53945144E12, 10.833333333333334], [1.53945114E12, 11.05], [1.53945132E12, 10.95], [1.53945102E12, 11.066666666666666], [1.5394515E12, 8.65]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5394512E12, 0.6333333333333333], [1.5394509E12, 0.5666666666666667], [1.53945138E12, 0.55], [1.53945108E12, 0.31666666666666665], [1.53945126E12, 0.5333333333333333], [1.53945096E12, 0.85], [1.53945144E12, 0.3], [1.53945114E12, 0.23333333333333334], [1.53945132E12, 0.5], [1.53945102E12, 0.8833333333333333], [1.5394515E12, 0.23333333333333334]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945138E12, 15.6], [1.53945108E12, 0.05], [1.53945144E12, 15.933333333333334], [1.53945114E12, 1.8333333333333333], [1.5394515E12, 9.816666666666666], [1.5394512E12, 13.666666666666666], [1.5394509E12, 0.08333333333333333], [1.53945156E12, 0.2833333333333333], [1.53945126E12, 16.316666666666666], [1.53945096E12, 0.05], [1.53945162E12, 0.03333333333333333], [1.53945132E12, 17.033333333333335], [1.53945102E12, 0.05]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.5394512E12, 0.3], [1.5394509E12, 0.03333333333333333], [1.53945138E12, 0.3], [1.53945126E12, 0.2], [1.53945144E12, 0.11666666666666667], [1.53945114E12, 0.13333333333333333], [1.53945132E12, 0.18333333333333332], [1.53945102E12, 0.016666666666666666], [1.5394515E12, 0.6333333333333333]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945162E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394509E12, "maxY": 10.783333333333333, "series": [{"data": [[1.5394512E12, 0.75], [1.5394509E12, 0.6166666666666667], [1.53945138E12, 0.6666666666666666], [1.53945108E12, 0.2], [1.53945126E12, 0.6333333333333333], [1.53945096E12, 0.9333333333333333], [1.53945144E12, 0.26666666666666666], [1.53945114E12, 0.31666666666666665], [1.53945132E12, 0.48333333333333334], [1.53945102E12, 0.8833333333333333], [1.5394515E12, 0.8833333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.5394512E12, 0.6333333333333333], [1.5394509E12, 0.5666666666666667], [1.53945138E12, 0.55], [1.53945108E12, 0.31666666666666665], [1.53945126E12, 0.5333333333333333], [1.53945096E12, 0.85], [1.53945144E12, 0.3], [1.53945114E12, 0.23333333333333334], [1.53945132E12, 0.5], [1.53945102E12, 0.8833333333333333], [1.5394515E12, 0.23333333333333334]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.5394512E12, 10.333333333333334], [1.5394509E12, 4.95], [1.53945138E12, 10.5], [1.53945108E12, 10.783333333333333], [1.53945156E12, 0.016666666666666666], [1.53945126E12, 10.6], [1.53945096E12, 10.416666666666666], [1.53945144E12, 10.566666666666666], [1.53945114E12, 10.733333333333333], [1.53945132E12, 10.466666666666667], [1.53945102E12, 10.183333333333334], [1.5394515E12, 7.766666666666667]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945138E12, 7.766666666666667], [1.53945108E12, 0.03333333333333333], [1.53945144E12, 7.65], [1.53945114E12, 0.45], [1.5394515E12, 5.35], [1.5394512E12, 5.55], [1.5394509E12, 0.05], [1.53945156E12, 0.16666666666666666], [1.53945126E12, 7.1], [1.53945096E12, 0.05], [1.53945162E12, 0.016666666666666666], [1.53945132E12, 7.333333333333333], [1.53945102E12, 0.03333333333333333]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.5394512E12, 4.416666666666667], [1.5394509E12, 0.03333333333333333], [1.53945138E12, 4.133333333333334], [1.53945108E12, 0.016666666666666666], [1.53945156E12, 0.05], [1.53945126E12, 4.783333333333333], [1.53945144E12, 4.083333333333333], [1.53945114E12, 1.0166666666666666], [1.53945132E12, 5.05], [1.53945102E12, 0.016666666666666666], [1.5394515E12, 2.1666666666666665]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5394512E12, 4.0], [1.5394509E12, 0.03333333333333333], [1.53945138E12, 4.0], [1.53945156E12, 0.06666666666666667], [1.53945126E12, 4.633333333333334], [1.53945144E12, 4.316666666666666], [1.53945114E12, 0.5], [1.53945162E12, 0.016666666666666666], [1.53945132E12, 4.833333333333333], [1.53945102E12, 0.016666666666666666], [1.5394515E12, 2.933333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945162E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
