/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 211200.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 1175.0], [3.4, 1245.0], [3.5, 1286.0], [3.6, 1332.0], [3.7, 1371.0], [3.8, 1393.0], [3.9, 1415.0], [4.0, 1441.0], [4.1, 1457.0], [4.2, 1469.0], [4.3, 1500.0], [4.4, 1602.0], [4.5, 1655.0], [4.6, 1745.0], [4.7, 1804.0], [4.8, 1870.0], [4.9, 1912.0], [5.0, 2011.0], [5.1, 2139.0], [5.2, 2208.0], [5.3, 2322.0], [5.4, 2375.0], [5.5, 2450.0], [5.6, 2548.0], [5.7, 2607.0], [5.8, 2650.0], [5.9, 2701.0], [6.0, 2759.0], [6.1, 2803.0], [6.2, 2860.0], [6.3, 2923.0], [6.4, 2982.0], [6.5, 3008.0], [6.6, 3122.0], [6.7, 3210.0], [6.8, 3329.0], [6.9, 3435.0], [7.0, 3582.0], [7.1, 3719.0], [7.2, 3840.0], [7.3, 3871.0], [7.4, 3930.0], [7.5, 3964.0], [7.6, 4028.0], [7.7, 4069.0], [7.8, 4196.0], [7.9, 4325.0], [8.0, 4444.0], [8.1, 4586.0], [8.2, 4792.0], [8.3, 4901.0], [8.4, 4962.0], [8.5, 5022.0], [8.6, 5063.0], [8.7, 5118.0], [8.8, 5194.0], [8.9, 5263.0], [9.0, 5296.0], [9.1, 5345.0], [9.2, 5397.0], [9.3, 5432.0], [9.4, 5470.0], [9.5, 5510.0], [9.6, 5539.0], [9.7, 5571.0], [9.8, 5602.0], [9.9, 5634.0], [10.0, 5703.0], [10.1, 5728.0], [10.2, 5764.0], [10.3, 5791.0], [10.4, 5815.0], [10.5, 5836.0], [10.6, 5861.0], [10.7, 5898.0], [10.8, 5928.0], [10.9, 5980.0], [11.0, 6110.0], [11.1, 6193.0], [11.2, 6244.0], [11.3, 6284.0], [11.4, 6401.0], [11.5, 6472.0], [11.6, 6515.0], [11.7, 6546.0], [11.8, 6604.0], [11.9, 6645.0], [12.0, 6718.0], [12.1, 6835.0], [12.2, 6924.0], [12.3, 7004.0], [12.4, 7099.0], [12.5, 7156.0], [12.6, 7164.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7169.0], [13.8, 7171.0], [13.9, 7174.0], [14.0, 7218.0], [14.1, 7318.0], [14.2, 7392.0], [14.3, 7420.0], [14.4, 7420.0], [14.5, 7423.0], [14.6, 7423.0], [14.7, 7424.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7425.0], [15.3, 7425.0], [15.4, 7427.0], [15.5, 7432.0], [15.6, 7491.0], [15.7, 7600.0], [15.8, 7656.0], [15.9, 7676.0], [16.0, 7678.0], [16.1, 7679.0], [16.2, 7680.0], [16.3, 7680.0], [16.4, 7680.0], [16.5, 7680.0], [16.6, 7681.0], [16.7, 7684.0], [16.8, 7714.0], [16.9, 7767.0], [17.0, 7824.0], [17.1, 7874.0], [17.2, 7932.0], [17.3, 7935.0], [17.4, 7935.0], [17.5, 7936.0], [17.6, 7936.0], [17.7, 7936.0], [17.8, 7936.0], [17.9, 7936.0], [18.0, 7937.0], [18.1, 7940.0], [18.2, 7940.0], [18.3, 7960.0], [18.4, 7973.0], [18.5, 7998.0], [18.6, 8017.0], [18.7, 8043.0], [18.8, 8065.0], [18.9, 8077.0], [19.0, 8097.0], [19.1, 8109.0], [19.2, 8125.0], [19.3, 8151.0], [19.4, 8177.0], [19.5, 8191.0], [19.6, 8191.0], [19.7, 8192.0], [19.8, 8192.0], [19.9, 8192.0], [20.0, 8203.0], [20.1, 8241.0], [20.2, 8287.0], [20.3, 8336.0], [20.4, 8394.0], [20.5, 8444.0], [20.6, 8447.0], [20.7, 8448.0], [20.8, 8448.0], [20.9, 8451.0], [21.0, 8454.0], [21.1, 8495.0], [21.2, 8584.0], [21.3, 8621.0], [21.4, 8675.0], [21.5, 8700.0], [21.6, 8701.0], [21.7, 8703.0], [21.8, 8703.0], [21.9, 8704.0], [22.0, 8704.0], [22.1, 8704.0], [22.2, 8704.0], [22.3, 8704.0], [22.4, 8704.0], [22.5, 8707.0], [22.6, 8708.0], [22.7, 8723.0], [22.8, 8753.0], [22.9, 8801.0], [23.0, 8854.0], [23.1, 8911.0], [23.2, 8956.0], [23.3, 8959.0], [23.4, 8960.0], [23.5, 8960.0], [23.6, 8960.0], [23.7, 8960.0], [23.8, 8996.0], [23.9, 9084.0], [24.0, 9147.0], [24.1, 9199.0], [24.2, 9214.0], [24.3, 9215.0], [24.4, 9215.0], [24.5, 9216.0], [24.6, 9216.0], [24.7, 9216.0], [24.8, 9216.0], [24.9, 9216.0], [25.0, 9217.0], [25.1, 9219.0], [25.2, 9220.0], [25.3, 9260.0], [25.4, 9336.0], [25.5, 9466.0], [25.6, 9471.0], [25.7, 9472.0], [25.8, 9472.0], [25.9, 9476.0], [26.0, 9549.0], [26.1, 9620.0], [26.2, 9724.0], [26.3, 9724.0], [26.4, 9727.0], [26.5, 9728.0], [26.6, 9728.0], [26.7, 9728.0], [26.8, 9728.0], [26.9, 9728.0], [27.0, 9728.0], [27.1, 9732.0], [27.2, 9743.0], [27.3, 9856.0], [27.4, 9983.0], [27.5, 9984.0], [27.6, 9984.0], [27.7, 9985.0], [27.8, 10075.0], [27.9, 10209.0], [28.0, 10239.0], [28.1, 10239.0], [28.2, 10240.0], [28.3, 10240.0], [28.4, 10241.0], [28.5, 10245.0], [28.6, 10307.0], [28.7, 10490.0], [28.8, 10495.0], [28.9, 10496.0], [29.0, 10500.0], [29.1, 10535.0], [29.2, 10639.0], [29.3, 10747.0], [29.4, 10751.0], [29.5, 10752.0], [29.6, 10752.0], [29.7, 10781.0], [29.8, 10846.0], [29.9, 10897.0], [30.0, 10962.0], [30.1, 11004.0], [30.2, 11007.0], [30.3, 11008.0], [30.4, 11012.0], [30.5, 11032.0], [30.6, 11071.0], [30.7, 11124.0], [30.8, 11149.0], [30.9, 11168.0], [31.0, 11183.0], [31.1, 11200.0], [31.2, 11213.0], [31.3, 11226.0], [31.4, 11233.0], [31.5, 11251.0], [31.6, 11260.0], [31.7, 11263.0], [31.8, 11264.0], [31.9, 11264.0], [32.0, 11264.0], [32.1, 11273.0], [32.2, 11287.0], [32.3, 11302.0], [32.4, 11310.0], [32.5, 11325.0], [32.6, 11345.0], [32.7, 11364.0], [32.8, 11385.0], [32.9, 11397.0], [33.0, 11415.0], [33.1, 11425.0], [33.2, 11442.0], [33.3, 11461.0], [33.4, 11476.0], [33.5, 11492.0], [33.6, 11499.0], [33.7, 11509.0], [33.8, 11516.0], [33.9, 11520.0], [34.0, 11520.0], [34.1, 11524.0], [34.2, 11535.0], [34.3, 11543.0], [34.4, 11551.0], [34.5, 11562.0], [34.6, 11571.0], [34.7, 11574.0], [34.8, 11585.0], [34.9, 11592.0], [35.0, 11599.0], [35.1, 11605.0], [35.2, 11610.0], [35.3, 11616.0], [35.4, 11623.0], [35.5, 11633.0], [35.6, 11640.0], [35.7, 11644.0], [35.8, 11651.0], [35.9, 11657.0], [36.0, 11661.0], [36.1, 11666.0], [36.2, 11669.0], [36.3, 11675.0], [36.4, 11679.0], [36.5, 11682.0], [36.6, 11687.0], [36.7, 11692.0], [36.8, 11697.0], [36.9, 11701.0], [37.0, 11706.0], [37.1, 11711.0], [37.2, 11717.0], [37.3, 11726.0], [37.4, 11732.0], [37.5, 11737.0], [37.6, 11742.0], [37.7, 11746.0], [37.8, 11750.0], [37.9, 11754.0], [38.0, 11757.0], [38.1, 11763.0], [38.2, 11768.0], [38.3, 11771.0], [38.4, 11774.0], [38.5, 11775.0], [38.6, 11776.0], [38.7, 11776.0], [38.8, 11776.0], [38.9, 11780.0], [39.0, 11783.0], [39.1, 11788.0], [39.2, 11791.0], [39.3, 11794.0], [39.4, 11799.0], [39.5, 11803.0], [39.6, 11806.0], [39.7, 11810.0], [39.8, 11813.0], [39.9, 11819.0], [40.0, 11822.0], [40.1, 11824.0], [40.2, 11829.0], [40.3, 11833.0], [40.4, 11838.0], [40.5, 11842.0], [40.6, 11847.0], [40.7, 11851.0], [40.8, 11855.0], [40.9, 11860.0], [41.0, 11863.0], [41.1, 11868.0], [41.2, 11871.0], [41.3, 11875.0], [41.4, 11878.0], [41.5, 11882.0], [41.6, 11886.0], [41.7, 11890.0], [41.8, 11892.0], [41.9, 11895.0], [42.0, 11900.0], [42.1, 11907.0], [42.2, 11910.0], [42.3, 11915.0], [42.4, 11918.0], [42.5, 11924.0], [42.6, 11928.0], [42.7, 11931.0], [42.8, 11935.0], [42.9, 11937.0], [43.0, 11940.0], [43.1, 11945.0], [43.2, 11947.0], [43.3, 11951.0], [43.4, 11955.0], [43.5, 11960.0], [43.6, 11964.0], [43.7, 11967.0], [43.8, 11970.0], [43.9, 11973.0], [44.0, 11979.0], [44.1, 11981.0], [44.2, 11983.0], [44.3, 11987.0], [44.4, 11991.0], [44.5, 11994.0], [44.6, 11997.0], [44.7, 12001.0], [44.8, 12005.0], [44.9, 12008.0], [45.0, 12012.0], [45.1, 12018.0], [45.2, 12020.0], [45.3, 12023.0], [45.4, 12025.0], [45.5, 12027.0], [45.6, 12030.0], [45.7, 12033.0], [45.8, 12036.0], [45.9, 12040.0], [46.0, 12045.0], [46.1, 12048.0], [46.2, 12054.0], [46.3, 12057.0], [46.4, 12063.0], [46.5, 12066.0], [46.6, 12069.0], [46.7, 12072.0], [46.8, 12076.0], [46.9, 12079.0], [47.0, 12083.0], [47.1, 12086.0], [47.2, 12091.0], [47.3, 12094.0], [47.4, 12096.0], [47.5, 12100.0], [47.6, 12104.0], [47.7, 12106.0], [47.8, 12109.0], [47.9, 12113.0], [48.0, 12117.0], [48.1, 12121.0], [48.2, 12126.0], [48.3, 12132.0], [48.4, 12134.0], [48.5, 12142.0], [48.6, 12146.0], [48.7, 12150.0], [48.8, 12154.0], [48.9, 12158.0], [49.0, 12161.0], [49.1, 12165.0], [49.2, 12169.0], [49.3, 12172.0], [49.4, 12174.0], [49.5, 12176.0], [49.6, 12180.0], [49.7, 12184.0], [49.8, 12189.0], [49.9, 12193.0], [50.0, 12198.0], [50.1, 12203.0], [50.2, 12206.0], [50.3, 12209.0], [50.4, 12214.0], [50.5, 12217.0], [50.6, 12220.0], [50.7, 12224.0], [50.8, 12226.0], [50.9, 12230.0], [51.0, 12232.0], [51.1, 12236.0], [51.2, 12241.0], [51.3, 12244.0], [51.4, 12249.0], [51.5, 12252.0], [51.6, 12255.0], [51.7, 12259.0], [51.8, 12262.0], [51.9, 12265.0], [52.0, 12266.0], [52.1, 12270.0], [52.2, 12274.0], [52.3, 12277.0], [52.4, 12279.0], [52.5, 12284.0], [52.6, 12284.0], [52.7, 12286.0], [52.8, 12287.0], [52.9, 12288.0], [53.0, 12288.0], [53.1, 12288.0], [53.2, 12289.0], [53.3, 12291.0], [53.4, 12295.0], [53.5, 12300.0], [53.6, 12301.0], [53.7, 12306.0], [53.8, 12309.0], [53.9, 12311.0], [54.0, 12317.0], [54.1, 12320.0], [54.2, 12323.0], [54.3, 12327.0], [54.4, 12330.0], [54.5, 12333.0], [54.6, 12335.0], [54.7, 12337.0], [54.8, 12340.0], [54.9, 12345.0], [55.0, 12348.0], [55.1, 12352.0], [55.2, 12354.0], [55.3, 12356.0], [55.4, 12359.0], [55.5, 12362.0], [55.6, 12365.0], [55.7, 12372.0], [55.8, 12374.0], [55.9, 12376.0], [56.0, 12379.0], [56.1, 12386.0], [56.2, 12387.0], [56.3, 12391.0], [56.4, 12395.0], [56.5, 12398.0], [56.6, 12399.0], [56.7, 12403.0], [56.8, 12407.0], [56.9, 12410.0], [57.0, 12413.0], [57.1, 12414.0], [57.2, 12419.0], [57.3, 12422.0], [57.4, 12424.0], [57.5, 12427.0], [57.6, 12430.0], [57.7, 12434.0], [57.8, 12437.0], [57.9, 12439.0], [58.0, 12442.0], [58.1, 12445.0], [58.2, 12449.0], [58.3, 12450.0], [58.4, 12452.0], [58.5, 12455.0], [58.6, 12459.0], [58.7, 12461.0], [58.8, 12463.0], [58.9, 12467.0], [59.0, 12470.0], [59.1, 12472.0], [59.2, 12477.0], [59.3, 12479.0], [59.4, 12480.0], [59.5, 12483.0], [59.6, 12486.0], [59.7, 12490.0], [59.8, 12493.0], [59.9, 12497.0], [60.0, 12500.0], [60.1, 12504.0], [60.2, 12508.0], [60.3, 12511.0], [60.4, 12515.0], [60.5, 12520.0], [60.6, 12527.0], [60.7, 12531.0], [60.8, 12533.0], [60.9, 12536.0], [61.0, 12541.0], [61.1, 12543.0], [61.2, 12544.0], [61.3, 12546.0], [61.4, 12548.0], [61.5, 12552.0], [61.6, 12554.0], [61.7, 12558.0], [61.8, 12564.0], [61.9, 12565.0], [62.0, 12568.0], [62.1, 12572.0], [62.2, 12581.0], [62.3, 12586.0], [62.4, 12589.0], [62.5, 12592.0], [62.6, 12595.0], [62.7, 12600.0], [62.8, 12604.0], [62.9, 12608.0], [63.0, 12614.0], [63.1, 12619.0], [63.2, 12622.0], [63.3, 12626.0], [63.4, 12630.0], [63.5, 12637.0], [63.6, 12639.0], [63.7, 12643.0], [63.8, 12645.0], [63.9, 12647.0], [64.0, 12649.0], [64.1, 12652.0], [64.2, 12655.0], [64.3, 12660.0], [64.4, 12665.0], [64.5, 12668.0], [64.6, 12671.0], [64.7, 12674.0], [64.8, 12678.0], [64.9, 12683.0], [65.0, 12687.0], [65.1, 12689.0], [65.2, 12692.0], [65.3, 12696.0], [65.4, 12699.0], [65.5, 12701.0], [65.6, 12704.0], [65.7, 12707.0], [65.8, 12710.0], [65.9, 12714.0], [66.0, 12718.0], [66.1, 12723.0], [66.2, 12726.0], [66.3, 12732.0], [66.4, 12734.0], [66.5, 12740.0], [66.6, 12745.0], [66.7, 12748.0], [66.8, 12751.0], [66.9, 12753.0], [67.0, 12755.0], [67.1, 12759.0], [67.2, 12763.0], [67.3, 12766.0], [67.4, 12771.0], [67.5, 12776.0], [67.6, 12780.0], [67.7, 12783.0], [67.8, 12787.0], [67.9, 12791.0], [68.0, 12794.0], [68.1, 12796.0], [68.2, 12797.0], [68.3, 12799.0], [68.4, 12800.0], [68.5, 12801.0], [68.6, 12805.0], [68.7, 12809.0], [68.8, 12811.0], [68.9, 12815.0], [69.0, 12818.0], [69.1, 12823.0], [69.2, 12826.0], [69.3, 12831.0], [69.4, 12834.0], [69.5, 12838.0], [69.6, 12844.0], [69.7, 12847.0], [69.8, 12850.0], [69.9, 12856.0], [70.0, 12859.0], [70.1, 12862.0], [70.2, 12865.0], [70.3, 12871.0], [70.4, 12874.0], [70.5, 12879.0], [70.6, 12885.0], [70.7, 12887.0], [70.8, 12891.0], [70.9, 12894.0], [71.0, 12902.0], [71.1, 12907.0], [71.2, 12910.0], [71.3, 12915.0], [71.4, 12919.0], [71.5, 12922.0], [71.6, 12926.0], [71.7, 12929.0], [71.8, 12933.0], [71.9, 12938.0], [72.0, 12942.0], [72.1, 12946.0], [72.2, 12950.0], [72.3, 12956.0], [72.4, 12960.0], [72.5, 12965.0], [72.6, 12974.0], [72.7, 12979.0], [72.8, 12983.0], [72.9, 12990.0], [73.0, 12995.0], [73.1, 13000.0], [73.2, 13004.0], [73.3, 13009.0], [73.4, 13013.0], [73.5, 13016.0], [73.6, 13019.0], [73.7, 13027.0], [73.8, 13032.0], [73.9, 13037.0], [74.0, 13043.0], [74.1, 13049.0], [74.2, 13052.0], [74.3, 13055.0], [74.4, 13056.0], [74.5, 13058.0], [74.6, 13061.0], [74.7, 13065.0], [74.8, 13069.0], [74.9, 13073.0], [75.0, 13078.0], [75.1, 13081.0], [75.2, 13086.0], [75.3, 13091.0], [75.4, 13095.0], [75.5, 13100.0], [75.6, 13104.0], [75.7, 13108.0], [75.8, 13114.0], [75.9, 13116.0], [76.0, 13120.0], [76.1, 13127.0], [76.2, 13130.0], [76.3, 13136.0], [76.4, 13141.0], [76.5, 13144.0], [76.6, 13147.0], [76.7, 13152.0], [76.8, 13156.0], [76.9, 13160.0], [77.0, 13166.0], [77.1, 13168.0], [77.2, 13176.0], [77.3, 13184.0], [77.4, 13188.0], [77.5, 13190.0], [77.6, 13197.0], [77.7, 13204.0], [77.8, 13207.0], [77.9, 13210.0], [78.0, 13213.0], [78.1, 13217.0], [78.2, 13222.0], [78.3, 13228.0], [78.4, 13233.0], [78.5, 13238.0], [78.6, 13242.0], [78.7, 13243.0], [78.8, 13249.0], [78.9, 13252.0], [79.0, 13256.0], [79.1, 13261.0], [79.2, 13264.0], [79.3, 13267.0], [79.4, 13272.0], [79.5, 13281.0], [79.6, 13287.0], [79.7, 13294.0], [79.8, 13300.0], [79.9, 13306.0], [80.0, 13307.0], [80.1, 13308.0], [80.2, 13308.0], [80.3, 13308.0], [80.4, 13308.0], [80.5, 13309.0], [80.6, 13310.0], [80.7, 13310.0], [80.8, 13311.0], [80.9, 13311.0], [81.0, 13311.0], [81.1, 13311.0], [81.2, 13311.0], [81.3, 13311.0], [81.4, 13311.0], [81.5, 13311.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13312.0], [83.1, 13312.0], [83.2, 13312.0], [83.3, 13312.0], [83.4, 13312.0], [83.5, 13312.0], [83.6, 13312.0], [83.7, 13312.0], [83.8, 13312.0], [83.9, 13312.0], [84.0, 13312.0], [84.1, 13312.0], [84.2, 13312.0], [84.3, 13312.0], [84.4, 13312.0], [84.5, 13313.0], [84.6, 13313.0], [84.7, 13314.0], [84.8, 13315.0], [84.9, 13316.0], [85.0, 13316.0], [85.1, 13316.0], [85.2, 13316.0], [85.3, 13318.0], [85.4, 13323.0], [85.5, 13330.0], [85.6, 13340.0], [85.7, 13345.0], [85.8, 13349.0], [85.9, 13355.0], [86.0, 13360.0], [86.1, 13362.0], [86.2, 13370.0], [86.3, 13374.0], [86.4, 13384.0], [86.5, 13388.0], [86.6, 13393.0], [86.7, 13401.0], [86.8, 13408.0], [86.9, 13414.0], [87.0, 13427.0], [87.1, 13435.0], [87.2, 13446.0], [87.3, 13453.0], [87.4, 13465.0], [87.5, 13472.0], [87.6, 13479.0], [87.7, 13496.0], [87.8, 13507.0], [87.9, 13517.0], [88.0, 13535.0], [88.1, 13543.0], [88.2, 13564.0], [88.3, 13567.0], [88.4, 13568.0], [88.5, 13568.0], [88.6, 13576.0], [88.7, 13598.0], [88.8, 13605.0], [88.9, 13622.0], [89.0, 13638.0], [89.1, 13652.0], [89.2, 13660.0], [89.3, 13684.0], [89.4, 13705.0], [89.5, 13728.0], [89.6, 13754.0], [89.7, 13769.0], [89.8, 13793.0], [89.9, 13820.0], [90.0, 13820.0], [90.1, 13823.0], [90.2, 13823.0], [90.3, 13824.0], [90.4, 13824.0], [90.5, 13824.0], [90.6, 13824.0], [90.7, 13824.0], [90.8, 13824.0], [90.9, 13824.0], [91.0, 13824.0], [91.1, 13825.0], [91.2, 13828.0], [91.3, 13828.0], [91.4, 13833.0], [91.5, 13860.0], [91.6, 13886.0], [91.7, 13906.0], [91.8, 13931.0], [91.9, 13980.0], [92.0, 14037.0], [92.1, 14079.0], [92.2, 14080.0], [92.3, 14081.0], [92.4, 14106.0], [92.5, 14150.0], [92.6, 14208.0], [92.7, 14295.0], [92.8, 14332.0], [92.9, 14334.0], [93.0, 14335.0], [93.1, 14335.0], [93.2, 14336.0], [93.3, 14336.0], [93.4, 14336.0], [93.5, 14336.0], [93.6, 14336.0], [93.7, 14337.0], [93.8, 14339.0], [93.9, 14358.0], [94.0, 14388.0], [94.1, 14460.0], [94.2, 14588.0], [94.3, 14592.0], [94.4, 14592.0], [94.5, 14636.0], [94.6, 14772.0], [94.7, 14847.0], [94.8, 14848.0], [94.9, 14855.0], [95.0, 15101.0], [95.1, 15273.0], [95.2, 15356.0], [95.3, 15360.0], [95.4, 15420.0], [95.5, 15616.0], [95.6, 15687.0], [95.7, 16036.0], [95.8, 16337.0], [95.9, 16539.0], [96.0, 17107.0], [96.1, 17156.0], [96.2, 17924.0], [96.3, 18684.0], [96.4, 18940.0], [96.5, 19210.0], [96.6, 19628.0], [96.7, 19970.0], [96.8, 20528.0], [96.9, 21438.0], [97.0, 22838.0], [97.1, 23393.0], [97.2, 25162.0], [97.3, 26374.0], [97.4, 28672.0], [97.5, 41216.0], [97.6, 44029.0], [97.7, 57761.0], [97.8, 68514.0], [97.9, 73979.0], [98.0, 78822.0], [98.1, 79612.0], [98.2, 90624.0], [98.3, 100607.0], [98.4, 106238.0], [98.5, 106241.0], [98.6, 107716.0], [98.7, 109307.0], [98.8, 111104.0], [98.9, 115456.0], [99.0, 116741.0], [99.1, 119808.0], [99.2, 122369.0], [99.3, 127231.0], [99.4, 130044.0], [99.5, 135935.0], [99.6, 143359.0], [99.7, 146433.0], [99.8, 147968.0], [99.9, 152064.0], [100.0, 210433.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 3.0], [6.4, 582.0], [6.5, 606.0], [6.6, 625.0], [6.7, 625.0], [6.8, 629.0], [6.9, 648.0], [7.0, 658.0], [7.1, 759.0], [7.2, 848.0], [7.3, 877.0], [7.4, 1356.0], [7.5, 1535.0], [7.6, 1630.0], [7.7, 1767.0], [7.8, 1824.0], [7.9, 1978.0], [8.0, 2043.0], [8.1, 2282.0], [8.2, 2347.0], [8.3, 2550.0], [8.4, 2941.0], [8.5, 2969.0], [8.6, 3030.0], [8.7, 3093.0], [8.8, 3237.0], [8.9, 3370.0], [9.0, 3869.0], [9.1, 4233.0], [9.2, 4309.0], [9.3, 4508.0], [9.4, 4657.0], [9.5, 4672.0], [9.6, 4682.0], [9.7, 4720.0], [9.8, 4911.0], [9.9, 4916.0], [10.0, 5023.0], [10.1, 5107.0], [10.2, 5198.0], [10.3, 5319.0], [10.4, 5653.0], [10.5, 5681.0], [10.6, 5792.0], [10.7, 6153.0], [10.8, 6203.0], [10.9, 6286.0], [11.0, 6359.0], [11.1, 6532.0], [11.2, 6728.0], [11.3, 7048.0], [11.4, 7048.0], [11.5, 7163.0], [11.6, 7164.0], [11.7, 7164.0], [11.8, 7164.0], [11.9, 7164.0], [12.0, 7164.0], [12.1, 7164.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7169.0], [15.6, 7171.0], [15.7, 7171.0], [15.8, 7171.0], [15.9, 7174.0], [16.0, 7211.0], [16.1, 7270.0], [16.2, 7333.0], [16.3, 7352.0], [16.4, 7379.0], [16.5, 7420.0], [16.6, 7420.0], [16.7, 7420.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7425.0], [18.8, 7425.0], [18.9, 7427.0], [19.0, 7428.0], [19.1, 7555.0], [19.2, 7676.0], [19.3, 7676.0], [19.4, 7678.0], [19.5, 7678.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7684.0], [21.1, 7684.0], [21.2, 7684.0], [21.3, 7684.0], [21.4, 7813.0], [21.5, 7931.0], [21.6, 7932.0], [21.7, 7934.0], [21.8, 7935.0], [21.9, 7935.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7937.0], [23.4, 7939.0], [23.5, 7940.0], [23.6, 7940.0], [23.7, 7940.0], [23.8, 7940.0], [23.9, 7940.0], [24.0, 7948.0], [24.1, 8006.0], [24.2, 8174.0], [24.3, 8187.0], [24.4, 8188.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8191.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8228.0], [25.6, 8443.0], [25.7, 8444.0], [25.8, 8444.0], [25.9, 8444.0], [26.0, 8447.0], [26.1, 8447.0], [26.2, 8448.0], [26.3, 8448.0], [26.4, 8448.0], [26.5, 8448.0], [26.6, 8448.0], [26.7, 8449.0], [26.8, 8452.0], [26.9, 8452.0], [27.0, 8500.0], [27.1, 8700.0], [27.2, 8700.0], [27.3, 8700.0], [27.4, 8703.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8703.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8704.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8707.0], [29.5, 8708.0], [29.6, 8708.0], [29.7, 8741.0], [29.8, 8956.0], [29.9, 8958.0], [30.0, 8959.0], [30.1, 8959.0], [30.2, 8959.0], [30.3, 8959.0], [30.4, 8959.0], [30.5, 8959.0], [30.6, 8960.0], [30.7, 8960.0], [30.8, 8960.0], [30.9, 8960.0], [31.0, 8960.0], [31.1, 8960.0], [31.2, 8961.0], [31.3, 9051.0], [31.4, 9099.0], [31.5, 9212.0], [31.6, 9212.0], [31.7, 9214.0], [31.8, 9215.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9217.0], [33.6, 9217.0], [33.7, 9219.0], [33.8, 9468.0], [33.9, 9471.0], [34.0, 9471.0], [34.1, 9472.0], [34.2, 9472.0], [34.3, 9472.0], [34.4, 9473.0], [34.5, 9474.0], [34.6, 9475.0], [34.7, 9475.0], [34.8, 9475.0], [34.9, 9723.0], [35.0, 9724.0], [35.1, 9724.0], [35.2, 9724.0], [35.3, 9727.0], [35.4, 9727.0], [35.5, 9727.0], [35.6, 9727.0], [35.7, 9727.0], [35.8, 9728.0], [35.9, 9728.0], [36.0, 9728.0], [36.1, 9728.0], [36.2, 9728.0], [36.3, 9728.0], [36.4, 9728.0], [36.5, 9728.0], [36.6, 9728.0], [36.7, 9733.0], [36.8, 9975.0], [36.9, 9983.0], [37.0, 9983.0], [37.1, 9984.0], [37.2, 9984.0], [37.3, 9984.0], [37.4, 9984.0], [37.5, 9984.0], [37.6, 9985.0], [37.7, 9985.0], [37.8, 9987.0], [37.9, 9988.0], [38.0, 9988.0], [38.1, 10123.0], [38.2, 10238.0], [38.3, 10239.0], [38.4, 10239.0], [38.5, 10239.0], [38.6, 10239.0], [38.7, 10239.0], [38.8, 10240.0], [38.9, 10240.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10240.0], [39.3, 10240.0], [39.4, 10241.0], [39.5, 10241.0], [39.6, 10243.0], [39.7, 10244.0], [39.8, 10244.0], [39.9, 10244.0], [40.0, 10244.0], [40.1, 10258.0], [40.2, 10298.0], [40.3, 10322.0], [40.4, 10336.0], [40.5, 10421.0], [40.6, 10439.0], [40.7, 10484.0], [40.8, 10492.0], [40.9, 10492.0], [41.0, 10495.0], [41.1, 10496.0], [41.2, 10496.0], [41.3, 10499.0], [41.4, 10519.0], [41.5, 10541.0], [41.6, 10557.0], [41.7, 10628.0], [41.8, 10632.0], [41.9, 10680.0], [42.0, 10708.0], [42.1, 10734.0], [42.2, 10748.0], [42.3, 10748.0], [42.4, 10751.0], [42.5, 10752.0], [42.6, 10752.0], [42.7, 10752.0], [42.8, 10752.0], [42.9, 10752.0], [43.0, 10752.0], [43.1, 10752.0], [43.2, 10755.0], [43.3, 10796.0], [43.4, 10813.0], [43.5, 10815.0], [43.6, 10837.0], [43.7, 10868.0], [43.8, 10869.0], [43.9, 10904.0], [44.0, 10909.0], [44.1, 10909.0], [44.2, 10929.0], [44.3, 10959.0], [44.4, 10973.0], [44.5, 10982.0], [44.6, 11004.0], [44.7, 11004.0], [44.8, 11007.0], [44.9, 11008.0], [45.0, 11008.0], [45.1, 11008.0], [45.2, 11012.0], [45.3, 11017.0], [45.4, 11046.0], [45.5, 11052.0], [45.6, 11053.0], [45.7, 11065.0], [45.8, 11070.0], [45.9, 11073.0], [46.0, 11087.0], [46.1, 11087.0], [46.2, 11111.0], [46.3, 11122.0], [46.4, 11133.0], [46.5, 11153.0], [46.6, 11162.0], [46.7, 11163.0], [46.8, 11191.0], [46.9, 11214.0], [47.0, 11215.0], [47.1, 11230.0], [47.2, 11238.0], [47.3, 11238.0], [47.4, 11246.0], [47.5, 11252.0], [47.6, 11254.0], [47.7, 11263.0], [47.8, 11263.0], [47.9, 11263.0], [48.0, 11264.0], [48.1, 11264.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11264.0], [48.5, 11264.0], [48.6, 11268.0], [48.7, 11268.0], [48.8, 11289.0], [48.9, 11300.0], [49.0, 11303.0], [49.1, 11306.0], [49.2, 11322.0], [49.3, 11340.0], [49.4, 11389.0], [49.5, 11433.0], [49.6, 11440.0], [49.7, 11454.0], [49.8, 11462.0], [49.9, 11470.0], [50.0, 11476.0], [50.1, 11497.0], [50.2, 11500.0], [50.3, 11520.0], [50.4, 11520.0], [50.5, 11520.0], [50.6, 11524.0], [50.7, 11525.0], [50.8, 11525.0], [50.9, 11534.0], [51.0, 11538.0], [51.1, 11541.0], [51.2, 11546.0], [51.3, 11569.0], [51.4, 11573.0], [51.5, 11593.0], [51.6, 11602.0], [51.7, 11613.0], [51.8, 11619.0], [51.9, 11630.0], [52.0, 11640.0], [52.1, 11646.0], [52.2, 11672.0], [52.3, 11680.0], [52.4, 11687.0], [52.5, 11694.0], [52.6, 11707.0], [52.7, 11737.0], [52.8, 11739.0], [52.9, 11756.0], [53.0, 11762.0], [53.1, 11767.0], [53.2, 11772.0], [53.3, 11775.0], [53.4, 11775.0], [53.5, 11776.0], [53.6, 11776.0], [53.7, 11776.0], [53.8, 11804.0], [53.9, 11820.0], [54.0, 11822.0], [54.1, 11852.0], [54.2, 11858.0], [54.3, 11859.0], [54.4, 11905.0], [54.5, 11906.0], [54.6, 11920.0], [54.7, 11926.0], [54.8, 11927.0], [54.9, 11938.0], [55.0, 11947.0], [55.1, 11962.0], [55.2, 11967.0], [55.3, 12003.0], [55.4, 12009.0], [55.5, 12031.0], [55.6, 12035.0], [55.7, 12041.0], [55.8, 12056.0], [55.9, 12063.0], [56.0, 12067.0], [56.1, 12099.0], [56.2, 12114.0], [56.3, 12121.0], [56.4, 12125.0], [56.5, 12145.0], [56.6, 12149.0], [56.7, 12203.0], [56.8, 12212.0], [56.9, 12233.0], [57.0, 12249.0], [57.1, 12255.0], [57.2, 12257.0], [57.3, 12283.0], [57.4, 12283.0], [57.5, 12284.0], [57.6, 12284.0], [57.7, 12284.0], [57.8, 12286.0], [57.9, 12287.0], [58.0, 12287.0], [58.1, 12288.0], [58.2, 12288.0], [58.3, 12288.0], [58.4, 12288.0], [58.5, 12288.0], [58.6, 12288.0], [58.7, 12288.0], [58.8, 12288.0], [58.9, 12288.0], [59.0, 12288.0], [59.1, 12296.0], [59.2, 12315.0], [59.3, 12319.0], [59.4, 12330.0], [59.5, 12332.0], [59.6, 12356.0], [59.7, 12359.0], [59.8, 12361.0], [59.9, 12405.0], [60.0, 12415.0], [60.1, 12440.0], [60.2, 12459.0], [60.3, 12474.0], [60.4, 12484.0], [60.5, 12509.0], [60.6, 12511.0], [60.7, 12540.0], [60.8, 12544.0], [60.9, 12544.0], [61.0, 12544.0], [61.1, 12548.0], [61.2, 12548.0], [61.3, 12577.0], [61.4, 12592.0], [61.5, 12613.0], [61.6, 12663.0], [61.7, 12689.0], [61.8, 12700.0], [61.9, 12734.0], [62.0, 12749.0], [62.1, 12759.0], [62.2, 12777.0], [62.3, 12781.0], [62.4, 12795.0], [62.5, 12796.0], [62.6, 12799.0], [62.7, 12799.0], [62.8, 12800.0], [62.9, 12800.0], [63.0, 12800.0], [63.1, 12800.0], [63.2, 12800.0], [63.3, 12804.0], [63.4, 12804.0], [63.5, 12804.0], [63.6, 12804.0], [63.7, 12833.0], [63.8, 12897.0], [63.9, 12911.0], [64.0, 13025.0], [64.1, 13041.0], [64.2, 13053.0], [64.3, 13056.0], [64.4, 13056.0], [64.5, 13056.0], [64.6, 13056.0], [64.7, 13056.0], [64.8, 13057.0], [64.9, 13060.0], [65.0, 13120.0], [65.1, 13147.0], [65.2, 13181.0], [65.3, 13195.0], [65.4, 13215.0], [65.5, 13254.0], [65.6, 13296.0], [65.7, 13306.0], [65.8, 13307.0], [65.9, 13307.0], [66.0, 13307.0], [66.1, 13307.0], [66.2, 13308.0], [66.3, 13308.0], [66.4, 13308.0], [66.5, 13308.0], [66.6, 13308.0], [66.7, 13308.0], [66.8, 13308.0], [66.9, 13308.0], [67.0, 13308.0], [67.1, 13308.0], [67.2, 13308.0], [67.3, 13308.0], [67.4, 13308.0], [67.5, 13308.0], [67.6, 13308.0], [67.7, 13309.0], [67.8, 13309.0], [67.9, 13310.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13311.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13315.0], [78.2, 13315.0], [78.3, 13315.0], [78.4, 13316.0], [78.5, 13316.0], [78.6, 13316.0], [78.7, 13316.0], [78.8, 13316.0], [78.9, 13369.0], [79.0, 13432.0], [79.1, 13472.0], [79.2, 13496.0], [79.3, 13567.0], [79.4, 13568.0], [79.5, 13568.0], [79.6, 13568.0], [79.7, 13568.0], [79.8, 13568.0], [79.9, 13572.0], [80.0, 13573.0], [80.1, 13650.0], [80.2, 13698.0], [80.3, 13766.0], [80.4, 13800.0], [80.5, 13817.0], [80.6, 13819.0], [80.7, 13820.0], [80.8, 13820.0], [80.9, 13820.0], [81.0, 13820.0], [81.1, 13823.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13825.0], [82.9, 13827.0], [83.0, 13827.0], [83.1, 13827.0], [83.2, 13827.0], [83.3, 13828.0], [83.4, 13828.0], [83.5, 13883.0], [83.6, 13900.0], [83.7, 13960.0], [83.8, 13993.0], [83.9, 14002.0], [84.0, 14035.0], [84.1, 14041.0], [84.2, 14060.0], [84.3, 14079.0], [84.4, 14080.0], [84.5, 14080.0], [84.6, 14080.0], [84.7, 14080.0], [84.8, 14083.0], [84.9, 14265.0], [85.0, 14271.0], [85.1, 14332.0], [85.2, 14332.0], [85.3, 14332.0], [85.4, 14332.0], [85.5, 14334.0], [85.6, 14334.0], [85.7, 14335.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14336.0], [86.6, 14336.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14339.0], [87.6, 14340.0], [87.7, 14395.0], [87.8, 14588.0], [87.9, 14588.0], [88.0, 14591.0], [88.1, 14592.0], [88.2, 14592.0], [88.3, 14592.0], [88.4, 14596.0], [88.5, 14596.0], [88.6, 14823.0], [88.7, 14843.0], [88.8, 14843.0], [88.9, 14846.0], [89.0, 14847.0], [89.1, 14847.0], [89.2, 14847.0], [89.3, 14848.0], [89.4, 14848.0], [89.5, 14849.0], [89.6, 14852.0], [89.7, 14891.0], [89.8, 15144.0], [89.9, 15356.0], [90.0, 15483.0], [90.1, 15612.0], [90.2, 15612.0], [90.3, 16380.0], [90.4, 16389.0], [90.5, 16586.0], [90.6, 16650.0], [90.7, 16898.0], [90.8, 16900.0], [90.9, 17151.0], [91.0, 17152.0], [91.1, 17154.0], [91.2, 17231.0], [91.3, 17444.0], [91.4, 17614.0], [91.5, 17730.0], [91.6, 17924.0], [91.7, 18159.0], [91.8, 18505.0], [91.9, 18684.0], [92.0, 18687.0], [92.1, 18691.0], [92.2, 18692.0], [92.3, 18938.0], [92.4, 19200.0], [92.5, 19200.0], [92.6, 19421.0], [92.7, 19460.0], [92.8, 19596.0], [92.9, 19968.0], [93.0, 19971.0], [93.1, 22260.0], [93.2, 22784.0], [93.3, 23173.0], [93.4, 23561.0], [93.5, 24576.0], [93.6, 24576.0], [93.7, 24793.0], [93.8, 26124.0], [93.9, 26367.0], [94.0, 26368.0], [94.1, 30204.0], [94.2, 32764.0], [94.3, 34816.0], [94.4, 39830.0], [94.5, 43011.0], [94.6, 47107.0], [94.7, 52511.0], [94.8, 53760.0], [94.9, 57599.0], [95.0, 68439.0], [95.1, 71751.0], [95.2, 73980.0], [95.3, 76800.0], [95.4, 79359.0], [95.5, 79363.0], [95.6, 79611.0], [95.7, 90112.0], [95.8, 97791.0], [95.9, 101118.0], [96.0, 105471.0], [96.1, 106238.0], [96.2, 106240.0], [96.3, 106241.0], [96.4, 106495.0], [96.5, 107310.0], [96.6, 107776.0], [96.7, 109568.0], [96.8, 110339.0], [96.9, 110847.0], [97.0, 111105.0], [97.1, 113668.0], [97.2, 113668.0], [97.3, 114708.0], [97.4, 114711.0], [97.5, 119808.0], [97.6, 120832.0], [97.7, 124415.0], [97.8, 126716.0], [97.9, 127231.0], [98.0, 127231.0], [98.1, 127231.0], [98.2, 130044.0], [98.3, 130303.0], [98.4, 130304.0], [98.5, 130305.0], [98.6, 131072.0], [98.7, 132351.0], [98.8, 135935.0], [98.9, 137983.0], [99.0, 140291.0], [99.1, 146431.0], [99.2, 146432.0], [99.3, 146432.0], [99.4, 146432.0], [99.5, 146433.0], [99.6, 156416.0], [99.7, 209920.0], [99.8, 209920.0], [99.9, 211199.0], [100.0, 211199.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 5.0], [4.7, 21.0], [4.8, 27.0], [4.9, 30.0], [5.0, 33.0], [5.1, 35.0], [5.2, 39.0], [5.3, 39.0], [5.4, 42.0], [5.5, 93.0], [5.6, 225.0], [5.7, 267.0], [5.8, 554.0], [5.9, 678.0], [6.0, 750.0], [6.1, 813.0], [6.2, 1043.0], [6.3, 1080.0], [6.4, 1108.0], [6.5, 1277.0], [6.6, 1635.0], [6.7, 1652.0], [6.8, 1826.0], [6.9, 2220.0], [7.0, 2262.0], [7.1, 2437.0], [7.2, 2570.0], [7.3, 2699.0], [7.4, 2701.0], [7.5, 3131.0], [7.6, 3554.0], [7.7, 3618.0], [7.8, 3685.0], [7.9, 3787.0], [8.0, 3949.0], [8.1, 3985.0], [8.2, 4088.0], [8.3, 4125.0], [8.4, 4165.0], [8.5, 4224.0], [8.6, 4309.0], [8.7, 4327.0], [8.8, 4399.0], [8.9, 4457.0], [9.0, 4506.0], [9.1, 4876.0], [9.2, 4891.0], [9.3, 5122.0], [9.4, 5192.0], [9.5, 5435.0], [9.6, 5472.0], [9.7, 5561.0], [9.8, 6238.0], [9.9, 6271.0], [10.0, 6390.0], [10.1, 6602.0], [10.2, 6667.0], [10.3, 6735.0], [10.4, 6748.0], [10.5, 6775.0], [10.6, 6802.0], [10.7, 6885.0], [10.8, 7005.0], [10.9, 7089.0], [11.0, 7109.0], [11.1, 7124.0], [11.2, 7163.0], [11.3, 7164.0], [11.4, 7164.0], [11.5, 7164.0], [11.6, 7165.0], [11.7, 7166.0], [11.8, 7167.0], [11.9, 7167.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7169.0], [14.0, 7169.0], [14.1, 7171.0], [14.2, 7172.0], [14.3, 7172.0], [14.4, 7174.0], [14.5, 7217.0], [14.6, 7229.0], [14.7, 7277.0], [14.8, 7283.0], [14.9, 7312.0], [15.0, 7325.0], [15.1, 7342.0], [15.2, 7357.0], [15.3, 7379.0], [15.4, 7384.0], [15.5, 7394.0], [15.6, 7420.0], [15.7, 7421.0], [15.8, 7422.0], [15.9, 7422.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7425.0], [17.6, 7425.0], [17.7, 7425.0], [17.8, 7426.0], [17.9, 7428.0], [18.0, 7428.0], [18.1, 7467.0], [18.2, 7533.0], [18.3, 7645.0], [18.4, 7675.0], [18.5, 7676.0], [18.6, 7676.0], [18.7, 7677.0], [18.8, 7678.0], [18.9, 7678.0], [19.0, 7679.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7684.0], [20.0, 7684.0], [20.1, 7684.0], [20.2, 7684.0], [20.3, 7742.0], [20.4, 7772.0], [20.5, 7779.0], [20.6, 7893.0], [20.7, 7933.0], [20.8, 7934.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7937.0], [22.4, 7937.0], [22.5, 7939.0], [22.6, 7940.0], [22.7, 7940.0], [22.8, 7940.0], [22.9, 7940.0], [23.0, 8019.0], [23.1, 8104.0], [23.2, 8188.0], [23.3, 8188.0], [23.4, 8191.0], [23.5, 8191.0], [23.6, 8191.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8193.0], [24.0, 8195.0], [24.1, 8195.0], [24.2, 8349.0], [24.3, 8357.0], [24.4, 8398.0], [24.5, 8443.0], [24.6, 8445.0], [24.7, 8447.0], [24.8, 8448.0], [24.9, 8448.0], [25.0, 8448.0], [25.1, 8448.0], [25.2, 8448.0], [25.3, 8448.0], [25.4, 8448.0], [25.5, 8451.0], [25.6, 8452.0], [25.7, 8511.0], [25.8, 8512.0], [25.9, 8569.0], [26.0, 8624.0], [26.1, 8638.0], [26.2, 8652.0], [26.3, 8700.0], [26.4, 8700.0], [26.5, 8700.0], [26.6, 8700.0], [26.7, 8702.0], [26.8, 8703.0], [26.9, 8703.0], [27.0, 8704.0], [27.1, 8704.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8705.0], [28.1, 8705.0], [28.2, 8705.0], [28.3, 8705.0], [28.4, 8705.0], [28.5, 8708.0], [28.6, 8708.0], [28.7, 8708.0], [28.8, 8728.0], [28.9, 8776.0], [29.0, 8858.0], [29.1, 8943.0], [29.2, 8954.0], [29.3, 8957.0], [29.4, 8959.0], [29.5, 8959.0], [29.6, 8960.0], [29.7, 8960.0], [29.8, 8960.0], [29.9, 8960.0], [30.0, 8960.0], [30.1, 8960.0], [30.2, 8960.0], [30.3, 8960.0], [30.4, 8962.0], [30.5, 8964.0], [30.6, 9014.0], [30.7, 9026.0], [30.8, 9073.0], [30.9, 9097.0], [31.0, 9134.0], [31.1, 9197.0], [31.2, 9212.0], [31.3, 9214.0], [31.4, 9214.0], [31.5, 9214.0], [31.6, 9215.0], [31.7, 9215.0], [31.8, 9215.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9217.0], [33.5, 9217.0], [33.6, 9218.0], [33.7, 9219.0], [33.8, 9286.0], [33.9, 9338.0], [34.0, 9382.0], [34.1, 9471.0], [34.2, 9471.0], [34.3, 9472.0], [34.4, 9472.0], [34.5, 9472.0], [34.6, 9472.0], [34.7, 9472.0], [34.8, 9476.0], [34.9, 9481.0], [35.0, 9525.0], [35.1, 9542.0], [35.2, 9556.0], [35.3, 9601.0], [35.4, 9670.0], [35.5, 9721.0], [35.6, 9723.0], [35.7, 9724.0], [35.8, 9725.0], [35.9, 9727.0], [36.0, 9727.0], [36.1, 9727.0], [36.2, 9728.0], [36.3, 9728.0], [36.4, 9728.0], [36.5, 9728.0], [36.6, 9728.0], [36.7, 9728.0], [36.8, 9728.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9732.0], [37.2, 9732.0], [37.3, 9760.0], [37.4, 9780.0], [37.5, 9831.0], [37.6, 9875.0], [37.7, 9881.0], [37.8, 9920.0], [37.9, 9973.0], [38.0, 9983.0], [38.1, 9984.0], [38.2, 9984.0], [38.3, 9984.0], [38.4, 9984.0], [38.5, 10008.0], [38.6, 10088.0], [38.7, 10105.0], [38.8, 10122.0], [38.9, 10180.0], [39.0, 10217.0], [39.1, 10235.0], [39.2, 10237.0], [39.3, 10238.0], [39.4, 10240.0], [39.5, 10240.0], [39.6, 10240.0], [39.7, 10240.0], [39.8, 10240.0], [39.9, 10240.0], [40.0, 10240.0], [40.1, 10240.0], [40.2, 10241.0], [40.3, 10241.0], [40.4, 10243.0], [40.5, 10243.0], [40.6, 10244.0], [40.7, 10245.0], [40.8, 10255.0], [40.9, 10269.0], [41.0, 10322.0], [41.1, 10330.0], [41.2, 10353.0], [41.3, 10401.0], [41.4, 10406.0], [41.5, 10435.0], [41.6, 10446.0], [41.7, 10467.0], [41.8, 10482.0], [41.9, 10491.0], [42.0, 10495.0], [42.1, 10497.0], [42.2, 10500.0], [42.3, 10522.0], [42.4, 10530.0], [42.5, 10545.0], [42.6, 10610.0], [42.7, 10621.0], [42.8, 10623.0], [42.9, 10627.0], [43.0, 10631.0], [43.1, 10645.0], [43.2, 10661.0], [43.3, 10678.0], [43.4, 10689.0], [43.5, 10694.0], [43.6, 10705.0], [43.7, 10708.0], [43.8, 10712.0], [43.9, 10739.0], [44.0, 10747.0], [44.1, 10748.0], [44.2, 10750.0], [44.3, 10751.0], [44.4, 10752.0], [44.5, 10752.0], [44.6, 10752.0], [44.7, 10752.0], [44.8, 10770.0], [44.9, 10803.0], [45.0, 10821.0], [45.1, 10828.0], [45.2, 10889.0], [45.3, 10912.0], [45.4, 10929.0], [45.5, 10939.0], [45.6, 10975.0], [45.7, 10985.0], [45.8, 10985.0], [45.9, 10988.0], [46.0, 11003.0], [46.1, 11004.0], [46.2, 11004.0], [46.3, 11007.0], [46.4, 11008.0], [46.5, 11008.0], [46.6, 11008.0], [46.7, 11008.0], [46.8, 11008.0], [46.9, 11008.0], [47.0, 11019.0], [47.1, 11048.0], [47.2, 11050.0], [47.3, 11066.0], [47.4, 11090.0], [47.5, 11101.0], [47.6, 11116.0], [47.7, 11120.0], [47.8, 11143.0], [47.9, 11143.0], [48.0, 11158.0], [48.1, 11168.0], [48.2, 11186.0], [48.3, 11186.0], [48.4, 11204.0], [48.5, 11210.0], [48.6, 11227.0], [48.7, 11242.0], [48.8, 11243.0], [48.9, 11253.0], [49.0, 11259.0], [49.1, 11260.0], [49.2, 11260.0], [49.3, 11263.0], [49.4, 11263.0], [49.5, 11263.0], [49.6, 11264.0], [49.7, 11264.0], [49.8, 11264.0], [49.9, 11264.0], [50.0, 11264.0], [50.1, 11264.0], [50.2, 11264.0], [50.3, 11265.0], [50.4, 11265.0], [50.5, 11277.0], [50.6, 11279.0], [50.7, 11289.0], [50.8, 11291.0], [50.9, 11301.0], [51.0, 11321.0], [51.1, 11341.0], [51.2, 11392.0], [51.3, 11414.0], [51.4, 11426.0], [51.5, 11454.0], [51.6, 11463.0], [51.7, 11484.0], [51.8, 11484.0], [51.9, 11517.0], [52.0, 11520.0], [52.1, 11520.0], [52.2, 11520.0], [52.3, 11524.0], [52.4, 11529.0], [52.5, 11538.0], [52.6, 11574.0], [52.7, 11591.0], [52.8, 11610.0], [52.9, 11613.0], [53.0, 11637.0], [53.1, 11658.0], [53.2, 11671.0], [53.3, 11682.0], [53.4, 11733.0], [53.5, 11745.0], [53.6, 11759.0], [53.7, 11767.0], [53.8, 11775.0], [53.9, 11775.0], [54.0, 11776.0], [54.1, 11776.0], [54.2, 11776.0], [54.3, 11776.0], [54.4, 11776.0], [54.5, 11776.0], [54.6, 11776.0], [54.7, 11779.0], [54.8, 11780.0], [54.9, 11801.0], [55.0, 11812.0], [55.1, 11830.0], [55.2, 11840.0], [55.3, 11846.0], [55.4, 11857.0], [55.5, 11905.0], [55.6, 11926.0], [55.7, 11933.0], [55.8, 11972.0], [55.9, 12004.0], [56.0, 12006.0], [56.1, 12032.0], [56.2, 12032.0], [56.3, 12033.0], [56.4, 12042.0], [56.5, 12056.0], [56.6, 12122.0], [56.7, 12124.0], [56.8, 12192.0], [56.9, 12283.0], [57.0, 12284.0], [57.1, 12284.0], [57.2, 12286.0], [57.3, 12287.0], [57.4, 12287.0], [57.5, 12288.0], [57.6, 12288.0], [57.7, 12288.0], [57.8, 12288.0], [57.9, 12430.0], [58.0, 12448.0], [58.1, 12455.0], [58.2, 12476.0], [58.3, 12543.0], [58.4, 12544.0], [58.5, 12548.0], [58.6, 12558.0], [58.7, 12610.0], [58.8, 12629.0], [58.9, 12656.0], [59.0, 12717.0], [59.1, 12756.0], [59.2, 12787.0], [59.3, 12796.0], [59.4, 12799.0], [59.5, 12800.0], [59.6, 12800.0], [59.7, 12800.0], [59.8, 12800.0], [59.9, 12800.0], [60.0, 12826.0], [60.1, 12852.0], [60.2, 12877.0], [60.3, 12899.0], [60.4, 12997.0], [60.5, 13034.0], [60.6, 13041.0], [60.7, 13050.0], [60.8, 13054.0], [60.9, 13055.0], [61.0, 13056.0], [61.1, 13059.0], [61.2, 13060.0], [61.3, 13060.0], [61.4, 13164.0], [61.5, 13180.0], [61.6, 13186.0], [61.7, 13196.0], [61.8, 13233.0], [61.9, 13239.0], [62.0, 13239.0], [62.1, 13256.0], [62.2, 13268.0], [62.3, 13272.0], [62.4, 13277.0], [62.5, 13296.0], [62.6, 13304.0], [62.7, 13305.0], [62.8, 13305.0], [62.9, 13307.0], [63.0, 13307.0], [63.1, 13307.0], [63.2, 13308.0], [63.3, 13308.0], [63.4, 13308.0], [63.5, 13308.0], [63.6, 13308.0], [63.7, 13308.0], [63.8, 13308.0], [63.9, 13308.0], [64.0, 13308.0], [64.1, 13308.0], [64.2, 13308.0], [64.3, 13308.0], [64.4, 13308.0], [64.5, 13308.0], [64.6, 13309.0], [64.7, 13309.0], [64.8, 13309.0], [64.9, 13310.0], [65.0, 13310.0], [65.1, 13310.0], [65.2, 13310.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13314.0], [73.1, 13315.0], [73.2, 13315.0], [73.3, 13315.0], [73.4, 13315.0], [73.5, 13315.0], [73.6, 13315.0], [73.7, 13316.0], [73.8, 13316.0], [73.9, 13316.0], [74.0, 13316.0], [74.1, 13316.0], [74.2, 13316.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13326.0], [74.7, 13329.0], [74.8, 13330.0], [74.9, 13342.0], [75.0, 13351.0], [75.1, 13352.0], [75.2, 13354.0], [75.3, 13358.0], [75.4, 13359.0], [75.5, 13373.0], [75.6, 13378.0], [75.7, 13392.0], [75.8, 13412.0], [75.9, 13434.0], [76.0, 13466.0], [76.1, 13484.0], [76.2, 13492.0], [76.3, 13498.0], [76.4, 13555.0], [76.5, 13561.0], [76.6, 13568.0], [76.7, 13568.0], [76.8, 13568.0], [76.9, 13572.0], [77.0, 13585.0], [77.1, 13658.0], [77.2, 13678.0], [77.3, 13756.0], [77.4, 13780.0], [77.5, 13812.0], [77.6, 13819.0], [77.7, 13820.0], [77.8, 13820.0], [77.9, 13820.0], [78.0, 13821.0], [78.1, 13822.0], [78.2, 13823.0], [78.3, 13823.0], [78.4, 13823.0], [78.5, 13823.0], [78.6, 13823.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13825.0], [80.8, 13825.0], [80.9, 13825.0], [81.0, 13828.0], [81.1, 13828.0], [81.2, 13828.0], [81.3, 13828.0], [81.4, 13828.0], [81.5, 13835.0], [81.6, 13874.0], [81.7, 13931.0], [81.8, 13963.0], [81.9, 14076.0], [82.0, 14079.0], [82.1, 14079.0], [82.2, 14081.0], [82.3, 14084.0], [82.4, 14183.0], [82.5, 14214.0], [82.6, 14264.0], [82.7, 14331.0], [82.8, 14332.0], [82.9, 14332.0], [83.0, 14334.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14337.0], [84.5, 14337.0], [84.6, 14339.0], [84.7, 14421.0], [84.8, 14441.0], [84.9, 14449.0], [85.0, 14533.0], [85.1, 14585.0], [85.2, 14588.0], [85.3, 14588.0], [85.4, 14592.0], [85.5, 14592.0], [85.6, 14592.0], [85.7, 14594.0], [85.8, 14779.0], [85.9, 14847.0], [86.0, 14847.0], [86.1, 14848.0], [86.2, 14848.0], [86.3, 14848.0], [86.4, 14849.0], [86.5, 14849.0], [86.6, 14852.0], [86.7, 14852.0], [86.8, 14852.0], [86.9, 14882.0], [87.0, 14892.0], [87.1, 15002.0], [87.2, 15104.0], [87.3, 15146.0], [87.4, 15202.0], [87.5, 15233.0], [87.6, 15335.0], [87.7, 15359.0], [87.8, 15360.0], [87.9, 15360.0], [88.0, 15450.0], [88.1, 15524.0], [88.2, 15614.0], [88.3, 15679.0], [88.4, 15935.0], [88.5, 16082.0], [88.6, 16380.0], [88.7, 16384.0], [88.8, 16384.0], [88.9, 16412.0], [89.0, 16872.0], [89.1, 16942.0], [89.2, 17152.0], [89.3, 17254.0], [89.4, 17585.0], [89.5, 17589.0], [89.6, 18176.0], [89.7, 18401.0], [89.8, 18500.0], [89.9, 18613.0], [90.0, 18687.0], [90.1, 18940.0], [90.2, 18940.0], [90.3, 18944.0], [90.4, 19200.0], [90.5, 19291.0], [90.6, 19819.0], [90.7, 20196.0], [90.8, 20480.0], [90.9, 20544.0], [91.0, 21212.0], [91.1, 22088.0], [91.2, 22248.0], [91.3, 22726.0], [91.4, 23182.0], [91.5, 23200.0], [91.6, 23210.0], [91.7, 25340.0], [91.8, 26071.0], [91.9, 26365.0], [92.0, 26367.0], [92.1, 26927.0], [92.2, 27286.0], [92.3, 27750.0], [92.4, 29003.0], [92.5, 30223.0], [92.6, 32768.0], [92.7, 33199.0], [92.8, 38526.0], [92.9, 42219.0], [93.0, 42565.0], [93.1, 45921.0], [93.2, 51936.0], [93.3, 53819.0], [93.4, 54100.0], [93.5, 56341.0], [93.6, 58848.0], [93.7, 60233.0], [93.8, 64915.0], [93.9, 70530.0], [94.0, 71707.0], [94.1, 72257.0], [94.2, 73980.0], [94.3, 77532.0], [94.4, 78438.0], [94.5, 79359.0], [94.6, 79361.0], [94.7, 79363.0], [94.8, 79612.0], [94.9, 81609.0], [95.0, 87669.0], [95.1, 89693.0], [95.2, 94438.0], [95.3, 100775.0], [95.4, 105538.0], [95.5, 105634.0], [95.6, 106085.0], [95.7, 106240.0], [95.8, 106298.0], [95.9, 106586.0], [96.0, 107135.0], [96.1, 107263.0], [96.2, 107264.0], [96.3, 107559.0], [96.4, 107776.0], [96.5, 107822.0], [96.6, 108799.0], [96.7, 109307.0], [96.8, 110273.0], [96.9, 110330.0], [97.0, 110489.0], [97.1, 111103.0], [97.2, 111105.0], [97.3, 113667.0], [97.4, 114612.0], [97.5, 114713.0], [97.6, 114715.0], [97.7, 115826.0], [97.8, 116739.0], [97.9, 116740.0], [98.0, 119039.0], [98.1, 119940.0], [98.2, 120832.0], [98.3, 122286.0], [98.4, 123594.0], [98.5, 126716.0], [98.6, 126717.0], [98.7, 127231.0], [98.8, 127743.0], [98.9, 132511.0], [99.0, 137983.0], [99.1, 140292.0], [99.2, 140292.0], [99.3, 144641.0], [99.4, 146434.0], [99.5, 146434.0], [99.6, 148611.0], [99.7, 153088.0], [99.8, 180901.0], [99.9, 211199.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 657.0, "series": [{"data": [[0.0, 314.0], [146400.0, 10.0], [210400.0, 4.0], [148900.0, 2.0], [73900.0, 2.0], [79500.0, 1.0], [89900.0, 1.0], [88300.0, 1.0], [140200.0, 2.0], [153000.0, 1.0], [137900.0, 3.0], [37300.0, 1.0], [44500.0, 1.0], [43300.0, 1.0], [45300.0, 1.0], [209900.0, 1.0], [53700.0, 1.0], [57700.0, 1.0], [61300.0, 1.0], [73800.0, 2.0], [78600.0, 1.0], [90600.0, 1.0], [109000.0, 1.0], [114600.0, 1.0], [116200.0, 1.0], [115400.0, 3.0], [150000.0, 2.0], [156400.0, 1.0], [1100.0, 2.0], [1200.0, 20.0], [1300.0, 32.0], [1400.0, 41.0], [1500.0, 11.0], [1600.0, 16.0], [1700.0, 12.0], [1800.0, 19.0], [1900.0, 9.0], [2000.0, 8.0], [2100.0, 11.0], [2300.0, 12.0], [2200.0, 10.0], [2400.0, 13.0], [2500.0, 14.0], [2600.0, 19.0], [2700.0, 19.0], [2800.0, 19.0], [2900.0, 17.0], [3000.0, 11.0], [3100.0, 11.0], [3200.0, 8.0], [3300.0, 9.0], [3400.0, 6.0], [3500.0, 6.0], [3600.0, 7.0], [3700.0, 6.0], [3800.0, 20.0], [3900.0, 20.0], [4000.0, 14.0], [4300.0, 5.0], [4100.0, 11.0], [4200.0, 7.0], [4600.0, 3.0], [4400.0, 12.0], [4500.0, 3.0], [70500.0, 1.0], [73700.0, 1.0], [4700.0, 8.0], [4800.0, 8.0], [74500.0, 1.0], [5000.0, 22.0], [4900.0, 15.0], [5100.0, 12.0], [78500.0, 2.0], [79300.0, 5.0], [5200.0, 18.0], [5300.0, 20.0], [5400.0, 25.0], [5500.0, 29.0], [5600.0, 20.0], [5800.0, 36.0], [5700.0, 33.0], [5900.0, 21.0], [6000.0, 6.0], [6100.0, 12.0], [97700.0, 2.0], [6200.0, 19.0], [6300.0, 8.0], [6500.0, 20.0], [6600.0, 16.0], [6400.0, 17.0], [105700.0, 1.0], [6800.0, 9.0], [6700.0, 13.0], [6900.0, 10.0], [108100.0, 1.0], [7100.0, 148.0], [7000.0, 11.0], [7300.0, 13.0], [7200.0, 12.0], [7400.0, 134.0], [7600.0, 102.0], [7500.0, 8.0], [7700.0, 19.0], [7900.0, 135.0], [7800.0, 14.0], [123300.0, 1.0], [8000.0, 48.0], [8100.0, 90.0], [8300.0, 18.0], [8200.0, 24.0], [8500.0, 12.0], [8400.0, 69.0], [8700.0, 134.0], [8600.0, 22.0], [9000.0, 12.0], [8800.0, 17.0], [8900.0, 71.0], [9100.0, 16.0], [9200.0, 121.0], [9300.0, 9.0], [9400.0, 45.0], [9500.0, 11.0], [9600.0, 9.0], [9700.0, 106.0], [10100.0, 6.0], [9800.0, 9.0], [10000.0, 7.0], [9900.0, 39.0], [10200.0, 65.0], [10300.0, 9.0], [10600.0, 10.0], [10500.0, 16.0], [10400.0, 31.0], [10700.0, 46.0], [10900.0, 18.0], [10800.0, 15.0], [11000.0, 55.0], [11200.0, 115.0], [11100.0, 41.0], [11400.0, 67.0], [11500.0, 135.0], [11300.0, 58.0], [11700.0, 246.0], [11600.0, 176.0], [11800.0, 245.0], [11900.0, 253.0], [12000.0, 272.0], [12100.0, 245.0], [12200.0, 328.0], [12600.0, 261.0], [12300.0, 300.0], [12500.0, 259.0], [12400.0, 320.0], [12700.0, 276.0], [12900.0, 200.0], [13100.0, 205.0], [12800.0, 256.0], [13000.0, 231.0], [13300.0, 657.0], [13200.0, 204.0], [13400.0, 102.0], [13600.0, 64.0], [13500.0, 95.0], [13700.0, 42.0], [13800.0, 176.0], [14000.0, 43.0], [13900.0, 24.0], [14100.0, 21.0], [14300.0, 124.0], [14200.0, 12.0], [14400.0, 12.0], [14600.0, 8.0], [14700.0, 4.0], [14500.0, 33.0], [14800.0, 30.0], [15100.0, 9.0], [15200.0, 3.0], [15300.0, 24.0], [15000.0, 3.0], [14900.0, 3.0], [15500.0, 5.0], [15600.0, 15.0], [15800.0, 4.0], [15400.0, 4.0], [15700.0, 2.0], [16000.0, 4.0], [16300.0, 9.0], [15900.0, 2.0], [16200.0, 3.0], [16100.0, 2.0], [16600.0, 1.0], [16800.0, 2.0], [17400.0, 1.0], [17000.0, 1.0], [17200.0, 1.0], [16400.0, 1.0], [18400.0, 1.0], [17600.0, 4.0], [18000.0, 1.0], [19200.0, 7.0], [18600.0, 9.0], [19000.0, 3.0], [19400.0, 2.0], [20400.0, 3.0], [19600.0, 2.0], [20000.0, 1.0], [20200.0, 1.0], [21000.0, 1.0], [21200.0, 2.0], [21400.0, 2.0], [22200.0, 1.0], [23200.0, 2.0], [22800.0, 2.0], [23000.0, 1.0], [23600.0, 1.0], [24600.0, 2.0], [26600.0, 3.0], [26400.0, 2.0], [26200.0, 2.0], [25800.0, 1.0], [28600.0, 4.0], [30200.0, 1.0], [31400.0, 1.0], [38800.0, 1.0], [147900.0, 2.0], [41600.0, 1.0], [41200.0, 1.0], [43200.0, 5.0], [44000.0, 1.0], [54800.0, 1.0], [73600.0, 3.0], [91200.0, 1.0], [95200.0, 1.0], [106400.0, 1.0], [107200.0, 5.0], [108800.0, 1.0], [115200.0, 1.0], [116000.0, 3.0], [120800.0, 6.0], [126400.0, 2.0], [127200.0, 7.0], [152000.0, 4.0], [144900.0, 5.0], [143300.0, 2.0], [76700.0, 1.0], [106300.0, 1.0], [107100.0, 1.0], [110300.0, 4.0], [108700.0, 2.0], [109500.0, 1.0], [111100.0, 3.0], [116700.0, 3.0], [115900.0, 1.0], [122300.0, 2.0], [123100.0, 1.0], [129500.0, 1.0], [130300.0, 5.0], [147400.0, 2.0], [132300.0, 1.0], [151500.0, 1.0], [40700.0, 1.0], [39100.0, 2.0], [47100.0, 1.0], [57500.0, 1.0], [60300.0, 1.0], [62300.0, 2.0], [75000.0, 2.0], [80600.0, 1.0], [89400.0, 1.0], [99800.0, 3.0], [100600.0, 1.0], [105400.0, 3.0], [106200.0, 12.0], [107000.0, 1.0], [115800.0, 2.0], [122200.0, 1.0], [119000.0, 4.0], [119800.0, 5.0], [131000.0, 1.0], [132500.0, 1.0], [153300.0, 1.0], [68500.0, 1.0], [67700.0, 1.0], [73300.0, 2.0], [86900.0, 1.0], [90100.0, 2.0], [102900.0, 3.0], [109300.0, 2.0], [107700.0, 4.0], [118900.0, 1.0], [127700.0, 1.0], [136600.0, 1.0], [17100.0, 11.0], [16900.0, 3.0], [16700.0, 1.0], [17300.0, 1.0], [16500.0, 1.0], [18300.0, 2.0], [18100.0, 2.0], [17900.0, 3.0], [18900.0, 3.0], [19100.0, 3.0], [18700.0, 3.0], [20100.0, 1.0], [19900.0, 8.0], [19500.0, 1.0], [19700.0, 2.0], [20500.0, 4.0], [20700.0, 2.0], [21100.0, 1.0], [21500.0, 2.0], [22500.0, 3.0], [22100.0, 1.0], [23500.0, 2.0], [23100.0, 3.0], [22700.0, 1.0], [22900.0, 1.0], [23300.0, 1.0], [24500.0, 3.0], [24300.0, 1.0], [25100.0, 1.0], [25500.0, 1.0], [26500.0, 1.0], [26300.0, 5.0], [26100.0, 1.0], [135900.0, 4.0], [155100.0, 1.0], [39000.0, 1.0], [43000.0, 1.0], [50600.0, 1.0], [53000.0, 1.0], [52200.0, 1.0], [62200.0, 2.0], [62600.0, 1.0], [79600.0, 5.0], [78800.0, 1.0], [86000.0, 1.0], [91600.0, 1.0], [110800.0, 3.0], [111600.0, 2.0], [124400.0, 5.0], [130000.0, 1.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 105.0], [146400.0, 7.0], [210400.0, 1.0], [73900.0, 1.0], [101100.0, 1.0], [105900.0, 1.0], [114700.0, 2.0], [126700.0, 2.0], [140200.0, 1.0], [137900.0, 2.0], [52500.0, 1.0], [209900.0, 2.0], [53700.0, 1.0], [59300.0, 1.0], [114600.0, 1.0], [500.0, 1.0], [600.0, 11.0], [156400.0, 1.0], [700.0, 2.0], [800.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2200.0, 2.0], [2300.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2900.0, 2.0], [3000.0, 3.0], [3200.0, 2.0], [3300.0, 2.0], [3800.0, 1.0], [4000.0, 1.0], [4200.0, 2.0], [4300.0, 1.0], [4600.0, 6.0], [4500.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5000.0, 2.0], [4900.0, 2.0], [5100.0, 3.0], [79300.0, 3.0], [5300.0, 1.0], [5200.0, 1.0], [5600.0, 3.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6100.0, 1.0], [97700.0, 2.0], [6200.0, 4.0], [6300.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [107300.0, 1.0], [7000.0, 2.0], [7100.0, 75.0], [7200.0, 3.0], [7400.0, 44.0], [7300.0, 5.0], [7500.0, 1.0], [7600.0, 36.0], [7900.0, 43.0], [7700.0, 1.0], [7800.0, 1.0], [8100.0, 21.0], [8000.0, 2.0], [8200.0, 2.0], [8700.0, 44.0], [8500.0, 1.0], [8400.0, 23.0], [8600.0, 1.0], [9000.0, 2.0], [8800.0, 1.0], [9100.0, 1.0], [9200.0, 37.0], [8900.0, 25.0], [9700.0, 32.0], [9400.0, 18.0], [10200.0, 35.0], [10000.0, 1.0], [9900.0, 21.0], [10100.0, 1.0], [10500.0, 5.0], [10600.0, 6.0], [10400.0, 15.0], [10300.0, 3.0], [10700.0, 22.0], [10800.0, 9.0], [10900.0, 12.0], [11000.0, 26.0], [11100.0, 11.0], [11200.0, 34.0], [11600.0, 16.0], [11500.0, 23.0], [11700.0, 21.0], [11400.0, 11.0], [11300.0, 10.0], [12000.0, 14.0], [11900.0, 15.0], [12100.0, 9.0], [12200.0, 41.0], [11800.0, 10.0], [12500.0, 17.0], [12300.0, 12.0], [12600.0, 5.0], [12700.0, 17.0], [12400.0, 9.0], [13200.0, 5.0], [13300.0, 221.0], [13100.0, 6.0], [12800.0, 18.0], [13000.0, 17.0], [12900.0, 1.0], [13800.0, 53.0], [13400.0, 4.0], [13600.0, 3.0], [13500.0, 14.0], [13700.0, 2.0], [14200.0, 3.0], [13900.0, 5.0], [14000.0, 16.0], [14300.0, 44.0], [14100.0, 1.0], [14800.0, 19.0], [14500.0, 13.0], [14700.0, 1.0], [15100.0, 2.0], [15300.0, 2.0], [15400.0, 1.0], [15600.0, 3.0], [15800.0, 1.0], [16300.0, 3.0], [17200.0, 1.0], [16600.0, 2.0], [16800.0, 2.0], [17400.0, 1.0], [18400.0, 1.0], [17600.0, 1.0], [19400.0, 3.0], [18600.0, 6.0], [19200.0, 3.0], [18800.0, 1.0], [19800.0, 1.0], [22200.0, 1.0], [25800.0, 1.0], [30200.0, 1.0], [34800.0, 1.0], [43200.0, 1.0], [76800.0, 1.0], [106400.0, 2.0], [107200.0, 1.0], [113600.0, 3.0], [120800.0, 1.0], [127200.0, 4.0], [164800.0, 1.0], [143300.0, 1.0], [71900.0, 1.0], [110300.0, 2.0], [109500.0, 1.0], [111100.0, 2.0], [116700.0, 1.0], [130300.0, 5.0], [147400.0, 1.0], [132300.0, 1.0], [39100.0, 1.0], [47100.0, 2.0], [53900.0, 1.0], [57500.0, 1.0], [75000.0, 1.0], [105400.0, 1.0], [106200.0, 4.0], [119800.0, 2.0], [131000.0, 2.0], [71700.0, 1.0], [90100.0, 1.0], [107700.0, 2.0], [127700.0, 1.0], [17100.0, 6.0], [17300.0, 1.0], [16900.0, 1.0], [16500.0, 1.0], [17700.0, 2.0], [18100.0, 1.0], [17900.0, 2.0], [18900.0, 1.0], [18500.0, 1.0], [19100.0, 1.0], [19900.0, 3.0], [19500.0, 1.0], [23500.0, 1.0], [22700.0, 2.0], [23100.0, 2.0], [24100.0, 1.0], [24500.0, 3.0], [24700.0, 1.0], [26300.0, 4.0], [26100.0, 1.0], [32700.0, 2.0], [135900.0, 2.0], [39800.0, 1.0], [43000.0, 1.0], [211100.0, 2.0], [68400.0, 1.0], [79600.0, 2.0], [97200.0, 1.0], [110800.0, 1.0], [124400.0, 2.0], [130000.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 95.0], [146400.0, 4.0], [180900.0, 1.0], [68300.0, 1.0], [73900.0, 1.0], [81900.0, 1.0], [105900.0, 1.0], [107500.0, 2.0], [114700.0, 2.0], [123500.0, 1.0], [126700.0, 3.0], [140200.0, 3.0], [153000.0, 1.0], [100.0, 1.0], [137900.0, 2.0], [38500.0, 1.0], [42500.0, 1.0], [44900.0, 1.0], [200.0, 3.0], [54100.0, 1.0], [64900.0, 1.0], [72200.0, 1.0], [108200.0, 1.0], [114600.0, 2.0], [113800.0, 1.0], [116200.0, 1.0], [500.0, 2.0], [600.0, 1.0], [700.0, 2.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 3.0], [1100.0, 2.0], [1200.0, 1.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 2.0], [3100.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 3.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 4.0], [4300.0, 5.0], [4200.0, 2.0], [4400.0, 2.0], [4500.0, 1.0], [70500.0, 1.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5100.0, 3.0], [80900.0, 1.0], [79300.0, 6.0], [5200.0, 1.0], [5400.0, 2.0], [5500.0, 2.0], [5800.0, 1.0], [6200.0, 2.0], [6300.0, 2.0], [99300.0, 1.0], [6600.0, 3.0], [6500.0, 1.0], [6700.0, 5.0], [6800.0, 3.0], [6900.0, 1.0], [106500.0, 2.0], [7000.0, 3.0], [7100.0, 60.0], [7200.0, 6.0], [7300.0, 12.0], [7400.0, 45.0], [115300.0, 1.0], [7600.0, 35.0], [7500.0, 2.0], [7800.0, 2.0], [7700.0, 4.0], [7900.0, 40.0], [123300.0, 1.0], [8100.0, 18.0], [8000.0, 2.0], [8300.0, 5.0], [8500.0, 4.0], [8600.0, 6.0], [8700.0, 45.0], [8400.0, 22.0], [9000.0, 6.0], [8900.0, 27.0], [9200.0, 47.0], [9100.0, 3.0], [8800.0, 2.0], [9600.0, 3.0], [9300.0, 3.0], [9500.0, 6.0], [9700.0, 34.0], [9400.0, 15.0], [148600.0, 1.0], [9800.0, 6.0], [9900.0, 12.0], [10200.0, 33.0], [10000.0, 3.0], [10100.0, 6.0], [10300.0, 6.0], [10500.0, 7.0], [10700.0, 22.0], [10400.0, 16.0], [10600.0, 17.0], [11000.0, 27.0], [10900.0, 12.0], [11200.0, 43.0], [11100.0, 15.0], [10800.0, 6.0], [11700.0, 27.0], [11300.0, 6.0], [11600.0, 10.0], [11400.0, 10.0], [11500.0, 16.0], [11900.0, 7.0], [12000.0, 12.0], [11800.0, 10.0], [12100.0, 4.0], [12200.0, 18.0], [12400.0, 6.0], [12500.0, 8.0], [12700.0, 9.0], [12600.0, 4.0], [13300.0, 226.0], [13100.0, 6.0], [13200.0, 15.0], [12800.0, 15.0], [12900.0, 2.0], [13000.0, 16.0], [13500.0, 12.0], [13600.0, 4.0], [13400.0, 10.0], [13800.0, 72.0], [13700.0, 3.0], [14200.0, 4.0], [14000.0, 9.0], [14300.0, 35.0], [14100.0, 1.0], [13900.0, 3.0], [14500.0, 14.0], [14800.0, 20.0], [14700.0, 2.0], [14400.0, 4.0], [15300.0, 7.0], [15000.0, 2.0], [15200.0, 4.0], [15100.0, 4.0], [15400.0, 1.0], [15500.0, 2.0], [15600.0, 3.0], [15900.0, 2.0], [16300.0, 5.0], [16100.0, 1.0], [16000.0, 1.0], [17200.0, 3.0], [16800.0, 2.0], [16400.0, 1.0], [18200.0, 1.0], [18400.0, 1.0], [18600.0, 4.0], [19200.0, 2.0], [20400.0, 2.0], [19800.0, 1.0], [21200.0, 2.0], [21000.0, 1.0], [22200.0, 1.0], [22000.0, 1.0], [23200.0, 2.0], [26000.0, 1.0], [26200.0, 1.0], [27200.0, 2.0], [28800.0, 1.0], [29000.0, 1.0], [30200.0, 1.0], [58800.0, 1.0], [64400.0, 1.0], [81600.0, 1.0], [78400.0, 1.0], [89600.0, 1.0], [94400.0, 1.0], [105600.0, 1.0], [110400.0, 1.0], [107200.0, 3.0], [113600.0, 1.0], [120800.0, 2.0], [126400.0, 1.0], [127200.0, 2.0], [195200.0, 1.0], [211200.0, 1.0], [77500.0, 1.0], [100700.0, 1.0], [105500.0, 1.0], [107100.0, 2.0], [110300.0, 2.0], [108700.0, 1.0], [111100.0, 2.0], [116700.0, 2.0], [119900.0, 1.0], [130300.0, 1.0], [147400.0, 1.0], [33100.0, 1.0], [45900.0, 1.0], [51900.0, 1.0], [53500.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [57500.0, 1.0], [77400.0, 1.0], [94200.0, 1.0], [106200.0, 3.0], [107000.0, 1.0], [107800.0, 1.0], [110200.0, 1.0], [115800.0, 1.0], [122200.0, 1.0], [119000.0, 1.0], [132500.0, 1.0], [153300.0, 1.0], [72500.0, 1.0], [71700.0, 1.0], [102900.0, 1.0], [109300.0, 1.0], [107700.0, 1.0], [119700.0, 1.0], [118900.0, 1.0], [127700.0, 1.0], [144600.0, 1.0], [16900.0, 1.0], [17100.0, 2.0], [17500.0, 3.0], [18100.0, 1.0], [18500.0, 2.0], [18900.0, 5.0], [19500.0, 1.0], [19900.0, 1.0], [20100.0, 1.0], [20500.0, 1.0], [22700.0, 2.0], [22900.0, 1.0], [23100.0, 2.0], [24900.0, 1.0], [25300.0, 2.0], [26300.0, 3.0], [26900.0, 1.0], [27700.0, 1.0], [29500.0, 1.0], [32700.0, 2.0], [37400.0, 1.0], [41000.0, 1.0], [42200.0, 1.0], [49000.0, 1.0], [211100.0, 1.0], [53800.0, 1.0], [60200.0, 1.0], [71600.0, 1.0], [79600.0, 1.0], [87600.0, 1.0], [106000.0, 1.0], [109200.0, 1.0], [110000.0, 1.0], [113200.0, 1.0], [110800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7034.0, "series": [{"data": [[1.0, 129.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5743.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 20.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7034.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 18.83859649122806, "minX": 1.53945318E12, "maxY": 500.0, "series": [{"data": [[1.53945342E12, 242.8341584158417], [1.53945324E12, 61.48760330578504], [1.53945372E12, 500.0], [1.53945354E12, 361.1329787234036], [1.53945336E12, 180.2649199417759], [1.53945384E12, 45.941860465116264], [1.53945318E12, 18.83859649122806], [1.53945366E12, 479.87629459148394], [1.53945348E12, 303.8302556818184], [1.5394533E12, 120.93108108108112], [1.53945378E12, 430.9025182778231], [1.5394536E12, 421.5963407661521]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945384E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 209969.0, "series": [{"data": [[3.0, 78839.0], [5.0, 51312.333333333336], [6.0, 1272.0], [7.0, 1229.25], [8.0, 1022.4], [9.0, 1313.0], [10.0, 1293.875], [11.0, 1348.6666666666667], [12.0, 43164.7], [13.0, 1349.1249999999998], [14.0, 39495.09090909091], [15.0, 1508.888888888889], [16.0, 1313.818181818182], [17.0, 1471.076923076923], [18.0, 1458.7500000000002], [19.0, 1542.0], [20.0, 1538.142857142857], [21.0, 1658.7777777777778], [22.0, 1724.9], [23.0, 10319.857142857141], [24.0, 2199.7500000000005], [25.0, 1932.5555555555557], [26.0, 10156.933333333332], [27.0, 52773.58333333333], [28.0, 2212.714285714286], [29.0, 2394.857142857143], [30.0, 33309.09090909091], [31.0, 2473.8181818181815], [32.0, 2433.916666666667], [33.0, 2550.357142857143], [34.0, 2462.333333333333], [35.0, 2777.8461538461543], [36.0, 2928.272727272727], [37.0, 33974.5], [38.0, 2963.0], [39.0, 10581.642857142859], [40.0, 3042.545454545455], [41.0, 3243.1428571428573], [42.0, 3361.769230769231], [43.0, 3543.4285714285716], [44.0, 3569.818181818182], [45.0, 3697.625], [46.0, 3880.0833333333335], [47.0, 3912.9999999999995], [48.0, 4053.5555555555557], [49.0, 22077.0], [50.0, 3625.222222222222], [51.0, 14634.166666666668], [52.0, 35769.5], [53.0, 18822.5], [54.0, 4146.076923076924], [55.0, 29541.166666666668], [56.0, 4970.222222222223], [57.0, 5097.833333333333], [58.0, 44255.2], [59.0, 16754.7], [60.0, 15314.727272727272], [61.0, 5306.888888888889], [62.0, 25287.727272727272], [63.0, 12516.428571428572], [64.0, 5267.428571428572], [65.0, 22971.583333333332], [66.0, 12076.866666666667], [67.0, 19285.875], [68.0, 16415.1], [69.0, 5687.666666666666], [70.0, 5570.0999999999985], [71.0, 5671.0], [72.0, 5824.555555555556], [73.0, 5232.999999999999], [74.0, 5817.636363636363], [75.0, 5819.09090909091], [76.0, 5826.615384615386], [77.0, 5796.272727272727], [78.0, 5583.624999999999], [79.0, 19734.058823529413], [80.0, 5168.888888888889], [81.0, 5858.769230769231], [82.0, 19060.222222222223], [83.0, 14605.571428571428], [84.0, 6324.818181818182], [85.0, 23215.928571428572], [86.0, 22986.666666666668], [87.0, 6444.583333333334], [88.0, 6602.636363636363], [89.0, 18283.666666666668], [90.0, 6641.615384615385], [91.0, 6645.875], [92.0, 6905.272727272728], [93.0, 7053.25], [94.0, 7094.6], [95.0, 6366.2], [96.0, 7269.636363636363], [97.0, 32744.545454545452], [98.0, 7630.222222222222], [99.0, 7292.571428571429], [100.0, 30949.166666666664], [101.0, 35580.9], [102.0, 27818.785714285714], [103.0, 18766.923076923078], [104.0, 8021.000000000001], [105.0, 8168.4], [106.0, 8158.666666666667], [107.0, 8133.727272727273], [108.0, 8167.583333333334], [109.0, 14664.0], [110.0, 13204.285714285714], [111.0, 14558.909090909092], [112.0, 15195.8], [113.0, 9373.428571428569], [114.0, 9837.727272727272], [115.0, 9604.57142857143], [116.0, 10312.0], [117.0, 9578.357142857141], [118.0, 9942.333333333332], [119.0, 10035.000000000002], [120.0, 9962.166666666666], [121.0, 9889.642857142859], [122.0, 10384.999999999998], [123.0, 10031.307692307693], [124.0, 8411.5], [125.0, 10713.6], [126.0, 10431.666666666668], [127.0, 10598.23076923077], [128.0, 10647.615384615385], [129.0, 11907.5], [130.0, 10089.272727272726], [131.0, 10159.111111111111], [132.0, 28291.69230769231], [133.0, 10551.4], [134.0, 12431.875], [135.0, 15062.416666666668], [136.0, 14996.923076923076], [137.0, 15245.9], [138.0, 11322.727272727274], [139.0, 16657.666666666664], [140.0, 16061.090909090908], [141.0, 15551.416666666666], [142.0, 12439.454545454544], [143.0, 12515.8], [144.0, 12150.615384615385], [145.0, 15182.307692307693], [146.0, 15575.357142857143], [147.0, 11008.888888888887], [148.0, 11082.333333333334], [149.0, 11118.166666666668], [150.0, 11289.818181818182], [151.0, 11289.900000000001], [152.0, 17125.363636363636], [153.0, 11400.166666666666], [154.0, 17651.699999999997], [155.0, 11484.400000000003], [156.0, 20512.0], [157.0, 16763.583333333332], [158.0, 12437.0], [159.0, 12651.363636363634], [160.0, 11694.7], [161.0, 11716.083333333332], [162.0, 11783.5], [163.0, 11676.333333333334], [164.0, 11657.615384615387], [165.0, 12552.099999999999], [166.0, 11914.363636363636], [167.0, 37047.8], [168.0, 12065.642857142857], [169.0, 30244.0], [170.0, 30303.066666666666], [171.0, 13283.299999999997], [172.0, 13814.111111111111], [173.0, 13136.933333333334], [174.0, 13722.22222222222], [175.0, 13341.6], [176.0, 13484.333333333332], [177.0, 13420.785714285714], [178.0, 13844.75], [179.0, 12964.6], [180.0, 13633.0], [181.0, 13950.272727272726], [182.0, 13638.916666666666], [183.0, 13040.3], [184.0, 13012.375], [185.0, 13053.272727272728], [186.0, 13804.727272727274], [187.0, 13865.8], [188.0, 15442.916666666666], [189.0, 14011.272727272728], [190.0, 14178.272727272728], [191.0, 13999.166666666668], [192.0, 13900.416666666666], [193.0, 13916.400000000001], [194.0, 13690.076923076924], [195.0, 13668.538461538463], [196.0, 13125.375000000002], [197.0, 13550.769230769229], [198.0, 12957.454545454546], [199.0, 12795.81818181818], [200.0, 12855.272727272728], [201.0, 50779.153846153844], [202.0, 13457.5], [203.0, 13051.777777777777], [204.0, 13430.916666666666], [205.0, 13038.875], [206.0, 13228.2], [207.0, 18741.90909090909], [208.0, 13282.999999999998], [209.0, 14216.8], [210.0, 13449.875], [211.0, 13762.0], [212.0, 13984.866666666667], [213.0, 13452.9], [214.0, 13414.363636363638], [215.0, 13646.307692307691], [216.0, 13117.636363636366], [217.0, 13094.166666666668], [218.0, 13209.181818181818], [219.0, 12697.636363636362], [220.0, 12348.5], [221.0, 12815.3], [222.0, 12374.25], [223.0, 13651.083333333332], [224.0, 15029.300000000001], [225.0, 12397.615384615383], [226.0, 12907.727272727272], [227.0, 12319.615384615385], [228.0, 12349.5], [229.0, 11200.363636363636], [230.0, 12550.818181818182], [231.0, 12689.818181818182], [232.0, 16033.5], [233.0, 16539.249999999996], [234.0, 13124.666666666664], [235.0, 12962.800000000001], [236.0, 12990.111111111111], [237.0, 17028.733333333334], [238.0, 12093.571428571426], [239.0, 12892.500000000002], [240.0, 12771.125], [241.0, 13125.727272727272], [242.0, 13269.333333333334], [243.0, 15839.272727272726], [244.0, 13366.642857142857], [245.0, 13110.81818181818], [246.0, 13739.0], [247.0, 13457.5], [248.0, 13178.461538461537], [249.0, 20378.4], [250.0, 14552.5], [251.0, 13738.923076923076], [252.0, 15947.545454545456], [253.0, 21185.083333333332], [254.0, 12899.076923076924], [255.0, 24879.46153846154], [257.0, 12536.466666666665], [256.0, 12597.636363636364], [258.0, 24022.357142857138], [259.0, 12482.076923076924], [260.0, 19411.69230769231], [261.0, 11863.1], [262.0, 18466.466666666667], [263.0, 11819.250000000002], [264.0, 18357.999999999996], [270.0, 17579.470588235294], [271.0, 12315.857142857141], [268.0, 11813.0], [269.0, 11848.166666666666], [265.0, 13258.461538461539], [266.0, 11973.166666666666], [267.0, 11837.466666666667], [273.0, 12832.333333333334], [272.0, 18623.499999999996], [274.0, 13380.199999999999], [275.0, 12985.4], [276.0, 24531.411764705885], [277.0, 13453.538461538461], [278.0, 13667.076923076924], [279.0, 13325.142857142857], [280.0, 31031.285714285714], [286.0, 12578.823529411764], [287.0, 14282.625], [284.0, 13048.416666666664], [285.0, 13242.249999999998], [281.0, 13967.583333333334], [282.0, 13872.411764705883], [283.0, 13058.0], [289.0, 13806.27272727273], [288.0, 12784.72222222222], [290.0, 15462.409090909096], [291.0, 12015.117647058823], [292.0, 16302.235294117643], [293.0, 12472.22222222222], [294.0, 18974.649999999998], [295.0, 11655.714285714286], [296.0, 14451.799999999997], [302.0, 11996.882352941175], [303.0, 13054.033333333335], [300.0, 12870.333333333332], [301.0, 14585.29411764706], [297.0, 12058.75], [298.0, 10825.111111111111], [299.0, 9941.111111111111], [305.0, 13617.999999999998], [304.0, 10084.133333333333], [306.0, 12134.384615384617], [307.0, 19106.761904761905], [308.0, 12081.499999999998], [309.0, 11431.000000000002], [310.0, 11124.7], [311.0, 18046.58823529412], [312.0, 11154.157894736842], [318.0, 12685.071428571428], [319.0, 15250.5], [316.0, 11237.35294117647], [317.0, 13262.448275862067], [313.0, 11004.625000000002], [314.0, 11831.05], [315.0, 12733.0], [321.0, 12236.06666666667], [320.0, 11188.18181818182], [322.0, 12033.7], [323.0, 21550.750000000004], [324.0, 12234.368421052632], [325.0, 11374.923076923074], [326.0, 11606.222222222223], [327.0, 16826.32], [328.0, 10681.950000000003], [334.0, 11660.133333333335], [335.0, 9849.151515151518], [332.0, 12898.727272727272], [333.0, 10965.0], [329.0, 11335.4], [330.0, 11562.1875], [331.0, 12710.76923076923], [337.0, 12430.238095238095], [336.0, 12965.0], [338.0, 12526.333333333334], [339.0, 12714.363636363636], [340.0, 11816.842105263158], [341.0, 10518.760000000002], [342.0, 9680.710526315788], [343.0, 9564.291666666666], [344.0, 11545.857142857141], [350.0, 11401.09090909091], [351.0, 9014.749999999998], [348.0, 16273.714285714284], [349.0, 10556.047619047618], [345.0, 10817.208333333336], [346.0, 13168.18181818182], [347.0, 12801.78947368421], [353.0, 11404.749999999998], [352.0, 11500.833333333334], [354.0, 11434.263157894738], [355.0, 12658.142857142857], [356.0, 12546.588235294117], [357.0, 11571.307692307693], [358.0, 11725.647058823532], [359.0, 10759.157894736842], [360.0, 9845.172413793101], [366.0, 10848.57142857143], [367.0, 12480.0], [364.0, 11382.0], [365.0, 12894.42857142857], [361.0, 12781.8], [362.0, 10607.625], [363.0, 12472.307692307691], [369.0, 12273.599999999999], [368.0, 11542.800000000001], [370.0, 10395.333333333334], [371.0, 13020.999999999998], [372.0, 11637.047619047622], [373.0, 11840.57894736842], [374.0, 11361.117647058822], [375.0, 11674.666666666666], [376.0, 9725.5], [382.0, 11901.7], [383.0, 11814.0], [380.0, 10512.863636363634], [381.0, 9858.81818181818], [377.0, 9296.863636363636], [378.0, 10844.947368421055], [379.0, 11134.652173913044], [385.0, 12634.0], [384.0, 11400.699999999999], [386.0, 12647.0], [387.0, 11966.882352941177], [388.0, 11556.789473684212], [389.0, 10520.28], [390.0, 11750.038461538461], [391.0, 10735.312500000002], [392.0, 12187.076923076924], [398.0, 11025.916666666666], [399.0, 10274.039999999999], [396.0, 10194.761904761906], [397.0, 11243.30769230769], [393.0, 10947.370370370369], [394.0, 12032.416666666666], [395.0, 11570.588235294117], [401.0, 10082.347826086958], [400.0, 10693.199999999999], [402.0, 11408.583333333334], [403.0, 17395.608695652172], [404.0, 11677.136363636364], [405.0, 12591.565217391306], [406.0, 12376.1], [407.0, 33861.2], [408.0, 13103.235294117647], [414.0, 10757.282051282053], [415.0, 10514.925925925925], [412.0, 10686.068965517243], [413.0, 14497.999999999998], [409.0, 12067.333333333334], [410.0, 12561.931034482757], [411.0, 12259.521739130436], [417.0, 10807.000000000002], [416.0, 12715.333333333332], [418.0, 11245.099999999999], [419.0, 12200.357142857143], [420.0, 10599.560000000001], [421.0, 11397.071428571426], [422.0, 11086.588235294117], [423.0, 11548.555555555557], [424.0, 11142.266666666666], [430.0, 9764.607142857143], [431.0, 10662.0], [428.0, 11383.130434782612], [429.0, 10457.038461538465], [425.0, 11443.64285714286], [426.0, 11710.692307692307], [427.0, 12724.57142857143], [433.0, 10311.849999999999], [432.0, 10194.250000000002], [434.0, 10473.652173913044], [435.0, 12041.476190476189], [436.0, 13773.466666666665], [437.0, 10377.04761904762], [438.0, 15550.956521739135], [439.0, 9072.310344827587], [440.0, 12288.866666666669], [446.0, 11071.958333333336], [447.0, 11081.318181818184], [444.0, 22103.300000000003], [445.0, 9107.86956521739], [441.0, 11933.500000000004], [442.0, 12035.27777777778], [443.0, 11554.000000000002], [449.0, 10108.550000000001], [448.0, 9632.823529411762], [450.0, 15195.458333333336], [451.0, 9846.526315789471], [452.0, 12560.63157894737], [453.0, 9833.863636363636], [454.0, 12027.3125], [455.0, 9702.849999999999], [456.0, 12971.823529411766], [462.0, 46936.15789473684], [463.0, 11709.52380952381], [460.0, 10888.56], [461.0, 10779.772727272728], [457.0, 13082.687499999998], [458.0, 10629.684210526319], [459.0, 10986.380952380954], [465.0, 12250.5], [464.0, 39797.95652173913], [466.0, 34474.458333333336], [467.0, 9979.225806451612], [468.0, 10908.25], [469.0, 11777.999999999998], [470.0, 18688.181818181816], [471.0, 10955.9], [472.0, 14698.416666666664], [478.0, 12723.312499999998], [479.0, 36394.416666666664], [476.0, 10339.291666666664], [477.0, 12428.6], [473.0, 11450.62962962963], [474.0, 11887.192307692309], [475.0, 11352.952380952382], [481.0, 13519.615384615383], [480.0, 11320.39534883721], [482.0, 12217.727272727274], [483.0, 10691.227272727274], [484.0, 12284.428571428572], [485.0, 11714.550000000001], [486.0, 11579.23076923077], [487.0, 11166.358974358976], [488.0, 10176.535714285712], [494.0, 12357.153846153844], [495.0, 13392.866666666667], [492.0, 12185.21052631579], [493.0, 15307.0], [489.0, 11303.14814814815], [490.0, 11255.962962962964], [491.0, 12791.230769230771], [496.0, 11631.962962962964], [497.0, 19054.275862068975], [498.0, 9934.294117647058], [499.0, 12017.11111111111], [500.0, 14788.153314917143], [1.0, 209969.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[338.9064364207222, 13324.677551020386]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[2.0, 625.0], [3.0, 156416.0], [4.0, 105556.5], [5.0, 1424.5], [6.0, 3153.0], [9.0, 1483.0], [10.0, 606.0], [11.0, 1814.0], [12.0, 648.0], [13.0, 648.0], [14.0, 629.0], [15.0, 168599.8], [16.0, 848.0], [17.0, 658.0], [18.0, 759.0], [19.0, 691.0], [21.0, 1480.0], [22.0, 877.0], [23.0, 1356.0], [25.0, 1535.0], [26.0, 1297.0], [27.0, 93668.0], [28.0, 1978.0], [30.0, 1908.0], [32.0, 2187.0], [33.0, 1767.0], [34.0, 1630.0], [36.0, 2347.0], [37.0, 74830.33333333333], [38.0, 2043.0], [39.0, 109568.0], [41.0, 3238.0], [42.0, 2969.0], [45.0, 3597.5], [46.0, 3093.0], [47.0, 3030.0], [48.0, 3237.0], [49.0, 66756.0], [50.0, 3308.0], [51.0, 66707.0], [52.0, 130303.5], [54.0, 4233.0], [55.0, 5319.0], [57.0, 5653.0], [58.0, 4097.0], [60.0, 5852.5], [61.0, 4628.0], [62.0, 4508.0], [64.0, 4656.5], [65.0, 4682.0], [67.0, 4666.0], [68.0, 5682.0], [69.0, 55991.0], [70.0, 4694.0], [71.0, 4911.0], [73.0, 4818.0], [75.0, 59909.0], [76.0, 59865.5], [78.0, 5696.5], [79.0, 5198.0], [81.0, 5293.0], [82.0, 6654.0], [83.0, 5599.0], [84.0, 7164.0], [85.0, 84874.0], [86.0, 5690.0], [87.0, 52511.0], [88.0, 7048.0], [89.0, 6265.5], [91.0, 6286.0], [92.0, 6153.0], [93.0, 6257.0], [94.0, 6203.0], [95.0, 6359.0], [97.0, 6801.0], [98.0, 7270.0], [99.0, 7270.0], [101.0, 7526.5], [104.0, 7428.0], [105.0, 100072.0], [106.0, 78083.0], [107.0, 8210.0], [108.0, 118617.4], [109.0, 7211.0], [110.0, 7358.0], [112.0, 7379.0], [114.0, 8303.0], [116.0, 7957.5], [117.0, 7813.0], [118.0, 8097.0], [119.0, 7948.0], [121.0, 8741.0], [122.0, 8228.0], [123.0, 8500.0], [125.0, 8634.0], [127.0, 8645.0], [128.0, 9134.0], [129.0, 9099.0], [131.0, 9429.0], [134.0, 10950.0], [136.0, 10273.0], [137.0, 11532.5], [139.0, 10655.0], [140.0, 10628.0], [141.0, 10258.0], [144.0, 10964.0], [146.0, 10288.0], [148.0, 10336.0], [149.0, 10484.0], [150.0, 10462.0], [151.0, 16902.5], [152.0, 10439.0], [153.0, 16947.5], [154.0, 10329.0], [156.0, 10891.0], [157.0, 11618.0], [159.0, 10959.0], [160.0, 11742.0], [161.0, 10975.0], [163.0, 10869.0], [164.0, 11071.0], [165.0, 11937.0], [166.0, 11070.0], [167.0, 11162.0], [169.0, 12125.0], [171.0, 11573.0], [174.0, 12067.0], [170.0, 141140.33333333334], [176.0, 12203.0], [177.0, 11906.0], [180.0, 12296.0], [182.0, 12149.0], [183.0, 71751.0], [189.0, 12592.0], [184.0, 71989.0], [192.0, 12212.0], [195.0, 12357.0], [197.0, 11982.0], [202.0, 13214.0], [206.0, 15678.5], [205.0, 19860.0], [201.0, 135935.0], [210.0, 14862.0], [213.0, 15230.0], [214.0, 6127.0], [216.0, 12099.0], [219.0, 14265.0], [220.0, 14457.0], [221.0, 11433.0], [223.0, 12734.0], [222.0, 17444.0], [224.0, 14586.5], [226.0, 11613.0], [229.0, 15166.5], [230.0, 12862.0], [231.0, 13308.0], [227.0, 68439.0], [234.0, 13307.0], [241.0, 13817.0], [243.0, 13312.0], [244.0, 12121.0], [246.0, 13181.0], [240.0, 13574.0], [250.0, 13316.0], [251.0, 1.0], [252.0, 18637.5], [253.0, 12897.0], [254.0, 14161.0], [249.0, 16802.0], [269.0, 15095.0], [256.0, 9611.5], [257.0, 2.0], [260.0, 13423.333333333334], [262.0, 10748.0], [263.0, 18780.0], [264.0, 53985.0], [265.0, 11051.0], [266.0, 8821.25], [270.0, 24148.666666666668], [271.0, 12749.0], [273.0, 15874.2], [272.0, 12052.0], [274.0, 12318.0], [275.0, 11617.0], [276.0, 17409.75], [277.0, 7849.666666666666], [278.0, 25856.0], [279.0, 17151.333333333332], [280.0, 3.0], [286.0, 4634.333333333334], [287.0, 9979.0], [284.0, 14330.666666666666], [285.0, 13312.0], [282.0, 23561.0], [283.0, 8875.333333333332], [289.0, 7338.0], [288.0, 12423.0], [290.0, 6655.0], [291.0, 7935.0], [292.0, 13324.777777777776], [293.0, 10466.25], [294.0, 17989.2], [295.0, 10302.4], [296.0, 2.0], [302.0, 8829.5], [303.0, 12953.0], [300.0, 13346.5], [301.0, 26621.666666666668], [297.0, 11087.0], [298.0, 32763.5], [299.0, 10547.0], [305.0, 11721.5], [304.0, 11620.6], [306.0, 13603.666666666666], [307.0, 19419.2], [308.0, 10108.333333333332], [309.0, 17320.0], [310.0, 10475.666666666666], [311.0, 13192.375000000002], [312.0, 10545.9], [318.0, 8959.0], [319.0, 23694.0], [316.0, 6736.5], [317.0, 24233.6], [313.0, 12515.0], [314.0, 7838.666666666667], [315.0, 12900.857142857143], [321.0, 13311.0], [320.0, 8885.25], [322.0, 7423.0], [323.0, 13819.0], [325.0, 7851.777777777777], [324.0, 13820.0], [326.0, 10490.916666666666], [327.0, 13034.833333333336], [328.0, 8887.785714285712], [334.0, 8435.555555555555], [335.0, 10352.666666666666], [332.0, 12620.25], [333.0, 8076.888888888889], [329.0, 41969.33333333333], [330.0, 15043.0], [337.0, 11303.0], [336.0, 19200.0], [338.0, 11930.4], [339.0, 59011.5], [340.0, 14143.5], [341.0, 8089.0], [342.0, 8199.0], [343.0, 25197.857142857145], [344.0, 9379.0], [350.0, 8769.0], [351.0, 9461.874999999998], [348.0, 97791.0], [349.0, 9226.333333333334], [345.0, 5522.857142857143], [347.0, 12911.5], [353.0, 13008.666666666666], [352.0, 9974.0], [354.0, 12629.0], [355.0, 12783.0], [356.0, 9280.0], [357.0, 10743.333333333332], [358.0, 10958.333333333332], [359.0, 8987.0], [360.0, 10020.42857142857], [367.0, 12042.857142857143], [365.0, 11433.0], [366.0, 9423.75], [361.0, 12310.0], [362.0, 10518.363636363636], [363.0, 15483.0], [370.0, 12032.0], [368.0, 7380.333333333334], [371.0, 12817.333333333332], [380.0, 10708.285714285714], [381.0, 9690.285714285714], [382.0, 10756.0], [383.0, 10909.0], [373.0, 10519.0], [372.0, 13316.0], [374.0, 8459.0], [375.0, 8609.42857142857], [376.0, 8704.0], [377.0, 8706.000000000002], [378.0, 9219.8], [379.0, 10867.42857142857], [385.0, 13422.6], [384.0, 8190.714285714285], [386.0, 8448.0], [387.0, 6656.5], [388.0, 10105.5], [389.0, 11364.4], [390.0, 12482.333333333334], [391.0, 12372.833333333332], [392.0, 12908.0], [398.0, 8184.4285714285725], [399.0, 10253.8], [396.0, 7716.857142857143], [397.0, 11838.75], [393.0, 6656.5], [394.0, 1.0], [395.0, 10630.857142857143], [401.0, 10496.0], [400.0, 10593.375], [402.0, 9216.0], [403.0, 20453.285714285717], [404.0, 12408.333333333334], [405.0, 13054.2], [407.0, 41219.857142857145], [408.0, 18691.5], [414.0, 11170.875], [415.0, 8307.222222222223], [412.0, 11422.75], [413.0, 24576.0], [409.0, 11484.5], [410.0, 13105.166666666666], [411.0, 3705.333333333333], [417.0, 9828.57142857143], [416.0, 7997.0], [418.0, 9441.0], [419.0, 11905.875], [420.0, 11727.0], [421.0, 9104.166666666668], [422.0, 10700.8], [423.0, 11919.8], [424.0, 8365.333333333334], [428.0, 10404.285714285714], [429.0, 8796.727272727272], [430.0, 9866.75], [431.0, 7424.0], [425.0, 13120.166666666668], [433.0, 8700.333333333334], [432.0, 3712.5], [434.0, 11498.0], [435.0, 12009.400000000001], [436.0, 7842.2], [437.0, 8192.0], [438.0, 16276.333333333334], [439.0, 8114.307692307693], [440.0, 10834.0], [446.0, 10688.0], [447.0, 7883.875], [444.0, 46985.33333333333], [445.0, 8127.75], [441.0, 8617.333333333334], [442.0, 10880.0], [443.0, 11407.833333333334], [449.0, 8992.0], [448.0, 8192.0], [450.0, 10047.75], [460.0, 10022.25], [461.0, 12210.25], [462.0, 101118.0], [463.0, 11339.666666666666], [452.0, 13824.0], [453.0, 5268.0], [454.0, 12015.285714285714], [455.0, 8701.833333333334], [457.0, 13652.333333333334], [458.0, 10931.1], [459.0, 10941.5], [466.0, 43471.666666666664], [464.0, 67225.4], [467.0, 11553.666666666666], [476.0, 10173.8], [477.0, 12781.0], [478.0, 12403.0], [479.0, 22936.333333333332], [468.0, 42751.33333333333], [469.0, 13619.2], [470.0, 13029.800000000001], [471.0, 8448.0], [473.0, 10608.5], [474.0, 10240.249999999998], [475.0, 12628.333333333334], [481.0, 13220.5], [480.0, 11589.125], [482.0, 12173.5], [483.0, 12587.2], [484.0, 11154.0], [485.0, 11262.0], [487.0, 12254.75], [486.0, 11772.0], [488.0, 8646.857142857143], [492.0, 13617.0], [493.0, 21523.0], [489.0, 38814.25], [490.0, 11570.4], [496.0, 10471.416666666666], [497.0, 10237.181818181816], [498.0, 9855.333333333334], [500.0, 18692.368852459032], [499.0, 11008.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[373.01812688821735, 16255.719033232632]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 36.0], [3.0, 34.0], [4.0, 39.0], [5.0, 30.0], [6.0, 39.0], [7.0, 39.0], [8.0, 771.0], [9.0, 42.0], [10.0, 23.0], [11.0, 30.0], [12.0, 53.0], [13.0, 27.0], [14.0, 33.0], [15.0, 140811.33333333334], [16.0, 21.0], [17.0, 20.0], [18.0, 225.0], [19.0, 181.0], [20.0, 267.0], [21.0, 576.0], [22.0, 297.0], [23.0, 678.0], [25.0, 817.0], [26.0, 750.0], [27.0, 120832.0], [28.0, 1277.0], [29.0, 978.5], [31.0, 56106.5], [32.0, 1004.0], [34.0, 1043.0], [35.0, 1652.0], [36.0, 1635.0], [37.0, 1921.0], [38.0, 1785.0], [39.0, 1612.0], [40.0, 1826.0], [42.0, 2256.0], [43.0, 2220.0], [44.0, 2262.0], [45.0, 2570.0], [46.0, 2486.0], [47.0, 2600.0], [48.0, 2437.0], [49.0, 2756.0], [50.0, 2699.0], [51.0, 2701.0], [53.0, 3131.0], [52.0, 130304.0], [54.0, 3449.0], [55.0, 78518.5], [56.0, 3554.0], [57.0, 3685.0], [59.0, 3934.5], [60.0, 3586.0], [61.0, 3985.0], [62.0, 3618.0], [63.0, 3787.0], [65.0, 4088.0], [66.0, 3962.0], [68.0, 4157.0], [69.0, 4165.0], [70.0, 59672.0], [71.0, 55955.5], [72.0, 55426.0], [73.0, 59494.0], [74.0, 59588.5], [75.0, 4457.0], [76.0, 4399.0], [77.0, 4224.0], [78.0, 4327.0], [79.0, 4309.0], [80.0, 4506.0], [81.0, 4922.0], [82.0, 4730.0], [83.0, 4876.0], [85.0, 44468.333333333336], [87.0, 5192.0], [88.0, 5151.0], [89.0, 5472.0], [90.0, 5261.0], [91.0, 5539.0], [92.0, 5435.0], [93.0, 5561.0], [94.0, 5826.0], [96.0, 6271.0], [97.0, 76336.0], [98.0, 6311.0], [99.0, 6390.0], [100.0, 6748.0], [101.0, 99917.66666666667], [102.0, 76534.5], [103.0, 6602.0], [104.0, 6741.0], [105.0, 6584.0], [106.0, 6768.0], [107.0, 6852.0], [108.0, 6667.0], [109.0, 6802.0], [110.0, 6775.0], [111.0, 6735.0], [112.0, 6909.0], [114.0, 7005.0], [115.0, 7067.0], [116.0, 7229.0], [117.0, 7283.0], [118.0, 7684.0], [119.0, 7330.0], [120.0, 7373.0], [121.0, 7613.0], [122.0, 7533.0], [123.0, 7866.0], [124.0, 42601.5], [126.0, 8104.0], [127.0, 8349.0], [128.0, 8569.0], [129.0, 8624.0], [131.0, 9073.0], [132.0, 67779.5], [133.0, 15844.5], [134.0, 9382.0], [135.0, 9525.0], [136.0, 9849.0], [137.0, 9940.0], [139.0, 10062.0], [140.0, 9725.0], [141.0, 9831.0], [142.0, 9760.0], [143.0, 9973.0], [138.0, 21093.0], [144.0, 9720.0], [145.0, 9535.0], [146.0, 9875.0], [147.0, 16465.5], [148.0, 16543.5], [149.0, 16582.0], [151.0, 10008.0], [150.0, 23182.0], [152.0, 10255.0], [153.0, 9916.0], [155.0, 16466.0], [156.0, 10322.0], [157.0, 10304.0], [159.0, 11914.0], [162.0, 12006.0], [164.0, 13585.0], [165.0, 16942.0], [168.0, 14255.0], [170.0, 110419.25], [176.0, 15393.0], [180.0, 2.0], [182.0, 24953.0], [183.0, 20434.0], [179.0, 72257.0], [185.0, 41780.0], [189.0, 27750.0], [188.0, 20196.0], [194.0, 13352.0], [195.0, 11832.0], [200.0, 14585.0], [201.0, 14882.0], [203.0, 15515.0], [205.0, 13658.0], [208.0, 17409.5], [210.0, 22880.75], [213.0, 25359.0], [214.0, 10585.5], [217.0, 43465.0], [221.0, 15146.0], [224.0, 15212.0], [227.0, 21032.5], [229.0, 17589.0], [230.0, 30030.666666666668], [228.0, 18500.0], [232.0, 11826.0], [233.0, 33509.0], [235.0, 64460.0], [237.0, 40774.666666666664], [239.0, 19564.0], [240.0, 15022.5], [241.0, 53987.0], [243.0, 24660.75], [244.0, 13003.0], [247.0, 21240.0], [248.0, 14892.0], [249.0, 40388.5], [250.0, 6656.5], [251.0, 29690.666666666668], [252.0, 15090.0], [253.0, 8907.0], [254.0, 11319.0], [257.0, 12605.5], [256.0, 21212.0], [258.0, 12032.0], [259.0, 9026.0], [260.0, 29609.25], [261.0, 104306.0], [262.0, 49870.166666666664], [263.0, 7870.0], [264.0, 34454.0], [269.0, 27266.0], [270.0, 41841.0], [265.0, 9219.0], [266.0, 31201.833333333332], [273.0, 13874.0], [272.0, 27276.666666666664], [274.0, 13646.0], [284.0, 110123.0], [285.0, 13392.0], [286.0, 10923.285714285714], [276.0, 46578.0], [277.0, 12515.5], [278.0, 110489.0], [280.0, 53716.6], [281.0, 13489.0], [282.0, 48237.66666666667], [283.0, 13321.25], [289.0, 12657.142857142857], [288.0, 33089.0], [290.0, 45464.5], [291.0, 17612.5], [292.0, 30806.272727272728], [293.0, 11919.333333333334], [294.0, 9918.0], [295.0, 8548.875], [296.0, 46516.0], [303.0, 13865.428571428572], [301.0, 8776.0], [302.0, 10171.42857142857], [297.0, 10502.0], [298.0, 34407.2], [299.0, 9925.999999999998], [305.0, 18135.6], [304.0, 7421.0], [307.0, 12924.666666666666], [316.0, 9599.166666666666], [317.0, 11917.0], [318.0, 9670.0], [319.0, 10696.666666666668], [308.0, 13084.25], [309.0, 12517.0], [311.0, 20467.0], [312.0, 12075.2], [313.0, 28670.000000000004], [314.0, 12882.0], [315.0, 13333.5], [321.0, 10235.0], [320.0, 12948.833333333334], [322.0, 8462.5], [323.0, 7168.0], [324.0, 12200.0], [325.0, 18863.2], [326.0, 9453.545454545456], [327.0, 39329.0], [328.0, 10201.777777777777], [334.0, 8286.833333333334], [335.0, 9779.375000000002], [332.0, 12152.5], [333.0, 7985.6], [329.0, 10878.5], [330.0, 14110.5], [337.0, 11355.166666666668], [336.0, 13397.333333333334], [338.0, 11419.0], [339.0, 10839.666666666666], [340.0, 14078.5], [341.0, 12356.0], [342.0, 10850.461538461539], [343.0, 6815.000000000001], [344.0, 10310.333333333334], [350.0, 9973.42857142857], [351.0, 7763.833333333333], [348.0, 10612.666666666666], [349.0, 9071.4], [345.0, 9850.333333333334], [346.0, 11389.0], [347.0, 9564.5], [354.0, 10063.0], [352.0, 12728.6], [355.0, 10604.875], [364.0, 11426.0], [365.0, 13492.0], [366.0, 8620.222222222223], [367.0, 12388.6], [356.0, 7990.5], [357.0, 13518.666666666668], [358.0, 11123.111111111111], [359.0, 8319.25], [360.0, 9946.333333333334], [361.0, 8652.0], [362.0, 7930.333333333333], [363.0, 13233.0], [369.0, 12401.5], [368.0, 8996.846153846154], [370.0, 10286.833333333334], [371.0, 12408.333333333336], [372.0, 11753.0], [373.0, 11711.833333333332], [374.0, 9301.0], [375.0, 9828.8], [376.0, 8705.0], [382.0, 9137.0], [380.0, 10289.5], [381.0, 9345.5], [377.0, 7977.333333333334], [378.0, 9901.000000000002], [379.0, 12927.5], [385.0, 13912.0], [384.0, 8915.666666666666], [386.0, 11008.0], [387.0, 14946.166666666666], [388.0, 12437.0], [389.0, 11645.928571428572], [390.0, 12619.4], [391.0, 12337.333333333332], [393.0, 10554.833333333334], [392.0, 16382.666666666666], [398.0, 10009.0], [399.0, 10558.5], [396.0, 9526.666666666668], [397.0, 13312.0], [394.0, 9481.6], [395.0, 10366.0], [401.0, 15714.5], [400.0, 12362.25], [403.0, 8332.0], [412.0, 11995.555555555555], [414.0, 9022.714285714284], [415.0, 26414.7], [404.0, 12458.666666666666], [405.0, 11365.333333333334], [406.0, 15769.333333333332], [407.0, 71869.85714285714], [408.0, 12527.6], [409.0, 10471.444444444445], [410.0, 11262.166666666666], [411.0, 12529.1], [417.0, 8959.5], [416.0, 12826.5], [418.0, 10657.0], [419.0, 8969.5], [420.0, 9740.666666666666], [421.0, 10658.571428571428], [422.0, 9892.2], [423.0, 12541.0], [424.0, 7424.0], [430.0, 6473.999999999999], [431.0, 7104.25], [428.0, 6770.0], [429.0, 11688.333333333334], [425.0, 10543.42857142857], [427.0, 12308.0], [433.0, 11684.666666666666], [432.0, 8915.428571428572], [434.0, 8832.25], [435.0, 15602.125], [436.0, 10425.857142857143], [437.0, 12348.333333333334], [438.0, 40448.25], [439.0, 7413.333333333334], [440.0, 43350.83333333333], [446.0, 8814.0], [447.0, 13413.888888888889], [444.0, 57344.5], [445.0, 9121.0], [441.0, 10899.5], [442.0, 13824.0], [443.0, 7555.0], [449.0, 10348.0], [448.0, 8702.4], [450.0, 40296.5], [451.0, 9736.666666666666], [452.0, 9986.25], [453.0, 7993.181818181817], [454.0, 6995.5], [455.0, 7695.0], [456.0, 13346.0], [462.0, 15524.0], [463.0, 8585.75], [460.0, 9526.1], [461.0, 13274.0], [457.0, 10957.6], [458.0, 9888.25], [459.0, 1.0], [465.0, 11275.0], [464.0, 43525.66666666667], [466.0, 58624.25], [467.0, 11835.4], [468.0, 9727.333333333334], [469.0, 13746.571428571428], [470.0, 28916.999999999996], [471.0, 12265.0], [472.0, 8512.0], [478.0, 7936.0], [479.0, 45652.66666666667], [476.0, 11702.818181818184], [477.0, 12945.5], [473.0, 13614.444444444445], [474.0, 12717.8], [475.0, 8192.0], [481.0, 11955.0], [480.0, 9684.42857142857], [482.0, 13312.0], [483.0, 10928.25], [484.0, 12082.5], [485.0, 10694.0], [486.0, 11760.5], [487.0, 11928.642857142857], [488.0, 9914.555555555555], [494.0, 11096.5], [492.0, 13400.0], [493.0, 10150.6], [489.0, 58622.71428571429], [490.0, 0.0], [491.0, 11298.0], [496.0, 11815.461538461537], [497.0, 18453.36363636364], [498.0, 10145.2], [499.0, 10771.25], [500.0, 19650.022727272724], [1.0, 93.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[370.9632867132864, 17318.96911421912]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 370.01666666666665, "minX": 1.53945318E12, "maxY": 999715.9666666667, "series": [{"data": [[1.53945342E12, 983517.3], [1.53945324E12, 941217.4], [1.53945372E12, 999715.9666666667], [1.53945354E12, 954231.5833333334], [1.53945336E12, 958156.9833333333], [1.53945384E12, 14619.416666666666], [1.53945318E12, 342912.7], [1.53945366E12, 940784.2], [1.53945348E12, 954809.1833333333], [1.5394533E12, 959429.7333333333], [1.53945378E12, 821536.25], [1.5394536E12, 952992.0833333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53945342E12, 3633.7], [1.53945324E12, 3383.55], [1.53945372E12, 7805.933333333333], [1.53945354E12, 7276.516666666666], [1.53945336E12, 3200.35], [1.53945384E12, 370.01666666666665], [1.53945318E12, 1330.2333333333333], [1.53945366E12, 7506.283333333334], [1.53945348E12, 6040.833333333333], [1.5394533E12, 3443.1666666666665], [1.53945378E12, 5395.183333333333], [1.5394536E12, 7558.283333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945384E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 343.8333333333333, "minX": 1.53945318E12, "maxY": 142653.95652173914, "series": [{"data": [[1.53945342E12, 14273.736842105267], [1.53945324E12, 4808.623586429728], [1.53945372E12, 14650.859714928725], [1.53945354E12, 11268.80411449015], [1.53945336E12, 12687.162162162158], [1.53945384E12, 133019.44], [1.53945318E12, 1744.224669603525], [1.53945366E12, 14468.01076158941], [1.53945348E12, 13623.485106382985], [1.5394533E12, 9169.320695102684], [1.53945378E12, 18741.966915688357], [1.5394536E12, 11702.148683092604]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945342E12, 13452.829787234044], [1.53945324E12, 4484.365384615386], [1.53945372E12, 16560.79220779222], [1.53945354E12, 11109.414285714276], [1.53945336E12, 11786.4], [1.53945384E12, 142653.95652173914], [1.53945318E12, 1330.642857142857], [1.53945366E12, 16132.531250000013], [1.53945348E12, 12831.795555555549], [1.5394533E12, 8790.96078431373], [1.53945378E12, 31384.49324324325], [1.5394536E12, 11687.848591549297]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945342E12, 27700.727272727272], [1.53945324E12, 3503.109090909091], [1.53945372E12, 16546.778301886785], [1.53945354E12, 10568.173469387757], [1.53945336E12, 14915.785714285716], [1.53945384E12, 133908.3076923077], [1.53945318E12, 343.8333333333333], [1.53945366E12, 15690.094890510956], [1.53945348E12, 20343.736625514404], [1.5394533E12, 7951.053571428571], [1.53945378E12, 32406.630136986307], [1.5394536E12, 14551.243055555562]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945384E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 343.76666666666665, "minX": 1.53945318E12, "maxY": 142653.95652173914, "series": [{"data": [[1.53945342E12, 14272.733918128648], [1.53945324E12, 4807.441033925692], [1.53945372E12, 14650.285821455369], [1.53945354E12, 11268.15831842576], [1.53945336E12, 12685.925278219402], [1.53945384E12, 133019.31999999998], [1.53945318E12, 1743.2819383259914], [1.53945366E12, 14467.423841059595], [1.53945348E12, 13622.660638297868], [1.5394533E12, 9168.099526066331], [1.53945378E12, 18741.26254002135], [1.5394536E12, 11701.512319456242]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945342E12, 13452.8085106383], [1.53945324E12, 4484.365384615386], [1.53945372E12, 16560.79220779222], [1.53945354E12, 11109.414285714276], [1.53945336E12, 11786.4], [1.53945384E12, 142653.95652173914], [1.53945318E12, 1330.642857142857], [1.53945366E12, 16132.527343749998], [1.53945348E12, 12831.791111111106], [1.5394533E12, 8790.96078431373], [1.53945378E12, 31384.49324324325], [1.5394536E12, 11687.848591549297]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945342E12, 27700.727272727272], [1.53945324E12, 3503.054545454546], [1.53945372E12, 16546.778301886785], [1.53945354E12, 10568.17006802722], [1.53945336E12, 14915.750000000002], [1.53945384E12, 133908.3076923077], [1.53945318E12, 343.76666666666665], [1.53945366E12, 15690.08394160584], [1.53945348E12, 20343.73251028807], [1.5394533E12, 7951.053571428571], [1.53945378E12, 32406.62328767122], [1.5394536E12, 14551.243055555562]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945384E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53945318E12, "maxY": 3.1333333333333333, "series": [{"data": [[1.53945342E12, 0.6915204678362563], [1.53945324E12, 0.8336025848142157], [1.53945372E12, 0.5648912228057009], [1.53945354E12, 0.6735241502683356], [1.53945336E12, 0.7122416534181238], [1.53945384E12, 0.4], [1.53945318E12, 0.5594713656387665], [1.53945366E12, 0.5364238410596033], [1.53945348E12, 0.705319148936171], [1.5394533E12, 0.6951026856240125], [1.53945378E12, 0.5635005336179298], [1.5394536E12, 0.6032285471537808]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945342E12, 0.9574468085106382], [1.53945324E12, 1.2692307692307694], [1.53945372E12, 0.7142857142857141], [1.53945354E12, 0.8321428571428577], [1.53945336E12, 1.0], [1.53945384E12, 0.6521739130434783], [1.53945318E12, 0.0], [1.53945366E12, 0.6796874999999997], [1.53945348E12, 0.8533333333333332], [1.5394533E12, 0.9019607843137257], [1.53945378E12, 0.655405405405405], [1.5394536E12, 0.7640845070422533]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945342E12, 0.9090909090909095], [1.53945324E12, 0.909090909090909], [1.53945372E12, 0.6603773584905662], [1.53945354E12, 0.7108843537414963], [1.53945336E12, 1.4999999999999998], [1.53945384E12, 0.38461538461538464], [1.53945318E12, 3.1333333333333333], [1.53945366E12, 0.7153284671532842], [1.53945348E12, 0.847736625514403], [1.5394533E12, 0.9464285714285717], [1.53945378E12, 0.6986301369863012], [1.5394536E12, 0.8437500000000001]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945384E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.53945318E12, "maxY": 116042.0, "series": [{"data": [[1.53945342E12, 64915.0], [1.53945324E12, 7164.0], [1.53945372E12, 67713.0], [1.53945354E12, 29003.0], [1.53945336E12, 45921.0], [1.53945384E12, 116042.0], [1.53945318E12, 5681.0], [1.53945366E12, 40759.0], [1.53945348E12, 50666.0], [1.5394533E12, 12511.0], [1.53945378E12, 79621.0], [1.5394536E12, 43327.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53945342E12, 10530.0], [1.53945324E12, 954.0], [1.53945372E12, 9920.0], [1.53945354E12, 10105.0], [1.53945336E12, 9744.0], [1.53945384E12, 106525.0], [1.53945318E12, 20.0], [1.53945366E12, 10330.0], [1.53945348E12, 10401.0], [1.5394533E12, 5435.0], [1.53945378E12, 11090.0], [1.5394536E12, 10354.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53945342E12, 13145.0], [1.53945324E12, 6192.6], [1.53945372E12, 13216.7], [1.53945354E12, 13223.4], [1.53945336E12, 13042.1], [1.53945384E12, 13354.0], [1.53945318E12, 2497.2000000000003], [1.53945366E12, 13188.1], [1.53945348E12, 13251.9], [1.5394533E12, 10788.800000000001], [1.53945378E12, 13345.0], [1.5394536E12, 13170.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53945342E12, 14879.399999999998], [1.53945324E12, 6784.160000000002], [1.53945372E12, 15695.58999999999], [1.53945354E12, 15419.92], [1.53945336E12, 13931.25], [1.53945384E12, 23239.279999999973], [1.53945318E12, 3043.700000000001], [1.53945366E12, 15597.850000000019], [1.53945348E12, 14998.919999999976], [1.5394533E12, 11560.22], [1.53945378E12, 22721.900000000005], [1.5394536E12, 15419.68]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53945342E12, 13392.35], [1.53945324E12, 6513.799999999999], [1.53945372E12, 13578.749999999996], [1.53945354E12, 13605.8], [1.53945336E12, 13298.7], [1.53945384E12, 13894.999999999996], [1.53945318E12, 2662.7999999999997], [1.53945366E12, 13582.150000000001], [1.53945348E12, 13621.95], [1.5394533E12, 11218.1], [1.53945378E12, 13841.0], [1.5394536E12, 13574.4]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945384E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 127230.0, "series": [{"data": [[4.0, 1478.0], [1.0, 115029.5], [20.0, 13159.0], [11.0, 12837.5], [23.0, 12356.0], [12.0, 6718.0], [13.0, 12644.0], [28.0, 12447.0], [29.0, 12131.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 2.5], [1.0, 127230.0], [20.0, 13312.0], [11.0, 8168.0], [23.0, 13052.0], [12.0, 1.0], [13.0, 15179.0], [28.0, 10500.0], [29.0, 10497.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 127230.0, "series": [{"data": [[4.0, 1476.0], [1.0, 115029.5], [20.0, 13157.0], [11.0, 12835.5], [23.0, 12355.0], [12.0, 6717.0], [13.0, 12643.0], [28.0, 12445.5], [29.0, 12130.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 2.5], [1.0, 127230.0], [20.0, 13312.0], [11.0, 8168.0], [23.0, 13052.0], [12.0, 1.0], [13.0, 15179.0], [28.0, 10500.0], [29.0, 10497.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 5.266666666666667, "minX": 1.53945318E12, "maxY": 30.15, "series": [{"data": [[1.53945342E12, 14.466666666666667], [1.53945324E12, 13.1], [1.53945372E12, 29.6], [1.53945354E12, 29.2], [1.53945336E12, 12.45], [1.53945318E12, 5.266666666666667], [1.53945366E12, 29.783333333333335], [1.53945348E12, 24.466666666666665], [1.5394533E12, 13.333333333333334], [1.53945378E12, 13.616666666666667], [1.5394536E12, 30.15]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945378E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945318E12, "maxY": 17.85, "series": [{"data": [[1.53945342E12, 11.1], [1.53945324E12, 11.166666666666666], [1.53945372E12, 11.166666666666666], [1.53945354E12, 11.033333333333333], [1.53945336E12, 10.916666666666666], [1.53945384E12, 0.23333333333333334], [1.53945318E12, 4.216666666666667], [1.53945366E12, 10.833333333333334], [1.53945348E12, 11.0], [1.5394533E12, 11.4], [1.53945378E12, 9.45], [1.5394536E12, 11.133333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53945342E12, 0.4], [1.53945324E12, 0.8666666666666667], [1.53945372E12, 0.4], [1.53945354E12, 0.6833333333333333], [1.53945336E12, 0.48333333333333334], [1.53945318E12, 0.4666666666666667], [1.53945366E12, 0.55], [1.53945348E12, 0.4666666666666667], [1.5394533E12, 0.85], [1.53945378E12, 0.16666666666666666], [1.5394536E12, 0.7333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945342E12, 1.9166666666666667], [1.53945324E12, 0.06666666666666667], [1.53945372E12, 17.85], [1.53945354E12, 16.283333333333335], [1.53945336E12, 0.03333333333333333], [1.53945384E12, 1.15], [1.53945318E12, 0.06666666666666667], [1.53945366E12, 17.316666666666666], [1.53945348E12, 11.733333333333333], [1.5394533E12, 0.08333333333333333], [1.53945378E12, 10.566666666666666], [1.5394536E12, 16.966666666666665]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53945342E12, 0.05], [1.53945372E12, 0.18333333333333332], [1.53945354E12, 0.2], [1.53945336E12, 0.016666666666666666], [1.53945384E12, 0.05], [1.53945366E12, 0.26666666666666666], [1.53945348E12, 0.26666666666666666], [1.53945378E12, 0.3333333333333333], [1.5394536E12, 0.31666666666666665]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945384E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945318E12, "maxY": 11.35, "series": [{"data": [[1.53945342E12, 0.36666666666666664], [1.53945324E12, 0.9166666666666666], [1.53945372E12, 0.3], [1.53945354E12, 0.6666666666666666], [1.53945336E12, 0.45], [1.53945384E12, 0.08333333333333333], [1.53945318E12, 0.5], [1.53945366E12, 0.6], [1.53945348E12, 0.65], [1.5394533E12, 0.9333333333333333], [1.53945378E12, 0.5], [1.5394536E12, 0.7666666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53945342E12, 0.4], [1.53945324E12, 0.8666666666666667], [1.53945372E12, 0.4], [1.53945354E12, 0.6833333333333333], [1.53945336E12, 0.48333333333333334], [1.53945318E12, 0.4666666666666667], [1.53945366E12, 0.55], [1.53945348E12, 0.4666666666666667], [1.5394533E12, 0.85], [1.53945378E12, 0.16666666666666666], [1.5394536E12, 0.7333333333333333]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53945342E12, 10.733333333333333], [1.53945324E12, 10.25], [1.53945372E12, 10.866666666666667], [1.53945354E12, 10.366666666666667], [1.53945336E12, 10.466666666666667], [1.53945384E12, 0.15], [1.53945318E12, 3.716666666666667], [1.53945366E12, 10.233333333333333], [1.53945348E12, 10.35], [1.5394533E12, 10.466666666666667], [1.53945378E12, 8.95], [1.5394536E12, 10.366666666666667]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945342E12, 0.6666666666666666], [1.53945324E12, 0.06666666666666667], [1.53945372E12, 11.35], [1.53945354E12, 8.266666666666667], [1.53945336E12, 0.016666666666666666], [1.53945384E12, 0.6833333333333333], [1.53945318E12, 0.06666666666666667], [1.53945366E12, 9.9], [1.53945348E12, 5.316666666666666], [1.5394533E12, 0.08333333333333333], [1.53945378E12, 6.666666666666667], [1.5394536E12, 9.25]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53945342E12, 0.9166666666666666], [1.53945372E12, 3.2333333333333334], [1.53945354E12, 4.233333333333333], [1.53945336E12, 0.016666666666666666], [1.53945384E12, 0.13333333333333333], [1.53945366E12, 3.966666666666667], [1.53945348E12, 3.4], [1.53945378E12, 1.9333333333333333], [1.5394536E12, 4.033333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53945342E12, 0.38333333333333336], [1.53945372E12, 3.45], [1.53945354E12, 3.9833333333333334], [1.53945336E12, 0.016666666666666666], [1.53945384E12, 0.38333333333333336], [1.53945366E12, 3.716666666666667], [1.53945348E12, 3.283333333333333], [1.53945378E12, 2.3], [1.5394536E12, 4.0]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945384E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
