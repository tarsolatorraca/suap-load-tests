/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 217343.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 1093.0], [3.1, 1234.0], [3.2, 1278.0], [3.3, 1307.0], [3.4, 1331.0], [3.5, 1352.0], [3.6, 1366.0], [3.7, 1383.0], [3.8, 1401.0], [3.9, 1421.0], [4.0, 1466.0], [4.1, 1525.0], [4.2, 1582.0], [4.3, 1637.0], [4.4, 1721.0], [4.5, 1816.0], [4.6, 1923.0], [4.7, 2018.0], [4.8, 2063.0], [4.9, 2171.0], [5.0, 2221.0], [5.1, 2367.0], [5.2, 2495.0], [5.3, 2557.0], [5.4, 2634.0], [5.5, 2679.0], [5.6, 2716.0], [5.7, 2773.0], [5.8, 2792.0], [5.9, 2850.0], [6.0, 2884.0], [6.1, 2944.0], [6.2, 2981.0], [6.3, 3056.0], [6.4, 3104.0], [6.5, 3187.0], [6.6, 3252.0], [6.7, 3331.0], [6.8, 3434.0], [6.9, 3529.0], [7.0, 3603.0], [7.1, 3733.0], [7.2, 3812.0], [7.3, 3876.0], [7.4, 3922.0], [7.5, 3956.0], [7.6, 3983.0], [7.7, 4016.0], [7.8, 4054.0], [7.9, 4100.0], [8.0, 4142.0], [8.1, 4175.0], [8.2, 4198.0], [8.3, 4226.0], [8.4, 4252.0], [8.5, 4275.0], [8.6, 4316.0], [8.7, 4340.0], [8.8, 4388.0], [8.9, 4415.0], [9.0, 4468.0], [9.1, 4572.0], [9.2, 4634.0], [9.3, 4724.0], [9.4, 4801.0], [9.5, 4875.0], [9.6, 4955.0], [9.7, 5056.0], [9.8, 5162.0], [9.9, 5231.0], [10.0, 5289.0], [10.1, 5384.0], [10.2, 5492.0], [10.3, 5665.0], [10.4, 5883.0], [10.5, 6254.0], [10.6, 6464.0], [10.7, 6558.0], [10.8, 6668.0], [10.9, 6735.0], [11.0, 6799.0], [11.1, 6855.0], [11.2, 6926.0], [11.3, 6963.0], [11.4, 7019.0], [11.5, 7059.0], [11.6, 7105.0], [11.7, 7164.0], [11.8, 7167.0], [11.9, 7167.0], [12.0, 7167.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7169.0], [12.7, 7171.0], [12.8, 7187.0], [12.9, 7229.0], [13.0, 7295.0], [13.1, 7315.0], [13.2, 7391.0], [13.3, 7419.0], [13.4, 7422.0], [13.5, 7423.0], [13.6, 7424.0], [13.7, 7424.0], [13.8, 7424.0], [13.9, 7424.0], [14.0, 7424.0], [14.1, 7425.0], [14.2, 7428.0], [14.3, 7429.0], [14.4, 7477.0], [14.5, 7507.0], [14.6, 7557.0], [14.7, 7596.0], [14.8, 7637.0], [14.9, 7678.0], [15.0, 7679.0], [15.1, 7679.0], [15.2, 7680.0], [15.3, 7680.0], [15.4, 7681.0], [15.5, 7683.0], [15.6, 7684.0], [15.7, 7712.0], [15.8, 7742.0], [15.9, 7809.0], [16.0, 7850.0], [16.1, 7869.0], [16.2, 7908.0], [16.3, 7932.0], [16.4, 7935.0], [16.5, 7935.0], [16.6, 7935.0], [16.7, 7936.0], [16.8, 7936.0], [16.9, 7936.0], [17.0, 7937.0], [17.1, 7940.0], [17.2, 7968.0], [17.3, 7994.0], [17.4, 8017.0], [17.5, 8047.0], [17.6, 8075.0], [17.7, 8096.0], [17.8, 8119.0], [17.9, 8146.0], [18.0, 8168.0], [18.1, 8187.0], [18.2, 8190.0], [18.3, 8191.0], [18.4, 8191.0], [18.5, 8191.0], [18.6, 8192.0], [18.7, 8192.0], [18.8, 8192.0], [18.9, 8192.0], [19.0, 8194.0], [19.1, 8217.0], [19.2, 8230.0], [19.3, 8244.0], [19.4, 8257.0], [19.5, 8281.0], [19.6, 8299.0], [19.7, 8322.0], [19.8, 8352.0], [19.9, 8373.0], [20.0, 8413.0], [20.1, 8444.0], [20.2, 8447.0], [20.3, 8448.0], [20.4, 8451.0], [20.5, 8470.0], [20.6, 8540.0], [20.7, 8562.0], [20.8, 8657.0], [20.9, 8694.0], [21.0, 8699.0], [21.1, 8700.0], [21.2, 8700.0], [21.3, 8703.0], [21.4, 8703.0], [21.5, 8703.0], [21.6, 8703.0], [21.7, 8704.0], [21.8, 8704.0], [21.9, 8704.0], [22.0, 8705.0], [22.1, 8708.0], [22.2, 8734.0], [22.3, 8769.0], [22.4, 8832.0], [22.5, 8887.0], [22.6, 8956.0], [22.7, 8959.0], [22.8, 8960.0], [22.9, 8960.0], [23.0, 8964.0], [23.1, 9001.0], [23.2, 9014.0], [23.3, 9057.0], [23.4, 9111.0], [23.5, 9164.0], [23.6, 9211.0], [23.7, 9214.0], [23.8, 9215.0], [23.9, 9215.0], [24.0, 9215.0], [24.1, 9216.0], [24.2, 9216.0], [24.3, 9216.0], [24.4, 9216.0], [24.5, 9216.0], [24.6, 9216.0], [24.7, 9218.0], [24.8, 9219.0], [24.9, 9220.0], [25.0, 9265.0], [25.1, 9368.0], [25.2, 9413.0], [25.3, 9456.0], [25.4, 9471.0], [25.5, 9472.0], [25.6, 9575.0], [25.7, 9674.0], [25.8, 9724.0], [25.9, 9727.0], [26.0, 9727.0], [26.1, 9728.0], [26.2, 9728.0], [26.3, 9728.0], [26.4, 9729.0], [26.5, 9732.0], [26.6, 9736.0], [26.7, 9809.0], [26.8, 9977.0], [26.9, 9983.0], [27.0, 9984.0], [27.1, 9984.0], [27.2, 9987.0], [27.3, 10045.0], [27.4, 10234.0], [27.5, 10239.0], [27.6, 10239.0], [27.7, 10240.0], [27.8, 10240.0], [27.9, 10241.0], [28.0, 10244.0], [28.1, 10313.0], [28.2, 10467.0], [28.3, 10497.0], [28.4, 10563.0], [28.5, 10723.0], [28.6, 10752.0], [28.7, 10752.0], [28.8, 10804.0], [28.9, 10883.0], [29.0, 10930.0], [29.1, 10969.0], [29.2, 10986.0], [29.3, 11004.0], [29.4, 11007.0], [29.5, 11012.0], [29.6, 11046.0], [29.7, 11063.0], [29.8, 11083.0], [29.9, 11091.0], [30.0, 11117.0], [30.1, 11135.0], [30.2, 11146.0], [30.3, 11158.0], [30.4, 11168.0], [30.5, 11180.0], [30.6, 11199.0], [30.7, 11215.0], [30.8, 11227.0], [30.9, 11235.0], [31.0, 11247.0], [31.1, 11259.0], [31.2, 11263.0], [31.3, 11264.0], [31.4, 11267.0], [31.5, 11276.0], [31.6, 11288.0], [31.7, 11307.0], [31.8, 11336.0], [31.9, 11354.0], [32.0, 11362.0], [32.1, 11377.0], [32.2, 11380.0], [32.3, 11396.0], [32.4, 11425.0], [32.5, 11443.0], [32.6, 11465.0], [32.7, 11479.0], [32.8, 11492.0], [32.9, 11506.0], [33.0, 11516.0], [33.1, 11519.0], [33.2, 11520.0], [33.3, 11522.0], [33.4, 11536.0], [33.5, 11543.0], [33.6, 11550.0], [33.7, 11555.0], [33.8, 11562.0], [33.9, 11573.0], [34.0, 11584.0], [34.1, 11597.0], [34.2, 11607.0], [34.3, 11613.0], [34.4, 11618.0], [34.5, 11627.0], [34.6, 11648.0], [34.7, 11655.0], [34.8, 11660.0], [34.9, 11669.0], [35.0, 11676.0], [35.1, 11684.0], [35.2, 11694.0], [35.3, 11702.0], [35.4, 11708.0], [35.5, 11730.0], [35.6, 11735.0], [35.7, 11740.0], [35.8, 11745.0], [35.9, 11757.0], [36.0, 11764.0], [36.1, 11769.0], [36.2, 11772.0], [36.3, 11775.0], [36.4, 11775.0], [36.5, 11776.0], [36.6, 11776.0], [36.7, 11777.0], [36.8, 11782.0], [36.9, 11787.0], [37.0, 11797.0], [37.1, 11800.0], [37.2, 11803.0], [37.3, 11812.0], [37.4, 11818.0], [37.5, 11825.0], [37.6, 11832.0], [37.7, 11837.0], [37.8, 11842.0], [37.9, 11846.0], [38.0, 11852.0], [38.1, 11857.0], [38.2, 11864.0], [38.3, 11868.0], [38.4, 11870.0], [38.5, 11873.0], [38.6, 11877.0], [38.7, 11884.0], [38.8, 11885.0], [38.9, 11890.0], [39.0, 11894.0], [39.1, 11899.0], [39.2, 11904.0], [39.3, 11908.0], [39.4, 11910.0], [39.5, 11914.0], [39.6, 11918.0], [39.7, 11923.0], [39.8, 11924.0], [39.9, 11928.0], [40.0, 11933.0], [40.1, 11937.0], [40.2, 11941.0], [40.3, 11942.0], [40.4, 11947.0], [40.5, 11949.0], [40.6, 11953.0], [40.7, 11956.0], [40.8, 11959.0], [40.9, 11960.0], [41.0, 11962.0], [41.1, 11966.0], [41.2, 11969.0], [41.3, 11971.0], [41.4, 11974.0], [41.5, 11977.0], [41.6, 11980.0], [41.7, 11985.0], [41.8, 11987.0], [41.9, 11990.0], [42.0, 11993.0], [42.1, 11997.0], [42.2, 12000.0], [42.3, 12004.0], [42.4, 12006.0], [42.5, 12008.0], [42.6, 12011.0], [42.7, 12013.0], [42.8, 12016.0], [42.9, 12019.0], [43.0, 12024.0], [43.1, 12026.0], [43.2, 12029.0], [43.3, 12032.0], [43.4, 12035.0], [43.5, 12038.0], [43.6, 12041.0], [43.7, 12044.0], [43.8, 12049.0], [43.9, 12050.0], [44.0, 12052.0], [44.1, 12056.0], [44.2, 12058.0], [44.3, 12061.0], [44.4, 12064.0], [44.5, 12066.0], [44.6, 12069.0], [44.7, 12074.0], [44.8, 12077.0], [44.9, 12080.0], [45.0, 12084.0], [45.1, 12087.0], [45.2, 12090.0], [45.3, 12093.0], [45.4, 12097.0], [45.5, 12100.0], [45.6, 12102.0], [45.7, 12106.0], [45.8, 12110.0], [45.9, 12113.0], [46.0, 12118.0], [46.1, 12119.0], [46.2, 12122.0], [46.3, 12125.0], [46.4, 12127.0], [46.5, 12130.0], [46.6, 12132.0], [46.7, 12134.0], [46.8, 12137.0], [46.9, 12139.0], [47.0, 12142.0], [47.1, 12145.0], [47.2, 12147.0], [47.3, 12149.0], [47.4, 12151.0], [47.5, 12153.0], [47.6, 12159.0], [47.7, 12160.0], [47.8, 12163.0], [47.9, 12167.0], [48.0, 12171.0], [48.1, 12174.0], [48.2, 12178.0], [48.3, 12182.0], [48.4, 12183.0], [48.5, 12185.0], [48.6, 12190.0], [48.7, 12192.0], [48.8, 12194.0], [48.9, 12196.0], [49.0, 12199.0], [49.1, 12200.0], [49.2, 12202.0], [49.3, 12207.0], [49.4, 12211.0], [49.5, 12214.0], [49.6, 12218.0], [49.7, 12221.0], [49.8, 12222.0], [49.9, 12225.0], [50.0, 12227.0], [50.1, 12229.0], [50.2, 12231.0], [50.3, 12232.0], [50.4, 12235.0], [50.5, 12237.0], [50.6, 12239.0], [50.7, 12241.0], [50.8, 12244.0], [50.9, 12247.0], [51.0, 12250.0], [51.1, 12253.0], [51.2, 12256.0], [51.3, 12258.0], [51.4, 12260.0], [51.5, 12263.0], [51.6, 12265.0], [51.7, 12267.0], [51.8, 12270.0], [51.9, 12272.0], [52.0, 12274.0], [52.1, 12276.0], [52.2, 12278.0], [52.3, 12282.0], [52.4, 12284.0], [52.5, 12286.0], [52.6, 12287.0], [52.7, 12288.0], [52.8, 12288.0], [52.9, 12289.0], [53.0, 12291.0], [53.1, 12292.0], [53.2, 12295.0], [53.3, 12296.0], [53.4, 12297.0], [53.5, 12300.0], [53.6, 12302.0], [53.7, 12304.0], [53.8, 12309.0], [53.9, 12311.0], [54.0, 12313.0], [54.1, 12318.0], [54.2, 12321.0], [54.3, 12323.0], [54.4, 12327.0], [54.5, 12329.0], [54.6, 12332.0], [54.7, 12334.0], [54.8, 12337.0], [54.9, 12340.0], [55.0, 12343.0], [55.1, 12345.0], [55.2, 12349.0], [55.3, 12351.0], [55.4, 12353.0], [55.5, 12358.0], [55.6, 12359.0], [55.7, 12362.0], [55.8, 12366.0], [55.9, 12368.0], [56.0, 12370.0], [56.1, 12372.0], [56.2, 12373.0], [56.3, 12375.0], [56.4, 12379.0], [56.5, 12381.0], [56.6, 12385.0], [56.7, 12387.0], [56.8, 12390.0], [56.9, 12393.0], [57.0, 12395.0], [57.1, 12398.0], [57.2, 12402.0], [57.3, 12406.0], [57.4, 12409.0], [57.5, 12412.0], [57.6, 12415.0], [57.7, 12420.0], [57.8, 12422.0], [57.9, 12427.0], [58.0, 12430.0], [58.1, 12432.0], [58.2, 12439.0], [58.3, 12445.0], [58.4, 12448.0], [58.5, 12449.0], [58.6, 12453.0], [58.7, 12455.0], [58.8, 12459.0], [58.9, 12462.0], [59.0, 12467.0], [59.1, 12471.0], [59.2, 12475.0], [59.3, 12480.0], [59.4, 12484.0], [59.5, 12487.0], [59.6, 12490.0], [59.7, 12493.0], [59.8, 12496.0], [59.9, 12500.0], [60.0, 12503.0], [60.1, 12506.0], [60.2, 12509.0], [60.3, 12514.0], [60.4, 12519.0], [60.5, 12522.0], [60.6, 12526.0], [60.7, 12529.0], [60.8, 12532.0], [60.9, 12534.0], [61.0, 12537.0], [61.1, 12541.0], [61.2, 12544.0], [61.3, 12547.0], [61.4, 12551.0], [61.5, 12555.0], [61.6, 12559.0], [61.7, 12562.0], [61.8, 12565.0], [61.9, 12567.0], [62.0, 12571.0], [62.1, 12574.0], [62.2, 12577.0], [62.3, 12579.0], [62.4, 12583.0], [62.5, 12587.0], [62.6, 12588.0], [62.7, 12591.0], [62.8, 12593.0], [62.9, 12595.0], [63.0, 12597.0], [63.1, 12600.0], [63.2, 12604.0], [63.3, 12607.0], [63.4, 12611.0], [63.5, 12613.0], [63.6, 12616.0], [63.7, 12620.0], [63.8, 12623.0], [63.9, 12627.0], [64.0, 12629.0], [64.1, 12633.0], [64.2, 12635.0], [64.3, 12641.0], [64.4, 12643.0], [64.5, 12646.0], [64.6, 12650.0], [64.7, 12652.0], [64.8, 12654.0], [64.9, 12656.0], [65.0, 12660.0], [65.1, 12664.0], [65.2, 12666.0], [65.3, 12668.0], [65.4, 12671.0], [65.5, 12673.0], [65.6, 12676.0], [65.7, 12680.0], [65.8, 12681.0], [65.9, 12686.0], [66.0, 12690.0], [66.1, 12693.0], [66.2, 12696.0], [66.3, 12698.0], [66.4, 12702.0], [66.5, 12704.0], [66.6, 12708.0], [66.7, 12712.0], [66.8, 12717.0], [66.9, 12719.0], [67.0, 12722.0], [67.1, 12725.0], [67.2, 12727.0], [67.3, 12731.0], [67.4, 12735.0], [67.5, 12739.0], [67.6, 12745.0], [67.7, 12750.0], [67.8, 12754.0], [67.9, 12757.0], [68.0, 12759.0], [68.1, 12763.0], [68.2, 12767.0], [68.3, 12771.0], [68.4, 12775.0], [68.5, 12780.0], [68.6, 12783.0], [68.7, 12786.0], [68.8, 12792.0], [68.9, 12797.0], [69.0, 12799.0], [69.1, 12800.0], [69.2, 12800.0], [69.3, 12801.0], [69.4, 12803.0], [69.5, 12804.0], [69.6, 12809.0], [69.7, 12812.0], [69.8, 12814.0], [69.9, 12819.0], [70.0, 12821.0], [70.1, 12825.0], [70.2, 12831.0], [70.3, 12834.0], [70.4, 12837.0], [70.5, 12839.0], [70.6, 12841.0], [70.7, 12844.0], [70.8, 12851.0], [70.9, 12856.0], [71.0, 12859.0], [71.1, 12865.0], [71.2, 12869.0], [71.3, 12872.0], [71.4, 12876.0], [71.5, 12878.0], [71.6, 12884.0], [71.7, 12890.0], [71.8, 12895.0], [71.9, 12898.0], [72.0, 12904.0], [72.1, 12910.0], [72.2, 12912.0], [72.3, 12918.0], [72.4, 12921.0], [72.5, 12923.0], [72.6, 12929.0], [72.7, 12934.0], [72.8, 12937.0], [72.9, 12942.0], [73.0, 12943.0], [73.1, 12950.0], [73.2, 12954.0], [73.3, 12958.0], [73.4, 12963.0], [73.5, 12968.0], [73.6, 12974.0], [73.7, 12980.0], [73.8, 12986.0], [73.9, 12993.0], [74.0, 12996.0], [74.1, 12999.0], [74.2, 13007.0], [74.3, 13012.0], [74.4, 13017.0], [74.5, 13024.0], [74.6, 13033.0], [74.7, 13041.0], [74.8, 13045.0], [74.9, 13050.0], [75.0, 13054.0], [75.1, 13055.0], [75.2, 13060.0], [75.3, 13065.0], [75.4, 13074.0], [75.5, 13079.0], [75.6, 13081.0], [75.7, 13090.0], [75.8, 13093.0], [75.9, 13105.0], [76.0, 13110.0], [76.1, 13115.0], [76.2, 13121.0], [76.3, 13126.0], [76.4, 13132.0], [76.5, 13142.0], [76.6, 13144.0], [76.7, 13151.0], [76.8, 13158.0], [76.9, 13161.0], [77.0, 13169.0], [77.1, 13175.0], [77.2, 13184.0], [77.3, 13191.0], [77.4, 13194.0], [77.5, 13203.0], [77.6, 13209.0], [77.7, 13215.0], [77.8, 13221.0], [77.9, 13230.0], [78.0, 13237.0], [78.1, 13246.0], [78.2, 13248.0], [78.3, 13251.0], [78.4, 13263.0], [78.5, 13268.0], [78.6, 13274.0], [78.7, 13280.0], [78.8, 13288.0], [78.9, 13300.0], [79.0, 13305.0], [79.1, 13307.0], [79.2, 13308.0], [79.3, 13308.0], [79.4, 13308.0], [79.5, 13309.0], [79.6, 13310.0], [79.7, 13311.0], [79.8, 13311.0], [79.9, 13311.0], [80.0, 13311.0], [80.1, 13311.0], [80.2, 13311.0], [80.3, 13311.0], [80.4, 13311.0], [80.5, 13311.0], [80.6, 13311.0], [80.7, 13311.0], [80.8, 13311.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13313.0], [82.2, 13313.0], [82.3, 13313.0], [82.4, 13315.0], [82.5, 13315.0], [82.6, 13315.0], [82.7, 13315.0], [82.8, 13316.0], [82.9, 13316.0], [83.0, 13317.0], [83.1, 13320.0], [83.2, 13327.0], [83.3, 13336.0], [83.4, 13340.0], [83.5, 13346.0], [83.6, 13355.0], [83.7, 13361.0], [83.8, 13365.0], [83.9, 13371.0], [84.0, 13376.0], [84.1, 13381.0], [84.2, 13390.0], [84.3, 13397.0], [84.4, 13403.0], [84.5, 13409.0], [84.6, 13417.0], [84.7, 13423.0], [84.8, 13431.0], [84.9, 13439.0], [85.0, 13456.0], [85.1, 13463.0], [85.2, 13482.0], [85.3, 13504.0], [85.4, 13522.0], [85.5, 13533.0], [85.6, 13543.0], [85.7, 13552.0], [85.8, 13558.0], [85.9, 13567.0], [86.0, 13572.0], [86.1, 13593.0], [86.2, 13607.0], [86.3, 13628.0], [86.4, 13644.0], [86.5, 13662.0], [86.6, 13670.0], [86.7, 13684.0], [86.8, 13703.0], [86.9, 13723.0], [87.0, 13742.0], [87.1, 13769.0], [87.2, 13786.0], [87.3, 13809.0], [87.4, 13819.0], [87.5, 13820.0], [87.6, 13823.0], [87.7, 13823.0], [87.8, 13823.0], [87.9, 13823.0], [88.0, 13824.0], [88.1, 13824.0], [88.2, 13824.0], [88.3, 13824.0], [88.4, 13827.0], [88.5, 13828.0], [88.6, 13835.0], [88.7, 13855.0], [88.8, 13865.0], [88.9, 13873.0], [89.0, 13890.0], [89.1, 13905.0], [89.2, 13920.0], [89.3, 13940.0], [89.4, 13978.0], [89.5, 13993.0], [89.6, 14010.0], [89.7, 14029.0], [89.8, 14065.0], [89.9, 14079.0], [90.0, 14087.0], [90.1, 14103.0], [90.2, 14117.0], [90.3, 14137.0], [90.4, 14154.0], [90.5, 14172.0], [90.6, 14186.0], [90.7, 14209.0], [90.8, 14245.0], [90.9, 14263.0], [91.0, 14281.0], [91.1, 14297.0], [91.2, 14325.0], [91.3, 14331.0], [91.4, 14332.0], [91.5, 14334.0], [91.6, 14335.0], [91.7, 14336.0], [91.8, 14336.0], [91.9, 14336.0], [92.0, 14340.0], [92.1, 14360.0], [92.2, 14389.0], [92.3, 14430.0], [92.4, 14448.0], [92.5, 14479.0], [92.6, 14500.0], [92.7, 14531.0], [92.8, 14565.0], [92.9, 14590.0], [93.0, 14592.0], [93.1, 14592.0], [93.2, 14625.0], [93.3, 14649.0], [93.4, 14678.0], [93.5, 14713.0], [93.6, 14755.0], [93.7, 14791.0], [93.8, 14844.0], [93.9, 14847.0], [94.0, 14848.0], [94.1, 14849.0], [94.2, 14906.0], [94.3, 14966.0], [94.4, 15032.0], [94.5, 15100.0], [94.6, 15110.0], [94.7, 15170.0], [94.8, 15229.0], [94.9, 15301.0], [95.0, 15359.0], [95.1, 15360.0], [95.2, 15360.0], [95.3, 15364.0], [95.4, 15420.0], [95.5, 15486.0], [95.6, 15516.0], [95.7, 15582.0], [95.8, 15615.0], [95.9, 15691.0], [96.0, 15872.0], [96.1, 16318.0], [96.2, 16383.0], [96.3, 16384.0], [96.4, 16555.0], [96.5, 17067.0], [96.6, 17369.0], [96.7, 17703.0], [96.8, 18431.0], [96.9, 18692.0], [97.0, 19400.0], [97.1, 21030.0], [97.2, 21702.0], [97.3, 22540.0], [97.4, 24513.0], [97.5, 25491.0], [97.6, 26057.0], [97.7, 26368.0], [97.8, 27646.0], [97.9, 53247.0], [98.0, 54629.0], [98.1, 59112.0], [98.2, 70141.0], [98.3, 77057.0], [98.4, 94208.0], [98.5, 102912.0], [98.6, 106492.0], [98.7, 106801.0], [98.8, 107520.0], [98.9, 113920.0], [99.0, 114685.0], [99.1, 116459.0], [99.2, 117688.0], [99.3, 129280.0], [99.4, 136956.0], [99.5, 137720.0], [99.6, 139519.0], [99.7, 148987.0], [99.8, 186367.0], [99.9, 211200.0], [100.0, 217343.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 4.0], [7.4, 5.0], [7.5, 595.0], [7.6, 602.0], [7.7, 605.0], [7.8, 628.0], [7.9, 760.0], [8.0, 837.0], [8.1, 1124.0], [8.2, 1353.0], [8.3, 1532.0], [8.4, 1908.0], [8.5, 1971.0], [8.6, 1996.0], [8.7, 2001.0], [8.8, 2152.0], [8.9, 2229.0], [9.0, 2330.0], [9.1, 2540.0], [9.2, 2776.0], [9.3, 3100.0], [9.4, 3219.0], [9.5, 3267.0], [9.6, 3412.0], [9.7, 3490.0], [9.8, 3528.0], [9.9, 3565.0], [10.0, 3626.0], [10.1, 3770.0], [10.2, 3911.0], [10.3, 4019.0], [10.4, 4122.0], [10.5, 4409.0], [10.6, 4622.0], [10.7, 4847.0], [10.8, 5212.0], [10.9, 5560.0], [11.0, 5722.0], [11.1, 5825.0], [11.2, 6159.0], [11.3, 6307.0], [11.4, 6503.0], [11.5, 6655.0], [11.6, 6691.0], [11.7, 6898.0], [11.8, 7005.0], [11.9, 7164.0], [12.0, 7166.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7169.0], [13.7, 7171.0], [13.8, 7171.0], [13.9, 7172.0], [14.0, 7172.0], [14.1, 7226.0], [14.2, 7418.0], [14.3, 7419.0], [14.4, 7419.0], [14.5, 7419.0], [14.6, 7419.0], [14.7, 7420.0], [14.8, 7420.0], [14.9, 7421.0], [15.0, 7423.0], [15.1, 7423.0], [15.2, 7423.0], [15.3, 7423.0], [15.4, 7423.0], [15.5, 7423.0], [15.6, 7423.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7427.0], [16.6, 7427.0], [16.7, 7427.0], [16.8, 7427.0], [16.9, 7427.0], [17.0, 7428.0], [17.1, 7461.0], [17.2, 7558.0], [17.3, 7571.0], [17.4, 7676.0], [17.5, 7679.0], [17.6, 7679.0], [17.7, 7679.0], [17.8, 7679.0], [17.9, 7679.0], [18.0, 7679.0], [18.1, 7679.0], [18.2, 7679.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7679.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7681.0], [19.2, 7681.0], [19.3, 7683.0], [19.4, 7683.0], [19.5, 7683.0], [19.6, 7683.0], [19.7, 7684.0], [19.8, 7687.0], [19.9, 7925.0], [20.0, 7931.0], [20.1, 7932.0], [20.2, 7932.0], [20.3, 7934.0], [20.4, 7935.0], [20.5, 7935.0], [20.6, 7935.0], [20.7, 7935.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7939.0], [22.2, 8109.0], [22.3, 8187.0], [22.4, 8187.0], [22.5, 8188.0], [22.6, 8188.0], [22.7, 8190.0], [22.8, 8190.0], [22.9, 8191.0], [23.0, 8191.0], [23.1, 8191.0], [23.2, 8191.0], [23.3, 8191.0], [23.4, 8191.0], [23.5, 8191.0], [23.6, 8191.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8193.0], [25.4, 8195.0], [25.5, 8256.0], [25.6, 8319.0], [25.7, 8387.0], [25.8, 8442.0], [25.9, 8446.0], [26.0, 8446.0], [26.1, 8447.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8448.0], [26.5, 8448.0], [26.6, 8448.0], [26.7, 8451.0], [26.8, 8491.0], [26.9, 8544.0], [27.0, 8697.0], [27.1, 8698.0], [27.2, 8699.0], [27.3, 8699.0], [27.4, 8700.0], [27.5, 8700.0], [27.6, 8700.0], [27.7, 8700.0], [27.8, 8702.0], [27.9, 8702.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8703.0], [29.0, 8703.0], [29.1, 8703.0], [29.2, 8703.0], [29.3, 8703.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8704.0], [29.8, 8704.0], [29.9, 8704.0], [30.0, 8704.0], [30.1, 8704.0], [30.2, 8704.0], [30.3, 8704.0], [30.4, 8704.0], [30.5, 8704.0], [30.6, 8705.0], [30.7, 8707.0], [30.8, 8708.0], [30.9, 8873.0], [31.0, 8955.0], [31.1, 8956.0], [31.2, 8959.0], [31.3, 8959.0], [31.4, 8959.0], [31.5, 8959.0], [31.6, 8959.0], [31.7, 8959.0], [31.8, 8959.0], [31.9, 8959.0], [32.0, 8960.0], [32.1, 8960.0], [32.2, 8960.0], [32.3, 8960.0], [32.4, 8963.0], [32.5, 8963.0], [32.6, 8964.0], [32.7, 8964.0], [32.8, 9009.0], [32.9, 9138.0], [33.0, 9211.0], [33.1, 9212.0], [33.2, 9214.0], [33.3, 9215.0], [33.4, 9215.0], [33.5, 9215.0], [33.6, 9215.0], [33.7, 9215.0], [33.8, 9215.0], [33.9, 9215.0], [34.0, 9215.0], [34.1, 9215.0], [34.2, 9215.0], [34.3, 9215.0], [34.4, 9215.0], [34.5, 9215.0], [34.6, 9215.0], [34.7, 9216.0], [34.8, 9216.0], [34.9, 9216.0], [35.0, 9216.0], [35.1, 9216.0], [35.2, 9216.0], [35.3, 9216.0], [35.4, 9216.0], [35.5, 9216.0], [35.6, 9216.0], [35.7, 9216.0], [35.8, 9216.0], [35.9, 9216.0], [36.0, 9219.0], [36.1, 9219.0], [36.2, 9219.0], [36.3, 9219.0], [36.4, 9219.0], [36.5, 9219.0], [36.6, 9220.0], [36.7, 9242.0], [36.8, 9467.0], [36.9, 9470.0], [37.0, 9471.0], [37.1, 9472.0], [37.2, 9723.0], [37.3, 9724.0], [37.4, 9724.0], [37.5, 9726.0], [37.6, 9727.0], [37.7, 9727.0], [37.8, 9727.0], [37.9, 9727.0], [38.0, 9727.0], [38.1, 9727.0], [38.2, 9727.0], [38.3, 9728.0], [38.4, 9728.0], [38.5, 9728.0], [38.6, 9728.0], [38.7, 9728.0], [38.8, 9728.0], [38.9, 9728.0], [39.0, 9728.0], [39.1, 9728.0], [39.2, 9728.0], [39.3, 9729.0], [39.4, 9731.0], [39.5, 9733.0], [39.6, 9761.0], [39.7, 9858.0], [39.8, 9952.0], [39.9, 9978.0], [40.0, 9982.0], [40.1, 9983.0], [40.2, 9983.0], [40.3, 9983.0], [40.4, 9983.0], [40.5, 9983.0], [40.6, 9983.0], [40.7, 9984.0], [40.8, 9984.0], [40.9, 9984.0], [41.0, 9984.0], [41.1, 9985.0], [41.2, 9987.0], [41.3, 9987.0], [41.4, 9988.0], [41.5, 9989.0], [41.6, 10145.0], [41.7, 10229.0], [41.8, 10236.0], [41.9, 10238.0], [42.0, 10239.0], [42.1, 10239.0], [42.2, 10239.0], [42.3, 10239.0], [42.4, 10239.0], [42.5, 10239.0], [42.6, 10239.0], [42.7, 10239.0], [42.8, 10239.0], [42.9, 10239.0], [43.0, 10240.0], [43.1, 10240.0], [43.2, 10240.0], [43.3, 10240.0], [43.4, 10240.0], [43.5, 10240.0], [43.6, 10240.0], [43.7, 10240.0], [43.8, 10240.0], [43.9, 10240.0], [44.0, 10240.0], [44.1, 10241.0], [44.2, 10244.0], [44.3, 10244.0], [44.4, 10324.0], [44.5, 10384.0], [44.6, 10429.0], [44.7, 10472.0], [44.8, 10495.0], [44.9, 10495.0], [45.0, 10495.0], [45.1, 10496.0], [45.2, 10545.0], [45.3, 10662.0], [45.4, 10713.0], [45.5, 10750.0], [45.6, 10751.0], [45.7, 10751.0], [45.8, 10751.0], [45.9, 10751.0], [46.0, 10752.0], [46.1, 10752.0], [46.2, 10809.0], [46.3, 10868.0], [46.4, 10917.0], [46.5, 10941.0], [46.6, 10963.0], [46.7, 10993.0], [46.8, 11003.0], [46.9, 11004.0], [47.0, 11004.0], [47.1, 11005.0], [47.2, 11006.0], [47.3, 11007.0], [47.4, 11007.0], [47.5, 11007.0], [47.6, 11007.0], [47.7, 11007.0], [47.8, 11008.0], [47.9, 11012.0], [48.0, 11018.0], [48.1, 11044.0], [48.2, 11133.0], [48.3, 11150.0], [48.4, 11192.0], [48.5, 11196.0], [48.6, 11199.0], [48.7, 11220.0], [48.8, 11233.0], [48.9, 11238.0], [49.0, 11247.0], [49.1, 11260.0], [49.2, 11263.0], [49.3, 11263.0], [49.4, 11268.0], [49.5, 11286.0], [49.6, 11314.0], [49.7, 11345.0], [49.8, 11364.0], [49.9, 11378.0], [50.0, 11381.0], [50.1, 11392.0], [50.2, 11403.0], [50.3, 11425.0], [50.4, 11445.0], [50.5, 11458.0], [50.6, 11465.0], [50.7, 11474.0], [50.8, 11475.0], [50.9, 11478.0], [51.0, 11496.0], [51.1, 11515.0], [51.2, 11515.0], [51.3, 11519.0], [51.4, 11519.0], [51.5, 11519.0], [51.6, 11520.0], [51.7, 11520.0], [51.8, 11521.0], [51.9, 11529.0], [52.0, 11550.0], [52.1, 11557.0], [52.2, 11567.0], [52.3, 11581.0], [52.4, 11590.0], [52.5, 11605.0], [52.6, 11608.0], [52.7, 11616.0], [52.8, 11623.0], [52.9, 11639.0], [53.0, 11641.0], [53.1, 11649.0], [53.2, 11676.0], [53.3, 11681.0], [53.4, 11682.0], [53.5, 11687.0], [53.6, 11709.0], [53.7, 11728.0], [53.8, 11736.0], [53.9, 11746.0], [54.0, 11761.0], [54.1, 11770.0], [54.2, 11771.0], [54.3, 11771.0], [54.4, 11771.0], [54.5, 11771.0], [54.6, 11774.0], [54.7, 11775.0], [54.8, 11775.0], [54.9, 11775.0], [55.0, 11775.0], [55.1, 11776.0], [55.2, 11776.0], [55.3, 11776.0], [55.4, 11776.0], [55.5, 11776.0], [55.6, 11779.0], [55.7, 11781.0], [55.8, 11832.0], [55.9, 11860.0], [56.0, 11887.0], [56.1, 11933.0], [56.2, 11956.0], [56.3, 11957.0], [56.4, 11964.0], [56.5, 12007.0], [56.6, 12014.0], [56.7, 12021.0], [56.8, 12035.0], [56.9, 12078.0], [57.0, 12106.0], [57.1, 12142.0], [57.2, 12153.0], [57.3, 12167.0], [57.4, 12219.0], [57.5, 12221.0], [57.6, 12235.0], [57.7, 12268.0], [57.8, 12287.0], [57.9, 12287.0], [58.0, 12287.0], [58.1, 12287.0], [58.2, 12288.0], [58.3, 12288.0], [58.4, 12288.0], [58.5, 12292.0], [58.6, 12356.0], [58.7, 12365.0], [58.8, 12382.0], [58.9, 12397.0], [59.0, 12445.0], [59.1, 12508.0], [59.2, 12542.0], [59.3, 12543.0], [59.4, 12544.0], [59.5, 12544.0], [59.6, 12548.0], [59.7, 12604.0], [59.8, 12649.0], [59.9, 12728.0], [60.0, 12771.0], [60.1, 12777.0], [60.2, 12796.0], [60.3, 12798.0], [60.4, 12799.0], [60.5, 12799.0], [60.6, 12799.0], [60.7, 12799.0], [60.8, 12799.0], [60.9, 12799.0], [61.0, 12800.0], [61.1, 12800.0], [61.2, 12800.0], [61.3, 12800.0], [61.4, 12803.0], [61.5, 12804.0], [61.6, 12804.0], [61.7, 12811.0], [61.8, 12858.0], [61.9, 12927.0], [62.0, 12937.0], [62.1, 12984.0], [62.2, 13004.0], [62.3, 13050.0], [62.4, 13053.0], [62.5, 13055.0], [62.6, 13055.0], [62.7, 13056.0], [62.8, 13064.0], [62.9, 13098.0], [63.0, 13149.0], [63.1, 13167.0], [63.2, 13188.0], [63.3, 13202.0], [63.4, 13306.0], [63.5, 13307.0], [63.6, 13307.0], [63.7, 13307.0], [63.8, 13307.0], [63.9, 13307.0], [64.0, 13307.0], [64.1, 13308.0], [64.2, 13308.0], [64.3, 13308.0], [64.4, 13308.0], [64.5, 13308.0], [64.6, 13308.0], [64.7, 13308.0], [64.8, 13308.0], [64.9, 13308.0], [65.0, 13308.0], [65.1, 13309.0], [65.2, 13310.0], [65.3, 13310.0], [65.4, 13310.0], [65.5, 13310.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13311.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13313.0], [73.9, 13313.0], [74.0, 13313.0], [74.1, 13314.0], [74.2, 13315.0], [74.3, 13315.0], [74.4, 13315.0], [74.5, 13315.0], [74.6, 13315.0], [74.7, 13315.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13315.0], [75.1, 13315.0], [75.2, 13315.0], [75.3, 13315.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13316.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13366.0], [76.3, 13392.0], [76.4, 13403.0], [76.5, 13484.0], [76.6, 13548.0], [76.7, 13564.0], [76.8, 13567.0], [76.9, 13567.0], [77.0, 13569.0], [77.1, 13572.0], [77.2, 13585.0], [77.3, 13621.0], [77.4, 13712.0], [77.5, 13778.0], [77.6, 13783.0], [77.7, 13819.0], [77.8, 13819.0], [77.9, 13820.0], [78.0, 13820.0], [78.1, 13820.0], [78.2, 13821.0], [78.3, 13822.0], [78.4, 13822.0], [78.5, 13823.0], [78.6, 13823.0], [78.7, 13823.0], [78.8, 13823.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13827.0], [80.2, 13827.0], [80.3, 13827.0], [80.4, 13828.0], [80.5, 13828.0], [80.6, 13848.0], [80.7, 13891.0], [80.8, 13973.0], [80.9, 14071.0], [81.0, 14079.0], [81.1, 14080.0], [81.2, 14080.0], [81.3, 14083.0], [81.4, 14109.0], [81.5, 14161.0], [81.6, 14207.0], [81.7, 14236.0], [81.8, 14276.0], [81.9, 14282.0], [82.0, 14305.0], [82.1, 14331.0], [82.2, 14331.0], [82.3, 14332.0], [82.4, 14332.0], [82.5, 14332.0], [82.6, 14332.0], [82.7, 14332.0], [82.8, 14334.0], [82.9, 14335.0], [83.0, 14335.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14337.0], [84.1, 14338.0], [84.2, 14339.0], [84.3, 14339.0], [84.4, 14339.0], [84.5, 14363.0], [84.6, 14455.0], [84.7, 14511.0], [84.8, 14563.0], [84.9, 14591.0], [85.0, 14591.0], [85.1, 14591.0], [85.2, 14591.0], [85.3, 14591.0], [85.4, 14592.0], [85.5, 14592.0], [85.6, 14592.0], [85.7, 14627.0], [85.8, 14693.0], [85.9, 14736.0], [86.0, 14823.0], [86.1, 14845.0], [86.2, 14847.0], [86.3, 14847.0], [86.4, 14847.0], [86.5, 14848.0], [86.6, 14848.0], [86.7, 14852.0], [86.8, 14866.0], [86.9, 14995.0], [87.0, 15103.0], [87.1, 15103.0], [87.2, 15105.0], [87.3, 15110.0], [87.4, 15169.0], [87.5, 15359.0], [87.6, 15359.0], [87.7, 15359.0], [87.8, 15359.0], [87.9, 15359.0], [88.0, 15360.0], [88.1, 15360.0], [88.2, 15361.0], [88.3, 15363.0], [88.4, 15401.0], [88.5, 15525.0], [88.6, 15619.0], [88.7, 15841.0], [88.8, 15872.0], [88.9, 15968.0], [89.0, 16035.0], [89.1, 16234.0], [89.2, 16342.0], [89.3, 16379.0], [89.4, 16380.0], [89.5, 16383.0], [89.6, 16383.0], [89.7, 16383.0], [89.8, 16383.0], [89.9, 16383.0], [90.0, 16384.0], [90.1, 16384.0], [90.2, 16493.0], [90.3, 16638.0], [90.4, 16639.0], [90.5, 16871.0], [90.6, 16895.0], [90.7, 16896.0], [90.8, 16896.0], [90.9, 17163.0], [91.0, 17241.0], [91.1, 17373.0], [91.2, 17403.0], [91.3, 17663.0], [91.4, 17663.0], [91.5, 18162.0], [91.6, 18431.0], [91.7, 18686.0], [91.8, 23552.0], [91.9, 23905.0], [92.0, 23926.0], [92.1, 23943.0], [92.2, 24471.0], [92.3, 26367.0], [92.4, 26368.0], [92.5, 26368.0], [92.6, 26879.0], [92.7, 27647.0], [92.8, 28415.0], [92.9, 37119.0], [93.0, 44537.0], [93.1, 53247.0], [93.2, 53275.0], [93.3, 53292.0], [93.4, 53309.0], [93.5, 53321.0], [93.6, 53339.0], [93.7, 53371.0], [93.8, 53438.0], [93.9, 54150.0], [94.0, 55194.0], [94.1, 57875.0], [94.2, 57882.0], [94.3, 60188.0], [94.4, 73727.0], [94.5, 75263.0], [94.6, 92158.0], [94.7, 94208.0], [94.8, 94208.0], [94.9, 98816.0], [95.0, 98816.0], [95.1, 102911.0], [95.2, 102912.0], [95.3, 104447.0], [95.4, 105472.0], [95.5, 106495.0], [95.6, 106496.0], [95.7, 106499.0], [95.8, 107007.0], [95.9, 107007.0], [96.0, 107008.0], [96.1, 107776.0], [96.2, 110335.0], [96.3, 111350.0], [96.4, 111872.0], [96.5, 114138.0], [96.6, 114684.0], [96.7, 114685.0], [96.8, 114750.0], [96.9, 114948.0], [97.0, 114948.0], [97.1, 115650.0], [97.2, 115943.0], [97.3, 116439.0], [97.4, 116496.0], [97.5, 121599.0], [97.6, 121858.0], [97.7, 123899.0], [97.8, 128004.0], [97.9, 128004.0], [98.0, 130559.0], [98.1, 130560.0], [98.2, 136955.0], [98.3, 137216.0], [98.4, 137471.0], [98.5, 137720.0], [98.6, 137720.0], [98.7, 137720.0], [98.8, 139008.0], [98.9, 139519.0], [99.0, 140799.0], [99.1, 140799.0], [99.2, 145411.0], [99.3, 148987.0], [99.4, 150783.0], [99.5, 156672.0], [99.6, 163840.0], [99.7, 211200.0], [99.8, 211200.0], [99.9, 211200.0], [100.0, 214269.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 22.0], [5.9, 24.0], [6.0, 28.0], [6.1, 30.0], [6.2, 31.0], [6.3, 35.0], [6.4, 37.0], [6.5, 38.0], [6.6, 52.0], [6.7, 120.0], [6.8, 259.0], [6.9, 474.0], [7.0, 668.0], [7.1, 1025.0], [7.2, 1196.0], [7.3, 1334.0], [7.4, 1365.0], [7.5, 1474.0], [7.6, 1527.0], [7.7, 1830.0], [7.8, 2075.0], [7.9, 2173.0], [8.0, 2358.0], [8.1, 2653.0], [8.2, 2773.0], [8.3, 2784.0], [8.4, 2825.0], [8.5, 2904.0], [8.6, 3122.0], [8.7, 3205.0], [8.8, 3371.0], [8.9, 3409.0], [9.0, 3712.0], [9.1, 3933.0], [9.2, 4182.0], [9.3, 4871.0], [9.4, 5117.0], [9.5, 5392.0], [9.6, 5466.0], [9.7, 5538.0], [9.8, 5714.0], [9.9, 5784.0], [10.0, 5992.0], [10.1, 6124.0], [10.2, 6334.0], [10.3, 6349.0], [10.4, 6406.0], [10.5, 6648.0], [10.6, 6729.0], [10.7, 6794.0], [10.8, 6856.0], [10.9, 6902.0], [11.0, 6925.0], [11.1, 6951.0], [11.2, 7008.0], [11.3, 7079.0], [11.4, 7110.0], [11.5, 7115.0], [11.6, 7145.0], [11.7, 7164.0], [11.8, 7166.0], [11.9, 7167.0], [12.0, 7167.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7167.0], [12.4, 7167.0], [12.5, 7167.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7169.0], [13.9, 7169.0], [14.0, 7169.0], [14.1, 7171.0], [14.2, 7207.0], [14.3, 7243.0], [14.4, 7256.0], [14.5, 7275.0], [14.6, 7305.0], [14.7, 7369.0], [14.8, 7419.0], [14.9, 7419.0], [15.0, 7420.0], [15.1, 7420.0], [15.2, 7422.0], [15.3, 7423.0], [15.4, 7423.0], [15.5, 7423.0], [15.6, 7423.0], [15.7, 7423.0], [15.8, 7423.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7425.0], [16.7, 7425.0], [16.8, 7425.0], [16.9, 7425.0], [17.0, 7426.0], [17.1, 7427.0], [17.2, 7428.0], [17.3, 7428.0], [17.4, 7429.0], [17.5, 7465.0], [17.6, 7479.0], [17.7, 7532.0], [17.8, 7568.0], [17.9, 7655.0], [18.0, 7678.0], [18.1, 7678.0], [18.2, 7679.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7679.0], [18.9, 7679.0], [19.0, 7679.0], [19.1, 7679.0], [19.2, 7679.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7681.0], [20.1, 7681.0], [20.2, 7681.0], [20.3, 7683.0], [20.4, 7683.0], [20.5, 7683.0], [20.6, 7683.0], [20.7, 7684.0], [20.8, 7684.0], [20.9, 7684.0], [21.0, 7684.0], [21.1, 7687.0], [21.2, 7688.0], [21.3, 7690.0], [21.4, 7728.0], [21.5, 7783.0], [21.6, 7806.0], [21.7, 7856.0], [21.8, 7871.0], [21.9, 7902.0], [22.0, 7924.0], [22.1, 7931.0], [22.2, 7931.0], [22.3, 7932.0], [22.4, 7933.0], [22.5, 7933.0], [22.6, 7934.0], [22.7, 7934.0], [22.8, 7935.0], [22.9, 7935.0], [23.0, 7935.0], [23.1, 7935.0], [23.2, 7935.0], [23.3, 7935.0], [23.4, 7935.0], [23.5, 7936.0], [23.6, 7936.0], [23.7, 7936.0], [23.8, 7936.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7936.0], [24.3, 7936.0], [24.4, 7936.0], [24.5, 7937.0], [24.6, 7939.0], [24.7, 7940.0], [24.8, 7941.0], [24.9, 7984.0], [25.0, 8062.0], [25.1, 8146.0], [25.2, 8175.0], [25.3, 8187.0], [25.4, 8188.0], [25.5, 8188.0], [25.6, 8191.0], [25.7, 8191.0], [25.8, 8191.0], [25.9, 8191.0], [26.0, 8191.0], [26.1, 8191.0], [26.2, 8192.0], [26.3, 8192.0], [26.4, 8192.0], [26.5, 8192.0], [26.6, 8192.0], [26.7, 8192.0], [26.8, 8192.0], [26.9, 8192.0], [27.0, 8193.0], [27.1, 8193.0], [27.2, 8193.0], [27.3, 8193.0], [27.4, 8269.0], [27.5, 8307.0], [27.6, 8337.0], [27.7, 8444.0], [27.8, 8446.0], [27.9, 8446.0], [28.0, 8446.0], [28.1, 8447.0], [28.2, 8447.0], [28.3, 8448.0], [28.4, 8451.0], [28.5, 8451.0], [28.6, 8452.0], [28.7, 8476.0], [28.8, 8572.0], [28.9, 8615.0], [29.0, 8643.0], [29.1, 8659.0], [29.2, 8684.0], [29.3, 8691.0], [29.4, 8699.0], [29.5, 8699.0], [29.6, 8700.0], [29.7, 8700.0], [29.8, 8700.0], [29.9, 8701.0], [30.0, 8701.0], [30.1, 8701.0], [30.2, 8702.0], [30.3, 8702.0], [30.4, 8703.0], [30.5, 8703.0], [30.6, 8703.0], [30.7, 8703.0], [30.8, 8703.0], [30.9, 8703.0], [31.0, 8703.0], [31.1, 8703.0], [31.2, 8703.0], [31.3, 8703.0], [31.4, 8703.0], [31.5, 8704.0], [31.6, 8704.0], [31.7, 8704.0], [31.8, 8704.0], [31.9, 8704.0], [32.0, 8704.0], [32.1, 8704.0], [32.2, 8704.0], [32.3, 8704.0], [32.4, 8704.0], [32.5, 8705.0], [32.6, 8705.0], [32.7, 8707.0], [32.8, 8707.0], [32.9, 8707.0], [33.0, 8707.0], [33.1, 8708.0], [33.2, 8708.0], [33.3, 8759.0], [33.4, 8777.0], [33.5, 8829.0], [33.6, 8841.0], [33.7, 8955.0], [33.8, 8956.0], [33.9, 8959.0], [34.0, 8959.0], [34.1, 8959.0], [34.2, 8959.0], [34.3, 8959.0], [34.4, 8959.0], [34.5, 8959.0], [34.6, 8960.0], [34.7, 8961.0], [34.8, 8961.0], [34.9, 8963.0], [35.0, 8983.0], [35.1, 9124.0], [35.2, 9211.0], [35.3, 9212.0], [35.4, 9214.0], [35.5, 9214.0], [35.6, 9215.0], [35.7, 9215.0], [35.8, 9215.0], [35.9, 9215.0], [36.0, 9215.0], [36.1, 9215.0], [36.2, 9216.0], [36.3, 9216.0], [36.4, 9216.0], [36.5, 9216.0], [36.6, 9216.0], [36.7, 9217.0], [36.8, 9217.0], [36.9, 9218.0], [37.0, 9219.0], [37.1, 9219.0], [37.2, 9220.0], [37.3, 9251.0], [37.4, 9468.0], [37.5, 9470.0], [37.6, 9471.0], [37.7, 9471.0], [37.8, 9472.0], [37.9, 9473.0], [38.0, 9473.0], [38.1, 9508.0], [38.2, 9534.0], [38.3, 9628.0], [38.4, 9694.0], [38.5, 9700.0], [38.6, 9723.0], [38.7, 9724.0], [38.8, 9724.0], [38.9, 9724.0], [39.0, 9726.0], [39.1, 9726.0], [39.2, 9727.0], [39.3, 9727.0], [39.4, 9727.0], [39.5, 9727.0], [39.6, 9727.0], [39.7, 9727.0], [39.8, 9727.0], [39.9, 9727.0], [40.0, 9727.0], [40.1, 9728.0], [40.2, 9728.0], [40.3, 9728.0], [40.4, 9728.0], [40.5, 9728.0], [40.6, 9729.0], [40.7, 9729.0], [40.8, 9731.0], [40.9, 9731.0], [41.0, 9732.0], [41.1, 9753.0], [41.2, 9757.0], [41.3, 9806.0], [41.4, 9810.0], [41.5, 9821.0], [41.6, 9835.0], [41.7, 9871.0], [41.8, 9904.0], [41.9, 9919.0], [42.0, 9935.0], [42.1, 9937.0], [42.2, 9980.0], [42.3, 9983.0], [42.4, 9983.0], [42.5, 9983.0], [42.6, 9983.0], [42.7, 9983.0], [42.8, 9983.0], [42.9, 9984.0], [43.0, 9984.0], [43.1, 9984.0], [43.2, 9984.0], [43.3, 9985.0], [43.4, 9985.0], [43.5, 9985.0], [43.6, 9987.0], [43.7, 9988.0], [43.8, 9988.0], [43.9, 9990.0], [44.0, 10116.0], [44.1, 10219.0], [44.2, 10235.0], [44.3, 10235.0], [44.4, 10236.0], [44.5, 10237.0], [44.6, 10239.0], [44.7, 10239.0], [44.8, 10239.0], [44.9, 10239.0], [45.0, 10239.0], [45.1, 10240.0], [45.2, 10240.0], [45.3, 10240.0], [45.4, 10240.0], [45.5, 10240.0], [45.6, 10243.0], [45.7, 10244.0], [45.8, 10269.0], [45.9, 10306.0], [46.0, 10358.0], [46.1, 10416.0], [46.2, 10472.0], [46.3, 10495.0], [46.4, 10495.0], [46.5, 10495.0], [46.6, 10495.0], [46.7, 10521.0], [46.8, 10552.0], [46.9, 10583.0], [47.0, 10589.0], [47.1, 10616.0], [47.2, 10634.0], [47.3, 10646.0], [47.4, 10668.0], [47.5, 10714.0], [47.6, 10751.0], [47.7, 10751.0], [47.8, 10751.0], [47.9, 10752.0], [48.0, 10752.0], [48.1, 10752.0], [48.2, 10752.0], [48.3, 10753.0], [48.4, 10782.0], [48.5, 10809.0], [48.6, 10831.0], [48.7, 10832.0], [48.8, 10859.0], [48.9, 10870.0], [49.0, 10913.0], [49.1, 10944.0], [49.2, 10979.0], [49.3, 10994.0], [49.4, 11004.0], [49.5, 11004.0], [49.6, 11007.0], [49.7, 11008.0], [49.8, 11008.0], [49.9, 11008.0], [50.0, 11031.0], [50.1, 11043.0], [50.2, 11060.0], [50.3, 11064.0], [50.4, 11072.0], [50.5, 11084.0], [50.6, 11122.0], [50.7, 11128.0], [50.8, 11136.0], [50.9, 11179.0], [51.0, 11186.0], [51.1, 11196.0], [51.2, 11221.0], [51.3, 11228.0], [51.4, 11248.0], [51.5, 11259.0], [51.6, 11263.0], [51.7, 11263.0], [51.8, 11264.0], [51.9, 11265.0], [52.0, 11272.0], [52.1, 11299.0], [52.2, 11305.0], [52.3, 11325.0], [52.4, 11389.0], [52.5, 11414.0], [52.6, 11467.0], [52.7, 11486.0], [52.8, 11502.0], [52.9, 11505.0], [53.0, 11515.0], [53.1, 11518.0], [53.2, 11519.0], [53.3, 11519.0], [53.4, 11519.0], [53.5, 11519.0], [53.6, 11520.0], [53.7, 11520.0], [53.8, 11520.0], [53.9, 11528.0], [54.0, 11574.0], [54.1, 11625.0], [54.2, 11643.0], [54.3, 11655.0], [54.4, 11656.0], [54.5, 11662.0], [54.6, 11702.0], [54.7, 11707.0], [54.8, 11724.0], [54.9, 11739.0], [55.0, 11770.0], [55.1, 11771.0], [55.2, 11772.0], [55.3, 11772.0], [55.4, 11774.0], [55.5, 11775.0], [55.6, 11775.0], [55.7, 11775.0], [55.8, 11775.0], [55.9, 11775.0], [56.0, 11775.0], [56.1, 11776.0], [56.2, 11776.0], [56.3, 11779.0], [56.4, 11787.0], [56.5, 11808.0], [56.6, 11878.0], [56.7, 11930.0], [56.8, 11954.0], [56.9, 11990.0], [57.0, 12031.0], [57.1, 12105.0], [57.2, 12129.0], [57.3, 12203.0], [57.4, 12255.0], [57.5, 12287.0], [57.6, 12287.0], [57.7, 12287.0], [57.8, 12287.0], [57.9, 12288.0], [58.0, 12288.0], [58.1, 12288.0], [58.2, 12288.0], [58.3, 12288.0], [58.4, 12289.0], [58.5, 12290.0], [58.6, 12290.0], [58.7, 12292.0], [58.8, 12346.0], [58.9, 12361.0], [59.0, 12429.0], [59.1, 12489.0], [59.2, 12536.0], [59.3, 12568.0], [59.4, 12643.0], [59.5, 12663.0], [59.6, 12679.0], [59.7, 12748.0], [59.8, 12796.0], [59.9, 12797.0], [60.0, 12798.0], [60.1, 12799.0], [60.2, 12799.0], [60.3, 12800.0], [60.4, 12800.0], [60.5, 12800.0], [60.6, 12800.0], [60.7, 12801.0], [60.8, 12803.0], [60.9, 12803.0], [61.0, 12803.0], [61.1, 12804.0], [61.2, 12804.0], [61.3, 12874.0], [61.4, 12972.0], [61.5, 12993.0], [61.6, 13051.0], [61.7, 13055.0], [61.8, 13056.0], [61.9, 13088.0], [62.0, 13150.0], [62.1, 13178.0], [62.2, 13188.0], [62.3, 13191.0], [62.4, 13202.0], [62.5, 13209.0], [62.6, 13211.0], [62.7, 13214.0], [62.8, 13219.0], [62.9, 13234.0], [63.0, 13237.0], [63.1, 13248.0], [63.2, 13252.0], [63.3, 13258.0], [63.4, 13266.0], [63.5, 13276.0], [63.6, 13277.0], [63.7, 13291.0], [63.8, 13298.0], [63.9, 13299.0], [64.0, 13302.0], [64.1, 13305.0], [64.2, 13305.0], [64.3, 13307.0], [64.4, 13307.0], [64.5, 13307.0], [64.6, 13307.0], [64.7, 13308.0], [64.8, 13308.0], [64.9, 13308.0], [65.0, 13308.0], [65.1, 13308.0], [65.2, 13308.0], [65.3, 13309.0], [65.4, 13309.0], [65.5, 13310.0], [65.6, 13310.0], [65.7, 13310.0], [65.8, 13310.0], [65.9, 13310.0], [66.0, 13310.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13313.0], [73.9, 13314.0], [74.0, 13314.0], [74.1, 13314.0], [74.2, 13314.0], [74.3, 13315.0], [74.4, 13315.0], [74.5, 13315.0], [74.6, 13315.0], [74.7, 13315.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13315.0], [75.1, 13315.0], [75.2, 13315.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13317.0], [75.8, 13317.0], [75.9, 13317.0], [76.0, 13317.0], [76.1, 13333.0], [76.2, 13351.0], [76.3, 13362.0], [76.4, 13381.0], [76.5, 13396.0], [76.6, 13403.0], [76.7, 13414.0], [76.8, 13432.0], [76.9, 13443.0], [77.0, 13464.0], [77.1, 13474.0], [77.2, 13491.0], [77.3, 13504.0], [77.4, 13525.0], [77.5, 13567.0], [77.6, 13567.0], [77.7, 13572.0], [77.8, 13712.0], [77.9, 13751.0], [78.0, 13809.0], [78.1, 13817.0], [78.2, 13818.0], [78.3, 13820.0], [78.4, 13820.0], [78.5, 13821.0], [78.6, 13822.0], [78.7, 13823.0], [78.8, 13823.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13823.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13825.0], [81.1, 13825.0], [81.2, 13825.0], [81.3, 13827.0], [81.4, 13828.0], [81.5, 13828.0], [81.6, 13828.0], [81.7, 13846.0], [81.8, 13874.0], [81.9, 13914.0], [82.0, 13942.0], [82.1, 13995.0], [82.2, 14047.0], [82.3, 14080.0], [82.4, 14115.0], [82.5, 14152.0], [82.6, 14239.0], [82.7, 14324.0], [82.8, 14331.0], [82.9, 14331.0], [83.0, 14331.0], [83.1, 14332.0], [83.2, 14332.0], [83.3, 14332.0], [83.4, 14333.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14337.0], [84.3, 14337.0], [84.4, 14339.0], [84.5, 14339.0], [84.6, 14339.0], [84.7, 14340.0], [84.8, 14348.0], [84.9, 14362.0], [85.0, 14482.0], [85.1, 14504.0], [85.2, 14582.0], [85.3, 14591.0], [85.4, 14591.0], [85.5, 14591.0], [85.6, 14591.0], [85.7, 14591.0], [85.8, 14592.0], [85.9, 14592.0], [86.0, 14592.0], [86.1, 14592.0], [86.2, 14711.0], [86.3, 14750.0], [86.4, 14847.0], [86.5, 14847.0], [86.6, 14848.0], [86.7, 14848.0], [86.8, 14848.0], [86.9, 14850.0], [87.0, 14867.0], [87.1, 14937.0], [87.2, 14964.0], [87.3, 15082.0], [87.4, 15103.0], [87.5, 15104.0], [87.6, 15115.0], [87.7, 15161.0], [87.8, 15356.0], [87.9, 15359.0], [88.0, 15359.0], [88.1, 15359.0], [88.2, 15360.0], [88.3, 15360.0], [88.4, 15364.0], [88.5, 15366.0], [88.6, 15444.0], [88.7, 15616.0], [88.8, 15616.0], [88.9, 15772.0], [89.0, 16208.0], [89.1, 16293.0], [89.2, 16349.0], [89.3, 16379.0], [89.4, 16380.0], [89.5, 16383.0], [89.6, 16383.0], [89.7, 16384.0], [89.8, 16384.0], [89.9, 16385.0], [90.0, 16855.0], [90.1, 17360.0], [90.2, 17403.0], [90.3, 17810.0], [90.4, 18035.0], [90.5, 18068.0], [90.6, 18432.0], [90.7, 18914.0], [90.8, 19512.0], [90.9, 20217.0], [91.0, 20985.0], [91.1, 21237.0], [91.2, 21629.0], [91.3, 21960.0], [91.4, 21980.0], [91.5, 23889.0], [91.6, 24006.0], [91.7, 24726.0], [91.8, 26244.0], [91.9, 26371.0], [92.0, 26380.0], [92.1, 26624.0], [92.2, 27274.0], [92.3, 29312.0], [92.4, 32239.0], [92.5, 36998.0], [92.6, 38480.0], [92.7, 45864.0], [92.8, 52483.0], [92.9, 53243.0], [93.0, 53282.0], [93.1, 53308.0], [93.2, 53412.0], [93.3, 53730.0], [93.4, 53876.0], [93.5, 54055.0], [93.6, 54198.0], [93.7, 57883.0], [93.8, 63380.0], [93.9, 64168.0], [94.0, 70489.0], [94.1, 73685.0], [94.2, 74855.0], [94.3, 76195.0], [94.4, 82687.0], [94.5, 92159.0], [94.6, 94206.0], [94.7, 94207.0], [94.8, 94208.0], [94.9, 94208.0], [95.0, 96253.0], [95.1, 97935.0], [95.2, 98815.0], [95.3, 104448.0], [95.4, 104448.0], [95.5, 105456.0], [95.6, 105579.0], [95.7, 105677.0], [95.8, 105738.0], [95.9, 106059.0], [96.0, 106238.0], [96.1, 106346.0], [96.2, 106487.0], [96.3, 106496.0], [96.4, 106534.0], [96.5, 106630.0], [96.6, 106723.0], [96.7, 107007.0], [96.8, 107007.0], [96.9, 107113.0], [97.0, 107252.0], [97.1, 107346.0], [97.2, 110335.0], [97.3, 111131.0], [97.4, 114582.0], [97.5, 114685.0], [97.6, 114685.0], [97.7, 115316.0], [97.8, 115682.0], [97.9, 116203.0], [98.0, 116517.0], [98.1, 121600.0], [98.2, 125951.0], [98.3, 130558.0], [98.4, 136955.0], [98.5, 137216.0], [98.6, 137471.0], [98.7, 137720.0], [98.8, 137728.0], [98.9, 139008.0], [99.0, 139008.0], [99.1, 140799.0], [99.2, 146436.0], [99.3, 146440.0], [99.4, 160819.0], [99.5, 163840.0], [99.6, 186366.0], [99.7, 188673.0], [99.8, 189697.0], [99.9, 211457.0], [100.0, 214267.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 488.0, "series": [{"data": [[0.0, 269.0], [146400.0, 1.0], [189600.0, 4.0], [131300.0, 1.0], [137700.0, 10.0], [148900.0, 2.0], [163300.0, 2.0], [73900.0, 1.0], [90700.0, 1.0], [106700.0, 2.0], [107500.0, 2.0], [113900.0, 2.0], [116300.0, 1.0], [125100.0, 1.0], [125900.0, 1.0], [137900.0, 1.0], [139500.0, 2.0], [150700.0, 1.0], [52100.0, 1.0], [54500.0, 2.0], [77000.0, 1.0], [76200.0, 4.0], [82600.0, 2.0], [114600.0, 10.0], [117000.0, 2.0], [117800.0, 1.0], [137200.0, 1.0], [1000.0, 1.0], [1100.0, 4.0], [1200.0, 19.0], [1300.0, 47.0], [1400.0, 25.0], [1500.0, 14.0], [1600.0, 13.0], [1700.0, 10.0], [1800.0, 9.0], [1900.0, 9.0], [2000.0, 13.0], [2100.0, 11.0], [2200.0, 11.0], [2300.0, 5.0], [2400.0, 7.0], [2500.0, 11.0], [2600.0, 20.0], [2800.0, 21.0], [2700.0, 23.0], [2900.0, 17.0], [3000.0, 14.0], [3100.0, 13.0], [3300.0, 11.0], [3200.0, 10.0], [3400.0, 7.0], [3500.0, 14.0], [3600.0, 7.0], [3700.0, 9.0], [3800.0, 15.0], [3900.0, 27.0], [4000.0, 23.0], [4100.0, 28.0], [4200.0, 30.0], [4300.0, 26.0], [68900.0, 1.0], [4600.0, 12.0], [4400.0, 15.0], [4500.0, 12.0], [4700.0, 11.0], [4800.0, 15.0], [5100.0, 10.0], [4900.0, 8.0], [5000.0, 8.0], [5200.0, 14.0], [5300.0, 11.0], [5400.0, 8.0], [5600.0, 9.0], [5500.0, 2.0], [5700.0, 4.0], [5800.0, 3.0], [5900.0, 2.0], [6000.0, 2.0], [6100.0, 2.0], [6300.0, 6.0], [6200.0, 2.0], [6400.0, 5.0], [6500.0, 10.0], [6600.0, 9.0], [105700.0, 1.0], [6700.0, 15.0], [6800.0, 14.0], [6900.0, 19.0], [106500.0, 2.0], [7000.0, 20.0], [7100.0, 111.0], [7200.0, 18.0], [7300.0, 16.0], [7400.0, 112.0], [115300.0, 1.0], [116900.0, 1.0], [7500.0, 23.0], [7600.0, 87.0], [7800.0, 27.0], [7700.0, 17.0], [7900.0, 105.0], [8100.0, 122.0], [8000.0, 33.0], [130500.0, 3.0], [8500.0, 19.0], [8200.0, 48.0], [8600.0, 25.0], [8400.0, 52.0], [8300.0, 33.0], [8700.0, 116.0], [137400.0, 4.0], [8800.0, 16.0], [8900.0, 51.0], [9000.0, 26.0], [9100.0, 15.0], [9200.0, 134.0], [145400.0, 3.0], [9400.0, 33.0], [9300.0, 14.0], [9700.0, 86.0], [9600.0, 10.0], [9500.0, 6.0], [9800.0, 7.0], [10200.0, 63.0], [10100.0, 6.0], [9900.0, 46.0], [10000.0, 3.0], [156600.0, 2.0], [10500.0, 8.0], [10300.0, 7.0], [10700.0, 27.0], [10400.0, 15.0], [10600.0, 6.0], [11100.0, 64.0], [10800.0, 14.0], [10900.0, 25.0], [11000.0, 62.0], [11200.0, 92.0], [11300.0, 61.0], [11500.0, 114.0], [11600.0, 101.0], [11400.0, 47.0], [11700.0, 164.0], [12000.0, 294.0], [11800.0, 184.0], [11900.0, 274.0], [12100.0, 327.0], [12200.0, 393.0], [188600.0, 4.0], [12500.0, 289.0], [12300.0, 327.0], [12400.0, 248.0], [12600.0, 293.0], [12700.0, 246.0], [12800.0, 252.0], [13100.0, 144.0], [12900.0, 197.0], [13200.0, 128.0], [13000.0, 158.0], [13300.0, 488.0], [13600.0, 54.0], [13400.0, 85.0], [13500.0, 81.0], [13800.0, 161.0], [13700.0, 44.0], [14000.0, 45.0], [14100.0, 50.0], [13900.0, 45.0], [14200.0, 46.0], [14300.0, 98.0], [14800.0, 44.0], [14400.0, 33.0], [14600.0, 22.0], [14500.0, 54.0], [14700.0, 24.0], [15300.0, 43.0], [15000.0, 14.0], [14900.0, 12.0], [15100.0, 23.0], [15200.0, 14.0], [15400.0, 17.0], [15500.0, 14.0], [15700.0, 2.0], [15800.0, 7.0], [15600.0, 17.0], [16300.0, 26.0], [15900.0, 2.0], [16100.0, 2.0], [16000.0, 1.0], [16200.0, 2.0], [16800.0, 5.0], [17000.0, 2.0], [17400.0, 5.0], [16600.0, 2.0], [17200.0, 1.0], [16400.0, 1.0], [18400.0, 1.0], [17600.0, 3.0], [17800.0, 1.0], [19200.0, 1.0], [18800.0, 2.0], [18600.0, 9.0], [19400.0, 3.0], [19000.0, 1.0], [20200.0, 2.0], [19600.0, 2.0], [21000.0, 2.0], [21400.0, 1.0], [21200.0, 1.0], [21600.0, 2.0], [22200.0, 1.0], [21800.0, 3.0], [23200.0, 3.0], [23400.0, 1.0], [24400.0, 1.0], [25400.0, 3.0], [26400.0, 2.0], [26200.0, 1.0], [26600.0, 1.0], [25800.0, 3.0], [26000.0, 2.0], [27600.0, 1.0], [27400.0, 1.0], [143100.0, 1.0], [186300.0, 1.0], [52400.0, 1.0], [53200.0, 4.0], [54400.0, 1.0], [55200.0, 1.0], [55600.0, 1.0], [64000.0, 1.0], [69600.0, 1.0], [95200.0, 4.0], [106400.0, 7.0], [117600.0, 1.0], [123200.0, 1.0], [128000.0, 1.0], [145600.0, 1.0], [211200.0, 6.0], [136900.0, 4.0], [71900.0, 1.0], [82300.0, 1.0], [102300.0, 1.0], [105500.0, 1.0], [107100.0, 2.0], [110300.0, 1.0], [109500.0, 1.0], [111100.0, 1.0], [211400.0, 2.0], [34700.0, 1.0], [54700.0, 2.0], [55500.0, 2.0], [59100.0, 4.0], [60300.0, 1.0], [61500.0, 1.0], [73400.0, 1.0], [94200.0, 7.0], [107000.0, 6.0], [111800.0, 1.0], [117400.0, 2.0], [217300.0, 1.0], [70100.0, 1.0], [106100.0, 1.0], [102900.0, 4.0], [110100.0, 1.0], [107700.0, 2.0], [114900.0, 4.0], [117300.0, 3.0], [163800.0, 2.0], [16500.0, 1.0], [17100.0, 4.0], [17300.0, 3.0], [16900.0, 1.0], [18100.0, 2.0], [17900.0, 3.0], [18300.0, 1.0], [17700.0, 2.0], [18700.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [19900.0, 2.0], [21500.0, 2.0], [21100.0, 1.0], [21700.0, 3.0], [22500.0, 1.0], [22300.0, 2.0], [23300.0, 1.0], [22700.0, 1.0], [22900.0, 1.0], [24500.0, 2.0], [25300.0, 4.0], [25500.0, 1.0], [24700.0, 1.0], [26300.0, 3.0], [25900.0, 3.0], [26100.0, 4.0], [25700.0, 1.0], [26700.0, 1.0], [26900.0, 1.0], [27300.0, 2.0], [28100.0, 1.0], [29700.0, 1.0], [31700.0, 1.0], [33000.0, 1.0], [140700.0, 1.0], [54600.0, 4.0], [55000.0, 1.0], [59000.0, 1.0], [73200.0, 1.0], [104400.0, 1.0], [106800.0, 1.0], [116400.0, 1.0], [122800.0, 1.0], [126000.0, 1.0], [129200.0, 4.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 139.0], [189600.0, 1.0], [137700.0, 6.0], [148900.0, 2.0], [73900.0, 1.0], [114700.0, 2.0], [139500.0, 2.0], [150700.0, 1.0], [44500.0, 1.0], [54100.0, 2.0], [53300.0, 8.0], [57300.0, 1.0], [60100.0, 1.0], [114600.0, 5.0], [121800.0, 2.0], [500.0, 1.0], [137200.0, 3.0], [600.0, 7.0], [700.0, 1.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 2.0], [1500.0, 1.0], [1800.0, 1.0], [1900.0, 5.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 2.0], [2200.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 2.0], [3600.0, 2.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 1.0], [4100.0, 1.0], [4400.0, 2.0], [4600.0, 1.0], [73700.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5500.0, 2.0], [5700.0, 2.0], [5800.0, 1.0], [92100.0, 1.0], [6000.0, 1.0], [6100.0, 2.0], [6300.0, 1.0], [6600.0, 3.0], [6400.0, 1.0], [6500.0, 1.0], [6800.0, 2.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 42.0], [111300.0, 1.0], [7300.0, 1.0], [7400.0, 56.0], [7200.0, 1.0], [7500.0, 3.0], [7600.0, 46.0], [7800.0, 1.0], [7900.0, 43.0], [8100.0, 61.0], [130500.0, 4.0], [8300.0, 3.0], [8200.0, 2.0], [8400.0, 21.0], [8500.0, 1.0], [8600.0, 8.0], [8700.0, 65.0], [137400.0, 1.0], [139000.0, 1.0], [9000.0, 2.0], [9200.0, 72.0], [8800.0, 2.0], [8900.0, 34.0], [9100.0, 1.0], [145400.0, 2.0], [9600.0, 1.0], [9700.0, 47.0], [9400.0, 6.0], [9900.0, 33.0], [9800.0, 1.0], [10000.0, 1.0], [10200.0, 51.0], [10100.0, 1.0], [156600.0, 3.0], [10400.0, 12.0], [10600.0, 3.0], [10500.0, 1.0], [10300.0, 3.0], [10700.0, 15.0], [11100.0, 8.0], [10800.0, 3.0], [11200.0, 18.0], [10900.0, 7.0], [11000.0, 27.0], [11500.0, 26.0], [11600.0, 22.0], [11700.0, 40.0], [11400.0, 16.0], [11300.0, 11.0], [12100.0, 8.0], [11900.0, 9.0], [11800.0, 5.0], [12200.0, 22.0], [12000.0, 8.0], [12300.0, 7.0], [12400.0, 3.0], [12700.0, 20.0], [12500.0, 11.0], [12600.0, 4.0], [13100.0, 6.0], [13300.0, 241.0], [13000.0, 15.0], [12800.0, 16.0], [12900.0, 6.0], [13200.0, 2.0], [13400.0, 5.0], [13800.0, 58.0], [13500.0, 13.0], [13700.0, 5.0], [13600.0, 1.0], [214200.0, 1.0], [14200.0, 6.0], [14000.0, 9.0], [14100.0, 4.0], [13900.0, 3.0], [14300.0, 49.0], [14700.0, 3.0], [14500.0, 19.0], [14800.0, 16.0], [14600.0, 3.0], [14400.0, 2.0], [14900.0, 2.0], [15300.0, 18.0], [15100.0, 9.0], [15600.0, 3.0], [15800.0, 4.0], [15500.0, 1.0], [15400.0, 1.0], [16200.0, 1.0], [16300.0, 19.0], [16000.0, 2.0], [15900.0, 1.0], [16100.0, 1.0], [16400.0, 1.0], [16800.0, 6.0], [16600.0, 4.0], [17400.0, 2.0], [17200.0, 1.0], [17600.0, 3.0], [18400.0, 2.0], [18600.0, 1.0], [24000.0, 1.0], [24400.0, 1.0], [24800.0, 1.0], [26800.0, 1.0], [27600.0, 1.0], [28400.0, 2.0], [53200.0, 5.0], [75200.0, 1.0], [81600.0, 1.0], [106400.0, 6.0], [116000.0, 1.0], [128000.0, 3.0], [211200.0, 5.0], [136900.0, 2.0], [72700.0, 1.0], [110300.0, 2.0], [109500.0, 1.0], [115900.0, 1.0], [121500.0, 2.0], [37100.0, 1.0], [51100.0, 1.0], [55100.0, 1.0], [94200.0, 4.0], [105400.0, 1.0], [107000.0, 6.0], [111800.0, 2.0], [123800.0, 1.0], [140500.0, 1.0], [102900.0, 3.0], [107700.0, 1.0], [114100.0, 1.0], [114900.0, 4.0], [116500.0, 1.0], [163800.0, 1.0], [17300.0, 2.0], [17100.0, 3.0], [16500.0, 1.0], [18100.0, 2.0], [17900.0, 1.0], [23500.0, 3.0], [23900.0, 4.0], [26300.0, 6.0], [27100.0, 1.0], [140700.0, 3.0], [41400.0, 1.0], [54200.0, 1.0], [53400.0, 1.0], [57800.0, 3.0], [98800.0, 4.0], [104400.0, 3.0], [115600.0, 1.0], [116400.0, 3.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 130.0], [146400.0, 3.0], [160800.0, 1.0], [189600.0, 2.0], [137700.0, 4.0], [97900.0, 1.0], [105900.0, 1.0], [106700.0, 1.0], [125900.0, 1.0], [100.0, 2.0], [36900.0, 1.0], [37300.0, 1.0], [42500.0, 1.0], [200.0, 1.0], [209900.0, 1.0], [53700.0, 1.0], [54100.0, 2.0], [53300.0, 1.0], [63300.0, 1.0], [64100.0, 2.0], [74600.0, 1.0], [82600.0, 2.0], [86600.0, 1.0], [96200.0, 1.0], [400.0, 1.0], [106600.0, 1.0], [111400.0, 1.0], [114600.0, 4.0], [116200.0, 2.0], [137200.0, 1.0], [600.0, 2.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 1.0], [1500.0, 3.0], [1800.0, 1.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 3.0], [2700.0, 4.0], [2900.0, 2.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 2.0], [3400.0, 2.0], [3700.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [4800.0, 1.0], [76100.0, 1.0], [5100.0, 2.0], [5300.0, 2.0], [5400.0, 3.0], [5600.0, 1.0], [5500.0, 1.0], [5700.0, 3.0], [92100.0, 1.0], [6100.0, 2.0], [6000.0, 1.0], [5900.0, 2.0], [6300.0, 3.0], [6400.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [105700.0, 2.0], [6700.0, 5.0], [6900.0, 6.0], [6800.0, 2.0], [107300.0, 1.0], [106500.0, 2.0], [108100.0, 1.0], [7000.0, 4.0], [7100.0, 54.0], [114500.0, 1.0], [7200.0, 8.0], [7300.0, 3.0], [7400.0, 56.0], [115300.0, 1.0], [7500.0, 4.0], [7600.0, 68.0], [122500.0, 1.0], [7700.0, 4.0], [7900.0, 59.0], [7800.0, 7.0], [8100.0, 45.0], [8000.0, 3.0], [130500.0, 1.0], [8300.0, 3.0], [8400.0, 22.0], [8600.0, 13.0], [8700.0, 77.0], [8200.0, 1.0], [8500.0, 2.0], [137400.0, 2.0], [139000.0, 4.0], [8800.0, 3.0], [9200.0, 43.0], [8900.0, 27.0], [9100.0, 2.0], [145400.0, 1.0], [9500.0, 3.0], [9600.0, 5.0], [9700.0, 54.0], [9300.0, 1.0], [9400.0, 13.0], [9800.0, 10.0], [9900.0, 42.0], [10100.0, 2.0], [10200.0, 35.0], [10000.0, 1.0], [156600.0, 1.0], [10600.0, 8.0], [10500.0, 8.0], [10400.0, 11.0], [10700.0, 18.0], [10300.0, 4.0], [11200.0, 19.0], [11000.0, 24.0], [10800.0, 11.0], [11100.0, 11.0], [10900.0, 7.0], [11700.0, 37.0], [11300.0, 6.0], [11600.0, 11.0], [11400.0, 7.0], [11500.0, 24.0], [11900.0, 4.0], [12000.0, 3.0], [11800.0, 4.0], [12200.0, 28.0], [12100.0, 4.0], [188600.0, 2.0], [12400.0, 3.0], [12600.0, 7.0], [12700.0, 12.0], [12500.0, 4.0], [12300.0, 5.0], [12900.0, 3.0], [13200.0, 31.0], [13300.0, 246.0], [13000.0, 8.0], [13100.0, 7.0], [12800.0, 21.0], [13700.0, 4.0], [13500.0, 9.0], [13600.0, 1.0], [13400.0, 13.0], [13800.0, 75.0], [214200.0, 1.0], [13900.0, 7.0], [14300.0, 43.0], [14000.0, 4.0], [14100.0, 4.0], [14200.0, 2.0], [14400.0, 3.0], [14700.0, 2.0], [14500.0, 21.0], [14800.0, 15.0], [14600.0, 1.0], [15000.0, 3.0], [14900.0, 3.0], [15300.0, 15.0], [15100.0, 7.0], [15700.0, 2.0], [15600.0, 4.0], [15400.0, 2.0], [15800.0, 1.0], [16200.0, 3.0], [16300.0, 16.0], [16800.0, 2.0], [17400.0, 3.0], [17800.0, 1.0], [18000.0, 3.0], [18400.0, 1.0], [18600.0, 1.0], [20200.0, 1.0], [19800.0, 1.0], [21200.0, 1.0], [20600.0, 1.0], [21600.0, 1.0], [21800.0, 1.0], [24000.0, 1.0], [23800.0, 2.0], [24200.0, 1.0], [26200.0, 2.0], [26000.0, 1.0], [26400.0, 1.0], [26600.0, 1.0], [27200.0, 1.0], [27600.0, 1.0], [30000.0, 1.0], [32200.0, 1.0], [38400.0, 1.0], [186300.0, 1.0], [52400.0, 1.0], [53200.0, 4.0], [54000.0, 2.0], [61600.0, 1.0], [70400.0, 1.0], [73600.0, 1.0], [106400.0, 5.0], [105600.0, 1.0], [107200.0, 3.0], [121600.0, 1.0], [136900.0, 2.0], [71900.0, 1.0], [75100.0, 1.0], [106300.0, 1.0], [105500.0, 2.0], [110300.0, 2.0], [107100.0, 1.0], [111100.0, 1.0], [115100.0, 1.0], [115900.0, 1.0], [211400.0, 1.0], [53500.0, 1.0], [94200.0, 8.0], [106200.0, 2.0], [105400.0, 2.0], [107000.0, 4.0], [140500.0, 1.0], [70100.0, 1.0], [97300.0, 1.0], [102100.0, 1.0], [106100.0, 1.0], [104500.0, 1.0], [116500.0, 2.0], [163800.0, 2.0], [186200.0, 1.0], [17300.0, 1.0], [18100.0, 1.0], [17900.0, 1.0], [19100.0, 1.0], [18900.0, 1.0], [19500.0, 1.0], [21500.0, 1.0], [20900.0, 1.0], [21100.0, 1.0], [21900.0, 2.0], [23100.0, 1.0], [24700.0, 1.0], [26300.0, 3.0], [26700.0, 1.0], [29300.0, 1.0], [32500.0, 1.0], [140700.0, 1.0], [45800.0, 1.0], [50200.0, 1.0], [53000.0, 1.0], [53800.0, 2.0], [53400.0, 1.0], [57800.0, 2.0], [74800.0, 1.0], [98800.0, 2.0], [106000.0, 1.0], [104400.0, 3.0], [106800.0, 1.0], [115600.0, 2.0], [130800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 217300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6999.0, "series": [{"data": [[1.0, 123.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5637.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 6999.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.09375, "minX": 1.5394524E12, "maxY": 498.9225433526008, "series": [{"data": [[1.53945246E12, 39.94846796657379], [1.53945276E12, 339.6468824940048], [1.53945306E12, 169.75796178343967], [1.5394524E12, 6.09375], [1.5394527E12, 282.8538062283742], [1.539453E12, 490.88314059647007], [1.53945264E12, 218.97320169252436], [1.53945294E12, 498.9225433526008], [1.53945258E12, 158.04734576757528], [1.53945288E12, 460.0041079812203], [1.53945252E12, 99.83911234396669], [1.53945282E12, 399.38319427890303], [1.53945312E12, 8.272727272727272]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945312E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 211200.0, "series": [{"data": [[5.0, 126166.0], [6.0, 1142.3333333333333], [7.0, 1284.0], [8.0, 1392.6666666666667], [9.0, 1345.1666666666667], [10.0, 1337.75], [11.0, 53111.666666666664], [12.0, 1426.0], [13.0, 1333.2999999999997], [14.0, 1331.142857142857], [15.0, 1433.4], [16.0, 17005.333333333336], [17.0, 1490.2], [18.0, 1374.8], [19.0, 1499.083333333333], [20.0, 1510.5384615384614], [21.0, 1657.7500000000002], [22.0, 11397.142857142859], [23.0, 1703.3999999999999], [24.0, 1999.4545454545453], [25.0, 21687.363636363636], [26.0, 2171.777777777778], [27.0, 2228.4999999999995], [28.0, 2450.1666666666665], [29.0, 2685.6], [30.0, 2710.0], [31.0, 2637.7777777777774], [32.0, 21655.727272727272], [33.0, 26034.88888888889], [34.0, 2777.6363636363635], [35.0, 34916.07692307692], [36.0, 21714.181818181816], [37.0, 2905.5], [38.0, 17687.285714285714], [39.0, 37793.0], [40.0, 3057.4000000000005], [41.0, 3173.5], [42.0, 3327.4], [43.0, 11792.076923076924], [44.0, 3580.8999999999996], [45.0, 3214.4444444444443], [46.0, 3864.4545454545455], [47.0, 4012.25], [48.0, 4001.0000000000005], [49.0, 19407.166666666664], [50.0, 3978.9], [51.0, 50380.49999999999], [52.0, 4136.615384615385], [53.0, 4175.75], [54.0, 4183.7], [55.0, 3894.4615384615386], [56.0, 4136.846153846153], [57.0, 4267.400000000001], [58.0, 4287.916666666666], [59.0, 4284.999999999999], [60.0, 4244.333333333333], [61.0, 4319.333333333334], [62.0, 4540.181818181818], [63.0, 4655.0], [64.0, 4694.75], [65.0, 4875.142857142857], [66.0, 41031.05882352941], [67.0, 5059.5], [68.0, 5045.615384615385], [69.0, 5235.636363636364], [70.0, 5246.727272727273], [71.0, 5289.777777777777], [72.0, 5596.454545454545], [73.0, 5647.142857142857], [74.0, 6030.250000000001], [75.0, 6343.599999999999], [76.0, 5841.714285714285], [77.0, 7020.428571428572], [78.0, 7436.444444444444], [79.0, 7730.6], [80.0, 7886.416666666666], [81.0, 7945.666666666667], [82.0, 7728.555555555556], [83.0, 7602.0], [84.0, 7370.636363636363], [85.0, 63728.73684210525], [86.0, 6808.833333333333], [87.0, 6757.3], [88.0, 31159.769230769234], [89.0, 6629.0], [90.0, 17508.545454545456], [91.0, 12414.7], [92.0, 11563.416666666666], [93.0, 7152.25], [94.0, 13113.444444444443], [95.0, 12625.0], [96.0, 10795.0], [97.0, 13510.444444444445], [98.0, 12360.818181818182], [99.0, 7928.818181818182], [100.0, 8076.888888888889], [101.0, 8091.0], [102.0, 8193.4], [103.0, 8235.555555555555], [104.0, 11659.785714285712], [105.0, 8316.818181818184], [106.0, 8350.42857142857], [107.0, 11616.92857142857], [108.0, 12593.727272727272], [109.0, 11878.30769230769], [110.0, 12399.363636363636], [111.0, 11459.0], [112.0, 12085.25], [113.0, 12458.363636363636], [114.0, 11675.571428571428], [115.0, 13488.111111111111], [116.0, 12192.5], [117.0, 12020.615384615383], [118.0, 13414.300000000003], [119.0, 12377.076923076922], [120.0, 18031.416666666668], [121.0, 17311.384615384617], [122.0, 8950.999999999998], [123.0, 9033.615384615385], [124.0, 9099.909090909092], [125.0, 9245.3], [126.0, 9306.9], [127.0, 9480.5], [128.0, 8570.636363636364], [129.0, 9682.0], [130.0, 9749.083333333334], [131.0, 9994.444444444443], [132.0, 10313.250000000002], [133.0, 10532.1], [134.0, 10743.818181818182], [135.0, 10684.555555555555], [136.0, 10935.454545454546], [137.0, 11134.6], [138.0, 11138.444444444445], [139.0, 11241.636363636364], [140.0, 11503.272727272728], [141.0, 21987.899999999998], [142.0, 19432.153846153848], [143.0, 20076.333333333336], [144.0, 21720.9], [145.0, 19414.923076923078], [146.0, 20129.416666666664], [147.0, 11442.846153846152], [148.0, 18953.833333333336], [149.0, 20008.916666666664], [150.0, 12510.727272727272], [151.0, 11152.333333333334], [152.0, 12285.538461538463], [153.0, 11131.4], [154.0, 11197.272727272728], [155.0, 11231.214285714286], [156.0, 12533.636363636364], [157.0, 11326.181818181818], [158.0, 12504.615384615387], [159.0, 11340.375], [160.0, 11497.333333333332], [161.0, 11568.4], [162.0, 11560.999999999998], [163.0, 11558.5], [164.0, 11650.749999999998], [165.0, 11854.333333333334], [166.0, 13208.400000000001], [167.0, 13205.538461538463], [168.0, 12682.0], [169.0, 13963.909090909092], [170.0, 13939.0], [171.0, 14153.363636363636], [172.0, 13324.0], [173.0, 13454.5], [174.0, 13623.900000000001], [175.0, 14801.099999999999], [176.0, 14757.46153846154], [177.0, 13987.999999999998], [178.0, 14042.81818181818], [179.0, 15514.333333333332], [180.0, 15143.181818181818], [181.0, 13851.888888888889], [182.0, 13499.09090909091], [183.0, 13363.181818181816], [184.0, 14922.75], [185.0, 13619.76923076923], [186.0, 14410.0], [187.0, 41910.857142857145], [188.0, 14459.461538461539], [189.0, 14691.090909090908], [190.0, 13521.800000000001], [191.0, 14403.076923076924], [192.0, 13225.181818181818], [193.0, 14298.916666666666], [194.0, 13124.727272727272], [195.0, 14157.166666666668], [196.0, 12098.307692307691], [197.0, 13804.750000000002], [198.0, 13694.416666666666], [199.0, 13447.666666666666], [200.0, 12193.076923076922], [201.0, 12124.90909090909], [202.0, 12177.454545454546], [203.0, 12080.583333333332], [204.0, 12537.90909090909], [205.0, 12917.166666666666], [206.0, 12454.500000000002], [207.0, 12382.0], [208.0, 12402.083333333332], [209.0, 12795.75], [210.0, 13035.363636363634], [211.0, 12294.538461538461], [212.0, 13025.90909090909], [213.0, 13049.461538461539], [214.0, 16363.214285714284], [215.0, 12736.5], [216.0, 13067.25], [217.0, 13090.3], [218.0, 13099.90909090909], [219.0, 13170.7], [220.0, 13062.125], [221.0, 13567.166666666666], [222.0, 11997.555555555555], [223.0, 13568.571428571428], [224.0, 13330.90909090909], [225.0, 15092.42857142857], [226.0, 14732.222222222223], [227.0, 14807.400000000001], [228.0, 15577.2], [229.0, 15262.272727272728], [230.0, 22291.90909090909], [231.0, 15702.909090909092], [232.0, 15958.181818181818], [233.0, 15111.272727272726], [234.0, 15103.272727272728], [235.0, 14092.923076923076], [236.0, 15605.727272727274], [237.0, 14136.818181818182], [238.0, 13504.583333333332], [239.0, 13563.866666666669], [240.0, 12782.5], [241.0, 13679.599999999999], [242.0, 14185.923076923078], [243.0, 12789.0], [244.0, 13312.333333333332], [245.0, 13510.846153846152], [246.0, 12944.0], [247.0, 17437.533333333333], [248.0, 11925.133333333333], [249.0, 17440.0], [250.0, 12388.222222222223], [251.0, 12757.3], [252.0, 12408.666666666668], [253.0, 11662.5], [254.0, 13231.692307692309], [255.0, 12635.666666666666], [257.0, 12040.571428571428], [256.0, 17034.999999999996], [258.0, 22610.555555555555], [259.0, 11913.615384615385], [260.0, 12320.09090909091], [261.0, 12534.5], [262.0, 12494.142857142857], [263.0, 12640.999999999998], [264.0, 16669.071428571428], [270.0, 12369.916666666666], [271.0, 12976.357142857145], [268.0, 12024.785714285714], [269.0, 12932.333333333334], [265.0, 12053.07692307692], [266.0, 11932.461538461537], [267.0, 12149.42857142857], [273.0, 12224.307692307691], [272.0, 22804.250000000004], [274.0, 26661.058823529413], [275.0, 12308.923076923078], [276.0, 15441.333333333332], [277.0, 12728.333333333332], [278.0, 12074.444444444445], [279.0, 12126.5], [280.0, 23497.631578947367], [286.0, 11766.461538461539], [287.0, 15526.545454545454], [284.0, 18625.199999999997], [285.0, 12898.230769230768], [281.0, 14122.6], [282.0, 13307.153846153846], [283.0, 11688.176470588236], [289.0, 12566.133333333333], [288.0, 12905.538461538461], [290.0, 12878.3125], [291.0, 12374.92857142857], [292.0, 13013.0], [293.0, 12064.840000000002], [294.0, 12432.727272727272], [295.0, 10241.823529411764], [296.0, 11575.333333333334], [302.0, 11165.125000000002], [303.0, 15308.624999999998], [300.0, 12279.722222222224], [301.0, 17934.46153846154], [297.0, 11946.818181818182], [298.0, 12198.538461538461], [299.0, 16656.684210526317], [305.0, 10962.652173913044], [304.0, 11831.736842105262], [306.0, 10744.857142857143], [307.0, 18538.529411764706], [308.0, 11115.400000000001], [309.0, 18403.999999999996], [310.0, 12565.857142857141], [311.0, 11632.888888888889], [312.0, 10910.941176470587], [318.0, 11795.35294117647], [319.0, 12812.800000000001], [316.0, 11131.11111111111], [317.0, 11197.846153846154], [313.0, 13026.75], [314.0, 11441.35294117647], [315.0, 18336.833333333332], [321.0, 12576.4], [320.0, 13308.190476190479], [322.0, 12903.300000000003], [323.0, 16636.473684210527], [324.0, 12552.666666666666], [325.0, 29052.681818181816], [326.0, 13002.733333333335], [327.0, 15888.6], [328.0, 12801.736842105262], [334.0, 11543.058823529413], [335.0, 9694.74193548387], [332.0, 12081.176470588238], [333.0, 11559.679999999998], [329.0, 15772.695652173914], [330.0, 11405.09523809524], [331.0, 10525.947368421053], [337.0, 12487.800000000001], [336.0, 11258.588235294117], [338.0, 11042.434782608696], [339.0, 12044.666666666668], [340.0, 18165.812500000004], [341.0, 10520.38888888889], [342.0, 12291.5], [343.0, 11695.217391304346], [344.0, 10593.645161290322], [350.0, 11732.947368421052], [351.0, 11627.125], [348.0, 11580.23076923077], [349.0, 12786.153846153846], [345.0, 12321.266666666666], [346.0, 12449.526315789477], [347.0, 12167.2], [353.0, 9957.249999999998], [352.0, 11819.941176470587], [354.0, 9708.607142857141], [355.0, 11572.70588235294], [356.0, 11669.23076923077], [357.0, 11128.75], [358.0, 11856.0], [359.0, 12076.999999999998], [360.0, 11132.818181818182], [366.0, 11680.733333333334], [367.0, 11980.888888888889], [364.0, 12383.769230769232], [365.0, 12586.428571428572], [361.0, 11204.774193548386], [362.0, 12334.307692307693], [363.0, 10870.64705882353], [369.0, 11649.25], [368.0, 10938.67741935484], [370.0, 12936.687499999998], [371.0, 12442.615384615387], [372.0, 12242.529411764704], [373.0, 11750.777777777777], [374.0, 12814.3], [375.0, 13491.09090909091], [376.0, 12837.176470588236], [382.0, 14137.833333333332], [383.0, 13017.0], [380.0, 12708.000000000002], [381.0, 13479.833333333332], [377.0, 11608.391304347826], [378.0, 10595.692307692307], [379.0, 12053.78947368421], [385.0, 13087.882352941175], [384.0, 13359.5], [386.0, 9999.611111111111], [387.0, 12192.666666666668], [388.0, 12563.0], [389.0, 11854.619047619048], [390.0, 11570.199999999999], [391.0, 11594.551724137933], [392.0, 13234.285714285716], [398.0, 10875.588235294119], [399.0, 11704.333333333334], [396.0, 10696.75], [397.0, 11126.0], [393.0, 13114.562500000002], [394.0, 12164.40909090909], [395.0, 12549.076923076922], [401.0, 10717.483870967742], [400.0, 10653.478260869566], [402.0, 11613.933333333332], [403.0, 9402.70588235294], [404.0, 10983.857142857143], [405.0, 10480.150000000001], [406.0, 12809.63157894737], [407.0, 13070.470588235294], [408.0, 10493.709677419354], [414.0, 11501.466666666665], [415.0, 11184.176470588238], [412.0, 11286.791666666664], [413.0, 10908.05882352941], [409.0, 8390.857142857145], [410.0, 10510.952380952383], [411.0, 11769.599999999999], [417.0, 12613.800000000001], [416.0, 12069.8125], [418.0, 10891.3], [419.0, 10924.2], [420.0, 13174.833333333332], [421.0, 12350.266666666668], [422.0, 11903.740740740745], [423.0, 12387.818181818184], [424.0, 11305.692307692307], [430.0, 10630.176470588236], [431.0, 12500.363636363636], [428.0, 12187.944444444443], [429.0, 10760.652173913046], [425.0, 11243.75], [426.0, 12047.09090909091], [427.0, 11067.000000000002], [433.0, 12396.958333333334], [432.0, 12549.875], [434.0, 12379.153846153846], [435.0, 11713.349999999999], [436.0, 13896.24], [437.0, 13268.52380952381], [438.0, 12791.142857142857], [439.0, 13095.333333333332], [440.0, 11334.1875], [446.0, 12840.8], [447.0, 11560.142857142859], [444.0, 18059.24], [445.0, 11328.823529411766], [441.0, 13170.947368421052], [442.0, 10845.90322580645], [443.0, 12000.545454545454], [449.0, 12585.416666666666], [448.0, 11819.22222222222], [450.0, 11997.055555555557], [451.0, 9928.519999999999], [452.0, 10270.258064516129], [453.0, 11902.5], [454.0, 12915.111111111111], [455.0, 11270.068965517243], [456.0, 12492.300000000001], [462.0, 11534.368421052632], [463.0, 11585.0], [460.0, 12513.57142857143], [461.0, 12244.055555555557], [457.0, 12838.111111111111], [458.0, 11111.588235294119], [459.0, 10354.944444444445], [465.0, 25887.733333333334], [464.0, 11681.38888888889], [466.0, 12412.823529411762], [467.0, 22225.538461538465], [468.0, 12779.736842105262], [469.0, 12470.333333333332], [470.0, 11111.125], [471.0, 21219.892857142862], [472.0, 10958.666666666664], [478.0, 10415.4], [479.0, 11771.791666666668], [476.0, 11981.0], [477.0, 12317.08695652174], [473.0, 53054.90476190476], [474.0, 9812.416666666664], [475.0, 12102.5], [481.0, 26938.384615384606], [480.0, 11661.210526315792], [482.0, 10674.071428571428], [483.0, 12019.500000000002], [484.0, 12045.533333333333], [485.0, 9734.785714285714], [486.0, 10040.941176470587], [487.0, 9853.249999999998], [488.0, 9445.052631578948], [494.0, 11223.800000000001], [495.0, 11864.285714285716], [492.0, 11840.333333333332], [493.0, 10647.521739130434], [489.0, 11715.709677419356], [490.0, 12900.842105263158], [491.0, 11105.357142857143], [496.0, 11983.513513513513], [497.0, 12602.0], [498.0, 12680.9375], [499.0, 11940.42857142857], [500.0, 14810.224199288252]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[333.52734766625656, 13191.528350228362]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[4.0, 1456.0], [5.0, 994.3333333333334], [6.0, 5563.0], [8.0, 1415.5], [9.0, 1300.5], [11.0, 117693.75], [12.0, 1290.5], [13.0, 595.0], [16.0, 84884.6], [17.0, 3267.0], [18.0, 985.5], [21.0, 1806.5], [22.0, 69922.5], [23.0, 1200.0], [24.0, 107696.5], [26.0, 1532.0], [27.0, 1850.0], [28.0, 1908.0], [31.0, 1971.0], [32.0, 4415.0], [33.0, 2152.0], [34.0, 2859.0], [35.0, 2001.0], [36.0, 2008.0], [38.0, 3037.0], [39.0, 211200.0], [40.0, 3100.0], [41.0, 57049.0], [42.0, 2553.0], [43.0, 57324.0], [46.0, 3923.5], [48.0, 3671.5], [49.0, 3073.0], [51.0, 96611.5], [52.0, 4098.0], [54.0, 3341.0], [56.0, 3490.0], [57.0, 3623.0], [58.0, 3412.0], [59.0, 3441.0], [60.0, 3564.0], [61.0, 55459.5], [62.0, 3770.0], [63.0, 4019.0], [65.0, 4080.0], [66.0, 89859.83333333333], [68.0, 4409.0], [69.0, 5560.0], [70.0, 4622.0], [71.0, 4730.0], [72.0, 4847.0], [73.0, 5212.0], [76.0, 6800.0], [78.0, 6670.5], [80.0, 6996.0], [83.0, 4742.666666666666], [84.0, 6088.0], [85.0, 96536.83333333333], [86.0, 6159.0], [87.0, 5722.0], [88.0, 5998.0], [91.0, 6379.0], [90.0, 123899.0], [93.0, 33345.5], [94.0, 7838.0], [95.0, 6951.5], [97.0, 7925.0], [99.0, 9009.0], [100.0, 24507.666666666668], [103.0, 25075.333333333332], [102.0, 57875.0], [104.0, 8256.0], [105.0, 8319.0], [106.0, 8442.0], [108.0, 7958.5], [109.0, 7567.0], [110.0, 7558.0], [111.0, 7226.0], [113.0, 9285.0], [114.0, 8387.0], [115.0, 7868.0], [117.0, 7967.0], [118.0, 9222.0], [119.0, 8544.0], [120.0, 8140.0], [122.0, 23747.333333333336], [123.0, 8491.0], [125.0, 23686.333333333336], [127.0, 31106.0], [126.0, 53355.0], [124.0, 53394.0], [128.0, 31232.5], [131.0, 10529.5], [132.0, 31465.5], [133.0, 9858.0], [134.0, 31667.5], [130.0, 53309.0], [129.0, 53321.0], [136.0, 31753.5], [138.0, 10429.0], [140.0, 11914.5], [141.0, 10545.0], [142.0, 10830.0], [143.0, 10052.0], [139.0, 53267.0], [137.0, 53275.0], [144.0, 10206.0], [147.0, 11423.0], [149.0, 11051.0], [150.0, 10384.0], [151.0, 32253.5], [152.0, 10328.0], [153.0, 10713.0], [156.0, 10816.0], [157.0, 32291.0], [159.0, 46245.0], [155.0, 54150.0], [160.0, 10417.0], [161.0, 10868.0], [163.0, 46341.333333333336], [165.0, 63836.0], [166.0, 12500.5], [167.0, 11738.0], [162.0, 116496.0], [174.0, 13403.0], [172.0, 115943.0], [168.0, 116012.0], [176.0, 14717.0], [177.0, 48316.333333333336], [183.0, 114750.0], [182.0, 114770.0], [194.0, 63247.0], [195.0, 14236.0], [198.0, 11639.0], [199.0, 11485.0], [192.0, 111350.0], [202.0, 12106.0], [203.0, 11215.0], [201.0, 23905.0], [200.0, 23916.0], [208.0, 11555.5], [209.0, 11022.0], [211.0, 24803.0], [218.0, 12219.0], [219.0, 1.0], [223.0, 23926.0], [222.0, 23943.0], [224.0, 14995.0], [225.0, 14174.0], [228.0, 27198.0], [229.0, 16493.0], [232.0, 13834.0], [237.0, 14866.0], [238.0, 14511.0], [239.0, 12410.0], [243.0, 13094.0], [244.0, 12221.0], [245.0, 12112.0], [247.0, 14646.0], [240.0, 17163.0], [250.0, 13241.6], [254.0, 11018.0], [255.0, 13991.5], [253.0, 14455.0], [252.0, 17190.0], [268.0, 37119.0], [257.0, 13150.5], [258.0, 11286.0], [259.0, 16342.0], [261.0, 7935.0], [262.0, 12268.0], [256.0, 18162.0], [264.0, 16234.0], [265.0, 13821.0], [267.0, 17919.5], [269.0, 11591.0], [270.0, 11641.0], [271.0, 13064.0], [273.0, 11786.5], [272.0, 10921.0], [275.0, 11679.333333333334], [284.0, 12289.0], [285.0, 13310.5], [286.0, 25718.666666666668], [276.0, 1.0], [277.0, 13311.5], [278.0, 7167.0], [279.0, 10687.0], [280.0, 16347.666666666666], [281.0, 12356.8], [282.0, 19569.0], [283.0, 10980.25], [289.0, 13311.333333333334], [288.0, 23565.666666666668], [290.0, 17639.0], [291.0, 12934.4], [292.0, 13310.5], [293.0, 12541.833333333334], [294.0, 11133.5], [295.0, 14037.75], [296.0, 12316.5], [302.0, 9880.8], [303.0, 34790.25], [300.0, 5803.0], [301.0, 14414.5], [297.0, 11565.333333333334], [298.0, 9556.333333333334], [299.0, 10991.875], [305.0, 22129.333333333332], [304.0, 8514.0], [306.0, 7743.857142857143], [307.0, 17664.0], [308.0, 8746.142857142857], [309.0, 11953.8], [310.0, 12198.0], [311.0, 9997.0], [312.0, 10496.25], [318.0, 10625.0], [316.0, 9471.333333333332], [317.0, 10368.333333333334], [313.0, 18431.0], [314.0, 13310.333333333334], [315.0, 8557.4], [321.0, 7679.0], [320.0, 10064.307692307693], [323.0, 5564.0], [332.0, 9464.25], [333.0, 6749.000000000001], [334.0, 11106.666666666666], [335.0, 8194.0], [324.0, 12958.0], [325.0, 25129.166666666668], [326.0, 13195.125], [327.0, 23954.857142857145], [328.0, 12083.333333333334], [329.0, 8623.333333333334], [330.0, 12894.42857142857], [331.0, 6969.333333333334], [337.0, 9727.0], [336.0, 13823.0], [338.0, 6961.8], [339.0, 11255.142857142857], [340.0, 11466.333333333334], [341.0, 9246.9], [342.0, 40618.66666666667], [343.0, 9498.0], [344.0, 22913.058823529413], [350.0, 11546.0], [351.0, 12309.0], [348.0, 9561.5], [349.0, 11818.166666666666], [345.0, 11505.0], [346.0, 8559.222222222223], [353.0, 9447.714285714284], [352.0, 12659.0], [354.0, 6315.111111111112], [355.0, 2.0], [356.0, 6912.2], [357.0, 6453.333333333334], [358.0, 10197.0], [359.0, 12606.25], [361.0, 10797.09090909091], [366.0, 12511.0], [367.0, 8620.0], [364.0, 13823.0], [365.0, 7168.5], [362.0, 58239.5], [363.0, 12458.0], [369.0, 10159.6], [368.0, 12281.923076923078], [370.0, 12561.0], [371.0, 12506.857142857143], [372.0, 7166.333333333334], [373.0, 12342.8], [374.0, 12943.5], [376.0, 12583.8], [382.0, 14282.0], [383.0, 10950.0], [380.0, 11928.4], [381.0, 12287.0], [377.0, 10252.0], [378.0, 6533.117647058823], [379.0, 10153.666666666668], [385.0, 12929.5], [384.0, 11744.75], [386.0, 13000.0], [387.0, 13315.0], [396.0, 10751.6], [397.0, 8448.166666666668], [398.0, 9187.0], [399.0, 12498.0], [388.0, 14212.0], [389.0, 11776.785714285714], [390.0, 10410.5], [391.0, 10713.375], [392.0, 1.0], [393.0, 13816.0], [394.0, 12390.2], [395.0, 13149.0], [401.0, 9672.0], [400.0, 10390.333333333334], [402.0, 9731.0], [403.0, 10270.75], [404.0, 15917.249999999996], [405.0, 9631.0], [406.0, 11561.25], [407.0, 11775.666666666668], [408.0, 8191.285714285714], [414.0, 8440.0], [415.0, 58111.5], [412.0, 11160.8], [413.0, 9726.0], [409.0, 10224.75], [410.0, 2.0], [411.0, 2.0], [417.0, 10244.0], [416.0, 10752.857142857143], [418.0, 11943.5], [419.0, 7935.714285714286], [420.0, 15360.0], [421.0, 11564.388888888889], [422.0, 9985.75], [423.0, 9140.2], [424.0, 10497.0], [430.0, 6952.666666666667], [431.0, 11220.0], [428.0, 10364.8], [429.0, 3842.0000000000005], [425.0, 11181.0], [426.0, 12370.416666666668], [427.0, 11671.0], [434.0, 9471.5], [433.0, 9343.0], [435.0, 11775.25], [444.0, 31453.666666666668], [446.0, 31997.333333333336], [447.0, 8875.666666666666], [436.0, 14332.699999999999], [437.0, 9214.666666666666], [438.0, 5889.0], [439.0, 13891.5], [440.0, 9728.0], [441.0, 13540.7], [442.0, 9087.0], [443.0, 9216.444444444445], [450.0, 13061.428571428572], [448.0, 13054.666666666666], [451.0, 8476.111111111111], [460.0, 8556.142857142857], [461.0, 13313.0], [462.0, 11969.0], [463.0, 9525.777777777777], [452.0, 8361.666666666666], [453.0, 19190.5], [454.0, 12228.333333333334], [455.0, 11721.0], [456.0, 12469.5], [457.0, 11931.5], [458.0, 7164.0], [459.0, 6145.0], [465.0, 44584.30769230769], [464.0, 8699.0], [466.0, 11943.666666666666], [467.0, 11496.0], [476.0, 12352.5], [477.0, 11143.42857142857], [478.0, 8628.8], [479.0, 13311.0], [468.0, 11775.0], [469.0, 7295.5], [470.0, 9617.0], [471.0, 11687.166666666666], [472.0, 13092.333333333332], [473.0, 88718.64285714286], [474.0, 7167.6], [475.0, 11199.0], [481.0, 45743.72222222222], [480.0, 9369.6], [482.0, 9644.333333333334], [483.0, 10809.0], [484.0, 10601.0], [485.0, 10873.42857142857], [486.0, 10061.5], [487.0, 9558.0], [488.0, 9533.5], [495.0, 9813.333333333334], [493.0, 11111.6], [494.0, 7449.285714285714], [489.0, 9902.736842105263], [490.0, 12028.333333333334], [491.0, 11218.5], [496.0, 11167.222222222223], [497.0, 14629.0], [498.0, 16383.0], [499.0, 14080.0], [500.0, 18572.43578947367]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[379.872180451128, 17354.29323308271]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 36.0], [3.0, 28.0], [4.0, 34.0], [5.0, 62901.333333333336], [6.0, 35.0], [7.0, 39.0], [8.0, 37.0], [9.0, 27.0], [10.0, 38.0], [11.0, 78355.0], [12.0, 24.0], [13.0, 30.0], [14.0, 31.0], [15.0, 52.0], [16.0, 70411.5], [17.0, 31.0], [18.0, 22.0], [19.0, 165.0], [20.0, 120.0], [21.0, 474.0], [22.0, 111258.2], [23.0, 668.0], [24.0, 637.0], [25.0, 107599.5], [27.0, 1025.0], [28.0, 1334.0], [29.0, 1365.0], [30.0, 1293.0], [31.0, 1359.0], [32.0, 1527.0], [33.0, 1389.0], [34.0, 106326.5], [35.0, 1181.0], [36.0, 1474.0], [37.0, 1521.0], [38.0, 1830.0], [39.0, 1551.0], [41.0, 2075.0], [40.0, 209917.0], [42.0, 2065.0], [43.0, 2173.0], [44.0, 2075.0], [45.0, 2273.0], [46.0, 2653.0], [47.0, 2802.0], [48.0, 2358.0], [49.0, 2756.0], [50.0, 2527.0], [51.0, 142708.75], [53.0, 3095.5], [54.0, 2825.0], [56.0, 2994.5], [57.0, 2917.0], [58.0, 2839.0], [59.0, 2904.0], [61.0, 3122.0], [62.0, 3328.0], [63.0, 3712.0], [64.0, 3371.0], [65.0, 3409.0], [66.0, 81202.0], [68.0, 3811.5], [69.0, 3933.0], [71.0, 4376.0], [72.0, 4182.0], [73.0, 4871.0], [75.0, 5466.0], [76.0, 5756.0], [78.0, 6124.0], [79.0, 6729.0], [80.0, 6406.0], [81.0, 6902.0], [82.0, 6147.0], [83.0, 5756.0], [84.0, 5784.0], [85.0, 92771.4], [86.0, 5492.0], [87.0, 5392.0], [88.0, 5110.0], [89.0, 5490.5], [90.0, 5538.0], [91.0, 5714.0], [92.0, 5992.0], [93.0, 5929.0], [95.0, 6880.0], [96.0, 6334.0], [97.0, 6349.0], [98.0, 6344.0], [99.0, 32234.5], [100.0, 6920.0], [101.0, 32320.0], [102.0, 6925.0], [104.0, 6927.5], [105.0, 30426.0], [107.0, 7008.0], [106.0, 54041.0], [108.0, 7105.0], [109.0, 6794.0], [110.0, 6717.0], [111.0, 6926.0], [113.0, 7115.5], [114.0, 6982.0], [116.0, 7113.0], [117.0, 7245.0], [118.0, 7257.0], [119.0, 7532.0], [120.0, 7655.0], [121.0, 7701.0], [122.0, 7902.0], [123.0, 30609.0], [124.0, 7889.0], [125.0, 7960.0], [127.0, 8158.0], [128.0, 8307.0], [129.0, 8403.0], [130.0, 8841.0], [131.0, 31068.5], [133.0, 9524.0], [134.0, 20974.0], [135.0, 31544.0], [136.0, 9534.0], [137.0, 9935.0], [139.0, 9973.5], [140.0, 31500.0], [141.0, 9935.0], [142.0, 9700.0], [138.0, 53274.0], [144.0, 9859.0], [145.0, 9694.0], [146.0, 9801.0], [147.0, 9871.0], [148.0, 9600.0], [149.0, 9919.0], [150.0, 9757.0], [151.0, 9696.0], [152.0, 9821.0], [153.0, 24595.333333333336], [154.0, 32021.5], [155.0, 9820.0], [160.0, 64162.0], [162.0, 10936.5], [163.0, 10219.0], [164.0, 116203.0], [161.0, 116517.0], [174.0, 115927.0], [173.0, 115682.0], [180.0, 11990.0], [182.0, 19171.0], [181.0, 115316.0], [178.0, 115629.0], [186.0, 12489.0], [188.0, 15091.0], [190.0, 18365.0], [192.0, 13751.0], [196.0, 18902.0], [197.0, 16208.0], [198.0, 18110.0], [201.0, 12993.0], [206.0, 11389.0], [203.0, 23889.0], [202.0, 23895.0], [209.0, 11808.0], [210.0, 17810.0], [211.0, 10627.0], [213.0, 63380.0], [218.0, 14471.5], [219.0, 22736.5], [221.0, 13291.0], [222.0, 13313.0], [220.0, 24006.0], [224.0, 13075.0], [226.0, 15111.0], [229.0, 29216.333333333332], [231.0, 24712.5], [227.0, 16293.0], [232.0, 13150.0], [233.0, 16096.5], [235.0, 36624.333333333336], [236.0, 12748.0], [237.0, 18914.0], [238.0, 11930.0], [239.0, 10597.5], [241.0, 13258.0], [243.0, 24332.5], [245.0, 11614.0], [247.0, 9659.0], [246.0, 17360.0], [248.0, 13162.5], [250.0, 11064.0], [251.0, 31622.5], [254.0, 75473.33333333333], [249.0, 21104.0], [257.0, 10163.0], [256.0, 70103.0], [258.0, 27270.0], [268.0, 31888.5], [269.0, 14943.0], [270.0, 42081.33333333333], [271.0, 24301.0], [260.0, 78196.0], [261.0, 7084.0], [262.0, 106745.0], [264.0, 78519.33333333333], [265.0, 16009.666666666666], [266.0, 75675.0], [267.0, 7869.0], [273.0, 26244.0], [272.0, 59389.6], [274.0, 32173.0], [275.0, 21549.0], [276.0, 95082.5], [277.0, 7641.0], [278.0, 84964.33333333333], [279.0, 8575.5], [280.0, 35398.25], [286.0, 12512.5], [287.0, 11604.5], [284.0, 7168.5], [285.0, 12418.0], [281.0, 13242.5], [282.0, 55284.666666666664], [283.0, 6273.0], [289.0, 12183.666666666666], [288.0, 44193.2], [290.0, 44194.0], [300.0, 11804.0], [301.0, 58856.0], [302.0, 11899.666666666666], [303.0, 27499.200000000004], [292.0, 13280.0], [293.0, 12013.875], [294.0, 12140.0], [295.0, 18859.0], [296.0, 10676.5], [297.0, 13095.5], [298.0, 13055.0], [299.0, 18270.076923076922], [307.0, 15770.2], [305.0, 13538.0], [304.0, 9684.5], [306.0, 7590.625], [308.0, 7352.6], [309.0, 42820.666666666664], [312.0, 7775.125], [318.0, 10812.3], [319.0, 65330.0], [316.0, 10497.692307692305], [317.0, 9946.25], [313.0, 11547.333333333334], [314.0, 13208.0], [315.0, 5122.333333333334], [321.0, 12547.5], [320.0, 12013.3], [322.0, 11305.666666666666], [323.0, 8175.2], [325.0, 23830.571428571428], [326.0, 10226.0], [327.0, 9726.0], [328.0, 11812.666666666666], [334.0, 9133.0], [335.0, 7836.230769230769], [332.0, 12561.42857142857], [333.0, 19709.5], [329.0, 11804.5], [330.0, 11123.333333333332], [331.0, 10540.0], [338.0, 8801.285714285716], [337.0, 10731.5], [339.0, 10659.444444444445], [348.0, 11008.0], [349.0, 11547.444444444445], [350.0, 10323.666666666666], [351.0, 8805.333333333334], [341.0, 10926.6], [342.0, 9309.5], [343.0, 11387.75], [344.0, 12360.57142857143], [345.0, 12007.2], [346.0, 21650.555555555555], [353.0, 9178.4], [352.0, 10985.0], [354.0, 8994.071428571428], [355.0, 12127.0], [356.0, 11223.125], [357.0, 8703.0], [358.0, 9878.0], [359.0, 9465.5], [360.0, 9611.0], [367.0, 9215.5], [365.0, 13311.2], [366.0, 12474.5], [361.0, 8806.9375], [362.0, 30611.250000000004], [363.0, 11640.142857142857], [369.0, 13310.5], [368.0, 12915.272727272726], [370.0, 12065.666666666666], [371.0, 9715.57142857143], [372.0, 14419.0], [373.0, 7850.666666666666], [374.0, 9070.5], [376.0, 8197.8], [381.0, 11709.75], [382.0, 12017.5], [377.0, 9789.833333333334], [378.0, 9666.666666666668], [379.0, 10013.25], [385.0, 9216.333333333332], [384.0, 10495.75], [386.0, 11216.714285714286], [387.0, 12179.0], [388.0, 12230.5], [389.0, 12606.545454545456], [390.0, 11212.625], [391.0, 12977.4], [392.0, 13720.2], [398.0, 9683.5], [399.0, 14152.5], [396.0, 10176.6], [397.0, 8193.75], [394.0, 13413.0], [395.0, 11080.0], [401.0, 11377.857142857143], [400.0, 8191.857142857143], [403.0, 5410.25], [412.0, 9551.100000000002], [413.0, 8675.8], [414.0, 11904.25], [415.0, 10022.333333333334], [404.0, 12192.076923076926], [405.0, 7456.500000000001], [406.0, 12200.666666666666], [407.0, 22357.0], [408.0, 8192.0], [409.0, 9967.714285714286], [410.0, 11951.666666666666], [411.0, 21793.5], [417.0, 10243.5], [416.0, 10274.333333333334], [418.0, 10719.5], [419.0, 7340.333333333333], [420.0, 15872.0], [421.0, 12406.5625], [422.0, 11317.6], [423.0, 5120.0], [424.0, 13031.0], [430.0, 9211.0], [428.0, 12648.363636363638], [429.0, 8194.833333333334], [425.0, 10410.0], [426.0, 7977.555555555556], [433.0, 12324.916666666668], [435.0, 12823.8], [444.0, 18387.899999999998], [445.0, 11196.333333333334], [446.0, 8548.0], [447.0, 9473.0], [436.0, 13933.428571428572], [437.0, 13848.555555555555], [438.0, 12629.5], [439.0, 16391.0], [440.0, 9727.0], [441.0, 10000.375], [442.0, 11232.8], [443.0, 9560.857142857143], [449.0, 9124.0], [448.0, 12948.142857142857], [450.0, 11659.25], [451.0, 7845.000000000002], [452.0, 7065.4], [453.0, 9470.0], [454.0, 12642.285714285714], [455.0, 9505.42857142857], [456.0, 13818.666666666666], [462.0, 10702.75], [463.0, 5803.0], [460.0, 9366.285714285714], [461.0, 11008.5], [458.0, 12425.5], [459.0, 6998.333333333333], [465.0, 11439.124999999998], [464.0, 11737.5], [466.0, 13618.8], [476.0, 13567.0], [477.0, 10751.500000000002], [478.0, 8436.4], [479.0, 13311.666666666666], [468.0, 9729.888888888889], [469.0, 34292.5], [470.0, 7613.5], [471.0, 26329.5], [472.0, 8873.0], [473.0, 41766.50000000001], [474.0, 9821.0], [475.0, 16148.5], [481.0, 16530.78947368421], [480.0, 8618.0], [482.0, 9668.285714285714], [483.0, 7690.0], [484.0, 7679.0], [485.0, 32447.2], [486.0, 7685.5714285714275], [487.0, 7680.6], [488.0, 12208.428571428572], [495.0, 8959.5], [493.0, 11019.0], [494.0, 7074.875], [489.0, 9893.888888888887], [490.0, 9402.666666666666], [491.0, 9103.0], [496.0, 13499.0], [497.0, 11179.0], [498.0, 12527.666666666666], [500.0, 20327.123142250537], [1.0, 90.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[378.7075180226568, 17406.699279093722]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 46.15, "minX": 1.5394524E12, "maxY": 1002832.85, "series": [{"data": [[1.53945246E12, 925738.5833333334], [1.53945276E12, 971204.3666666667], [1.53945306E12, 226178.75], [1.5394524E12, 21115.7], [1.5394527E12, 1002832.85], [1.539453E12, 985031.1666666666], [1.53945264E12, 959410.9666666667], [1.53945294E12, 952955.0833333334], [1.53945258E12, 947465.1833333333], [1.53945288E12, 972706.7666666667], [1.53945252E12, 931199.65], [1.53945282E12, 952146.65], [1.53945312E12, 60.5]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53945246E12, 3347.016666666667], [1.53945276E12, 7063.0], [1.53945306E12, 1336.95], [1.5394524E12, 147.63333333333333], [1.5394527E12, 4999.4], [1.539453E12, 7135.366666666667], [1.53945264E12, 3243.983333333333], [1.53945294E12, 7356.166666666667], [1.53945258E12, 3255.9666666666667], [1.53945288E12, 7209.4], [1.53945252E12, 3358.05], [1.53945282E12, 7123.683333333333], [1.53945312E12, 46.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945312E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 35.699999999999996, "minX": 1.5394524E12, "maxY": 178004.16666666666, "series": [{"data": [[1.53945246E12, 3149.87356321839], [1.53945276E12, 12346.607040913408], [1.53945306E12, 55766.940217391304], [1.5394524E12, 1250.5384615384614], [1.5394527E12, 13998.99755799757], [1.539453E12, 14117.372881355932], [1.53945264E12, 13170.265624999993], [1.53945294E12, 14820.641048824586], [1.53945258E12, 11991.467094703052], [1.53945288E12, 13650.20167286246], [1.53945252E12, 7750.36052202284], [1.53945282E12, 11662.104068117327], [1.53945312E12, 178004.16666666666]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945246E12, 2696.8490566037735], [1.53945276E12, 11210.701342281882], [1.53945306E12, 83797.46666666667], [1.5394524E12, 1809.4444444444443], [1.5394527E12, 13926.206666666676], [1.539453E12, 19868.523404255313], [1.53945264E12, 13013.692307692309], [1.53945294E12, 16578.572347266865], [1.53945258E12, 11202.692307692307], [1.53945288E12, 18590.350819672127], [1.53945252E12, 7308.2307692307695], [1.53945282E12, 10848.189542483657], [1.53945312E12, 156671.66666666666]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945246E12, 1788.1607142857142], [1.53945276E12, 11956.269592476488], [1.53945306E12, 82166.4181818182], [1.5394524E12, 35.699999999999996], [1.5394527E12, 29185.823529411744], [1.539453E12, 20173.11842105263], [1.53945264E12, 19413.02325581395], [1.53945294E12, 18384.0127795527], [1.53945258E12, 10114.114285714286], [1.53945288E12, 13370.919504643958], [1.53945252E12, 6474.964285714285], [1.53945282E12, 10613.311111111108], [1.53945312E12, 172672.5]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945312E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 35.6, "minX": 1.5394524E12, "maxY": 178004.16666666666, "series": [{"data": [[1.53945246E12, 3148.7848932676497], [1.53945276E12, 12345.927687916259], [1.53945306E12, 55766.04347826088], [1.5394524E12, 1250.1538461538462], [1.5394527E12, 13998.078144078161], [1.539453E12, 14116.694067796609], [1.53945264E12, 13169.048437500009], [1.53945294E12, 14819.952983725148], [1.53945258E12, 11990.258426966298], [1.53945288E12, 13649.485130111523], [1.53945252E12, 7749.110929853181], [1.53945282E12, 11661.395458845773], [1.53945312E12, 178004.16666666666]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945246E12, 2696.8301886792456], [1.53945276E12, 11210.694630872482], [1.53945306E12, 83797.45333333332], [1.5394524E12, 1809.4444444444443], [1.5394527E12, 13926.206666666676], [1.539453E12, 19868.523404255313], [1.53945264E12, 13013.692307692309], [1.53945294E12, 16578.565916398715], [1.53945258E12, 11202.692307692307], [1.53945288E12, 18590.350819672127], [1.53945252E12, 7308.2307692307695], [1.53945282E12, 10848.186274509804], [1.53945312E12, 156671.66666666666]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945246E12, 1788.125], [1.53945276E12, 11956.257053291536], [1.53945306E12, 82166.4181818182], [1.5394524E12, 35.6], [1.5394527E12, 29185.823529411744], [1.539453E12, 20173.114035087725], [1.53945264E12, 19412.97674418605], [1.53945294E12, 18384.0], [1.53945258E12, 10114.114285714286], [1.53945288E12, 13370.919504643958], [1.53945252E12, 6474.910714285715], [1.53945282E12, 10613.30793650793], [1.53945312E12, 172672.5]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945312E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5394524E12, "maxY": 5.800000000000001, "series": [{"data": [[1.53945246E12, 2.4942528735632186], [1.53945276E12, 0.6260704091341577], [1.53945306E12, 0.4945652173913048], [1.5394524E12, 0.5384615384615385], [1.5394527E12, 0.7179487179487177], [1.539453E12, 0.5771186440677964], [1.53945264E12, 0.6749999999999992], [1.53945294E12, 0.5307414104882454], [1.53945258E12, 0.6886035313001603], [1.53945288E12, 0.5557620817843855], [1.53945252E12, 0.6590538336052201], [1.53945282E12, 0.59035004730369], [1.53945312E12, 0.5]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53945246E12, 0.6226415094339623], [1.53945276E12, 0.570469798657718], [1.53945306E12, 0.44], [1.5394524E12, 0.0], [1.5394527E12, 0.8866666666666664], [1.539453E12, 0.519148936170213], [1.53945264E12, 0.9230769230769229], [1.53945294E12, 0.49839228295819915], [1.53945258E12, 0.9487179487179486], [1.53945288E12, 0.5836065573770491], [1.53945252E12, 0.9423076923076924], [1.53945282E12, 0.6339869281045754], [1.53945312E12, 0.33333333333333337]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53945246E12, 1.5000000000000007], [1.53945276E12, 0.5642633228840127], [1.53945306E12, 0.5090909090909088], [1.5394524E12, 5.800000000000001], [1.5394527E12, 0.8930481283422467], [1.539453E12, 0.5043859649122807], [1.53945264E12, 0.813953488372093], [1.53945294E12, 0.4760383386581471], [1.53945258E12, 1.942857142857143], [1.53945288E12, 0.6408668730650148], [1.53945252E12, 0.8749999999999998], [1.53945282E12, 0.7428571428571432], [1.53945312E12, 1.5]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945312E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.5394524E12, "maxY": 117876.0, "series": [{"data": [[1.53945246E12, 5624.0], [1.53945294E12, 34777.0], [1.53945276E12, 19615.0], [1.53945258E12, 26745.0], [1.53945306E12, 117876.0], [1.5394524E12, 5563.0], [1.53945288E12, 18918.0], [1.5394527E12, 18068.0], [1.53945252E12, 9809.0], [1.539453E12, 17369.0], [1.53945282E12, 26296.0], [1.53945264E12, 64048.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53945246E12, 22.0], [1.53945294E12, 10368.0], [1.53945276E12, 10589.0], [1.53945258E12, 8403.0], [1.53945306E12, 12649.0], [1.5394524E12, 27.0], [1.53945288E12, 10585.0], [1.5394527E12, 10087.0], [1.53945252E12, 3933.0], [1.539453E12, 10437.0], [1.53945282E12, 10264.0], [1.53945264E12, 10627.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53945246E12, 4562.5], [1.53945294E12, 13620.2], [1.53945276E12, 13323.6], [1.53945258E12, 12733.800000000001], [1.53945306E12, 13783.5], [1.5394524E12, 2301.0], [1.53945288E12, 13435.900000000001], [1.5394527E12, 13388.2], [1.53945252E12, 8555.8], [1.539453E12, 13544.1], [1.53945282E12, 13540.0], [1.53945264E12, 13528.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53945246E12, 5428.449999999995], [1.53945294E12, 15622.96], [1.53945276E12, 15495.32], [1.53945258E12, 14168.82], [1.53945306E12, 25681.650000000045], [1.5394524E12, 5563.0], [1.53945288E12, 15594.869999999997], [1.5394527E12, 15493.58], [1.53945252E12, 9451.730000000001], [1.539453E12, 15586.509999999998], [1.53945282E12, 15625.64], [1.53945264E12, 15495.19]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53945246E12, 4879.5], [1.53945294E12, 14321.8], [1.53945276E12, 13965.599999999999], [1.53945258E12, 13538.6], [1.53945306E12, 14670.5], [1.5394524E12, 3784.8499999999976], [1.53945288E12, 14244.8], [1.5394527E12, 14021.499999999998], [1.53945252E12, 9044.0], [1.539453E12, 14275.299999999996], [1.53945282E12, 14298.55], [1.53945264E12, 14212.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945306E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 156672.0, "series": [{"data": [[0.0, 1160.0], [19.0, 12226.0], [5.0, 21878.5], [11.0, 11360.0], [12.0, 7908.0], [27.0, 12452.5], [28.0, 12528.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 156672.0], [19.0, 13310.0], [5.0, 114684.0], [11.0, 13246.0], [12.0, 2.0], [27.0, 10497.0], [28.0, 10239.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 156672.0, "series": [{"data": [[0.0, 1159.5], [19.0, 12225.0], [5.0, 21877.0], [11.0, 11359.5], [12.0, 7906.5], [27.0, 12452.0], [28.0, 12527.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 156672.0], [19.0, 13310.0], [5.0, 114684.0], [11.0, 13246.0], [12.0, 2.0], [27.0, 10497.0], [28.0, 10239.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 28.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6833333333333333, "minX": 1.5394524E12, "maxY": 29.4, "series": [{"data": [[1.53945246E12, 12.966666666666667], [1.53945294E12, 29.016666666666666], [1.53945276E12, 28.8], [1.53945258E12, 12.616666666666667], [1.5394524E12, 0.6833333333333333], [1.53945288E12, 29.4], [1.5394527E12, 20.266666666666666], [1.53945252E12, 13.016666666666667], [1.539453E12, 24.466666666666665], [1.53945282E12, 28.966666666666665], [1.53945264E12, 12.816666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.539453E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394524E12, "maxY": 17.416666666666668, "series": [{"data": [[1.53945246E12, 11.016666666666667], [1.53945294E12, 10.866666666666667], [1.53945276E12, 11.05], [1.53945258E12, 10.916666666666666], [1.53945306E12, 3.033333333333333], [1.5394524E12, 0.36666666666666664], [1.53945288E12, 11.1], [1.5394527E12, 11.433333333333334], [1.53945252E12, 11.083333333333334], [1.539453E12, 11.066666666666666], [1.53945282E12, 10.766666666666667], [1.53945264E12, 10.883333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53945246E12, 0.8833333333333333], [1.53945294E12, 0.38333333333333336], [1.53945276E12, 0.48333333333333334], [1.53945258E12, 0.6333333333333333], [1.53945306E12, 0.06666666666666667], [1.5394524E12, 0.13333333333333333], [1.53945288E12, 0.43333333333333335], [1.5394527E12, 0.48333333333333334], [1.53945252E12, 0.85], [1.539453E12, 0.31666666666666665], [1.53945282E12, 0.48333333333333334], [1.53945264E12, 0.3333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945246E12, 0.06666666666666667], [1.53945276E12, 16.083333333333332], [1.53945306E12, 1.3666666666666667], [1.5394524E12, 0.016666666666666666], [1.5394527E12, 7.216666666666667], [1.539453E12, 15.816666666666666], [1.53945264E12, 0.5333333333333333], [1.53945294E12, 17.416666666666668], [1.53945258E12, 0.05], [1.53945288E12, 16.716666666666665], [1.53945252E12, 0.08333333333333333], [1.53945282E12, 16.516666666666666], [1.53945312E12, 0.18333333333333332]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53945294E12, 0.16666666666666666], [1.53945276E12, 0.18333333333333332], [1.53945258E12, 0.016666666666666666], [1.53945306E12, 0.7666666666666667], [1.5394524E12, 0.016666666666666666], [1.53945288E12, 0.15], [1.5394527E12, 0.13333333333333333], [1.539453E12, 0.18333333333333332], [1.53945282E12, 0.2], [1.53945264E12, 0.06666666666666667]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945312E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394524E12, "maxY": 10.916666666666666, "series": [{"data": [[1.53945246E12, 0.9333333333333333], [1.53945294E12, 0.4666666666666667], [1.53945276E12, 0.5166666666666667], [1.53945258E12, 0.5666666666666667], [1.53945306E12, 0.6166666666666667], [1.5394524E12, 0.15], [1.53945288E12, 0.5], [1.5394527E12, 0.5166666666666667], [1.53945252E12, 0.9333333333333333], [1.539453E12, 0.3], [1.53945282E12, 0.4166666666666667], [1.53945264E12, 0.4166666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53945246E12, 0.8833333333333333], [1.53945294E12, 0.38333333333333336], [1.53945276E12, 0.48333333333333334], [1.53945258E12, 0.6333333333333333], [1.53945306E12, 0.06666666666666667], [1.5394524E12, 0.13333333333333333], [1.53945288E12, 0.43333333333333335], [1.5394527E12, 0.48333333333333334], [1.53945252E12, 0.85], [1.539453E12, 0.31666666666666665], [1.53945282E12, 0.48333333333333334], [1.53945264E12, 0.3333333333333333]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53945246E12, 10.083333333333334], [1.53945294E12, 10.4], [1.53945276E12, 10.533333333333333], [1.53945258E12, 10.35], [1.53945306E12, 2.4166666666666665], [1.5394524E12, 0.21666666666666667], [1.53945288E12, 10.6], [1.5394527E12, 10.916666666666666], [1.53945252E12, 10.15], [1.539453E12, 10.766666666666667], [1.53945282E12, 10.35], [1.53945264E12, 10.466666666666667]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945246E12, 0.06666666666666667], [1.53945294E12, 8.033333333333333], [1.53945276E12, 6.983333333333333], [1.53945258E12, 0.03333333333333333], [1.53945306E12, 0.65], [1.53945288E12, 7.333333333333333], [1.5394527E12, 2.7333333333333334], [1.53945252E12, 0.06666666666666667], [1.539453E12, 8.9], [1.53945282E12, 7.266666666666667], [1.53945264E12, 0.2], [1.53945312E12, 0.1]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53945294E12, 4.75], [1.53945276E12, 4.8], [1.53945258E12, 0.016666666666666666], [1.53945306E12, 0.3], [1.5394524E12, 0.016666666666666666], [1.53945288E12, 4.883333333333334], [1.5394527E12, 2.6], [1.539453E12, 3.5], [1.53945282E12, 4.833333333333333], [1.53945264E12, 0.3], [1.53945312E12, 0.03333333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53945294E12, 4.8], [1.53945276E12, 4.483333333333333], [1.53945258E12, 0.016666666666666666], [1.53945306E12, 1.1833333333333333], [1.5394524E12, 0.016666666666666666], [1.53945288E12, 4.65], [1.5394527E12, 2.0166666666666666], [1.53945252E12, 0.016666666666666666], [1.539453E12, 3.6], [1.53945282E12, 4.616666666666666], [1.53945264E12, 0.1], [1.53945312E12, 0.05]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945312E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
