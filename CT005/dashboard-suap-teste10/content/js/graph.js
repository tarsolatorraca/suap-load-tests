/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 227584.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 3.0], [3.2, 1181.0], [3.3, 1249.0], [3.4, 1283.0], [3.5, 1321.0], [3.6, 1348.0], [3.7, 1379.0], [3.8, 1395.0], [3.9, 1427.0], [4.0, 1449.0], [4.1, 1493.0], [4.2, 1585.0], [4.3, 1609.0], [4.4, 1657.0], [4.5, 1714.0], [4.6, 1763.0], [4.7, 1804.0], [4.8, 1907.0], [4.9, 1979.0], [5.0, 2032.0], [5.1, 2132.0], [5.2, 2237.0], [5.3, 2297.0], [5.4, 2415.0], [5.5, 2590.0], [5.6, 2825.0], [5.7, 2893.0], [5.8, 2918.0], [5.9, 2951.0], [6.0, 2972.0], [6.1, 3024.0], [6.2, 3061.0], [6.3, 3143.0], [6.4, 3205.0], [6.5, 3319.0], [6.6, 3393.0], [6.7, 3427.0], [6.8, 3470.0], [6.9, 3526.0], [7.0, 3572.0], [7.1, 3613.0], [7.2, 3691.0], [7.3, 3737.0], [7.4, 3766.0], [7.5, 3824.0], [7.6, 3868.0], [7.7, 4027.0], [7.8, 4180.0], [7.9, 4320.0], [8.0, 4385.0], [8.1, 4460.0], [8.2, 4607.0], [8.3, 4716.0], [8.4, 4751.0], [8.5, 4777.0], [8.6, 4812.0], [8.7, 4835.0], [8.8, 4855.0], [8.9, 4885.0], [9.0, 4923.0], [9.1, 4948.0], [9.2, 5025.0], [9.3, 5044.0], [9.4, 5102.0], [9.5, 5130.0], [9.6, 5201.0], [9.7, 5268.0], [9.8, 5340.0], [9.9, 5403.0], [10.0, 5458.0], [10.1, 5499.0], [10.2, 5526.0], [10.3, 5554.0], [10.4, 5585.0], [10.5, 5623.0], [10.6, 5645.0], [10.7, 5677.0], [10.8, 5723.0], [10.9, 5751.0], [11.0, 5811.0], [11.1, 5860.0], [11.2, 5921.0], [11.3, 5987.0], [11.4, 6142.0], [11.5, 6210.0], [11.6, 6293.0], [11.7, 6339.0], [11.8, 6362.0], [11.9, 6419.0], [12.0, 6482.0], [12.1, 6557.0], [12.2, 6577.0], [12.3, 6671.0], [12.4, 6791.0], [12.5, 6948.0], [12.6, 7140.0], [12.7, 7164.0], [12.8, 7166.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7169.0], [13.9, 7170.0], [14.0, 7186.0], [14.1, 7216.0], [14.2, 7285.0], [14.3, 7368.0], [14.4, 7419.0], [14.5, 7420.0], [14.6, 7423.0], [14.7, 7423.0], [14.8, 7424.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7425.0], [15.6, 7428.0], [15.7, 7486.0], [15.8, 7547.0], [15.9, 7581.0], [16.0, 7617.0], [16.1, 7652.0], [16.2, 7676.0], [16.3, 7677.0], [16.4, 7679.0], [16.5, 7679.0], [16.6, 7679.0], [16.7, 7680.0], [16.8, 7680.0], [16.9, 7680.0], [17.0, 7680.0], [17.1, 7680.0], [17.2, 7680.0], [17.3, 7683.0], [17.4, 7684.0], [17.5, 7699.0], [17.6, 7731.0], [17.7, 7758.0], [17.8, 7788.0], [17.9, 7804.0], [18.0, 7812.0], [18.1, 7827.0], [18.2, 7867.0], [18.3, 7904.0], [18.4, 7931.0], [18.5, 7932.0], [18.6, 7935.0], [18.7, 7935.0], [18.8, 7936.0], [18.9, 7936.0], [19.0, 7936.0], [19.1, 7936.0], [19.2, 7936.0], [19.3, 7937.0], [19.4, 7940.0], [19.5, 7953.0], [19.6, 7986.0], [19.7, 8025.0], [19.8, 8064.0], [19.9, 8084.0], [20.0, 8135.0], [20.1, 8175.0], [20.2, 8188.0], [20.3, 8191.0], [20.4, 8191.0], [20.5, 8192.0], [20.6, 8192.0], [20.7, 8192.0], [20.8, 8193.0], [20.9, 8196.0], [21.0, 8230.0], [21.1, 8274.0], [21.2, 8304.0], [21.3, 8337.0], [21.4, 8390.0], [21.5, 8428.0], [21.6, 8447.0], [21.7, 8448.0], [21.8, 8520.0], [21.9, 8590.0], [22.0, 8652.0], [22.1, 8700.0], [22.2, 8702.0], [22.3, 8703.0], [22.4, 8703.0], [22.5, 8704.0], [22.6, 8704.0], [22.7, 8704.0], [22.8, 8704.0], [22.9, 8704.0], [23.0, 8704.0], [23.1, 8705.0], [23.2, 8707.0], [23.3, 8708.0], [23.4, 8730.0], [23.5, 8804.0], [23.6, 8893.0], [23.7, 8959.0], [23.8, 8960.0], [23.9, 8961.0], [24.0, 8965.0], [24.1, 9085.0], [24.2, 9212.0], [24.3, 9215.0], [24.4, 9215.0], [24.5, 9215.0], [24.6, 9215.0], [24.7, 9216.0], [24.8, 9216.0], [24.9, 9216.0], [25.0, 9216.0], [25.1, 9217.0], [25.2, 9219.0], [25.3, 9221.0], [25.4, 9333.0], [25.5, 9463.0], [25.6, 9471.0], [25.7, 9472.0], [25.8, 9472.0], [25.9, 9476.0], [26.0, 9588.0], [26.1, 9699.0], [26.2, 9727.0], [26.3, 9727.0], [26.4, 9728.0], [26.5, 9728.0], [26.6, 9728.0], [26.7, 9728.0], [26.8, 9729.0], [26.9, 9765.0], [27.0, 9893.0], [27.1, 9934.0], [27.2, 9982.0], [27.3, 9983.0], [27.4, 9984.0], [27.5, 9984.0], [27.6, 9984.0], [27.7, 9993.0], [27.8, 10032.0], [27.9, 10067.0], [28.0, 10098.0], [28.1, 10143.0], [28.2, 10189.0], [28.3, 10226.0], [28.4, 10238.0], [28.5, 10239.0], [28.6, 10239.0], [28.7, 10240.0], [28.8, 10240.0], [28.9, 10240.0], [29.0, 10243.0], [29.1, 10244.0], [29.2, 10281.0], [29.3, 10294.0], [29.4, 10343.0], [29.5, 10362.0], [29.6, 10400.0], [29.7, 10430.0], [29.8, 10492.0], [29.9, 10496.0], [30.0, 10497.0], [30.1, 10570.0], [30.2, 10641.0], [30.3, 10724.0], [30.4, 10752.0], [30.5, 10773.0], [30.6, 10867.0], [30.7, 10972.0], [30.8, 11007.0], [30.9, 11008.0], [31.0, 11008.0], [31.1, 11054.0], [31.2, 11141.0], [31.3, 11238.0], [31.4, 11263.0], [31.5, 11263.0], [31.6, 11264.0], [31.7, 11264.0], [31.8, 11265.0], [31.9, 11276.0], [32.0, 11324.0], [32.1, 11352.0], [32.2, 11381.0], [32.3, 11420.0], [32.4, 11446.0], [32.5, 11468.0], [32.6, 11481.0], [32.7, 11501.0], [32.8, 11515.0], [32.9, 11519.0], [33.0, 11520.0], [33.1, 11521.0], [33.2, 11538.0], [33.3, 11560.0], [33.4, 11578.0], [33.5, 11591.0], [33.6, 11604.0], [33.7, 11615.0], [33.8, 11625.0], [33.9, 11631.0], [34.0, 11637.0], [34.1, 11648.0], [34.2, 11654.0], [34.3, 11659.0], [34.4, 11666.0], [34.5, 11672.0], [34.6, 11680.0], [34.7, 11687.0], [34.8, 11693.0], [34.9, 11702.0], [35.0, 11707.0], [35.1, 11713.0], [35.2, 11720.0], [35.3, 11729.0], [35.4, 11736.0], [35.5, 11740.0], [35.6, 11745.0], [35.7, 11751.0], [35.8, 11758.0], [35.9, 11763.0], [36.0, 11768.0], [36.1, 11773.0], [36.2, 11775.0], [36.3, 11775.0], [36.4, 11776.0], [36.5, 11776.0], [36.6, 11776.0], [36.7, 11779.0], [36.8, 11782.0], [36.9, 11786.0], [37.0, 11792.0], [37.1, 11798.0], [37.2, 11804.0], [37.3, 11810.0], [37.4, 11816.0], [37.5, 11820.0], [37.6, 11827.0], [37.7, 11830.0], [37.8, 11835.0], [37.9, 11839.0], [38.0, 11841.0], [38.1, 11846.0], [38.2, 11853.0], [38.3, 11858.0], [38.4, 11863.0], [38.5, 11868.0], [38.6, 11875.0], [38.7, 11881.0], [38.8, 11884.0], [38.9, 11888.0], [39.0, 11892.0], [39.1, 11895.0], [39.2, 11897.0], [39.3, 11901.0], [39.4, 11903.0], [39.5, 11907.0], [39.6, 11910.0], [39.7, 11915.0], [39.8, 11920.0], [39.9, 11924.0], [40.0, 11928.0], [40.1, 11931.0], [40.2, 11935.0], [40.3, 11939.0], [40.4, 11943.0], [40.5, 11949.0], [40.6, 11952.0], [40.7, 11957.0], [40.8, 11960.0], [40.9, 11963.0], [41.0, 11966.0], [41.1, 11970.0], [41.2, 11975.0], [41.3, 11979.0], [41.4, 11982.0], [41.5, 11986.0], [41.6, 11990.0], [41.7, 11994.0], [41.8, 11998.0], [41.9, 12005.0], [42.0, 12009.0], [42.1, 12011.0], [42.2, 12013.0], [42.3, 12014.0], [42.4, 12019.0], [42.5, 12022.0], [42.6, 12023.0], [42.7, 12028.0], [42.8, 12031.0], [42.9, 12034.0], [43.0, 12040.0], [43.1, 12045.0], [43.2, 12048.0], [43.3, 12051.0], [43.4, 12054.0], [43.5, 12055.0], [43.6, 12061.0], [43.7, 12065.0], [43.8, 12069.0], [43.9, 12072.0], [44.0, 12077.0], [44.1, 12078.0], [44.2, 12081.0], [44.3, 12083.0], [44.4, 12087.0], [44.5, 12089.0], [44.6, 12092.0], [44.7, 12097.0], [44.8, 12100.0], [44.9, 12102.0], [45.0, 12106.0], [45.1, 12109.0], [45.2, 12113.0], [45.3, 12116.0], [45.4, 12119.0], [45.5, 12126.0], [45.6, 12129.0], [45.7, 12131.0], [45.8, 12134.0], [45.9, 12137.0], [46.0, 12140.0], [46.1, 12142.0], [46.2, 12145.0], [46.3, 12148.0], [46.4, 12152.0], [46.5, 12155.0], [46.6, 12158.0], [46.7, 12162.0], [46.8, 12164.0], [46.9, 12165.0], [47.0, 12168.0], [47.1, 12170.0], [47.2, 12173.0], [47.3, 12175.0], [47.4, 12179.0], [47.5, 12181.0], [47.6, 12184.0], [47.7, 12187.0], [47.8, 12191.0], [47.9, 12193.0], [48.0, 12195.0], [48.1, 12199.0], [48.2, 12203.0], [48.3, 12206.0], [48.4, 12210.0], [48.5, 12215.0], [48.6, 12219.0], [48.7, 12221.0], [48.8, 12223.0], [48.9, 12225.0], [49.0, 12229.0], [49.1, 12232.0], [49.2, 12234.0], [49.3, 12237.0], [49.4, 12240.0], [49.5, 12244.0], [49.6, 12248.0], [49.7, 12250.0], [49.8, 12253.0], [49.9, 12255.0], [50.0, 12257.0], [50.1, 12260.0], [50.2, 12264.0], [50.3, 12267.0], [50.4, 12271.0], [50.5, 12273.0], [50.6, 12275.0], [50.7, 12278.0], [50.8, 12281.0], [50.9, 12284.0], [51.0, 12286.0], [51.1, 12287.0], [51.2, 12287.0], [51.3, 12287.0], [51.4, 12288.0], [51.5, 12288.0], [51.6, 12289.0], [51.7, 12291.0], [51.8, 12294.0], [51.9, 12298.0], [52.0, 12301.0], [52.1, 12304.0], [52.2, 12307.0], [52.3, 12309.0], [52.4, 12312.0], [52.5, 12315.0], [52.6, 12318.0], [52.7, 12323.0], [52.8, 12325.0], [52.9, 12326.0], [53.0, 12328.0], [53.1, 12330.0], [53.2, 12333.0], [53.3, 12337.0], [53.4, 12338.0], [53.5, 12340.0], [53.6, 12342.0], [53.7, 12344.0], [53.8, 12347.0], [53.9, 12349.0], [54.0, 12352.0], [54.1, 12354.0], [54.2, 12358.0], [54.3, 12361.0], [54.4, 12363.0], [54.5, 12365.0], [54.6, 12368.0], [54.7, 12370.0], [54.8, 12374.0], [54.9, 12377.0], [55.0, 12380.0], [55.1, 12383.0], [55.2, 12387.0], [55.3, 12391.0], [55.4, 12393.0], [55.5, 12395.0], [55.6, 12400.0], [55.7, 12404.0], [55.8, 12406.0], [55.9, 12408.0], [56.0, 12411.0], [56.1, 12415.0], [56.2, 12420.0], [56.3, 12422.0], [56.4, 12424.0], [56.5, 12428.0], [56.6, 12430.0], [56.7, 12433.0], [56.8, 12436.0], [56.9, 12439.0], [57.0, 12441.0], [57.1, 12445.0], [57.2, 12448.0], [57.3, 12451.0], [57.4, 12452.0], [57.5, 12454.0], [57.6, 12456.0], [57.7, 12460.0], [57.8, 12463.0], [57.9, 12466.0], [58.0, 12468.0], [58.1, 12471.0], [58.2, 12476.0], [58.3, 12479.0], [58.4, 12483.0], [58.5, 12485.0], [58.6, 12488.0], [58.7, 12489.0], [58.8, 12493.0], [58.9, 12494.0], [59.0, 12496.0], [59.1, 12498.0], [59.2, 12500.0], [59.3, 12503.0], [59.4, 12507.0], [59.5, 12509.0], [59.6, 12511.0], [59.7, 12514.0], [59.8, 12517.0], [59.9, 12520.0], [60.0, 12522.0], [60.1, 12526.0], [60.2, 12530.0], [60.3, 12532.0], [60.4, 12534.0], [60.5, 12539.0], [60.6, 12541.0], [60.7, 12543.0], [60.8, 12544.0], [60.9, 12546.0], [61.0, 12548.0], [61.1, 12552.0], [61.2, 12557.0], [61.3, 12561.0], [61.4, 12564.0], [61.5, 12568.0], [61.6, 12569.0], [61.7, 12572.0], [61.8, 12575.0], [61.9, 12576.0], [62.0, 12578.0], [62.1, 12582.0], [62.2, 12585.0], [62.3, 12589.0], [62.4, 12592.0], [62.5, 12596.0], [62.6, 12600.0], [62.7, 12605.0], [62.8, 12608.0], [62.9, 12610.0], [63.0, 12614.0], [63.1, 12617.0], [63.2, 12620.0], [63.3, 12622.0], [63.4, 12626.0], [63.5, 12631.0], [63.6, 12633.0], [63.7, 12638.0], [63.8, 12640.0], [63.9, 12643.0], [64.0, 12646.0], [64.1, 12650.0], [64.2, 12652.0], [64.3, 12654.0], [64.4, 12656.0], [64.5, 12659.0], [64.6, 12662.0], [64.7, 12667.0], [64.8, 12670.0], [64.9, 12672.0], [65.0, 12675.0], [65.1, 12678.0], [65.2, 12680.0], [65.3, 12683.0], [65.4, 12685.0], [65.5, 12687.0], [65.6, 12690.0], [65.7, 12695.0], [65.8, 12701.0], [65.9, 12704.0], [66.0, 12709.0], [66.1, 12713.0], [66.2, 12718.0], [66.3, 12722.0], [66.4, 12726.0], [66.5, 12730.0], [66.6, 12733.0], [66.7, 12738.0], [66.8, 12742.0], [66.9, 12744.0], [67.0, 12747.0], [67.1, 12751.0], [67.2, 12753.0], [67.3, 12757.0], [67.4, 12760.0], [67.5, 12764.0], [67.6, 12768.0], [67.7, 12771.0], [67.8, 12774.0], [67.9, 12777.0], [68.0, 12781.0], [68.1, 12786.0], [68.2, 12791.0], [68.3, 12794.0], [68.4, 12796.0], [68.5, 12799.0], [68.6, 12800.0], [68.7, 12800.0], [68.8, 12801.0], [68.9, 12804.0], [69.0, 12807.0], [69.1, 12810.0], [69.2, 12812.0], [69.3, 12815.0], [69.4, 12821.0], [69.5, 12825.0], [69.6, 12827.0], [69.7, 12834.0], [69.8, 12838.0], [69.9, 12842.0], [70.0, 12846.0], [70.1, 12850.0], [70.2, 12854.0], [70.3, 12856.0], [70.4, 12862.0], [70.5, 12866.0], [70.6, 12871.0], [70.7, 12874.0], [70.8, 12879.0], [70.9, 12882.0], [71.0, 12886.0], [71.1, 12890.0], [71.2, 12892.0], [71.3, 12897.0], [71.4, 12902.0], [71.5, 12906.0], [71.6, 12908.0], [71.7, 12910.0], [71.8, 12917.0], [71.9, 12922.0], [72.0, 12924.0], [72.1, 12928.0], [72.2, 12934.0], [72.3, 12939.0], [72.4, 12944.0], [72.5, 12946.0], [72.6, 12949.0], [72.7, 12955.0], [72.8, 12959.0], [72.9, 12965.0], [73.0, 12970.0], [73.1, 12975.0], [73.2, 12980.0], [73.3, 12988.0], [73.4, 12994.0], [73.5, 12998.0], [73.6, 13004.0], [73.7, 13009.0], [73.8, 13015.0], [73.9, 13017.0], [74.0, 13024.0], [74.1, 13029.0], [74.2, 13032.0], [74.3, 13041.0], [74.4, 13046.0], [74.5, 13050.0], [74.6, 13055.0], [74.7, 13056.0], [74.8, 13063.0], [74.9, 13066.0], [75.0, 13072.0], [75.1, 13079.0], [75.2, 13084.0], [75.3, 13091.0], [75.4, 13096.0], [75.5, 13102.0], [75.6, 13108.0], [75.7, 13115.0], [75.8, 13119.0], [75.9, 13125.0], [76.0, 13134.0], [76.1, 13140.0], [76.2, 13148.0], [76.3, 13157.0], [76.4, 13165.0], [76.5, 13171.0], [76.6, 13175.0], [76.7, 13179.0], [76.8, 13184.0], [76.9, 13190.0], [77.0, 13195.0], [77.1, 13199.0], [77.2, 13204.0], [77.3, 13216.0], [77.4, 13222.0], [77.5, 13229.0], [77.6, 13235.0], [77.7, 13240.0], [77.8, 13244.0], [77.9, 13248.0], [78.0, 13252.0], [78.1, 13260.0], [78.2, 13264.0], [78.3, 13269.0], [78.4, 13277.0], [78.5, 13281.0], [78.6, 13288.0], [78.7, 13293.0], [78.8, 13299.0], [78.9, 13306.0], [79.0, 13307.0], [79.1, 13307.0], [79.2, 13308.0], [79.3, 13308.0], [79.4, 13309.0], [79.5, 13310.0], [79.6, 13310.0], [79.7, 13311.0], [79.8, 13311.0], [79.9, 13311.0], [80.0, 13311.0], [80.1, 13311.0], [80.2, 13311.0], [80.3, 13311.0], [80.4, 13312.0], [80.5, 13312.0], [80.6, 13312.0], [80.7, 13312.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13312.0], [82.3, 13312.0], [82.4, 13312.0], [82.5, 13312.0], [82.6, 13312.0], [82.7, 13312.0], [82.8, 13312.0], [82.9, 13312.0], [83.0, 13313.0], [83.1, 13313.0], [83.2, 13313.0], [83.3, 13313.0], [83.4, 13313.0], [83.5, 13313.0], [83.6, 13315.0], [83.7, 13316.0], [83.8, 13316.0], [83.9, 13316.0], [84.0, 13318.0], [84.1, 13325.0], [84.2, 13329.0], [84.3, 13335.0], [84.4, 13342.0], [84.5, 13345.0], [84.6, 13350.0], [84.7, 13356.0], [84.8, 13360.0], [84.9, 13365.0], [85.0, 13369.0], [85.1, 13377.0], [85.2, 13380.0], [85.3, 13386.0], [85.4, 13390.0], [85.5, 13398.0], [85.6, 13402.0], [85.7, 13410.0], [85.8, 13415.0], [85.9, 13421.0], [86.0, 13425.0], [86.1, 13433.0], [86.2, 13438.0], [86.3, 13444.0], [86.4, 13453.0], [86.5, 13466.0], [86.6, 13471.0], [86.7, 13478.0], [86.8, 13485.0], [86.9, 13492.0], [87.0, 13500.0], [87.1, 13506.0], [87.2, 13511.0], [87.3, 13517.0], [87.4, 13526.0], [87.5, 13536.0], [87.6, 13545.0], [87.7, 13549.0], [87.8, 13556.0], [87.9, 13564.0], [88.0, 13567.0], [88.1, 13568.0], [88.2, 13570.0], [88.3, 13577.0], [88.4, 13585.0], [88.5, 13590.0], [88.6, 13598.0], [88.7, 13611.0], [88.8, 13621.0], [88.9, 13630.0], [89.0, 13635.0], [89.1, 13644.0], [89.2, 13656.0], [89.3, 13662.0], [89.4, 13671.0], [89.5, 13678.0], [89.6, 13692.0], [89.7, 13709.0], [89.8, 13719.0], [89.9, 13726.0], [90.0, 13733.0], [90.1, 13752.0], [90.2, 13763.0], [90.3, 13769.0], [90.4, 13782.0], [90.5, 13793.0], [90.6, 13803.0], [90.7, 13815.0], [90.8, 13819.0], [90.9, 13820.0], [91.0, 13823.0], [91.1, 13823.0], [91.2, 13824.0], [91.3, 13824.0], [91.4, 13824.0], [91.5, 13824.0], [91.6, 13824.0], [91.7, 13824.0], [91.8, 13824.0], [91.9, 13825.0], [92.0, 13827.0], [92.1, 13828.0], [92.2, 13840.0], [92.3, 13857.0], [92.4, 13878.0], [92.5, 13898.0], [92.6, 13915.0], [92.7, 13938.0], [92.8, 13951.0], [92.9, 13977.0], [93.0, 14015.0], [93.1, 14061.0], [93.2, 14080.0], [93.3, 14095.0], [93.4, 14125.0], [93.5, 14159.0], [93.6, 14240.0], [93.7, 14331.0], [93.8, 14332.0], [93.9, 14333.0], [94.0, 14334.0], [94.1, 14335.0], [94.2, 14335.0], [94.3, 14336.0], [94.4, 14336.0], [94.5, 14336.0], [94.6, 14341.0], [94.7, 14393.0], [94.8, 14579.0], [94.9, 14592.0], [95.0, 14595.0], [95.1, 14746.0], [95.2, 14843.0], [95.3, 14847.0], [95.4, 14849.0], [95.5, 15096.0], [95.6, 15104.0], [95.7, 15328.0], [95.8, 15360.0], [95.9, 15551.0], [96.0, 15619.0], [96.1, 15752.0], [96.2, 15909.0], [96.3, 16023.0], [96.4, 16128.0], [96.5, 16384.0], [96.6, 16584.0], [96.7, 16896.0], [96.8, 17180.0], [96.9, 17664.0], [97.0, 18096.0], [97.1, 18682.0], [97.2, 19464.0], [97.3, 20042.0], [97.4, 21188.0], [97.5, 22406.0], [97.6, 25852.0], [97.7, 26368.0], [97.8, 27200.0], [97.9, 29950.0], [98.0, 47492.0], [98.1, 57088.0], [98.2, 61125.0], [98.3, 63817.0], [98.4, 102143.0], [98.5, 105727.0], [98.6, 106239.0], [98.7, 106496.0], [98.8, 107008.0], [98.9, 107264.0], [99.0, 108033.0], [99.1, 111355.0], [99.2, 115198.0], [99.3, 123391.0], [99.4, 125423.0], [99.5, 127744.0], [99.6, 135680.0], [99.7, 153087.0], [99.8, 188420.0], [99.9, 211201.0], [100.0, 227584.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 3.0], [6.7, 576.0], [6.8, 598.0], [6.9, 615.0], [7.0, 620.0], [7.1, 642.0], [7.2, 693.0], [7.3, 714.0], [7.4, 907.0], [7.5, 1089.0], [7.6, 1345.0], [7.7, 1572.0], [7.8, 1972.0], [7.9, 2220.0], [8.0, 2226.0], [8.1, 2322.0], [8.2, 2366.0], [8.3, 2371.0], [8.4, 2518.0], [8.5, 2675.0], [8.6, 2800.0], [8.7, 2806.0], [8.8, 2897.0], [8.9, 2903.0], [9.0, 2965.0], [9.1, 3693.0], [9.2, 4118.0], [9.3, 4132.0], [9.4, 4146.0], [9.5, 4200.0], [9.6, 4248.0], [9.7, 4486.0], [9.8, 4538.0], [9.9, 4660.0], [10.0, 4785.0], [10.1, 4880.0], [10.2, 4920.0], [10.3, 4925.0], [10.4, 5089.0], [10.5, 5338.0], [10.6, 5492.0], [10.7, 5557.0], [10.8, 5566.0], [10.9, 5622.0], [11.0, 5623.0], [11.1, 5905.0], [11.2, 6197.0], [11.3, 6460.0], [11.4, 6801.0], [11.5, 6986.0], [11.6, 7061.0], [11.7, 7077.0], [11.8, 7130.0], [11.9, 7163.0], [12.0, 7164.0], [12.1, 7164.0], [12.2, 7164.0], [12.3, 7165.0], [12.4, 7166.0], [12.5, 7166.0], [12.6, 7167.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7172.0], [15.2, 7172.0], [15.3, 7179.0], [15.4, 7181.0], [15.5, 7322.0], [15.6, 7420.0], [15.7, 7420.0], [15.8, 7420.0], [15.9, 7420.0], [16.0, 7420.0], [16.1, 7420.0], [16.2, 7422.0], [16.3, 7423.0], [16.4, 7423.0], [16.5, 7423.0], [16.6, 7423.0], [16.7, 7423.0], [16.8, 7423.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7425.0], [18.7, 7425.0], [18.8, 7425.0], [18.9, 7427.0], [19.0, 7428.0], [19.1, 7479.0], [19.2, 7583.0], [19.3, 7674.0], [19.4, 7676.0], [19.5, 7676.0], [19.6, 7678.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7680.0], [21.8, 7680.0], [21.9, 7680.0], [22.0, 7680.0], [22.1, 7680.0], [22.2, 7680.0], [22.3, 7680.0], [22.4, 7680.0], [22.5, 7681.0], [22.6, 7683.0], [22.7, 7683.0], [22.8, 7683.0], [22.9, 7684.0], [23.0, 7684.0], [23.1, 7684.0], [23.2, 7685.0], [23.3, 7685.0], [23.4, 7930.0], [23.5, 7930.0], [23.6, 7932.0], [23.7, 7932.0], [23.8, 7932.0], [23.9, 7935.0], [24.0, 7935.0], [24.1, 7935.0], [24.2, 7936.0], [24.3, 7936.0], [24.4, 7936.0], [24.5, 7936.0], [24.6, 7936.0], [24.7, 7936.0], [24.8, 7936.0], [24.9, 7936.0], [25.0, 7936.0], [25.1, 7936.0], [25.2, 7936.0], [25.3, 7936.0], [25.4, 7936.0], [25.5, 7937.0], [25.6, 7939.0], [25.7, 7940.0], [25.8, 7940.0], [25.9, 7940.0], [26.0, 7940.0], [26.1, 7940.0], [26.2, 7976.0], [26.3, 8176.0], [26.4, 8188.0], [26.5, 8190.0], [26.6, 8191.0], [26.7, 8191.0], [26.8, 8191.0], [26.9, 8191.0], [27.0, 8191.0], [27.1, 8191.0], [27.2, 8191.0], [27.3, 8192.0], [27.4, 8192.0], [27.5, 8192.0], [27.6, 8192.0], [27.7, 8192.0], [27.8, 8192.0], [27.9, 8192.0], [28.0, 8192.0], [28.1, 8192.0], [28.2, 8192.0], [28.3, 8192.0], [28.4, 8192.0], [28.5, 8193.0], [28.6, 8196.0], [28.7, 8196.0], [28.8, 8196.0], [28.9, 8230.0], [29.0, 8444.0], [29.1, 8446.0], [29.2, 8447.0], [29.3, 8448.0], [29.4, 8449.0], [29.5, 8619.0], [29.6, 8700.0], [29.7, 8700.0], [29.8, 8701.0], [29.9, 8702.0], [30.0, 8703.0], [30.1, 8703.0], [30.2, 8703.0], [30.3, 8703.0], [30.4, 8703.0], [30.5, 8704.0], [30.6, 8704.0], [30.7, 8704.0], [30.8, 8704.0], [30.9, 8704.0], [31.0, 8704.0], [31.1, 8704.0], [31.2, 8704.0], [31.3, 8704.0], [31.4, 8704.0], [31.5, 8704.0], [31.6, 8704.0], [31.7, 8704.0], [31.8, 8704.0], [31.9, 8704.0], [32.0, 8704.0], [32.1, 8705.0], [32.2, 8708.0], [32.3, 8708.0], [32.4, 8708.0], [32.5, 8708.0], [32.6, 8708.0], [32.7, 8953.0], [32.8, 8956.0], [32.9, 8959.0], [33.0, 8959.0], [33.1, 8959.0], [33.2, 8960.0], [33.3, 8960.0], [33.4, 8960.0], [33.5, 8963.0], [33.6, 9211.0], [33.7, 9212.0], [33.8, 9212.0], [33.9, 9212.0], [34.0, 9212.0], [34.1, 9213.0], [34.2, 9214.0], [34.3, 9214.0], [34.4, 9215.0], [34.5, 9215.0], [34.6, 9215.0], [34.7, 9215.0], [34.8, 9215.0], [34.9, 9215.0], [35.0, 9215.0], [35.1, 9215.0], [35.2, 9216.0], [35.3, 9216.0], [35.4, 9216.0], [35.5, 9216.0], [35.6, 9216.0], [35.7, 9216.0], [35.8, 9216.0], [35.9, 9216.0], [36.0, 9217.0], [36.1, 9220.0], [36.2, 9249.0], [36.3, 9299.0], [36.4, 9426.0], [36.5, 9466.0], [36.6, 9468.0], [36.7, 9471.0], [36.8, 9471.0], [36.9, 9471.0], [37.0, 9472.0], [37.1, 9472.0], [37.2, 9472.0], [37.3, 9472.0], [37.4, 9476.0], [37.5, 9543.0], [37.6, 9622.0], [37.7, 9655.0], [37.8, 9722.0], [37.9, 9723.0], [38.0, 9724.0], [38.1, 9726.0], [38.2, 9726.0], [38.3, 9727.0], [38.4, 9727.0], [38.5, 9728.0], [38.6, 9728.0], [38.7, 9728.0], [38.8, 9728.0], [38.9, 9728.0], [39.0, 9728.0], [39.1, 9728.0], [39.2, 9728.0], [39.3, 9728.0], [39.4, 9728.0], [39.5, 9731.0], [39.6, 9731.0], [39.7, 9731.0], [39.8, 9732.0], [39.9, 9776.0], [40.0, 9980.0], [40.1, 9981.0], [40.2, 9983.0], [40.3, 9983.0], [40.4, 9983.0], [40.5, 9983.0], [40.6, 9984.0], [40.7, 9984.0], [40.8, 9984.0], [40.9, 9984.0], [41.0, 9984.0], [41.1, 9984.0], [41.2, 9988.0], [41.3, 10235.0], [41.4, 10238.0], [41.5, 10239.0], [41.6, 10239.0], [41.7, 10239.0], [41.8, 10239.0], [41.9, 10240.0], [42.0, 10240.0], [42.1, 10240.0], [42.2, 10240.0], [42.3, 10240.0], [42.4, 10240.0], [42.5, 10240.0], [42.6, 10240.0], [42.7, 10240.0], [42.8, 10240.0], [42.9, 10240.0], [43.0, 10240.0], [43.1, 10240.0], [43.2, 10242.0], [43.3, 10244.0], [43.4, 10286.0], [43.5, 10486.0], [43.6, 10496.0], [43.7, 10506.0], [43.8, 10611.0], [43.9, 10672.0], [44.0, 10747.0], [44.1, 10748.0], [44.2, 10751.0], [44.3, 10752.0], [44.4, 10752.0], [44.5, 10805.0], [44.6, 10831.0], [44.7, 10838.0], [44.8, 10863.0], [44.9, 10893.0], [45.0, 10922.0], [45.1, 10931.0], [45.2, 10943.0], [45.3, 10973.0], [45.4, 11005.0], [45.5, 11007.0], [45.6, 11007.0], [45.7, 11007.0], [45.8, 11008.0], [45.9, 11008.0], [46.0, 11008.0], [46.1, 11008.0], [46.2, 11008.0], [46.3, 11011.0], [46.4, 11029.0], [46.5, 11053.0], [46.6, 11067.0], [46.7, 11115.0], [46.8, 11124.0], [46.9, 11153.0], [47.0, 11155.0], [47.1, 11169.0], [47.2, 11209.0], [47.3, 11223.0], [47.4, 11244.0], [47.5, 11245.0], [47.6, 11254.0], [47.7, 11263.0], [47.8, 11263.0], [47.9, 11264.0], [48.0, 11264.0], [48.1, 11264.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11264.0], [48.5, 11264.0], [48.6, 11268.0], [48.7, 11272.0], [48.8, 11280.0], [48.9, 11301.0], [49.0, 11303.0], [49.1, 11307.0], [49.2, 11325.0], [49.3, 11336.0], [49.4, 11343.0], [49.5, 11367.0], [49.6, 11392.0], [49.7, 11406.0], [49.8, 11415.0], [49.9, 11432.0], [50.0, 11454.0], [50.1, 11469.0], [50.2, 11480.0], [50.3, 11480.0], [50.4, 11492.0], [50.5, 11509.0], [50.6, 11510.0], [50.7, 11512.0], [50.8, 11516.0], [50.9, 11519.0], [51.0, 11520.0], [51.1, 11521.0], [51.2, 11521.0], [51.3, 11542.0], [51.4, 11551.0], [51.5, 11558.0], [51.6, 11560.0], [51.7, 11574.0], [51.8, 11585.0], [51.9, 11589.0], [52.0, 11602.0], [52.1, 11604.0], [52.2, 11616.0], [52.3, 11651.0], [52.4, 11658.0], [52.5, 11683.0], [52.6, 11683.0], [52.7, 11696.0], [52.8, 11702.0], [52.9, 11719.0], [53.0, 11734.0], [53.1, 11734.0], [53.2, 11758.0], [53.3, 11768.0], [53.4, 11772.0], [53.5, 11774.0], [53.6, 11775.0], [53.7, 11775.0], [53.8, 11775.0], [53.9, 11776.0], [54.0, 11776.0], [54.1, 11776.0], [54.2, 11776.0], [54.3, 11776.0], [54.4, 11776.0], [54.5, 11776.0], [54.6, 11779.0], [54.7, 11780.0], [54.8, 11780.0], [54.9, 11780.0], [55.0, 11804.0], [55.1, 11828.0], [55.2, 11842.0], [55.3, 11849.0], [55.4, 11849.0], [55.5, 11855.0], [55.6, 11897.0], [55.7, 11903.0], [55.8, 11927.0], [55.9, 11931.0], [56.0, 11957.0], [56.1, 11965.0], [56.2, 11985.0], [56.3, 11996.0], [56.4, 12036.0], [56.5, 12048.0], [56.6, 12053.0], [56.7, 12090.0], [56.8, 12097.0], [56.9, 12106.0], [57.0, 12128.0], [57.1, 12138.0], [57.2, 12158.0], [57.3, 12164.0], [57.4, 12175.0], [57.5, 12211.0], [57.6, 12238.0], [57.7, 12244.0], [57.8, 12248.0], [57.9, 12263.0], [58.0, 12284.0], [58.1, 12286.0], [58.2, 12287.0], [58.3, 12287.0], [58.4, 12287.0], [58.5, 12287.0], [58.6, 12287.0], [58.7, 12288.0], [58.8, 12288.0], [58.9, 12288.0], [59.0, 12292.0], [59.1, 12300.0], [59.2, 12303.0], [59.3, 12310.0], [59.4, 12343.0], [59.5, 12351.0], [59.6, 12360.0], [59.7, 12389.0], [59.8, 12416.0], [59.9, 12468.0], [60.0, 12540.0], [60.1, 12543.0], [60.2, 12544.0], [60.3, 12544.0], [60.4, 12544.0], [60.5, 12544.0], [60.6, 12548.0], [60.7, 12569.0], [60.8, 12621.0], [60.9, 12629.0], [61.0, 12633.0], [61.1, 12717.0], [61.2, 12730.0], [61.3, 12798.0], [61.4, 12799.0], [61.5, 12800.0], [61.6, 12800.0], [61.7, 12800.0], [61.8, 12800.0], [61.9, 12800.0], [62.0, 12804.0], [62.1, 12811.0], [62.2, 12832.0], [62.3, 12861.0], [62.4, 12864.0], [62.5, 12907.0], [62.6, 12922.0], [62.7, 12948.0], [62.8, 12954.0], [62.9, 12976.0], [63.0, 13055.0], [63.1, 13055.0], [63.2, 13067.0], [63.3, 13074.0], [63.4, 13098.0], [63.5, 13168.0], [63.6, 13198.0], [63.7, 13212.0], [63.8, 13219.0], [63.9, 13246.0], [64.0, 13292.0], [64.1, 13306.0], [64.2, 13307.0], [64.3, 13307.0], [64.4, 13307.0], [64.5, 13307.0], [64.6, 13307.0], [64.7, 13308.0], [64.8, 13308.0], [64.9, 13308.0], [65.0, 13308.0], [65.1, 13308.0], [65.2, 13308.0], [65.3, 13308.0], [65.4, 13308.0], [65.5, 13310.0], [65.6, 13310.0], [65.7, 13310.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13314.0], [77.1, 13314.0], [77.2, 13315.0], [77.3, 13315.0], [77.4, 13315.0], [77.5, 13315.0], [77.6, 13316.0], [77.7, 13316.0], [77.8, 13316.0], [77.9, 13316.0], [78.0, 13316.0], [78.1, 13316.0], [78.2, 13316.0], [78.3, 13316.0], [78.4, 13316.0], [78.5, 13335.0], [78.6, 13368.0], [78.7, 13372.0], [78.8, 13426.0], [78.9, 13446.0], [79.0, 13471.0], [79.1, 13492.0], [79.2, 13514.0], [79.3, 13523.0], [79.4, 13562.0], [79.5, 13564.0], [79.6, 13564.0], [79.7, 13564.0], [79.8, 13568.0], [79.9, 13568.0], [80.0, 13568.0], [80.1, 13572.0], [80.2, 13592.0], [80.3, 13699.0], [80.4, 13744.0], [80.5, 13758.0], [80.6, 13790.0], [80.7, 13819.0], [80.8, 13820.0], [80.9, 13820.0], [81.0, 13820.0], [81.1, 13820.0], [81.2, 13820.0], [81.3, 13821.0], [81.4, 13822.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13823.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13825.0], [83.9, 13825.0], [84.0, 13826.0], [84.1, 13827.0], [84.2, 13827.0], [84.3, 13828.0], [84.4, 13828.0], [84.5, 13828.0], [84.6, 13828.0], [84.7, 13828.0], [84.8, 13915.0], [84.9, 13976.0], [85.0, 14078.0], [85.1, 14080.0], [85.2, 14080.0], [85.3, 14099.0], [85.4, 14172.0], [85.5, 14241.0], [85.6, 14310.0], [85.7, 14331.0], [85.8, 14331.0], [85.9, 14332.0], [86.0, 14332.0], [86.1, 14332.0], [86.2, 14334.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14337.0], [87.5, 14337.0], [87.6, 14340.0], [87.7, 14340.0], [87.8, 14384.0], [87.9, 14447.0], [88.0, 14497.0], [88.1, 14576.0], [88.2, 14588.0], [88.3, 14591.0], [88.4, 14591.0], [88.5, 14591.0], [88.6, 14591.0], [88.7, 14592.0], [88.8, 14592.0], [88.9, 14592.0], [89.0, 14596.0], [89.1, 14596.0], [89.2, 14632.0], [89.3, 14749.0], [89.4, 14847.0], [89.5, 14847.0], [89.6, 14848.0], [89.7, 14848.0], [89.8, 14848.0], [89.9, 14848.0], [90.0, 14919.0], [90.1, 14984.0], [90.2, 15099.0], [90.3, 15099.0], [90.4, 15100.0], [90.5, 15103.0], [90.6, 15103.0], [90.7, 15105.0], [90.8, 15355.0], [90.9, 15360.0], [91.0, 15360.0], [91.1, 15360.0], [91.2, 15436.0], [91.3, 15959.0], [91.4, 16199.0], [91.5, 16383.0], [91.6, 16385.0], [91.7, 16387.0], [91.8, 16639.0], [91.9, 16729.0], [92.0, 16792.0], [92.1, 16896.0], [92.2, 17100.0], [92.3, 17150.0], [92.4, 17152.0], [92.5, 17155.0], [92.6, 17407.0], [92.7, 17407.0], [92.8, 17595.0], [92.9, 17663.0], [93.0, 17664.0], [93.1, 17664.0], [93.2, 17820.0], [93.3, 18261.0], [93.4, 18693.0], [93.5, 19200.0], [93.6, 19961.0], [93.7, 20260.0], [93.8, 24176.0], [93.9, 25596.0], [94.0, 26360.0], [94.1, 26367.0], [94.2, 26416.0], [94.3, 26883.0], [94.4, 27647.0], [94.5, 37840.0], [94.6, 54016.0], [94.7, 54031.0], [94.8, 59924.0], [94.9, 59925.0], [95.0, 60746.0], [95.1, 102143.0], [95.2, 102143.0], [95.3, 102143.0], [95.4, 102143.0], [95.5, 105470.0], [95.6, 105472.0], [95.7, 105472.0], [95.8, 105727.0], [95.9, 105728.0], [96.0, 105728.0], [96.1, 106239.0], [96.2, 106240.0], [96.3, 106240.0], [96.4, 106495.0], [96.5, 106748.0], [96.6, 107007.0], [96.7, 107008.0], [96.8, 107008.0], [96.9, 107260.0], [97.0, 108031.0], [97.1, 108286.0], [97.2, 111104.0], [97.3, 111104.0], [97.4, 111107.0], [97.5, 112200.0], [97.6, 113915.0], [97.7, 114300.0], [97.8, 114382.0], [97.9, 114435.0], [98.0, 123391.0], [98.1, 124159.0], [98.2, 124159.0], [98.3, 127747.0], [98.4, 131324.0], [98.5, 135679.0], [98.6, 135679.0], [98.7, 135680.0], [98.8, 140545.0], [98.9, 147712.0], [99.0, 148479.0], [99.1, 151807.0], [99.2, 188418.0], [99.3, 188420.0], [99.4, 205084.0], [99.5, 211199.0], [99.6, 211200.0], [99.7, 211200.0], [99.8, 211201.0], [99.9, 222975.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 3.0], [6.3, 6.0], [6.4, 9.0], [6.5, 23.0], [6.6, 30.0], [6.7, 33.0], [6.8, 35.0], [6.9, 37.0], [7.0, 38.0], [7.1, 39.0], [7.2, 90.0], [7.3, 220.0], [7.4, 335.0], [7.5, 463.0], [7.6, 591.0], [7.7, 594.0], [7.8, 782.0], [7.9, 1049.0], [8.0, 1418.0], [8.1, 1637.0], [8.2, 1694.0], [8.3, 1940.0], [8.4, 1951.0], [8.5, 2073.0], [8.6, 2195.0], [8.7, 2256.0], [8.8, 2411.0], [8.9, 2646.0], [9.0, 2945.0], [9.1, 3107.0], [9.2, 3252.0], [9.3, 3352.0], [9.4, 3378.0], [9.5, 3488.0], [9.6, 3658.0], [9.7, 3688.0], [9.8, 3884.0], [9.9, 4013.0], [10.0, 4042.0], [10.1, 4137.0], [10.2, 4239.0], [10.3, 4315.0], [10.4, 4398.0], [10.5, 4584.0], [10.6, 4913.0], [10.7, 5006.0], [10.8, 5038.0], [10.9, 5226.0], [11.0, 5259.0], [11.1, 6112.0], [11.2, 6194.0], [11.3, 6286.0], [11.4, 6366.0], [11.5, 6394.0], [11.6, 6419.0], [11.7, 6502.0], [11.8, 6544.0], [11.9, 6747.0], [12.0, 6898.0], [12.1, 6981.0], [12.2, 7075.0], [12.3, 7077.0], [12.4, 7119.0], [12.5, 7163.0], [12.6, 7164.0], [12.7, 7165.0], [12.8, 7165.0], [12.9, 7166.0], [13.0, 7166.0], [13.1, 7166.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7169.0], [15.2, 7169.0], [15.3, 7169.0], [15.4, 7220.0], [15.5, 7242.0], [15.6, 7258.0], [15.7, 7331.0], [15.8, 7368.0], [15.9, 7384.0], [16.0, 7419.0], [16.1, 7419.0], [16.2, 7420.0], [16.3, 7420.0], [16.4, 7421.0], [16.5, 7421.0], [16.6, 7423.0], [16.7, 7423.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7425.0], [18.8, 7426.0], [18.9, 7428.0], [19.0, 7492.0], [19.1, 7558.0], [19.2, 7568.0], [19.3, 7674.0], [19.4, 7676.0], [19.5, 7676.0], [19.6, 7676.0], [19.7, 7676.0], [19.8, 7677.0], [19.9, 7678.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7679.0], [20.6, 7679.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7681.0], [21.7, 7681.0], [21.8, 7683.0], [21.9, 7684.0], [22.0, 7684.0], [22.1, 7684.0], [22.2, 7696.0], [22.3, 7773.0], [22.4, 7818.0], [22.5, 7864.0], [22.6, 7913.0], [22.7, 7932.0], [22.8, 7932.0], [22.9, 7932.0], [23.0, 7935.0], [23.1, 7935.0], [23.2, 7935.0], [23.3, 7936.0], [23.4, 7936.0], [23.5, 7936.0], [23.6, 7936.0], [23.7, 7936.0], [23.8, 7936.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7936.0], [24.3, 7936.0], [24.4, 7936.0], [24.5, 7936.0], [24.6, 7936.0], [24.7, 7936.0], [24.8, 7937.0], [24.9, 7937.0], [25.0, 7939.0], [25.1, 7940.0], [25.2, 7940.0], [25.3, 7969.0], [25.4, 8011.0], [25.5, 8031.0], [25.6, 8067.0], [25.7, 8099.0], [25.8, 8186.0], [25.9, 8190.0], [26.0, 8190.0], [26.1, 8190.0], [26.2, 8191.0], [26.3, 8191.0], [26.4, 8191.0], [26.5, 8192.0], [26.6, 8192.0], [26.7, 8192.0], [26.8, 8192.0], [26.9, 8192.0], [27.0, 8193.0], [27.1, 8194.0], [27.2, 8196.0], [27.3, 8251.0], [27.4, 8434.0], [27.5, 8443.0], [27.6, 8443.0], [27.7, 8447.0], [27.8, 8447.0], [27.9, 8448.0], [28.0, 8448.0], [28.1, 8449.0], [28.2, 8577.0], [28.3, 8577.0], [28.4, 8612.0], [28.5, 8640.0], [28.6, 8657.0], [28.7, 8700.0], [28.8, 8700.0], [28.9, 8701.0], [29.0, 8702.0], [29.1, 8703.0], [29.2, 8703.0], [29.3, 8703.0], [29.4, 8703.0], [29.5, 8703.0], [29.6, 8703.0], [29.7, 8703.0], [29.8, 8703.0], [29.9, 8704.0], [30.0, 8704.0], [30.1, 8704.0], [30.2, 8704.0], [30.3, 8704.0], [30.4, 8704.0], [30.5, 8704.0], [30.6, 8704.0], [30.7, 8704.0], [30.8, 8704.0], [30.9, 8704.0], [31.0, 8704.0], [31.1, 8704.0], [31.2, 8704.0], [31.3, 8704.0], [31.4, 8704.0], [31.5, 8704.0], [31.6, 8705.0], [31.7, 8705.0], [31.8, 8705.0], [31.9, 8705.0], [32.0, 8707.0], [32.1, 8707.0], [32.2, 8708.0], [32.3, 8708.0], [32.4, 8722.0], [32.5, 8737.0], [32.6, 8767.0], [32.7, 8779.0], [32.8, 8787.0], [32.9, 8803.0], [33.0, 8819.0], [33.1, 8888.0], [33.2, 8912.0], [33.3, 8956.0], [33.4, 8958.0], [33.5, 8960.0], [33.6, 8960.0], [33.7, 8960.0], [33.8, 8960.0], [33.9, 8960.0], [34.0, 8964.0], [34.1, 8984.0], [34.2, 9069.0], [34.3, 9149.0], [34.4, 9156.0], [34.5, 9212.0], [34.6, 9214.0], [34.7, 9214.0], [34.8, 9215.0], [34.9, 9215.0], [35.0, 9215.0], [35.1, 9215.0], [35.2, 9215.0], [35.3, 9215.0], [35.4, 9216.0], [35.5, 9216.0], [35.6, 9216.0], [35.7, 9216.0], [35.8, 9216.0], [35.9, 9216.0], [36.0, 9216.0], [36.1, 9216.0], [36.2, 9216.0], [36.3, 9216.0], [36.4, 9216.0], [36.5, 9216.0], [36.6, 9216.0], [36.7, 9216.0], [36.8, 9216.0], [36.9, 9216.0], [37.0, 9217.0], [37.1, 9219.0], [37.2, 9219.0], [37.3, 9220.0], [37.4, 9239.0], [37.5, 9243.0], [37.6, 9270.0], [37.7, 9295.0], [37.8, 9325.0], [37.9, 9386.0], [38.0, 9395.0], [38.1, 9471.0], [38.2, 9471.0], [38.3, 9472.0], [38.4, 9472.0], [38.5, 9472.0], [38.6, 9472.0], [38.7, 9476.0], [38.8, 9656.0], [38.9, 9677.0], [39.0, 9714.0], [39.1, 9724.0], [39.2, 9724.0], [39.3, 9727.0], [39.4, 9727.0], [39.5, 9727.0], [39.6, 9728.0], [39.7, 9728.0], [39.8, 9728.0], [39.9, 9728.0], [40.0, 9728.0], [40.1, 9728.0], [40.2, 9728.0], [40.3, 9728.0], [40.4, 9728.0], [40.5, 9728.0], [40.6, 9728.0], [40.7, 9728.0], [40.8, 9728.0], [40.9, 9731.0], [41.0, 9731.0], [41.1, 9732.0], [41.2, 9775.0], [41.3, 9795.0], [41.4, 9878.0], [41.5, 9914.0], [41.6, 9983.0], [41.7, 9983.0], [41.8, 9983.0], [41.9, 9983.0], [42.0, 9984.0], [42.1, 9984.0], [42.2, 9984.0], [42.3, 9984.0], [42.4, 9984.0], [42.5, 9986.0], [42.6, 10078.0], [42.7, 10182.0], [42.8, 10188.0], [42.9, 10202.0], [43.0, 10236.0], [43.1, 10238.0], [43.2, 10239.0], [43.3, 10239.0], [43.4, 10239.0], [43.5, 10240.0], [43.6, 10240.0], [43.7, 10240.0], [43.8, 10240.0], [43.9, 10240.0], [44.0, 10240.0], [44.1, 10241.0], [44.2, 10244.0], [44.3, 10244.0], [44.4, 10244.0], [44.5, 10245.0], [44.6, 10255.0], [44.7, 10260.0], [44.8, 10327.0], [44.9, 10407.0], [45.0, 10464.0], [45.1, 10465.0], [45.2, 10492.0], [45.3, 10495.0], [45.4, 10496.0], [45.5, 10568.0], [45.6, 10575.0], [45.7, 10593.0], [45.8, 10607.0], [45.9, 10611.0], [46.0, 10629.0], [46.1, 10649.0], [46.2, 10708.0], [46.3, 10737.0], [46.4, 10751.0], [46.5, 10752.0], [46.6, 10756.0], [46.7, 10783.0], [46.8, 10797.0], [46.9, 10821.0], [47.0, 10852.0], [47.1, 10864.0], [47.2, 10884.0], [47.3, 10889.0], [47.4, 10898.0], [47.5, 10901.0], [47.6, 10909.0], [47.7, 10924.0], [47.8, 10938.0], [47.9, 10943.0], [48.0, 10985.0], [48.1, 10986.0], [48.2, 11004.0], [48.3, 11004.0], [48.4, 11007.0], [48.5, 11008.0], [48.6, 11008.0], [48.7, 11008.0], [48.8, 11008.0], [48.9, 11008.0], [49.0, 11008.0], [49.1, 11009.0], [49.2, 11017.0], [49.3, 11030.0], [49.4, 11033.0], [49.5, 11040.0], [49.6, 11049.0], [49.7, 11052.0], [49.8, 11069.0], [49.9, 11132.0], [50.0, 11139.0], [50.1, 11145.0], [50.2, 11158.0], [50.3, 11168.0], [50.4, 11176.0], [50.5, 11193.0], [50.6, 11237.0], [50.7, 11247.0], [50.8, 11258.0], [50.9, 11262.0], [51.0, 11263.0], [51.1, 11263.0], [51.2, 11263.0], [51.3, 11264.0], [51.4, 11264.0], [51.5, 11264.0], [51.6, 11264.0], [51.7, 11264.0], [51.8, 11264.0], [51.9, 11264.0], [52.0, 11264.0], [52.1, 11264.0], [52.2, 11268.0], [52.3, 11274.0], [52.4, 11319.0], [52.5, 11329.0], [52.6, 11337.0], [52.7, 11339.0], [52.8, 11358.0], [52.9, 11362.0], [53.0, 11416.0], [53.1, 11421.0], [53.2, 11443.0], [53.3, 11464.0], [53.4, 11477.0], [53.5, 11481.0], [53.6, 11482.0], [53.7, 11483.0], [53.8, 11493.0], [53.9, 11510.0], [54.0, 11519.0], [54.1, 11519.0], [54.2, 11520.0], [54.3, 11520.0], [54.4, 11526.0], [54.5, 11542.0], [54.6, 11555.0], [54.7, 11574.0], [54.8, 11587.0], [54.9, 11622.0], [55.0, 11654.0], [55.1, 11676.0], [55.2, 11685.0], [55.3, 11692.0], [55.4, 11699.0], [55.5, 11727.0], [55.6, 11749.0], [55.7, 11772.0], [55.8, 11772.0], [55.9, 11775.0], [56.0, 11776.0], [56.1, 11776.0], [56.2, 11776.0], [56.3, 11776.0], [56.4, 11776.0], [56.5, 11777.0], [56.6, 11780.0], [56.7, 11780.0], [56.8, 11807.0], [56.9, 11843.0], [57.0, 11873.0], [57.1, 11976.0], [57.2, 12014.0], [57.3, 12031.0], [57.4, 12032.0], [57.5, 12043.0], [57.6, 12077.0], [57.7, 12093.0], [57.8, 12127.0], [57.9, 12232.0], [58.0, 12250.0], [58.1, 12253.0], [58.2, 12287.0], [58.3, 12287.0], [58.4, 12287.0], [58.5, 12287.0], [58.6, 12287.0], [58.7, 12288.0], [58.8, 12288.0], [58.9, 12288.0], [59.0, 12288.0], [59.1, 12288.0], [59.2, 12289.0], [59.3, 12320.0], [59.4, 12336.0], [59.5, 12399.0], [59.6, 12409.0], [59.7, 12411.0], [59.8, 12418.0], [59.9, 12438.0], [60.0, 12462.0], [60.1, 12492.0], [60.2, 12540.0], [60.3, 12543.0], [60.4, 12543.0], [60.5, 12544.0], [60.6, 12544.0], [60.7, 12548.0], [60.8, 12582.0], [60.9, 12714.0], [61.0, 12783.0], [61.1, 12796.0], [61.2, 12798.0], [61.3, 12799.0], [61.4, 12799.0], [61.5, 12800.0], [61.6, 12800.0], [61.7, 12800.0], [61.8, 12800.0], [61.9, 12800.0], [62.0, 12801.0], [62.1, 12801.0], [62.2, 12881.0], [62.3, 13060.0], [62.4, 13149.0], [62.5, 13168.0], [62.6, 13193.0], [62.7, 13204.0], [62.8, 13209.0], [62.9, 13218.0], [63.0, 13222.0], [63.1, 13234.0], [63.2, 13246.0], [63.3, 13250.0], [63.4, 13253.0], [63.5, 13256.0], [63.6, 13265.0], [63.7, 13276.0], [63.8, 13283.0], [63.9, 13289.0], [64.0, 13298.0], [64.1, 13304.0], [64.2, 13304.0], [64.3, 13307.0], [64.4, 13307.0], [64.5, 13307.0], [64.6, 13307.0], [64.7, 13308.0], [64.8, 13308.0], [64.9, 13308.0], [65.0, 13308.0], [65.1, 13308.0], [65.2, 13308.0], [65.3, 13308.0], [65.4, 13308.0], [65.5, 13308.0], [65.6, 13309.0], [65.7, 13309.0], [65.8, 13309.0], [65.9, 13310.0], [66.0, 13310.0], [66.1, 13310.0], [66.2, 13310.0], [66.3, 13310.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13315.0], [75.2, 13315.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13316.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13326.0], [76.3, 13343.0], [76.4, 13344.0], [76.5, 13346.0], [76.6, 13353.0], [76.7, 13359.0], [76.8, 13371.0], [76.9, 13384.0], [77.0, 13392.0], [77.1, 13395.0], [77.2, 13407.0], [77.3, 13456.0], [77.4, 13471.0], [77.5, 13515.0], [77.6, 13565.0], [77.7, 13567.0], [77.8, 13567.0], [77.9, 13567.0], [78.0, 13568.0], [78.1, 13569.0], [78.2, 13572.0], [78.3, 13616.0], [78.4, 13675.0], [78.5, 13719.0], [78.6, 13760.0], [78.7, 13789.0], [78.8, 13819.0], [78.9, 13820.0], [79.0, 13820.0], [79.1, 13821.0], [79.2, 13821.0], [79.3, 13822.0], [79.4, 13822.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13825.0], [81.1, 13825.0], [81.2, 13825.0], [81.3, 13826.0], [81.4, 13827.0], [81.5, 13828.0], [81.6, 13828.0], [81.7, 13828.0], [81.8, 13828.0], [81.9, 13828.0], [82.0, 13857.0], [82.1, 13869.0], [82.2, 13905.0], [82.3, 13936.0], [82.4, 13988.0], [82.5, 14016.0], [82.6, 14079.0], [82.7, 14080.0], [82.8, 14158.0], [82.9, 14209.0], [83.0, 14241.0], [83.1, 14305.0], [83.2, 14319.0], [83.3, 14331.0], [83.4, 14332.0], [83.5, 14332.0], [83.6, 14332.0], [83.7, 14332.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14337.0], [85.0, 14338.0], [85.1, 14340.0], [85.2, 14362.0], [85.3, 14402.0], [85.4, 14449.0], [85.5, 14468.0], [85.6, 14490.0], [85.7, 14556.0], [85.8, 14588.0], [85.9, 14591.0], [86.0, 14591.0], [86.1, 14592.0], [86.2, 14592.0], [86.3, 14592.0], [86.4, 14593.0], [86.5, 14596.0], [86.6, 14596.0], [86.7, 14613.0], [86.8, 14633.0], [86.9, 14669.0], [87.0, 14752.0], [87.1, 14802.0], [87.2, 14847.0], [87.3, 14848.0], [87.4, 14848.0], [87.5, 14849.0], [87.6, 14903.0], [87.7, 15104.0], [87.8, 15180.0], [87.9, 15298.0], [88.0, 15359.0], [88.1, 15360.0], [88.2, 15360.0], [88.3, 15364.0], [88.4, 15449.0], [88.5, 15612.0], [88.6, 15615.0], [88.7, 15680.0], [88.8, 15876.0], [88.9, 15977.0], [89.0, 16128.0], [89.1, 16352.0], [89.2, 16383.0], [89.3, 16385.0], [89.4, 16385.0], [89.5, 16387.0], [89.6, 16473.0], [89.7, 16639.0], [89.8, 17028.0], [89.9, 17152.0], [90.0, 17152.0], [90.1, 17156.0], [90.2, 17479.0], [90.3, 17662.0], [90.4, 18149.0], [90.5, 18538.0], [90.6, 18782.0], [90.7, 18918.0], [90.8, 19200.0], [90.9, 19200.0], [91.0, 19632.0], [91.1, 21525.0], [91.2, 22182.0], [91.3, 23229.0], [91.4, 24471.0], [91.5, 25596.0], [91.6, 25647.0], [91.7, 26296.0], [91.8, 26367.0], [91.9, 26382.0], [92.0, 26744.0], [92.1, 27532.0], [92.2, 29765.0], [92.3, 33366.0], [92.4, 37179.0], [92.5, 38448.0], [92.6, 39819.0], [92.7, 43727.0], [92.8, 45711.0], [92.9, 46352.0], [93.0, 52597.0], [93.1, 53596.0], [93.2, 53791.0], [93.3, 54264.0], [93.4, 54268.0], [93.5, 54272.0], [93.6, 63554.0], [93.7, 69111.0], [93.8, 69928.0], [93.9, 74584.0], [94.0, 77402.0], [94.1, 81870.0], [94.2, 90735.0], [94.3, 93928.0], [94.4, 100785.0], [94.5, 102142.0], [94.6, 105403.0], [94.7, 105472.0], [94.8, 105728.0], [94.9, 105984.0], [95.0, 106058.0], [95.1, 106205.0], [95.2, 106239.0], [95.3, 106240.0], [95.4, 106244.0], [95.5, 106402.0], [95.6, 106495.0], [95.7, 106496.0], [95.8, 106590.0], [95.9, 106675.0], [96.0, 106828.0], [96.1, 107007.0], [96.2, 107007.0], [96.3, 107008.0], [96.4, 107009.0], [96.5, 107141.0], [96.6, 107260.0], [96.7, 107519.0], [96.8, 108033.0], [96.9, 108141.0], [97.0, 108287.0], [97.1, 108292.0], [97.2, 110358.0], [97.3, 111356.0], [97.4, 112276.0], [97.5, 114264.0], [97.6, 114541.0], [97.7, 115456.0], [97.8, 119896.0], [97.9, 123389.0], [98.0, 124158.0], [98.1, 124160.0], [98.2, 126310.0], [98.3, 127044.0], [98.4, 127744.0], [98.5, 127747.0], [98.6, 140544.0], [98.7, 147712.0], [98.8, 153855.0], [98.9, 155137.0], [99.0, 165917.0], [99.1, 188421.0], [99.2, 206080.0], [99.3, 206108.0], [99.4, 211200.0], [99.5, 211201.0], [99.6, 211202.0], [99.7, 213532.0], [99.8, 213532.0], [99.9, 222977.0], [100.0, 227584.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 624.0, "series": [{"data": [[0.0, 291.0], [164900.0, 1.0], [78700.0, 1.0], [81100.0, 1.0], [99500.0, 1.0], [105900.0, 1.0], [106700.0, 3.0], [109900.0, 1.0], [107500.0, 4.0], [114700.0, 1.0], [153000.0, 3.0], [47300.0, 1.0], [52900.0, 1.0], [227500.0, 2.0], [60900.0, 1.0], [65800.0, 1.0], [99400.0, 1.0], [108200.0, 2.0], [110600.0, 1.0], [114600.0, 6.0], [115400.0, 1.0], [135600.0, 6.0], [148400.0, 1.0], [188400.0, 5.0], [1100.0, 5.0], [1200.0, 21.0], [1300.0, 35.0], [1400.0, 27.0], [1500.0, 14.0], [1600.0, 19.0], [1700.0, 21.0], [1800.0, 10.0], [1900.0, 14.0], [2000.0, 11.0], [2100.0, 12.0], [2300.0, 7.0], [2200.0, 10.0], [2400.0, 9.0], [2500.0, 3.0], [2600.0, 5.0], [2700.0, 2.0], [2800.0, 13.0], [2900.0, 32.0], [3000.0, 14.0], [3100.0, 16.0], [3300.0, 12.0], [3200.0, 8.0], [3400.0, 21.0], [3500.0, 20.0], [3700.0, 21.0], [3600.0, 14.0], [3800.0, 17.0], [3900.0, 6.0], [4000.0, 5.0], [4300.0, 14.0], [4100.0, 6.0], [4200.0, 8.0], [4500.0, 4.0], [4600.0, 10.0], [4400.0, 9.0], [73700.0, 1.0], [4700.0, 24.0], [4800.0, 35.0], [4900.0, 21.0], [5000.0, 22.0], [5100.0, 19.0], [5200.0, 13.0], [5300.0, 13.0], [5400.0, 21.0], [5500.0, 32.0], [5600.0, 29.0], [88900.0, 1.0], [5700.0, 18.0], [5800.0, 20.0], [5900.0, 13.0], [6100.0, 8.0], [6000.0, 5.0], [6300.0, 25.0], [6200.0, 13.0], [6400.0, 12.0], [6500.0, 22.0], [6600.0, 7.0], [105700.0, 6.0], [6700.0, 10.0], [6900.0, 7.0], [6800.0, 4.0], [107300.0, 1.0], [7000.0, 4.0], [7100.0, 133.0], [111300.0, 1.0], [7300.0, 13.0], [7400.0, 128.0], [7200.0, 17.0], [115300.0, 1.0], [7600.0, 142.0], [7500.0, 22.0], [7700.0, 35.0], [7800.0, 38.0], [7900.0, 124.0], [123300.0, 2.0], [124100.0, 7.0], [8000.0, 26.0], [8100.0, 93.0], [127300.0, 1.0], [8300.0, 23.0], [8600.0, 14.0], [8200.0, 23.0], [8500.0, 11.0], [8400.0, 34.0], [8700.0, 131.0], [8800.0, 11.0], [9000.0, 8.0], [8900.0, 39.0], [9100.0, 5.0], [9200.0, 112.0], [9500.0, 6.0], [9400.0, 47.0], [9300.0, 5.0], [9700.0, 77.0], [9600.0, 9.0], [10200.0, 101.0], [10000.0, 29.0], [9800.0, 8.0], [9900.0, 64.0], [10100.0, 19.0], [10300.0, 25.0], [10600.0, 13.0], [10400.0, 39.0], [10500.0, 10.0], [10700.0, 25.0], [10800.0, 8.0], [11000.0, 40.0], [10900.0, 9.0], [11100.0, 10.0], [11200.0, 64.0], [11400.0, 41.0], [11500.0, 79.0], [11300.0, 27.0], [11600.0, 124.0], [11700.0, 208.0], [11900.0, 236.0], [11800.0, 196.0], [12000.0, 275.0], [12100.0, 307.0], [12200.0, 355.0], [12300.0, 336.0], [12500.0, 310.0], [12400.0, 333.0], [12600.0, 299.0], [12700.0, 260.0], [12800.0, 255.0], [12900.0, 199.0], [13100.0, 154.0], [13200.0, 156.0], [13300.0, 624.0], [13000.0, 179.0], [13500.0, 152.0], [13800.0, 179.0], [13400.0, 133.0], [13600.0, 92.0], [13700.0, 86.0], [214200.0, 2.0], [14000.0, 34.0], [13900.0, 42.0], [14100.0, 20.0], [14300.0, 98.0], [14200.0, 10.0], [14500.0, 26.0], [14400.0, 4.0], [14800.0, 28.0], [14700.0, 6.0], [14600.0, 3.0], [15300.0, 17.0], [15100.0, 16.0], [14900.0, 2.0], [15000.0, 5.0], [15400.0, 1.0], [15700.0, 5.0], [15600.0, 11.0], [15800.0, 5.0], [15500.0, 7.0], [15900.0, 11.0], [16300.0, 9.0], [16000.0, 4.0], [16100.0, 10.0], [16200.0, 1.0], [16800.0, 6.0], [16400.0, 2.0], [16600.0, 3.0], [17400.0, 1.0], [17800.0, 2.0], [17600.0, 10.0], [18000.0, 1.0], [18400.0, 2.0], [19000.0, 1.0], [18600.0, 2.0], [19200.0, 2.0], [19400.0, 2.0], [20400.0, 3.0], [19600.0, 3.0], [20000.0, 1.0], [21000.0, 1.0], [21400.0, 1.0], [21200.0, 1.0], [22400.0, 1.0], [21800.0, 1.0], [23400.0, 1.0], [26200.0, 1.0], [26400.0, 5.0], [25600.0, 2.0], [25800.0, 4.0], [27200.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [27400.0, 1.0], [27800.0, 1.0], [28800.0, 1.0], [30000.0, 1.0], [33200.0, 1.0], [40000.0, 1.0], [39200.0, 1.0], [52800.0, 1.0], [52000.0, 1.0], [213500.0, 1.0], [62400.0, 1.0], [61600.0, 1.0], [62000.0, 1.0], [106400.0, 8.0], [107200.0, 6.0], [108000.0, 2.0], [119200.0, 1.0], [211200.0, 9.0], [82300.0, 1.0], [107900.0, 1.0], [113500.0, 1.0], [111100.0, 4.0], [115100.0, 1.0], [123100.0, 1.0], [153800.0, 1.0], [205000.0, 1.0], [132300.0, 2.0], [47500.0, 2.0], [54700.0, 1.0], [57500.0, 1.0], [61100.0, 6.0], [106200.0, 5.0], [105400.0, 2.0], [107000.0, 10.0], [115800.0, 1.0], [119000.0, 1.0], [125400.0, 1.0], [140500.0, 2.0], [206100.0, 1.0], [102100.0, 7.0], [115700.0, 1.0], [118900.0, 1.0], [126900.0, 1.0], [127700.0, 11.0], [144600.0, 2.0], [163800.0, 1.0], [17100.0, 8.0], [17300.0, 1.0], [16500.0, 2.0], [16700.0, 1.0], [16900.0, 1.0], [18300.0, 4.0], [17700.0, 1.0], [17900.0, 2.0], [18100.0, 2.0], [18900.0, 1.0], [19300.0, 1.0], [18700.0, 2.0], [18500.0, 1.0], [19900.0, 3.0], [19500.0, 1.0], [20100.0, 1.0], [20300.0, 1.0], [21100.0, 2.0], [20900.0, 1.0], [21300.0, 1.0], [22500.0, 1.0], [22300.0, 1.0], [21700.0, 2.0], [21900.0, 1.0], [22900.0, 1.0], [23100.0, 1.0], [24300.0, 1.0], [25500.0, 1.0], [26300.0, 7.0], [26500.0, 1.0], [27500.0, 1.0], [27700.0, 2.0], [27900.0, 1.0], [29900.0, 3.0], [155100.0, 1.0], [39800.0, 1.0], [45800.0, 1.0], [47400.0, 1.0], [52200.0, 2.0], [211100.0, 1.0], [57000.0, 1.0], [61000.0, 4.0], [63400.0, 1.0], [62200.0, 1.0], [63800.0, 1.0], [71600.0, 1.0], [114800.0, 1.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 119.0], [211200.0, 5.0], [131300.0, 1.0], [194500.0, 1.0], [106700.0, 2.0], [111100.0, 5.0], [113900.0, 2.0], [114300.0, 3.0], [153800.0, 1.0], [205000.0, 1.0], [132300.0, 1.0], [46300.0, 1.0], [59900.0, 3.0], [60700.0, 1.0], [106200.0, 5.0], [105400.0, 6.0], [108200.0, 2.0], [107000.0, 6.0], [112200.0, 1.0], [500.0, 3.0], [135600.0, 4.0], [600.0, 7.0], [148400.0, 1.0], [700.0, 3.0], [188400.0, 3.0], [206000.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1500.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2200.0, 3.0], [2300.0, 5.0], [140500.0, 3.0], [147700.0, 2.0], [2500.0, 2.0], [2600.0, 1.0], [2800.0, 5.0], [2700.0, 1.0], [2900.0, 3.0], [3500.0, 1.0], [222900.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4200.0, 3.0], [4100.0, 5.0], [4300.0, 1.0], [4500.0, 2.0], [4400.0, 1.0], [4600.0, 1.0], [4800.0, 3.0], [4700.0, 2.0], [5000.0, 2.0], [4900.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 4.0], [5400.0, 2.0], [5600.0, 3.0], [5700.0, 1.0], [6100.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [102100.0, 7.0], [6400.0, 1.0], [6500.0, 1.0], [105700.0, 4.0], [6900.0, 1.0], [6800.0, 2.0], [7000.0, 4.0], [7100.0, 65.0], [7400.0, 63.0], [7300.0, 3.0], [7500.0, 3.0], [7600.0, 73.0], [7900.0, 52.0], [123300.0, 2.0], [124100.0, 3.0], [8100.0, 46.0], [127700.0, 3.0], [8200.0, 1.0], [8300.0, 1.0], [8600.0, 2.0], [8400.0, 9.0], [8700.0, 55.0], [9000.0, 1.0], [9200.0, 49.0], [8900.0, 15.0], [9300.0, 1.0], [9600.0, 3.0], [9400.0, 19.0], [9500.0, 2.0], [9700.0, 40.0], [151800.0, 1.0], [10200.0, 38.0], [10100.0, 1.0], [9900.0, 23.0], [10700.0, 10.0], [10600.0, 3.0], [10400.0, 5.0], [10500.0, 1.0], [11100.0, 10.0], [11000.0, 22.0], [10800.0, 8.0], [11200.0, 30.0], [10900.0, 8.0], [11300.0, 15.0], [11500.0, 28.0], [11700.0, 39.0], [11600.0, 14.0], [11400.0, 13.0], [11800.0, 12.0], [12000.0, 9.0], [12100.0, 12.0], [11900.0, 12.0], [12200.0, 28.0], [12300.0, 13.0], [12600.0, 5.0], [12700.0, 7.0], [12400.0, 3.0], [12500.0, 15.0], [13300.0, 262.0], [12800.0, 18.0], [12900.0, 8.0], [13200.0, 7.0], [13100.0, 4.0], [13000.0, 9.0], [13700.0, 6.0], [13500.0, 19.0], [13600.0, 2.0], [13400.0, 8.0], [13800.0, 73.0], [13900.0, 3.0], [14100.0, 2.0], [14200.0, 2.0], [14300.0, 42.0], [14000.0, 7.0], [14500.0, 20.0], [14800.0, 10.0], [14400.0, 2.0], [14600.0, 3.0], [14700.0, 1.0], [15300.0, 7.0], [15000.0, 3.0], [15100.0, 7.0], [15200.0, 1.0], [14900.0, 4.0], [15400.0, 1.0], [15600.0, 1.0], [15900.0, 1.0], [16300.0, 6.0], [16000.0, 1.0], [16100.0, 1.0], [17400.0, 3.0], [16600.0, 2.0], [17100.0, 7.0], [16800.0, 1.0], [16900.0, 1.0], [16700.0, 3.0], [17900.0, 1.0], [17600.0, 6.0], [17800.0, 1.0], [17500.0, 2.0], [18200.0, 1.0], [18600.0, 2.0], [19200.0, 1.0], [19600.0, 1.0], [19900.0, 2.0], [20200.0, 1.0], [22700.0, 1.0], [24100.0, 1.0], [24800.0, 1.0], [25500.0, 1.0], [26300.0, 4.0], [26600.0, 1.0], [26400.0, 1.0], [27600.0, 1.0], [26800.0, 2.0], [37800.0, 1.0], [211100.0, 1.0], [54000.0, 3.0], [213500.0, 1.0], [55800.0, 1.0], [65600.0, 1.0], [106400.0, 2.0], [107200.0, 2.0], [108000.0, 2.0], [114400.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 135.0], [69100.0, 1.0], [69900.0, 1.0], [86700.0, 1.0], [90700.0, 1.0], [93900.0, 1.0], [105900.0, 1.0], [106700.0, 1.0], [107500.0, 1.0], [123500.0, 1.0], [100.0, 1.0], [33300.0, 1.0], [137900.0, 1.0], [40100.0, 1.0], [43700.0, 1.0], [45700.0, 2.0], [200.0, 2.0], [52500.0, 1.0], [52900.0, 1.0], [53700.0, 1.0], [227500.0, 1.0], [300.0, 1.0], [81800.0, 1.0], [400.0, 3.0], [105800.0, 1.0], [106600.0, 2.0], [108200.0, 4.0], [107400.0, 1.0], [112200.0, 1.0], [114600.0, 1.0], [115400.0, 1.0], [500.0, 2.0], [600.0, 1.0], [700.0, 1.0], [188400.0, 2.0], [800.0, 1.0], [206000.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1400.0, 1.0], [1600.0, 4.0], [1700.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 1.0], [2400.0, 1.0], [147700.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2900.0, 2.0], [3100.0, 1.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [222900.0, 1.0], [3600.0, 3.0], [3800.0, 2.0], [4000.0, 3.0], [4100.0, 3.0], [4300.0, 4.0], [4200.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [4500.0, 1.0], [69700.0, 1.0], [74500.0, 1.0], [4900.0, 1.0], [5000.0, 4.0], [5200.0, 3.0], [5500.0, 1.0], [6100.0, 3.0], [6300.0, 3.0], [6200.0, 2.0], [6500.0, 3.0], [6400.0, 3.0], [105700.0, 1.0], [6900.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [106500.0, 2.0], [108100.0, 1.0], [7000.0, 3.0], [7100.0, 57.0], [114500.0, 1.0], [111300.0, 2.0], [7200.0, 6.0], [7400.0, 58.0], [7300.0, 5.0], [7600.0, 56.0], [7500.0, 3.0], [7900.0, 53.0], [7800.0, 4.0], [7700.0, 2.0], [123300.0, 1.0], [124100.0, 4.0], [8000.0, 7.0], [8100.0, 28.0], [8200.0, 2.0], [8600.0, 6.0], [8700.0, 79.0], [8500.0, 3.0], [8400.0, 14.0], [8300.0, 1.0], [9200.0, 63.0], [8800.0, 6.0], [8900.0, 18.0], [9100.0, 3.0], [9000.0, 2.0], [9300.0, 5.0], [9600.0, 3.0], [9700.0, 44.0], [9400.0, 14.0], [9900.0, 21.0], [10200.0, 37.0], [9800.0, 2.0], [10100.0, 3.0], [10000.0, 2.0], [10500.0, 6.0], [10400.0, 10.0], [10600.0, 8.0], [10700.0, 12.0], [10300.0, 2.0], [10800.0, 12.0], [11000.0, 33.0], [11200.0, 33.0], [11100.0, 13.0], [10900.0, 12.0], [11400.0, 16.0], [11500.0, 20.0], [11600.0, 10.0], [11300.0, 12.0], [11700.0, 25.0], [12000.0, 11.0], [11800.0, 6.0], [12200.0, 27.0], [12100.0, 2.0], [11900.0, 1.0], [12700.0, 10.0], [12400.0, 11.0], [12500.0, 14.0], [12300.0, 5.0], [12800.0, 15.0], [13300.0, 244.0], [13200.0, 27.0], [13100.0, 4.0], [13000.0, 2.0], [12900.0, 1.0], [13800.0, 65.0], [13500.0, 15.0], [13700.0, 5.0], [13400.0, 7.0], [13600.0, 3.0], [214200.0, 1.0], [14300.0, 40.0], [13900.0, 5.0], [14200.0, 5.0], [14000.0, 6.0], [14100.0, 1.0], [14700.0, 1.0], [14800.0, 10.0], [14600.0, 6.0], [14400.0, 7.0], [14500.0, 20.0], [15100.0, 2.0], [15000.0, 1.0], [15200.0, 2.0], [15300.0, 9.0], [14900.0, 1.0], [15800.0, 2.0], [15600.0, 4.0], [15500.0, 1.0], [15400.0, 1.0], [15900.0, 2.0], [16300.0, 9.0], [16100.0, 2.0], [16200.0, 1.0], [17400.0, 2.0], [16600.0, 2.0], [16400.0, 1.0], [17000.0, 1.0], [17600.0, 3.0], [19000.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [19200.0, 2.0], [19600.0, 1.0], [21400.0, 1.0], [21600.0, 1.0], [23200.0, 1.0], [24000.0, 1.0], [24400.0, 1.0], [24800.0, 1.0], [26200.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [26800.0, 1.0], [38400.0, 1.0], [38800.0, 1.0], [44000.0, 1.0], [213500.0, 3.0], [106400.0, 5.0], [105600.0, 1.0], [107200.0, 1.0], [108000.0, 3.0], [114400.0, 1.0], [211200.0, 6.0], [194500.0, 1.0], [100700.0, 1.0], [107100.0, 3.0], [110300.0, 1.0], [111100.0, 1.0], [126300.0, 1.0], [153800.0, 2.0], [37100.0, 1.0], [37900.0, 1.0], [165900.0, 1.0], [46300.0, 2.0], [53900.0, 1.0], [53500.0, 1.0], [54300.0, 1.0], [63900.0, 1.0], [63500.0, 1.0], [77400.0, 2.0], [92600.0, 1.0], [94200.0, 1.0], [106200.0, 7.0], [105400.0, 2.0], [107000.0, 6.0], [114200.0, 1.0], [119800.0, 1.0], [127000.0, 1.0], [140500.0, 1.0], [206100.0, 2.0], [76500.0, 1.0], [101300.0, 1.0], [102100.0, 1.0], [106100.0, 1.0], [105300.0, 1.0], [126900.0, 1.0], [127700.0, 3.0], [144600.0, 1.0], [163800.0, 1.0], [16700.0, 1.0], [17100.0, 5.0], [18100.0, 2.0], [18500.0, 1.0], [18700.0, 2.0], [18900.0, 1.0], [21500.0, 1.0], [22100.0, 1.0], [22700.0, 1.0], [25500.0, 2.0], [26300.0, 4.0], [26700.0, 1.0], [27500.0, 1.0], [28700.0, 1.0], [29700.0, 1.0], [32300.0, 1.0], [155100.0, 2.0], [39800.0, 1.0], [54200.0, 5.0], [106000.0, 2.0], [106800.0, 2.0], [112400.0, 1.0], [122000.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 227500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7013.0, "series": [{"data": [[1.0, 113.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5747.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7013.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.4, "minX": 1.53945618E12, "maxY": 498.7685950413221, "series": [{"data": [[1.5394569E12, 4.4], [1.5394563E12, 97.97078353253656], [1.53945624E12, 39.08392603129445], [1.5394566E12, 398.51039809863386], [1.53945648E12, 281.6420091324199], [1.53945654E12, 338.388282596209], [1.53945684E12, 163.94585987261144], [1.53945618E12, 5.703703703703703], [1.53945642E12, 219.06064880112845], [1.53945672E12, 498.7685950413221], [1.53945678E12, 490.8286219081271], [1.53945666E12, 458.56494960806265], [1.53945636E12, 157.6972343522562]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5394569E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 213532.0, "series": [{"data": [[4.0, 1159.0], [5.0, 78119.5], [6.0, 1310.0], [7.0, 1184.0], [8.0, 65908.42857142858], [9.0, 1270.0], [10.0, 1132.0], [11.0, 1348.8333333333333], [12.0, 1323.625], [13.0, 1211.0000000000002], [14.0, 1415.0], [15.0, 1449.2727272727273], [16.0, 12173.23076923077], [17.0, 1497.8], [18.0, 1518.3333333333333], [19.0, 1523.2], [20.0, 1635.1], [21.0, 1587.0], [22.0, 1820.4166666666667], [23.0, 1846.2], [24.0, 1795.0], [25.0, 19501.833333333332], [26.0, 2009.5000000000002], [27.0, 2134.1], [28.0, 33500.230769230766], [29.0, 2306.777777777778], [30.0, 2471.3333333333335], [31.0, 2710.2000000000003], [32.0, 2942.2], [33.0, 2690.7142857142853], [34.0, 3030.1111111111113], [35.0, 3199.0], [36.0, 3434.5], [37.0, 3053.5], [38.0, 2928.4], [39.0, 3118.1818181818185], [40.0, 3090.6666666666665], [41.0, 3230.6666666666665], [42.0, 41198.454545454544], [43.0, 33284.5], [44.0, 20901.333333333332], [45.0, 3500.7000000000003], [46.0, 20916.25], [47.0, 24505.9], [48.0, 3814.4545454545455], [49.0, 18556.428571428572], [50.0, 3738.875], [51.0, 3919.9], [52.0, 4023.125], [53.0, 63886.0], [54.0, 4595.428571428571], [55.0, 4902.666666666667], [56.0, 4691.538461538462], [57.0, 4688.888888888889], [58.0, 4882.3], [59.0, 4682.3], [60.0, 5017.0], [61.0, 23381.18181818182], [62.0, 8482.75], [63.0, 11245.555555555555], [64.0, 10069.727272727274], [65.0, 8915.92857142857], [66.0, 10090.0], [67.0, 10089.272727272728], [68.0, 8770.285714285714], [69.0, 11414.555555555555], [70.0, 9598.76923076923], [71.0, 10415.090909090908], [72.0, 10127.75], [73.0, 10268.833333333332], [74.0, 10750.363636363636], [75.0, 5607.818181818181], [76.0, 5673.615384615385], [77.0, 5651.545454545454], [78.0, 5500.916666666667], [79.0, 20916.583333333332], [80.0, 5627.727272727273], [81.0, 5855.636363636364], [82.0, 5921.7], [83.0, 6050.416666666667], [84.0, 6191.6], [85.0, 6331.0], [86.0, 34391.230769230766], [87.0, 28738.8125], [88.0, 6470.538461538461], [89.0, 6535.181818181818], [90.0, 26332.25], [91.0, 6633.466666666665], [92.0, 6837.0], [93.0, 46871.27272727272], [94.0, 10152.07142857143], [95.0, 12390.125], [96.0, 10215.25], [97.0, 7766.5], [98.0, 6959.125000000001], [99.0, 8118.700000000001], [100.0, 16374.125], [101.0, 9367.636363636364], [102.0, 8901.0], [103.0, 7754.199999999999], [104.0, 7754.636363636364], [105.0, 7700.727272727273], [106.0, 7691.454545454545], [107.0, 7772.700000000001], [108.0, 7826.916666666667], [109.0, 7854.1], [110.0, 8065.714285714286], [111.0, 8070.125000000001], [112.0, 8204.727272727272], [113.0, 8196.545454545456], [114.0, 8273.285714285714], [115.0, 8407.555555555555], [116.0, 8316.166666666668], [117.0, 16769.333333333336], [118.0, 8697.500000000002], [119.0, 48167.5625], [120.0, 18122.25], [121.0, 19081.636363636364], [122.0, 17455.11111111111], [123.0, 10906.76923076923], [124.0, 11346.888888888889], [125.0, 10152.09090909091], [126.0, 11182.166666666668], [127.0, 11237.90909090909], [128.0, 11210.166666666664], [129.0, 11256.25], [130.0, 23954.600000000002], [131.0, 10949.066666666668], [132.0, 11447.0], [133.0, 11139.454545454546], [134.0, 10146.272727272728], [135.0, 11195.666666666666], [136.0, 10331.0], [137.0, 11463.545454545456], [138.0, 10527.583333333332], [139.0, 10606.363636363636], [140.0, 10515.0], [141.0, 10754.5], [142.0, 11025.2], [143.0, 12471.625], [144.0, 12454.444444444445], [145.0, 12581.5], [146.0, 11828.545454545456], [147.0, 12997.111111111111], [148.0, 12960.6], [149.0, 13071.818181818182], [150.0, 12473.3], [151.0, 12704.4], [152.0, 13298.153846153848], [153.0, 13507.0], [154.0, 13421.454545454546], [155.0, 13098.0], [156.0, 13058.615384615385], [157.0, 12443.857142857143], [158.0, 12877.083333333332], [159.0, 12705.545454545452], [160.0, 12280.099999999999], [161.0, 12195.400000000001], [162.0, 13151.300000000001], [163.0, 13063.083333333334], [164.0, 12857.0], [165.0, 12660.199999999999], [166.0, 12653.5], [167.0, 13054.499999999998], [168.0, 13104.727272727274], [169.0, 13958.923076923078], [170.0, 12849.363636363636], [171.0, 12622.4], [172.0, 14538.111111111113], [173.0, 14013.25], [174.0, 14085.083333333334], [175.0, 14119.454545454544], [176.0, 14058.636363636364], [177.0, 13812.538461538463], [178.0, 12722.916666666668], [179.0, 13362.111111111111], [180.0, 13230.923076923076], [181.0, 13506.199999999999], [182.0, 13241.272727272728], [183.0, 13323.6], [184.0, 11925.111111111111], [185.0, 13538.916666666666], [186.0, 13823.099999999999], [187.0, 13836.23076923077], [188.0, 13586.555555555555], [189.0, 13870.181818181818], [190.0, 13746.857142857145], [191.0, 13815.3], [192.0, 13231.583333333334], [193.0, 13546.090909090908], [194.0, 13953.666666666666], [195.0, 13446.181818181818], [196.0, 13535.666666666666], [197.0, 13671.09090909091], [198.0, 13539.555555555555], [199.0, 13673.444444444445], [200.0, 13881.916666666668], [201.0, 13903.249999999998], [202.0, 16020.818181818184], [203.0, 13735.615384615385], [204.0, 13660.363636363636], [205.0, 13876.454545454544], [206.0, 13780.692307692309], [207.0, 13654.538461538461], [208.0, 13215.666666666666], [209.0, 13289.5], [210.0, 12836.727272727274], [211.0, 16329.153846153846], [212.0, 12664.545454545454], [213.0, 12494.5], [214.0, 13092.76923076923], [215.0, 12589.222222222223], [216.0, 12515.333333333334], [217.0, 12405.999999999998], [218.0, 12307.000000000002], [219.0, 12322.153846153848], [220.0, 12095.357142857141], [221.0, 12773.555555555555], [222.0, 11930.0], [223.0, 12077.615384615383], [224.0, 12146.875], [225.0, 12366.666666666666], [226.0, 12193.818181818184], [227.0, 12604.909090909092], [228.0, 12634.923076923076], [229.0, 12347.538461538463], [230.0, 12388.545454545456], [231.0, 12342.333333333332], [232.0, 12350.90909090909], [233.0, 18570.833333333336], [234.0, 12671.846153846154], [235.0, 16646.3125], [236.0, 15380.777777777777], [237.0, 12176.923076923076], [238.0, 11699.615384615385], [239.0, 12279.692307692309], [240.0, 12064.285714285714], [241.0, 12169.916666666666], [242.0, 12359.000000000002], [243.0, 12455.384615384617], [244.0, 12606.2], [245.0, 12601.272727272728], [246.0, 12442.0], [247.0, 13032.599999999999], [248.0, 13870.000000000002], [249.0, 12832.0], [250.0, 12926.454545454546], [251.0, 12891.0], [252.0, 23737.454545454544], [253.0, 13529.0], [254.0, 23257.818181818184], [255.0, 12274.416666666668], [257.0, 12121.875], [256.0, 18077.4375], [258.0, 22989.266666666666], [259.0, 12484.142857142855], [260.0, 11963.111111111111], [261.0, 11736.0], [262.0, 12270.0], [263.0, 11769.181818181818], [264.0, 11819.818181818182], [270.0, 17227.25], [271.0, 13085.5], [268.0, 25195.687500000004], [269.0, 12709.636363636364], [265.0, 11786.9375], [266.0, 17617.230769230766], [267.0, 13831.800000000001], [273.0, 13112.545454545456], [272.0, 27085.35714285714], [274.0, 11880.8], [275.0, 13189.499999999998], [276.0, 13303.076923076924], [277.0, 11515.933333333332], [278.0, 13221.142857142857], [279.0, 13157.866666666667], [280.0, 15754.500000000002], [286.0, 21903.416666666664], [287.0, 13665.857142857141], [284.0, 12513.7], [285.0, 13453.933333333332], [281.0, 12886.538461538461], [282.0, 13361.333333333334], [283.0, 12649.916666666666], [289.0, 35385.4], [288.0, 23436.349999999995], [290.0, 19501.4], [291.0, 14246.142857142857], [292.0, 10346.0], [293.0, 12266.461538461537], [294.0, 19739.642857142855], [295.0, 12189.714285714286], [296.0, 17668.833333333336], [302.0, 12796.625], [303.0, 14133.050000000001], [300.0, 28541.090909090904], [301.0, 10932.857142857143], [297.0, 13256.90909090909], [298.0, 13448.0], [299.0, 55122.5625], [305.0, 13975.235294117645], [304.0, 10828.857142857141], [306.0, 11454.777777777776], [307.0, 24646.076923076926], [308.0, 12190.714285714286], [309.0, 12015.666666666668], [310.0, 11207.538461538461], [311.0, 11584.64705882353], [312.0, 11575.416666666668], [318.0, 12568.5], [319.0, 11092.958333333336], [316.0, 9834.84], [317.0, 17706.41176470588], [313.0, 15913.777777777781], [314.0, 12196.375], [315.0, 14837.719999999998], [321.0, 16407.842105263157], [320.0, 11738.0], [322.0, 11982.916666666664], [323.0, 9336.894736842107], [324.0, 10478.684210526317], [325.0, 10753.736842105263], [326.0, 11669.454545454546], [327.0, 11943.172413793107], [328.0, 10626.210526315786], [334.0, 10315.560000000003], [335.0, 11042.833333333332], [332.0, 10696.375], [333.0, 10602.0], [329.0, 18809.88], [330.0, 11386.529411764706], [331.0, 20654.227272727276], [337.0, 11766.199999999999], [336.0, 12564.642857142859], [338.0, 10121.105263157891], [339.0, 12879.153846153848], [340.0, 12101.642857142857], [341.0, 13002.866666666669], [342.0, 10061.333333333334], [343.0, 11484.464285714286], [344.0, 12130.538461538461], [350.0, 18429.875], [351.0, 10431.95], [348.0, 10385.79166666667], [349.0, 12160.687499999998], [345.0, 11400.647058823528], [346.0, 11400.6], [347.0, 12819.944444444443], [353.0, 11424.911764705883], [352.0, 12283.333333333332], [354.0, 10915.0625], [355.0, 12202.5], [356.0, 11686.142857142857], [357.0, 10459.0], [358.0, 11898.416666666666], [359.0, 12155.57142857143], [360.0, 14928.967741935488], [366.0, 11301.055555555553], [367.0, 11815.187500000002], [364.0, 12125.8125], [365.0, 20454.125], [361.0, 9875.809523809521], [362.0, 10029.434782608698], [363.0, 10883.407407407409], [369.0, 10228.047619047622], [368.0, 19190.80769230769], [370.0, 13208.600000000002], [371.0, 10508.23076923077], [372.0, 11473.09090909091], [373.0, 11587.083333333332], [374.0, 26786.499999999996], [375.0, 11765.904761904761], [376.0, 11970.392857142857], [382.0, 11748.642857142857], [383.0, 12104.592592592593], [380.0, 12040.749999999998], [381.0, 12398.699999999999], [377.0, 11643.0], [378.0, 11112.857142857143], [379.0, 11246.70588235294], [385.0, 10471.689655172415], [384.0, 11659.080000000004], [386.0, 10817.312499999998], [387.0, 11448.916666666666], [388.0, 9805.055555555555], [389.0, 10459.722222222223], [390.0, 10343.0625], [391.0, 10898.212121212122], [392.0, 12311.739130434784], [398.0, 10945.931034482759], [399.0, 11588.645161290322], [396.0, 12552.466666666665], [397.0, 12594.750000000002], [393.0, 12810.545454545456], [394.0, 14422.583333333336], [395.0, 11671.631578947367], [401.0, 12550.461538461539], [400.0, 11190.181818181816], [402.0, 10768.464285714286], [403.0, 11781.363636363634], [404.0, 12379.071428571428], [405.0, 12000.333333333334], [406.0, 9696.35483870968], [407.0, 10650.823529411762], [408.0, 11303.039999999999], [414.0, 10547.0], [415.0, 11329.9375], [412.0, 12609.5], [413.0, 12635.555555555557], [409.0, 11370.499999999998], [410.0, 9730.548387096773], [411.0, 12504.272727272728], [417.0, 12588.619047619044], [416.0, 12290.363636363636], [418.0, 11460.842105263157], [419.0, 13174.791666666664], [420.0, 11666.461538461535], [421.0, 12067.133333333333], [422.0, 11546.749999999996], [423.0, 11350.315789473683], [424.0, 12512.812499999996], [430.0, 11921.583333333334], [431.0, 11087.458333333336], [428.0, 12377.142857142857], [429.0, 12217.615384615383], [425.0, 11330.263157894735], [426.0, 11660.869565217388], [427.0, 11813.916666666662], [433.0, 11195.608695652174], [432.0, 11316.1875], [434.0, 11242.971428571429], [435.0, 10843.6], [436.0, 12358.785714285714], [437.0, 11850.5], [438.0, 11760.319999999998], [439.0, 9900.23076923077], [440.0, 10829.766666666668], [446.0, 24814.48148148149], [447.0, 12020.36], [444.0, 11910.823529411762], [445.0, 11172.193548387093], [441.0, 11199.136363636366], [442.0, 12275.363636363636], [443.0, 12393.7], [449.0, 12766.538461538465], [448.0, 12065.187500000002], [450.0, 25252.928571428576], [451.0, 11556.225806451614], [452.0, 11751.500000000002], [453.0, 10253.22727272727], [454.0, 30717.846153846156], [455.0, 11758.133333333333], [456.0, 11291.624999999998], [462.0, 11040.933333333332], [463.0, 10590.133333333331], [460.0, 37601.600000000006], [461.0, 12519.0], [457.0, 9530.545454545458], [458.0, 11531.166666666666], [459.0, 9710.111111111113], [465.0, 11924.108108108108], [464.0, 13356.111111111111], [466.0, 11105.5], [467.0, 9931.857142857145], [468.0, 10558.375], [469.0, 10591.538461538463], [470.0, 12136.272727272726], [471.0, 26597.131578947367], [472.0, 9747.25], [478.0, 12728.666666666666], [479.0, 12430.428571428572], [476.0, 11431.000000000002], [477.0, 22691.481481481485], [473.0, 26676.66666666666], [474.0, 14107.933333333332], [475.0, 13320.625], [481.0, 11646.451612903227], [480.0, 11642.84848484848], [482.0, 15463.000000000002], [483.0, 12558.571428571428], [484.0, 12464.25], [485.0, 11344.181818181818], [486.0, 9818.952380952382], [487.0, 11006.062499999998], [488.0, 12210.4], [494.0, 10447.45], [495.0, 12731.57894736842], [492.0, 11957.5], [493.0, 10852.94117647059], [489.0, 10418.999999999998], [490.0, 11058.541666666668], [491.0, 13167.615384615387], [496.0, 12079.599999999999], [497.0, 11001.5], [498.0, 11237.875], [499.0, 11878.57142857143], [500.0, 13593.76423576423]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[335.6730873282121, 13013.779244670515]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[3.0, 1243.5], [5.0, 97586.0], [6.0, 3892.0], [7.0, 714.0], [8.0, 1286.0], [11.0, 149392.66666666666], [12.0, 1504.0], [13.0, 624.0], [14.0, 1489.5], [15.0, 662.0], [16.0, 105563.75], [17.0, 693.0], [18.0, 766.0], [20.0, 701.0], [21.0, 2325.0], [23.0, 907.0], [24.0, 1495.0], [25.0, 213532.0], [26.0, 1217.0], [28.0, 137554.0], [29.0, 1572.0], [31.0, 2539.0], [34.0, 3233.0], [35.0, 4248.0], [36.0, 2322.0], [38.0, 2903.0], [39.0, 3475.5], [40.0, 2518.0], [41.0, 2897.0], [42.0, 106938.0], [43.0, 2805.0], [44.0, 2365.0], [47.0, 3725.5], [49.0, 107052.5], [50.0, 2810.0], [53.0, 128532.8], [52.0, 211200.0], [54.0, 4118.0], [55.0, 3693.0], [56.0, 3582.0], [59.0, 4538.0], [60.0, 4702.5], [61.0, 80712.0], [63.0, 4135.0], [64.0, 4234.0], [67.0, 4905.333333333333], [69.0, 4660.0], [70.0, 6197.0], [73.0, 5698.666666666667], [75.0, 23745.666666666668], [77.0, 32329.5], [78.0, 23208.0], [76.0, 59927.0], [80.0, 4920.0], [81.0, 5089.0], [82.0, 5257.0], [83.0, 5583.0], [84.0, 5338.0], [85.0, 5622.0], [87.0, 96956.0], [89.0, 5744.0], [90.0, 6524.5], [91.0, 5905.0], [88.0, 188418.5], [93.0, 6251.0], [94.0, 6538.0], [96.0, 7596.0], [97.0, 7094.0], [98.0, 7322.0], [99.0, 26742.5], [101.0, 6986.0], [102.0, 7181.0], [103.0, 7061.0], [105.0, 7515.5], [106.0, 7019.0], [107.0, 6840.0], [108.0, 7179.0], [109.0, 7077.0], [110.0, 7166.0], [111.0, 7311.0], [112.0, 7562.0], [113.0, 7358.0], [115.0, 7691.0], [116.0, 7583.0], [119.0, 82834.87499999999], [120.0, 9004.0], [121.0, 8619.0], [123.0, 9366.0], [124.0, 9249.0], [125.0, 9622.0], [127.0, 10156.0], [128.0, 9299.0], [129.0, 9212.0], [130.0, 9426.0], [131.0, 9543.0], [134.0, 41851.0], [135.0, 9528.0], [136.0, 62038.5], [137.0, 10777.0], [138.0, 9776.0], [139.0, 61996.5], [140.0, 9722.0], [142.0, 62664.5], [141.0, 114324.0], [144.0, 11088.5], [147.0, 11336.0], [149.0, 11593.0], [150.0, 13794.0], [151.0, 11757.0], [153.0, 12044.0], [154.0, 12892.0], [156.0, 11558.0], [157.0, 15989.5], [159.0, 11932.5], [161.0, 14590.333333333334], [164.0, 13352.0], [165.0, 12592.5], [166.0, 19600.0], [160.0, 19980.0], [168.0, 12960.0], [169.0, 11616.0], [170.0, 11768.0], [171.0, 11849.0], [173.0, 13621.0], [174.0, 12101.0], [180.0, 12138.0], [182.0, 13972.0], [183.0, 18261.0], [186.0, 13426.0], [187.0, 12820.0], [189.0, 12633.0], [188.0, 14576.0], [184.0, 14919.0], [197.0, 12345.0], [199.0, 40195.5], [196.0, 26416.0], [200.0, 12832.0], [202.0, 12954.0], [211.0, 11641.0], [214.0, 13339.0], [215.0, 17595.0], [210.0, 13737.0], [209.0, 13744.0], [208.0, 13758.0], [217.0, 14169.0], [221.0, 11114.0], [223.0, 16729.0], [220.0, 17517.0], [218.0, 16771.0], [224.0, 14722.5], [225.0, 12164.0], [226.0, 12693.0], [228.0, 11589.0], [230.0, 11258.0], [231.0, 11580.5], [239.0, 11067.0], [238.0, 12621.0], [236.0, 37840.0], [232.0, 16969.0], [244.0, 11895.0], [245.0, 12360.0], [247.0, 14179.5], [240.0, 12864.0], [248.0, 11702.0], [249.0, 11985.0], [250.0, 12150.0], [253.0, 11734.0], [254.0, 71827.0], [255.0, 9504.5], [252.0, 132355.0], [269.0, 13824.0], [258.0, 11244.0], [257.0, 12104.5], [259.0, 8021.833333333333], [260.0, 18583.5], [263.0, 11352.333333333334], [265.0, 10239.0], [267.0, 11923.5], [270.0, 14891.5], [271.0, 13824.0], [273.0, 13308.666666666666], [272.0, 23424.5], [275.0, 14206.5], [274.0, 12048.0], [284.0, 12211.666666666666], [285.0, 22185.333333333332], [286.0, 7934.0], [287.0, 13266.6], [276.0, 14339.0], [277.0, 8906.0], [279.0, 13705.0], [280.0, 27008.5], [281.0, 8444.0], [282.0, 14426.0], [283.0, 11617.0], [289.0, 31046.0], [288.0, 11650.0], [290.0, 29919.75], [291.0, 12760.0], [293.0, 9512.363636363636], [294.0, 13547.0], [295.0, 17407.0], [296.0, 6464.0], [302.0, 12703.0], [303.0, 10922.0], [300.0, 27844.285714285714], [301.0, 6039.6], [297.0, 12782.0], [298.0, 12715.8], [299.0, 7718.5], [305.0, 33855.5], [304.0, 11052.999999999998], [306.0, 11903.0], [307.0, 11517.0], [308.0, 2.0], [309.0, 7595.555555555556], [310.0, 9879.0], [311.0, 13311.0], [312.0, 7585.545454545455], [318.0, 13718.666666666666], [319.0, 9462.76923076923], [316.0, 8530.666666666666], [317.0, 12035.5], [313.0, 7220.666666666666], [314.0, 11044.0], [315.0, 9719.142857142859], [321.0, 8868.333333333334], [320.0, 10457.833333333334], [322.0, 11303.0], [323.0, 16939.833333333336], [324.0, 7086.4], [325.0, 10667.666666666668], [326.0, 10765.5], [327.0, 11609.25], [328.0, 12927.5], [334.0, 8915.666666666666], [335.0, 10840.0], [332.0, 4096.0], [333.0, 8957.8], [329.0, 11847.666666666666], [331.0, 9196.571428571428], [337.0, 11499.4], [336.0, 9122.0], [338.0, 9404.375], [339.0, 10649.8], [340.0, 7936.0], [341.0, 11019.625], [342.0, 7680.0], [343.0, 10975.625000000002], [344.0, 7936.0], [351.0, 9431.0], [348.0, 10725.636363636362], [349.0, 5888.0], [345.0, 10750.0], [346.0, 12287.0], [347.0, 13218.25], [355.0, 14184.0], [353.0, 8511.75], [352.0, 14013.25], [354.0, 9738.777777777777], [356.0, 12657.999999999998], [359.0, 12652.0], [360.0, 13380.222222222223], [366.0, 9972.333333333334], [367.0, 12586.57142857143], [364.0, 8874.333333333332], [365.0, 13311.5], [361.0, 10308.0], [362.0, 9333.375], [363.0, 10574.846153846152], [369.0, 10003.666666666666], [368.0, 7264.124999999999], [370.0, 6144.333333333333], [371.0, 5547.333333333333], [372.0, 9471.8], [373.0, 67482.0], [374.0, 33359.5], [375.0, 11352.666666666666], [376.0, 11348.166666666668], [383.0, 10892.375], [381.0, 10705.666666666668], [382.0, 7168.0], [377.0, 10850.0], [378.0, 11174.5], [385.0, 12435.142857142857], [384.0, 10197.5], [386.0, 11907.25], [387.0, 11734.0], [388.0, 7424.0], [389.0, 7940.0], [390.0, 7168.0], [391.0, 10910.0], [392.0, 12886.333333333334], [398.0, 12246.499999999998], [399.0, 7447.4], [396.0, 12391.0], [397.0, 11890.0], [393.0, 11957.0], [394.0, 15140.428571428572], [395.0, 13822.666666666666], [402.0, 7536.090909090908], [400.0, 10336.6], [403.0, 12185.2], [412.0, 8302.0], [413.0, 14164.833333333334], [414.0, 11581.0], [415.0, 7934.5], [404.0, 12830.5], [406.0, 8221.88888888889], [407.0, 10258.0], [408.0, 9898.833333333334], [409.0, 11511.0], [410.0, 6759.9], [411.0, 11776.0], [418.0, 10086.4], [417.0, 10495.5], [419.0, 13121.333333333336], [428.0, 12067.5], [430.0, 13067.0], [431.0, 13310.4], [420.0, 10632.5], [421.0, 11921.5], [422.0, 7168.75], [423.0, 10623.75], [424.0, 9424.2], [425.0, 7935.5], [426.0, 11519.0], [427.0, 10753.2], [433.0, 11659.18181818182], [432.0, 11224.0], [434.0, 10672.083333333334], [435.0, 12730.0], [436.0, 10321.42857142857], [437.0, 12920.5], [438.0, 13785.857142857143], [439.0, 13266.5], [440.0, 12543.5], [446.0, 53889.55555555555], [447.0, 12346.142857142857], [444.0, 10667.111111111111], [445.0, 9500.222222222223], [441.0, 6527.75], [442.0, 55358.0], [443.0, 10548.0], [449.0, 8637.0], [448.0, 11254.0], [450.0, 8338.142857142857], [451.0, 11009.142857142859], [452.0, 7884.2], [453.0, 13824.0], [454.0, 68456.5], [455.0, 13823.0], [457.0, 8798.75], [462.0, 13310.5], [463.0, 8397.8], [460.0, 39871.0], [461.0, 13248.5], [458.0, 9249.916666666668], [459.0, 10111.2], [465.0, 13248.125], [464.0, 15487.75], [466.0, 10751.749999999998], [467.0, 9344.0], [468.0, 7508.5555555555575], [469.0, 12808.666666666666], [470.0, 10922.666666666666], [471.0, 63419.89473684211], [472.0, 8550.0], [478.0, 5438.75], [479.0, 6656.5], [476.0, 10280.142857142857], [477.0, 11025.90909090909], [473.0, 39547.2], [474.0, 16896.0], [475.0, 18563.0], [481.0, 26899.0], [480.0, 11122.25], [482.0, 8686.818181818182], [483.0, 8704.0], [484.0, 1.0], [485.0, 10499.0], [486.0, 4352.0], [487.0, 11158.285714285716], [488.0, 11017.0], [494.0, 8243.4], [495.0, 11391.333333333334], [492.0, 12881.6], [493.0, 6752.666666666667], [489.0, 8089.4], [490.0, 10748.333333333334], [491.0, 29473.666666666668], [496.0, 7940.0], [497.0, 8142.285714285715], [498.0, 8865.857142857143], [499.0, 9168.25], [500.0, 16011.653846153853]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[379.31260504201657, 16465.434173669477]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 77588.0], [3.0, 39.0], [4.0, 37.0], [5.0, 116575.66666666667], [6.0, 335.0], [7.0, 33.0], [8.0, 113802.5], [9.0, 32.0], [10.0, 38.0], [11.0, 111879.5], [12.0, 38.0], [13.0, 30.0], [14.0, 23.0], [15.0, 35.0], [16.0, 70285.5], [17.0, 111.0], [18.0, 58.0], [19.0, 455.0], [20.0, 220.0], [21.0, 276.0], [22.0, 463.0], [23.0, 591.0], [24.0, 106767.5], [25.0, 107040.0], [26.0, 594.0], [28.0, 124042.8], [30.0, 106215.0], [31.0, 1418.0], [32.0, 1694.0], [33.0, 108107.5], [34.0, 1986.0], [35.0, 1687.0], [37.0, 2011.0], [38.0, 1608.0], [39.0, 1637.0], [40.0, 1951.0], [42.0, 2195.0], [43.0, 1063.5], [44.0, 2073.0], [46.0, 106766.0], [47.0, 106925.5], [48.0, 2411.0], [49.0, 141568.33333333334], [50.0, 2517.0], [51.0, 2958.0], [53.0, 3352.0], [54.0, 3301.5], [56.0, 3107.0], [57.0, 3252.0], [59.0, 3682.5], [60.0, 3661.0], [61.0, 80551.75], [62.0, 3378.0], [63.0, 3492.0], [64.0, 3466.0], [65.0, 3295.0], [66.0, 3884.0], [67.0, 3820.0], [68.0, 3688.0], [70.0, 4130.0], [71.0, 4009.0], [72.0, 4433.0], [73.0, 4398.0], [74.0, 4042.0], [75.0, 4313.0], [76.0, 4137.0], [77.0, 4190.0], [78.0, 4239.0], [79.0, 4315.0], [80.0, 4372.0], [81.0, 4646.0], [82.0, 4584.0], [83.0, 4913.0], [85.0, 5006.0], [86.0, 5027.0], [87.0, 96745.0], [88.0, 96834.5], [89.0, 5226.0], [90.0, 85477.5], [91.0, 5259.0], [92.0, 5597.0], [94.0, 6112.0], [95.0, 6138.0], [96.0, 6362.0], [97.0, 26452.0], [98.0, 26660.0], [99.0, 6456.0], [100.0, 6419.0], [101.0, 6544.0], [102.0, 6286.0], [103.0, 6404.0], [104.0, 6271.0], [105.0, 6194.0], [106.0, 6366.0], [107.0, 6394.0], [108.0, 6502.0], [109.0, 6713.0], [110.0, 6747.0], [111.0, 6823.0], [112.0, 6981.0], [114.0, 6958.0], [116.0, 7111.0], [117.0, 7299.0], [119.0, 68019.4], [121.0, 8099.0], [122.0, 8226.0], [123.0, 8651.0], [125.0, 13213.0], [126.0, 8779.0], [127.0, 8577.0], [128.0, 8657.0], [129.0, 8888.0], [130.0, 8984.0], [131.0, 8612.0], [132.0, 8854.0], [133.0, 8737.0], [134.0, 8888.0], [135.0, 8951.0], [137.0, 9149.0], [138.0, 61863.5], [139.0, 9299.0], [140.0, 16192.5], [141.0, 9914.0], [142.0, 9913.0], [144.0, 10852.0], [145.0, 10501.5], [146.0, 16535.5], [147.0, 10628.0], [149.0, 11030.0], [150.0, 17024.0], [151.0, 16359.0], [152.0, 11421.0], [153.0, 11526.0], [154.0, 11251.0], [156.0, 11420.0], [158.0, 12752.0], [159.0, 12758.0], [161.0, 10935.0], [165.0, 19632.0], [168.0, 15660.5], [172.0, 11654.0], [174.0, 12840.0], [171.0, 18918.0], [176.0, 11464.0], [178.0, 18175.0], [184.0, 13857.0], [187.0, 14350.0], [189.0, 14752.0], [185.0, 14903.0], [198.0, 26382.0], [193.0, 27532.0], [192.0, 14490.0], [200.0, 19042.0], [201.0, 13947.0], [205.0, 13988.0], [209.0, 15977.0], [211.0, 12042.0], [213.0, 28911.333333333332], [212.0, 13719.0], [216.0, 24898.5], [217.0, 13358.0], [218.0, 13384.0], [219.0, 10070.5], [220.0, 37179.0], [222.0, 15966.0], [226.0, 13584.0], [228.0, 11438.0], [231.0, 13149.0], [229.0, 13217.0], [232.0, 11897.0], [233.0, 24649.5], [235.0, 17404.0], [236.0, 7818.0], [237.0, 33615.0], [239.0, 32376.0], [241.0, 11821.0], [242.0, 11593.0], [243.0, 13218.0], [245.0, 56604.0], [246.0, 19533.5], [248.0, 8090.0], [249.0, 54117.5], [250.0, 11749.0], [251.0, 62589.0], [252.0, 26438.0], [254.0, 11724.0], [255.0, 6630.0], [257.0, 18661.0], [256.0, 43350.333333333336], [258.0, 75065.0], [259.0, 10329.666666666666], [260.0, 94111.66666666667], [261.0, 11024.5], [262.0, 61489.0], [264.0, 106205.0], [270.0, 48864.0], [271.0, 15364.5], [268.0, 11324.0], [269.0, 13820.0], [265.0, 10917.0], [266.0, 34012.0], [273.0, 6655.5], [272.0, 65039.85714285713], [274.0, 25826.0], [275.0, 11190.0], [284.0, 59300.25], [285.0, 12517.0], [286.0, 64420.75], [287.0, 6725.666666666666], [276.0, 11624.75], [277.0, 14592.285714285714], [278.0, 64913.833333333336], [279.0, 13318.5], [280.0, 51414.85714285714], [281.0, 10430.5], [282.0, 38445.0], [289.0, 13284.0], [288.0, 26021.0], [290.0, 49402.333333333336], [291.0, 19855.5], [293.0, 9696.363636363638], [292.0, 127744.0], [294.0, 34357.75], [295.0, 2.0], [296.0, 9962.2], [302.0, 12099.714285714286], [303.0, 14789.874999999998], [300.0, 51150.666666666664], [301.0, 7751.0], [297.0, 13227.0], [298.0, 12017.0], [299.0, 63335.74999999999], [305.0, 11030.333333333334], [304.0, 8075.111111111111], [306.0, 10797.5], [307.0, 11489.0], [308.0, 11990.5], [309.0, 24132.285714285714], [310.0, 9819.5], [311.0, 21001.8], [312.0, 10484.909090909092], [318.0, 14502.5], [319.0, 8315.857142857143], [316.0, 6460.571428571429], [317.0, 11099.5], [313.0, 45843.53846153847], [314.0, 11099.5], [315.0, 23693.5], [321.0, 8194.0], [320.0, 4610.0], [322.0, 13723.666666666666], [323.0, 9393.8], [324.0, 9069.0], [325.0, 30213.6], [326.0, 12109.2], [327.0, 8942.166666666666], [328.0, 16383.0], [334.0, 8388.166666666666], [335.0, 28856.833333333332], [332.0, 9060.666666666668], [333.0, 9747.0], [329.0, 9191.4], [330.0, 9697.5], [331.0, 10154.333333333334], [337.0, 46963.5], [336.0, 9538.333333333334], [338.0, 9730.090909090908], [339.0, 9982.5], [340.0, 9868.0], [341.0, 11602.25], [342.0, 9055.5], [343.0, 10856.57142857143], [344.0, 5933.5], [351.0, 8918.0], [348.0, 7442.555555555556], [349.0, 12319.333333333334], [345.0, 13822.0], [346.0, 9511.0], [347.0, 10881.0], [353.0, 11951.666666666666], [352.0, 13398.75], [354.0, 7441.25], [355.0, 13111.333333333334], [356.0, 7567.0], [357.0, 15248.666666666666], [358.0, 10113.0], [359.0, 13312.0], [360.0, 9807.166666666668], [366.0, 10327.0], [367.0, 5824.6], [364.0, 10265.2], [365.0, 11569.272727272726], [361.0, 9113.4], [362.0, 9394.666666666666], [363.0, 11268.545454545456], [369.0, 32462.0], [368.0, 29083.833333333336], [370.0, 21570.88888888889], [371.0, 6287.0], [372.0, 7753.0], [373.0, 11040.0], [374.0, 33176.4], [375.0, 11895.8], [376.0, 12003.888888888889], [383.0, 13379.0], [381.0, 12755.0], [382.0, 7168.0], [378.0, 9061.0], [379.0, 13421.0], [385.0, 12161.5], [384.0, 9668.875], [386.0, 12216.5], [396.0, 7467.0], [397.0, 13024.75], [398.0, 13130.999999999998], [399.0, 8948.666666666666], [388.0, 9974.5], [389.0, 7940.0], [391.0, 10125.90909090909], [392.0, 13367.111111111111], [394.0, 18005.0], [395.0, 11093.666666666666], [412.0, 12230.0], [402.0, 9567.166666666666], [400.0, 12265.0], [403.0, 5889.75], [413.0, 7967.2], [414.0, 8461.5], [415.0, 4350.0], [406.0, 8248.666666666668], [407.0, 10224.0], [408.0, 11571.090909090906], [409.0, 10371.5], [410.0, 8449.25], [411.0, 14591.0], [418.0, 8602.6], [417.0, 11835.375], [419.0, 12064.111111111111], [429.0, 12087.0], [431.0, 12326.25], [420.0, 7270.0], [421.0, 13356.4], [422.0, 7375.2], [423.0, 10907.800000000001], [424.0, 11605.333333333332], [425.0, 9672.0], [426.0, 8192.0], [427.0, 12854.6], [433.0, 12338.8], [432.0, 13343.333333333334], [434.0, 9949.277777777777], [435.0, 7492.0], [436.0, 10502.166666666668], [437.0, 9132.0], [438.0, 10970.714285714286], [439.0, 9140.0], [440.0, 9947.57142857143], [446.0, 32043.600000000002], [447.0, 6851.666666666666], [444.0, 8997.42857142857], [445.0, 10594.142857142857], [441.0, 9689.384615384613], [442.0, 7936.0], [443.0, 11977.666666666666], [449.0, 7252.666666666667], [448.0, 6231.5], [450.0, 41194.444444444445], [451.0, 9537.75], [452.0, 8716.0], [453.0, 8192.0], [454.0, 68912.0], [455.0, 12531.0], [456.0, 12415.0], [463.0, 7056.285714285714], [460.0, 79394.85714285713], [462.0, 5583.5], [457.0, 8382.857142857143], [458.0, 22605.875], [459.0, 12800.666666666668], [465.0, 12412.25], [464.0, 12535.0], [466.0, 12920.333333333334], [467.0, 8436.4], [468.0, 8157.363636363636], [469.0, 11311.75], [470.0, 7874.666666666667], [471.0, 39304.25], [472.0, 10624.5], [478.0, 7964.909090909091], [479.0, 30136.666666666664], [476.0, 8188.5], [477.0, 27455.25], [473.0, 55253.333333333336], [474.0, 11752.0], [475.0, 13631.0], [481.0, 11873.583333333332], [480.0, 11618.571428571428], [482.0, 24765.699999999997], [483.0, 15364.0], [484.0, 10410.333333333334], [485.0, 11562.666666666666], [486.0, 10098.25], [487.0, 9473.333333333334], [488.0, 12994.0], [494.0, 10230.90909090909], [495.0, 13824.0], [492.0, 8968.0], [493.0, 7167.0], [489.0, 9787.166666666668], [490.0, 10564.6], [491.0, 22747.23076923077], [496.0, 7938.5], [497.0, 9291.57142857143], [498.0, 8997.57142857143], [499.0, 10148.4], [500.0, 15622.550827423172], [1.0, 90.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[376.18459069020884, 17957.72605671481]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 16.083333333333332, "minX": 1.53945618E12, "maxY": 998447.5666666667, "series": [{"data": [[1.5394569E12, 27.5], [1.5394563E12, 982956.7333333333], [1.53945624E12, 897931.6833333333], [1.5394566E12, 991114.4166666666], [1.53945648E12, 962981.3166666667], [1.53945654E12, 963588.0166666667], [1.53945684E12, 215374.58333333334], [1.53945618E12, 17746.75], [1.53945642E12, 987216.35], [1.53945672E12, 998447.5666666667], [1.53945678E12, 951150.1333333333], [1.53945666E12, 934767.55], [1.53945636E12, 926038.2333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5394569E12, 16.083333333333332], [1.5394563E12, 3505.8], [1.53945624E12, 3267.5333333333333], [1.5394566E12, 7218.35], [1.53945648E12, 4735.6], [1.53945654E12, 7416.733333333334], [1.53945684E12, 1324.6666666666667], [1.53945618E12, 129.2], [1.53945642E12, 3262.383333333333], [1.53945672E12, 7256.55], [1.53945678E12, 7394.533333333334], [1.53945666E12, 7589.2], [1.53945636E12, 3216.4333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5394569E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 78.5, "minX": 1.53945618E12, "maxY": 194557.0, "series": [{"data": [[1.5394569E12, 155135.0], [1.5394563E12, 7342.054095826897], [1.53945624E12, 3184.2847457627117], [1.5394566E12, 11448.208223972008], [1.53945648E12, 14708.781935483863], [1.53945654E12, 12060.014401440156], [1.53945684E12, 60520.0837696335], [1.53945618E12, 1221.6363636363635], [1.53945642E12, 13087.813169984684], [1.53945672E12, 13122.630630630625], [1.53945678E12, 14398.652766639922], [1.53945666E12, 13529.293760831888], [1.53945636E12, 12071.902960526324]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.5394569E12, 194557.0], [1.5394563E12, 6857.941176470589], [1.53945624E12, 2745.9814814814813], [1.5394566E12, 10373.784615384624], [1.53945648E12, 12541.46896551724], [1.53945654E12, 10559.59477124183], [1.53945684E12, 93304.97014925373], [1.53945618E12, 1771.5], [1.53945642E12, 14041.136363636366], [1.53945672E12, 13697.751677852344], [1.53945678E12, 19664.648648648654], [1.53945666E12, 17643.692556634312], [1.53945636E12, 11366.166666666668]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394569E12, 168276.66666666666], [1.5394563E12, 6160.727272727272], [1.53945624E12, 1796.2711864406776], [1.5394566E12, 10552.453571428572], [1.53945648E12, 28513.23428571428], [1.53945654E12, 13646.53086419753], [1.53945684E12, 99742.21428571429], [1.53945618E12, 78.5], [1.53945642E12, 21434.088235294115], [1.53945672E12, 14155.377622377624], [1.53945678E12, 18557.33187772925], [1.53945666E12, 16178.628482972132], [1.53945636E12, 11044.486486486487]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5394569E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 78.25, "minX": 1.53945618E12, "maxY": 194557.0, "series": [{"data": [[1.5394569E12, 155135.0], [1.5394563E12, 7340.873261205561], [1.53945624E12, 3183.1898305084746], [1.5394566E12, 11447.54943132109], [1.53945648E12, 14707.789677419352], [1.53945654E12, 12059.361836183616], [1.53945684E12, 60518.633507853396], [1.53945618E12, 1221.0], [1.53945642E12, 13086.647779479323], [1.53945672E12, 13121.918918918926], [1.53945678E12, 14398.062550120281], [1.53945666E12, 13528.597920277294], [1.53945636E12, 12070.643092105267]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.5394569E12, 194557.0], [1.5394563E12, 6857.941176470589], [1.53945624E12, 2745.9814814814813], [1.5394566E12, 10373.780769230776], [1.53945648E12, 12541.46896551724], [1.53945654E12, 10559.59150326798], [1.53945684E12, 93304.97014925373], [1.53945618E12, 1771.5], [1.53945642E12, 14041.136363636366], [1.53945672E12, 13697.751677852344], [1.53945678E12, 19664.648648648654], [1.53945666E12, 17643.689320388345], [1.53945636E12, 11366.166666666668]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394569E12, 168276.66666666666], [1.5394563E12, 6160.70909090909], [1.53945624E12, 1796.2372881355934], [1.5394566E12, 10552.453571428572], [1.53945648E12, 28513.22857142858], [1.53945654E12, 13646.52777777778], [1.53945684E12, 99742.21428571429], [1.53945618E12, 78.25], [1.53945642E12, 21434.058823529413], [1.53945672E12, 14155.370629370625], [1.53945678E12, 18557.318777292578], [1.53945666E12, 16178.619195046436], [1.53945636E12, 11044.486486486487]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5394569E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53945618E12, "maxY": 6.625, "series": [{"data": [[1.5394569E12, 0.0], [1.5394563E12, 0.6816074188562602], [1.53945624E12, 0.8762711864406783], [1.5394566E12, 0.5678040244969383], [1.53945648E12, 0.6541935483870966], [1.53945654E12, 0.7092709270927098], [1.53945684E12, 0.5445026178010471], [1.53945618E12, 0.36363636363636365], [1.53945642E12, 0.7182235834609484], [1.53945672E12, 0.6090090090090087], [1.53945678E12, 0.6463512429831603], [1.53945666E12, 0.6091854419410754], [1.53945636E12, 0.7598684210526322]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.5394569E12, 0.0], [1.5394563E12, 1.1568627450980395], [1.53945624E12, 0.5925925925925924], [1.5394566E12, 0.7999999999999994], [1.53945648E12, 0.7172413793103447], [1.53945654E12, 0.7810457516339872], [1.53945684E12, 0.5223880597014924], [1.53945618E12, 0.0], [1.53945642E12, 0.5909090909090908], [1.53945672E12, 0.6812080536912752], [1.53945678E12, 0.6621621621621621], [1.53945666E12, 0.766990291262136], [1.53945636E12, 0.9285714285714285]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5394569E12, 1.0], [1.5394563E12, 0.709090909090909], [1.53945624E12, 1.3389830508474574], [1.5394566E12, 0.8535714285714284], [1.53945648E12, 0.9371428571428569], [1.53945654E12, 0.7654320987654329], [1.53945684E12, 0.5714285714285715], [1.53945618E12, 6.625], [1.53945642E12, 0.8823529411764709], [1.53945672E12, 0.5979020979020983], [1.53945678E12, 0.7860262008733621], [1.53945666E12, 0.7801857585139316], [1.53945636E12, 1.5135135135135136]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5394569E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.53945618E12, "maxY": 125423.0, "series": [{"data": [[1.53945642E12, 54757.0], [1.53945672E12, 65828.0], [1.5394563E12, 10624.0], [1.53945678E12, 125423.0], [1.53945624E12, 5629.0], [1.5394566E12, 19080.0], [1.53945666E12, 45711.0], [1.53945636E12, 18538.0], [1.53945648E12, 30058.0], [1.53945654E12, 21679.0], [1.53945684E12, 115800.0], [1.53945618E12, 5564.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53945642E12, 10464.0], [1.53945672E12, 10260.0], [1.5394563E12, 4009.0], [1.53945678E12, 10602.0], [1.53945624E12, 23.0], [1.5394566E12, 10255.0], [1.53945666E12, 10737.0], [1.53945636E12, 8612.0], [1.53945648E12, 10568.0], [1.53945654E12, 10078.0], [1.53945684E12, 11190.0], [1.53945618E12, 21.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53945642E12, 13217.0], [1.53945672E12, 13310.0], [1.5394563E12, 8396.2], [1.53945678E12, 13427.800000000001], [1.53945624E12, 4872.7], [1.5394566E12, 13232.0], [1.53945666E12, 13347.3], [1.53945636E12, 12687.6], [1.53945648E12, 13306.0], [1.53945654E12, 13276.8], [1.53945684E12, 13500.300000000001], [1.53945618E12, 2023.1999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53945642E12, 14044.55], [1.53945672E12, 15379.960000000003], [1.5394563E12, 10251.36], [1.53945678E12, 15557.329999999998], [1.53945624E12, 5409.85], [1.5394566E12, 14851.05], [1.53945666E12, 15134.090000000004], [1.53945636E12, 13590.749999999996], [1.53945648E12, 14132.839999999998], [1.53945654E12, 14851.2], [1.53945684E12, 20682.61000000013], [1.53945618E12, 5564.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53945642E12, 13523.5], [1.53945672E12, 13624.2], [1.5394563E12, 9468.399999999998], [1.53945678E12, 13728.9], [1.53945624E12, 5066.8], [1.5394566E12, 13528.150000000001], [1.53945666E12, 13635.65], [1.53945636E12, 12975.5], [1.53945648E12, 13560.0], [1.53945654E12, 13553.2], [1.53945684E12, 13870.0], [1.53945618E12, 4226.399999999992]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945684E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155137.0, "series": [{"data": [[0.0, 1119.0], [18.0, 12667.0], [5.0, 16355.0], [11.0, 12068.5], [12.0, 7397.0], [28.0, 12420.0], [29.0, 12425.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 155137.0], [18.0, 13311.0], [5.0, 127747.0], [11.0, 11258.0], [12.0, 1.0], [28.0, 11008.0], [29.0, 9983.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155137.0, "series": [{"data": [[0.0, 1118.0], [18.0, 12665.0], [5.0, 16354.0], [11.0, 12068.0], [12.0, 7395.0], [28.0, 12419.0], [29.0, 12424.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 155137.0], [18.0, 13311.0], [5.0, 127747.0], [11.0, 11258.0], [12.0, 1.0], [28.0, 11008.0], [29.0, 9983.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.53945618E12, "maxY": 30.766666666666666, "series": [{"data": [[1.53945642E12, 12.816666666666666], [1.53945672E12, 28.433333333333334], [1.5394563E12, 13.55], [1.53945678E12, 25.283333333333335], [1.53945624E12, 12.716666666666667], [1.5394566E12, 29.05], [1.53945666E12, 30.766666666666666], [1.53945636E12, 12.45], [1.53945648E12, 19.25], [1.53945654E12, 30.016666666666666], [1.53945618E12, 0.5833333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945678E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945618E12, "maxY": 18.4, "series": [{"data": [[1.53945642E12, 11.133333333333333], [1.53945672E12, 11.35], [1.5394563E12, 11.633333333333333], [1.53945678E12, 10.733333333333333], [1.53945624E12, 10.716666666666667], [1.5394566E12, 11.266666666666667], [1.53945666E12, 10.716666666666667], [1.53945636E12, 10.733333333333333], [1.53945648E12, 11.033333333333333], [1.53945654E12, 11.083333333333334], [1.53945684E12, 2.783333333333333], [1.53945618E12, 0.31666666666666665]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53945642E12, 0.3333333333333333], [1.53945672E12, 0.4666666666666667], [1.5394563E12, 0.85], [1.53945678E12, 0.35], [1.53945624E12, 0.8666666666666667], [1.5394566E12, 0.45], [1.53945666E12, 0.4166666666666667], [1.53945636E12, 0.6833333333333333], [1.53945648E12, 0.4166666666666667], [1.53945654E12, 0.65], [1.53945684E12, 0.016666666666666666], [1.53945618E12, 0.13333333333333333]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53945642E12, 0.31666666666666665], [1.5394569E12, 0.08333333333333333], [1.53945672E12, 16.233333333333334], [1.5394563E12, 0.06666666666666667], [1.53945678E12, 17.033333333333335], [1.53945624E12, 0.1], [1.5394566E12, 16.216666666666665], [1.53945666E12, 18.4], [1.53945636E12, 0.03333333333333333], [1.53945648E12, 6.633333333333334], [1.53945654E12, 17.033333333333335], [1.53945684E12, 1.85]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53945642E12, 0.03333333333333333], [1.53945672E12, 0.18333333333333332], [1.53945678E12, 0.18333333333333332], [1.53945624E12, 0.03333333333333333], [1.5394566E12, 0.11666666666666667], [1.53945666E12, 0.23333333333333334], [1.53945648E12, 0.16666666666666666], [1.53945654E12, 0.25], [1.53945684E12, 0.5833333333333334]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5394569E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53945618E12, "maxY": 10.916666666666666, "series": [{"data": [[1.53945642E12, 0.35], [1.53945672E12, 0.43333333333333335], [1.5394563E12, 0.9166666666666666], [1.53945678E12, 0.35], [1.53945624E12, 0.95], [1.5394566E12, 0.45], [1.53945666E12, 0.5166666666666667], [1.53945636E12, 0.6166666666666667], [1.53945648E12, 0.5333333333333333], [1.53945654E12, 0.6333333333333333], [1.53945684E12, 0.4666666666666667], [1.53945618E12, 0.13333333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53945642E12, 0.3333333333333333], [1.53945672E12, 0.4666666666666667], [1.5394563E12, 0.85], [1.53945678E12, 0.35], [1.53945624E12, 0.8666666666666667], [1.5394566E12, 0.45], [1.53945666E12, 0.4166666666666667], [1.53945636E12, 0.6833333333333333], [1.53945648E12, 0.4166666666666667], [1.53945654E12, 0.65], [1.53945684E12, 0.016666666666666666], [1.53945618E12, 0.13333333333333333]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53945642E12, 10.783333333333333], [1.53945672E12, 10.916666666666666], [1.5394563E12, 10.716666666666667], [1.53945678E12, 10.383333333333333], [1.53945624E12, 9.766666666666667], [1.5394566E12, 10.816666666666666], [1.53945666E12, 10.2], [1.53945636E12, 10.116666666666667], [1.53945648E12, 10.5], [1.53945654E12, 10.45], [1.53945684E12, 2.316666666666667], [1.53945618E12, 0.18333333333333332]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53945642E12, 0.1], [1.5394569E12, 0.016666666666666666], [1.53945672E12, 7.583333333333333], [1.5394563E12, 0.06666666666666667], [1.53945678E12, 10.4], [1.53945624E12, 0.06666666666666667], [1.5394566E12, 8.233333333333333], [1.53945666E12, 9.033333333333333], [1.53945636E12, 0.016666666666666666], [1.53945648E12, 2.4166666666666665], [1.53945654E12, 8.066666666666666], [1.53945684E12, 0.8666666666666667]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53945642E12, 0.21666666666666667], [1.5394569E12, 0.05], [1.53945672E12, 4.333333333333333], [1.53945678E12, 3.466666666666667], [1.53945624E12, 0.03333333333333333], [1.5394566E12, 4.216666666666667], [1.53945666E12, 4.866666666666666], [1.53945648E12, 2.3833333333333333], [1.53945654E12, 4.766666666666667], [1.53945684E12, 0.4666666666666667]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53945642E12, 0.03333333333333333], [1.5394569E12, 0.016666666666666666], [1.53945672E12, 4.5], [1.53945678E12, 3.35], [1.53945624E12, 0.03333333333333333], [1.5394566E12, 3.8833333333333333], [1.53945666E12, 4.733333333333333], [1.53945636E12, 0.016666666666666666], [1.53945648E12, 2.0], [1.53945654E12, 4.45], [1.53945684E12, 1.1]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5394569E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
