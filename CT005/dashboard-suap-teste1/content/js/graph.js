/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 211712.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 1240.0], [3.1, 1314.0], [3.2, 1355.0], [3.3, 1374.0], [3.4, 1386.0], [3.5, 1402.0], [3.6, 1417.0], [3.7, 1439.0], [3.8, 1452.0], [3.9, 1473.0], [4.0, 1516.0], [4.1, 1604.0], [4.2, 1682.0], [4.3, 1749.0], [4.4, 1824.0], [4.5, 1900.0], [4.6, 1940.0], [4.7, 2008.0], [4.8, 2069.0], [4.9, 2125.0], [5.0, 2181.0], [5.1, 2303.0], [5.2, 2360.0], [5.3, 2433.0], [5.4, 2488.0], [5.5, 2523.0], [5.6, 2567.0], [5.7, 2595.0], [5.8, 2722.0], [5.9, 2810.0], [6.0, 2888.0], [6.1, 2959.0], [6.2, 3034.0], [6.3, 3062.0], [6.4, 3167.0], [6.5, 3330.0], [6.6, 3444.0], [6.7, 3532.0], [6.8, 3585.0], [6.9, 3649.0], [7.0, 3724.0], [7.1, 3772.0], [7.2, 3894.0], [7.3, 3947.0], [7.4, 4045.0], [7.5, 4107.0], [7.6, 4192.0], [7.7, 4253.0], [7.8, 4311.0], [7.9, 4406.0], [8.0, 4493.0], [8.1, 4557.0], [8.2, 4712.0], [8.3, 4753.0], [8.4, 4876.0], [8.5, 4931.0], [8.6, 4997.0], [8.7, 5051.0], [8.8, 5134.0], [8.9, 5179.0], [9.0, 5220.0], [9.1, 5276.0], [9.2, 5330.0], [9.3, 5367.0], [9.4, 5386.0], [9.5, 5399.0], [9.6, 5419.0], [9.7, 5442.0], [9.8, 5469.0], [9.9, 5508.0], [10.0, 5554.0], [10.1, 5583.0], [10.2, 5657.0], [10.3, 5737.0], [10.4, 5825.0], [10.5, 5892.0], [10.6, 6103.0], [10.7, 6302.0], [10.8, 6431.0], [10.9, 6512.0], [11.0, 6643.0], [11.1, 6706.0], [11.2, 6760.0], [11.3, 6824.0], [11.4, 6891.0], [11.5, 6949.0], [11.6, 6991.0], [11.7, 7024.0], [11.8, 7057.0], [11.9, 7085.0], [12.0, 7162.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7169.0], [13.2, 7172.0], [13.3, 7172.0], [13.4, 7204.0], [13.5, 7248.0], [13.6, 7292.0], [13.7, 7328.0], [13.8, 7386.0], [13.9, 7420.0], [14.0, 7423.0], [14.1, 7424.0], [14.2, 7424.0], [14.3, 7424.0], [14.4, 7424.0], [14.5, 7424.0], [14.6, 7424.0], [14.7, 7427.0], [14.8, 7428.0], [14.9, 7496.0], [15.0, 7594.0], [15.1, 7676.0], [15.2, 7679.0], [15.3, 7680.0], [15.4, 7680.0], [15.5, 7680.0], [15.6, 7680.0], [15.7, 7684.0], [15.8, 7684.0], [15.9, 7750.0], [16.0, 7852.0], [16.1, 7931.0], [16.2, 7935.0], [16.3, 7936.0], [16.4, 7936.0], [16.5, 7936.0], [16.6, 7936.0], [16.7, 7940.0], [16.8, 7948.0], [16.9, 7981.0], [17.0, 8001.0], [17.1, 8044.0], [17.2, 8107.0], [17.3, 8170.0], [17.4, 8191.0], [17.5, 8192.0], [17.6, 8192.0], [17.7, 8192.0], [17.8, 8192.0], [17.9, 8196.0], [18.0, 8200.0], [18.1, 8274.0], [18.2, 8344.0], [18.3, 8368.0], [18.4, 8443.0], [18.5, 8448.0], [18.6, 8448.0], [18.7, 8478.0], [18.8, 8532.0], [18.9, 8614.0], [19.0, 8660.0], [19.1, 8695.0], [19.2, 8700.0], [19.3, 8700.0], [19.4, 8704.0], [19.5, 8704.0], [19.6, 8704.0], [19.7, 8704.0], [19.8, 8704.0], [19.9, 8704.0], [20.0, 8705.0], [20.1, 8733.0], [20.2, 8754.0], [20.3, 8798.0], [20.4, 8811.0], [20.5, 8840.0], [20.6, 8872.0], [20.7, 8912.0], [20.8, 8952.0], [20.9, 8958.0], [21.0, 8960.0], [21.1, 8960.0], [21.2, 8960.0], [21.3, 8979.0], [21.4, 9068.0], [21.5, 9133.0], [21.6, 9181.0], [21.7, 9212.0], [21.8, 9215.0], [21.9, 9216.0], [22.0, 9216.0], [22.1, 9216.0], [22.2, 9219.0], [22.3, 9222.0], [22.4, 9317.0], [22.5, 9400.0], [22.6, 9468.0], [22.7, 9471.0], [22.8, 9472.0], [22.9, 9472.0], [23.0, 9504.0], [23.1, 9585.0], [23.2, 9646.0], [23.3, 9684.0], [23.4, 9724.0], [23.5, 9727.0], [23.6, 9728.0], [23.7, 9728.0], [23.8, 9728.0], [23.9, 9729.0], [24.0, 9732.0], [24.1, 9772.0], [24.2, 9849.0], [24.3, 9882.0], [24.4, 9938.0], [24.5, 9975.0], [24.6, 9983.0], [24.7, 9984.0], [24.8, 9984.0], [24.9, 9984.0], [25.0, 10010.0], [25.1, 10058.0], [25.2, 10083.0], [25.3, 10136.0], [25.4, 10174.0], [25.5, 10196.0], [25.6, 10236.0], [25.7, 10239.0], [25.8, 10240.0], [25.9, 10240.0], [26.0, 10240.0], [26.1, 10240.0], [26.2, 10241.0], [26.3, 10244.0], [26.4, 10275.0], [26.5, 10301.0], [26.6, 10331.0], [26.7, 10396.0], [26.8, 10433.0], [26.9, 10491.0], [27.0, 10496.0], [27.1, 10497.0], [27.2, 10528.0], [27.3, 10571.0], [27.4, 10710.0], [27.5, 10749.0], [27.6, 10752.0], [27.7, 10752.0], [27.8, 10785.0], [27.9, 10927.0], [28.0, 11004.0], [28.1, 11007.0], [28.2, 11008.0], [28.3, 11008.0], [28.4, 11028.0], [28.5, 11112.0], [28.6, 11198.0], [28.7, 11259.0], [28.8, 11263.0], [28.9, 11264.0], [29.0, 11265.0], [29.1, 11279.0], [29.2, 11347.0], [29.3, 11387.0], [29.4, 11426.0], [29.5, 11457.0], [29.6, 11483.0], [29.7, 11508.0], [29.8, 11519.0], [29.9, 11521.0], [30.0, 11539.0], [30.1, 11578.0], [30.2, 11593.0], [30.3, 11611.0], [30.4, 11626.0], [30.5, 11638.0], [30.6, 11650.0], [30.7, 11659.0], [30.8, 11667.0], [30.9, 11675.0], [31.0, 11682.0], [31.1, 11690.0], [31.2, 11693.0], [31.3, 11700.0], [31.4, 11711.0], [31.5, 11725.0], [31.6, 11731.0], [31.7, 11736.0], [31.8, 11746.0], [31.9, 11750.0], [32.0, 11756.0], [32.1, 11759.0], [32.2, 11762.0], [32.3, 11767.0], [32.4, 11772.0], [32.5, 11775.0], [32.6, 11776.0], [32.7, 11776.0], [32.8, 11780.0], [32.9, 11786.0], [33.0, 11792.0], [33.1, 11797.0], [33.2, 11805.0], [33.3, 11811.0], [33.4, 11817.0], [33.5, 11822.0], [33.6, 11830.0], [33.7, 11834.0], [33.8, 11838.0], [33.9, 11846.0], [34.0, 11852.0], [34.1, 11857.0], [34.2, 11862.0], [34.3, 11869.0], [34.4, 11879.0], [34.5, 11886.0], [34.6, 11891.0], [34.7, 11898.0], [34.8, 11901.0], [34.9, 11908.0], [35.0, 11911.0], [35.1, 11915.0], [35.2, 11920.0], [35.3, 11925.0], [35.4, 11931.0], [35.5, 11937.0], [35.6, 11942.0], [35.7, 11946.0], [35.8, 11950.0], [35.9, 11955.0], [36.0, 11958.0], [36.1, 11962.0], [36.2, 11964.0], [36.3, 11968.0], [36.4, 11974.0], [36.5, 11976.0], [36.6, 11980.0], [36.7, 11987.0], [36.8, 11992.0], [36.9, 11995.0], [37.0, 11998.0], [37.1, 12002.0], [37.2, 12007.0], [37.3, 12013.0], [37.4, 12018.0], [37.5, 12021.0], [37.6, 12026.0], [37.7, 12029.0], [37.8, 12031.0], [37.9, 12034.0], [38.0, 12038.0], [38.1, 12041.0], [38.2, 12045.0], [38.3, 12048.0], [38.4, 12052.0], [38.5, 12058.0], [38.6, 12062.0], [38.7, 12066.0], [38.8, 12072.0], [38.9, 12079.0], [39.0, 12084.0], [39.1, 12087.0], [39.2, 12091.0], [39.3, 12094.0], [39.4, 12097.0], [39.5, 12101.0], [39.6, 12105.0], [39.7, 12108.0], [39.8, 12111.0], [39.9, 12116.0], [40.0, 12120.0], [40.1, 12122.0], [40.2, 12128.0], [40.3, 12130.0], [40.4, 12133.0], [40.5, 12136.0], [40.6, 12139.0], [40.7, 12144.0], [40.8, 12150.0], [40.9, 12153.0], [41.0, 12157.0], [41.1, 12160.0], [41.2, 12163.0], [41.3, 12166.0], [41.4, 12170.0], [41.5, 12175.0], [41.6, 12179.0], [41.7, 12181.0], [41.8, 12184.0], [41.9, 12187.0], [42.0, 12192.0], [42.1, 12195.0], [42.2, 12199.0], [42.3, 12204.0], [42.4, 12207.0], [42.5, 12210.0], [42.6, 12214.0], [42.7, 12217.0], [42.8, 12220.0], [42.9, 12222.0], [43.0, 12226.0], [43.1, 12231.0], [43.2, 12235.0], [43.3, 12237.0], [43.4, 12240.0], [43.5, 12245.0], [43.6, 12249.0], [43.7, 12252.0], [43.8, 12255.0], [43.9, 12259.0], [44.0, 12262.0], [44.1, 12264.0], [44.2, 12267.0], [44.3, 12269.0], [44.4, 12272.0], [44.5, 12276.0], [44.6, 12278.0], [44.7, 12282.0], [44.8, 12284.0], [44.9, 12285.0], [45.0, 12287.0], [45.1, 12288.0], [45.2, 12288.0], [45.3, 12290.0], [45.4, 12291.0], [45.5, 12294.0], [45.6, 12298.0], [45.7, 12303.0], [45.8, 12305.0], [45.9, 12309.0], [46.0, 12311.0], [46.1, 12314.0], [46.2, 12318.0], [46.3, 12321.0], [46.4, 12324.0], [46.5, 12332.0], [46.6, 12336.0], [46.7, 12338.0], [46.8, 12343.0], [46.9, 12346.0], [47.0, 12348.0], [47.1, 12350.0], [47.2, 12353.0], [47.3, 12356.0], [47.4, 12361.0], [47.5, 12364.0], [47.6, 12366.0], [47.7, 12370.0], [47.8, 12373.0], [47.9, 12376.0], [48.0, 12379.0], [48.1, 12381.0], [48.2, 12385.0], [48.3, 12390.0], [48.4, 12392.0], [48.5, 12395.0], [48.6, 12398.0], [48.7, 12403.0], [48.8, 12406.0], [48.9, 12408.0], [49.0, 12411.0], [49.1, 12413.0], [49.2, 12417.0], [49.3, 12422.0], [49.4, 12426.0], [49.5, 12428.0], [49.6, 12432.0], [49.7, 12436.0], [49.8, 12439.0], [49.9, 12442.0], [50.0, 12445.0], [50.1, 12450.0], [50.2, 12452.0], [50.3, 12454.0], [50.4, 12457.0], [50.5, 12461.0], [50.6, 12464.0], [50.7, 12467.0], [50.8, 12469.0], [50.9, 12474.0], [51.0, 12476.0], [51.1, 12479.0], [51.2, 12482.0], [51.3, 12484.0], [51.4, 12487.0], [51.5, 12489.0], [51.6, 12492.0], [51.7, 12495.0], [51.8, 12499.0], [51.9, 12502.0], [52.0, 12506.0], [52.1, 12509.0], [52.2, 12511.0], [52.3, 12514.0], [52.4, 12519.0], [52.5, 12521.0], [52.6, 12524.0], [52.7, 12528.0], [52.8, 12530.0], [52.9, 12532.0], [53.0, 12535.0], [53.1, 12537.0], [53.2, 12539.0], [53.3, 12541.0], [53.4, 12542.0], [53.5, 12544.0], [53.6, 12545.0], [53.7, 12547.0], [53.8, 12548.0], [53.9, 12550.0], [54.0, 12553.0], [54.1, 12557.0], [54.2, 12560.0], [54.3, 12563.0], [54.4, 12564.0], [54.5, 12567.0], [54.6, 12568.0], [54.7, 12570.0], [54.8, 12573.0], [54.9, 12575.0], [55.0, 12578.0], [55.1, 12581.0], [55.2, 12584.0], [55.3, 12587.0], [55.4, 12590.0], [55.5, 12592.0], [55.6, 12595.0], [55.7, 12596.0], [55.8, 12597.0], [55.9, 12601.0], [56.0, 12604.0], [56.1, 12606.0], [56.2, 12608.0], [56.3, 12612.0], [56.4, 12616.0], [56.5, 12618.0], [56.6, 12621.0], [56.7, 12623.0], [56.8, 12625.0], [56.9, 12628.0], [57.0, 12631.0], [57.1, 12633.0], [57.2, 12637.0], [57.3, 12640.0], [57.4, 12642.0], [57.5, 12645.0], [57.6, 12647.0], [57.7, 12649.0], [57.8, 12652.0], [57.9, 12655.0], [58.0, 12658.0], [58.1, 12661.0], [58.2, 12663.0], [58.3, 12664.0], [58.4, 12666.0], [58.5, 12671.0], [58.6, 12672.0], [58.7, 12676.0], [58.8, 12680.0], [58.9, 12681.0], [59.0, 12684.0], [59.1, 12685.0], [59.2, 12688.0], [59.3, 12691.0], [59.4, 12693.0], [59.5, 12695.0], [59.6, 12697.0], [59.7, 12699.0], [59.8, 12702.0], [59.9, 12705.0], [60.0, 12710.0], [60.1, 12713.0], [60.2, 12715.0], [60.3, 12720.0], [60.4, 12725.0], [60.5, 12728.0], [60.6, 12731.0], [60.7, 12733.0], [60.8, 12736.0], [60.9, 12740.0], [61.0, 12745.0], [61.1, 12747.0], [61.2, 12751.0], [61.3, 12755.0], [61.4, 12759.0], [61.5, 12763.0], [61.6, 12767.0], [61.7, 12771.0], [61.8, 12775.0], [61.9, 12778.0], [62.0, 12780.0], [62.1, 12784.0], [62.2, 12786.0], [62.3, 12790.0], [62.4, 12792.0], [62.5, 12794.0], [62.6, 12796.0], [62.7, 12798.0], [62.8, 12799.0], [62.9, 12799.0], [63.0, 12800.0], [63.1, 12800.0], [63.2, 12802.0], [63.3, 12803.0], [63.4, 12806.0], [63.5, 12807.0], [63.6, 12811.0], [63.7, 12813.0], [63.8, 12816.0], [63.9, 12819.0], [64.0, 12822.0], [64.1, 12824.0], [64.2, 12827.0], [64.3, 12831.0], [64.4, 12834.0], [64.5, 12837.0], [64.6, 12841.0], [64.7, 12843.0], [64.8, 12846.0], [64.9, 12848.0], [65.0, 12852.0], [65.1, 12855.0], [65.2, 12858.0], [65.3, 12861.0], [65.4, 12863.0], [65.5, 12870.0], [65.6, 12872.0], [65.7, 12876.0], [65.8, 12880.0], [65.9, 12882.0], [66.0, 12884.0], [66.1, 12888.0], [66.2, 12891.0], [66.3, 12895.0], [66.4, 12898.0], [66.5, 12901.0], [66.6, 12905.0], [66.7, 12908.0], [66.8, 12911.0], [66.9, 12917.0], [67.0, 12920.0], [67.1, 12922.0], [67.2, 12926.0], [67.3, 12931.0], [67.4, 12936.0], [67.5, 12940.0], [67.6, 12942.0], [67.7, 12945.0], [67.8, 12948.0], [67.9, 12951.0], [68.0, 12954.0], [68.1, 12959.0], [68.2, 12961.0], [68.3, 12965.0], [68.4, 12971.0], [68.5, 12976.0], [68.6, 12979.0], [68.7, 12983.0], [68.8, 12986.0], [68.9, 12990.0], [69.0, 12995.0], [69.1, 12998.0], [69.2, 13001.0], [69.3, 13004.0], [69.4, 13008.0], [69.5, 13010.0], [69.6, 13012.0], [69.7, 13016.0], [69.8, 13021.0], [69.9, 13025.0], [70.0, 13030.0], [70.1, 13034.0], [70.2, 13039.0], [70.3, 13043.0], [70.4, 13049.0], [70.5, 13052.0], [70.6, 13055.0], [70.7, 13057.0], [70.8, 13061.0], [70.9, 13067.0], [71.0, 13072.0], [71.1, 13078.0], [71.2, 13080.0], [71.3, 13083.0], [71.4, 13086.0], [71.5, 13089.0], [71.6, 13092.0], [71.7, 13097.0], [71.8, 13103.0], [71.9, 13108.0], [72.0, 13114.0], [72.1, 13118.0], [72.2, 13125.0], [72.3, 13129.0], [72.4, 13136.0], [72.5, 13141.0], [72.6, 13147.0], [72.7, 13153.0], [72.8, 13156.0], [72.9, 13162.0], [73.0, 13166.0], [73.1, 13171.0], [73.2, 13178.0], [73.3, 13182.0], [73.4, 13186.0], [73.5, 13189.0], [73.6, 13193.0], [73.7, 13198.0], [73.8, 13201.0], [73.9, 13206.0], [74.0, 13209.0], [74.1, 13213.0], [74.2, 13218.0], [74.3, 13222.0], [74.4, 13225.0], [74.5, 13230.0], [74.6, 13233.0], [74.7, 13238.0], [74.8, 13242.0], [74.9, 13244.0], [75.0, 13248.0], [75.1, 13250.0], [75.2, 13255.0], [75.3, 13258.0], [75.4, 13262.0], [75.5, 13268.0], [75.6, 13273.0], [75.7, 13278.0], [75.8, 13279.0], [75.9, 13283.0], [76.0, 13290.0], [76.1, 13293.0], [76.2, 13295.0], [76.3, 13300.0], [76.4, 13304.0], [76.5, 13307.0], [76.6, 13308.0], [76.7, 13308.0], [76.8, 13308.0], [76.9, 13308.0], [77.0, 13308.0], [77.1, 13309.0], [77.2, 13309.0], [77.3, 13311.0], [77.4, 13311.0], [77.5, 13311.0], [77.6, 13311.0], [77.7, 13311.0], [77.8, 13311.0], [77.9, 13311.0], [78.0, 13311.0], [78.1, 13311.0], [78.2, 13311.0], [78.3, 13311.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13312.0], [78.9, 13312.0], [79.0, 13312.0], [79.1, 13312.0], [79.2, 13312.0], [79.3, 13312.0], [79.4, 13312.0], [79.5, 13312.0], [79.6, 13312.0], [79.7, 13312.0], [79.8, 13312.0], [79.9, 13312.0], [80.0, 13312.0], [80.1, 13312.0], [80.2, 13312.0], [80.3, 13312.0], [80.4, 13312.0], [80.5, 13312.0], [80.6, 13312.0], [80.7, 13312.0], [80.8, 13312.0], [80.9, 13312.0], [81.0, 13312.0], [81.1, 13312.0], [81.2, 13312.0], [81.3, 13312.0], [81.4, 13312.0], [81.5, 13312.0], [81.6, 13312.0], [81.7, 13312.0], [81.8, 13312.0], [81.9, 13312.0], [82.0, 13312.0], [82.1, 13312.0], [82.2, 13313.0], [82.3, 13313.0], [82.4, 13313.0], [82.5, 13315.0], [82.6, 13315.0], [82.7, 13316.0], [82.8, 13316.0], [82.9, 13316.0], [83.0, 13316.0], [83.1, 13316.0], [83.2, 13316.0], [83.3, 13317.0], [83.4, 13319.0], [83.5, 13324.0], [83.6, 13331.0], [83.7, 13334.0], [83.8, 13339.0], [83.9, 13343.0], [84.0, 13345.0], [84.1, 13348.0], [84.2, 13355.0], [84.3, 13364.0], [84.4, 13370.0], [84.5, 13374.0], [84.6, 13382.0], [84.7, 13386.0], [84.8, 13391.0], [84.9, 13398.0], [85.0, 13403.0], [85.1, 13409.0], [85.2, 13415.0], [85.3, 13421.0], [85.4, 13427.0], [85.5, 13437.0], [85.6, 13449.0], [85.7, 13461.0], [85.8, 13469.0], [85.9, 13476.0], [86.0, 13484.0], [86.1, 13491.0], [86.2, 13495.0], [86.3, 13504.0], [86.4, 13511.0], [86.5, 13516.0], [86.6, 13521.0], [86.7, 13527.0], [86.8, 13534.0], [86.9, 13544.0], [87.0, 13547.0], [87.1, 13552.0], [87.2, 13565.0], [87.3, 13569.0], [87.4, 13574.0], [87.5, 13582.0], [87.6, 13587.0], [87.7, 13593.0], [87.8, 13600.0], [87.9, 13606.0], [88.0, 13613.0], [88.1, 13619.0], [88.2, 13632.0], [88.3, 13642.0], [88.4, 13649.0], [88.5, 13663.0], [88.6, 13673.0], [88.7, 13680.0], [88.8, 13696.0], [88.9, 13700.0], [89.0, 13707.0], [89.1, 13716.0], [89.2, 13725.0], [89.3, 13744.0], [89.4, 13755.0], [89.5, 13776.0], [89.6, 13795.0], [89.7, 13808.0], [89.8, 13820.0], [89.9, 13820.0], [90.0, 13823.0], [90.1, 13824.0], [90.2, 13824.0], [90.3, 13824.0], [90.4, 13824.0], [90.5, 13824.0], [90.6, 13824.0], [90.7, 13828.0], [90.8, 13828.0], [90.9, 13840.0], [91.0, 13852.0], [91.1, 13864.0], [91.2, 13875.0], [91.3, 13889.0], [91.4, 13903.0], [91.5, 13911.0], [91.6, 13923.0], [91.7, 13962.0], [91.8, 13986.0], [91.9, 14010.0], [92.0, 14032.0], [92.1, 14048.0], [92.2, 14076.0], [92.3, 14079.0], [92.4, 14080.0], [92.5, 14080.0], [92.6, 14115.0], [92.7, 14126.0], [92.8, 14142.0], [92.9, 14170.0], [93.0, 14206.0], [93.1, 14255.0], [93.2, 14291.0], [93.3, 14326.0], [93.4, 14333.0], [93.5, 14335.0], [93.6, 14335.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14336.0], [94.1, 14338.0], [94.2, 14353.0], [94.3, 14391.0], [94.4, 14439.0], [94.5, 14518.0], [94.6, 14589.0], [94.7, 14593.0], [94.8, 14664.0], [94.9, 14846.0], [95.0, 14848.0], [95.1, 15030.0], [95.2, 15104.0], [95.3, 15121.0], [95.4, 15355.0], [95.5, 15360.0], [95.6, 15422.0], [95.7, 15650.0], [95.8, 16123.0], [95.9, 16376.0], [96.0, 16384.0], [96.1, 16388.0], [96.2, 16690.0], [96.3, 16900.0], [96.4, 17166.0], [96.5, 17974.0], [96.6, 18294.0], [96.7, 18688.0], [96.8, 19139.0], [96.9, 19790.0], [97.0, 21740.0], [97.1, 22528.0], [97.2, 26364.0], [97.3, 26919.0], [97.4, 32163.0], [97.5, 33695.0], [97.6, 37896.0], [97.7, 40601.0], [97.8, 52274.0], [97.9, 55038.0], [98.0, 81034.0], [98.1, 101377.0], [98.2, 102308.0], [98.3, 105470.0], [98.4, 105727.0], [98.5, 105983.0], [98.6, 106240.0], [98.7, 106496.0], [98.8, 106749.0], [98.9, 107248.0], [99.0, 107520.0], [99.1, 107776.0], [99.2, 107779.0], [99.3, 108032.0], [99.4, 110337.0], [99.5, 110848.0], [99.6, 114428.0], [99.7, 116224.0], [99.8, 116225.0], [99.9, 128256.0], [100.0, 211712.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 3.0], [6.0, 6.0], [6.1, 625.0], [6.2, 648.0], [6.3, 710.0], [6.4, 767.0], [6.5, 852.0], [6.6, 1132.0], [6.7, 1265.0], [6.8, 1286.0], [6.9, 1365.0], [7.0, 1383.0], [7.1, 1391.0], [7.2, 1398.0], [7.3, 1453.0], [7.4, 1837.0], [7.5, 1913.0], [7.6, 2061.0], [7.7, 2276.0], [7.8, 2353.0], [7.9, 2830.0], [8.0, 2928.0], [8.1, 3149.0], [8.2, 3295.0], [8.3, 3307.0], [8.4, 3339.0], [8.5, 3492.0], [8.6, 3745.0], [8.7, 4290.0], [8.8, 4366.0], [8.9, 4571.0], [9.0, 4594.0], [9.1, 4624.0], [9.2, 4670.0], [9.3, 4848.0], [9.4, 5013.0], [9.5, 5104.0], [9.6, 5122.0], [9.7, 5370.0], [9.8, 5975.0], [9.9, 6173.0], [10.0, 6317.0], [10.1, 6358.0], [10.2, 6501.0], [10.3, 6780.0], [10.4, 7164.0], [10.5, 7164.0], [10.6, 7167.0], [10.7, 7167.0], [10.8, 7167.0], [10.9, 7167.0], [11.0, 7167.0], [11.1, 7167.0], [11.2, 7167.0], [11.3, 7168.0], [11.4, 7168.0], [11.5, 7168.0], [11.6, 7168.0], [11.7, 7168.0], [11.8, 7168.0], [11.9, 7168.0], [12.0, 7168.0], [12.1, 7168.0], [12.2, 7168.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7169.0], [13.2, 7171.0], [13.3, 7171.0], [13.4, 7172.0], [13.5, 7201.0], [13.6, 7317.0], [13.7, 7394.0], [13.8, 7398.0], [13.9, 7420.0], [14.0, 7420.0], [14.1, 7423.0], [14.2, 7423.0], [14.3, 7423.0], [14.4, 7423.0], [14.5, 7423.0], [14.6, 7423.0], [14.7, 7423.0], [14.8, 7423.0], [14.9, 7424.0], [15.0, 7424.0], [15.1, 7424.0], [15.2, 7424.0], [15.3, 7424.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7427.0], [16.2, 7428.0], [16.3, 7428.0], [16.4, 7656.0], [16.5, 7675.0], [16.6, 7676.0], [16.7, 7676.0], [16.8, 7676.0], [16.9, 7679.0], [17.0, 7679.0], [17.1, 7679.0], [17.2, 7679.0], [17.3, 7679.0], [17.4, 7680.0], [17.5, 7680.0], [17.6, 7680.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7684.0], [18.9, 7684.0], [19.0, 7764.0], [19.1, 7866.0], [19.2, 7904.0], [19.3, 7933.0], [19.4, 7934.0], [19.5, 7935.0], [19.6, 7935.0], [19.7, 7936.0], [19.8, 7936.0], [19.9, 7936.0], [20.0, 7936.0], [20.1, 7936.0], [20.2, 7936.0], [20.3, 7936.0], [20.4, 7936.0], [20.5, 7936.0], [20.6, 7939.0], [20.7, 7940.0], [20.8, 8012.0], [20.9, 8093.0], [21.0, 8188.0], [21.1, 8190.0], [21.2, 8191.0], [21.3, 8191.0], [21.4, 8192.0], [21.5, 8192.0], [21.6, 8192.0], [21.7, 8192.0], [21.8, 8192.0], [21.9, 8192.0], [22.0, 8192.0], [22.1, 8192.0], [22.2, 8192.0], [22.3, 8195.0], [22.4, 8196.0], [22.5, 8196.0], [22.6, 8380.0], [22.7, 8448.0], [22.8, 8448.0], [22.9, 8448.0], [23.0, 8448.0], [23.1, 8452.0], [23.2, 8461.0], [23.3, 8675.0], [23.4, 8699.0], [23.5, 8700.0], [23.6, 8700.0], [23.7, 8700.0], [23.8, 8700.0], [23.9, 8702.0], [24.0, 8703.0], [24.1, 8703.0], [24.2, 8703.0], [24.3, 8703.0], [24.4, 8703.0], [24.5, 8704.0], [24.6, 8704.0], [24.7, 8704.0], [24.8, 8704.0], [24.9, 8704.0], [25.0, 8704.0], [25.1, 8704.0], [25.2, 8704.0], [25.3, 8704.0], [25.4, 8704.0], [25.5, 8704.0], [25.6, 8704.0], [25.7, 8704.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8707.0], [26.1, 8708.0], [26.2, 8708.0], [26.3, 8726.0], [26.4, 8833.0], [26.5, 8931.0], [26.6, 8938.0], [26.7, 8956.0], [26.8, 8958.0], [26.9, 8959.0], [27.0, 8959.0], [27.1, 8959.0], [27.2, 8959.0], [27.3, 8960.0], [27.4, 8960.0], [27.5, 8960.0], [27.6, 8960.0], [27.7, 8960.0], [27.8, 8960.0], [27.9, 8964.0], [28.0, 8964.0], [28.1, 9078.0], [28.2, 9211.0], [28.3, 9212.0], [28.4, 9212.0], [28.5, 9212.0], [28.6, 9212.0], [28.7, 9214.0], [28.8, 9215.0], [28.9, 9215.0], [29.0, 9215.0], [29.1, 9215.0], [29.2, 9216.0], [29.3, 9216.0], [29.4, 9216.0], [29.5, 9216.0], [29.6, 9216.0], [29.7, 9216.0], [29.8, 9216.0], [29.9, 9216.0], [30.0, 9216.0], [30.1, 9216.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9220.0], [30.9, 9220.0], [31.0, 9355.0], [31.1, 9414.0], [31.2, 9468.0], [31.3, 9471.0], [31.4, 9472.0], [31.5, 9472.0], [31.6, 9472.0], [31.7, 9472.0], [31.8, 9473.0], [31.9, 9477.0], [32.0, 9652.0], [32.1, 9724.0], [32.2, 9724.0], [32.3, 9724.0], [32.4, 9724.0], [32.5, 9727.0], [32.6, 9727.0], [32.7, 9727.0], [32.8, 9728.0], [32.9, 9728.0], [33.0, 9728.0], [33.1, 9728.0], [33.2, 9728.0], [33.3, 9728.0], [33.4, 9728.0], [33.5, 9728.0], [33.6, 9728.0], [33.7, 9728.0], [33.8, 9728.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9776.0], [34.5, 9914.0], [34.6, 9978.0], [34.7, 9978.0], [34.8, 9980.0], [34.9, 9983.0], [35.0, 9983.0], [35.1, 9983.0], [35.2, 9983.0], [35.3, 9984.0], [35.4, 9984.0], [35.5, 9984.0], [35.6, 9984.0], [35.7, 9984.0], [35.8, 9984.0], [35.9, 9984.0], [36.0, 9984.0], [36.1, 9994.0], [36.2, 10236.0], [36.3, 10237.0], [36.4, 10239.0], [36.5, 10240.0], [36.6, 10240.0], [36.7, 10240.0], [36.8, 10240.0], [36.9, 10240.0], [37.0, 10240.0], [37.1, 10240.0], [37.2, 10241.0], [37.3, 10244.0], [37.4, 10244.0], [37.5, 10244.0], [37.6, 10435.0], [37.7, 10492.0], [37.8, 10495.0], [37.9, 10495.0], [38.0, 10496.0], [38.1, 10496.0], [38.2, 10496.0], [38.3, 10499.0], [38.4, 10500.0], [38.5, 10512.0], [38.6, 10619.0], [38.7, 10648.0], [38.8, 10649.0], [38.9, 10738.0], [39.0, 10748.0], [39.1, 10751.0], [39.2, 10751.0], [39.3, 10752.0], [39.4, 10752.0], [39.5, 10752.0], [39.6, 10756.0], [39.7, 10779.0], [39.8, 10820.0], [39.9, 10864.0], [40.0, 10873.0], [40.1, 10903.0], [40.2, 10960.0], [40.3, 11004.0], [40.4, 11004.0], [40.5, 11004.0], [40.6, 11006.0], [40.7, 11007.0], [40.8, 11007.0], [40.9, 11007.0], [41.0, 11008.0], [41.1, 11008.0], [41.2, 11008.0], [41.3, 11008.0], [41.4, 11008.0], [41.5, 11008.0], [41.6, 11008.0], [41.7, 11008.0], [41.8, 11015.0], [41.9, 11053.0], [42.0, 11132.0], [42.1, 11155.0], [42.2, 11192.0], [42.3, 11207.0], [42.4, 11223.0], [42.5, 11258.0], [42.6, 11259.0], [42.7, 11260.0], [42.8, 11262.0], [42.9, 11263.0], [43.0, 11263.0], [43.1, 11264.0], [43.2, 11264.0], [43.3, 11264.0], [43.4, 11264.0], [43.5, 11264.0], [43.6, 11264.0], [43.7, 11267.0], [43.8, 11267.0], [43.9, 11268.0], [44.0, 11276.0], [44.1, 11284.0], [44.2, 11285.0], [44.3, 11292.0], [44.4, 11315.0], [44.5, 11334.0], [44.6, 11335.0], [44.7, 11348.0], [44.8, 11351.0], [44.9, 11367.0], [45.0, 11380.0], [45.1, 11385.0], [45.2, 11388.0], [45.3, 11397.0], [45.4, 11410.0], [45.5, 11416.0], [45.6, 11484.0], [45.7, 11519.0], [45.8, 11519.0], [45.9, 11520.0], [46.0, 11520.0], [46.1, 11520.0], [46.2, 11527.0], [46.3, 11532.0], [46.4, 11539.0], [46.5, 11556.0], [46.6, 11579.0], [46.7, 11580.0], [46.8, 11582.0], [46.9, 11585.0], [47.0, 11613.0], [47.1, 11616.0], [47.2, 11629.0], [47.3, 11632.0], [47.4, 11641.0], [47.5, 11667.0], [47.6, 11672.0], [47.7, 11686.0], [47.8, 11703.0], [47.9, 11708.0], [48.0, 11716.0], [48.1, 11726.0], [48.2, 11732.0], [48.3, 11749.0], [48.4, 11760.0], [48.5, 11771.0], [48.6, 11772.0], [48.7, 11772.0], [48.8, 11775.0], [48.9, 11775.0], [49.0, 11776.0], [49.1, 11776.0], [49.2, 11776.0], [49.3, 11776.0], [49.4, 11800.0], [49.5, 11823.0], [49.6, 11825.0], [49.7, 11833.0], [49.8, 11839.0], [49.9, 11848.0], [50.0, 11858.0], [50.1, 11859.0], [50.2, 11894.0], [50.3, 11915.0], [50.4, 11925.0], [50.5, 11957.0], [50.6, 11975.0], [50.7, 12000.0], [50.8, 12031.0], [50.9, 12032.0], [51.0, 12051.0], [51.1, 12082.0], [51.2, 12119.0], [51.3, 12132.0], [51.4, 12161.0], [51.5, 12187.0], [51.6, 12205.0], [51.7, 12214.0], [51.8, 12217.0], [51.9, 12221.0], [52.0, 12281.0], [52.1, 12283.0], [52.2, 12284.0], [52.3, 12288.0], [52.4, 12288.0], [52.5, 12288.0], [52.6, 12288.0], [52.7, 12288.0], [52.8, 12288.0], [52.9, 12288.0], [53.0, 12288.0], [53.1, 12291.0], [53.2, 12292.0], [53.3, 12292.0], [53.4, 12309.0], [53.5, 12323.0], [53.6, 12332.0], [53.7, 12378.0], [53.8, 12386.0], [53.9, 12393.0], [54.0, 12402.0], [54.1, 12407.0], [54.2, 12412.0], [54.3, 12420.0], [54.4, 12428.0], [54.5, 12430.0], [54.6, 12436.0], [54.7, 12454.0], [54.8, 12459.0], [54.9, 12467.0], [55.0, 12494.0], [55.1, 12500.0], [55.2, 12510.0], [55.3, 12534.0], [55.4, 12549.0], [55.5, 12552.0], [55.6, 12595.0], [55.7, 12641.0], [55.8, 12659.0], [55.9, 12702.0], [56.0, 12734.0], [56.1, 12742.0], [56.2, 12769.0], [56.3, 12775.0], [56.4, 12796.0], [56.5, 12798.0], [56.6, 12799.0], [56.7, 12799.0], [56.8, 12799.0], [56.9, 12799.0], [57.0, 12799.0], [57.1, 12799.0], [57.2, 12800.0], [57.3, 12800.0], [57.4, 12800.0], [57.5, 12804.0], [57.6, 12804.0], [57.7, 12819.0], [57.8, 12851.0], [57.9, 12858.0], [58.0, 12871.0], [58.1, 12888.0], [58.2, 12893.0], [58.3, 12938.0], [58.4, 12968.0], [58.5, 13022.0], [58.6, 13056.0], [58.7, 13086.0], [58.8, 13107.0], [58.9, 13238.0], [59.0, 13280.0], [59.1, 13305.0], [59.2, 13307.0], [59.3, 13307.0], [59.4, 13308.0], [59.5, 13308.0], [59.6, 13308.0], [59.7, 13308.0], [59.8, 13308.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13308.0], [60.7, 13308.0], [60.8, 13308.0], [60.9, 13309.0], [61.0, 13310.0], [61.1, 13310.0], [61.2, 13310.0], [61.3, 13310.0], [61.4, 13310.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13314.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13315.0], [75.1, 13315.0], [75.2, 13316.0], [75.3, 13316.0], [75.4, 13316.0], [75.5, 13316.0], [75.6, 13316.0], [75.7, 13316.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13317.0], [76.5, 13318.0], [76.6, 13326.0], [76.7, 13329.0], [76.8, 13337.0], [76.9, 13367.0], [77.0, 13483.0], [77.1, 13489.0], [77.2, 13518.0], [77.3, 13564.0], [77.4, 13568.0], [77.5, 13620.0], [77.6, 13687.0], [77.7, 13711.0], [77.8, 13742.0], [77.9, 13749.0], [78.0, 13806.0], [78.1, 13820.0], [78.2, 13820.0], [78.3, 13822.0], [78.4, 13822.0], [78.5, 13823.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13825.0], [80.1, 13828.0], [80.2, 13828.0], [80.3, 13828.0], [80.4, 13837.0], [80.5, 13842.0], [80.6, 13891.0], [80.7, 13911.0], [80.8, 13944.0], [80.9, 13957.0], [81.0, 14043.0], [81.1, 14076.0], [81.2, 14079.0], [81.3, 14079.0], [81.4, 14079.0], [81.5, 14080.0], [81.6, 14080.0], [81.7, 14080.0], [81.8, 14080.0], [81.9, 14081.0], [82.0, 14149.0], [82.1, 14149.0], [82.2, 14175.0], [82.3, 14306.0], [82.4, 14332.0], [82.5, 14333.0], [82.6, 14334.0], [82.7, 14335.0], [82.8, 14335.0], [82.9, 14335.0], [83.0, 14335.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14336.0], [84.2, 14336.0], [84.3, 14336.0], [84.4, 14336.0], [84.5, 14336.0], [84.6, 14336.0], [84.7, 14336.0], [84.8, 14339.0], [84.9, 14340.0], [85.0, 14340.0], [85.1, 14340.0], [85.2, 14470.0], [85.3, 14518.0], [85.4, 14588.0], [85.5, 14590.0], [85.6, 14592.0], [85.7, 14594.0], [85.8, 14595.0], [85.9, 14603.0], [86.0, 14738.0], [86.1, 14809.0], [86.2, 14847.0], [86.3, 14848.0], [86.4, 14848.0], [86.5, 14848.0], [86.6, 14848.0], [86.7, 14848.0], [86.8, 14848.0], [86.9, 14848.0], [87.0, 14852.0], [87.1, 14858.0], [87.2, 14969.0], [87.3, 15026.0], [87.4, 15104.0], [87.5, 15225.0], [87.6, 15271.0], [87.7, 15356.0], [87.8, 15360.0], [87.9, 15364.0], [88.0, 15418.0], [88.1, 15503.0], [88.2, 15616.0], [88.3, 15616.0], [88.4, 15702.0], [88.5, 15826.0], [88.6, 15872.0], [88.7, 15872.0], [88.8, 15891.0], [88.9, 16378.0], [89.0, 16380.0], [89.1, 16380.0], [89.2, 16383.0], [89.3, 16384.0], [89.4, 16384.0], [89.5, 16384.0], [89.6, 16384.0], [89.7, 16485.0], [89.8, 16789.0], [89.9, 16836.0], [90.0, 16892.0], [90.1, 16895.0], [90.2, 16905.0], [90.3, 17018.0], [90.4, 17150.0], [90.5, 17209.0], [90.6, 17408.0], [90.7, 17664.0], [90.8, 17697.0], [90.9, 17919.0], [91.0, 18432.0], [91.1, 18692.0], [91.2, 19708.0], [91.3, 19712.0], [91.4, 19777.0], [91.5, 20066.0], [91.6, 20109.0], [91.7, 20227.0], [91.8, 20517.0], [91.9, 20736.0], [92.0, 26368.0], [92.1, 26368.0], [92.2, 27392.0], [92.3, 30723.0], [92.4, 31997.0], [92.5, 32250.0], [92.6, 32341.0], [92.7, 33792.0], [92.8, 34815.0], [92.9, 38845.0], [93.0, 38868.0], [93.1, 40180.0], [93.2, 40563.0], [93.3, 50194.0], [93.4, 52252.0], [93.5, 53244.0], [93.6, 53248.0], [93.7, 53252.0], [93.8, 53508.0], [93.9, 53785.0], [94.0, 53792.0], [94.1, 59905.0], [94.2, 61440.0], [94.3, 63516.0], [94.4, 68860.0], [94.5, 71935.0], [94.6, 76287.0], [94.7, 100819.0], [94.8, 101377.0], [94.9, 101632.0], [95.0, 102655.0], [95.1, 105468.0], [95.2, 105471.0], [95.3, 105472.0], [95.4, 105472.0], [95.5, 105473.0], [95.6, 105984.0], [95.7, 105985.0], [95.8, 106239.0], [95.9, 106239.0], [96.0, 106240.0], [96.1, 106240.0], [96.2, 106496.0], [96.3, 106496.0], [96.4, 106752.0], [96.5, 107007.0], [96.6, 107008.0], [96.7, 107008.0], [96.8, 107268.0], [96.9, 107775.0], [97.0, 107776.0], [97.1, 107777.0], [97.2, 108032.0], [97.3, 108288.0], [97.4, 109567.0], [97.5, 109567.0], [97.6, 110336.0], [97.7, 110845.0], [97.8, 110848.0], [97.9, 110848.0], [98.0, 111180.0], [98.1, 111356.0], [98.2, 111356.0], [98.3, 114428.0], [98.4, 114428.0], [98.5, 115456.0], [98.6, 116224.0], [98.7, 118528.0], [98.8, 118783.0], [98.9, 118784.0], [99.0, 119296.0], [99.1, 126976.0], [99.2, 128255.0], [99.3, 128255.0], [99.4, 169728.0], [99.5, 169728.0], [99.6, 181244.0], [99.7, 209920.0], [99.8, 210173.0], [99.9, 211456.0], [100.0, 211456.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 6.0], [6.2, 23.0], [6.3, 24.0], [6.4, 24.0], [6.5, 32.0], [6.6, 32.0], [6.7, 35.0], [6.8, 36.0], [6.9, 46.0], [7.0, 48.0], [7.1, 141.0], [7.2, 306.0], [7.3, 552.0], [7.4, 668.0], [7.5, 733.0], [7.6, 852.0], [7.7, 1093.0], [7.8, 1268.0], [7.9, 1397.0], [8.0, 1536.0], [8.1, 1695.0], [8.2, 2003.0], [8.3, 2065.0], [8.4, 2345.0], [8.5, 2583.0], [8.6, 2823.0], [8.7, 2885.0], [8.8, 2977.0], [8.9, 3106.0], [9.0, 3219.0], [9.1, 3605.0], [9.2, 3690.0], [9.3, 3705.0], [9.4, 3926.0], [9.5, 3983.0], [9.6, 4056.0], [9.7, 4141.0], [9.8, 4193.0], [9.9, 4221.0], [10.0, 4555.0], [10.1, 5167.0], [10.2, 5347.0], [10.3, 5363.0], [10.4, 5586.0], [10.5, 5606.0], [10.6, 5701.0], [10.7, 5730.0], [10.8, 5818.0], [10.9, 5851.0], [11.0, 6315.0], [11.1, 6547.0], [11.2, 6617.0], [11.3, 6735.0], [11.4, 6939.0], [11.5, 7072.0], [11.6, 7092.0], [11.7, 7164.0], [11.8, 7164.0], [11.9, 7166.0], [12.0, 7167.0], [12.1, 7167.0], [12.2, 7167.0], [12.3, 7168.0], [12.4, 7168.0], [12.5, 7168.0], [12.6, 7168.0], [12.7, 7168.0], [12.8, 7168.0], [12.9, 7168.0], [13.0, 7168.0], [13.1, 7168.0], [13.2, 7168.0], [13.3, 7168.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7169.0], [14.4, 7169.0], [14.5, 7169.0], [14.6, 7169.0], [14.7, 7172.0], [14.8, 7172.0], [14.9, 7189.0], [15.0, 7215.0], [15.1, 7289.0], [15.2, 7295.0], [15.3, 7304.0], [15.4, 7418.0], [15.5, 7420.0], [15.6, 7422.0], [15.7, 7423.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7425.0], [17.1, 7427.0], [17.2, 7428.0], [17.3, 7428.0], [17.4, 7454.0], [17.5, 7458.0], [17.6, 7485.0], [17.7, 7494.0], [17.8, 7497.0], [17.9, 7514.0], [18.0, 7561.0], [18.1, 7616.0], [18.2, 7676.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7680.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7681.0], [20.6, 7684.0], [20.7, 7684.0], [20.8, 7684.0], [20.9, 7729.0], [21.0, 7771.0], [21.1, 7870.0], [21.2, 7911.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7939.0], [22.4, 7940.0], [22.5, 7940.0], [22.6, 7950.0], [22.7, 8124.0], [22.8, 8144.0], [22.9, 8173.0], [23.0, 8184.0], [23.1, 8189.0], [23.2, 8191.0], [23.3, 8192.0], [23.4, 8192.0], [23.5, 8192.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8192.0], [24.0, 8196.0], [24.1, 8196.0], [24.2, 8196.0], [24.3, 8252.0], [24.4, 8321.0], [24.5, 8430.0], [24.6, 8443.0], [24.7, 8448.0], [24.8, 8448.0], [24.9, 8448.0], [25.0, 8448.0], [25.1, 8448.0], [25.2, 8452.0], [25.3, 8510.0], [25.4, 8517.0], [25.5, 8553.0], [25.6, 8700.0], [25.7, 8700.0], [25.8, 8702.0], [25.9, 8703.0], [26.0, 8703.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8704.0], [26.9, 8705.0], [27.0, 8705.0], [27.1, 8708.0], [27.2, 8715.0], [27.3, 8725.0], [27.4, 8733.0], [27.5, 8760.0], [27.6, 8801.0], [27.7, 8822.0], [27.8, 8845.0], [27.9, 8871.0], [28.0, 8956.0], [28.1, 8958.0], [28.2, 8959.0], [28.3, 8960.0], [28.4, 8960.0], [28.5, 8960.0], [28.6, 8960.0], [28.7, 8960.0], [28.8, 8960.0], [28.9, 8964.0], [29.0, 8998.0], [29.1, 9016.0], [29.2, 9026.0], [29.3, 9139.0], [29.4, 9159.0], [29.5, 9211.0], [29.6, 9212.0], [29.7, 9212.0], [29.8, 9212.0], [29.9, 9213.0], [30.0, 9215.0], [30.1, 9216.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9217.0], [31.1, 9219.0], [31.2, 9220.0], [31.3, 9220.0], [31.4, 9220.0], [31.5, 9227.0], [31.6, 9282.0], [31.7, 9320.0], [31.8, 9348.0], [31.9, 9423.0], [32.0, 9468.0], [32.1, 9471.0], [32.2, 9472.0], [32.3, 9472.0], [32.4, 9472.0], [32.5, 9472.0], [32.6, 9477.0], [32.7, 9541.0], [32.8, 9549.0], [32.9, 9556.0], [33.0, 9634.0], [33.1, 9705.0], [33.2, 9720.0], [33.3, 9724.0], [33.4, 9724.0], [33.5, 9724.0], [33.6, 9725.0], [33.7, 9725.0], [33.8, 9727.0], [33.9, 9727.0], [34.0, 9728.0], [34.1, 9728.0], [34.2, 9728.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9732.0], [34.8, 9769.0], [34.9, 9775.0], [35.0, 9948.0], [35.1, 9973.0], [35.2, 9980.0], [35.3, 9983.0], [35.4, 9984.0], [35.5, 9984.0], [35.6, 9984.0], [35.7, 9984.0], [35.8, 9984.0], [35.9, 9984.0], [36.0, 9984.0], [36.1, 9984.0], [36.2, 9984.0], [36.3, 9984.0], [36.4, 10035.0], [36.5, 10090.0], [36.6, 10104.0], [36.7, 10113.0], [36.8, 10173.0], [36.9, 10198.0], [37.0, 10235.0], [37.1, 10238.0], [37.2, 10239.0], [37.3, 10239.0], [37.4, 10239.0], [37.5, 10240.0], [37.6, 10240.0], [37.7, 10240.0], [37.8, 10240.0], [37.9, 10240.0], [38.0, 10240.0], [38.1, 10240.0], [38.2, 10240.0], [38.3, 10240.0], [38.4, 10241.0], [38.5, 10241.0], [38.6, 10243.0], [38.7, 10244.0], [38.8, 10249.0], [38.9, 10264.0], [39.0, 10299.0], [39.1, 10306.0], [39.2, 10355.0], [39.3, 10369.0], [39.4, 10392.0], [39.5, 10436.0], [39.6, 10492.0], [39.7, 10495.0], [39.8, 10496.0], [39.9, 10496.0], [40.0, 10496.0], [40.1, 10496.0], [40.2, 10497.0], [40.3, 10500.0], [40.4, 10533.0], [40.5, 10575.0], [40.6, 10575.0], [40.7, 10589.0], [40.8, 10595.0], [40.9, 10599.0], [41.0, 10617.0], [41.1, 10651.0], [41.2, 10652.0], [41.3, 10664.0], [41.4, 10668.0], [41.5, 10697.0], [41.6, 10714.0], [41.7, 10719.0], [41.8, 10722.0], [41.9, 10728.0], [42.0, 10748.0], [42.1, 10751.0], [42.2, 10752.0], [42.3, 10752.0], [42.4, 10752.0], [42.5, 10752.0], [42.6, 10752.0], [42.7, 10752.0], [42.8, 10752.0], [42.9, 10752.0], [43.0, 10753.0], [43.1, 10756.0], [43.2, 10781.0], [43.3, 10817.0], [43.4, 10829.0], [43.5, 10832.0], [43.6, 10852.0], [43.7, 10858.0], [43.8, 10861.0], [43.9, 10878.0], [44.0, 10896.0], [44.1, 10908.0], [44.2, 10943.0], [44.3, 10962.0], [44.4, 10965.0], [44.5, 10982.0], [44.6, 11004.0], [44.7, 11004.0], [44.8, 11004.0], [44.9, 11006.0], [45.0, 11007.0], [45.1, 11008.0], [45.2, 11008.0], [45.3, 11008.0], [45.4, 11008.0], [45.5, 11008.0], [45.6, 11008.0], [45.7, 11008.0], [45.8, 11012.0], [45.9, 11035.0], [46.0, 11046.0], [46.1, 11058.0], [46.2, 11079.0], [46.3, 11080.0], [46.4, 11092.0], [46.5, 11122.0], [46.6, 11150.0], [46.7, 11176.0], [46.8, 11214.0], [46.9, 11217.0], [47.0, 11239.0], [47.1, 11259.0], [47.2, 11260.0], [47.3, 11260.0], [47.4, 11260.0], [47.5, 11260.0], [47.6, 11262.0], [47.7, 11264.0], [47.8, 11264.0], [47.9, 11264.0], [48.0, 11264.0], [48.1, 11264.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11264.0], [48.5, 11265.0], [48.6, 11267.0], [48.7, 11268.0], [48.8, 11268.0], [48.9, 11268.0], [49.0, 11270.0], [49.1, 11290.0], [49.2, 11306.0], [49.3, 11330.0], [49.4, 11332.0], [49.5, 11339.0], [49.6, 11343.0], [49.7, 11358.0], [49.8, 11370.0], [49.9, 11392.0], [50.0, 11401.0], [50.1, 11418.0], [50.2, 11431.0], [50.3, 11448.0], [50.4, 11469.0], [50.5, 11482.0], [50.6, 11497.0], [50.7, 11498.0], [50.8, 11519.0], [50.9, 11520.0], [51.0, 11520.0], [51.1, 11522.0], [51.2, 11524.0], [51.3, 11524.0], [51.4, 11546.0], [51.5, 11555.0], [51.6, 11597.0], [51.7, 11604.0], [51.8, 11633.0], [51.9, 11641.0], [52.0, 11679.0], [52.1, 11710.0], [52.2, 11731.0], [52.3, 11767.0], [52.4, 11772.0], [52.5, 11772.0], [52.6, 11775.0], [52.7, 11776.0], [52.8, 11776.0], [52.9, 11776.0], [53.0, 11776.0], [53.1, 11776.0], [53.2, 11776.0], [53.3, 11776.0], [53.4, 11778.0], [53.5, 11804.0], [53.6, 11868.0], [53.7, 11936.0], [53.8, 11945.0], [53.9, 11953.0], [54.0, 12022.0], [54.1, 12028.0], [54.2, 12032.0], [54.3, 12077.0], [54.4, 12105.0], [54.5, 12143.0], [54.6, 12210.0], [54.7, 12285.0], [54.8, 12287.0], [54.9, 12288.0], [55.0, 12288.0], [55.1, 12288.0], [55.2, 12288.0], [55.3, 12288.0], [55.4, 12288.0], [55.5, 12288.0], [55.6, 12289.0], [55.7, 12289.0], [55.8, 12293.0], [55.9, 12335.0], [56.0, 12359.0], [56.1, 12387.0], [56.2, 12445.0], [56.3, 12467.0], [56.4, 12484.0], [56.5, 12512.0], [56.6, 12540.0], [56.7, 12540.0], [56.8, 12544.0], [56.9, 12544.0], [57.0, 12544.0], [57.1, 12544.0], [57.2, 12548.0], [57.3, 12584.0], [57.4, 12596.0], [57.5, 12689.0], [57.6, 12710.0], [57.7, 12741.0], [57.8, 12778.0], [57.9, 12797.0], [58.0, 12799.0], [58.1, 12800.0], [58.2, 12800.0], [58.3, 12800.0], [58.4, 12802.0], [58.5, 12804.0], [58.6, 12869.0], [58.7, 12878.0], [58.8, 12954.0], [58.9, 12978.0], [59.0, 13021.0], [59.1, 13050.0], [59.2, 13104.0], [59.3, 13133.0], [59.4, 13172.0], [59.5, 13174.0], [59.6, 13181.0], [59.7, 13189.0], [59.8, 13201.0], [59.9, 13209.0], [60.0, 13217.0], [60.1, 13225.0], [60.2, 13231.0], [60.3, 13235.0], [60.4, 13243.0], [60.5, 13246.0], [60.6, 13249.0], [60.7, 13256.0], [60.8, 13262.0], [60.9, 13266.0], [61.0, 13272.0], [61.1, 13276.0], [61.2, 13287.0], [61.3, 13290.0], [61.4, 13291.0], [61.5, 13294.0], [61.6, 13299.0], [61.7, 13307.0], [61.8, 13307.0], [61.9, 13308.0], [62.0, 13308.0], [62.1, 13308.0], [62.2, 13308.0], [62.3, 13308.0], [62.4, 13308.0], [62.5, 13308.0], [62.6, 13308.0], [62.7, 13308.0], [62.8, 13308.0], [62.9, 13308.0], [63.0, 13308.0], [63.1, 13308.0], [63.2, 13309.0], [63.3, 13309.0], [63.4, 13310.0], [63.5, 13310.0], [63.6, 13310.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13313.0], [75.2, 13314.0], [75.3, 13315.0], [75.4, 13315.0], [75.5, 13315.0], [75.6, 13316.0], [75.7, 13316.0], [75.8, 13316.0], [75.9, 13316.0], [76.0, 13316.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13316.0], [76.6, 13316.0], [76.7, 13316.0], [76.8, 13316.0], [76.9, 13316.0], [77.0, 13316.0], [77.1, 13316.0], [77.2, 13317.0], [77.3, 13317.0], [77.4, 13318.0], [77.5, 13328.0], [77.6, 13330.0], [77.7, 13340.0], [77.8, 13347.0], [77.9, 13348.0], [78.0, 13357.0], [78.1, 13366.0], [78.2, 13371.0], [78.3, 13378.0], [78.4, 13394.0], [78.5, 13400.0], [78.6, 13423.0], [78.7, 13482.0], [78.8, 13514.0], [78.9, 13537.0], [79.0, 13567.0], [79.1, 13568.0], [79.2, 13568.0], [79.3, 13641.0], [79.4, 13669.0], [79.5, 13699.0], [79.6, 13731.0], [79.7, 13761.0], [79.8, 13767.0], [79.9, 13816.0], [80.0, 13820.0], [80.1, 13820.0], [80.2, 13820.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13825.0], [81.6, 13826.0], [81.7, 13828.0], [81.8, 13828.0], [81.9, 13828.0], [82.0, 13828.0], [82.1, 13842.0], [82.2, 13857.0], [82.3, 13877.0], [82.4, 13954.0], [82.5, 13980.0], [82.6, 14069.0], [82.7, 14076.0], [82.8, 14079.0], [82.9, 14079.0], [83.0, 14079.0], [83.1, 14079.0], [83.2, 14080.0], [83.3, 14080.0], [83.4, 14080.0], [83.5, 14080.0], [83.6, 14080.0], [83.7, 14080.0], [83.8, 14081.0], [83.9, 14123.0], [84.0, 14228.0], [84.1, 14331.0], [84.2, 14332.0], [84.3, 14332.0], [84.4, 14334.0], [84.5, 14334.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14337.0], [86.0, 14337.0], [86.1, 14338.0], [86.2, 14339.0], [86.3, 14339.0], [86.4, 14407.0], [86.5, 14434.0], [86.6, 14443.0], [86.7, 14592.0], [86.8, 14594.0], [86.9, 14595.0], [87.0, 14710.0], [87.1, 14823.0], [87.2, 14844.0], [87.3, 14846.0], [87.4, 14847.0], [87.5, 14914.0], [87.6, 14997.0], [87.7, 15104.0], [87.8, 15104.0], [87.9, 15217.0], [88.0, 15351.0], [88.1, 15359.0], [88.2, 15360.0], [88.3, 15361.0], [88.4, 15616.0], [88.5, 15616.0], [88.6, 15872.0], [88.7, 15872.0], [88.8, 15924.0], [88.9, 16124.0], [89.0, 16132.0], [89.1, 16384.0], [89.2, 16386.0], [89.3, 16387.0], [89.4, 16407.0], [89.5, 16712.0], [89.6, 16896.0], [89.7, 17132.0], [89.8, 17547.0], [89.9, 17664.0], [90.0, 17739.0], [90.1, 17820.0], [90.2, 18432.0], [90.3, 18468.0], [90.4, 18687.0], [90.5, 18691.0], [90.6, 18699.0], [90.7, 18952.0], [90.8, 19458.0], [90.9, 19748.0], [91.0, 20221.0], [91.1, 20817.0], [91.2, 22268.0], [91.3, 24064.0], [91.4, 25087.0], [91.5, 25088.0], [91.6, 26250.0], [91.7, 26318.0], [91.8, 26341.0], [91.9, 26479.0], [92.0, 27018.0], [92.1, 29546.0], [92.2, 30202.0], [92.3, 30952.0], [92.4, 32250.0], [92.5, 32250.0], [92.6, 32674.0], [92.7, 36210.0], [92.8, 36782.0], [92.9, 38039.0], [93.0, 38528.0], [93.1, 39081.0], [93.2, 52145.0], [93.3, 53050.0], [93.4, 56319.0], [93.5, 63514.0], [93.6, 68864.0], [93.7, 69229.0], [93.8, 70434.0], [93.9, 74737.0], [94.0, 97355.0], [94.1, 101377.0], [94.2, 105472.0], [94.3, 105472.0], [94.4, 105473.0], [94.5, 105643.0], [94.6, 105728.0], [94.7, 105747.0], [94.8, 105927.0], [94.9, 105984.0], [95.0, 105984.0], [95.1, 106070.0], [95.2, 106211.0], [95.3, 106240.0], [95.4, 106262.0], [95.5, 106404.0], [95.6, 106453.0], [95.7, 106496.0], [95.8, 106496.0], [95.9, 106696.0], [96.0, 106749.0], [96.1, 106785.0], [96.2, 106928.0], [96.3, 107007.0], [96.4, 107008.0], [96.5, 107008.0], [96.6, 107061.0], [96.7, 107132.0], [96.8, 107164.0], [96.9, 107262.0], [97.0, 107267.0], [97.1, 107358.0], [97.2, 107777.0], [97.3, 108032.0], [97.4, 108032.0], [97.5, 108032.0], [97.6, 108292.0], [97.7, 110336.0], [97.8, 110652.0], [97.9, 110843.0], [98.0, 110847.0], [98.1, 110848.0], [98.2, 110848.0], [98.3, 111356.0], [98.4, 114559.0], [98.5, 115497.0], [98.6, 116225.0], [98.7, 116373.0], [98.8, 117504.0], [98.9, 119186.0], [99.0, 124160.0], [99.1, 125973.0], [99.2, 128257.0], [99.3, 130818.0], [99.4, 130819.0], [99.5, 169727.0], [99.6, 182284.0], [99.7, 210176.0], [99.8, 210944.0], [99.9, 211456.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 783.0, "series": [{"data": [[0.0, 270.0], [105900.0, 8.0], [102700.0, 1.0], [107500.0, 4.0], [106700.0, 2.0], [112300.0, 1.0], [131500.0, 1.0], [33700.0, 6.0], [33300.0, 1.0], [40100.0, 2.0], [209900.0, 1.0], [54900.0, 2.0], [60100.0, 1.0], [81000.0, 1.0], [96200.0, 1.0], [102600.0, 1.0], [106600.0, 3.0], [108200.0, 3.0], [109800.0, 1.0], [115400.0, 4.0], [116200.0, 15.0], [128200.0, 8.0], [1200.0, 9.0], [1300.0, 36.0], [1400.0, 46.0], [1500.0, 9.0], [1600.0, 14.0], [1700.0, 11.0], [1800.0, 13.0], [1900.0, 17.0], [2000.0, 12.0], [2100.0, 18.0], [2300.0, 14.0], [2200.0, 7.0], [2400.0, 18.0], [2500.0, 24.0], [2600.0, 5.0], [2700.0, 12.0], [2800.0, 13.0], [2900.0, 8.0], [3000.0, 17.0], [3100.0, 8.0], [3200.0, 6.0], [3300.0, 7.0], [211700.0, 1.0], [3400.0, 14.0], [3500.0, 11.0], [3600.0, 14.0], [3700.0, 13.0], [3800.0, 11.0], [3900.0, 11.0], [4000.0, 11.0], [4100.0, 13.0], [4200.0, 13.0], [4300.0, 12.0], [4600.0, 6.0], [4400.0, 11.0], [4500.0, 10.0], [4800.0, 9.0], [4700.0, 13.0], [4900.0, 15.0], [5000.0, 11.0], [5100.0, 20.0], [5300.0, 35.0], [5200.0, 16.0], [5600.0, 10.0], [5400.0, 34.0], [5500.0, 23.0], [5700.0, 8.0], [5800.0, 15.0], [5900.0, 4.0], [6000.0, 5.0], [6100.0, 2.0], [6200.0, 7.0], [6300.0, 6.0], [101700.0, 1.0], [6500.0, 8.0], [6400.0, 10.0], [6600.0, 10.0], [105700.0, 4.0], [6800.0, 14.0], [6900.0, 17.0], [6700.0, 18.0], [110500.0, 3.0], [107300.0, 1.0], [7000.0, 28.0], [7100.0, 134.0], [111300.0, 1.0], [7300.0, 20.0], [7200.0, 21.0], [7400.0, 97.0], [115300.0, 1.0], [118500.0, 1.0], [7500.0, 8.0], [7600.0, 78.0], [7900.0, 85.0], [7800.0, 12.0], [7700.0, 5.0], [8000.0, 17.0], [8100.0, 74.0], [8200.0, 14.0], [8300.0, 17.0], [8500.0, 13.0], [8700.0, 108.0], [8400.0, 36.0], [8600.0, 23.0], [8800.0, 34.0], [9000.0, 11.0], [9200.0, 67.0], [8900.0, 57.0], [9100.0, 18.0], [9400.0, 46.0], [9300.0, 10.0], [9600.0, 21.0], [9500.0, 11.0], [9700.0, 73.0], [9900.0, 57.0], [10100.0, 25.0], [10000.0, 24.0], [9800.0, 17.0], [10200.0, 89.0], [10300.0, 21.0], [10700.0, 39.0], [10400.0, 37.0], [10500.0, 17.0], [10600.0, 7.0], [11000.0, 52.0], [10800.0, 5.0], [10900.0, 4.0], [11100.0, 10.0], [11200.0, 47.0], [11300.0, 19.0], [11400.0, 31.0], [11500.0, 49.0], [11700.0, 167.0], [11600.0, 98.0], [12100.0, 253.0], [11900.0, 208.0], [11800.0, 148.0], [12200.0, 309.0], [12000.0, 215.0], [12300.0, 275.0], [12400.0, 292.0], [12500.0, 363.0], [12600.0, 354.0], [12700.0, 286.0], [12900.0, 248.0], [12800.0, 319.0], [13200.0, 230.0], [13000.0, 234.0], [13100.0, 183.0], [13300.0, 783.0], [13700.0, 69.0], [13500.0, 138.0], [13400.0, 123.0], [13600.0, 97.0], [13800.0, 158.0], [13900.0, 46.0], [14000.0, 64.0], [14100.0, 37.0], [14300.0, 101.0], [14200.0, 20.0], [14500.0, 28.0], [14400.0, 14.0], [14800.0, 20.0], [14600.0, 4.0], [14700.0, 1.0], [15100.0, 16.0], [15300.0, 22.0], [15200.0, 2.0], [15000.0, 7.0], [14900.0, 2.0], [15600.0, 10.0], [15500.0, 3.0], [15700.0, 1.0], [15400.0, 1.0], [15800.0, 2.0], [16300.0, 22.0], [16200.0, 3.0], [16100.0, 4.0], [15900.0, 1.0], [16600.0, 4.0], [16400.0, 2.0], [16800.0, 7.0], [17400.0, 1.0], [18400.0, 2.0], [18200.0, 5.0], [17600.0, 4.0], [18000.0, 2.0], [19200.0, 2.0], [18600.0, 8.0], [19400.0, 2.0], [20200.0, 1.0], [19600.0, 1.0], [20400.0, 2.0], [21200.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [22400.0, 2.0], [25000.0, 1.0], [26400.0, 3.0], [26200.0, 1.0], [27200.0, 2.0], [27600.0, 3.0], [29000.0, 1.0], [30200.0, 1.0], [32200.0, 3.0], [31800.0, 1.0], [32400.0, 1.0], [32600.0, 1.0], [32800.0, 1.0], [33600.0, 1.0], [40400.0, 1.0], [42000.0, 1.0], [42400.0, 1.0], [53200.0, 2.0], [70400.0, 1.0], [82400.0, 1.0], [106400.0, 12.0], [107200.0, 6.0], [108000.0, 7.0], [114400.0, 2.0], [71900.0, 1.0], [97500.0, 1.0], [102300.0, 3.0], [106300.0, 1.0], [109500.0, 3.0], [110300.0, 2.0], [121500.0, 1.0], [35500.0, 1.0], [39900.0, 2.0], [40700.0, 2.0], [41500.0, 1.0], [52700.0, 1.0], [54300.0, 1.0], [64700.0, 2.0], [102200.0, 2.0], [101400.0, 2.0], [105400.0, 12.0], [106200.0, 6.0], [107000.0, 4.0], [107800.0, 2.0], [112600.0, 1.0], [113400.0, 1.0], [119000.0, 1.0], [181200.0, 1.0], [70100.0, 2.0], [70900.0, 1.0], [102100.0, 1.0], [101300.0, 8.0], [106100.0, 1.0], [105300.0, 1.0], [106900.0, 1.0], [107700.0, 17.0], [17100.0, 6.0], [16500.0, 3.0], [16900.0, 5.0], [16700.0, 1.0], [17700.0, 1.0], [17900.0, 2.0], [17500.0, 1.0], [18100.0, 1.0], [18300.0, 1.0], [19100.0, 3.0], [19300.0, 1.0], [18700.0, 2.0], [18900.0, 1.0], [18500.0, 2.0], [19700.0, 1.0], [19500.0, 1.0], [20500.0, 1.0], [21500.0, 2.0], [21700.0, 3.0], [22500.0, 4.0], [22100.0, 1.0], [24300.0, 2.0], [26300.0, 6.0], [26100.0, 3.0], [26900.0, 1.0], [28300.0, 1.0], [32100.0, 1.0], [32500.0, 1.0], [35000.0, 1.0], [37800.0, 1.0], [39800.0, 1.0], [40200.0, 2.0], [40600.0, 2.0], [41800.0, 2.0], [52200.0, 2.0], [55000.0, 2.0], [106000.0, 1.0], [106800.0, 3.0], [110800.0, 9.0], [124400.0, 1.0]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[0.0, 106.0], [169700.0, 3.0], [105900.0, 4.0], [106700.0, 3.0], [118700.0, 3.0], [33700.0, 1.0], [39300.0, 1.0], [40100.0, 1.0], [40500.0, 1.0], [50100.0, 1.0], [209900.0, 2.0], [53700.0, 4.0], [76200.0, 1.0], [102600.0, 2.0], [108200.0, 2.0], [115400.0, 2.0], [116200.0, 2.0], [128200.0, 3.0], [137200.0, 1.0], [600.0, 4.0], [700.0, 4.0], [800.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 3.0], [1300.0, 7.0], [1400.0, 2.0], [1500.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 2.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 3.0], [3300.0, 2.0], [210100.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4600.0, 4.0], [4500.0, 3.0], [4800.0, 1.0], [5000.0, 3.0], [5100.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [6100.0, 3.0], [5900.0, 1.0], [6300.0, 2.0], [6400.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [110500.0, 1.0], [7100.0, 55.0], [111300.0, 3.0], [7200.0, 2.0], [7300.0, 4.0], [7400.0, 44.0], [118500.0, 1.0], [7500.0, 1.0], [7600.0, 46.0], [7700.0, 1.0], [7900.0, 29.0], [7800.0, 2.0], [8100.0, 29.0], [8000.0, 2.0], [8300.0, 1.0], [8700.0, 52.0], [8500.0, 1.0], [8400.0, 11.0], [8600.0, 2.0], [8900.0, 29.0], [9200.0, 49.0], [8800.0, 1.0], [9000.0, 1.0], [9100.0, 1.0], [9400.0, 15.0], [9300.0, 2.0], [9600.0, 1.0], [9500.0, 1.0], [9700.0, 43.0], [9900.0, 29.0], [10100.0, 1.0], [10200.0, 23.0], [10600.0, 5.0], [10500.0, 3.0], [10400.0, 15.0], [10700.0, 16.0], [11100.0, 6.0], [10800.0, 6.0], [10900.0, 3.0], [11200.0, 36.0], [11000.0, 30.0], [11700.0, 28.0], [11400.0, 5.0], [11500.0, 24.0], [11300.0, 18.0], [11600.0, 14.0], [12100.0, 8.0], [12000.0, 8.0], [11900.0, 8.0], [12200.0, 31.0], [11800.0, 15.0], [12600.0, 4.0], [12700.0, 22.0], [12300.0, 10.0], [12500.0, 10.0], [12400.0, 20.0], [12800.0, 20.0], [13100.0, 2.0], [13200.0, 3.0], [13300.0, 316.0], [13000.0, 6.0], [12900.0, 3.0], [13800.0, 47.0], [13500.0, 7.0], [13400.0, 2.0], [13700.0, 6.0], [13600.0, 2.0], [14100.0, 5.0], [13900.0, 6.0], [14000.0, 18.0], [14300.0, 50.0], [14400.0, 3.0], [14800.0, 18.0], [14700.0, 2.0], [14500.0, 10.0], [14600.0, 2.0], [15000.0, 2.0], [15300.0, 6.0], [15200.0, 2.0], [15100.0, 3.0], [14900.0, 2.0], [15800.0, 6.0], [15400.0, 2.0], [15600.0, 4.0], [15500.0, 1.0], [15700.0, 2.0], [16300.0, 13.0], [16200.0, 1.0], [17400.0, 1.0], [16400.0, 2.0], [17200.0, 2.0], [16800.0, 5.0], [17000.0, 2.0], [17600.0, 4.0], [18400.0, 1.0], [18000.0, 1.0], [18600.0, 2.0], [20200.0, 2.0], [20000.0, 2.0], [20600.0, 1.0], [30400.0, 1.0], [32200.0, 1.0], [34800.0, 1.0], [33200.0, 1.0], [36000.0, 1.0], [38800.0, 2.0], [48800.0, 1.0], [53200.0, 5.0], [68800.0, 1.0], [82400.0, 1.0], [101600.0, 1.0], [100800.0, 1.0], [106400.0, 3.0], [107200.0, 3.0], [108000.0, 3.0], [114400.0, 3.0], [119200.0, 2.0], [126400.0, 1.0], [71900.0, 1.0], [109500.0, 3.0], [110300.0, 1.0], [111100.0, 2.0], [117500.0, 1.0], [211400.0, 3.0], [34300.0, 1.0], [53500.0, 1.0], [54300.0, 1.0], [59900.0, 1.0], [63500.0, 2.0], [105400.0, 8.0], [106200.0, 6.0], [107000.0, 4.0], [181200.0, 2.0], [70100.0, 1.0], [101300.0, 3.0], [107700.0, 4.0], [126900.0, 1.0], [16700.0, 1.0], [16900.0, 3.0], [17100.0, 1.0], [16500.0, 1.0], [17900.0, 1.0], [18900.0, 1.0], [19700.0, 5.0], [20100.0, 1.0], [20700.0, 1.0], [20500.0, 1.0], [26300.0, 3.0], [26100.0, 1.0], [27300.0, 1.0], [30700.0, 1.0], [30900.0, 1.0], [31900.0, 1.0], [32300.0, 2.0], [40200.0, 1.0], [52200.0, 2.0], [61400.0, 2.0], [110800.0, 5.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 130.0], [169700.0, 1.0], [211300.0, 1.0], [74700.0, 1.0], [105900.0, 4.0], [106700.0, 4.0], [116300.0, 1.0], [125900.0, 1.0], [123500.0, 1.0], [100.0, 2.0], [131500.0, 1.0], [38500.0, 2.0], [52100.0, 1.0], [209900.0, 1.0], [300.0, 2.0], [105800.0, 1.0], [102600.0, 1.0], [106600.0, 2.0], [108200.0, 2.0], [110600.0, 1.0], [115400.0, 2.0], [116200.0, 3.0], [500.0, 1.0], [128200.0, 2.0], [600.0, 2.0], [700.0, 2.0], [800.0, 2.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 2.0], [1500.0, 2.0], [1600.0, 2.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 3.0], [2900.0, 2.0], [3100.0, 2.0], [3200.0, 1.0], [210100.0, 1.0], [3400.0, 1.0], [3600.0, 4.0], [3700.0, 2.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 4.0], [4200.0, 3.0], [4500.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5300.0, 3.0], [5500.0, 3.0], [5600.0, 2.0], [5800.0, 4.0], [5700.0, 3.0], [6300.0, 2.0], [6500.0, 2.0], [6600.0, 1.0], [105700.0, 4.0], [6700.0, 2.0], [6900.0, 1.0], [107300.0, 1.0], [110500.0, 1.0], [7000.0, 4.0], [7100.0, 61.0], [111300.0, 1.0], [114500.0, 1.0], [7200.0, 6.0], [7400.0, 45.0], [7300.0, 2.0], [118500.0, 1.0], [7600.0, 52.0], [7500.0, 4.0], [7900.0, 27.0], [7700.0, 4.0], [124900.0, 1.0], [7800.0, 2.0], [124100.0, 1.0], [8100.0, 29.0], [130500.0, 1.0], [8000.0, 1.0], [8400.0, 15.0], [8500.0, 4.0], [8300.0, 3.0], [8700.0, 38.0], [8200.0, 1.0], [8900.0, 21.0], [8800.0, 6.0], [9000.0, 4.0], [9200.0, 40.0], [9100.0, 4.0], [9400.0, 14.0], [9700.0, 35.0], [9600.0, 2.0], [9300.0, 4.0], [9500.0, 6.0], [10200.0, 39.0], [10100.0, 6.0], [10000.0, 5.0], [9900.0, 25.0], [10300.0, 7.0], [10400.0, 15.0], [10700.0, 32.0], [10600.0, 11.0], [10500.0, 13.0], [10800.0, 14.0], [10900.0, 9.0], [11000.0, 35.0], [11200.0, 44.0], [11100.0, 7.0], [11300.0, 15.0], [11400.0, 13.0], [11500.0, 17.0], [11600.0, 7.0], [11700.0, 27.0], [182200.0, 1.0], [12000.0, 8.0], [12100.0, 3.0], [12200.0, 23.0], [11900.0, 6.0], [11800.0, 3.0], [12500.0, 19.0], [12700.0, 9.0], [12300.0, 6.0], [12600.0, 2.0], [12400.0, 5.0], [13200.0, 34.0], [13100.0, 11.0], [13300.0, 310.0], [12800.0, 14.0], [12900.0, 3.0], [13000.0, 4.0], [13500.0, 10.0], [13700.0, 6.0], [13800.0, 46.0], [13400.0, 5.0], [13600.0, 5.0], [14200.0, 3.0], [14000.0, 25.0], [14300.0, 42.0], [13900.0, 3.0], [14100.0, 1.0], [14800.0, 7.0], [14400.0, 6.0], [14500.0, 5.0], [14700.0, 2.0], [15300.0, 8.0], [14900.0, 3.0], [15100.0, 4.0], [15200.0, 2.0], [15600.0, 4.0], [15800.0, 2.0], [16000.0, 1.0], [16100.0, 4.0], [15900.0, 2.0], [16300.0, 5.0], [17000.0, 1.0], [17400.0, 1.0], [16400.0, 1.0], [16800.0, 1.0], [18400.0, 3.0], [17800.0, 1.0], [17600.0, 1.0], [19400.0, 2.0], [18600.0, 4.0], [19800.0, 1.0], [20200.0, 1.0], [20600.0, 1.0], [20800.0, 1.0], [22200.0, 2.0], [24000.0, 1.0], [25200.0, 1.0], [25000.0, 4.0], [26400.0, 1.0], [26200.0, 1.0], [27000.0, 1.0], [27600.0, 1.0], [30200.0, 2.0], [32600.0, 1.0], [32400.0, 1.0], [32200.0, 2.0], [34400.0, 1.0], [38000.0, 1.0], [54000.0, 1.0], [62000.0, 1.0], [68800.0, 1.0], [70400.0, 1.0], [106400.0, 6.0], [105600.0, 1.0], [107200.0, 4.0], [108000.0, 4.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 4.0], [110300.0, 2.0], [111100.0, 1.0], [117500.0, 1.0], [119100.0, 1.0], [211400.0, 2.0], [36700.0, 1.0], [56300.0, 1.0], [63500.0, 1.0], [78200.0, 1.0], [106200.0, 5.0], [105400.0, 4.0], [107000.0, 7.0], [111800.0, 1.0], [181200.0, 1.0], [210900.0, 2.0], [70100.0, 1.0], [97300.0, 1.0], [101300.0, 1.0], [106100.0, 1.0], [106900.0, 2.0], [107700.0, 2.0], [17100.0, 1.0], [16700.0, 2.0], [16500.0, 1.0], [17900.0, 1.0], [17500.0, 1.0], [17700.0, 3.0], [19300.0, 1.0], [18500.0, 1.0], [18900.0, 2.0], [19700.0, 1.0], [26300.0, 4.0], [26700.0, 1.0], [29500.0, 1.0], [30700.0, 1.0], [30900.0, 1.0], [32100.0, 1.0], [36600.0, 1.0], [36200.0, 1.0], [37800.0, 1.0], [39000.0, 1.0], [44600.0, 1.0], [53000.0, 1.0], [52200.0, 1.0], [65000.0, 1.0], [69200.0, 1.0], [73200.0, 1.0], [100400.0, 1.0], [106000.0, 2.0], [107600.0, 1.0], [110800.0, 7.0], [130800.0, 2.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6920.0, "series": [{"data": [[1.0, 126.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5611.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 21.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 6920.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 10.404255319148941, "minX": 1.5394494E12, "maxY": 499.80985915493034, "series": [{"data": [[1.53944946E12, 45.62222222222224], [1.53944994E12, 499.80985915493034], [1.53944976E12, 346.5161483253588], [1.53944982E12, 406.0968921389396], [1.53944964E12, 226.20113314447588], [1.5394497E12, 289.9943089430897], [1.53944952E12, 105.89790209790215], [1.53945E12, 468.6701164294957], [1.53944958E12, 165.28796561604594], [1.53945006E12, 96.82352941176468], [1.5394494E12, 10.404255319148941], [1.53944988E12, 465.4657223796037]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945006E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 166568.0, "series": [{"data": [[3.0, 1204.0], [5.0, 1264.0], [6.0, 1320.0], [7.0, 1268.6666666666667], [8.0, 1447.0], [9.0, 1445.0], [10.0, 1397.3333333333335], [11.0, 1496.5], [12.0, 1439.625], [13.0, 1476.0], [14.0, 1201.5], [15.0, 1399.1818181818182], [16.0, 1518.6666666666667], [17.0, 22324.454545454544], [18.0, 16772.4], [19.0, 61902.84210526316], [20.0, 1570.1], [21.0, 1619.9166666666667], [22.0, 10886.499999999998], [23.0, 1976.857142857143], [24.0, 2005.3333333333333], [25.0, 2058.666666666667], [26.0, 37245.25], [27.0, 2167.6363636363635], [28.0, 10989.583333333334], [29.0, 2377.25], [30.0, 2406.6666666666665], [31.0, 2488.75], [32.0, 2310.5555555555557], [33.0, 2597.0], [34.0, 2735.2], [35.0, 2573.8571428571427], [36.0, 2864.1428571428573], [37.0, 2961.727272727273], [38.0, 3220.833333333333], [39.0, 3119.785714285714], [40.0, 3267.625], [41.0, 3344.6666666666665], [42.0, 3477.0000000000005], [43.0, 3754.833333333333], [44.0, 3697.333333333334], [45.0, 3280.4545454545455], [46.0, 3723.625], [47.0, 3939.0], [48.0, 17888.888888888887], [49.0, 4074.4], [50.0, 4216.2], [51.0, 3739.4545454545455], [52.0, 65721.87500000001], [53.0, 3808.3750000000005], [54.0, 4447.249999999999], [55.0, 4483.888888888888], [56.0, 4695.900000000001], [57.0, 4818.75], [58.0, 20774.727272727276], [59.0, 4641.692307692308], [60.0, 5064.111111111111], [61.0, 4940.666666666667], [62.0, 5287.333333333333], [63.0, 5229.0], [64.0, 5253.88888888889], [65.0, 5524.5], [66.0, 5388.090909090909], [67.0, 5490.555555555556], [68.0, 5459.333333333334], [69.0, 5315.4], [70.0, 48064.777777777774], [71.0, 10801.272727272728], [72.0, 8870.0625], [73.0, 5416.7], [74.0, 5544.0], [75.0, 5560.466666666666], [76.0, 11841.75], [77.0, 10075.416666666666], [78.0, 10925.9], [79.0, 11755.888888888889], [80.0, 6464.153846153846], [81.0, 6884.0], [82.0, 6994.0], [83.0, 7055.333333333334], [84.0, 7069.875], [85.0, 7293.583333333334], [86.0, 6534.444444444444], [87.0, 6657.25], [88.0, 7127.727272727273], [89.0, 6990.333333333333], [90.0, 9718.0], [91.0, 8700.538461538461], [92.0, 9001.166666666666], [93.0, 9862.888888888889], [94.0, 15719.0], [95.0, 16839.2], [96.0, 19235.75], [97.0, 15654.0], [98.0, 17348.6], [99.0, 15328.538461538461], [100.0, 16541.090909090908], [101.0, 16748.272727272728], [102.0, 16675.0], [103.0, 17585.3], [104.0, 16049.666666666664], [105.0, 7443.777777777777], [106.0, 10463.384615384617], [107.0, 11041.3], [108.0, 20241.0], [109.0, 8778.846153846156], [110.0, 11207.9], [111.0, 10796.692307692307], [112.0, 11393.3], [113.0, 11003.0], [114.0, 9955.857142857143], [115.0, 11018.0], [116.0, 10984.909090909092], [117.0, 10936.0], [118.0, 11372.4], [119.0, 10508.5], [120.0, 9178.222222222223], [121.0, 10588.583333333334], [122.0, 10696.0], [123.0, 10877.909090909092], [124.0, 9793.111111111111], [125.0, 9864.818181818182], [126.0, 9971.0], [127.0, 11069.250000000002], [128.0, 10118.4], [129.0, 10232.0], [130.0, 10958.9375], [131.0, 10129.222222222223], [132.0, 12189.09090909091], [133.0, 10131.3], [134.0, 19628.76923076923], [135.0, 10422.199999999999], [136.0, 11451.1], [137.0, 11461.666666666666], [138.0, 11730.111111111111], [139.0, 10744.699999999999], [140.0, 11950.4], [141.0, 11783.399999999998], [142.0, 11326.083333333332], [143.0, 11517.8], [144.0, 14225.363636363636], [145.0, 11805.066666666668], [146.0, 11648.111111111111], [147.0, 12360.555555555555], [148.0, 12239.083333333332], [149.0, 12161.071428571431], [150.0, 11609.833333333332], [151.0, 12319.5], [152.0, 11766.300000000001], [153.0, 12677.111111111111], [154.0, 14523.538461538461], [155.0, 12210.363636363636], [156.0, 12342.888888888889], [157.0, 14441.714285714286], [158.0, 12343.3], [159.0, 14954.090909090908], [160.0, 12477.615384615387], [161.0, 14425.923076923078], [162.0, 12677.666666666666], [163.0, 12003.285714285714], [164.0, 12110.2], [165.0, 11815.333333333334], [166.0, 12035.214285714284], [167.0, 12291.333333333334], [168.0, 12282.888888888887], [169.0, 12686.42857142857], [170.0, 12525.25], [171.0, 13047.888888888889], [172.0, 12489.500000000002], [173.0, 12816.499999999998], [174.0, 13055.600000000002], [175.0, 15135.0], [176.0, 14632.5], [177.0, 15233.363636363636], [178.0, 12471.7], [179.0, 12551.416666666668], [180.0, 15706.666666666668], [181.0, 14843.583333333332], [182.0, 12643.900000000001], [183.0, 12649.666666666668], [184.0, 15108.272727272728], [185.0, 15012.0], [186.0, 15477.7], [187.0, 15318.333333333332], [188.0, 13166.5], [189.0, 15089.615384615385], [190.0, 12978.9], [191.0, 15709.099999999999], [192.0, 14952.615384615385], [193.0, 14328.727272727274], [194.0, 13231.0], [195.0, 13289.5], [196.0, 13086.125], [197.0, 14343.818181818182], [198.0, 13151.384615384615], [199.0, 13668.818181818182], [200.0, 13740.875], [201.0, 13657.416666666666], [202.0, 13824.090909090908], [203.0, 13823.0], [204.0, 15112.625], [205.0, 13699.25], [206.0, 13721.333333333334], [207.0, 14232.555555555555], [208.0, 13808.692307692309], [209.0, 13812.666666666666], [210.0, 14070.818181818182], [211.0, 13551.818181818182], [212.0, 14109.0], [213.0, 13273.846153846154], [214.0, 13032.75], [215.0, 12885.7], [216.0, 27221.0], [217.0, 12376.500000000002], [218.0, 13123.0], [219.0, 12475.692307692307], [220.0, 12392.363636363636], [221.0, 15366.333333333334], [222.0, 14806.818181818184], [223.0, 12872.875], [224.0, 12903.888888888889], [225.0, 14932.23076923077], [226.0, 14626.0], [227.0, 13587.099999999999], [228.0, 13543.000000000002], [229.0, 13655.454545454546], [230.0, 13722.454545454544], [231.0, 13814.666666666668], [232.0, 14012.545454545454], [233.0, 13718.0], [234.0, 13543.846153846156], [235.0, 17550.90909090909], [236.0, 13196.833333333332], [237.0, 12961.0], [238.0, 12726.250000000002], [239.0, 12722.90909090909], [240.0, 12542.727272727274], [241.0, 12563.583333333334], [242.0, 12546.92857142857], [243.0, 12450.181818181818], [244.0, 12642.5], [245.0, 12515.153846153846], [246.0, 12319.18181818182], [247.0, 12384.76923076923], [248.0, 13431.923076923078], [249.0, 12356.916666666664], [250.0, 12329.3], [251.0, 12372.846153846154], [252.0, 20577.3], [253.0, 12895.3], [254.0, 20347.69230769231], [255.0, 13157.222222222224], [257.0, 13470.07142857143], [256.0, 21684.090909090908], [258.0, 24009.124999999996], [259.0, 13570.5], [260.0, 17130.933333333334], [261.0, 13841.833333333332], [262.0, 13929.111111111113], [263.0, 13660.384615384615], [264.0, 19900.600000000002], [270.0, 25189.53846153846], [271.0, 13362.583333333334], [268.0, 18688.35714285714], [269.0, 13258.25], [265.0, 13525.555555555555], [266.0, 13251.833333333334], [267.0, 14744.727272727274], [273.0, 12267.0], [272.0, 21363.333333333332], [274.0, 18925.307692307695], [275.0, 12046.866666666665], [276.0, 22823.444444444445], [277.0, 12130.699999999999], [278.0, 16942.58823529412], [279.0, 12580.727272727272], [280.0, 12455.437500000002], [286.0, 29780.090909090908], [287.0, 11703.5], [284.0, 17224.307692307695], [285.0, 14008.722222222223], [281.0, 12569.7], [282.0, 13239.29411764706], [283.0, 11792.8125], [289.0, 12961.631578947368], [288.0, 15400.875], [290.0, 13513.076923076924], [291.0, 11829.000000000004], [292.0, 11456.599999999999], [293.0, 10293.800000000001], [294.0, 13030.846153846154], [295.0, 13028.846153846154], [296.0, 12508.2], [302.0, 11879.375000000002], [303.0, 20750.21052631579], [300.0, 12710.611111111108], [301.0, 19994.882352941175], [297.0, 17770.411764705885], [298.0, 12432.285714285714], [299.0, 11287.894736842109], [305.0, 19258.842105263153], [304.0, 12583.0], [306.0, 11508.999999999998], [307.0, 11832.8], [308.0, 11816.083333333334], [309.0, 12368.199999999999], [310.0, 10425.839999999998], [311.0, 10714.75], [312.0, 10880.249999999998], [318.0, 12352.07142857143], [319.0, 11981.900000000001], [316.0, 10125.75], [317.0, 18257.000000000004], [313.0, 12228.166666666668], [314.0, 10708.90909090909], [315.0, 9585.481481481478], [321.0, 12488.615384615385], [320.0, 9933.0], [322.0, 12277.363636363636], [323.0, 11416.2], [324.0, 12267.0], [325.0, 11730.941176470587], [326.0, 10679.166666666668], [327.0, 16864.17647058823], [328.0, 12199.607142857147], [334.0, 12151.583333333334], [335.0, 12235.866666666667], [332.0, 12021.2], [333.0, 12047.578947368422], [329.0, 11178.187500000002], [330.0, 12151.111111111111], [331.0, 18962.428571428572], [337.0, 10777.107142857143], [336.0, 10251.39285714286], [338.0, 11604.136363636364], [339.0, 11099.384615384615], [340.0, 11152.125000000002], [341.0, 12679.11111111111], [342.0, 13330.08695652174], [343.0, 11847.684210526315], [344.0, 10816.173913043478], [350.0, 12003.0], [351.0, 13031.294117647061], [348.0, 12718.666666666668], [349.0, 12221.526315789475], [345.0, 12060.388888888889], [346.0, 10146.478260869562], [347.0, 13342.809523809525], [353.0, 13301.307692307695], [352.0, 11638.2], [354.0, 11303.272727272726], [355.0, 10524.85], [356.0, 12102.4], [357.0, 13045.40909090909], [358.0, 12517.0], [359.0, 12690.142857142857], [360.0, 11220.05], [366.0, 11461.857142857143], [367.0, 13544.473684210525], [364.0, 10669.735294117643], [365.0, 11833.533333333333], [361.0, 12491.764705882353], [362.0, 11390.846153846154], [363.0, 12981.055555555555], [369.0, 10668.666666666666], [368.0, 12831.0], [370.0, 11574.3125], [371.0, 12536.900000000001], [372.0, 11861.20833333333], [373.0, 11581.473684210527], [374.0, 9499.194444444443], [375.0, 10113.833333333334], [376.0, 11106.0], [382.0, 11072.933333333332], [383.0, 12421.750000000004], [380.0, 10872.923076923078], [381.0, 11277.923076923078], [377.0, 12321.285714285712], [378.0, 11472.105263157893], [379.0, 9789.888888888887], [385.0, 12551.92857142857], [384.0, 12194.444444444445], [386.0, 12545.2], [387.0, 11892.846153846154], [388.0, 11196.666666666666], [389.0, 11109.785714285714], [390.0, 11757.363636363636], [391.0, 11957.866666666667], [392.0, 11760.90909090909], [398.0, 10303.719999999998], [399.0, 10862.09090909091], [396.0, 11552.61111111111], [397.0, 10648.583333333332], [393.0, 12007.153846153846], [394.0, 10978.157894736845], [395.0, 11351.384615384615], [401.0, 12863.588235294115], [400.0, 11619.357142857145], [402.0, 11772.137931034484], [403.0, 12719.538461538463], [404.0, 12825.214285714286], [405.0, 12018.000000000002], [406.0, 10956.636363636364], [407.0, 10994.076923076924], [408.0, 12766.809523809523], [414.0, 12254.954545454546], [415.0, 13435.09090909091], [412.0, 13385.363636363636], [413.0, 13092.812499999998], [409.0, 10762.5], [410.0, 10142.47619047619], [411.0, 12540.21052631579], [417.0, 12326.833333333332], [416.0, 12251.384615384613], [418.0, 13109.357142857145], [419.0, 19889.304347826088], [420.0, 11774.555555555558], [421.0, 11839.357142857141], [422.0, 12167.967741935483], [423.0, 12935.699999999999], [424.0, 20331.476190476194], [430.0, 12738.533333333333], [431.0, 12663.181818181818], [428.0, 9379.666666666664], [429.0, 10757.95238095238], [425.0, 12327.0], [426.0, 12881.153846153846], [427.0, 11735.818181818184], [433.0, 11158.416666666666], [432.0, 12270.25], [434.0, 11076.058823529413], [435.0, 11176.789473684212], [436.0, 10710.166666666668], [437.0, 9328.6], [438.0, 10872.6], [439.0, 11925.750000000002], [440.0, 11333.04761904762], [446.0, 35602.04166666667], [447.0, 12467.176470588236], [444.0, 10232.214285714284], [445.0, 10081.363636363636], [441.0, 11828.894736842105], [442.0, 12685.076923076924], [443.0, 11577.458333333332], [449.0, 12642.333333333332], [448.0, 12282.583333333332], [450.0, 13007.833333333334], [451.0, 13306.166666666666], [452.0, 11847.687499999998], [453.0, 11373.833333333334], [454.0, 27168.58333333333], [455.0, 13345.733333333334], [456.0, 22741.1], [462.0, 10082.0], [463.0, 21784.909090909092], [460.0, 11848.190476190475], [461.0, 10054.35483870968], [457.0, 12742.888888888887], [458.0, 13045.777777777777], [459.0, 12869.115384615383], [465.0, 18698.956521739132], [464.0, 10942.6], [466.0, 13032.624999999998], [467.0, 21849.71428571429], [468.0, 12841.7], [469.0, 24314.375], [470.0, 10042.47222222222], [471.0, 10814.681818181818], [472.0, 12120.720000000001], [478.0, 12072.90909090909], [479.0, 10663.047619047622], [476.0, 11130.44], [477.0, 20950.916666666668], [473.0, 37504.31578947368], [474.0, 11738.571428571431], [475.0, 12706.882352941178], [481.0, 55144.93333333333], [480.0, 11385.848484848486], [482.0, 10930.583333333334], [483.0, 11834.874999999996], [484.0, 11304.44], [485.0, 12528.000000000002], [486.0, 11099.5], [487.0, 10279.851851851849], [488.0, 12519.0625], [494.0, 12581.952380952382], [495.0, 11482.874999999996], [492.0, 11994.333333333332], [493.0, 11838.999999999998], [489.0, 12426.290322580646], [490.0, 13181.285714285714], [491.0, 12727.461538461537], [496.0, 12203.51724137931], [497.0, 13805.473684210525], [498.0, 13233.066666666668], [499.0, 12150.052631578948], [500.0, 14809.626390293217]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[335.49636403702044, 13254.94292639928]], "isOverall": false, "label": "Visualizar-Processo-Aggregated", "isController": false}, {"data": [[2.0, 710.0], [4.0, 1041.5], [6.0, 1383.0], [7.0, 3842.0], [8.0, 1365.0], [9.0, 1010.5], [10.0, 648.0], [12.0, 1081.0], [14.0, 1004.0], [16.0, 1408.0], [17.0, 956.0], [19.0, 78013.0], [20.0, 767.0], [21.0, 852.0], [22.0, 1020.0], [23.0, 1132.0], [25.0, 1589.0], [27.0, 1453.0], [28.0, 1286.0], [30.0, 2091.5], [32.0, 1907.0], [33.0, 3149.0], [34.0, 2693.0], [35.0, 2061.0], [36.0, 2114.0], [37.0, 2353.0], [39.0, 2674.0], [42.0, 3080.5], [43.0, 2830.0], [45.0, 3492.0], [46.0, 3307.0], [47.0, 3745.0], [49.0, 3318.5], [50.0, 3295.0], [52.0, 100658.28571428571], [53.0, 3500.0], [55.0, 4436.0], [56.0, 4366.0], [57.0, 4290.0], [59.0, 4099.0], [58.0, 166568.0], [60.0, 6358.0], [61.0, 4620.5], [64.0, 5619.5], [65.0, 4594.0], [66.0, 5104.0], [68.0, 5122.0], [69.0, 5283.0], [70.0, 62762.8], [71.0, 4848.0], [72.0, 4587.0], [73.0, 4601.0], [74.0, 43885.333333333336], [76.0, 5370.0], [77.0, 5012.0], [78.0, 5630.0], [80.0, 30404.0], [81.0, 29883.5], [82.0, 2.0], [85.0, 35094.0], [86.0, 22521.333333333336], [87.0, 126976.0], [88.0, 28187.0], [89.0, 44289.0], [92.0, 6622.0], [93.0, 8931.0], [95.0, 7783.5], [96.0, 8124.333333333333], [97.0, 7394.0], [98.0, 7593.0], [100.0, 7977.0], [101.0, 7373.0], [102.0, 7317.0], [104.0, 7409.0], [105.0, 20558.5], [106.0, 7656.0], [107.0, 7866.0], [108.0, 7904.0], [111.0, 8052.5], [112.0, 10619.0], [113.0, 8938.0], [114.0, 8726.0], [116.0, 8784.0], [117.0, 8833.0], [118.0, 8725.5], [119.0, 8461.0], [121.0, 8675.0], [122.0, 9078.0], [123.0, 8908.0], [120.0, 100819.0], [124.0, 60088.5], [127.0, 10615.0], [125.0, 111180.0], [128.0, 21167.5], [129.0, 17606.333333333332], [130.0, 9652.0], [131.0, 9121.0], [132.0, 21667.5], [133.0, 9355.0], [135.0, 20886.5], [136.0, 9790.0], [138.0, 10213.0], [140.0, 10192.0], [142.0, 11632.0], [143.0, 20575.5], [145.0, 10820.0], [146.0, 18230.0], [150.0, 16534.0], [152.0, 10881.5], [154.0, 12187.0], [155.0, 15963.5], [156.0, 11448.0], [157.0, 11539.0], [158.0, 16108.5], [160.0, 11698.5], [161.0, 11282.0], [163.0, 16008.0], [164.0, 16207.5], [165.0, 14151.0], [167.0, 15578.5], [166.0, 19792.0], [170.0, 11728.5], [174.0, 12659.0], [173.0, 16987.0], [172.0, 17018.0], [168.0, 19764.0], [182.0, 15357.0], [183.0, 40563.0], [179.0, 16814.0], [178.0, 16836.0], [185.0, 12839.0], [187.0, 12500.0], [188.0, 27620.5], [189.0, 12328.0], [190.0, 40180.0], [192.0, 12416.0], [194.0, 12214.0], [196.0, 14072.5], [199.0, 13191.0], [198.0, 39397.0], [193.0, 15834.0], [200.0, 12413.0], [203.0, 2.0], [206.0, 38868.0], [214.0, 12217.0], [208.0, 38845.0], [216.0, 88380.25], [218.0, 11367.0], [222.0, 13291.5], [223.0, 12470.0], [224.0, 13835.0], [228.0, 13214.0], [230.0, 13489.0], [231.0, 14483.0], [234.0, 14692.0], [240.0, 11800.0], [241.0, 11689.0], [246.0, 16905.0], [248.0, 5807.5], [252.0, 14165.0], [255.0, 13238.0], [259.0, 26368.0], [260.0, 14338.5], [263.0, 13846.0], [264.0, 6252.5], [267.0, 12650.0], [268.0, 48895.0], [269.0, 12087.0], [271.0, 13163.0], [273.0, 7164.0], [272.0, 24800.666666666668], [274.0, 23273.5], [284.0, 25527.0], [285.0, 19840.5], [286.0, 39806.0], [287.0, 3841.5], [276.0, 35586.4], [277.0, 13824.0], [278.0, 11008.0], [279.0, 14858.0], [280.0, 8192.0], [281.0, 11008.0], [282.0, 5960.285714285714], [283.0, 10906.0], [289.0, 11357.25], [288.0, 12855.8], [290.0, 7424.0], [291.0, 9817.5], [292.0, 7168.0], [293.0, 6399.5], [294.0, 13785.2], [295.0, 13192.714285714286], [296.0, 9424.25], [302.0, 13104.5], [303.0, 8220.666666666668], [300.0, 8297.666666666666], [301.0, 13994.666666666666], [297.0, 25956.5], [298.0, 12281.0], [299.0, 9727.0], [305.0, 12814.75], [304.0, 13439.75], [306.0, 10820.333333333334], [307.0, 11532.0], [308.0, 11008.0], [309.0, 53248.0], [310.0, 12416.666666666666], [311.0, 10127.8], [312.0, 9626.2], [319.0, 8648.5], [316.0, 6144.5], [318.0, 11842.0], [313.0, 8875.333333333334], [314.0, 10575.166666666668], [315.0, 9151.749999999998], [321.0, 36975.5], [320.0, 8384.25], [322.0, 8741.75], [323.0, 10240.0], [324.0, 12624.4], [325.0, 11263.222222222223], [326.0, 10219.0], [327.0, 32198.0], [328.0, 8203.333333333332], [335.0, 13312.0], [333.0, 13004.333333333334], [334.0, 66052.6], [329.0, 27604.666666666668], [330.0, 10852.8], [331.0, 58497.5], [337.0, 12045.363636363638], [336.0, 8000.916666666668], [338.0, 22488.5], [339.0, 10766.75], [340.0, 11284.0], [341.0, 12356.0], [342.0, 13712.428571428572], [343.0, 14335.333333333334], [344.0, 5223.6], [351.0, 14337.666666666666], [348.0, 11563.333333333334], [350.0, 12664.2], [345.0, 11392.0], [346.0, 9364.0], [347.0, 12361.0], [354.0, 11506.666666666666], [353.0, 14730.0], [355.0, 9540.545454545454], [364.0, 8576.125], [365.0, 7676.0], [366.0, 11815.0], [367.0, 12224.2], [356.0, 8832.625], [357.0, 12401.0625], [358.0, 10754.333333333336], [359.0, 11996.0], [360.0, 7832.4], [361.0, 12103.0], [362.0, 68096.0], [363.0, 15839.333333333334], [369.0, 5461.333333333334], [368.0, 7168.0], [370.0, 12269.0], [371.0, 12160.8], [372.0, 10297.222222222223], [373.0, 10790.25], [374.0, 9747.733333333334], [375.0, 11649.42857142857], [376.0, 11484.0], [382.0, 11220.666666666666], [380.0, 8193.333333333334], [381.0, 10939.999999999998], [377.0, 13201.666666666666], [378.0, 13335.0], [379.0, 9604.692307692307], [385.0, 15358.0], [384.0, 11314.0], [386.0, 13620.5], [387.0, 11231.166666666668], [388.0, 10083.363636363634], [389.0, 13312.0], [390.0, 10726.666666666666], [391.0, 76287.0], [392.0, 10550.5], [398.0, 11067.125], [399.0, 12544.0], [396.0, 11991.0], [397.0, 9068.142857142857], [393.0, 11877.0], [394.0, 11260.0], [395.0, 10613.666666666666], [401.0, 14045.25], [400.0, 11745.0], [402.0, 12160.125], [403.0, 13312.0], [404.0, 14336.0], [405.0, 10498.0], [406.0, 11059.0], [407.0, 8920.0], [408.0, 9130.833333333334], [414.0, 12288.0], [415.0, 12466.0], [412.0, 13332.0], [413.0, 11450.0], [409.0, 12217.714285714284], [410.0, 11946.999999999998], [411.0, 13312.0], [417.0, 13824.0], [416.0, 9557.833333333334], [418.0, 7083.0], [419.0, 78065.33333333333], [420.0, 9216.833333333334], [421.0, 7542.375], [422.0, 9966.92857142857], [423.0, 11409.285714285714], [424.0, 8809.333333333332], [430.0, 13710.0], [431.0, 11778.5], [428.0, 8393.222222222223], [429.0, 7729.9], [425.0, 7168.0], [426.0, 4865.0], [427.0, 10317.7], [433.0, 11839.0], [432.0, 13731.0], [434.0, 8118.833333333333], [435.0, 11980.142857142857], [436.0, 11035.57142857143], [437.0, 9531.615384615387], [438.0, 5548.333333333333], [439.0, 11686.0], [440.0, 11670.25], [447.0, 12261.0], [445.0, 8191.833333333334], [446.0, 54669.666666666664], [441.0, 1.0], [443.0, 11384.8], [450.0, 11701.0], [449.0, 15418.0], [451.0, 13825.875], [460.0, 6656.5], [461.0, 7936.285714285714], [462.0, 10153.0], [463.0, 9215.5], [452.0, 9472.5], [453.0, 12956.4], [454.0, 44927.4], [455.0, 6659.0], [456.0, 12507.333333333334], [457.0, 13131.75], [458.0, 11400.7], [459.0, 13278.916666666668], [465.0, 32833.833333333336], [464.0, 8446.25], [466.0, 13827.5], [467.0, 76457.33333333333], [469.0, 8578.0], [468.0, 102656.0], [470.0, 7622.666666666668], [471.0, 7338.888888888889], [472.0, 9283.777777777777], [478.0, 13311.75], [479.0, 7167.666666666667], [476.0, 9161.4], [477.0, 15494.0], [473.0, 108927.5], [474.0, 11770.0], [475.0, 13440.0], [481.0, 56933.6], [480.0, 12101.272727272728], [482.0, 12340.75], [483.0, 12764.833333333334], [484.0, 13414.2], [485.0, 13149.0], [486.0, 10189.0], [487.0, 8192.833333333334], [488.0, 7424.0], [494.0, 9411.142857142857], [495.0, 12422.625], [492.0, 8525.333333333332], [493.0, 14080.0], [489.0, 12440.8], [490.0, 11923.0], [491.0, 14149.0], [496.0, 9841.666666666666], [497.0, 12117.5], [498.0, 14336.0], [499.0, 130112.0], [500.0, 20441.377622377626]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[377.70454545454515, 17325.093749999975]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[2.0, 35.0], [3.0, 32.0], [4.0, 34.0], [5.0, 48.0], [6.0, 24.0], [7.0, 36.0], [8.0, 32.0], [9.0, 23.0], [10.0, 24.0], [11.0, 30.0], [12.0, 23.0], [13.0, 36.0], [14.0, 24.0], [15.0, 46.0], [16.0, 32.0], [17.0, 58131.0], [18.0, 48.0], [19.0, 77613.0], [20.0, 199.0], [21.0, 140731.33333333334], [22.0, 611.0], [23.0, 852.0], [24.0, 552.0], [25.0, 733.0], [27.0, 904.0], [28.0, 55605.0], [30.0, 991.0], [32.0, 1093.0], [33.0, 1314.0], [34.0, 1536.0], [35.0, 1397.0], [36.0, 1515.0], [37.0, 1645.0], [39.0, 2034.0], [40.0, 1695.0], [42.0, 2161.5], [44.0, 2175.0], [45.0, 2823.0], [46.0, 2458.0], [47.0, 2655.0], [48.0, 2885.0], [49.0, 2583.0], [50.0, 2977.0], [51.0, 2938.0], [52.0, 94059.2], [54.0, 3219.0], [55.0, 3106.0], [56.0, 3690.0], [57.0, 92218.5], [58.0, 92891.0], [59.0, 3605.0], [60.0, 3705.0], [61.0, 3636.0], [63.0, 4056.0], [64.0, 4113.0], [65.0, 4295.0], [66.0, 3951.5], [67.0, 3695.0], [68.0, 3926.0], [69.0, 3983.0], [71.0, 4144.0], [70.0, 101377.0], [72.0, 4205.0], [73.0, 4014.0], [74.0, 4221.0], [75.0, 33853.5], [76.0, 4555.0], [78.0, 5015.0], [79.0, 5551.0], [80.0, 5167.0], [81.0, 5894.0], [82.0, 28930.0], [83.0, 5724.0], [84.0, 5818.0], [85.0, 5730.0], [86.0, 5846.0], [87.0, 5701.0], [88.0, 5474.5], [89.0, 5586.0], [90.0, 5359.0], [91.0, 5347.0], [92.0, 5610.0], [93.0, 5851.0], [95.0, 6315.0], [96.0, 6594.0], [97.0, 6387.0], [98.0, 6730.0], [99.0, 6735.0], [100.0, 6617.0], [101.0, 6547.0], [103.0, 7077.0], [105.0, 7045.0], [106.0, 7174.0], [107.0, 7454.0], [108.0, 7420.0], [109.0, 19820.5], [110.0, 7485.0], [111.0, 7418.0], [112.0, 7488.0], [113.0, 7349.0], [114.0, 7497.0], [115.0, 7645.0], [116.0, 7494.0], [117.0, 7911.0], [118.0, 7789.0], [120.0, 8124.0], [121.0, 8173.0], [122.0, 8437.0], [123.0, 8452.0], [124.0, 8510.0], [125.0, 8321.0], [126.0, 59959.0], [127.0, 8998.0], [128.0, 8801.0], [129.0, 8517.0], [130.0, 8779.0], [131.0, 8725.0], [133.0, 49823.333333333336], [134.0, 8960.0], [135.0, 9001.0], [137.0, 9423.0], [139.0, 16827.666666666668], [141.0, 10249.0], [142.0, 16901.0], [144.0, 10098.0], [145.0, 10113.0], [146.0, 10309.0], [147.0, 10104.0], [148.0, 10473.0], [149.0, 10301.0], [150.0, 10391.0], [151.0, 10355.0], [152.0, 15448.0], [153.0, 10858.0], [154.0, 10832.0], [155.0, 10724.0], [158.0, 11171.0], [156.0, 20659.0], [162.0, 11343.0], [168.0, 11053.0], [172.0, 12584.0], [173.0, 18468.0], [175.0, 11352.0], [170.0, 19748.0], [176.0, 10786.0], [179.0, 14228.0], [180.0, 26721.0], [182.0, 13243.0], [184.0, 11270.0], [186.0, 11477.0], [188.0, 32528.5], [201.0, 19856.0], [203.0, 19358.0], [206.0, 23375.0], [204.0, 39081.0], [209.0, 13006.0], [210.0, 65007.0], [211.0, 12934.0], [214.0, 11332.0], [215.0, 10928.0], [216.0, 64208.0], [217.0, 27830.0], [219.0, 9634.0], [221.0, 8169.0], [222.0, 17923.75], [223.0, 21850.5], [218.0, 38511.0], [226.0, 15552.0], [227.0, 17570.0], [228.0, 13850.0], [229.0, 15436.0], [231.0, 23911.5], [230.0, 17721.0], [224.0, 14123.0], [233.0, 49969.5], [236.0, 14212.75], [237.0, 13294.0], [238.0, 13100.5], [239.0, 37861.0], [244.0, 12387.0], [246.0, 13252.0], [247.0, 13276.0], [243.0, 13326.0], [241.0, 13348.0], [240.0, 16182.0], [248.0, 26303.0], [250.0, 41606.5], [254.0, 44769.0], [255.0, 13209.0], [249.0, 12873.0], [257.0, 12880.5], [256.0, 66006.0], [258.0, 44110.333333333336], [259.0, 6908.5], [260.0, 57626.25], [261.0, 12898.0], [262.0, 61975.5], [263.0, 13400.0], [264.0, 60902.0], [265.0, 12210.0], [270.0, 13308.0], [271.0, 11302.0], [268.0, 10261.0], [269.0, 14773.5], [266.0, 13219.0], [267.0, 13238.0], [273.0, 14855.0], [272.0, 43715.33333333333], [274.0, 47098.5], [275.0, 12422.5], [276.0, 74705.66666666667], [277.0, 20460.5], [278.0, 38646.75], [280.0, 10929.5], [286.0, 38798.2], [287.0, 9549.0], [284.0, 77692.0], [285.0, 13577.0], [281.0, 12032.0], [282.0, 25526.5], [283.0, 11003.5], [289.0, 12273.8], [288.0, 21668.5], [290.0, 7763.0], [291.0, 73724.33333333333], [292.0, 8697.25], [293.0, 45262.333333333336], [295.0, 23596.636363636364], [296.0, 8252.0], [302.0, 15249.833333333334], [303.0, 8121.88888888889], [300.0, 13581.0], [301.0, 10160.833333333334], [297.0, 39210.0], [299.0, 21505.125], [305.0, 12837.333333333334], [304.0, 9957.333333333334], [306.0, 13121.0], [307.0, 31890.285714285717], [308.0, 10579.0], [309.0, 66130.5], [310.0, 9700.833333333334], [311.0, 31689.6], [312.0, 7511.714285714286], [319.0, 10825.25], [316.0, 10584.333333333332], [317.0, 9216.0], [313.0, 11260.0], [314.0, 9893.499999999998], [315.0, 8981.666666666664], [321.0, 44523.666666666664], [320.0, 8340.777777777777], [322.0, 12806.75], [323.0, 8794.333333333334], [324.0, 11176.0], [325.0, 8522.0], [326.0, 9318.75], [327.0, 23701.88888888889], [328.0, 11629.0], [335.0, 13846.333333333334], [333.0, 13312.5], [334.0, 74737.66666666667], [329.0, 27721.666666666668], [330.0, 9868.0], [331.0, 13312.0], [337.0, 8748.444444444445], [336.0, 9545.307692307691], [338.0, 20720.75], [339.0, 11945.0], [340.0, 11187.2], [342.0, 11414.4], [343.0, 10731.875], [344.0, 10023.0], [350.0, 12844.75], [351.0, 14556.75], [348.0, 10500.0], [349.0, 11572.5], [345.0, 7537.4], [346.0, 7670.222222222222], [347.0, 11985.666666666666], [354.0, 10007.5], [353.0, 13216.0], [355.0, 12180.5], [364.0, 9538.318181818182], [365.0, 8649.333333333334], [367.0, 15641.818181818182], [356.0, 13311.2], [357.0, 9984.5], [358.0, 11912.0], [359.0, 12774.124999999998], [360.0, 8772.666666666666], [361.0, 11978.0], [362.0, 10935.857142857143], [363.0, 14637.0], [369.0, 8516.0], [368.0, 11683.5], [370.0, 12901.200000000003], [371.0, 13410.57142857143], [372.0, 12014.5], [373.0, 9769.142857142857], [374.0, 8918.57142857143], [375.0, 10923.166666666666], [376.0, 8880.0], [382.0, 10829.5], [383.0, 11682.0], [380.0, 9048.5], [381.0, 10709.142857142857], [377.0, 11364.0], [378.0, 9588.0], [379.0, 7359.75], [385.0, 12327.5], [384.0, 9254.5], [386.0, 13024.444444444443], [387.0, 11113.6], [388.0, 12458.5], [389.0, 10906.0], [390.0, 11904.333333333334], [391.0, 1.0], [392.0, 9805.875], [398.0, 11814.166666666668], [399.0, 10025.124999999998], [396.0, 11495.25], [397.0, 8809.42857142857], [393.0, 12544.0], [395.0, 10714.0], [401.0, 22268.0], [400.0, 10649.666666666666], [402.0, 13888.125], [403.0, 13153.0], [404.0, 10945.0], [405.0, 10427.0], [406.0, 4096.0], [407.0, 7936.0], [408.0, 12880.333333333334], [415.0, 12954.0], [413.0, 12727.699999999999], [414.0, 12548.0], [409.0, 10096.142857142857], [410.0, 10612.888888888889], [411.0, 10802.57142857143], [417.0, 12675.2], [416.0, 11469.6], [418.0, 11090.0], [419.0, 81614.88888888889], [420.0, 11261.7], [421.0, 7473.444444444444], [422.0, 10628.1], [423.0, 8838.333333333332], [424.0, 41974.0], [430.0, 13767.0], [431.0, 12010.666666666666], [428.0, 8678.25], [429.0, 8947.0], [425.0, 8557.666666666666], [426.0, 8045.285714285715], [427.0, 6641.6], [433.0, 10719.0], [432.0, 12992.666666666666], [434.0, 6509.0], [435.0, 13526.0], [436.0, 12864.25], [437.0, 10086.071428571428], [438.0, 9396.6], [439.0, 11032.0], [440.0, 25286.666666666668], [446.0, 10827.42857142857], [447.0, 11520.0], [444.0, 9772.5], [445.0, 8610.888888888889], [441.0, 13828.0], [442.0, 9026.0], [443.0, 11901.23076923077], [449.0, 12147.333333333334], [448.0, 9913.666666666666], [450.0, 9444.75], [451.0, 13695.75], [452.0, 9857.125], [453.0, 13308.0], [454.0, 38304.625], [455.0, 13340.0], [458.0, 13845.875], [460.0, 13557.833333333334], [461.0, 9752.875], [462.0, 9741.27272727273], [463.0, 12151.0], [459.0, 13694.4], [465.0, 20218.666666666668], [464.0, 11692.125], [466.0, 12994.0], [467.0, 48495.625], [469.0, 49508.0], [470.0, 7123.75], [471.0, 17640.642857142855], [472.0, 19620.5], [476.0, 12697.2], [477.0, 54167.666666666664], [478.0, 5774.0], [479.0, 10410.333333333334], [473.0, 90878.2], [481.0, 57224.75], [480.0, 12119.571428571428], [482.0, 7466.0], [483.0, 12946.142857142857], [484.0, 12190.857142857141], [486.0, 14846.5], [487.0, 8021.333333333333], [488.0, 9217.142857142857], [494.0, 11986.272727272726], [495.0, 9247.0], [492.0, 12800.0], [493.0, 9417.666666666666], [489.0, 10465.636363636364], [491.0, 130818.5], [496.0, 9641.25], [497.0, 9899.0], [498.0, 14584.333333333334], [499.0, 42527.6], [500.0, 19694.92736077481], [1.0, 141.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[376.3583061889248, 17548.67806731815]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 438.03333333333336, "minX": 1.5394494E12, "maxY": 970929.6333333333, "series": [{"data": [[1.53944946E12, 930362.8833333333], [1.53944994E12, 970929.6333333333], [1.53944976E12, 943002.3833333333], [1.53944982E12, 949660.8333333334], [1.53944964E12, 953464.8333333334], [1.5394497E12, 952613.7], [1.53944952E12, 920587.55], [1.53945E12, 962502.9333333333], [1.53944958E12, 954222.7833333333], [1.53945006E12, 107350.18333333333], [1.5394494E12, 97975.05], [1.53944988E12, 962586.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53944946E12, 3355.766666666667], [1.53944994E12, 7392.6], [1.53944976E12, 7110.1], [1.53944982E12, 7020.683333333333], [1.53944964E12, 3226.0333333333333], [1.5394497E12, 5275.05], [1.53944952E12, 3327.883333333333], [1.53945E12, 6615.866666666667], [1.53944958E12, 3268.233333333333], [1.53945006E12, 813.7833333333333], [1.5394494E12, 438.03333333333336], [1.53944988E12, 7548.283333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945006E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 38.75, "minX": 1.5394494E12, "maxY": 101170.17391304347, "series": [{"data": [[1.53944946E12, 3653.31158238173], [1.53944994E12, 13601.506644518271], [1.53944976E12, 11867.83827751198], [1.53944982E12, 11785.871268656712], [1.53944964E12, 13486.372056514912], [1.5394497E12, 14478.861176470597], [1.53944952E12, 8312.853135313531], [1.53945E12, 16668.030018761732], [1.53944958E12, 12205.984025559104], [1.53945006E12, 71752.58771929824], [1.5394494E12, 1386.7968749999998], [1.53944988E12, 14450.18405428328]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53944946E12, 3216.884615384616], [1.53944994E12, 18654.651162790684], [1.53944976E12, 13847.737012987009], [1.53944982E12, 10822.728571428575], [1.53944964E12, 11547.478260869566], [1.5394497E12, 13479.350574712647], [1.53944952E12, 7992.384615384616], [1.53945E12, 30116.46724890829], [1.53944958E12, 11718.48717948718], [1.53945006E12, 66177.82000000002], [1.5394494E12, 1433.1428571428573], [1.53944988E12, 16040.106761565845]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53944946E12, 2393.945454545455], [1.53944994E12, 15008.020661157023], [1.53944976E12, 12559.11912225705], [1.53944982E12, 10970.629757785468], [1.53944964E12, 21560.195652173905], [1.5394497E12, 24160.868932038833], [1.53944952E12, 7060.7017543859665], [1.53945E12, 28491.278884462154], [1.53944958E12, 12840.151515151516], [1.53945006E12, 101170.17391304347], [1.5394494E12, 38.75], [1.53944988E12, 16754.911475409837]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945006E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 38.625, "minX": 1.5394494E12, "maxY": 101170.13043478261, "series": [{"data": [[1.53944946E12, 3652.104404567702], [1.53944994E12, 13600.857142857152], [1.53944976E12, 11867.157894736834], [1.53944982E12, 11785.180970149246], [1.53944964E12, 13485.153846153855], [1.5394497E12, 14477.9317647059], [1.53944952E12, 8311.594059405943], [1.53945E12, 16667.281425891164], [1.53944958E12, 12204.731629392969], [1.53945006E12, 71751.8157894737], [1.5394494E12, 1386.28125], [1.53944988E12, 14449.567430025443]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53944946E12, 3216.884615384616], [1.53944994E12, 18654.647286821706], [1.53944976E12, 13847.73376623376], [1.53944982E12, 10822.728571428575], [1.53944964E12, 11547.478260869566], [1.5394497E12, 13479.350574712647], [1.53944952E12, 7992.365384615386], [1.53945E12, 30116.45851528386], [1.53944958E12, 11718.48717948718], [1.53945006E12, 66177.78], [1.5394494E12, 1433.1428571428573], [1.53944988E12, 16040.103202846978]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53944946E12, 2393.8909090909087], [1.53944994E12, 15008.012396694216], [1.53944976E12, 12559.115987460817], [1.53944982E12, 10970.629757785468], [1.53944964E12, 21560.152173913044], [1.5394497E12, 24160.868932038833], [1.53944952E12, 7060.684210526316], [1.53945E12, 28491.26693227093], [1.53944958E12, 12840.151515151516], [1.53945006E12, 101170.13043478261], [1.5394494E12, 38.625], [1.53944988E12, 16754.911475409837]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945006E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5394494E12, "maxY": 6.812499999999999, "series": [{"data": [[1.53944946E12, 0.7732463295269167], [1.53944994E12, 0.49833887043189395], [1.53944976E12, 0.6392344497607652], [1.53944982E12, 0.5541044776119399], [1.53944964E12, 0.7990580847723714], [1.5394497E12, 0.6129411764705883], [1.53944952E12, 0.6270627062706267], [1.53945E12, 0.5337711069418384], [1.53944958E12, 0.6453674121405756], [1.53945006E12, 0.5438596491228067], [1.5394494E12, 0.42187499999999994], [1.53944988E12, 0.4469889737065313]], "isOverall": false, "label": "Visualizar-Processo", "isController": false}, {"data": [[1.53944946E12, 0.6923076923076923], [1.53944994E12, 0.5155038759689926], [1.53944976E12, 0.6980519480519483], [1.53944982E12, 0.6321428571428571], [1.53944964E12, 0.7391304347826088], [1.5394497E12, 0.8678160919540231], [1.53944952E12, 0.9423076923076925], [1.53945E12, 0.5458515283842795], [1.53944958E12, 1.2820512820512824], [1.53945006E12, 0.4799999999999998], [1.5394494E12, 0.0], [1.53944988E12, 0.5943060498220638]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53944946E12, 1.054545454545455], [1.53944994E12, 0.48760330578512384], [1.53944976E12, 0.7304075235109717], [1.53944982E12, 0.7024221453287197], [1.53944964E12, 0.8695652173913044], [1.5394497E12, 0.7038834951456311], [1.53944952E12, 0.8771929824561404], [1.53945E12, 0.4701195219123504], [1.53944958E12, 1.393939393939394], [1.53945006E12, 0.47826086956521735], [1.5394494E12, 6.812499999999999], [1.53944988E12, 1.3147540983606563]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945006E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 23.0, "minX": 1.5394494E12, "maxY": 112316.0, "series": [{"data": [[1.53944946E12, 6358.0], [1.53944994E12, 18725.0], [1.53944976E12, 32820.0], [1.53944982E12, 18952.0], [1.53944964E12, 65007.0], [1.5394497E12, 28372.0], [1.53944952E12, 11132.0], [1.53945E12, 69229.0], [1.53944958E12, 38039.0], [1.53945006E12, 112316.0], [1.5394494E12, 6317.0], [1.53944988E12, 36782.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53944946E12, 37.0], [1.53944994E12, 10369.0], [1.53944976E12, 10244.0], [1.53944982E12, 10173.0], [1.53944964E12, 10928.0], [1.5394497E12, 10291.0], [1.53944952E12, 4555.0], [1.53945E12, 10651.0], [1.53944958E12, 9282.0], [1.53945006E12, 16968.0], [1.5394494E12, 23.0], [1.53944988E12, 10640.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53944946E12, 5400.2], [1.53944994E12, 13385.2], [1.53944976E12, 13373.0], [1.53944982E12, 13448.6], [1.53944964E12, 13232.0], [1.5394497E12, 13419.1], [1.53944952E12, 9572.1], [1.53945E12, 13512.0], [1.53944958E12, 12578.2], [1.53945006E12, 13557.4], [1.5394494E12, 1467.6000000000001], [1.53944988E12, 13402.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53944946E12, 5842.82], [1.53944994E12, 15416.880000000005], [1.53944976E12, 15019.640000000003], [1.53944982E12, 15041.750000000004], [1.53944964E12, 14106.87], [1.5394497E12, 14422.789999999997], [1.53944952E12, 10450.82], [1.53945E12, 16379.100000000011], [1.53944958E12, 13255.449999999999], [1.53945006E12, 27086.799999999937], [1.5394494E12, 6317.0], [1.53944988E12, 15319.169999999987]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53944946E12, 5527.15], [1.53944994E12, 13700.0], [1.53944976E12, 13673.0], [1.53944982E12, 13715.15], [1.53944964E12, 13553.85], [1.5394497E12, 13674.15], [1.53944952E12, 10062.25], [1.53945E12, 13878.0], [1.53944958E12, 12839.15], [1.53945006E12, 14022.8], [1.5394494E12, 1819.6], [1.53944988E12, 13707.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945006E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 105473.0, "series": [{"data": [[1.0, 1360.0], [20.0, 12807.5], [11.0, 12101.5], [12.0, 3605.0], [3.0, 33753.0], [25.0, 12964.0], [27.0, 12465.5], [28.0, 12621.0], [29.0, 12563.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 1.0], [20.0, 11263.5], [11.0, 13294.0], [12.0, 1.0], [3.0, 105473.0], [25.0, 13311.0], [27.0, 11263.0], [28.0, 11582.0], [29.0, 12800.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 105473.0, "series": [{"data": [[1.0, 1360.0], [20.0, 12807.0], [11.0, 12100.5], [12.0, 3605.0], [3.0, 33749.5], [25.0, 12963.0], [27.0, 12465.0], [28.0, 12619.0], [29.0, 12562.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 1.0], [20.0, 11263.5], [11.0, 13294.0], [12.0, 1.0], [3.0, 105473.0], [25.0, 13311.0], [27.0, 11263.0], [28.0, 11582.0], [29.0, 12800.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 29.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.8333333333333333, "minX": 1.5394494E12, "maxY": 30.416666666666668, "series": [{"data": [[1.53944946E12, 13.0], [1.53944994E12, 28.483333333333334], [1.53944976E12, 28.866666666666667], [1.53944982E12, 28.35], [1.53944964E12, 12.766666666666667], [1.5394497E12, 21.5], [1.53944952E12, 12.916666666666666], [1.53945E12, 20.55], [1.53944958E12, 12.616666666666667], [1.5394494E12, 1.8333333333333333], [1.53944988E12, 30.416666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394494E12, "maxY": 17.766666666666666, "series": [{"data": [[1.53944946E12, 11.05], [1.53944994E12, 10.966666666666667], [1.53944976E12, 10.933333333333334], [1.53944982E12, 10.866666666666667], [1.53944964E12, 10.783333333333333], [1.5394497E12, 10.916666666666666], [1.53944952E12, 10.983333333333333], [1.53945E12, 11.133333333333333], [1.53944958E12, 10.983333333333333], [1.53945006E12, 1.3], [1.5394494E12, 1.3166666666666667], [1.53944988E12, 11.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53944946E12, 0.8666666666666667], [1.53944994E12, 0.38333333333333336], [1.53944976E12, 0.6333333333333333], [1.53944982E12, 0.5333333333333333], [1.53944964E12, 0.31666666666666665], [1.5394497E12, 0.35], [1.53944952E12, 0.85], [1.53945E12, 0.23333333333333334], [1.53944958E12, 0.65], [1.5394494E12, 0.23333333333333334], [1.53944988E12, 0.5]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53944946E12, 0.08333333333333333], [1.53944994E12, 16.816666666666666], [1.53944976E12, 16.05], [1.53944982E12, 15.7], [1.53944964E12, 0.6666666666666666], [1.5394497E12, 8.916666666666666], [1.53944952E12, 0.08333333333333333], [1.53945E12, 14.033333333333333], [1.53945006E12, 1.2666666666666666], [1.5394494E12, 0.016666666666666666], [1.53944988E12, 17.766666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53944994E12, 0.23333333333333334], [1.53944976E12, 0.25], [1.53944982E12, 0.25], [1.5394497E12, 0.31666666666666665], [1.53945E12, 0.36666666666666664], [1.53945006E12, 0.55], [1.53944988E12, 0.15]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53945006E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5394494E12, "maxY": 10.6, "series": [{"data": [[1.53944946E12, 0.9166666666666666], [1.53944994E12, 0.36666666666666664], [1.53944976E12, 0.7], [1.53944982E12, 0.5166666666666667], [1.53944964E12, 0.31666666666666665], [1.5394497E12, 0.5333333333333333], [1.53944952E12, 0.95], [1.53945E12, 0.65], [1.53944958E12, 0.55], [1.53945006E12, 0.15], [1.5394494E12, 0.26666666666666666], [1.53944988E12, 0.5]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53944946E12, 0.8666666666666667], [1.53944994E12, 0.38333333333333336], [1.53944976E12, 0.6333333333333333], [1.53944982E12, 0.5333333333333333], [1.53944964E12, 0.31666666666666665], [1.5394497E12, 0.35], [1.53944952E12, 0.85], [1.53945E12, 0.23333333333333334], [1.53944958E12, 0.65], [1.5394494E12, 0.23333333333333334], [1.53944988E12, 0.5]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53944946E12, 10.133333333333333], [1.53944994E12, 10.6], [1.53944976E12, 10.233333333333333], [1.53944982E12, 10.35], [1.53944964E12, 10.466666666666667], [1.5394497E12, 10.383333333333333], [1.53944952E12, 10.033333333333333], [1.53945E12, 10.483333333333333], [1.53944958E12, 10.433333333333334], [1.53945006E12, 1.15], [1.5394494E12, 1.05], [1.53944988E12, 10.5]], "isOverall": false, "label": "Visualizar-Processo-success", "isController": false}, {"data": [[1.53944946E12, 0.08333333333333333], [1.53944994E12, 9.466666666666667], [1.53944976E12, 7.183333333333334], [1.53944982E12, 7.516666666666667], [1.53944964E12, 0.15], [1.5394497E12, 3.783333333333333], [1.53944952E12, 0.06666666666666667], [1.53945E12, 7.283333333333333], [1.53945006E12, 0.75], [1.5394494E12, 0.016666666666666666], [1.53944988E12, 9.15]], "isOverall": false, "label": "Visualizar-Processo-failure", "isController": false}, {"data": [[1.53944994E12, 3.6666666666666665], [1.53944976E12, 4.616666666666666], [1.53944982E12, 4.3], [1.53944964E12, 0.45], [1.5394497E12, 2.9], [1.53945E12, 3.533333333333333], [1.53945006E12, 0.23333333333333334], [1.53944988E12, 4.583333333333333]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53944994E12, 3.9166666666666665], [1.53944976E12, 4.5], [1.53944982E12, 4.133333333333334], [1.53944964E12, 0.06666666666666667], [1.5394497E12, 2.55], [1.53944952E12, 0.016666666666666666], [1.53945E12, 3.5833333333333335], [1.53945006E12, 0.8333333333333334], [1.53944988E12, 4.183333333333334]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53945006E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
