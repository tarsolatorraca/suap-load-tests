/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 214529.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 3.0], [7.4, 575.0], [7.5, 699.0], [7.6, 718.0], [7.7, 723.0], [7.8, 730.0], [7.9, 969.0], [8.0, 1298.0], [8.1, 1332.0], [8.2, 1335.0], [8.3, 1343.0], [8.4, 1347.0], [8.5, 1473.0], [8.6, 1736.0], [8.7, 1879.0], [8.8, 1958.0], [8.9, 2018.0], [9.0, 2069.0], [9.1, 2151.0], [9.2, 2206.0], [9.3, 2462.0], [9.4, 2590.0], [9.5, 2699.0], [9.6, 2808.0], [9.7, 2915.0], [9.8, 2982.0], [9.9, 3265.0], [10.0, 3746.0], [10.1, 3784.0], [10.2, 3907.0], [10.3, 3945.0], [10.4, 4012.0], [10.5, 4045.0], [10.6, 4125.0], [10.7, 4410.0], [10.8, 5237.0], [10.9, 5546.0], [11.0, 5632.0], [11.1, 5713.0], [11.2, 5839.0], [11.3, 5998.0], [11.4, 6008.0], [11.5, 6150.0], [11.6, 6191.0], [11.7, 6322.0], [11.8, 6354.0], [11.9, 6636.0], [12.0, 6706.0], [12.1, 6795.0], [12.2, 6844.0], [12.3, 6936.0], [12.4, 7166.0], [12.5, 7166.0], [12.6, 7166.0], [12.7, 7167.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7169.0], [16.6, 7171.0], [16.7, 7172.0], [16.8, 7173.0], [16.9, 7175.0], [17.0, 7351.0], [17.1, 7387.0], [17.2, 7422.0], [17.3, 7422.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7425.0], [18.6, 7426.0], [18.7, 7529.0], [18.8, 7541.0], [18.9, 7550.0], [19.0, 7574.0], [19.1, 7629.0], [19.2, 7678.0], [19.3, 7679.0], [19.4, 7679.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7680.0], [20.1, 7681.0], [20.2, 7884.0], [20.3, 7932.0], [20.4, 7933.0], [20.5, 7934.0], [20.6, 7935.0], [20.7, 7935.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7935.0], [21.6, 7935.0], [21.7, 7935.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7937.0], [23.1, 7938.0], [23.2, 7939.0], [23.3, 7940.0], [23.4, 8008.0], [23.5, 8128.0], [23.6, 8185.0], [23.7, 8190.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8191.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8193.0], [25.8, 8195.0], [25.9, 8424.0], [26.0, 8446.0], [26.1, 8447.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8447.0], [26.5, 8447.0], [26.6, 8447.0], [26.7, 8448.0], [26.8, 8448.0], [26.9, 8448.0], [27.0, 8449.0], [27.1, 8470.0], [27.2, 8605.0], [27.3, 8698.0], [27.4, 8699.0], [27.5, 8700.0], [27.6, 8702.0], [27.7, 8702.0], [27.8, 8702.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8703.0], [29.0, 8703.0], [29.1, 8703.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8704.0], [29.6, 8704.0], [29.7, 8707.0], [29.8, 8707.0], [29.9, 8772.0], [30.0, 8843.0], [30.1, 8861.0], [30.2, 8880.0], [30.3, 8918.0], [30.4, 8940.0], [30.5, 8959.0], [30.6, 8959.0], [30.7, 8959.0], [30.8, 8959.0], [30.9, 8959.0], [31.0, 8960.0], [31.1, 8960.0], [31.2, 8960.0], [31.3, 8960.0], [31.4, 8961.0], [31.5, 8987.0], [31.6, 9024.0], [31.7, 9147.0], [31.8, 9170.0], [31.9, 9212.0], [32.0, 9212.0], [32.1, 9214.0], [32.2, 9214.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9215.0], [32.7, 9215.0], [32.8, 9215.0], [32.9, 9215.0], [33.0, 9215.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9217.0], [33.6, 9217.0], [33.7, 9218.0], [33.8, 9219.0], [33.9, 9220.0], [34.0, 9220.0], [34.1, 9222.0], [34.2, 9253.0], [34.3, 9286.0], [34.4, 9300.0], [34.5, 9331.0], [34.6, 9331.0], [34.7, 9464.0], [34.8, 9470.0], [34.9, 9472.0], [35.0, 9476.0], [35.1, 9479.0], [35.2, 9481.0], [35.3, 9487.0], [35.4, 9518.0], [35.5, 9523.0], [35.6, 9548.0], [35.7, 9585.0], [35.8, 9619.0], [35.9, 9652.0], [36.0, 9666.0], [36.1, 9671.0], [36.2, 9694.0], [36.3, 9718.0], [36.4, 9725.0], [36.5, 9726.0], [36.6, 9726.0], [36.7, 9727.0], [36.8, 9727.0], [36.9, 9727.0], [37.0, 9727.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9729.0], [37.7, 9739.0], [37.8, 9747.0], [37.9, 9758.0], [38.0, 9767.0], [38.1, 9794.0], [38.2, 9820.0], [38.3, 9828.0], [38.4, 9831.0], [38.5, 9860.0], [38.6, 9863.0], [38.7, 9871.0], [38.8, 9876.0], [38.9, 9935.0], [39.0, 9953.0], [39.1, 9964.0], [39.2, 9976.0], [39.3, 9982.0], [39.4, 9983.0], [39.5, 9983.0], [39.6, 9983.0], [39.7, 9983.0], [39.8, 9983.0], [39.9, 9984.0], [40.0, 9984.0], [40.1, 9984.0], [40.2, 9984.0], [40.3, 9984.0], [40.4, 9985.0], [40.5, 10036.0], [40.6, 10063.0], [40.7, 10074.0], [40.8, 10095.0], [40.9, 10112.0], [41.0, 10124.0], [41.1, 10134.0], [41.2, 10161.0], [41.3, 10216.0], [41.4, 10230.0], [41.5, 10232.0], [41.6, 10236.0], [41.7, 10238.0], [41.8, 10238.0], [41.9, 10239.0], [42.0, 10239.0], [42.1, 10239.0], [42.2, 10239.0], [42.3, 10239.0], [42.4, 10239.0], [42.5, 10240.0], [42.6, 10240.0], [42.7, 10240.0], [42.8, 10243.0], [42.9, 10269.0], [43.0, 10288.0], [43.1, 10302.0], [43.2, 10316.0], [43.3, 10332.0], [43.4, 10341.0], [43.5, 10349.0], [43.6, 10367.0], [43.7, 10391.0], [43.8, 10404.0], [43.9, 10411.0], [44.0, 10418.0], [44.1, 10423.0], [44.2, 10440.0], [44.3, 10466.0], [44.4, 10469.0], [44.5, 10485.0], [44.6, 10491.0], [44.7, 10493.0], [44.8, 10494.0], [44.9, 10495.0], [45.0, 10496.0], [45.1, 10508.0], [45.2, 10523.0], [45.3, 10548.0], [45.4, 10561.0], [45.5, 10567.0], [45.6, 10593.0], [45.7, 10603.0], [45.8, 10638.0], [45.9, 10643.0], [46.0, 10650.0], [46.1, 10664.0], [46.2, 10675.0], [46.3, 10702.0], [46.4, 10730.0], [46.5, 10731.0], [46.6, 10733.0], [46.7, 10749.0], [46.8, 10750.0], [46.9, 10751.0], [47.0, 10751.0], [47.1, 10751.0], [47.2, 10751.0], [47.3, 10751.0], [47.4, 10752.0], [47.5, 10752.0], [47.6, 10753.0], [47.7, 10757.0], [47.8, 10762.0], [47.9, 10767.0], [48.0, 10780.0], [48.1, 10784.0], [48.2, 10834.0], [48.3, 10847.0], [48.4, 10853.0], [48.5, 10874.0], [48.6, 10884.0], [48.7, 10904.0], [48.8, 10912.0], [48.9, 10926.0], [49.0, 10949.0], [49.1, 10951.0], [49.2, 10982.0], [49.3, 10987.0], [49.4, 11007.0], [49.5, 11007.0], [49.6, 11007.0], [49.7, 11007.0], [49.8, 11007.0], [49.9, 11007.0], [50.0, 11007.0], [50.1, 11007.0], [50.2, 11008.0], [50.3, 11008.0], [50.4, 11008.0], [50.5, 11013.0], [50.6, 11028.0], [50.7, 11041.0], [50.8, 11053.0], [50.9, 11083.0], [51.0, 11098.0], [51.1, 11110.0], [51.2, 11120.0], [51.3, 11154.0], [51.4, 11193.0], [51.5, 11226.0], [51.6, 11236.0], [51.7, 11258.0], [51.8, 11262.0], [51.9, 11263.0], [52.0, 11263.0], [52.1, 11263.0], [52.2, 11263.0], [52.3, 11263.0], [52.4, 11263.0], [52.5, 11263.0], [52.6, 11263.0], [52.7, 11264.0], [52.8, 11265.0], [52.9, 11267.0], [53.0, 11322.0], [53.1, 11340.0], [53.2, 11392.0], [53.3, 11399.0], [53.4, 11406.0], [53.5, 11412.0], [53.6, 11482.0], [53.7, 11519.0], [53.8, 11520.0], [53.9, 11525.0], [54.0, 11561.0], [54.1, 11571.0], [54.2, 11752.0], [54.3, 11774.0], [54.4, 11775.0], [54.5, 11775.0], [54.6, 11775.0], [54.7, 11775.0], [54.8, 11776.0], [54.9, 11776.0], [55.0, 11776.0], [55.1, 11777.0], [55.2, 11862.0], [55.3, 12015.0], [55.4, 12032.0], [55.5, 12064.0], [55.6, 12198.0], [55.7, 12283.0], [55.8, 12287.0], [55.9, 12287.0], [56.0, 12287.0], [56.1, 12288.0], [56.2, 12288.0], [56.3, 12544.0], [56.4, 12650.0], [56.5, 12746.0], [56.6, 12795.0], [56.7, 12795.0], [56.8, 12796.0], [56.9, 12796.0], [57.0, 12797.0], [57.1, 12799.0], [57.2, 12799.0], [57.3, 12799.0], [57.4, 12799.0], [57.5, 12800.0], [57.6, 12800.0], [57.7, 12800.0], [57.8, 12866.0], [57.9, 13026.0], [58.0, 13055.0], [58.1, 13055.0], [58.2, 13059.0], [58.3, 13116.0], [58.4, 13297.0], [58.5, 13306.0], [58.6, 13306.0], [58.7, 13307.0], [58.8, 13307.0], [58.9, 13307.0], [59.0, 13308.0], [59.1, 13308.0], [59.2, 13308.0], [59.3, 13308.0], [59.4, 13308.0], [59.5, 13309.0], [59.6, 13309.0], [59.7, 13309.0], [59.8, 13309.0], [59.9, 13309.0], [60.0, 13310.0], [60.1, 13310.0], [60.2, 13310.0], [60.3, 13310.0], [60.4, 13310.0], [60.5, 13310.0], [60.6, 13310.0], [60.7, 13310.0], [60.8, 13310.0], [60.9, 13310.0], [61.0, 13310.0], [61.1, 13310.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13313.0], [77.4, 13313.0], [77.5, 13313.0], [77.6, 13313.0], [77.7, 13313.0], [77.8, 13313.0], [77.9, 13313.0], [78.0, 13313.0], [78.1, 13313.0], [78.2, 13313.0], [78.3, 13313.0], [78.4, 13314.0], [78.5, 13315.0], [78.6, 13315.0], [78.7, 13315.0], [78.8, 13315.0], [78.9, 13315.0], [79.0, 13316.0], [79.1, 13316.0], [79.2, 13316.0], [79.3, 13316.0], [79.4, 13316.0], [79.5, 13316.0], [79.6, 13410.0], [79.7, 13563.0], [79.8, 13567.0], [79.9, 13620.0], [80.0, 13820.0], [80.1, 13820.0], [80.2, 13821.0], [80.3, 13821.0], [80.4, 13822.0], [80.5, 13822.0], [80.6, 13822.0], [80.7, 13822.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13823.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13823.0], [82.5, 13823.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13825.0], [84.0, 14079.0], [84.1, 14080.0], [84.2, 14080.0], [84.3, 14080.0], [84.4, 14148.0], [84.5, 14330.0], [84.6, 14333.0], [84.7, 14334.0], [84.8, 14334.0], [84.9, 14334.0], [85.0, 14334.0], [85.1, 14335.0], [85.2, 14335.0], [85.3, 14335.0], [85.4, 14335.0], [85.5, 14335.0], [85.6, 14335.0], [85.7, 14335.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14336.0], [86.7, 14336.0], [86.8, 14336.0], [86.9, 14336.0], [87.0, 14336.0], [87.1, 14336.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14337.0], [87.9, 14337.0], [88.0, 14591.0], [88.1, 14591.0], [88.2, 14591.0], [88.3, 14591.0], [88.4, 14591.0], [88.5, 14592.0], [88.6, 14847.0], [88.7, 14847.0], [88.8, 14847.0], [88.9, 14847.0], [89.0, 14848.0], [89.1, 14938.0], [89.2, 15104.0], [89.3, 15359.0], [89.4, 15359.0], [89.5, 15363.0], [89.6, 15615.0], [89.7, 15615.0], [89.8, 15619.0], [89.9, 15871.0], [90.0, 15872.0], [90.1, 16128.0], [90.2, 16214.0], [90.3, 16383.0], [90.4, 16384.0], [90.5, 16384.0], [90.6, 16385.0], [90.7, 17151.0], [90.8, 17152.0], [90.9, 17295.0], [91.0, 17320.0], [91.1, 17371.0], [91.2, 17386.0], [91.3, 17662.0], [91.4, 17918.0], [91.5, 17919.0], [91.6, 17919.0], [91.7, 18431.0], [91.8, 18431.0], [91.9, 18913.0], [92.0, 18935.0], [92.1, 18944.0], [92.2, 18962.0], [92.3, 19219.0], [92.4, 19531.0], [92.5, 19968.0], [92.6, 19969.0], [92.7, 20445.0], [92.8, 21247.0], [92.9, 22783.0], [93.0, 26364.0], [93.1, 26364.0], [93.2, 26367.0], [93.3, 26367.0], [93.4, 26367.0], [93.5, 26367.0], [93.6, 26369.0], [93.7, 26880.0], [93.8, 27392.0], [93.9, 27902.0], [94.0, 27903.0], [94.1, 28379.0], [94.2, 42752.0], [94.3, 45567.0], [94.4, 45567.0], [94.5, 49920.0], [94.6, 52755.0], [94.7, 53247.0], [94.8, 53314.0], [94.9, 53759.0], [95.0, 53779.0], [95.1, 53960.0], [95.2, 54496.0], [95.3, 54598.0], [95.4, 54779.0], [95.5, 54810.0], [95.6, 54843.0], [95.7, 54844.0], [95.8, 55832.0], [95.9, 55849.0], [96.0, 67409.0], [96.1, 75264.0], [96.2, 76031.0], [96.3, 78335.0], [96.4, 78591.0], [96.5, 78593.0], [96.6, 105983.0], [96.7, 105987.0], [96.8, 106239.0], [96.9, 106239.0], [97.0, 106240.0], [97.1, 106241.0], [97.2, 106491.0], [97.3, 106495.0], [97.4, 106497.0], [97.5, 106497.0], [97.6, 108031.0], [97.7, 108799.0], [97.8, 108800.0], [97.9, 112868.0], [98.0, 114943.0], [98.1, 114945.0], [98.2, 115199.0], [98.3, 118272.0], [98.4, 122367.0], [98.5, 124415.0], [98.6, 127230.0], [98.7, 132864.0], [98.8, 139519.0], [98.9, 140543.0], [99.0, 147968.0], [99.1, 149503.0], [99.2, 149503.0], [99.3, 149505.0], [99.4, 164860.0], [99.5, 164863.0], [99.6, 197632.0], [99.7, 211460.0], [99.8, 214527.0], [99.9, 214528.0], [100.0, 214528.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 2.0], [3.1, 2.0], [3.2, 4.0], [3.3, 1162.0], [3.4, 1179.0], [3.5, 1194.0], [3.6, 1202.0], [3.7, 1211.0], [3.8, 1220.0], [3.9, 1231.0], [4.0, 1238.0], [4.1, 1244.0], [4.2, 1262.0], [4.3, 1284.0], [4.4, 1324.0], [4.5, 1364.0], [4.6, 1424.0], [4.7, 1498.0], [4.8, 1548.0], [4.9, 1583.0], [5.0, 1614.0], [5.1, 1635.0], [5.2, 1694.0], [5.3, 1756.0], [5.4, 1810.0], [5.5, 1898.0], [5.6, 1976.0], [5.7, 2082.0], [5.8, 2163.0], [5.9, 2268.0], [6.0, 2394.0], [6.1, 2431.0], [6.2, 2454.0], [6.3, 2492.0], [6.4, 2522.0], [6.5, 2545.0], [6.6, 2599.0], [6.7, 2637.0], [6.8, 2671.0], [6.9, 2739.0], [7.0, 2783.0], [7.1, 2801.0], [7.2, 2835.0], [7.3, 2896.0], [7.4, 2931.0], [7.5, 2961.0], [7.6, 2998.0], [7.7, 3021.0], [7.8, 3064.0], [7.9, 3104.0], [8.0, 3151.0], [8.1, 3199.0], [8.2, 3296.0], [8.3, 3323.0], [8.4, 3422.0], [8.5, 3469.0], [8.6, 3493.0], [8.7, 3590.0], [8.8, 3720.0], [8.9, 3814.0], [9.0, 4008.0], [9.1, 4158.0], [9.2, 4234.0], [9.3, 4286.0], [9.4, 4325.0], [9.5, 4356.0], [9.6, 4384.0], [9.7, 4421.0], [9.8, 4448.0], [9.9, 4481.0], [10.0, 4525.0], [10.1, 4559.0], [10.2, 4582.0], [10.3, 4627.0], [10.4, 4705.0], [10.5, 4757.0], [10.6, 4797.0], [10.7, 4912.0], [10.8, 5018.0], [10.9, 5170.0], [11.0, 5422.0], [11.1, 5607.0], [11.2, 5729.0], [11.3, 5782.0], [11.4, 5929.0], [11.5, 5984.0], [11.6, 6033.0], [11.7, 6066.0], [11.8, 6090.0], [11.9, 6135.0], [12.0, 6149.0], [12.1, 6177.0], [12.2, 6215.0], [12.3, 6247.0], [12.4, 6290.0], [12.5, 6326.0], [12.6, 6387.0], [12.7, 6440.0], [12.8, 6462.0], [12.9, 6507.0], [13.0, 6595.0], [13.1, 6739.0], [13.2, 6847.0], [13.3, 6922.0], [13.4, 7069.0], [13.5, 7099.0], [13.6, 7124.0], [13.7, 7164.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7169.0], [14.7, 7171.0], [14.8, 7173.0], [14.9, 7195.0], [15.0, 7214.0], [15.1, 7249.0], [15.2, 7274.0], [15.3, 7303.0], [15.4, 7370.0], [15.5, 7388.0], [15.6, 7409.0], [15.7, 7422.0], [15.8, 7423.0], [15.9, 7423.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7425.0], [16.3, 7425.0], [16.4, 7426.0], [16.5, 7438.0], [16.6, 7455.0], [16.7, 7476.0], [16.8, 7493.0], [16.9, 7508.0], [17.0, 7526.0], [17.1, 7550.0], [17.2, 7612.0], [17.3, 7633.0], [17.4, 7679.0], [17.5, 7680.0], [17.6, 7680.0], [17.7, 7680.0], [17.8, 7684.0], [17.9, 7741.0], [18.0, 7780.0], [18.1, 7809.0], [18.2, 7841.0], [18.3, 7880.0], [18.4, 7932.0], [18.5, 7935.0], [18.6, 7935.0], [18.7, 7936.0], [18.8, 7936.0], [18.9, 7936.0], [19.0, 7937.0], [19.1, 7948.0], [19.2, 7978.0], [19.3, 8002.0], [19.4, 8039.0], [19.5, 8071.0], [19.6, 8116.0], [19.7, 8170.0], [19.8, 8190.0], [19.9, 8192.0], [20.0, 8192.0], [20.1, 8193.0], [20.2, 8195.0], [20.3, 8244.0], [20.4, 8381.0], [20.5, 8446.0], [20.6, 8447.0], [20.7, 8448.0], [20.8, 8452.0], [20.9, 8564.0], [21.0, 8642.0], [21.1, 8699.0], [21.2, 8702.0], [21.3, 8703.0], [21.4, 8703.0], [21.5, 8704.0], [21.6, 8704.0], [21.7, 8705.0], [21.8, 8710.0], [21.9, 8758.0], [22.0, 8815.0], [22.1, 8901.0], [22.2, 8958.0], [22.3, 8960.0], [22.4, 8961.0], [22.5, 9074.0], [22.6, 9188.0], [22.7, 9212.0], [22.8, 9215.0], [22.9, 9216.0], [23.0, 9216.0], [23.1, 9219.0], [23.2, 9253.0], [23.3, 9322.0], [23.4, 9359.0], [23.5, 9380.0], [23.6, 9398.0], [23.7, 9418.0], [23.8, 9434.0], [23.9, 9450.0], [24.0, 9471.0], [24.1, 9479.0], [24.2, 9486.0], [24.3, 9500.0], [24.4, 9518.0], [24.5, 9527.0], [24.6, 9542.0], [24.7, 9559.0], [24.8, 9570.0], [24.9, 9592.0], [25.0, 9623.0], [25.1, 9650.0], [25.2, 9667.0], [25.3, 9673.0], [25.4, 9698.0], [25.5, 9716.0], [25.6, 9726.0], [25.7, 9727.0], [25.8, 9728.0], [25.9, 9728.0], [26.0, 9728.0], [26.1, 9731.0], [26.2, 9736.0], [26.3, 9745.0], [26.4, 9760.0], [26.5, 9766.0], [26.6, 9775.0], [26.7, 9781.0], [26.8, 9785.0], [26.9, 9795.0], [27.0, 9805.0], [27.1, 9812.0], [27.2, 9821.0], [27.3, 9832.0], [27.4, 9852.0], [27.5, 9861.0], [27.6, 9871.0], [27.7, 9877.0], [27.8, 9889.0], [27.9, 9900.0], [28.0, 9915.0], [28.1, 9924.0], [28.2, 9930.0], [28.3, 9938.0], [28.4, 9949.0], [28.5, 9956.0], [28.6, 9962.0], [28.7, 9971.0], [28.8, 9981.0], [28.9, 9983.0], [29.0, 9984.0], [29.1, 9984.0], [29.2, 9985.0], [29.3, 9988.0], [29.4, 9996.0], [29.5, 10000.0], [29.6, 10006.0], [29.7, 10016.0], [29.8, 10025.0], [29.9, 10039.0], [30.0, 10049.0], [30.1, 10059.0], [30.2, 10075.0], [30.3, 10084.0], [30.4, 10094.0], [30.5, 10103.0], [30.6, 10109.0], [30.7, 10119.0], [30.8, 10124.0], [30.9, 10142.0], [31.0, 10149.0], [31.1, 10155.0], [31.2, 10161.0], [31.3, 10167.0], [31.4, 10178.0], [31.5, 10190.0], [31.6, 10196.0], [31.7, 10204.0], [31.8, 10210.0], [31.9, 10215.0], [32.0, 10229.0], [32.1, 10233.0], [32.2, 10238.0], [32.3, 10239.0], [32.4, 10240.0], [32.5, 10241.0], [32.6, 10246.0], [32.7, 10254.0], [32.8, 10259.0], [32.9, 10268.0], [33.0, 10270.0], [33.1, 10273.0], [33.2, 10276.0], [33.3, 10281.0], [33.4, 10287.0], [33.5, 10293.0], [33.6, 10298.0], [33.7, 10303.0], [33.8, 10308.0], [33.9, 10313.0], [34.0, 10318.0], [34.1, 10324.0], [34.2, 10335.0], [34.3, 10339.0], [34.4, 10343.0], [34.5, 10347.0], [34.6, 10349.0], [34.7, 10353.0], [34.8, 10358.0], [34.9, 10362.0], [35.0, 10365.0], [35.1, 10369.0], [35.2, 10372.0], [35.3, 10375.0], [35.4, 10380.0], [35.5, 10384.0], [35.6, 10390.0], [35.7, 10395.0], [35.8, 10398.0], [35.9, 10402.0], [36.0, 10406.0], [36.1, 10413.0], [36.2, 10418.0], [36.3, 10424.0], [36.4, 10427.0], [36.5, 10431.0], [36.6, 10435.0], [36.7, 10440.0], [36.8, 10443.0], [36.9, 10448.0], [37.0, 10451.0], [37.1, 10455.0], [37.2, 10459.0], [37.3, 10463.0], [37.4, 10466.0], [37.5, 10470.0], [37.6, 10472.0], [37.7, 10475.0], [37.8, 10479.0], [37.9, 10485.0], [38.0, 10491.0], [38.1, 10494.0], [38.2, 10496.0], [38.3, 10499.0], [38.4, 10504.0], [38.5, 10507.0], [38.6, 10511.0], [38.7, 10518.0], [38.8, 10523.0], [38.9, 10525.0], [39.0, 10531.0], [39.1, 10536.0], [39.2, 10538.0], [39.3, 10542.0], [39.4, 10545.0], [39.5, 10549.0], [39.6, 10553.0], [39.7, 10557.0], [39.8, 10561.0], [39.9, 10567.0], [40.0, 10574.0], [40.1, 10578.0], [40.2, 10581.0], [40.3, 10584.0], [40.4, 10587.0], [40.5, 10591.0], [40.6, 10594.0], [40.7, 10597.0], [40.8, 10601.0], [40.9, 10606.0], [41.0, 10609.0], [41.1, 10613.0], [41.2, 10617.0], [41.3, 10620.0], [41.4, 10621.0], [41.5, 10624.0], [41.6, 10626.0], [41.7, 10630.0], [41.8, 10635.0], [41.9, 10639.0], [42.0, 10643.0], [42.1, 10645.0], [42.2, 10650.0], [42.3, 10655.0], [42.4, 10661.0], [42.5, 10664.0], [42.6, 10666.0], [42.7, 10668.0], [42.8, 10676.0], [42.9, 10679.0], [43.0, 10681.0], [43.1, 10685.0], [43.2, 10688.0], [43.3, 10693.0], [43.4, 10696.0], [43.5, 10699.0], [43.6, 10702.0], [43.7, 10705.0], [43.8, 10713.0], [43.9, 10718.0], [44.0, 10720.0], [44.1, 10724.0], [44.2, 10726.0], [44.3, 10729.0], [44.4, 10733.0], [44.5, 10736.0], [44.6, 10739.0], [44.7, 10743.0], [44.8, 10747.0], [44.9, 10750.0], [45.0, 10751.0], [45.1, 10751.0], [45.2, 10752.0], [45.3, 10755.0], [45.4, 10757.0], [45.5, 10759.0], [45.6, 10762.0], [45.7, 10765.0], [45.8, 10769.0], [45.9, 10773.0], [46.0, 10778.0], [46.1, 10781.0], [46.2, 10783.0], [46.3, 10788.0], [46.4, 10791.0], [46.5, 10794.0], [46.6, 10799.0], [46.7, 10804.0], [46.8, 10807.0], [46.9, 10810.0], [47.0, 10813.0], [47.1, 10815.0], [47.2, 10817.0], [47.3, 10819.0], [47.4, 10822.0], [47.5, 10826.0], [47.6, 10830.0], [47.7, 10833.0], [47.8, 10837.0], [47.9, 10841.0], [48.0, 10842.0], [48.1, 10845.0], [48.2, 10849.0], [48.3, 10853.0], [48.4, 10856.0], [48.5, 10858.0], [48.6, 10863.0], [48.7, 10866.0], [48.8, 10870.0], [48.9, 10872.0], [49.0, 10875.0], [49.1, 10878.0], [49.2, 10881.0], [49.3, 10883.0], [49.4, 10885.0], [49.5, 10887.0], [49.6, 10889.0], [49.7, 10892.0], [49.8, 10894.0], [49.9, 10896.0], [50.0, 10897.0], [50.1, 10901.0], [50.2, 10904.0], [50.3, 10906.0], [50.4, 10910.0], [50.5, 10915.0], [50.6, 10916.0], [50.7, 10918.0], [50.8, 10920.0], [50.9, 10923.0], [51.0, 10925.0], [51.1, 10928.0], [51.2, 10930.0], [51.3, 10933.0], [51.4, 10936.0], [51.5, 10940.0], [51.6, 10943.0], [51.7, 10945.0], [51.8, 10949.0], [51.9, 10954.0], [52.0, 10958.0], [52.1, 10962.0], [52.2, 10964.0], [52.3, 10966.0], [52.4, 10969.0], [52.5, 10971.0], [52.6, 10974.0], [52.7, 10977.0], [52.8, 10979.0], [52.9, 10981.0], [53.0, 10985.0], [53.1, 10988.0], [53.2, 10991.0], [53.3, 10994.0], [53.4, 10997.0], [53.5, 11000.0], [53.6, 11004.0], [53.7, 11007.0], [53.8, 11008.0], [53.9, 11008.0], [54.0, 11010.0], [54.1, 11012.0], [54.2, 11014.0], [54.3, 11016.0], [54.4, 11019.0], [54.5, 11021.0], [54.6, 11023.0], [54.7, 11026.0], [54.8, 11030.0], [54.9, 11032.0], [55.0, 11033.0], [55.1, 11036.0], [55.2, 11038.0], [55.3, 11039.0], [55.4, 11041.0], [55.5, 11044.0], [55.6, 11047.0], [55.7, 11050.0], [55.8, 11053.0], [55.9, 11056.0], [56.0, 11057.0], [56.1, 11059.0], [56.2, 11061.0], [56.3, 11064.0], [56.4, 11067.0], [56.5, 11070.0], [56.6, 11072.0], [56.7, 11075.0], [56.8, 11078.0], [56.9, 11081.0], [57.0, 11084.0], [57.1, 11085.0], [57.2, 11088.0], [57.3, 11091.0], [57.4, 11093.0], [57.5, 11094.0], [57.6, 11098.0], [57.7, 11100.0], [57.8, 11101.0], [57.9, 11104.0], [58.0, 11105.0], [58.1, 11107.0], [58.2, 11109.0], [58.3, 11111.0], [58.4, 11113.0], [58.5, 11113.0], [58.6, 11115.0], [58.7, 11118.0], [58.8, 11120.0], [58.9, 11122.0], [59.0, 11124.0], [59.1, 11126.0], [59.2, 11127.0], [59.3, 11129.0], [59.4, 11132.0], [59.5, 11134.0], [59.6, 11135.0], [59.7, 11137.0], [59.8, 11139.0], [59.9, 11140.0], [60.0, 11143.0], [60.1, 11144.0], [60.2, 11147.0], [60.3, 11148.0], [60.4, 11150.0], [60.5, 11154.0], [60.6, 11156.0], [60.7, 11158.0], [60.8, 11160.0], [60.9, 11163.0], [61.0, 11165.0], [61.1, 11166.0], [61.2, 11168.0], [61.3, 11170.0], [61.4, 11172.0], [61.5, 11174.0], [61.6, 11176.0], [61.7, 11177.0], [61.8, 11179.0], [61.9, 11182.0], [62.0, 11183.0], [62.1, 11187.0], [62.2, 11190.0], [62.3, 11192.0], [62.4, 11194.0], [62.5, 11198.0], [62.6, 11200.0], [62.7, 11202.0], [62.8, 11204.0], [62.9, 11206.0], [63.0, 11209.0], [63.1, 11211.0], [63.2, 11213.0], [63.3, 11215.0], [63.4, 11218.0], [63.5, 11220.0], [63.6, 11222.0], [63.7, 11224.0], [63.8, 11229.0], [63.9, 11231.0], [64.0, 11234.0], [64.1, 11237.0], [64.2, 11240.0], [64.3, 11243.0], [64.4, 11245.0], [64.5, 11248.0], [64.6, 11250.0], [64.7, 11252.0], [64.8, 11256.0], [64.9, 11258.0], [65.0, 11261.0], [65.1, 11263.0], [65.2, 11263.0], [65.3, 11264.0], [65.4, 11265.0], [65.5, 11266.0], [65.6, 11268.0], [65.7, 11270.0], [65.8, 11273.0], [65.9, 11276.0], [66.0, 11279.0], [66.1, 11281.0], [66.2, 11285.0], [66.3, 11288.0], [66.4, 11291.0], [66.5, 11294.0], [66.6, 11297.0], [66.7, 11302.0], [66.8, 11305.0], [66.9, 11309.0], [67.0, 11312.0], [67.1, 11318.0], [67.2, 11321.0], [67.3, 11326.0], [67.4, 11329.0], [67.5, 11331.0], [67.6, 11333.0], [67.7, 11336.0], [67.8, 11339.0], [67.9, 11342.0], [68.0, 11347.0], [68.1, 11350.0], [68.2, 11354.0], [68.3, 11356.0], [68.4, 11358.0], [68.5, 11362.0], [68.6, 11365.0], [68.7, 11370.0], [68.8, 11374.0], [68.9, 11379.0], [69.0, 11384.0], [69.1, 11389.0], [69.2, 11394.0], [69.3, 11396.0], [69.4, 11400.0], [69.5, 11403.0], [69.6, 11408.0], [69.7, 11414.0], [69.8, 11417.0], [69.9, 11422.0], [70.0, 11426.0], [70.1, 11429.0], [70.2, 11433.0], [70.3, 11435.0], [70.4, 11438.0], [70.5, 11442.0], [70.6, 11444.0], [70.7, 11447.0], [70.8, 11451.0], [70.9, 11455.0], [71.0, 11458.0], [71.1, 11463.0], [71.2, 11469.0], [71.3, 11471.0], [71.4, 11475.0], [71.5, 11479.0], [71.6, 11482.0], [71.7, 11483.0], [71.8, 11488.0], [71.9, 11492.0], [72.0, 11495.0], [72.1, 11497.0], [72.2, 11499.0], [72.3, 11503.0], [72.4, 11504.0], [72.5, 11507.0], [72.6, 11509.0], [72.7, 11513.0], [72.8, 11518.0], [72.9, 11519.0], [73.0, 11521.0], [73.1, 11526.0], [73.2, 11529.0], [73.3, 11532.0], [73.4, 11535.0], [73.5, 11538.0], [73.6, 11541.0], [73.7, 11544.0], [73.8, 11549.0], [73.9, 11554.0], [74.0, 11558.0], [74.1, 11565.0], [74.2, 11571.0], [74.3, 11578.0], [74.4, 11586.0], [74.5, 11592.0], [74.6, 11599.0], [74.7, 11606.0], [74.8, 11612.0], [74.9, 11619.0], [75.0, 11622.0], [75.1, 11627.0], [75.2, 11634.0], [75.3, 11643.0], [75.4, 11648.0], [75.5, 11655.0], [75.6, 11667.0], [75.7, 11673.0], [75.8, 11678.0], [75.9, 11686.0], [76.0, 11694.0], [76.1, 11701.0], [76.2, 11711.0], [76.3, 11725.0], [76.4, 11737.0], [76.5, 11745.0], [76.6, 11752.0], [76.7, 11759.0], [76.8, 11768.0], [76.9, 11775.0], [77.0, 11775.0], [77.1, 11776.0], [77.2, 11778.0], [77.3, 11789.0], [77.4, 11796.0], [77.5, 11808.0], [77.6, 11822.0], [77.7, 11834.0], [77.8, 11843.0], [77.9, 11851.0], [78.0, 11864.0], [78.1, 11877.0], [78.2, 11886.0], [78.3, 11895.0], [78.4, 11906.0], [78.5, 11921.0], [78.6, 11942.0], [78.7, 11952.0], [78.8, 11966.0], [78.9, 11978.0], [79.0, 11990.0], [79.1, 12002.0], [79.2, 12021.0], [79.3, 12032.0], [79.4, 12043.0], [79.5, 12056.0], [79.6, 12078.0], [79.7, 12094.0], [79.8, 12106.0], [79.9, 12115.0], [80.0, 12135.0], [80.1, 12158.0], [80.2, 12185.0], [80.3, 12203.0], [80.4, 12225.0], [80.5, 12235.0], [80.6, 12247.0], [80.7, 12259.0], [80.8, 12286.0], [80.9, 12288.0], [81.0, 12296.0], [81.1, 12313.0], [81.2, 12326.0], [81.3, 12343.0], [81.4, 12370.0], [81.5, 12402.0], [81.6, 12419.0], [81.7, 12441.0], [81.8, 12455.0], [81.9, 12477.0], [82.0, 12526.0], [82.1, 12544.0], [82.2, 12548.0], [82.3, 12564.0], [82.4, 12577.0], [82.5, 12600.0], [82.6, 12622.0], [82.7, 12643.0], [82.8, 12679.0], [82.9, 12696.0], [83.0, 12715.0], [83.1, 12732.0], [83.2, 12757.0], [83.3, 12773.0], [83.4, 12786.0], [83.5, 12796.0], [83.6, 12799.0], [83.7, 12800.0], [83.8, 12802.0], [83.9, 12829.0], [84.0, 12851.0], [84.1, 12881.0], [84.2, 12916.0], [84.3, 12958.0], [84.4, 13011.0], [84.5, 13035.0], [84.6, 13057.0], [84.7, 13084.0], [84.8, 13124.0], [84.9, 13185.0], [85.0, 13239.0], [85.1, 13280.0], [85.2, 13300.0], [85.3, 13307.0], [85.4, 13308.0], [85.5, 13308.0], [85.6, 13308.0], [85.7, 13310.0], [85.8, 13310.0], [85.9, 13310.0], [86.0, 13310.0], [86.1, 13311.0], [86.2, 13311.0], [86.3, 13311.0], [86.4, 13311.0], [86.5, 13311.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13313.0], [90.5, 13313.0], [90.6, 13313.0], [90.7, 13313.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13313.0], [91.1, 13313.0], [91.2, 13313.0], [91.3, 13314.0], [91.4, 13315.0], [91.5, 13315.0], [91.6, 13315.0], [91.7, 13316.0], [91.8, 13342.0], [91.9, 13351.0], [92.0, 13360.0], [92.1, 13379.0], [92.2, 13415.0], [92.3, 13564.0], [92.4, 13695.0], [92.5, 13820.0], [92.6, 13822.0], [92.7, 13823.0], [92.8, 13823.0], [92.9, 13823.0], [93.0, 13824.0], [93.1, 13824.0], [93.2, 13824.0], [93.3, 13824.0], [93.4, 13825.0], [93.5, 13825.0], [93.6, 13857.0], [93.7, 14068.0], [93.8, 14080.0], [93.9, 14240.0], [94.0, 14332.0], [94.1, 14334.0], [94.2, 14334.0], [94.3, 14335.0], [94.4, 14335.0], [94.5, 14335.0], [94.6, 14335.0], [94.7, 14336.0], [94.8, 14336.0], [94.9, 14336.0], [95.0, 14336.0], [95.1, 14337.0], [95.2, 14385.0], [95.3, 14591.0], [95.4, 14595.0], [95.5, 14786.0], [95.6, 14847.0], [95.7, 14879.0], [95.8, 15060.0], [95.9, 15183.0], [96.0, 15360.0], [96.1, 15386.0], [96.2, 15612.0], [96.3, 15615.0], [96.4, 15845.0], [96.5, 15939.0], [96.6, 16178.0], [96.7, 16384.0], [96.8, 16812.0], [96.9, 17249.0], [97.0, 18176.0], [97.1, 19107.0], [97.2, 19991.0], [97.3, 20429.0], [97.4, 21714.0], [97.5, 22809.0], [97.6, 26368.0], [97.7, 26370.0], [97.8, 26673.0], [97.9, 27903.0], [98.0, 40444.0], [98.1, 53201.0], [98.2, 54744.0], [98.3, 55046.0], [98.4, 55907.0], [98.5, 69066.0], [98.6, 74240.0], [98.7, 78592.0], [98.8, 102403.0], [98.9, 106104.0], [99.0, 106240.0], [99.1, 106766.0], [99.2, 108032.0], [99.3, 113922.0], [99.4, 115199.0], [99.5, 122365.0], [99.6, 127230.0], [99.7, 140542.0], [99.8, 140545.0], [99.9, 154879.0], [100.0, 214529.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 4.0], [7.1, 6.0], [7.2, 25.0], [7.3, 27.0], [7.4, 29.0], [7.5, 30.0], [7.6, 33.0], [7.7, 35.0], [7.8, 37.0], [7.9, 39.0], [8.0, 48.0], [8.1, 88.0], [8.2, 165.0], [8.3, 346.0], [8.4, 565.0], [8.5, 790.0], [8.6, 837.0], [8.7, 877.0], [8.8, 1227.0], [8.9, 1316.0], [9.0, 1451.0], [9.1, 1507.0], [9.2, 1696.0], [9.3, 1766.0], [9.4, 1853.0], [9.5, 1902.0], [9.6, 1957.0], [9.7, 2229.0], [9.8, 2369.0], [9.9, 2600.0], [10.0, 3059.0], [10.1, 3164.0], [10.2, 3200.0], [10.3, 3255.0], [10.4, 3306.0], [10.5, 3487.0], [10.6, 3795.0], [10.7, 3842.0], [10.8, 4311.0], [10.9, 4478.0], [11.0, 4729.0], [11.1, 4806.0], [11.2, 4921.0], [11.3, 4943.0], [11.4, 5111.0], [11.5, 5256.0], [11.6, 5330.0], [11.7, 5543.0], [11.8, 5587.0], [11.9, 5863.0], [12.0, 5983.0], [12.1, 6046.0], [12.2, 6150.0], [12.3, 6171.0], [12.4, 6258.0], [12.5, 6312.0], [12.6, 6370.0], [12.7, 6517.0], [12.8, 6641.0], [12.9, 6736.0], [13.0, 6863.0], [13.1, 6896.0], [13.2, 7062.0], [13.3, 7089.0], [13.4, 7126.0], [13.5, 7163.0], [13.6, 7165.0], [13.7, 7166.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7169.0], [15.8, 7169.0], [15.9, 7169.0], [16.0, 7169.0], [16.1, 7171.0], [16.2, 7172.0], [16.3, 7172.0], [16.4, 7181.0], [16.5, 7214.0], [16.6, 7230.0], [16.7, 7256.0], [16.8, 7287.0], [16.9, 7297.0], [17.0, 7322.0], [17.1, 7407.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7425.0], [18.5, 7425.0], [18.6, 7425.0], [18.7, 7425.0], [18.8, 7426.0], [18.9, 7426.0], [19.0, 7462.0], [19.1, 7574.0], [19.2, 7593.0], [19.3, 7678.0], [19.4, 7679.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7680.0], [19.8, 7681.0], [19.9, 7716.0], [20.0, 7780.0], [20.1, 7804.0], [20.2, 7877.0], [20.3, 7889.0], [20.4, 7927.0], [20.5, 7932.0], [20.6, 7933.0], [20.7, 7933.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7937.0], [22.5, 7938.0], [22.6, 7990.0], [22.7, 8072.0], [22.8, 8105.0], [22.9, 8139.0], [23.0, 8152.0], [23.1, 8161.0], [23.2, 8168.0], [23.3, 8187.0], [23.4, 8190.0], [23.5, 8191.0], [23.6, 8191.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8193.0], [24.4, 8193.0], [24.5, 8194.0], [24.6, 8196.0], [24.7, 8196.0], [24.8, 8247.0], [24.9, 8291.0], [25.0, 8324.0], [25.1, 8334.0], [25.2, 8346.0], [25.3, 8356.0], [25.4, 8384.0], [25.5, 8429.0], [25.6, 8446.0], [25.7, 8446.0], [25.8, 8447.0], [25.9, 8447.0], [26.0, 8447.0], [26.1, 8448.0], [26.2, 8448.0], [26.3, 8449.0], [26.4, 8451.0], [26.5, 8473.0], [26.6, 8531.0], [26.7, 8572.0], [26.8, 8618.0], [26.9, 8646.0], [27.0, 8670.0], [27.1, 8678.0], [27.2, 8698.0], [27.3, 8700.0], [27.4, 8702.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8703.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8705.0], [29.5, 8705.0], [29.6, 8705.0], [29.7, 8705.0], [29.8, 8705.0], [29.9, 8707.0], [30.0, 8741.0], [30.1, 8777.0], [30.2, 8805.0], [30.3, 8947.0], [30.4, 8959.0], [30.5, 8959.0], [30.6, 8960.0], [30.7, 8960.0], [30.8, 8984.0], [30.9, 9010.0], [31.0, 9037.0], [31.1, 9085.0], [31.2, 9087.0], [31.3, 9135.0], [31.4, 9156.0], [31.5, 9187.0], [31.6, 9212.0], [31.7, 9212.0], [31.8, 9213.0], [31.9, 9213.0], [32.0, 9214.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9215.0], [32.7, 9215.0], [32.8, 9215.0], [32.9, 9215.0], [33.0, 9215.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9217.0], [33.9, 9218.0], [34.0, 9219.0], [34.1, 9219.0], [34.2, 9230.0], [34.3, 9253.0], [34.4, 9263.0], [34.5, 9305.0], [34.6, 9382.0], [34.7, 9401.0], [34.8, 9404.0], [34.9, 9445.0], [35.0, 9471.0], [35.1, 9471.0], [35.2, 9471.0], [35.3, 9472.0], [35.4, 9472.0], [35.5, 9476.0], [35.6, 9481.0], [35.7, 9484.0], [35.8, 9519.0], [35.9, 9545.0], [36.0, 9552.0], [36.1, 9582.0], [36.2, 9588.0], [36.3, 9592.0], [36.4, 9611.0], [36.5, 9625.0], [36.6, 9635.0], [36.7, 9642.0], [36.8, 9668.0], [36.9, 9694.0], [37.0, 9720.0], [37.1, 9726.0], [37.2, 9727.0], [37.3, 9727.0], [37.4, 9727.0], [37.5, 9727.0], [37.6, 9727.0], [37.7, 9728.0], [37.8, 9728.0], [37.9, 9728.0], [38.0, 9728.0], [38.1, 9729.0], [38.2, 9731.0], [38.3, 9739.0], [38.4, 9750.0], [38.5, 9786.0], [38.6, 9811.0], [38.7, 9813.0], [38.8, 9830.0], [38.9, 9857.0], [39.0, 9886.0], [39.1, 9905.0], [39.2, 9919.0], [39.3, 9971.0], [39.4, 9980.0], [39.5, 9983.0], [39.6, 9983.0], [39.7, 9984.0], [39.8, 9984.0], [39.9, 9984.0], [40.0, 9984.0], [40.1, 9984.0], [40.2, 9984.0], [40.3, 9984.0], [40.4, 9985.0], [40.5, 9987.0], [40.6, 9996.0], [40.7, 10000.0], [40.8, 10019.0], [40.9, 10051.0], [41.0, 10071.0], [41.1, 10089.0], [41.2, 10120.0], [41.3, 10140.0], [41.4, 10157.0], [41.5, 10200.0], [41.6, 10216.0], [41.7, 10231.0], [41.8, 10236.0], [41.9, 10238.0], [42.0, 10239.0], [42.1, 10239.0], [42.2, 10239.0], [42.3, 10239.0], [42.4, 10240.0], [42.5, 10240.0], [42.6, 10240.0], [42.7, 10240.0], [42.8, 10240.0], [42.9, 10240.0], [43.0, 10240.0], [43.1, 10285.0], [43.2, 10295.0], [43.3, 10329.0], [43.4, 10333.0], [43.5, 10344.0], [43.6, 10363.0], [43.7, 10378.0], [43.8, 10441.0], [43.9, 10457.0], [44.0, 10490.0], [44.1, 10491.0], [44.2, 10496.0], [44.3, 10496.0], [44.4, 10497.0], [44.5, 10497.0], [44.6, 10511.0], [44.7, 10577.0], [44.8, 10608.0], [44.9, 10672.0], [45.0, 10687.0], [45.1, 10735.0], [45.2, 10751.0], [45.3, 10751.0], [45.4, 10751.0], [45.5, 10751.0], [45.6, 10751.0], [45.7, 10752.0], [45.8, 10752.0], [45.9, 10752.0], [46.0, 10758.0], [46.1, 10763.0], [46.2, 10779.0], [46.3, 10815.0], [46.4, 10817.0], [46.5, 10853.0], [46.6, 10862.0], [46.7, 10914.0], [46.8, 10946.0], [46.9, 10999.0], [47.0, 11003.0], [47.1, 11007.0], [47.2, 11007.0], [47.3, 11008.0], [47.4, 11008.0], [47.5, 11008.0], [47.6, 11009.0], [47.7, 11050.0], [47.8, 11077.0], [47.9, 11100.0], [48.0, 11178.0], [48.1, 11260.0], [48.2, 11262.0], [48.3, 11263.0], [48.4, 11263.0], [48.5, 11263.0], [48.6, 11263.0], [48.7, 11264.0], [48.8, 11264.0], [48.9, 11264.0], [49.0, 11283.0], [49.1, 11364.0], [49.2, 11368.0], [49.3, 11401.0], [49.4, 11424.0], [49.5, 11456.0], [49.6, 11543.0], [49.7, 11697.0], [49.8, 11725.0], [49.9, 11774.0], [50.0, 11775.0], [50.1, 11775.0], [50.2, 11776.0], [50.3, 11776.0], [50.4, 11777.0], [50.5, 11779.0], [50.6, 11780.0], [50.7, 11831.0], [50.8, 11861.0], [50.9, 11932.0], [51.0, 11974.0], [51.1, 12032.0], [51.2, 12032.0], [51.3, 12055.0], [51.4, 12075.0], [51.5, 12122.0], [51.6, 12206.0], [51.7, 12286.0], [51.8, 12286.0], [51.9, 12287.0], [52.0, 12287.0], [52.1, 12287.0], [52.2, 12287.0], [52.3, 12288.0], [52.4, 12288.0], [52.5, 12395.0], [52.6, 12524.0], [52.7, 12543.0], [52.8, 12544.0], [52.9, 12715.0], [53.0, 12781.0], [53.1, 12796.0], [53.2, 12797.0], [53.3, 12799.0], [53.4, 12799.0], [53.5, 12800.0], [53.6, 12800.0], [53.7, 12851.0], [53.8, 13055.0], [53.9, 13059.0], [54.0, 13120.0], [54.1, 13163.0], [54.2, 13165.0], [54.3, 13176.0], [54.4, 13187.0], [54.5, 13194.0], [54.6, 13200.0], [54.7, 13215.0], [54.8, 13222.0], [54.9, 13225.0], [55.0, 13228.0], [55.1, 13230.0], [55.2, 13245.0], [55.3, 13248.0], [55.4, 13254.0], [55.5, 13257.0], [55.6, 13260.0], [55.7, 13271.0], [55.8, 13276.0], [55.9, 13277.0], [56.0, 13288.0], [56.1, 13290.0], [56.2, 13297.0], [56.3, 13300.0], [56.4, 13304.0], [56.5, 13307.0], [56.6, 13307.0], [56.7, 13308.0], [56.8, 13308.0], [56.9, 13308.0], [57.0, 13308.0], [57.1, 13308.0], [57.2, 13309.0], [57.3, 13309.0], [57.4, 13309.0], [57.5, 13309.0], [57.6, 13309.0], [57.7, 13309.0], [57.8, 13310.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13310.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13313.0], [73.9, 13313.0], [74.0, 13313.0], [74.1, 13313.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13313.0], [75.2, 13313.0], [75.3, 13314.0], [75.4, 13314.0], [75.5, 13314.0], [75.6, 13314.0], [75.7, 13314.0], [75.8, 13314.0], [75.9, 13315.0], [76.0, 13315.0], [76.1, 13316.0], [76.2, 13316.0], [76.3, 13316.0], [76.4, 13316.0], [76.5, 13318.0], [76.6, 13320.0], [76.7, 13325.0], [76.8, 13334.0], [76.9, 13338.0], [77.0, 13343.0], [77.1, 13356.0], [77.2, 13358.0], [77.3, 13361.0], [77.4, 13368.0], [77.5, 13373.0], [77.6, 13378.0], [77.7, 13388.0], [77.8, 13392.0], [77.9, 13400.0], [78.0, 13415.0], [78.1, 13450.0], [78.2, 13455.0], [78.3, 13462.0], [78.4, 13514.0], [78.5, 13566.0], [78.6, 13569.0], [78.7, 13613.0], [78.8, 13701.0], [78.9, 13709.0], [79.0, 13733.0], [79.1, 13763.0], [79.2, 13807.0], [79.3, 13820.0], [79.4, 13821.0], [79.5, 13822.0], [79.6, 13823.0], [79.7, 13823.0], [79.8, 13823.0], [79.9, 13823.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13823.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13825.0], [81.6, 13825.0], [81.7, 13825.0], [81.8, 13825.0], [81.9, 13825.0], [82.0, 13826.0], [82.1, 13826.0], [82.2, 13826.0], [82.3, 13826.0], [82.4, 13829.0], [82.5, 13831.0], [82.6, 13836.0], [82.7, 13839.0], [82.8, 13892.0], [82.9, 13953.0], [83.0, 14058.0], [83.1, 14079.0], [83.2, 14080.0], [83.3, 14080.0], [83.4, 14082.0], [83.5, 14192.0], [83.6, 14242.0], [83.7, 14330.0], [83.8, 14334.0], [83.9, 14334.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14337.0], [86.2, 14337.0], [86.3, 14337.0], [86.4, 14341.0], [86.5, 14509.0], [86.6, 14592.0], [86.7, 14592.0], [86.8, 14597.0], [86.9, 14775.0], [87.0, 14846.0], [87.1, 15147.0], [87.2, 15176.0], [87.3, 15358.0], [87.4, 15411.0], [87.5, 15615.0], [87.6, 15615.0], [87.7, 15616.0], [87.8, 15704.0], [87.9, 15871.0], [88.0, 16063.0], [88.1, 16127.0], [88.2, 16382.0], [88.3, 16383.0], [88.4, 16384.0], [88.5, 16401.0], [88.6, 16585.0], [88.7, 16878.0], [88.8, 17152.0], [88.9, 17239.0], [89.0, 17327.0], [89.1, 17530.0], [89.2, 17663.0], [89.3, 17919.0], [89.4, 18057.0], [89.5, 18342.0], [89.6, 18431.0], [89.7, 18432.0], [89.8, 18572.0], [89.9, 19088.0], [90.0, 19239.0], [90.1, 19281.0], [90.2, 19967.0], [90.3, 19969.0], [90.4, 20480.0], [90.5, 23551.0], [90.6, 24654.0], [90.7, 26342.0], [90.8, 26366.0], [90.9, 26368.0], [91.0, 26466.0], [91.1, 26624.0], [91.2, 26625.0], [91.3, 26881.0], [91.4, 26881.0], [91.5, 27392.0], [91.6, 27692.0], [91.7, 28363.0], [91.8, 33225.0], [91.9, 40787.0], [92.0, 42752.0], [92.1, 45568.0], [92.2, 52625.0], [92.3, 53283.0], [92.4, 53607.0], [92.5, 53965.0], [92.6, 53982.0], [92.7, 54184.0], [92.8, 54239.0], [92.9, 54512.0], [93.0, 54517.0], [93.1, 54571.0], [93.2, 54652.0], [93.3, 54810.0], [93.4, 54828.0], [93.5, 55650.0], [93.6, 58774.0], [93.7, 63958.0], [93.8, 70399.0], [93.9, 72704.0], [94.0, 74240.0], [94.1, 75264.0], [94.2, 75786.0], [94.3, 76282.0], [94.4, 78592.0], [94.5, 91365.0], [94.6, 96512.0], [94.7, 102400.0], [94.8, 102403.0], [94.9, 105375.0], [95.0, 105646.0], [95.1, 105691.0], [95.2, 105745.0], [95.3, 105836.0], [95.4, 105925.0], [95.5, 105987.0], [95.6, 106117.0], [95.7, 106213.0], [95.8, 106239.0], [95.9, 106239.0], [96.0, 106240.0], [96.1, 106240.0], [96.2, 106241.0], [96.3, 106497.0], [96.4, 106684.0], [96.5, 106732.0], [96.6, 106802.0], [96.7, 106837.0], [96.8, 106885.0], [96.9, 106929.0], [97.0, 107018.0], [97.1, 107076.0], [97.2, 107112.0], [97.3, 107256.0], [97.4, 107344.0], [97.5, 110355.0], [97.6, 110590.0], [97.7, 110956.0], [97.8, 110974.0], [97.9, 112985.0], [98.0, 114174.0], [98.1, 114875.0], [98.2, 115727.0], [98.3, 119294.0], [98.4, 119296.0], [98.5, 122368.0], [98.6, 124414.0], [98.7, 125897.0], [98.8, 127232.0], [98.9, 132864.0], [99.0, 140543.0], [99.1, 140544.0], [99.2, 144926.0], [99.3, 147967.0], [99.4, 149505.0], [99.5, 164863.0], [99.6, 197632.0], [99.7, 211458.0], [99.8, 211712.0], [99.9, 214528.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 687.0, "series": [{"data": [[0.0, 135.0], [197600.0, 2.0], [214500.0, 4.0], [105900.0, 5.0], [106700.0, 1.0], [139500.0, 1.0], [52900.0, 1.0], [51300.0, 1.0], [53700.0, 3.0], [54500.0, 2.0], [53300.0, 1.0], [54900.0, 1.0], [67400.0, 1.0], [300.0, 1.0], [500.0, 1.0], [600.0, 2.0], [700.0, 6.0], [900.0, 1.0], [1200.0, 2.0], [1300.0, 8.0], [1400.0, 1.0], [1600.0, 1.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 4.0], [2100.0, 2.0], [2200.0, 1.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 3.0], [3200.0, 2.0], [211700.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 4.0], [4000.0, 4.0], [4100.0, 1.0], [4400.0, 2.0], [78500.0, 4.0], [5200.0, 1.0], [5500.0, 3.0], [5600.0, 2.0], [5800.0, 2.0], [5700.0, 2.0], [5900.0, 1.0], [6100.0, 3.0], [6000.0, 2.0], [6300.0, 4.0], [6600.0, 2.0], [6700.0, 3.0], [6800.0, 3.0], [6900.0, 2.0], [7100.0, 84.0], [7300.0, 3.0], [7400.0, 29.0], [7500.0, 6.0], [7600.0, 21.0], [7900.0, 57.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 44.0], [8600.0, 5.0], [8400.0, 23.0], [8500.0, 1.0], [8700.0, 47.0], [8900.0, 24.0], [9100.0, 4.0], [8800.0, 4.0], [9200.0, 47.0], [9000.0, 2.0], [9600.0, 9.0], [9400.0, 13.0], [9500.0, 8.0], [9700.0, 35.0], [9300.0, 4.0], [9800.0, 13.0], [10200.0, 33.0], [10100.0, 8.0], [10000.0, 7.0], [9900.0, 30.0], [10400.0, 23.0], [10700.0, 34.0], [10500.0, 12.0], [10300.0, 13.0], [10600.0, 11.0], [10900.0, 13.0], [11100.0, 7.0], [11000.0, 31.0], [11200.0, 27.0], [10800.0, 10.0], [11400.0, 5.0], [11300.0, 8.0], [11500.0, 10.0], [11700.0, 19.0], [12000.0, 4.0], [12200.0, 11.0], [12100.0, 2.0], [11900.0, 1.0], [11800.0, 1.0], [12700.0, 19.0], [12600.0, 1.0], [12400.0, 1.0], [12500.0, 2.0], [13300.0, 389.0], [12800.0, 7.0], [13200.0, 1.0], [13000.0, 8.0], [13100.0, 2.0], [13800.0, 75.0], [13400.0, 2.0], [13500.0, 3.0], [13600.0, 1.0], [14300.0, 64.0], [14000.0, 6.0], [14100.0, 3.0], [14500.0, 12.0], [14800.0, 9.0], [15300.0, 4.0], [15200.0, 1.0], [15100.0, 1.0], [14900.0, 2.0], [15800.0, 3.0], [15600.0, 6.0], [16300.0, 6.0], [16100.0, 3.0], [16200.0, 2.0], [17400.0, 1.0], [17200.0, 2.0], [18400.0, 3.0], [17600.0, 1.0], [17800.0, 1.0], [19200.0, 2.0], [20400.0, 2.0], [21200.0, 1.0], [21600.0, 1.0], [24000.0, 1.0], [26600.0, 1.0], [26800.0, 1.0], [28400.0, 1.0], [147900.0, 1.0], [149500.0, 5.0], [53200.0, 2.0], [54800.0, 4.0], [54400.0, 2.0], [75200.0, 2.0], [76000.0, 1.0], [106400.0, 6.0], [108800.0, 1.0], [108000.0, 2.0], [112800.0, 1.0], [127200.0, 3.0], [132800.0, 1.0], [164800.0, 3.0], [67900.0, 1.0], [78300.0, 1.0], [108700.0, 2.0], [110300.0, 1.0], [115900.0, 1.0], [115100.0, 1.0], [122300.0, 2.0], [211400.0, 2.0], [42700.0, 1.0], [45500.0, 4.0], [49900.0, 1.0], [52700.0, 1.0], [53900.0, 1.0], [54700.0, 2.0], [106200.0, 7.0], [118200.0, 1.0], [140500.0, 3.0], [114100.0, 1.0], [114900.0, 3.0], [17100.0, 4.0], [16700.0, 1.0], [17300.0, 4.0], [17900.0, 6.0], [19100.0, 1.0], [18900.0, 7.0], [19900.0, 3.0], [19500.0, 1.0], [20500.0, 1.0], [22700.0, 1.0], [26300.0, 12.0], [27300.0, 1.0], [27900.0, 5.0], [28300.0, 1.0], [148700.0, 1.0], [54600.0, 1.0], [53800.0, 1.0], [55800.0, 3.0], [65000.0, 1.0], [124400.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 320.0], [154400.0, 1.0], [197600.0, 3.0], [214500.0, 2.0], [69100.0, 1.0], [105900.0, 3.0], [106700.0, 5.0], [107500.0, 1.0], [109900.0, 1.0], [113900.0, 3.0], [139500.0, 2.0], [38100.0, 1.0], [40500.0, 1.0], [54900.0, 4.0], [54500.0, 2.0], [58500.0, 1.0], [60100.0, 1.0], [69000.0, 1.0], [73000.0, 1.0], [77000.0, 1.0], [76200.0, 3.0], [105800.0, 1.0], [106600.0, 1.0], [114600.0, 1.0], [154800.0, 2.0], [1100.0, 34.0], [1200.0, 77.0], [1300.0, 20.0], [1400.0, 17.0], [1500.0, 23.0], [1600.0, 27.0], [1700.0, 17.0], [1800.0, 11.0], [1900.0, 12.0], [2000.0, 9.0], [2100.0, 13.0], [2200.0, 8.0], [2300.0, 10.0], [2400.0, 30.0], [2500.0, 28.0], [2600.0, 22.0], [2700.0, 26.0], [2800.0, 21.0], [2900.0, 31.0], [3000.0, 28.0], [3100.0, 21.0], [3200.0, 9.0], [3300.0, 16.0], [3400.0, 24.0], [3500.0, 10.0], [3700.0, 9.0], [3600.0, 9.0], [3800.0, 6.0], [3900.0, 5.0], [4000.0, 7.0], [4300.0, 30.0], [4100.0, 7.0], [4200.0, 19.0], [4500.0, 24.0], [4600.0, 17.0], [4400.0, 35.0], [4700.0, 21.0], [4800.0, 6.0], [4900.0, 10.0], [5000.0, 7.0], [5100.0, 7.0], [78500.0, 1.0], [5300.0, 4.0], [5200.0, 4.0], [85700.0, 1.0], [5400.0, 7.0], [5500.0, 2.0], [5600.0, 9.0], [5700.0, 14.0], [5800.0, 7.0], [92900.0, 1.0], [6100.0, 33.0], [5900.0, 14.0], [6000.0, 31.0], [6200.0, 26.0], [6300.0, 19.0], [98500.0, 2.0], [6400.0, 23.0], [6500.0, 15.0], [6600.0, 6.0], [105700.0, 2.0], [6800.0, 12.0], [6700.0, 10.0], [6900.0, 6.0], [110500.0, 3.0], [107300.0, 1.0], [7100.0, 142.0], [7000.0, 16.0], [112100.0, 1.0], [7200.0, 31.0], [7300.0, 34.0], [7400.0, 124.0], [7500.0, 32.0], [7600.0, 65.0], [7800.0, 26.0], [7700.0, 24.0], [7900.0, 95.0], [124900.0, 1.0], [8000.0, 27.0], [8100.0, 69.0], [8400.0, 47.0], [8300.0, 8.0], [8200.0, 8.0], [8500.0, 4.0], [8700.0, 86.0], [8600.0, 18.0], [9200.0, 62.0], [8800.0, 11.0], [9100.0, 10.0], [9000.0, 9.0], [8900.0, 35.0], [9400.0, 67.0], [9300.0, 36.0], [9500.0, 62.0], [9600.0, 49.0], [9700.0, 153.0], [10200.0, 198.0], [10000.0, 98.0], [9800.0, 94.0], [10100.0, 115.0], [9900.0, 158.0], [10300.0, 221.0], [10700.0, 307.0], [10400.0, 243.0], [10500.0, 241.0], [10600.0, 276.0], [10800.0, 344.0], [11000.0, 415.0], [10900.0, 340.0], [11100.0, 486.0], [11200.0, 404.0], [11400.0, 283.0], [11300.0, 272.0], [11500.0, 237.0], [11600.0, 144.0], [11700.0, 137.0], [12100.0, 52.0], [12000.0, 66.0], [11800.0, 89.0], [11900.0, 74.0], [12200.0, 73.0], [12700.0, 76.0], [12600.0, 43.0], [12300.0, 46.0], [12400.0, 46.0], [12500.0, 54.0], [13000.0, 37.0], [12800.0, 46.0], [12900.0, 21.0], [13100.0, 20.0], [13200.0, 25.0], [13300.0, 687.0], [13400.0, 14.0], [13800.0, 117.0], [13700.0, 5.0], [13500.0, 12.0], [13600.0, 4.0], [13900.0, 3.0], [14300.0, 126.0], [14000.0, 21.0], [14100.0, 1.0], [14200.0, 4.0], [14700.0, 6.0], [14800.0, 19.0], [14500.0, 18.0], [14400.0, 3.0], [14600.0, 5.0], [15000.0, 3.0], [15100.0, 9.0], [15300.0, 14.0], [15200.0, 4.0], [14900.0, 8.0], [15400.0, 5.0], [15700.0, 2.0], [15600.0, 18.0], [15500.0, 3.0], [15800.0, 8.0], [15900.0, 4.0], [16200.0, 3.0], [16100.0, 9.0], [16300.0, 10.0], [16000.0, 1.0], [17000.0, 4.0], [16400.0, 5.0], [17200.0, 2.0], [16800.0, 3.0], [17800.0, 1.0], [18400.0, 5.0], [17600.0, 4.0], [19200.0, 1.0], [20400.0, 4.0], [20200.0, 4.0], [21200.0, 1.0], [21600.0, 2.0], [21800.0, 1.0], [22000.0, 1.0], [22200.0, 1.0], [22400.0, 1.0], [22800.0, 3.0], [26400.0, 2.0], [26200.0, 1.0], [26600.0, 7.0], [26800.0, 3.0], [27600.0, 1.0], [29400.0, 1.0], [31000.0, 1.0], [147900.0, 1.0], [149500.0, 2.0], [40800.0, 1.0], [40400.0, 1.0], [48800.0, 1.0], [53200.0, 1.0], [52800.0, 1.0], [54000.0, 2.0], [54800.0, 2.0], [55200.0, 2.0], [54400.0, 2.0], [53600.0, 1.0], [56000.0, 1.0], [55600.0, 2.0], [58000.0, 1.0], [75200.0, 3.0], [76000.0, 1.0], [106400.0, 3.0], [102400.0, 4.0], [107200.0, 2.0], [110400.0, 1.0], [108000.0, 5.0], [115200.0, 2.0], [119200.0, 4.0], [127200.0, 4.0], [132800.0, 4.0], [164800.0, 3.0], [72700.0, 4.0], [70300.0, 2.0], [71900.0, 1.0], [102300.0, 2.0], [105500.0, 1.0], [107100.0, 1.0], [115100.0, 2.0], [122300.0, 4.0], [40300.0, 1.0], [45500.0, 5.0], [54700.0, 5.0], [53900.0, 1.0], [55100.0, 1.0], [55900.0, 4.0], [74200.0, 1.0], [106200.0, 11.0], [107000.0, 1.0], [118200.0, 1.0], [140500.0, 12.0], [96500.0, 1.0], [106100.0, 1.0], [114100.0, 2.0], [114900.0, 3.0], [122900.0, 1.0], [17100.0, 3.0], [16700.0, 1.0], [18100.0, 1.0], [17900.0, 2.0], [17500.0, 1.0], [18300.0, 2.0], [19100.0, 3.0], [18500.0, 1.0], [19500.0, 1.0], [19700.0, 1.0], [19900.0, 6.0], [20300.0, 2.0], [20500.0, 2.0], [21100.0, 1.0], [21500.0, 1.0], [21700.0, 6.0], [22100.0, 1.0], [23500.0, 1.0], [26100.0, 1.0], [26300.0, 16.0], [26700.0, 2.0], [27300.0, 1.0], [27900.0, 3.0], [29500.0, 3.0], [32100.0, 1.0], [148700.0, 3.0], [39400.0, 1.0], [183900.0, 1.0], [55000.0, 1.0], [55400.0, 2.0], [55800.0, 1.0], [64200.0, 1.0], [68400.0, 2.0], [106000.0, 1.0], [106800.0, 1.0], [114000.0, 2.0], [118800.0, 1.0], [124400.0, 4.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 157.0], [197600.0, 2.0], [147300.0, 1.0], [214500.0, 3.0], [105900.0, 3.0], [106700.0, 3.0], [100.0, 2.0], [200.0, 1.0], [54100.0, 1.0], [54500.0, 5.0], [60500.0, 1.0], [300.0, 2.0], [76200.0, 2.0], [105800.0, 3.0], [106600.0, 2.0], [107400.0, 1.0], [114600.0, 1.0], [125800.0, 1.0], [500.0, 2.0], [127400.0, 1.0], [700.0, 1.0], [800.0, 3.0], [1000.0, 1.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 3.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 3.0], [2100.0, 1.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 3.0], [3200.0, 3.0], [211700.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [4000.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4500.0, 1.0], [73700.0, 1.0], [4800.0, 2.0], [4700.0, 2.0], [4900.0, 3.0], [5100.0, 3.0], [78500.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 3.0], [5400.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [91300.0, 1.0], [6100.0, 4.0], [5900.0, 3.0], [6000.0, 1.0], [6300.0, 3.0], [6200.0, 3.0], [6500.0, 2.0], [6400.0, 1.0], [6600.0, 1.0], [105700.0, 2.0], [6700.0, 2.0], [6800.0, 3.0], [6900.0, 1.0], [107300.0, 2.0], [110500.0, 2.0], [7100.0, 61.0], [7000.0, 3.0], [112900.0, 1.0], [7200.0, 9.0], [7400.0, 38.0], [7300.0, 3.0], [7500.0, 3.0], [7600.0, 13.0], [7700.0, 4.0], [7900.0, 45.0], [7800.0, 4.0], [124900.0, 1.0], [8100.0, 38.0], [8000.0, 3.0], [8200.0, 3.0], [8300.0, 10.0], [8500.0, 4.0], [8700.0, 56.0], [8400.0, 22.0], [8600.0, 10.0], [8900.0, 12.0], [9000.0, 7.0], [9100.0, 7.0], [9200.0, 56.0], [8800.0, 1.0], [9300.0, 4.0], [9600.0, 12.0], [9700.0, 32.0], [9500.0, 11.0], [9400.0, 20.0], [9800.0, 10.0], [10000.0, 10.0], [10200.0, 34.0], [10100.0, 6.0], [9900.0, 30.0], [10300.0, 9.0], [10400.0, 16.0], [10500.0, 5.0], [10600.0, 4.0], [10700.0, 24.0], [10800.0, 8.0], [11000.0, 18.0], [11100.0, 4.0], [11200.0, 19.0], [10900.0, 5.0], [11400.0, 5.0], [11300.0, 4.0], [11700.0, 19.0], [11500.0, 2.0], [11600.0, 2.0], [12000.0, 9.0], [11800.0, 2.0], [11900.0, 4.0], [12200.0, 17.0], [12100.0, 2.0], [12700.0, 11.0], [12300.0, 1.0], [12500.0, 6.0], [12400.0, 1.0], [13200.0, 32.0], [13300.0, 418.0], [13100.0, 12.0], [12800.0, 5.0], [13000.0, 5.0], [13700.0, 7.0], [13600.0, 3.0], [13800.0, 71.0], [13400.0, 9.0], [13500.0, 5.0], [14000.0, 9.0], [14300.0, 53.0], [14100.0, 3.0], [13900.0, 3.0], [14200.0, 2.0], [14500.0, 7.0], [14400.0, 1.0], [14800.0, 2.0], [14700.0, 2.0], [15100.0, 3.0], [15300.0, 2.0], [15200.0, 1.0], [15400.0, 1.0], [15800.0, 3.0], [15700.0, 1.0], [15500.0, 1.0], [15600.0, 6.0], [16300.0, 6.0], [16100.0, 1.0], [16000.0, 2.0], [16400.0, 1.0], [16800.0, 1.0], [17200.0, 2.0], [18000.0, 1.0], [17600.0, 2.0], [18400.0, 5.0], [19200.0, 4.0], [19000.0, 1.0], [20400.0, 1.0], [19800.0, 1.0], [23200.0, 1.0], [24600.0, 1.0], [26200.0, 1.0], [26400.0, 1.0], [26600.0, 5.0], [27400.0, 1.0], [27600.0, 1.0], [26800.0, 2.0], [27800.0, 1.0], [33200.0, 1.0], [147900.0, 1.0], [149500.0, 3.0], [53200.0, 2.0], [53600.0, 1.0], [54800.0, 4.0], [55600.0, 1.0], [75200.0, 2.0], [101600.0, 1.0], [105600.0, 3.0], [106400.0, 1.0], [102400.0, 3.0], [107200.0, 2.0], [119200.0, 4.0], [127200.0, 2.0], [132800.0, 1.0], [164800.0, 1.0], [144900.0, 1.0], [71900.0, 1.0], [72700.0, 1.0], [70300.0, 1.0], [107100.0, 1.0], [110300.0, 1.0], [112700.0, 1.0], [122300.0, 1.0], [211400.0, 2.0], [40700.0, 1.0], [42700.0, 1.0], [45500.0, 2.0], [49900.0, 1.0], [53900.0, 5.0], [54700.0, 1.0], [58700.0, 1.0], [63900.0, 1.0], [67800.0, 1.0], [74200.0, 2.0], [106200.0, 12.0], [105400.0, 1.0], [107000.0, 4.0], [118200.0, 1.0], [211600.0, 1.0], [140500.0, 5.0], [75700.0, 1.0], [79700.0, 1.0], [96500.0, 2.0], [106100.0, 2.0], [104500.0, 1.0], [105300.0, 1.0], [106900.0, 2.0], [114100.0, 1.0], [110900.0, 4.0], [114900.0, 1.0], [115700.0, 1.0], [16500.0, 2.0], [17100.0, 3.0], [16700.0, 1.0], [17300.0, 2.0], [18100.0, 1.0], [18300.0, 1.0], [17900.0, 2.0], [17500.0, 2.0], [18500.0, 1.0], [20300.0, 1.0], [19900.0, 3.0], [23500.0, 1.0], [24100.0, 1.0], [26300.0, 6.0], [27300.0, 2.0], [28300.0, 1.0], [32300.0, 1.0], [36200.0, 1.0], [41400.0, 1.0], [52600.0, 1.0], [53400.0, 1.0], [54600.0, 2.0], [54200.0, 2.0], [55800.0, 1.0], [106800.0, 5.0], [114000.0, 1.0], [114800.0, 1.0], [124400.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 214500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7885.0, "series": [{"data": [[1.0, 182.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5608.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 23.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7885.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.800000000000001, "minX": 1.53938958E12, "maxY": 498.4173187271771, "series": [{"data": [[1.5393897E12, 97.4], [1.53939018E12, 490.99943788645294], [1.53939E12, 396.5294450736127], [1.53938958E12, 4.800000000000001], [1.53939006E12, 456.2865200225609], [1.53938988E12, 279.6326707000866], [1.53938994E12, 336.7998875772903], [1.53938976E12, 156.38882138517621], [1.53939024E12, 160.60188087774276], [1.53938982E12, 217.43979057591613], [1.53938964E12, 38.09925558312652], [1.53939012E12, 498.4173187271771]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 148736.0, "series": [{"data": [[3.0, 1029.0], [4.0, 148736.0], [5.0, 1010.5], [6.0, 3138.0], [8.0, 1347.0], [9.0, 1335.0], [10.0, 1031.5], [11.0, 724.0], [12.0, 575.0], [14.0, 1332.0], [15.0, 1313.0], [16.0, 62718.75], [18.0, 988.5], [19.0, 784.0], [20.0, 347.0], [22.0, 1672.5], [23.0, 969.0], [25.0, 1512.0], [26.0, 122366.5], [27.0, 1892.0], [28.0, 2042.0], [30.0, 1825.5], [32.0, 2151.0], [33.0, 2699.0], [34.0, 1879.0], [36.0, 2655.5], [37.0, 1958.0], [38.0, 82763.33333333333], [39.0, 2206.0], [40.0, 2069.0], [41.0, 2099.0], [43.0, 2915.0], [44.0, 2965.0], [45.0, 54517.0], [46.0, 2852.0], [47.0, 2480.0], [48.0, 2462.0], [50.0, 3030.0], [51.0, 2898.0], [53.0, 2982.0], [55.0, 29121.0], [56.0, 29201.5], [57.0, 3866.5], [60.0, 4170.5], [61.0, 54989.0], [62.0, 4023.0], [63.0, 4410.0], [64.0, 3970.0], [65.0, 3784.0], [66.0, 28687.5], [67.0, 28912.5], [68.0, 4045.0], [69.0, 1963.5], [70.0, 3945.0], [71.0, 53267.0], [72.0, 5237.0], [73.0, 5554.0], [77.0, 6322.0], [78.0, 6323.0], [79.0, 6096.5], [80.0, 5998.0], [82.0, 6150.0], [83.0, 5891.0], [84.0, 5671.0], [85.0, 6772.5], [87.0, 5730.0], [88.0, 6191.0], [89.0, 3910.666666666667], [90.0, 5632.0], [92.0, 6157.0], [93.0, 6158.0], [96.0, 7351.0], [98.0, 30800.0], [99.0, 30859.0], [97.0, 54844.0], [101.0, 7574.0], [102.0, 7631.0], [103.0, 7541.0], [104.0, 22763.333333333336], [105.0, 8987.0], [106.0, 30750.0], [107.0, 30878.0], [108.0, 6706.0], [110.0, 7387.0], [111.0, 6888.0], [113.0, 31080.5], [114.0, 7629.0], [115.0, 8008.0], [116.0, 7623.0], [117.0, 7561.0], [119.0, 7486.0], [118.0, 54598.0], [122.0, 7828.5], [123.0, 7359.0], [124.0, 7534.0], [126.0, 8311.5], [125.0, 53960.0], [128.0, 8470.0], [129.0, 8424.0], [130.0, 8502.0], [132.0, 24642.333333333336], [135.0, 9619.0], [134.0, 55837.0], [136.0, 24478.666666666664], [137.0, 9481.5], [138.0, 9440.0], [139.0, 9260.5], [141.0, 14096.5], [142.0, 14047.5], [143.0, 14386.0], [140.0, 18949.0], [144.0, 13842.5], [145.0, 8918.0], [147.0, 8675.0], [148.0, 8843.0], [150.0, 9728.0], [151.0, 8937.0], [149.0, 21602.0], [152.0, 8940.0], [153.0, 8854.0], [155.0, 9714.5], [156.0, 9770.0], [158.0, 15187.5], [159.0, 9867.0], [160.0, 10216.0], [161.0, 10455.0], [163.0, 10543.5], [165.0, 15698.0], [169.0, 11412.0], [171.0, 10468.0], [173.0, 19531.0], [181.0, 10228.0], [180.0, 132864.0], [185.0, 10493.0], [189.0, 39632.5], [190.0, 11399.0], [191.0, 15018.5], [193.0, 11008.0], [194.0, 10276.0], [195.0, 10037.0], [197.0, 19219.0], [204.0, 11154.0], [205.0, 11482.0], [202.0, 67409.0], [211.0, 112868.0], [223.0, 14938.0], [222.0, 14952.0], [227.0, 14339.0], [231.0, 11565.0], [226.0, 17386.0], [233.0, 10964.5], [234.0, 13986.0], [236.0, 11571.0], [239.0, 14132.0], [235.0, 17320.0], [232.0, 17332.0], [241.0, 22783.0], [245.0, 11516.0], [246.0, 11429.0], [247.0, 28379.0], [249.0, 10341.0], [250.0, 13311.0], [251.0, 13222.0], [252.0, 9548.0], [254.0, 10469.0], [255.0, 1.0], [257.0, 9711.5], [256.0, 18239.5], [259.0, 13920.5], [269.0, 13311.0], [270.0, 4096.0], [271.0, 1.0], [260.0, 17793.5], [261.0, 1.0], [262.0, 8703.0], [263.0, 13313.0], [264.0, 9729.0], [265.0, 11226.0], [266.0, 19199.0], [267.0, 26368.0], [273.0, 13311.0], [272.0, 10796.5], [274.0, 11894.0], [284.0, 23689.0], [285.0, 34190.0], [286.0, 26453.0], [287.0, 9956.75], [276.0, 4354.0], [277.0, 8768.0], [278.0, 9747.0], [279.0, 11882.0], [280.0, 37559.5], [281.0, 10226.5], [282.0, 44457.666666666664], [283.0, 10239.0], [290.0, 17919.0], [289.0, 7167.0], [291.0, 7269.6], [300.0, 14333.666666666666], [301.0, 10077.222222222223], [302.0, 13449.500000000002], [303.0, 13311.0], [293.0, 10623.0], [294.0, 38372.33333333333], [295.0, 11405.0], [296.0, 13112.555555555555], [297.0, 6656.5], [298.0, 10650.0], [299.0, 8864.166666666668], [305.0, 9610.5], [304.0, 13631.0], [306.0, 9931.6], [307.0, 12641.0], [308.0, 11321.0], [309.0, 12109.5], [310.0, 9475.0], [311.0, 10367.25], [312.0, 15263.666666666668], [318.0, 9712.625], [319.0, 14421.0], [316.0, 8350.0], [317.0, 7770.25], [313.0, 22576.6], [314.0, 11029.0], [315.0, 10455.333333333334], [321.0, 13198.444444444445], [320.0, 8223.333333333334], [322.0, 10025.75], [323.0, 6777.0], [324.0, 12170.083333333332], [325.0, 13425.5], [326.0, 6857.0], [327.0, 8702.5], [328.0, 11661.8], [334.0, 8854.300000000001], [335.0, 8959.818181818182], [332.0, 9728.333333333332], [333.0, 12953.6], [329.0, 9545.428571428572], [330.0, 5940.833333333334], [331.0, 7167.0], [348.0, 10749.789473684212], [337.0, 7730.6], [336.0, 11561.0], [338.0, 13280.0], [349.0, 10522.333333333334], [350.0, 9106.857142857143], [351.0, 12270.333333333334], [341.0, 13310.666666666666], [343.0, 11646.999999999998], [344.0, 9309.333333333334], [345.0, 10144.727272727272], [346.0, 11263.75], [347.0, 12586.333333333336], [353.0, 7082.5], [352.0, 12399.0], [354.0, 6246.2], [355.0, 8013.2], [356.0, 10584.111111111111], [357.0, 13312.5], [358.0, 7575.8], [359.0, 11704.0], [360.0, 7424.0], [366.0, 10299.666666666666], [367.0, 11382.333333333334], [364.0, 9148.199999999999], [365.0, 10028.75], [361.0, 13340.0], [362.0, 13347.666666666666], [363.0, 18431.0], [369.0, 8466.214285714286], [368.0, 13753.333333333334], [370.0, 11426.333333333334], [371.0, 9983.75], [372.0, 12528.818181818182], [373.0, 10134.0], [375.0, 9513.0], [376.0, 9075.636363636364], [382.0, 6502.666666666667], [383.0, 11604.333333333332], [380.0, 9547.0], [381.0, 10747.0], [377.0, 10369.09090909091], [378.0, 11091.833333333334], [379.0, 10355.357142857143], [385.0, 10390.25], [384.0, 13410.0], [386.0, 12828.5], [396.0, 9559.75], [397.0, 10830.714285714286], [398.0, 9400.2], [399.0, 5515.8], [388.0, 9666.75], [389.0, 11007.777777777777], [390.0, 12302.0], [391.0, 9767.0], [392.0, 6145.666666666667], [393.0, 12132.0], [394.0, 8448.75], [395.0, 9278.5], [401.0, 13312.0], [400.0, 12240.272727272726], [402.0, 13310.0], [403.0, 9608.5], [404.0, 9727.0], [405.0, 5461.333333333333], [406.0, 7892.833333333333], [407.0, 9153.416666666666], [408.0, 13310.0], [414.0, 14164.666666666668], [415.0, 11005.0], [412.0, 9813.666666666668], [413.0, 13315.0], [409.0, 11902.0], [410.0, 10897.0], [411.0, 7213.428571428572], [417.0, 19546.90909090909], [416.0, 11647.5], [418.0, 9154.0], [419.0, 10340.666666666666], [420.0, 11329.0], [421.0, 13823.75], [422.0, 11690.166666666666], [424.0, 9571.5], [430.0, 5376.0], [431.0, 9861.0], [428.0, 11903.25], [429.0, 10386.42857142857], [425.0, 10447.1], [426.0, 8325.75], [427.0, 10575.5], [433.0, 13592.5], [432.0, 8908.3], [434.0, 14591.0], [435.0, 22322.6], [436.0, 12633.0], [437.0, 9976.0], [438.0, 9825.0], [439.0, 14898.8], [440.0, 13312.0], [447.0, 12736.666666666666], [445.0, 12000.333333333334], [446.0, 10923.0], [441.0, 12731.714285714286], [442.0, 13396.666666666666], [443.0, 10423.222222222223], [449.0, 10762.75], [448.0, 10987.0], [450.0, 10580.555555555557], [451.0, 7679.0], [452.0, 11231.5], [453.0, 9844.090909090908], [454.0, 9850.857142857143], [455.0, 8184.0], [456.0, 34452.41666666667], [462.0, 11724.25], [463.0, 10617.5], [460.0, 8576.75], [461.0, 10276.666666666666], [457.0, 12141.428571428572], [459.0, 12804.0], [476.0, 13098.5], [466.0, 9043.666666666668], [467.0, 11263.8], [477.0, 8960.25], [479.0, 10767.0], [468.0, 10752.0], [470.0, 13311.666666666666], [471.0, 12355.714285714286], [472.0, 13197.8], [473.0, 12031.499999999998], [474.0, 11918.0], [475.0, 11666.333333333334], [481.0, 11990.5], [480.0, 12430.812499999998], [482.0, 7551.5], [483.0, 8499.0], [484.0, 11007.714285714284], [485.0, 12287.0], [486.0, 10162.5], [487.0, 13312.0], [488.0, 12607.25], [494.0, 10630.666666666666], [495.0, 8399.333333333332], [492.0, 11265.0], [493.0, 11196.2], [489.0, 44320.27272727273], [490.0, 14641.4], [491.0, 9031.142857142857], [496.0, 9633.81818181818], [497.0, 31142.181818181816], [498.0, 11899.6], [499.0, 28927.166666666664], [500.0, 24074.58441558445]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[381.1787072243345, 15755.375882672457]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 111868.0], [5.0, 1226.0], [6.0, 78039.25], [7.0, 1199.0], [8.0, 1221.8333333333333], [9.0, 1214.8333333333333], [10.0, 1224.0], [11.0, 1219.7142857142858], [12.0, 1209.6666666666667], [13.0, 1274.6666666666667], [14.0, 1221.2], [15.0, 1257.3], [16.0, 41645.117647058825], [17.0, 1568.538461538462], [18.0, 1230.3636363636363], [19.0, 1286.3333333333335], [20.0, 1361.1538461538462], [21.0, 1421.25], [22.0, 1542.1666666666667], [23.0, 1546.4615384615386], [24.0, 1599.7857142857142], [25.0, 1678.5384615384614], [26.0, 35703.64705882353], [27.0, 6121.769230769231], [28.0, 6583.666666666667], [29.0, 5859.5], [30.0, 5797.714285714286], [31.0, 5990.214285714286], [32.0, 7277.272727272728], [33.0, 2518.1111111111113], [34.0, 2470.3333333333335], [35.0, 2449.583333333333], [36.0, 2548.090909090909], [37.0, 2700.923076923076], [38.0, 32987.625], [39.0, 6968.5], [40.0, 5194.933333333333], [41.0, 6744.923076923076], [42.0, 5785.142857142857], [43.0, 2889.0], [44.0, 2874.25], [45.0, 2992.3571428571427], [46.0, 2995.5454545454545], [47.0, 3077.0], [48.0, 2897.6666666666674], [49.0, 7210.615384615385], [50.0, 7911.454545454545], [51.0, 7005.642857142857], [52.0, 6654.866666666667], [53.0, 3457.428571428571], [54.0, 3480.0833333333335], [55.0, 3631.0833333333335], [56.0, 3868.0000000000005], [57.0, 9136.1], [58.0, 3899.6153846153848], [59.0, 8147.923076923078], [60.0, 4427.5], [61.0, 7327.875], [62.0, 10110.666666666666], [63.0, 6985.428571428571], [64.0, 8639.083333333332], [65.0, 6892.266666666667], [66.0, 5127.928571428572], [67.0, 4583.0], [68.0, 4553.076923076923], [69.0, 4575.538461538462], [70.0, 4682.285714285714], [71.0, 4851.0], [72.0, 5048.75], [73.0, 5250.0], [74.0, 5360.545454545454], [75.0, 23788.875], [76.0, 5907.625], [77.0, 6084.666666666667], [78.0, 6674.857142857142], [79.0, 6263.833333333334], [80.0, 28589.76923076923], [81.0, 10964.916666666668], [82.0, 11655.272727272728], [83.0, 10198.615384615385], [84.0, 10061.076923076924], [85.0, 9760.466666666667], [86.0, 10572.363636363636], [87.0, 10077.5], [88.0, 9546.357142857141], [89.0, 6055.0], [90.0, 15520.181818181818], [91.0, 9635.42857142857], [92.0, 11403.0], [93.0, 12487.818181818182], [94.0, 10820.083333333332], [95.0, 10655.0], [96.0, 7089.416666666666], [97.0, 7225.818181818181], [98.0, 7353.636363636364], [99.0, 7810.200000000001], [100.0, 7825.916666666666], [101.0, 11554.0], [102.0, 7835.0], [103.0, 7549.846153846153], [104.0, 7449.466666666666], [105.0, 7360.000000000001], [106.0, 7228.285714285714], [107.0, 7233.461538461538], [108.0, 8417.0], [109.0, 8126.500000000001], [110.0, 12015.7], [111.0, 11043.307692307691], [112.0, 11452.666666666666], [113.0, 7627.5714285714275], [114.0, 7221.9285714285725], [115.0, 7919.454545454545], [116.0, 9226.0], [117.0, 8905.666666666666], [118.0, 8241.285714285716], [119.0, 8140.727272727273], [120.0, 9229.692307692309], [121.0, 8008.25], [122.0, 9138.642857142857], [123.0, 8201.785714285714], [124.0, 8368.846153846154], [125.0, 8411.5], [126.0, 9656.615384615383], [127.0, 9699.214285714286], [128.0, 9864.066666666668], [129.0, 9114.7], [130.0, 10200.692307692309], [131.0, 9436.727272727274], [132.0, 9227.11111111111], [133.0, 10437.76923076923], [134.0, 9523.785714285714], [135.0, 10605.214285714288], [136.0, 9516.5], [137.0, 9512.857142857141], [138.0, 9862.25], [139.0, 10327.499999999998], [140.0, 9550.923076923078], [141.0, 9588.5], [142.0, 9595.769230769229], [143.0, 9980.749999999998], [144.0, 9683.777777777777], [145.0, 10398.64705882353], [146.0, 10515.666666666666], [147.0, 10377.625], [148.0, 10644.666666666666], [149.0, 9524.545454545454], [150.0, 10397.999999999998], [151.0, 9629.769230769232], [152.0, 9630.6], [153.0, 17357.1875], [154.0, 10903.90909090909], [155.0, 10850.727272727274], [156.0, 10759.214285714286], [157.0, 10826.533333333335], [158.0, 10358.307692307691], [159.0, 18228.307692307695], [160.0, 9426.727272727274], [161.0, 11885.4], [162.0, 11723.23076923077], [163.0, 11648.083333333332], [164.0, 15047.642857142859], [165.0, 10763.1], [166.0, 11046.0], [167.0, 15971.916666666668], [168.0, 11761.142857142857], [169.0, 12319.642857142857], [170.0, 12398.250000000002], [171.0, 11221.333333333332], [172.0, 15160.857142857145], [173.0, 10975.416666666666], [174.0, 14554.312499999998], [175.0, 10933.733333333334], [176.0, 10843.083333333334], [177.0, 10819.571428571428], [178.0, 10757.083333333332], [179.0, 19314.615384615383], [180.0, 31086.222222222223], [181.0, 11281.90909090909], [182.0, 10954.777777777777], [183.0, 11027.076923076924], [184.0, 11203.5], [185.0, 19070.46153846154], [186.0, 11135.727272727272], [187.0, 11156.272727272728], [188.0, 18602.642857142855], [189.0, 11611.857142857143], [190.0, 11648.214285714284], [191.0, 11242.846153846152], [192.0, 11216.5], [193.0, 11174.92857142857], [194.0, 12386.999999999998], [195.0, 10952.733333333334], [196.0, 10993.166666666668], [197.0, 10869.555555555557], [198.0, 11234.785714285717], [199.0, 10858.153846153846], [200.0, 10594.599999999999], [201.0, 11469.466666666665], [202.0, 11315.714285714284], [203.0, 11699.071428571428], [204.0, 11835.9], [205.0, 12133.09090909091], [206.0, 12708.307692307691], [207.0, 12482.800000000001], [208.0, 13098.666666666666], [209.0, 13113.916666666668], [210.0, 12563.416666666666], [211.0, 12531.444444444445], [212.0, 12917.5], [213.0, 12913.500000000002], [214.0, 14368.57142857143], [215.0, 13232.899999999998], [216.0, 14400.166666666668], [217.0, 15395.272727272728], [218.0, 14364.133333333333], [219.0, 13249.083333333334], [220.0, 12746.25], [221.0, 12783.250000000002], [222.0, 12604.727272727274], [223.0, 12014.874999999998], [224.0, 12412.000000000002], [225.0, 12022.538461538461], [226.0, 11174.599999999999], [227.0, 11827.0], [228.0, 11741.692307692309], [229.0, 11627.214285714284], [230.0, 11545.0], [231.0, 11774.866666666669], [232.0, 11467.07142857143], [233.0, 11423.0], [234.0, 11696.285714285712], [235.0, 15454.307692307691], [236.0, 11781.692307692309], [237.0, 11419.57142857143], [238.0, 11694.399999999998], [239.0, 11730.272727272728], [240.0, 11814.199999999999], [241.0, 10745.800000000003], [242.0, 11267.0], [243.0, 11334.416666666668], [244.0, 11977.25], [245.0, 11272.533333333335], [246.0, 11310.0], [247.0, 11383.461538461539], [248.0, 10940.615384615385], [249.0, 10777.928571428572], [250.0, 11853.285714285714], [251.0, 13585.117647058823], [252.0, 10775.92857142857], [253.0, 10710.0], [254.0, 10625.923076923076], [255.0, 17044.8], [257.0, 18973.583333333332], [256.0, 10730.499999999998], [258.0, 11085.133333333333], [259.0, 11106.222222222223], [260.0, 10143.733333333334], [261.0, 11505.529411764708], [262.0, 12434.642857142855], [263.0, 10682.857142857143], [264.0, 10486.272727272726], [270.0, 18462.133333333335], [271.0, 14032.25], [268.0, 20508.0], [269.0, 11873.615384615385], [265.0, 11381.153846153846], [266.0, 11579.571428571431], [267.0, 13053.285714285714], [273.0, 11529.076923076922], [272.0, 14648.947368421052], [274.0, 11498.636363636364], [275.0, 11294.944444444443], [276.0, 17930.214285714286], [277.0, 10648.052631578947], [278.0, 20134.199999999997], [279.0, 10379.4], [280.0, 16596.26666666667], [286.0, 9321.27777777778], [287.0, 10313.285714285712], [284.0, 25847.5], [285.0, 33182.37037037037], [281.0, 10112.357142857143], [282.0, 20498.47368421053], [283.0, 9888.000000000002], [289.0, 10641.0], [288.0, 18311.071428571428], [290.0, 13254.4375], [291.0, 10746.529411764706], [292.0, 12975.846153846154], [293.0, 10942.800000000001], [294.0, 14305.642857142859], [295.0, 12318.6], [296.0, 12778.136363636364], [302.0, 10546.999999999998], [303.0, 10251.3125], [300.0, 10895.523809523813], [301.0, 12673.157894736845], [297.0, 11872.176470588238], [298.0, 12092.117647058823], [299.0, 11701.545454545454], [305.0, 10019.470588235294], [304.0, 13446.0], [306.0, 10023.526315789477], [307.0, 10761.050000000001], [308.0, 14847.111111111113], [309.0, 10152.458333333336], [310.0, 10785.523809523807], [311.0, 19354.47619047619], [312.0, 9995.125], [318.0, 10211.652173913046], [319.0, 11661.92857142857], [316.0, 10192.642857142857], [317.0, 14718.52380952381], [313.0, 12845.666666666666], [314.0, 9756.59090909091], [315.0, 10163.25], [321.0, 11184.650000000001], [320.0, 11434.0625], [322.0, 9810.538461538463], [323.0, 11244.4375], [324.0, 11531.65], [325.0, 10973.111111111111], [326.0, 9535.571428571426], [327.0, 13400.75], [328.0, 10063.999999999998], [334.0, 9002.666666666664], [335.0, 11769.444444444445], [332.0, 12012.933333333332], [333.0, 11603.117647058823], [329.0, 10970.222222222223], [330.0, 10181.5], [331.0, 8819.647058823532], [337.0, 10904.285714285714], [336.0, 11842.642857142859], [338.0, 11344.066666666666], [339.0, 17113.941176470587], [340.0, 12915.35294117647], [341.0, 19019.5625], [342.0, 13102.625000000002], [343.0, 12510.333333333334], [344.0, 10713.142857142859], [350.0, 9899.72222222222], [351.0, 10887.357142857141], [348.0, 11533.222222222223], [349.0, 9019.388888888889], [345.0, 11394.039999999999], [346.0, 11247.384615384612], [347.0, 11349.666666666666], [353.0, 10329.75], [352.0, 10607.0], [354.0, 9746.1], [355.0, 10977.117647058822], [356.0, 11351.21052631579], [357.0, 10112.12], [358.0, 9623.5], [359.0, 10647.611111111108], [360.0, 8255.461538461537], [366.0, 10341.35294117647], [367.0, 10184.23076923077], [364.0, 9483.451612903225], [365.0, 11594.666666666666], [361.0, 11687.9], [362.0, 11827.400000000001], [363.0, 11469.5625], [369.0, 10196.25806451613], [368.0, 11264.0], [370.0, 11402.0], [371.0, 11885.157894736843], [372.0, 10966.619047619046], [373.0, 10530.0], [374.0, 10312.857142857143], [375.0, 10553.307692307693], [376.0, 9110.529411764703], [382.0, 10760.555555555555], [383.0, 11334.857142857141], [380.0, 19899.285714285714], [381.0, 10449.9375], [377.0, 11917.653846153848], [378.0, 11422.374999999998], [379.0, 10013.821428571428], [385.0, 9948.562500000002], [384.0, 11604.066666666668], [386.0, 21761.727272727272], [387.0, 10273.266666666665], [388.0, 10950.470588235294], [389.0, 11503.303030303028], [390.0, 11644.249999999998], [391.0, 10621.071428571428], [392.0, 8976.48], [398.0, 9766.684210526319], [399.0, 8605.208333333332], [396.0, 10541.750000000002], [397.0, 10092.227272727272], [393.0, 9943.500000000002], [394.0, 10580.136363636366], [395.0, 12466.555555555553], [401.0, 9309.076923076922], [400.0, 10784.233333333332], [402.0, 10402.679999999998], [403.0, 9264.2], [404.0, 10054.666666666666], [405.0, 10238.35294117647], [406.0, 10357.666666666666], [407.0, 12138.071428571428], [408.0, 10292.565217391302], [414.0, 11542.703703703704], [415.0, 10652.318181818182], [412.0, 11407.0], [413.0, 10340.8], [409.0, 10613.1], [410.0, 10609.4375], [411.0, 9862.263157894737], [417.0, 14930.863636363638], [416.0, 10309.939393939394], [418.0, 11395.76923076923], [419.0, 11171.055555555555], [420.0, 11548.0], [421.0, 11609.666666666666], [422.0, 11246.21052631579], [423.0, 11031.999999999998], [424.0, 10676.14814814815], [430.0, 10597.2], [431.0, 10596.866666666667], [428.0, 10267.25], [429.0, 10595.166666666664], [425.0, 11826.809523809523], [426.0, 10089.25], [427.0, 11059.147058823532], [433.0, 9835.0], [432.0, 9543.999999999998], [434.0, 9377.961538461535], [435.0, 15678.111111111111], [436.0, 9671.0], [437.0, 10194.57142857143], [438.0, 11251.266666666666], [439.0, 10708.217391304348], [440.0, 10873.999999999998], [446.0, 10739.913043478262], [447.0, 11517.238095238095], [444.0, 11244.5], [445.0, 10976.758620689656], [441.0, 10313.428571428569], [442.0, 10776.499999999998], [443.0, 11791.0], [449.0, 12123.0], [448.0, 11434.214285714286], [450.0, 10619.590909090908], [451.0, 9538.058823529413], [452.0, 11641.90909090909], [453.0, 10775.086956521742], [454.0, 10081.171428571432], [455.0, 11264.888888888889], [456.0, 19644.4], [462.0, 10962.347826086954], [463.0, 11035.714285714286], [460.0, 17593.076923076922], [461.0, 10792.86956521739], [457.0, 10681.1], [458.0, 10572.714285714284], [459.0, 14803.999999999998], [465.0, 12647.363636363636], [464.0, 18585.0], [466.0, 11836.772727272728], [467.0, 12376.64516129032], [468.0, 17915.63157894737], [469.0, 13707.571428571431], [470.0, 12057.7], [471.0, 12439.428571428572], [472.0, 17929.5], [478.0, 10720.357142857141], [479.0, 10527.125], [476.0, 12597.04166666667], [477.0, 10715.210526315788], [473.0, 11954.96], [474.0, 11066.176470588234], [475.0, 11742.70588235294], [481.0, 11107.944444444443], [480.0, 10957.8], [482.0, 9085.24], [483.0, 10478.8125], [484.0, 11000.08], [485.0, 10832.857142857141], [486.0, 10716.444444444443], [487.0, 11129.4], [488.0, 10238.095238095239], [494.0, 10259.363636363636], [495.0, 11058.705882352939], [492.0, 11776.444444444443], [493.0, 16823.916666666668], [489.0, 48183.36585365854], [490.0, 11535.062500000002], [491.0, 10311.407407407409], [496.0, 11201.358974358973], [497.0, 14285.96666666667], [498.0, 11775.666666666666], [499.0, 13705.679999999998], [500.0, 13625.90388170055]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[331.2375579286729, 11870.511182752363]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 37.0], [3.0, 34.0], [4.0, 39.0], [5.0, 39.0], [6.0, 28.0], [7.0, 63760.0], [8.0, 48.0], [9.0, 27.0], [10.0, 29.0], [11.0, 35.0], [12.0, 30.0], [13.0, 32.0], [14.0, 37.0], [15.0, 50.0], [16.0, 62224.5], [17.0, 29.0], [18.0, 25.0], [19.0, 123.0], [20.0, 83.5], [21.0, 218.0], [22.0, 358.0], [23.0, 346.0], [24.0, 565.0], [25.0, 570.0], [26.0, 79051.5], [27.0, 837.0], [28.0, 877.0], [30.0, 897.0], [32.0, 1418.0], [33.0, 1451.0], [34.0, 1227.0], [35.0, 1277.0], [36.0, 1507.0], [37.0, 1316.0], [38.0, 1500.0], [39.0, 1588.0], [40.0, 1699.0], [41.0, 1696.0], [42.0, 1766.0], [43.0, 28210.0], [44.0, 1853.0], [45.0, 28237.0], [46.0, 28179.0], [47.0, 28079.0], [48.0, 28208.0], [50.0, 2178.0], [51.0, 2403.0], [52.0, 2304.0], [53.0, 28107.5], [54.0, 2369.0], [55.0, 2600.0], [56.0, 28616.0], [58.0, 28512.5], [59.0, 3306.0], [60.0, 3301.0], [61.0, 3823.0], [62.0, 3110.0], [63.0, 3164.0], [64.0, 3339.0], [65.0, 3579.0], [66.0, 3255.0], [67.0, 3200.0], [68.0, 28257.0], [69.0, 28380.0], [70.0, 3842.0], [71.0, 3795.0], [73.0, 4267.5], [74.0, 4311.0], [75.0, 53662.0], [77.0, 5050.0], [79.0, 5256.0], [80.0, 70043.66666666667], [81.0, 5554.0], [82.0, 5100.0], [83.0, 4794.5], [84.0, 4806.0], [85.0, 4873.0], [86.0, 4740.0], [87.0, 4532.0], [88.0, 4729.0], [89.0, 4943.0], [91.0, 5543.0], [90.0, 110590.0], [92.0, 5431.0], [93.0, 5587.0], [94.0, 5863.0], [96.0, 22381.666666666664], [97.0, 6312.0], [98.0, 6343.0], [99.0, 6370.0], [100.0, 30672.5], [101.0, 6407.0], [102.0, 30494.0], [103.0, 30521.5], [104.0, 6085.0], [106.0, 6046.0], [107.0, 6120.5], [105.0, 54794.0], [108.0, 5798.0], [109.0, 5981.0], [111.0, 6579.0], [112.0, 6278.0], [114.0, 22845.666666666664], [115.0, 30755.5], [117.0, 6860.5], [118.0, 6815.0], [119.0, 30653.5], [120.0, 6985.0], [122.0, 7290.0], [123.0, 22706.333333333336], [121.0, 54184.0], [125.0, 7432.0], [127.0, 8005.5], [124.0, 53965.0], [128.0, 7922.0], [129.0, 30705.5], [130.0, 7990.0], [132.0, 8303.0], [133.0, 8539.0], [134.0, 8139.0], [135.0, 8346.0], [131.0, 55852.0], [136.0, 8384.0], [137.0, 8741.0], [138.0, 8984.0], [139.0, 8485.0], [140.0, 8334.0], [141.0, 8332.0], [142.0, 8266.0], [143.0, 8362.0], [144.0, 8473.0], [145.0, 8238.5], [146.0, 8531.0], [147.0, 8105.0], [148.0, 8356.0], [149.0, 8336.0], [150.0, 8247.0], [151.0, 8429.0], [152.0, 8572.0], [153.0, 39508.5], [154.0, 8957.0], [158.0, 10330.0], [161.0, 9397.0], [167.0, 33225.0], [170.0, 10853.0], [175.0, 11406.0], [171.0, 19835.0], [178.0, 10176.0], [180.0, 71253.0], [181.0, 16585.0], [183.0, 68635.0], [182.0, 19088.0], [184.0, 10333.0], [185.0, 67116.0], [190.0, 19281.0], [187.0, 110953.0], [186.0, 110956.0], [193.0, 15034.0], [194.0, 16401.0], [199.0, 13953.0], [196.0, 19224.0], [195.0, 19239.0], [192.0, 67896.0], [215.0, 64499.0], [213.0, 112729.0], [216.0, 14230.0], [217.0, 23765.0], [218.0, 13361.0], [220.0, 35729.5], [222.0, 38003.5], [224.0, 12560.5], [228.0, 12058.5], [229.0, 13351.75], [231.0, 8142.0], [230.0, 16063.0], [233.0, 17169.666666666668], [234.0, 10371.0], [235.0, 10358.0], [237.0, 18057.0], [239.0, 10490.0], [240.0, 13373.0], [241.0, 13725.0], [243.0, 15698.0], [246.0, 11050.0], [247.0, 35935.5], [242.0, 12149.0], [248.0, 19494.5], [250.0, 1.0], [251.0, 52625.0], [253.0, 106684.0], [254.0, 11972.5], [255.0, 75905.25], [257.0, 66534.25], [256.0, 13249.0], [259.0, 59061.0], [268.0, 58869.0], [269.0, 13305.5], [270.0, 26664.166666666664], [271.0, 18260.75], [260.0, 8072.0], [261.0, 48571.0], [262.0, 13135.0], [263.0, 58266.5], [264.0, 9694.0], [265.0, 42346.0], [267.0, 18297.5], [266.0, 9987.0], [284.0, 34489.4], [272.0, 35458.25], [274.0, 11000.0], [285.0, 35600.5], [286.0, 43311.5], [287.0, 10336.0], [276.0, 48381.25], [277.0, 12040.5], [278.0, 59758.5], [280.0, 107307.0], [281.0, 8704.0], [282.0, 35699.25], [283.0, 10006.8], [289.0, 12374.0], [288.0, 10013.5], [290.0, 77887.66666666667], [291.0, 9355.285714285716], [293.0, 6656.5], [294.0, 61537.0], [295.0, 18382.0], [296.0, 28478.90909090909], [302.0, 48838.333333333336], [303.0, 8462.666666666668], [300.0, 25571.333333333332], [301.0, 15000.6], [297.0, 13280.0], [298.0, 58135.5], [299.0, 8846.333333333334], [305.0, 14798.0], [304.0, 64183.833333333336], [306.0, 43520.666666666664], [307.0, 5297.2], [308.0, 10316.333333333334], [309.0, 5723.0], [310.0, 11185.571428571428], [311.0, 19047.199999999997], [312.0, 46523.666666666664], [318.0, 8480.8], [319.0, 25016.85714285714], [316.0, 4323.5], [317.0, 8527.166666666666], [313.0, 21994.5], [314.0, 9687.2], [315.0, 42039.166666666664], [321.0, 31131.833333333332], [320.0, 9616.5], [322.0, 5223.0], [323.0, 11431.0], [324.0, 10768.666666666666], [325.0, 47097.8], [326.0, 8836.75], [327.0, 8703.4], [328.0, 7418.25], [334.0, 8284.545454545456], [335.0, 12142.5], [332.0, 15358.5], [333.0, 12954.0], [329.0, 11479.666666666666], [330.0, 8671.0], [331.0, 8562.5], [337.0, 15784.928571428569], [336.0, 8191.0], [338.0, 11528.666666666666], [339.0, 10844.0], [340.0, 13128.333333333334], [341.0, 11116.0], [342.0, 11226.0], [343.0, 26960.000000000004], [344.0, 8703.0], [350.0, 12800.0], [348.0, 10659.090909090908], [349.0, 12507.8], [345.0, 11851.499999999998], [346.0, 10471.88888888889], [347.0, 9712.333333333332], [353.0, 9988.75], [352.0, 9484.0], [354.0, 9129.8], [355.0, 8278.4], [356.0, 12062.333333333332], [357.0, 12506.5], [358.0, 9890.0], [359.0, 10967.25], [360.0, 8619.25], [366.0, 10689.25], [364.0, 8965.90909090909], [365.0, 13829.0], [361.0, 8362.166666666668], [362.0, 12683.25], [363.0, 11691.75], [369.0, 10538.153846153846], [368.0, 147360.0], [370.0, 11773.0], [371.0, 12255.5], [372.0, 10950.285714285714], [373.0, 12288.0], [374.0, 9852.0], [375.0, 9382.0], [376.0, 9738.400000000001], [382.0, 10027.4], [383.0, 13051.75], [380.0, 66715.0], [381.0, 8280.5], [377.0, 13009.0], [378.0, 10053.5], [379.0, 11922.166666666666], [386.0, 20166.0], [385.0, 7716.428571428572], [387.0, 11272.333333333334], [396.0, 11594.4], [397.0, 8277.666666666668], [398.0, 12792.5], [399.0, 9497.999999999998], [388.0, 9418.6], [389.0, 10600.27777777778], [390.0, 12666.09090909091], [391.0, 9582.0], [392.0, 10091.0], [393.0, 10045.25], [394.0, 7727.25], [395.0, 6656.5], [401.0, 12287.0], [400.0, 6698.375], [402.0, 12400.5], [403.0, 11227.75], [404.0, 9726.666666666666], [405.0, 13452.333333333334], [406.0, 9339.75], [407.0, 9099.916666666666], [408.0, 12136.333333333334], [414.0, 13201.333333333334], [415.0, 8774.4], [412.0, 12884.75], [413.0, 11009.0], [409.0, 13835.0], [411.0, 10159.25], [417.0, 11757.142857142857], [416.0, 9547.2], [418.0, 8115.6], [419.0, 12286.900000000001], [420.0, 9087.0], [421.0, 8800.666666666666], [422.0, 13695.5], [423.0, 9984.0], [424.0, 9602.0], [430.0, 9190.25], [431.0, 9071.0], [428.0, 11425.857142857143], [429.0, 9907.5], [425.0, 10004.285714285714], [426.0, 13310.2], [427.0, 10450.076923076924], [433.0, 13433.0], [432.0, 8031.166666666667], [434.0, 9701.0], [435.0, 18994.714285714286], [436.0, 13311.333333333334], [437.0, 11216.0], [438.0, 20480.0], [439.0, 11090.333333333334], [441.0, 9216.0], [446.0, 8700.0], [447.0, 8845.0], [444.0, 13572.5], [445.0, 11928.333333333332], [442.0, 12983.142857142857], [443.0, 10043.166666666666], [450.0, 9308.4], [449.0, 13276.181818181818], [451.0, 9269.0], [460.0, 7231.0], [461.0, 12110.666666666666], [462.0, 10353.25], [463.0, 84149.0], [452.0, 7322.8], [453.0, 10831.166666666668], [454.0, 11995.142857142857], [456.0, 30692.230769230773], [457.0, 6112.75], [458.0, 12287.0], [459.0, 27698.5], [465.0, 12286.0], [464.0, 63447.0], [466.0, 12761.538461538463], [467.0, 13566.375], [468.0, 13612.0], [470.0, 11355.0], [471.0, 11358.666666666666], [472.0, 13310.5], [478.0, 11796.5], [479.0, 9414.75], [476.0, 8448.0], [477.0, 1.0], [473.0, 11773.2], [474.0, 13312.833333333332], [475.0, 10664.0], [481.0, 12224.333333333334], [480.0, 10093.81818181818], [482.0, 8900.0], [483.0, 8309.0], [484.0, 10811.3125], [485.0, 12037.0], [486.0, 11368.0], [487.0, 10927.0], [488.0, 13242.666666666666], [494.0, 7006.666666666667], [495.0, 11626.666666666668], [492.0, 11264.0], [493.0, 11976.272727272728], [489.0, 42132.600000000006], [490.0, 1.0], [491.0, 9727.75], [496.0, 10670.416666666668], [497.0, 29551.333333333336], [498.0, 10929.666666666666], [499.0, 19091.0], [500.0, 21238.928899082566], [1.0, 88.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[375.7690315898496, 17761.373381667512]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 91.2, "minX": 1.53938958E12, "maxY": 1084095.95, "series": [{"data": [[1.5393897E12, 990883.7166666667], [1.53939018E12, 1064950.3833333333], [1.53939E12, 1072431.95], [1.53938958E12, 10709.033333333333], [1.53939006E12, 1043387.8], [1.53938988E12, 1084095.95], [1.53938994E12, 1019836.5], [1.53938976E12, 1075080.7833333334], [1.53939024E12, 235327.33333333334], [1.53938982E12, 1022283.4666666667], [1.53938964E12, 1000748.15], [1.53939012E12, 1067348.8333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5393897E12, 3487.7], [1.53939018E12, 7306.016666666666], [1.53939E12, 7187.266666666666], [1.53938958E12, 91.2], [1.53939006E12, 7201.1], [1.53938988E12, 4758.516666666666], [1.53938994E12, 7179.133333333333], [1.53938976E12, 3597.35], [1.53939024E12, 1258.05], [1.53938982E12, 3291.9], [1.53938964E12, 3533.4], [1.53939012E12, 7842.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 42.57142857142857, "minX": 1.53938958E12, "maxY": 58288.79104477612, "series": [{"data": [[1.5393897E12, 6434.685185185185], [1.53939018E12, 28280.015209125468], [1.53939E12, 10541.336666666668], [1.53938958E12, 1725.8333333333333], [1.53939006E12, 12529.612903225809], [1.53938988E12, 13511.748091603054], [1.53938994E12, 10502.815476190464], [1.53938976E12, 9289.641025641025], [1.53939024E12, 53748.821428571435], [1.53938982E12, 11943.449999999997], [1.53938964E12, 2320.1454545454544], [1.53939012E12, 18259.337748344362]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5393897E12, 6875.937134502926], [1.53939018E12, 14217.282436708847], [1.53939E12, 11059.921348314625], [1.53938958E12, 1228.7142857142856], [1.53939006E12, 11646.461409395975], [1.53938988E12, 12754.767171129231], [1.53938994E12, 11291.348304307961], [1.53938976E12, 10215.263087248322], [1.53939024E12, 46085.28571428571], [1.53938982E12, 11853.686274509795], [1.53938964E12, 2681.5295815295826], [1.53939012E12, 13765.310422960707]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.5393897E12, 5753.912280701756], [1.53939018E12, 26201.111111111124], [1.53939E12, 11712.996763754058], [1.53938958E12, 42.57142857142857], [1.53939006E12, 12185.364238410595], [1.53938988E12, 33711.74850299399], [1.53938994E12, 13054.008522727274], [1.53938976E12, 9800.205128205127], [1.53939024E12, 58288.79104477612], [1.53938982E12, 16812.533333333333], [1.53938964E12, 1466.5344827586207], [1.53939012E12, 17062.199312714758]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 42.285714285714285, "minX": 1.53938958E12, "maxY": 58288.79104477612, "series": [{"data": [[1.5393897E12, 6434.685185185185], [1.53939018E12, 28280.011406844103], [1.53939E12, 10541.333333333341], [1.53938958E12, 1725.8333333333333], [1.53939006E12, 12529.612903225809], [1.53938988E12, 13511.748091603054], [1.53938994E12, 10502.806547619051], [1.53938976E12, 9289.641025641025], [1.53939024E12, 53748.803571428565], [1.53938982E12, 11943.449999999997], [1.53938964E12, 2320.1454545454544], [1.53939012E12, 18259.327814569526]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5393897E12, 6875.480994152054], [1.53939018E12, 14216.965981012678], [1.53939E12, 11059.544511668098], [1.53938958E12, 1228.0], [1.53939006E12, 11646.083053691276], [1.53938988E12, 12754.323632130388], [1.53938994E12, 11291.055912007332], [1.53938976E12, 10214.864429530215], [1.53939024E12, 46084.94897959183], [1.53938982E12, 11853.246498599423], [1.53938964E12, 2681.0663780663767], [1.53939012E12, 13765.039274924453]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.5393897E12, 5753.877192982457], [1.53939018E12, 26201.111111111124], [1.53939E12, 11712.983818770233], [1.53938958E12, 42.285714285714285], [1.53939006E12, 12185.360927152315], [1.53938988E12, 33711.74850299399], [1.53938994E12, 13054.002840909092], [1.53938976E12, 9800.205128205127], [1.53939024E12, 58288.79104477612], [1.53938982E12, 16812.533333333333], [1.53938964E12, 1466.4827586206895], [1.53939012E12, 17062.199312714758]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53938958E12, "maxY": 7.142857142857142, "series": [{"data": [[1.5393897E12, 0.7777777777777777], [1.53939018E12, 0.4296577946768062], [1.53939E12, 0.5199999999999997], [1.53938958E12, 0.0], [1.53939006E12, 0.4838709677419356], [1.53938988E12, 0.6106870229007635], [1.53938994E12, 0.6755952380952379], [1.53938976E12, 0.8717948717948718], [1.53939024E12, 0.5357142857142857], [1.53938982E12, 0.7999999999999998], [1.53938964E12, 0.12727272727272726], [1.53939012E12, 0.5033112582781458]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.5393897E12, 0.6315789473684205], [1.53939018E12, 0.4106012658227851], [1.53939E12, 0.4649956784788249], [1.53938958E12, 0.4285714285714286], [1.53939006E12, 0.45218120805369116], [1.53938988E12, 0.5576251455180445], [1.53938994E12, 0.5811182401466547], [1.53938976E12, 0.5355704697986575], [1.53939024E12, 0.35714285714285704], [1.53938982E12, 0.5266106442577027], [1.53938964E12, 0.7662337662337669], [1.53939012E12, 0.42598187311178193]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.5393897E12, 0.8421052631578947], [1.53939018E12, 0.523809523809524], [1.53939E12, 0.5922330097087385], [1.53938958E12, 7.142857142857142], [1.53939006E12, 0.5728476821192051], [1.53938988E12, 0.7125748502994009], [1.53938994E12, 0.6789772727272726], [1.53938976E12, 1.6410256410256407], [1.53939024E12, 0.44776119402985076], [1.53938982E12, 0.8666666666666666], [1.53938964E12, 1.3275862068965518], [1.53939012E12, 0.5395189003436427]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.53938958E12, "maxY": 115727.0, "series": [{"data": [[1.5393897E12, 11088.0], [1.53939018E12, 18354.0], [1.53939E12, 15369.0], [1.53938958E12, 5546.0], [1.53939006E12, 17577.0], [1.53938988E12, 48880.0], [1.53938994E12, 19134.0], [1.53938976E12, 26296.0], [1.53939024E12, 115727.0], [1.53938982E12, 53929.0], [1.53938964E12, 8478.0], [1.53939012E12, 24192.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5393897E12, 3231.0], [1.53939018E12, 9555.0], [1.53939E12, 8670.0], [1.53938958E12, 28.0], [1.53939006E12, 8900.0], [1.53938988E12, 9135.0], [1.53938994E12, 8407.0], [1.53938976E12, 7720.0], [1.53939024E12, 9971.0], [1.53938982E12, 10019.0], [1.53938964E12, 25.0], [1.53939012E12, 9519.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5393897E12, 7785.5], [1.53939018E12, 11840.0], [1.53939E12, 11642.800000000001], [1.53938958E12, 1335.8000000000002], [1.53939006E12, 11790.0], [1.53938988E12, 11615.6], [1.53938994E12, 11781.200000000003], [1.53938976E12, 10841.0], [1.53939024E12, 11990.900000000001], [1.53938982E12, 11576.400000000003], [1.53938964E12, 4350.0], [1.53939012E12, 11800.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5393897E12, 8748.899999999998], [1.53939018E12, 14920.089999999997], [1.53939E12, 14197.849999999942], [1.53938958E12, 5546.0], [1.53939006E12, 14645.73999999997], [1.53938988E12, 13552.04000000004], [1.53938994E12, 14471.520000000017], [1.53938976E12, 11350.0], [1.53939024E12, 29716.35000000022], [1.53938982E12, 13196.400000000003], [1.53938964E12, 4877.199999999994], [1.53939012E12, 14787.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5393897E12, 8095.9], [1.53939018E12, 12468.9], [1.53939E12, 12445.949999999997], [1.53938958E12, 5335.699999999997], [1.53939006E12, 12547.849999999999], [1.53938988E12, 12350.8], [1.53938994E12, 12570.400000000001], [1.53938976E12, 11107.0], [1.53939024E12, 12778.9], [1.53938982E12, 12575.0], [1.53938964E12, 4497.0], [1.53939012E12, 12498.55]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 102399.0, "series": [{"data": [[0.0, 954.5], [19.0, 10901.0], [5.0, 20358.5], [12.0, 11495.0], [13.0, 7097.0], [29.0, 10963.0], [31.0, 11038.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 13311.0], [5.0, 102399.0], [12.0, 13327.0], [13.0, 1.0], [29.0, 12800.0], [31.0, 13281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 102399.0, "series": [{"data": [[0.0, 954.0], [19.0, 10901.0], [5.0, 20358.0], [12.0, 11495.0], [13.0, 7097.0], [29.0, 10963.0], [31.0, 11037.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 13311.0], [5.0, 102399.0], [12.0, 13327.0], [13.0, 1.0], [29.0, 12800.0], [31.0, 13281.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.45, "minX": 1.53938958E12, "maxY": 32.166666666666664, "series": [{"data": [[1.5393897E12, 14.25], [1.53939018E12, 26.633333333333333], [1.53939E12, 30.433333333333334], [1.53938958E12, 0.45], [1.53939006E12, 30.55], [1.53938988E12, 20.283333333333335], [1.53938994E12, 30.65], [1.53938976E12, 14.716666666666667], [1.53938982E12, 13.733333333333333], [1.53938964E12, 14.433333333333334], [1.53939012E12, 32.166666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939018E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53938958E12, "maxY": 18.833333333333332, "series": [{"data": [[1.5393897E12, 12.316666666666666], [1.53939018E12, 12.633333333333333], [1.53939E12, 12.883333333333333], [1.53938958E12, 0.23333333333333334], [1.53939006E12, 12.433333333333334], [1.53938988E12, 12.966666666666667], [1.53938994E12, 12.316666666666666], [1.53938976E12, 13.016666666666667], [1.53939024E12, 3.5], [1.53938982E12, 12.016666666666667], [1.53938964E12, 12.416666666666666], [1.53939012E12, 12.6]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5393897E12, 0.8666666666666667], [1.53939018E12, 0.3333333333333333], [1.53939E12, 0.5666666666666667], [1.53938958E12, 0.1], [1.53939006E12, 0.43333333333333335], [1.53938988E12, 0.36666666666666664], [1.53938994E12, 0.6166666666666667], [1.53938976E12, 0.6333333333333333], [1.53938982E12, 0.2833333333333333], [1.53938964E12, 0.9], [1.53939012E12, 0.4]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.5393897E12, 0.06666666666666667], [1.53939018E12, 16.633333333333333], [1.53939E12, 15.7], [1.53939006E12, 16.6], [1.53938988E12, 5.8], [1.53938994E12, 16.483333333333334], [1.53938976E12, 0.06666666666666667], [1.53939024E12, 1.05], [1.53938982E12, 0.4166666666666667], [1.53938964E12, 0.1], [1.53939012E12, 18.833333333333332]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939018E12, 0.05], [1.53939E12, 0.2833333333333333], [1.53939006E12, 0.08333333333333333], [1.53938988E12, 0.15], [1.53938994E12, 0.23333333333333334], [1.53939024E12, 0.7666666666666667], [1.53938982E12, 0.016666666666666666], [1.53938964E12, 0.016666666666666666], [1.53939012E12, 0.11666666666666667]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53938958E12, "maxY": 12.5, "series": [{"data": [[1.5393897E12, 0.95], [1.53939018E12, 0.38333333333333336], [1.53939E12, 0.5833333333333334], [1.53938958E12, 0.11666666666666667], [1.53939006E12, 0.45], [1.53938988E12, 0.4666666666666667], [1.53938994E12, 0.6166666666666667], [1.53938976E12, 0.65], [1.53939024E12, 0.8833333333333333], [1.53938982E12, 0.23333333333333334], [1.53938964E12, 0.95], [1.53939012E12, 0.35]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.5393897E12, 0.8666666666666667], [1.53939018E12, 0.3333333333333333], [1.53939E12, 0.5666666666666667], [1.53938958E12, 0.1], [1.53939006E12, 0.43333333333333335], [1.53938988E12, 0.36666666666666664], [1.53938994E12, 0.6166666666666667], [1.53938976E12, 0.6333333333333333], [1.53938982E12, 0.2833333333333333], [1.53938964E12, 0.9], [1.53939012E12, 0.4]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939018E12, 3.816666666666667], [1.53939E12, 4.566666666666666], [1.53939006E12, 4.583333333333333], [1.53938988E12, 2.316666666666667], [1.53938994E12, 5.25], [1.53939024E12, 0.23333333333333334], [1.53938982E12, 0.26666666666666666], [1.53938964E12, 0.016666666666666666], [1.53939012E12, 4.5]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5393897E12, 0.03333333333333333], [1.53939018E12, 8.816666666666666], [1.53939E12, 6.983333333333333], [1.53939006E12, 7.883333333333334], [1.53938988E12, 1.8166666666666667], [1.53938994E12, 6.483333333333333], [1.53938976E12, 0.05], [1.53939024E12, 0.65], [1.53938982E12, 0.11666666666666667], [1.53938964E12, 0.08333333333333333], [1.53939012E12, 9.816666666666666]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.5393897E12, 0.03333333333333333], [1.53939018E12, 4.05], [1.53939E12, 4.433333333333334], [1.53939006E12, 4.216666666666667], [1.53938988E12, 1.8166666666666667], [1.53938994E12, 4.983333333333333], [1.53938976E12, 0.016666666666666666], [1.53939024E12, 0.9333333333333333], [1.53938982E12, 0.05], [1.53938964E12, 0.016666666666666666], [1.53939012E12, 4.633333333333334]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.5393897E12, 11.366666666666667], [1.53939018E12, 12.25], [1.53939E12, 12.3], [1.53938958E12, 0.11666666666666667], [1.53939006E12, 11.983333333333333], [1.53938988E12, 12.5], [1.53938994E12, 11.7], [1.53938976E12, 12.366666666666667], [1.53939024E12, 2.6166666666666667], [1.53938982E12, 11.783333333333333], [1.53938964E12, 11.466666666666667], [1.53939012E12, 12.25]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
