/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 213247.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 6.0], [7.9, 27.0], [8.0, 525.0], [8.1, 582.0], [8.2, 586.0], [8.3, 597.0], [8.4, 600.0], [8.5, 620.0], [8.6, 720.0], [8.7, 733.0], [8.8, 804.0], [8.9, 825.0], [9.0, 887.0], [9.1, 1034.0], [9.2, 1353.0], [9.3, 1464.0], [9.4, 1478.0], [9.5, 1489.0], [9.6, 1803.0], [9.7, 2041.0], [9.8, 2079.0], [9.9, 2102.0], [10.0, 2216.0], [10.1, 2487.0], [10.2, 2632.0], [10.3, 2673.0], [10.4, 2912.0], [10.5, 2987.0], [10.6, 3097.0], [10.7, 3254.0], [10.8, 3387.0], [10.9, 3840.0], [11.0, 4177.0], [11.1, 4290.0], [11.2, 4305.0], [11.3, 4347.0], [11.4, 4368.0], [11.5, 4448.0], [11.6, 4667.0], [11.7, 4792.0], [11.8, 4862.0], [11.9, 4962.0], [12.0, 5161.0], [12.1, 5336.0], [12.2, 5343.0], [12.3, 5415.0], [12.4, 5463.0], [12.5, 5546.0], [12.6, 5581.0], [12.7, 5674.0], [12.8, 5680.0], [12.9, 6017.0], [13.0, 6180.0], [13.1, 6407.0], [13.2, 6753.0], [13.3, 6929.0], [13.4, 7105.0], [13.5, 7162.0], [13.6, 7164.0], [13.7, 7165.0], [13.8, 7166.0], [13.9, 7166.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7167.0], [15.3, 7167.0], [15.4, 7167.0], [15.5, 7167.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7168.0], [16.6, 7169.0], [16.7, 7170.0], [16.8, 7171.0], [16.9, 7207.0], [17.0, 7262.0], [17.1, 7384.0], [17.2, 7419.0], [17.3, 7419.0], [17.4, 7421.0], [17.5, 7422.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7423.0], [18.5, 7423.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7425.0], [19.2, 7425.0], [19.3, 7428.0], [19.4, 7499.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7684.0], [20.9, 7765.0], [21.0, 7933.0], [21.1, 7933.0], [21.2, 7934.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7935.0], [21.6, 7935.0], [21.7, 7935.0], [21.8, 7935.0], [21.9, 7935.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7937.0], [23.3, 7939.0], [23.4, 7940.0], [23.5, 8056.0], [23.6, 8061.0], [23.7, 8188.0], [23.8, 8189.0], [23.9, 8190.0], [24.0, 8191.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8191.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8191.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8195.0], [25.8, 8403.0], [25.9, 8444.0], [26.0, 8446.0], [26.1, 8447.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8448.0], [26.5, 8448.0], [26.6, 8448.0], [26.7, 8448.0], [26.8, 8449.0], [26.9, 8698.0], [27.0, 8701.0], [27.1, 8702.0], [27.2, 8703.0], [27.3, 8703.0], [27.4, 8703.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8703.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8704.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8707.0], [28.6, 8707.0], [28.7, 8722.0], [28.8, 8912.0], [28.9, 8958.0], [29.0, 8959.0], [29.1, 8959.0], [29.2, 8959.0], [29.3, 8962.0], [29.4, 8963.0], [29.5, 8965.0], [29.6, 9052.0], [29.7, 9137.0], [29.8, 9211.0], [29.9, 9211.0], [30.0, 9211.0], [30.1, 9213.0], [30.2, 9214.0], [30.3, 9215.0], [30.4, 9215.0], [30.5, 9215.0], [30.6, 9215.0], [30.7, 9215.0], [30.8, 9215.0], [30.9, 9215.0], [31.0, 9215.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9216.0], [31.6, 9216.0], [31.7, 9216.0], [31.8, 9216.0], [31.9, 9216.0], [32.0, 9216.0], [32.1, 9217.0], [32.2, 9220.0], [32.3, 9311.0], [32.4, 9323.0], [32.5, 9432.0], [32.6, 9468.0], [32.7, 9471.0], [32.8, 9472.0], [32.9, 9472.0], [33.0, 9554.0], [33.1, 9630.0], [33.2, 9711.0], [33.3, 9726.0], [33.4, 9726.0], [33.5, 9726.0], [33.6, 9727.0], [33.7, 9727.0], [33.8, 9727.0], [33.9, 9728.0], [34.0, 9728.0], [34.1, 9736.0], [34.2, 9777.0], [34.3, 9831.0], [34.4, 9840.0], [34.5, 9870.0], [34.6, 9880.0], [34.7, 9887.0], [34.8, 9923.0], [34.9, 9924.0], [35.0, 9943.0], [35.1, 9956.0], [35.2, 9973.0], [35.3, 9978.0], [35.4, 9983.0], [35.5, 9983.0], [35.6, 9983.0], [35.7, 9983.0], [35.8, 9983.0], [35.9, 9983.0], [36.0, 9984.0], [36.1, 9984.0], [36.2, 9984.0], [36.3, 9984.0], [36.4, 10029.0], [36.5, 10041.0], [36.6, 10048.0], [36.7, 10064.0], [36.8, 10076.0], [36.9, 10080.0], [37.0, 10084.0], [37.1, 10089.0], [37.2, 10112.0], [37.3, 10133.0], [37.4, 10175.0], [37.5, 10183.0], [37.6, 10192.0], [37.7, 10224.0], [37.8, 10231.0], [37.9, 10235.0], [38.0, 10239.0], [38.1, 10239.0], [38.2, 10239.0], [38.3, 10239.0], [38.4, 10239.0], [38.5, 10239.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10240.0], [38.9, 10246.0], [39.0, 10284.0], [39.1, 10296.0], [39.2, 10313.0], [39.3, 10319.0], [39.4, 10341.0], [39.5, 10348.0], [39.6, 10370.0], [39.7, 10377.0], [39.8, 10379.0], [39.9, 10379.0], [40.0, 10398.0], [40.1, 10398.0], [40.2, 10400.0], [40.3, 10410.0], [40.4, 10432.0], [40.5, 10464.0], [40.6, 10467.0], [40.7, 10467.0], [40.8, 10478.0], [40.9, 10480.0], [41.0, 10484.0], [41.1, 10493.0], [41.2, 10493.0], [41.3, 10495.0], [41.4, 10497.0], [41.5, 10523.0], [41.6, 10533.0], [41.7, 10533.0], [41.8, 10537.0], [41.9, 10556.0], [42.0, 10562.0], [42.1, 10575.0], [42.2, 10582.0], [42.3, 10587.0], [42.4, 10595.0], [42.5, 10646.0], [42.6, 10699.0], [42.7, 10701.0], [42.8, 10706.0], [42.9, 10715.0], [43.0, 10733.0], [43.1, 10750.0], [43.2, 10750.0], [43.3, 10751.0], [43.4, 10751.0], [43.5, 10751.0], [43.6, 10752.0], [43.7, 10752.0], [43.8, 10753.0], [43.9, 10756.0], [44.0, 10764.0], [44.1, 10774.0], [44.2, 10775.0], [44.3, 10806.0], [44.4, 10816.0], [44.5, 10835.0], [44.6, 10856.0], [44.7, 10856.0], [44.8, 10874.0], [44.9, 10883.0], [45.0, 10894.0], [45.1, 10895.0], [45.2, 10946.0], [45.3, 10967.0], [45.4, 10987.0], [45.5, 11007.0], [45.6, 11007.0], [45.7, 11007.0], [45.8, 11008.0], [45.9, 11010.0], [46.0, 11012.0], [46.1, 11015.0], [46.2, 11021.0], [46.3, 11032.0], [46.4, 11038.0], [46.5, 11054.0], [46.6, 11073.0], [46.7, 11091.0], [46.8, 11102.0], [46.9, 11113.0], [47.0, 11125.0], [47.1, 11138.0], [47.2, 11146.0], [47.3, 11161.0], [47.4, 11171.0], [47.5, 11179.0], [47.6, 11197.0], [47.7, 11238.0], [47.8, 11262.0], [47.9, 11263.0], [48.0, 11263.0], [48.1, 11264.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11286.0], [48.5, 11290.0], [48.6, 11296.0], [48.7, 11317.0], [48.8, 11347.0], [48.9, 11363.0], [49.0, 11424.0], [49.1, 11433.0], [49.2, 11515.0], [49.3, 11519.0], [49.4, 11520.0], [49.5, 11561.0], [49.6, 11563.0], [49.7, 11598.0], [49.8, 11626.0], [49.9, 11673.0], [50.0, 11698.0], [50.1, 11755.0], [50.2, 11774.0], [50.3, 11775.0], [50.4, 11775.0], [50.5, 11775.0], [50.6, 11775.0], [50.7, 11775.0], [50.8, 11776.0], [50.9, 11776.0], [51.0, 11776.0], [51.1, 11777.0], [51.2, 11784.0], [51.3, 11806.0], [51.4, 11900.0], [51.5, 11904.0], [51.6, 11986.0], [51.7, 12032.0], [51.8, 12033.0], [51.9, 12048.0], [52.0, 12085.0], [52.1, 12142.0], [52.2, 12201.0], [52.3, 12286.0], [52.4, 12287.0], [52.5, 12287.0], [52.6, 12287.0], [52.7, 12288.0], [52.8, 12288.0], [52.9, 12298.0], [53.0, 12317.0], [53.1, 12386.0], [53.2, 12422.0], [53.3, 12539.0], [53.4, 12542.0], [53.5, 12542.0], [53.6, 12543.0], [53.7, 12543.0], [53.8, 12544.0], [53.9, 12544.0], [54.0, 12544.0], [54.1, 12564.0], [54.2, 12686.0], [54.3, 12714.0], [54.4, 12723.0], [54.5, 12762.0], [54.6, 12798.0], [54.7, 12799.0], [54.8, 12799.0], [54.9, 12799.0], [55.0, 12799.0], [55.1, 12799.0], [55.2, 12799.0], [55.3, 12799.0], [55.4, 12799.0], [55.5, 12800.0], [55.6, 12800.0], [55.7, 12800.0], [55.8, 12807.0], [55.9, 12848.0], [56.0, 13055.0], [56.1, 13055.0], [56.2, 13056.0], [56.3, 13056.0], [56.4, 13056.0], [56.5, 13155.0], [56.6, 13187.0], [56.7, 13223.0], [56.8, 13300.0], [56.9, 13300.0], [57.0, 13307.0], [57.1, 13307.0], [57.2, 13308.0], [57.3, 13308.0], [57.4, 13308.0], [57.5, 13308.0], [57.6, 13308.0], [57.7, 13309.0], [57.8, 13309.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13310.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13310.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13310.0], [59.4, 13310.0], [59.5, 13310.0], [59.6, 13310.0], [59.7, 13310.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13313.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13313.0], [77.1, 13313.0], [77.2, 13315.0], [77.3, 13315.0], [77.4, 13315.0], [77.5, 13315.0], [77.6, 13315.0], [77.7, 13315.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13316.0], [78.2, 13316.0], [78.3, 13318.0], [78.4, 13323.0], [78.5, 13323.0], [78.6, 13323.0], [78.7, 13341.0], [78.8, 13345.0], [78.9, 13388.0], [79.0, 13546.0], [79.1, 13567.0], [79.2, 13568.0], [79.3, 13781.0], [79.4, 13819.0], [79.5, 13820.0], [79.6, 13822.0], [79.7, 13822.0], [79.8, 13822.0], [79.9, 13822.0], [80.0, 13822.0], [80.1, 13822.0], [80.2, 13823.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13823.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13824.0], [82.5, 13824.0], [82.6, 13825.0], [82.7, 13827.0], [82.8, 13827.0], [82.9, 13827.0], [83.0, 13952.0], [83.1, 14078.0], [83.2, 14079.0], [83.3, 14079.0], [83.4, 14079.0], [83.5, 14079.0], [83.6, 14080.0], [83.7, 14080.0], [83.8, 14332.0], [83.9, 14332.0], [84.0, 14332.0], [84.1, 14333.0], [84.2, 14334.0], [84.3, 14334.0], [84.4, 14334.0], [84.5, 14334.0], [84.6, 14334.0], [84.7, 14334.0], [84.8, 14334.0], [84.9, 14334.0], [85.0, 14334.0], [85.1, 14334.0], [85.2, 14334.0], [85.3, 14334.0], [85.4, 14334.0], [85.5, 14335.0], [85.6, 14335.0], [85.7, 14335.0], [85.8, 14335.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14335.0], [87.2, 14335.0], [87.3, 14335.0], [87.4, 14335.0], [87.5, 14335.0], [87.6, 14335.0], [87.7, 14335.0], [87.8, 14335.0], [87.9, 14335.0], [88.0, 14335.0], [88.1, 14335.0], [88.2, 14335.0], [88.3, 14335.0], [88.4, 14336.0], [88.5, 14336.0], [88.6, 14336.0], [88.7, 14336.0], [88.8, 14336.0], [88.9, 14336.0], [89.0, 14336.0], [89.1, 14336.0], [89.2, 14591.0], [89.3, 14591.0], [89.4, 14591.0], [89.5, 14592.0], [89.6, 14592.0], [89.7, 14846.0], [89.8, 14846.0], [89.9, 14846.0], [90.0, 14847.0], [90.1, 14848.0], [90.2, 14848.0], [90.3, 14848.0], [90.4, 15102.0], [90.5, 15102.0], [90.6, 15102.0], [90.7, 15102.0], [90.8, 15104.0], [90.9, 15358.0], [91.0, 15396.0], [91.1, 15448.0], [91.2, 15453.0], [91.3, 15697.0], [91.4, 15871.0], [91.5, 15871.0], [91.6, 16085.0], [91.7, 16382.0], [91.8, 16383.0], [91.9, 16384.0], [92.0, 16387.0], [92.1, 16895.0], [92.2, 17663.0], [92.3, 17955.0], [92.4, 18318.0], [92.5, 18374.0], [92.6, 18685.0], [92.7, 18687.0], [92.8, 18723.0], [92.9, 19199.0], [93.0, 19967.0], [93.1, 19971.0], [93.2, 20364.0], [93.3, 21151.0], [93.4, 21755.0], [93.5, 22268.0], [93.6, 23538.0], [93.7, 26111.0], [93.8, 26367.0], [93.9, 26368.0], [94.0, 28414.0], [94.1, 38399.0], [94.2, 41984.0], [94.3, 52760.0], [94.4, 52781.0], [94.5, 53503.0], [94.6, 57344.0], [94.7, 57371.0], [94.8, 77824.0], [94.9, 77825.0], [95.0, 81919.0], [95.1, 81919.0], [95.2, 81921.0], [95.3, 85248.0], [95.4, 90366.0], [95.5, 101631.0], [95.6, 101632.0], [95.7, 101632.0], [95.8, 105499.0], [95.9, 105727.0], [96.0, 106240.0], [96.1, 106337.0], [96.2, 106495.0], [96.3, 107008.0], [96.4, 107008.0], [96.5, 107264.0], [96.6, 107268.0], [96.7, 108031.0], [96.8, 108032.0], [96.9, 109823.0], [97.0, 110847.0], [97.1, 110848.0], [97.2, 117760.0], [97.3, 118783.0], [97.4, 118783.0], [97.5, 118785.0], [97.6, 119808.0], [97.7, 120829.0], [97.8, 120831.0], [97.9, 120831.0], [98.0, 120832.0], [98.1, 120832.0], [98.2, 122878.0], [98.3, 122879.0], [98.4, 122880.0], [98.5, 127231.0], [98.6, 140288.0], [98.7, 145408.0], [98.8, 154367.0], [98.9, 154880.0], [99.0, 178432.0], [99.1, 179715.0], [99.2, 209920.0], [99.3, 210945.0], [99.4, 211712.0], [99.5, 211713.0], [99.6, 211713.0], [99.7, 211968.0], [99.8, 212992.0], [99.9, 213246.0], [100.0, 213246.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 1170.0], [3.3, 1185.0], [3.4, 1202.0], [3.5, 1212.0], [3.6, 1219.0], [3.7, 1232.0], [3.8, 1246.0], [3.9, 1258.0], [4.0, 1271.0], [4.1, 1286.0], [4.2, 1335.0], [4.3, 1365.0], [4.4, 1416.0], [4.5, 1459.0], [4.6, 1527.0], [4.7, 1581.0], [4.8, 1692.0], [4.9, 1793.0], [5.0, 1906.0], [5.1, 1971.0], [5.2, 2021.0], [5.3, 2050.0], [5.4, 2077.0], [5.5, 2112.0], [5.6, 2179.0], [5.7, 2228.0], [5.8, 2279.0], [5.9, 2338.0], [6.0, 2395.0], [6.1, 2456.0], [6.2, 2496.0], [6.3, 2561.0], [6.4, 2594.0], [6.5, 2655.0], [6.6, 2708.0], [6.7, 2754.0], [6.8, 2812.0], [6.9, 2884.0], [7.0, 2928.0], [7.1, 2965.0], [7.2, 2997.0], [7.3, 3041.0], [7.4, 3079.0], [7.5, 3158.0], [7.6, 3229.0], [7.7, 3271.0], [7.8, 3337.0], [7.9, 3390.0], [8.0, 3438.0], [8.1, 3478.0], [8.2, 3515.0], [8.3, 3569.0], [8.4, 3607.0], [8.5, 3747.0], [8.6, 3842.0], [8.7, 3970.0], [8.8, 4004.0], [8.9, 4039.0], [9.0, 4095.0], [9.1, 4189.0], [9.2, 4267.0], [9.3, 4391.0], [9.4, 4448.0], [9.5, 4617.0], [9.6, 4720.0], [9.7, 4794.0], [9.8, 4839.0], [9.9, 4883.0], [10.0, 4918.0], [10.1, 4939.0], [10.2, 4955.0], [10.3, 4988.0], [10.4, 5003.0], [10.5, 5020.0], [10.6, 5040.0], [10.7, 5056.0], [10.8, 5102.0], [10.9, 5146.0], [11.0, 5206.0], [11.1, 5249.0], [11.2, 5283.0], [11.3, 5349.0], [11.4, 5437.0], [11.5, 5510.0], [11.6, 5569.0], [11.7, 5679.0], [11.8, 5809.0], [11.9, 5858.0], [12.0, 5891.0], [12.1, 5919.0], [12.2, 5943.0], [12.3, 5965.0], [12.4, 5976.0], [12.5, 5998.0], [12.6, 6019.0], [12.7, 6040.0], [12.8, 6054.0], [12.9, 6078.0], [13.0, 6093.0], [13.1, 6112.0], [13.2, 6131.0], [13.3, 6156.0], [13.4, 6188.0], [13.5, 6278.0], [13.6, 6328.0], [13.7, 6418.0], [13.8, 6489.0], [13.9, 6560.0], [14.0, 6687.0], [14.1, 6761.0], [14.2, 6875.0], [14.3, 6928.0], [14.4, 6994.0], [14.5, 7075.0], [14.6, 7120.0], [14.7, 7159.0], [14.8, 7166.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7169.0], [15.8, 7171.0], [15.9, 7201.0], [16.0, 7277.0], [16.1, 7371.0], [16.2, 7422.0], [16.3, 7423.0], [16.4, 7423.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7425.0], [16.8, 7428.0], [16.9, 7519.0], [17.0, 7593.0], [17.1, 7636.0], [17.2, 7678.0], [17.3, 7679.0], [17.4, 7680.0], [17.5, 7680.0], [17.6, 7684.0], [17.7, 7750.0], [17.8, 7796.0], [17.9, 7845.0], [18.0, 7886.0], [18.1, 7922.0], [18.2, 7935.0], [18.3, 7936.0], [18.4, 7936.0], [18.5, 7936.0], [18.6, 7937.0], [18.7, 7939.0], [18.8, 7956.0], [18.9, 7988.0], [19.0, 8031.0], [19.1, 8087.0], [19.2, 8107.0], [19.3, 8144.0], [19.4, 8178.0], [19.5, 8189.0], [19.6, 8191.0], [19.7, 8191.0], [19.8, 8192.0], [19.9, 8193.0], [20.0, 8217.0], [20.1, 8275.0], [20.2, 8299.0], [20.3, 8365.0], [20.4, 8412.0], [20.5, 8444.0], [20.6, 8447.0], [20.7, 8448.0], [20.8, 8448.0], [20.9, 8450.0], [21.0, 8487.0], [21.1, 8532.0], [21.2, 8619.0], [21.3, 8699.0], [21.4, 8703.0], [21.5, 8703.0], [21.6, 8704.0], [21.7, 8704.0], [21.8, 8748.0], [21.9, 8825.0], [22.0, 8958.0], [22.1, 8960.0], [22.2, 9079.0], [22.3, 9180.0], [22.4, 9213.0], [22.5, 9215.0], [22.6, 9215.0], [22.7, 9216.0], [22.8, 9216.0], [22.9, 9217.0], [23.0, 9220.0], [23.1, 9237.0], [23.2, 9258.0], [23.3, 9277.0], [23.4, 9313.0], [23.5, 9332.0], [23.6, 9356.0], [23.7, 9366.0], [23.8, 9382.0], [23.9, 9404.0], [24.0, 9417.0], [24.1, 9435.0], [24.2, 9470.0], [24.3, 9485.0], [24.4, 9519.0], [24.5, 9542.0], [24.6, 9576.0], [24.7, 9608.0], [24.8, 9664.0], [24.9, 9725.0], [25.0, 9727.0], [25.1, 9728.0], [25.2, 9734.0], [25.3, 9775.0], [25.4, 9824.0], [25.5, 9877.0], [25.6, 9922.0], [25.7, 9940.0], [25.8, 9954.0], [25.9, 9974.0], [26.0, 9982.0], [26.1, 9983.0], [26.2, 9984.0], [26.3, 9984.0], [26.4, 9985.0], [26.5, 9994.0], [26.6, 10019.0], [26.7, 10034.0], [26.8, 10059.0], [26.9, 10077.0], [27.0, 10110.0], [27.1, 10139.0], [27.2, 10174.0], [27.3, 10200.0], [27.4, 10214.0], [27.5, 10221.0], [27.6, 10231.0], [27.7, 10234.0], [27.8, 10239.0], [27.9, 10240.0], [28.0, 10240.0], [28.1, 10241.0], [28.2, 10252.0], [28.3, 10262.0], [28.4, 10270.0], [28.5, 10279.0], [28.6, 10287.0], [28.7, 10296.0], [28.8, 10308.0], [28.9, 10317.0], [29.0, 10327.0], [29.1, 10338.0], [29.2, 10346.0], [29.3, 10353.0], [29.4, 10362.0], [29.5, 10367.0], [29.6, 10371.0], [29.7, 10374.0], [29.8, 10379.0], [29.9, 10384.0], [30.0, 10390.0], [30.1, 10395.0], [30.2, 10401.0], [30.3, 10410.0], [30.4, 10417.0], [30.5, 10421.0], [30.6, 10428.0], [30.7, 10432.0], [30.8, 10439.0], [30.9, 10444.0], [31.0, 10449.0], [31.1, 10454.0], [31.2, 10457.0], [31.3, 10464.0], [31.4, 10472.0], [31.5, 10476.0], [31.6, 10483.0], [31.7, 10491.0], [31.8, 10495.0], [31.9, 10499.0], [32.0, 10506.0], [32.1, 10513.0], [32.2, 10516.0], [32.3, 10519.0], [32.4, 10522.0], [32.5, 10525.0], [32.6, 10529.0], [32.7, 10533.0], [32.8, 10536.0], [32.9, 10538.0], [33.0, 10541.0], [33.1, 10548.0], [33.2, 10553.0], [33.3, 10556.0], [33.4, 10562.0], [33.5, 10566.0], [33.6, 10570.0], [33.7, 10574.0], [33.8, 10579.0], [33.9, 10584.0], [34.0, 10589.0], [34.1, 10592.0], [34.2, 10597.0], [34.3, 10599.0], [34.4, 10601.0], [34.5, 10608.0], [34.6, 10614.0], [34.7, 10621.0], [34.8, 10623.0], [34.9, 10626.0], [35.0, 10631.0], [35.1, 10634.0], [35.2, 10637.0], [35.3, 10642.0], [35.4, 10645.0], [35.5, 10650.0], [35.6, 10652.0], [35.7, 10656.0], [35.8, 10659.0], [35.9, 10663.0], [36.0, 10667.0], [36.1, 10670.0], [36.2, 10674.0], [36.3, 10677.0], [36.4, 10679.0], [36.5, 10681.0], [36.6, 10685.0], [36.7, 10689.0], [36.8, 10691.0], [36.9, 10695.0], [37.0, 10698.0], [37.1, 10702.0], [37.2, 10704.0], [37.3, 10707.0], [37.4, 10712.0], [37.5, 10714.0], [37.6, 10719.0], [37.7, 10722.0], [37.8, 10725.0], [37.9, 10730.0], [38.0, 10733.0], [38.1, 10736.0], [38.2, 10739.0], [38.3, 10742.0], [38.4, 10745.0], [38.5, 10748.0], [38.6, 10750.0], [38.7, 10751.0], [38.8, 10752.0], [38.9, 10754.0], [39.0, 10756.0], [39.1, 10759.0], [39.2, 10764.0], [39.3, 10769.0], [39.4, 10772.0], [39.5, 10775.0], [39.6, 10780.0], [39.7, 10782.0], [39.8, 10784.0], [39.9, 10786.0], [40.0, 10790.0], [40.1, 10793.0], [40.2, 10795.0], [40.3, 10799.0], [40.4, 10803.0], [40.5, 10805.0], [40.6, 10808.0], [40.7, 10810.0], [40.8, 10812.0], [40.9, 10814.0], [41.0, 10817.0], [41.1, 10820.0], [41.2, 10823.0], [41.3, 10826.0], [41.4, 10828.0], [41.5, 10831.0], [41.6, 10833.0], [41.7, 10836.0], [41.8, 10838.0], [41.9, 10841.0], [42.0, 10843.0], [42.1, 10845.0], [42.2, 10847.0], [42.3, 10849.0], [42.4, 10853.0], [42.5, 10855.0], [42.6, 10857.0], [42.7, 10860.0], [42.8, 10863.0], [42.9, 10864.0], [43.0, 10866.0], [43.1, 10868.0], [43.2, 10870.0], [43.3, 10873.0], [43.4, 10875.0], [43.5, 10877.0], [43.6, 10879.0], [43.7, 10880.0], [43.8, 10883.0], [43.9, 10884.0], [44.0, 10887.0], [44.1, 10890.0], [44.2, 10891.0], [44.3, 10895.0], [44.4, 10897.0], [44.5, 10898.0], [44.6, 10900.0], [44.7, 10902.0], [44.8, 10904.0], [44.9, 10906.0], [45.0, 10908.0], [45.1, 10910.0], [45.2, 10912.0], [45.3, 10915.0], [45.4, 10918.0], [45.5, 10921.0], [45.6, 10923.0], [45.7, 10926.0], [45.8, 10928.0], [45.9, 10929.0], [46.0, 10930.0], [46.1, 10931.0], [46.2, 10933.0], [46.3, 10935.0], [46.4, 10937.0], [46.5, 10939.0], [46.6, 10940.0], [46.7, 10942.0], [46.8, 10944.0], [46.9, 10945.0], [47.0, 10947.0], [47.1, 10950.0], [47.2, 10951.0], [47.3, 10953.0], [47.4, 10955.0], [47.5, 10958.0], [47.6, 10961.0], [47.7, 10964.0], [47.8, 10965.0], [47.9, 10969.0], [48.0, 10970.0], [48.1, 10971.0], [48.2, 10973.0], [48.3, 10974.0], [48.4, 10976.0], [48.5, 10979.0], [48.6, 10982.0], [48.7, 10983.0], [48.8, 10984.0], [48.9, 10985.0], [49.0, 10987.0], [49.1, 10988.0], [49.2, 10990.0], [49.3, 10991.0], [49.4, 10992.0], [49.5, 10994.0], [49.6, 10996.0], [49.7, 10998.0], [49.8, 11000.0], [49.9, 11004.0], [50.0, 11006.0], [50.1, 11008.0], [50.2, 11009.0], [50.3, 11010.0], [50.4, 11011.0], [50.5, 11014.0], [50.6, 11017.0], [50.7, 11018.0], [50.8, 11020.0], [50.9, 11021.0], [51.0, 11023.0], [51.1, 11024.0], [51.2, 11027.0], [51.3, 11029.0], [51.4, 11031.0], [51.5, 11033.0], [51.6, 11034.0], [51.7, 11037.0], [51.8, 11038.0], [51.9, 11040.0], [52.0, 11042.0], [52.1, 11043.0], [52.2, 11045.0], [52.3, 11047.0], [52.4, 11048.0], [52.5, 11051.0], [52.6, 11053.0], [52.7, 11055.0], [52.8, 11057.0], [52.9, 11057.0], [53.0, 11059.0], [53.1, 11060.0], [53.2, 11061.0], [53.3, 11063.0], [53.4, 11064.0], [53.5, 11065.0], [53.6, 11068.0], [53.7, 11069.0], [53.8, 11072.0], [53.9, 11074.0], [54.0, 11076.0], [54.1, 11078.0], [54.2, 11079.0], [54.3, 11082.0], [54.4, 11084.0], [54.5, 11085.0], [54.6, 11087.0], [54.7, 11089.0], [54.8, 11091.0], [54.9, 11092.0], [55.0, 11094.0], [55.1, 11097.0], [55.2, 11100.0], [55.3, 11101.0], [55.4, 11102.0], [55.5, 11103.0], [55.6, 11104.0], [55.7, 11106.0], [55.8, 11107.0], [55.9, 11109.0], [56.0, 11111.0], [56.1, 11113.0], [56.2, 11115.0], [56.3, 11117.0], [56.4, 11119.0], [56.5, 11120.0], [56.6, 11122.0], [56.7, 11124.0], [56.8, 11125.0], [56.9, 11127.0], [57.0, 11129.0], [57.1, 11131.0], [57.2, 11132.0], [57.3, 11134.0], [57.4, 11136.0], [57.5, 11138.0], [57.6, 11140.0], [57.7, 11142.0], [57.8, 11143.0], [57.9, 11145.0], [58.0, 11147.0], [58.1, 11151.0], [58.2, 11152.0], [58.3, 11153.0], [58.4, 11157.0], [58.5, 11159.0], [58.6, 11161.0], [58.7, 11165.0], [58.8, 11167.0], [58.9, 11169.0], [59.0, 11171.0], [59.1, 11173.0], [59.2, 11175.0], [59.3, 11177.0], [59.4, 11178.0], [59.5, 11181.0], [59.6, 11182.0], [59.7, 11186.0], [59.8, 11188.0], [59.9, 11191.0], [60.0, 11192.0], [60.1, 11194.0], [60.2, 11196.0], [60.3, 11199.0], [60.4, 11201.0], [60.5, 11202.0], [60.6, 11204.0], [60.7, 11206.0], [60.8, 11209.0], [60.9, 11211.0], [61.0, 11213.0], [61.1, 11216.0], [61.2, 11221.0], [61.3, 11224.0], [61.4, 11230.0], [61.5, 11232.0], [61.6, 11234.0], [61.7, 11237.0], [61.8, 11240.0], [61.9, 11243.0], [62.0, 11246.0], [62.1, 11248.0], [62.2, 11250.0], [62.3, 11253.0], [62.4, 11255.0], [62.5, 11260.0], [62.6, 11261.0], [62.7, 11263.0], [62.8, 11264.0], [62.9, 11264.0], [63.0, 11266.0], [63.1, 11268.0], [63.2, 11271.0], [63.3, 11273.0], [63.4, 11275.0], [63.5, 11278.0], [63.6, 11281.0], [63.7, 11284.0], [63.8, 11286.0], [63.9, 11288.0], [64.0, 11291.0], [64.1, 11293.0], [64.2, 11295.0], [64.3, 11299.0], [64.4, 11303.0], [64.5, 11305.0], [64.6, 11307.0], [64.7, 11311.0], [64.8, 11315.0], [64.9, 11319.0], [65.0, 11321.0], [65.1, 11326.0], [65.2, 11329.0], [65.3, 11332.0], [65.4, 11337.0], [65.5, 11340.0], [65.6, 11344.0], [65.7, 11349.0], [65.8, 11353.0], [65.9, 11356.0], [66.0, 11361.0], [66.1, 11365.0], [66.2, 11371.0], [66.3, 11376.0], [66.4, 11379.0], [66.5, 11384.0], [66.6, 11388.0], [66.7, 11392.0], [66.8, 11395.0], [66.9, 11400.0], [67.0, 11404.0], [67.1, 11408.0], [67.2, 11412.0], [67.3, 11417.0], [67.4, 11421.0], [67.5, 11426.0], [67.6, 11429.0], [67.7, 11436.0], [67.8, 11440.0], [67.9, 11445.0], [68.0, 11449.0], [68.1, 11452.0], [68.2, 11458.0], [68.3, 11462.0], [68.4, 11470.0], [68.5, 11473.0], [68.6, 11479.0], [68.7, 11483.0], [68.8, 11488.0], [68.9, 11492.0], [69.0, 11497.0], [69.1, 11505.0], [69.2, 11511.0], [69.3, 11516.0], [69.4, 11519.0], [69.5, 11520.0], [69.6, 11524.0], [69.7, 11532.0], [69.8, 11534.0], [69.9, 11540.0], [70.0, 11545.0], [70.1, 11552.0], [70.2, 11554.0], [70.3, 11558.0], [70.4, 11563.0], [70.5, 11568.0], [70.6, 11574.0], [70.7, 11581.0], [70.8, 11583.0], [70.9, 11587.0], [71.0, 11591.0], [71.1, 11597.0], [71.2, 11605.0], [71.3, 11611.0], [71.4, 11616.0], [71.5, 11623.0], [71.6, 11627.0], [71.7, 11635.0], [71.8, 11642.0], [71.9, 11647.0], [72.0, 11653.0], [72.1, 11659.0], [72.2, 11663.0], [72.3, 11669.0], [72.4, 11676.0], [72.5, 11681.0], [72.6, 11690.0], [72.7, 11695.0], [72.8, 11700.0], [72.9, 11705.0], [73.0, 11709.0], [73.1, 11721.0], [73.2, 11727.0], [73.3, 11735.0], [73.4, 11742.0], [73.5, 11745.0], [73.6, 11750.0], [73.7, 11758.0], [73.8, 11762.0], [73.9, 11768.0], [74.0, 11774.0], [74.1, 11775.0], [74.2, 11775.0], [74.3, 11776.0], [74.4, 11777.0], [74.5, 11783.0], [74.6, 11787.0], [74.7, 11794.0], [74.8, 11801.0], [74.9, 11807.0], [75.0, 11813.0], [75.1, 11817.0], [75.2, 11826.0], [75.3, 11829.0], [75.4, 11840.0], [75.5, 11849.0], [75.6, 11851.0], [75.7, 11857.0], [75.8, 11862.0], [75.9, 11869.0], [76.0, 11875.0], [76.1, 11881.0], [76.2, 11888.0], [76.3, 11895.0], [76.4, 11903.0], [76.5, 11908.0], [76.6, 11916.0], [76.7, 11922.0], [76.8, 11932.0], [76.9, 11946.0], [77.0, 11953.0], [77.1, 11962.0], [77.2, 11970.0], [77.3, 11975.0], [77.4, 11984.0], [77.5, 11989.0], [77.6, 11997.0], [77.7, 12003.0], [77.8, 12012.0], [77.9, 12017.0], [78.0, 12022.0], [78.1, 12031.0], [78.2, 12035.0], [78.3, 12043.0], [78.4, 12052.0], [78.5, 12058.0], [78.6, 12068.0], [78.7, 12075.0], [78.8, 12079.0], [78.9, 12086.0], [79.0, 12095.0], [79.1, 12101.0], [79.2, 12108.0], [79.3, 12115.0], [79.4, 12122.0], [79.5, 12127.0], [79.6, 12136.0], [79.7, 12143.0], [79.8, 12148.0], [79.9, 12157.0], [80.0, 12165.0], [80.1, 12175.0], [80.2, 12184.0], [80.3, 12194.0], [80.4, 12198.0], [80.5, 12209.0], [80.6, 12217.0], [80.7, 12227.0], [80.8, 12234.0], [80.9, 12241.0], [81.0, 12246.0], [81.1, 12260.0], [81.2, 12273.0], [81.3, 12285.0], [81.4, 12288.0], [81.5, 12297.0], [81.6, 12315.0], [81.7, 12344.0], [81.8, 12377.0], [81.9, 12389.0], [82.0, 12422.0], [82.1, 12466.0], [82.2, 12512.0], [82.3, 12543.0], [82.4, 12544.0], [82.5, 12555.0], [82.6, 12594.0], [82.7, 12641.0], [82.8, 12686.0], [82.9, 12733.0], [83.0, 12761.0], [83.1, 12799.0], [83.2, 12800.0], [83.3, 12801.0], [83.4, 12852.0], [83.5, 13001.0], [83.6, 13055.0], [83.7, 13150.0], [83.8, 13185.0], [83.9, 13229.0], [84.0, 13299.0], [84.1, 13308.0], [84.2, 13308.0], [84.3, 13309.0], [84.4, 13309.0], [84.5, 13310.0], [84.6, 13310.0], [84.7, 13310.0], [84.8, 13310.0], [84.9, 13310.0], [85.0, 13311.0], [85.1, 13311.0], [85.2, 13311.0], [85.3, 13311.0], [85.4, 13311.0], [85.5, 13311.0], [85.6, 13311.0], [85.7, 13311.0], [85.8, 13311.0], [85.9, 13311.0], [86.0, 13311.0], [86.1, 13311.0], [86.2, 13311.0], [86.3, 13311.0], [86.4, 13311.0], [86.5, 13311.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13312.0], [87.1, 13312.0], [87.2, 13312.0], [87.3, 13312.0], [87.4, 13312.0], [87.5, 13312.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13313.0], [90.2, 13313.0], [90.3, 13313.0], [90.4, 13313.0], [90.5, 13313.0], [90.6, 13313.0], [90.7, 13313.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13314.0], [91.1, 13314.0], [91.2, 13315.0], [91.3, 13315.0], [91.4, 13316.0], [91.5, 13344.0], [91.6, 13345.0], [91.7, 13363.0], [91.8, 13369.0], [91.9, 13409.0], [92.0, 13457.0], [92.1, 13567.0], [92.2, 13658.0], [92.3, 13798.0], [92.4, 13822.0], [92.5, 13823.0], [92.6, 13823.0], [92.7, 13823.0], [92.8, 13824.0], [92.9, 13824.0], [93.0, 13824.0], [93.1, 13825.0], [93.2, 13825.0], [93.3, 13826.0], [93.4, 13856.0], [93.5, 13888.0], [93.6, 14065.0], [93.7, 14079.0], [93.8, 14079.0], [93.9, 14080.0], [94.0, 14112.0], [94.1, 14297.0], [94.2, 14332.0], [94.3, 14333.0], [94.4, 14334.0], [94.5, 14334.0], [94.6, 14335.0], [94.7, 14335.0], [94.8, 14335.0], [94.9, 14335.0], [95.0, 14335.0], [95.1, 14335.0], [95.2, 14336.0], [95.3, 14336.0], [95.4, 14336.0], [95.5, 14336.0], [95.6, 14415.0], [95.7, 14581.0], [95.8, 14594.0], [95.9, 14718.0], [96.0, 14832.0], [96.1, 14848.0], [96.2, 14897.0], [96.3, 15098.0], [96.4, 15152.0], [96.5, 15358.0], [96.6, 15499.0], [96.7, 15700.0], [96.8, 15913.0], [96.9, 16382.0], [97.0, 16385.0], [97.1, 16780.0], [97.2, 17187.0], [97.3, 17520.0], [97.4, 18290.0], [97.5, 18689.0], [97.6, 19508.0], [97.7, 20422.0], [97.8, 21557.0], [97.9, 23222.0], [98.0, 27139.0], [98.1, 42749.0], [98.2, 54083.0], [98.3, 58319.0], [98.4, 60858.0], [98.5, 71936.0], [98.6, 78334.0], [98.7, 90367.0], [98.8, 105980.0], [98.9, 106290.0], [99.0, 106791.0], [99.1, 107264.0], [99.2, 111613.0], [99.3, 117761.0], [99.4, 119808.0], [99.5, 122879.0], [99.6, 127232.0], [99.7, 154879.0], [99.8, 181247.0], [99.9, 211969.0], [100.0, 213247.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 5.0], [6.9, 27.0], [7.0, 27.0], [7.1, 30.0], [7.2, 34.0], [7.3, 34.0], [7.4, 35.0], [7.5, 37.0], [7.6, 38.0], [7.7, 50.0], [7.8, 110.0], [7.9, 329.0], [8.0, 534.0], [8.1, 676.0], [8.2, 873.0], [8.3, 944.0], [8.4, 1007.0], [8.5, 1017.0], [8.6, 1254.0], [8.7, 1477.0], [8.8, 1516.0], [8.9, 1665.0], [9.0, 1774.0], [9.1, 1894.0], [9.2, 2047.0], [9.3, 2098.0], [9.4, 2289.0], [9.5, 2366.0], [9.6, 2415.0], [9.7, 2867.0], [9.8, 3078.0], [9.9, 3220.0], [10.0, 3364.0], [10.1, 3621.0], [10.2, 3689.0], [10.3, 3716.0], [10.4, 3778.0], [10.5, 3969.0], [10.6, 4001.0], [10.7, 4102.0], [10.8, 4328.0], [10.9, 4549.0], [11.0, 4614.0], [11.1, 4672.0], [11.2, 4737.0], [11.3, 4841.0], [11.4, 4903.0], [11.5, 5001.0], [11.6, 5043.0], [11.7, 5224.0], [11.8, 5354.0], [11.9, 5496.0], [12.0, 5723.0], [12.1, 5911.0], [12.2, 6296.0], [12.3, 6520.0], [12.4, 6635.0], [12.5, 6690.0], [12.6, 6806.0], [12.7, 6865.0], [12.8, 7036.0], [12.9, 7089.0], [13.0, 7100.0], [13.1, 7111.0], [13.2, 7131.0], [13.3, 7136.0], [13.4, 7147.0], [13.5, 7155.0], [13.6, 7166.0], [13.7, 7166.0], [13.8, 7166.0], [13.9, 7166.0], [14.0, 7166.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7169.0], [16.4, 7169.0], [16.5, 7169.0], [16.6, 7171.0], [16.7, 7172.0], [16.8, 7194.0], [16.9, 7204.0], [17.0, 7263.0], [17.1, 7301.0], [17.2, 7324.0], [17.3, 7341.0], [17.4, 7378.0], [17.5, 7419.0], [17.6, 7422.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7425.0], [18.8, 7425.0], [18.9, 7425.0], [19.0, 7428.0], [19.1, 7471.0], [19.2, 7532.0], [19.3, 7577.0], [19.4, 7646.0], [19.5, 7675.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7681.0], [20.5, 7741.0], [20.6, 7756.0], [20.7, 7861.0], [20.8, 7901.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7936.0], [21.6, 7936.0], [21.7, 7936.0], [21.8, 7937.0], [21.9, 7937.0], [22.0, 7937.0], [22.1, 7937.0], [22.2, 7937.0], [22.3, 7938.0], [22.4, 7938.0], [22.5, 7939.0], [22.6, 7939.0], [22.7, 7962.0], [22.8, 7998.0], [22.9, 8040.0], [23.0, 8115.0], [23.1, 8135.0], [23.2, 8188.0], [23.3, 8190.0], [23.4, 8190.0], [23.5, 8190.0], [23.6, 8191.0], [23.7, 8191.0], [23.8, 8191.0], [23.9, 8191.0], [24.0, 8192.0], [24.1, 8192.0], [24.2, 8192.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8193.0], [24.9, 8196.0], [25.0, 8277.0], [25.1, 8312.0], [25.2, 8336.0], [25.3, 8342.0], [25.4, 8369.0], [25.5, 8443.0], [25.6, 8446.0], [25.7, 8446.0], [25.8, 8447.0], [25.9, 8448.0], [26.0, 8449.0], [26.1, 8449.0], [26.2, 8450.0], [26.3, 8450.0], [26.4, 8615.0], [26.5, 8661.0], [26.6, 8692.0], [26.7, 8701.0], [26.8, 8702.0], [26.9, 8702.0], [27.0, 8703.0], [27.1, 8703.0], [27.2, 8704.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8705.0], [27.6, 8707.0], [27.7, 8707.0], [27.8, 8717.0], [27.9, 8779.0], [28.0, 8835.0], [28.1, 8922.0], [28.2, 8954.0], [28.3, 8959.0], [28.4, 8959.0], [28.5, 8963.0], [28.6, 9033.0], [28.7, 9077.0], [28.8, 9123.0], [28.9, 9176.0], [29.0, 9183.0], [29.1, 9210.0], [29.2, 9211.0], [29.3, 9213.0], [29.4, 9214.0], [29.5, 9215.0], [29.6, 9215.0], [29.7, 9215.0], [29.8, 9215.0], [29.9, 9215.0], [30.0, 9215.0], [30.1, 9215.0], [30.2, 9216.0], [30.3, 9216.0], [30.4, 9216.0], [30.5, 9216.0], [30.6, 9216.0], [30.7, 9216.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9217.0], [31.5, 9217.0], [31.6, 9221.0], [31.7, 9230.0], [31.8, 9253.0], [31.9, 9272.0], [32.0, 9278.0], [32.1, 9291.0], [32.2, 9323.0], [32.3, 9340.0], [32.4, 9348.0], [32.5, 9413.0], [32.6, 9446.0], [32.7, 9472.0], [32.8, 9472.0], [32.9, 9510.0], [33.0, 9542.0], [33.1, 9551.0], [33.2, 9558.0], [33.3, 9573.0], [33.4, 9587.0], [33.5, 9607.0], [33.6, 9628.0], [33.7, 9632.0], [33.8, 9640.0], [33.9, 9667.0], [34.0, 9699.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9727.0], [34.4, 9727.0], [34.5, 9727.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9729.0], [35.0, 9764.0], [35.1, 9789.0], [35.2, 9792.0], [35.3, 9793.0], [35.4, 9799.0], [35.5, 9807.0], [35.6, 9840.0], [35.7, 9844.0], [35.8, 9870.0], [35.9, 9890.0], [36.0, 9910.0], [36.1, 9932.0], [36.2, 9932.0], [36.3, 9952.0], [36.4, 9983.0], [36.5, 9984.0], [36.6, 9984.0], [36.7, 9984.0], [36.8, 9984.0], [36.9, 9984.0], [37.0, 9985.0], [37.1, 9992.0], [37.2, 10010.0], [37.3, 10067.0], [37.4, 10091.0], [37.5, 10167.0], [37.6, 10188.0], [37.7, 10193.0], [37.8, 10211.0], [37.9, 10215.0], [38.0, 10231.0], [38.1, 10236.0], [38.2, 10239.0], [38.3, 10239.0], [38.4, 10239.0], [38.5, 10239.0], [38.6, 10240.0], [38.7, 10240.0], [38.8, 10240.0], [38.9, 10240.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10246.0], [39.3, 10288.0], [39.4, 10318.0], [39.5, 10353.0], [39.6, 10383.0], [39.7, 10416.0], [39.8, 10429.0], [39.9, 10432.0], [40.0, 10478.0], [40.1, 10488.0], [40.2, 10495.0], [40.3, 10503.0], [40.4, 10503.0], [40.5, 10513.0], [40.6, 10596.0], [40.7, 10653.0], [40.8, 10677.0], [40.9, 10699.0], [41.0, 10718.0], [41.1, 10749.0], [41.2, 10750.0], [41.3, 10750.0], [41.4, 10751.0], [41.5, 10751.0], [41.6, 10751.0], [41.7, 10751.0], [41.8, 10751.0], [41.9, 10751.0], [42.0, 10751.0], [42.1, 10751.0], [42.2, 10752.0], [42.3, 10752.0], [42.4, 10755.0], [42.5, 10805.0], [42.6, 10820.0], [42.7, 10825.0], [42.8, 10840.0], [42.9, 10856.0], [43.0, 10898.0], [43.1, 10952.0], [43.2, 10969.0], [43.3, 10988.0], [43.4, 11000.0], [43.5, 11007.0], [43.6, 11007.0], [43.7, 11007.0], [43.8, 11007.0], [43.9, 11008.0], [44.0, 11011.0], [44.1, 11026.0], [44.2, 11061.0], [44.3, 11089.0], [44.4, 11126.0], [44.5, 11157.0], [44.6, 11206.0], [44.7, 11214.0], [44.8, 11247.0], [44.9, 11262.0], [45.0, 11263.0], [45.1, 11263.0], [45.2, 11264.0], [45.3, 11382.0], [45.4, 11403.0], [45.5, 11433.0], [45.6, 11545.0], [45.7, 11568.0], [45.8, 11607.0], [45.9, 11697.0], [46.0, 11723.0], [46.1, 11757.0], [46.2, 11774.0], [46.3, 11775.0], [46.4, 11775.0], [46.5, 11775.0], [46.6, 11775.0], [46.7, 11775.0], [46.8, 11776.0], [46.9, 11776.0], [47.0, 11776.0], [47.1, 11776.0], [47.2, 11776.0], [47.3, 11784.0], [47.4, 11917.0], [47.5, 11990.0], [47.6, 12030.0], [47.7, 12031.0], [47.8, 12032.0], [47.9, 12033.0], [48.0, 12060.0], [48.1, 12168.0], [48.2, 12263.0], [48.3, 12286.0], [48.4, 12287.0], [48.5, 12287.0], [48.6, 12287.0], [48.7, 12288.0], [48.8, 12288.0], [48.9, 12288.0], [49.0, 12315.0], [49.1, 12526.0], [49.2, 12540.0], [49.3, 12543.0], [49.4, 12543.0], [49.5, 12543.0], [49.6, 12543.0], [49.7, 12543.0], [49.8, 12544.0], [49.9, 12544.0], [50.0, 12544.0], [50.1, 12544.0], [50.2, 12545.0], [50.3, 12563.0], [50.4, 12642.0], [50.5, 12695.0], [50.6, 12771.0], [50.7, 12784.0], [50.8, 12799.0], [50.9, 12799.0], [51.0, 12799.0], [51.1, 12799.0], [51.2, 12800.0], [51.3, 12800.0], [51.4, 12801.0], [51.5, 12801.0], [51.6, 12838.0], [51.7, 12855.0], [51.8, 12937.0], [51.9, 12990.0], [52.0, 13055.0], [52.1, 13056.0], [52.2, 13056.0], [52.3, 13056.0], [52.4, 13057.0], [52.5, 13165.0], [52.6, 13168.0], [52.7, 13172.0], [52.8, 13175.0], [52.9, 13181.0], [53.0, 13187.0], [53.1, 13203.0], [53.2, 13211.0], [53.3, 13214.0], [53.4, 13219.0], [53.5, 13227.0], [53.6, 13248.0], [53.7, 13267.0], [53.8, 13267.0], [53.9, 13270.0], [54.0, 13287.0], [54.1, 13289.0], [54.2, 13293.0], [54.3, 13296.0], [54.4, 13300.0], [54.5, 13302.0], [54.6, 13302.0], [54.7, 13306.0], [54.8, 13307.0], [54.9, 13308.0], [55.0, 13308.0], [55.1, 13308.0], [55.2, 13308.0], [55.3, 13308.0], [55.4, 13309.0], [55.5, 13309.0], [55.6, 13309.0], [55.7, 13309.0], [55.8, 13309.0], [55.9, 13310.0], [56.0, 13310.0], [56.1, 13310.0], [56.2, 13310.0], [56.3, 13310.0], [56.4, 13310.0], [56.5, 13310.0], [56.6, 13310.0], [56.7, 13310.0], [56.8, 13311.0], [56.9, 13311.0], [57.0, 13311.0], [57.1, 13311.0], [57.2, 13311.0], [57.3, 13311.0], [57.4, 13311.0], [57.5, 13311.0], [57.6, 13311.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13314.0], [72.9, 13314.0], [73.0, 13314.0], [73.1, 13314.0], [73.2, 13314.0], [73.3, 13315.0], [73.4, 13315.0], [73.5, 13315.0], [73.6, 13315.0], [73.7, 13315.0], [73.8, 13315.0], [73.9, 13316.0], [74.0, 13318.0], [74.1, 13323.0], [74.2, 13325.0], [74.3, 13326.0], [74.4, 13330.0], [74.5, 13331.0], [74.6, 13339.0], [74.7, 13342.0], [74.8, 13349.0], [74.9, 13352.0], [75.0, 13357.0], [75.1, 13364.0], [75.2, 13367.0], [75.3, 13372.0], [75.4, 13375.0], [75.5, 13383.0], [75.6, 13392.0], [75.7, 13397.0], [75.8, 13402.0], [75.9, 13406.0], [76.0, 13412.0], [76.1, 13414.0], [76.2, 13445.0], [76.3, 13458.0], [76.4, 13501.0], [76.5, 13508.0], [76.6, 13567.0], [76.7, 13635.0], [76.8, 13733.0], [76.9, 13743.0], [77.0, 13770.0], [77.1, 13790.0], [77.2, 13813.0], [77.3, 13820.0], [77.4, 13821.0], [77.5, 13822.0], [77.6, 13823.0], [77.7, 13823.0], [77.8, 13823.0], [77.9, 13823.0], [78.0, 13823.0], [78.1, 13823.0], [78.2, 13823.0], [78.3, 13823.0], [78.4, 13823.0], [78.5, 13824.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13825.0], [80.0, 13825.0], [80.1, 13825.0], [80.2, 13826.0], [80.3, 13853.0], [80.4, 13886.0], [80.5, 13910.0], [80.6, 13949.0], [80.7, 13959.0], [80.8, 14078.0], [80.9, 14079.0], [81.0, 14079.0], [81.1, 14079.0], [81.2, 14080.0], [81.3, 14081.0], [81.4, 14081.0], [81.5, 14170.0], [81.6, 14179.0], [81.7, 14310.0], [81.8, 14326.0], [81.9, 14333.0], [82.0, 14333.0], [82.1, 14333.0], [82.2, 14334.0], [82.3, 14334.0], [82.4, 14334.0], [82.5, 14334.0], [82.6, 14334.0], [82.7, 14334.0], [82.8, 14335.0], [82.9, 14335.0], [83.0, 14335.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14336.0], [84.8, 14336.0], [84.9, 14336.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14337.0], [86.1, 14337.0], [86.2, 14357.0], [86.3, 14430.0], [86.4, 14452.0], [86.5, 14491.0], [86.6, 14592.0], [86.7, 14593.0], [86.8, 14629.0], [86.9, 14847.0], [87.0, 14848.0], [87.1, 14849.0], [87.2, 14925.0], [87.3, 15031.0], [87.4, 15103.0], [87.5, 15359.0], [87.6, 15359.0], [87.7, 15419.0], [87.8, 15453.0], [87.9, 15615.0], [88.0, 15760.0], [88.1, 15871.0], [88.2, 15872.0], [88.3, 15872.0], [88.4, 16051.0], [88.5, 16101.0], [88.6, 16382.0], [88.7, 16383.0], [88.8, 16384.0], [88.9, 16604.0], [89.0, 16843.0], [89.1, 16895.0], [89.2, 16908.0], [89.3, 17124.0], [89.4, 17259.0], [89.5, 17314.0], [89.6, 17884.0], [89.7, 17932.0], [89.8, 18175.0], [89.9, 18176.0], [90.0, 18176.0], [90.1, 18306.0], [90.2, 18428.0], [90.3, 18687.0], [90.4, 18687.0], [90.5, 18691.0], [90.6, 19191.0], [90.7, 19821.0], [90.8, 19971.0], [90.9, 19972.0], [91.0, 20479.0], [91.1, 21756.0], [91.2, 22269.0], [91.3, 24520.0], [91.4, 26251.0], [91.5, 26497.0], [91.6, 26757.0], [91.7, 27647.0], [91.8, 27712.0], [91.9, 28415.0], [92.0, 39264.0], [92.1, 52698.0], [92.2, 53111.0], [92.3, 56363.0], [92.4, 57137.0], [92.5, 57152.0], [92.6, 57173.0], [92.7, 57398.0], [92.8, 57447.0], [92.9, 58402.0], [93.0, 59559.0], [93.1, 65127.0], [93.2, 74982.0], [93.3, 75982.0], [93.4, 77825.0], [93.5, 79565.0], [93.6, 81919.0], [93.7, 81920.0], [93.8, 81920.0], [93.9, 82756.0], [94.0, 85248.0], [94.1, 90368.0], [94.2, 90368.0], [94.3, 90369.0], [94.4, 91041.0], [94.5, 101631.0], [94.6, 105378.0], [94.7, 105729.0], [94.8, 105902.0], [94.9, 106238.0], [95.0, 106239.0], [95.1, 106521.0], [95.2, 106620.0], [95.3, 106669.0], [95.4, 106798.0], [95.5, 106901.0], [95.6, 106938.0], [95.7, 106966.0], [95.8, 106992.0], [95.9, 107011.0], [96.0, 107038.0], [96.1, 107141.0], [96.2, 107235.0], [96.3, 107264.0], [96.4, 107265.0], [96.5, 107284.0], [96.6, 108032.0], [96.7, 108032.0], [96.8, 109281.0], [96.9, 110351.0], [97.0, 111613.0], [97.1, 112334.0], [97.2, 114427.0], [97.3, 116331.0], [97.4, 118782.0], [97.5, 118782.0], [97.6, 118784.0], [97.7, 118784.0], [97.8, 118785.0], [97.9, 118786.0], [98.0, 120832.0], [98.1, 120833.0], [98.2, 120834.0], [98.3, 121343.0], [98.4, 122824.0], [98.5, 122880.0], [98.6, 124160.0], [98.7, 128527.0], [98.8, 131928.0], [98.9, 140287.0], [99.0, 145408.0], [99.1, 154368.0], [99.2, 154880.0], [99.3, 157953.0], [99.4, 157953.0], [99.5, 209920.0], [99.6, 211198.0], [99.7, 211724.0], [99.8, 212722.0], [99.9, 213246.0], [100.0, 213247.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 782.0, "series": [{"data": [[0.0, 143.0], [178400.0, 2.0], [212900.0, 2.0], [81900.0, 5.0], [106700.0, 1.0], [118700.0, 6.0], [140200.0, 1.0], [212200.0, 1.0], [210600.0, 1.0], [209900.0, 1.0], [57300.0, 2.0], [77800.0, 3.0], [109800.0, 2.0], [500.0, 7.0], [600.0, 4.0], [154800.0, 2.0], [700.0, 4.0], [800.0, 4.0], [900.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 5.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 3.0], [2100.0, 2.0], [2200.0, 1.0], [2400.0, 2.0], [2600.0, 3.0], [2700.0, 1.0], [179700.0, 2.0], [2900.0, 3.0], [3000.0, 2.0], [3200.0, 2.0], [3300.0, 1.0], [211700.0, 4.0], [3600.0, 1.0], [3800.0, 1.0], [4100.0, 2.0], [4200.0, 3.0], [4300.0, 4.0], [4600.0, 2.0], [4500.0, 1.0], [4400.0, 2.0], [4800.0, 2.0], [4700.0, 1.0], [5100.0, 2.0], [4900.0, 1.0], [5300.0, 3.0], [5200.0, 1.0], [5600.0, 2.0], [5500.0, 5.0], [5400.0, 3.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 2.0], [6300.0, 1.0], [6400.0, 1.0], [6500.0, 1.0], [105700.0, 2.0], [6700.0, 1.0], [6900.0, 1.0], [7100.0, 63.0], [7000.0, 1.0], [7200.0, 3.0], [7300.0, 2.0], [7400.0, 41.0], [117700.0, 2.0], [7600.0, 25.0], [7700.0, 2.0], [7900.0, 44.0], [7800.0, 1.0], [124100.0, 1.0], [8000.0, 3.0], [8100.0, 38.0], [8300.0, 1.0], [8700.0, 33.0], [8600.0, 2.0], [8400.0, 19.0], [8900.0, 13.0], [9100.0, 3.0], [9000.0, 2.0], [9200.0, 45.0], [145400.0, 2.0], [9300.0, 3.0], [9600.0, 3.0], [9400.0, 8.0], [9700.0, 19.0], [9500.0, 2.0], [9900.0, 29.0], [10200.0, 27.0], [9800.0, 9.0], [10100.0, 8.0], [10000.0, 15.0], [10300.0, 18.0], [10400.0, 23.0], [10500.0, 18.0], [10700.0, 29.0], [10600.0, 4.0], [11000.0, 24.0], [10800.0, 15.0], [11200.0, 18.0], [10900.0, 6.0], [11100.0, 15.0], [11400.0, 3.0], [11500.0, 10.0], [11700.0, 22.0], [11300.0, 7.0], [11600.0, 5.0], [11800.0, 3.0], [12200.0, 14.0], [11900.0, 4.0], [12000.0, 7.0], [12100.0, 3.0], [12600.0, 3.0], [12300.0, 4.0], [12500.0, 16.0], [12700.0, 21.0], [12400.0, 1.0], [13000.0, 9.0], [13300.0, 399.0], [13100.0, 4.0], [12800.0, 8.0], [13200.0, 1.0], [12900.0, 1.0], [13500.0, 5.0], [13800.0, 64.0], [13700.0, 3.0], [13900.0, 2.0], [14300.0, 98.0], [14000.0, 12.0], [14800.0, 12.0], [14500.0, 9.0], [15300.0, 3.0], [15100.0, 9.0], [15800.0, 3.0], [15600.0, 2.0], [15400.0, 3.0], [15700.0, 1.0], [16300.0, 7.0], [16000.0, 2.0], [16600.0, 1.0], [16800.0, 1.0], [17600.0, 2.0], [18400.0, 1.0], [18600.0, 3.0], [20400.0, 1.0], [21400.0, 1.0], [22200.0, 1.0], [28400.0, 1.0], [154300.0, 1.0], [52800.0, 1.0], [211900.0, 2.0], [54400.0, 1.0], [60000.0, 1.0], [101600.0, 5.0], [106400.0, 2.0], [107200.0, 2.0], [108000.0, 4.0], [120800.0, 9.0], [127200.0, 1.0], [211200.0, 1.0], [90300.0, 1.0], [95900.0, 1.0], [106300.0, 1.0], [141000.0, 1.0], [38300.0, 1.0], [41900.0, 1.0], [42700.0, 1.0], [52700.0, 3.0], [53500.0, 1.0], [106200.0, 1.0], [105400.0, 2.0], [107000.0, 4.0], [119800.0, 2.0], [213200.0, 2.0], [210900.0, 1.0], [109300.0, 1.0], [18100.0, 1.0], [18300.0, 3.0], [17900.0, 1.0], [18700.0, 1.0], [19100.0, 1.0], [18900.0, 1.0], [19900.0, 3.0], [20300.0, 1.0], [19700.0, 1.0], [21100.0, 1.0], [22500.0, 1.0], [21700.0, 1.0], [22100.0, 1.0], [23500.0, 1.0], [26300.0, 3.0], [26100.0, 2.0], [27100.0, 1.0], [29900.0, 1.0], [86000.0, 1.0], [85200.0, 2.0], [110800.0, 2.0], [122800.0, 5.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 312.0], [178400.0, 3.0], [212900.0, 3.0], [70700.0, 1.0], [81900.0, 4.0], [105900.0, 4.0], [106700.0, 5.0], [118700.0, 7.0], [140200.0, 2.0], [212200.0, 1.0], [40100.0, 1.0], [41700.0, 1.0], [211500.0, 1.0], [54500.0, 1.0], [57300.0, 1.0], [58500.0, 2.0], [60900.0, 1.0], [65300.0, 1.0], [64500.0, 1.0], [66600.0, 1.0], [77800.0, 7.0], [106600.0, 3.0], [109800.0, 1.0], [148400.0, 1.0], [154800.0, 2.0], [1100.0, 25.0], [1200.0, 73.0], [1300.0, 25.0], [1400.0, 20.0], [1500.0, 16.0], [1600.0, 9.0], [1700.0, 8.0], [1800.0, 9.0], [1900.0, 16.0], [2000.0, 31.0], [2100.0, 16.0], [2300.0, 16.0], [2200.0, 23.0], [2400.0, 19.0], [2500.0, 20.0], [2600.0, 18.0], [2700.0, 19.0], [2800.0, 14.0], [2900.0, 29.0], [3000.0, 19.0], [3100.0, 17.0], [3200.0, 20.0], [3300.0, 16.0], [211700.0, 3.0], [3400.0, 22.0], [3500.0, 20.0], [3600.0, 11.0], [3700.0, 8.0], [3800.0, 8.0], [3900.0, 15.0], [4000.0, 22.0], [4200.0, 11.0], [4100.0, 12.0], [4300.0, 7.0], [4400.0, 13.0], [4500.0, 5.0], [4600.0, 7.0], [4700.0, 15.0], [4800.0, 25.0], [5000.0, 42.0], [4900.0, 41.0], [5100.0, 19.0], [5200.0, 22.0], [5300.0, 12.0], [5400.0, 16.0], [5500.0, 13.0], [5600.0, 9.0], [5700.0, 9.0], [5800.0, 24.0], [6000.0, 53.0], [6100.0, 36.0], [5900.0, 47.0], [6200.0, 13.0], [6300.0, 14.0], [6500.0, 11.0], [6400.0, 15.0], [6600.0, 8.0], [105700.0, 1.0], [6800.0, 10.0], [6700.0, 14.0], [6900.0, 15.0], [7000.0, 16.0], [7100.0, 132.0], [7200.0, 12.0], [7300.0, 10.0], [7400.0, 75.0], [117700.0, 2.0], [7600.0, 63.0], [7500.0, 14.0], [7700.0, 16.0], [7900.0, 86.0], [7800.0, 25.0], [124100.0, 3.0], [8100.0, 81.0], [8000.0, 23.0], [8500.0, 16.0], [8300.0, 19.0], [8400.0, 63.0], [8200.0, 24.0], [8600.0, 13.0], [8700.0, 55.0], [9000.0, 10.0], [8800.0, 9.0], [8900.0, 19.0], [9200.0, 107.0], [9100.0, 6.0], [145400.0, 1.0], [9300.0, 46.0], [9400.0, 50.0], [9500.0, 31.0], [9600.0, 18.0], [9700.0, 52.0], [9800.0, 18.0], [9900.0, 97.0], [10100.0, 35.0], [10200.0, 142.0], [10000.0, 42.0], [10600.0, 265.0], [10300.0, 142.0], [10400.0, 175.0], [10500.0, 242.0], [10700.0, 331.0], [11200.0, 397.0], [10800.0, 423.0], [10900.0, 515.0], [11000.0, 542.0], [11100.0, 509.0], [11700.0, 200.0], [11600.0, 161.0], [11300.0, 255.0], [11400.0, 215.0], [11500.0, 212.0], [12000.0, 143.0], [11900.0, 129.0], [11800.0, 155.0], [12200.0, 110.0], [12100.0, 134.0], [12300.0, 41.0], [12600.0, 25.0], [12400.0, 23.0], [12700.0, 29.0], [12500.0, 44.0], [12800.0, 27.0], [13300.0, 782.0], [13200.0, 17.0], [13100.0, 17.0], [12900.0, 7.0], [13000.0, 17.0], [13400.0, 16.0], [13500.0, 16.0], [13800.0, 119.0], [13600.0, 4.0], [13700.0, 9.0], [14100.0, 7.0], [14200.0, 5.0], [14000.0, 41.0], [14300.0, 149.0], [13900.0, 6.0], [14500.0, 15.0], [14700.0, 12.0], [14800.0, 23.0], [14600.0, 5.0], [14400.0, 5.0], [15200.0, 7.0], [15000.0, 6.0], [15100.0, 10.0], [15300.0, 10.0], [14900.0, 4.0], [15500.0, 2.0], [15700.0, 3.0], [15600.0, 7.0], [15800.0, 7.0], [15400.0, 3.0], [16300.0, 16.0], [16100.0, 2.0], [16200.0, 3.0], [15900.0, 1.0], [17200.0, 4.0], [16600.0, 4.0], [16400.0, 2.0], [16800.0, 4.0], [17000.0, 3.0], [18000.0, 1.0], [18400.0, 2.0], [18200.0, 1.0], [18600.0, 5.0], [18800.0, 2.0], [19000.0, 3.0], [19400.0, 1.0], [20400.0, 7.0], [19800.0, 1.0], [19600.0, 2.0], [20000.0, 1.0], [21400.0, 1.0], [22200.0, 2.0], [22400.0, 3.0], [22800.0, 2.0], [23200.0, 1.0], [25000.0, 1.0], [26400.0, 1.0], [26800.0, 1.0], [29400.0, 1.0], [30000.0, 1.0], [38400.0, 1.0], [154300.0, 2.0], [52400.0, 1.0], [211900.0, 1.0], [54000.0, 4.0], [54400.0, 1.0], [55200.0, 1.0], [58800.0, 1.0], [58400.0, 1.0], [60800.0, 1.0], [62000.0, 1.0], [88800.0, 1.0], [101600.0, 4.0], [106400.0, 2.0], [107200.0, 6.0], [108000.0, 3.0], [114400.0, 1.0], [120800.0, 7.0], [127200.0, 5.0], [211200.0, 1.0], [71900.0, 1.0], [78300.0, 4.0], [90300.0, 4.0], [107100.0, 1.0], [111100.0, 1.0], [123100.0, 1.0], [141000.0, 1.0], [157900.0, 4.0], [42700.0, 2.0], [210700.0, 1.0], [53900.0, 3.0], [56300.0, 1.0], [58300.0, 1.0], [57500.0, 1.0], [60700.0, 1.0], [59500.0, 2.0], [69400.0, 1.0], [106200.0, 6.0], [105400.0, 1.0], [107000.0, 4.0], [112600.0, 1.0], [111800.0, 1.0], [115000.0, 1.0], [119800.0, 4.0], [181200.0, 2.0], [213200.0, 5.0], [210900.0, 2.0], [66100.0, 1.0], [69300.0, 1.0], [106900.0, 1.0], [17100.0, 4.0], [16700.0, 3.0], [17300.0, 4.0], [17700.0, 1.0], [18100.0, 6.0], [17500.0, 1.0], [18300.0, 1.0], [17900.0, 1.0], [18500.0, 2.0], [18900.0, 3.0], [19900.0, 1.0], [19500.0, 3.0], [20300.0, 1.0], [19700.0, 1.0], [20900.0, 1.0], [20700.0, 1.0], [21500.0, 1.0], [21700.0, 1.0], [24100.0, 1.0], [26300.0, 4.0], [27300.0, 1.0], [27100.0, 2.0], [30900.0, 1.0], [32700.0, 1.0], [39000.0, 1.0], [43400.0, 1.0], [52600.0, 1.0], [211100.0, 1.0], [55400.0, 1.0], [58600.0, 2.0], [57800.0, 1.0], [85200.0, 3.0], [106000.0, 1.0], [106800.0, 1.0], [110800.0, 1.0], [111600.0, 1.0], [116400.0, 1.0], [117200.0, 3.0], [122800.0, 4.0], [129200.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 146.0], [132900.0, 1.0], [212900.0, 1.0], [79500.0, 1.0], [81900.0, 5.0], [82700.0, 1.0], [105900.0, 1.0], [106700.0, 2.0], [112300.0, 1.0], [116300.0, 1.0], [118700.0, 10.0], [140200.0, 2.0], [212200.0, 1.0], [100.0, 1.0], [200.0, 1.0], [209900.0, 1.0], [57300.0, 2.0], [59700.0, 1.0], [300.0, 1.0], [77800.0, 3.0], [400.0, 1.0], [105800.0, 1.0], [106600.0, 3.0], [500.0, 2.0], [600.0, 1.0], [154800.0, 2.0], [700.0, 1.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 3.0], [1200.0, 1.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [179700.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 2.0], [211700.0, 2.0], [3600.0, 4.0], [3700.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 1.0], [4300.0, 2.0], [4600.0, 3.0], [4500.0, 2.0], [4700.0, 2.0], [4800.0, 3.0], [4900.0, 2.0], [5000.0, 3.0], [5100.0, 1.0], [81700.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [82500.0, 1.0], [5400.0, 2.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [5900.0, 2.0], [6200.0, 1.0], [6400.0, 1.0], [6600.0, 4.0], [6500.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [6800.0, 2.0], [6900.0, 1.0], [106500.0, 2.0], [7000.0, 4.0], [7100.0, 73.0], [7200.0, 4.0], [7300.0, 7.0], [7400.0, 33.0], [117700.0, 1.0], [7500.0, 3.0], [7600.0, 20.0], [7800.0, 3.0], [7900.0, 38.0], [7700.0, 4.0], [124100.0, 2.0], [8100.0, 37.0], [8000.0, 3.0], [8400.0, 18.0], [8300.0, 7.0], [8200.0, 2.0], [8600.0, 6.0], [8700.0, 23.0], [8800.0, 3.0], [9000.0, 3.0], [9200.0, 58.0], [8900.0, 9.0], [9100.0, 6.0], [145400.0, 1.0], [9600.0, 10.0], [9400.0, 7.0], [9500.0, 12.0], [9700.0, 26.0], [9300.0, 7.0], [9900.0, 22.0], [9800.0, 11.0], [10000.0, 5.0], [10200.0, 29.0], [10100.0, 7.0], [10400.0, 13.0], [10700.0, 29.0], [10300.0, 5.0], [10500.0, 6.0], [10600.0, 6.0], [11000.0, 18.0], [10800.0, 10.0], [10900.0, 7.0], [11200.0, 13.0], [11100.0, 4.0], [11300.0, 2.0], [11400.0, 3.0], [11500.0, 5.0], [11600.0, 3.0], [11700.0, 26.0], [11800.0, 1.0], [12000.0, 9.0], [11900.0, 4.0], [12200.0, 16.0], [12100.0, 1.0], [12600.0, 3.0], [12700.0, 12.0], [12300.0, 1.0], [12500.0, 24.0], [12400.0, 1.0], [12900.0, 3.0], [13200.0, 25.0], [13300.0, 402.0], [13100.0, 12.0], [12800.0, 12.0], [13000.0, 9.0], [13400.0, 12.0], [13800.0, 63.0], [13500.0, 5.0], [13700.0, 7.0], [13600.0, 2.0], [14100.0, 4.0], [14000.0, 14.0], [14300.0, 87.0], [13900.0, 4.0], [14400.0, 5.0], [14500.0, 4.0], [14800.0, 7.0], [14600.0, 1.0], [15200.0, 1.0], [15300.0, 4.0], [14900.0, 2.0], [15100.0, 1.0], [15000.0, 1.0], [15600.0, 3.0], [15800.0, 6.0], [15400.0, 3.0], [15700.0, 1.0], [16300.0, 7.0], [16000.0, 2.0], [16100.0, 1.0], [16600.0, 2.0], [17200.0, 1.0], [16800.0, 3.0], [18400.0, 2.0], [17800.0, 2.0], [19000.0, 1.0], [18600.0, 5.0], [19400.0, 1.0], [20400.0, 1.0], [20000.0, 1.0], [19800.0, 1.0], [22200.0, 1.0], [21600.0, 1.0], [26400.0, 1.0], [26200.0, 1.0], [27600.0, 1.0], [28000.0, 1.0], [28400.0, 1.0], [131900.0, 1.0], [154300.0, 2.0], [39200.0, 1.0], [210300.0, 1.0], [58400.0, 1.0], [101600.0, 3.0], [107200.0, 8.0], [108800.0, 1.0], [108000.0, 3.0], [114400.0, 1.0], [120800.0, 6.0], [131200.0, 1.0], [75900.0, 1.0], [90300.0, 5.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [110300.0, 1.0], [115100.0, 1.0], [157900.0, 3.0], [53100.0, 1.0], [56300.0, 1.0], [57100.0, 5.0], [57900.0, 1.0], [59500.0, 2.0], [65100.0, 1.0], [91000.0, 1.0], [106200.0, 3.0], [107000.0, 4.0], [213200.0, 2.0], [74900.0, 1.0], [84500.0, 1.0], [105300.0, 1.0], [106900.0, 7.0], [109300.0, 1.0], [114100.0, 1.0], [121300.0, 1.0], [126900.0, 1.0], [128500.0, 1.0], [17300.0, 2.0], [16900.0, 2.0], [17100.0, 2.0], [17900.0, 3.0], [18100.0, 5.0], [18300.0, 2.0], [19100.0, 1.0], [19900.0, 3.0], [21700.0, 1.0], [22100.0, 1.0], [23300.0, 1.0], [24500.0, 1.0], [25300.0, 1.0], [26300.0, 1.0], [26700.0, 1.0], [27100.0, 1.0], [27700.0, 2.0], [29700.0, 1.0], [51400.0, 1.0], [52600.0, 1.0], [53000.0, 1.0], [211100.0, 1.0], [212700.0, 1.0], [53800.0, 1.0], [57400.0, 2.0], [66000.0, 1.0], [85200.0, 1.0], [90800.0, 1.0], [106800.0, 1.0], [109200.0, 1.0], [110800.0, 1.0], [111600.0, 2.0], [122800.0, 3.0], [118800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 213200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7813.0, "series": [{"data": [[1.0, 185.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5611.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 21.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7813.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 33.01971830985916, "minX": 1.53939186E12, "maxY": 500.0, "series": [{"data": [[1.53939192E12, 89.03019323671495], [1.5393924E12, 500.0], [1.5393921E12, 271.8610855565778], [1.53939228E12, 450.0873734682994], [1.53939198E12, 148.46503067484645], [1.53939246E12, 295.20215053763434], [1.53939216E12, 330.3073619631901], [1.53939186E12, 33.01971830985916], [1.53939234E12, 496.472552348614], [1.53939204E12, 209.37150127226465], [1.53939252E12, 42.26229508196722], [1.53939222E12, 389.602181400689]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939252E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 211714.0, "series": [{"data": [[2.0, 589.0], [3.0, 600.0], [4.0, 603.0], [5.0, 586.0], [6.0, 3206.5], [7.0, 306.5], [8.0, 572.0], [9.0, 733.0], [10.0, 790.0], [11.0, 620.0], [13.0, 582.0], [14.0, 597.0], [15.0, 1974.5], [16.0, 28.0], [17.0, 1001.5], [19.0, 804.0], [20.0, 994.0], [21.0, 1276.0], [22.0, 779.5], [24.0, 856.0], [25.0, 869.0], [26.0, 1464.0], [28.0, 1478.0], [29.0, 1482.0], [30.0, 1451.0], [31.0, 1750.0], [32.0, 1489.0], [33.0, 1803.0], [35.0, 1973.0], [36.0, 106512.0], [37.0, 141871.66666666666], [38.0, 106964.5], [39.0, 2041.0], [40.0, 194521.41666666666], [41.0, 2062.0], [43.0, 2470.0], [42.0, 141049.0], [44.0, 3034.0], [45.0, 2487.0], [46.0, 90552.5], [47.0, 90525.5], [48.0, 2632.0], [49.0, 2745.0], [50.0, 2987.0], [52.0, 2912.0], [53.0, 2975.0], [54.0, 71365.0], [55.0, 3254.0], [56.0, 3387.0], [58.0, 4130.0], [59.0, 3840.0], [61.0, 3616.0], [63.0, 6332.0], [64.0, 4531.0], [65.0, 79528.5], [67.0, 80020.5], [68.0, 4792.0], [69.0, 4670.0], [70.0, 4368.0], [71.0, 74854.0], [73.0, 4462.0], [74.0, 74856.5], [75.0, 4290.0], [76.0, 4359.0], [77.0, 4347.0], [78.0, 4448.0], [79.0, 4667.0], [81.0, 5115.0], [83.0, 5565.0], [84.0, 4962.0], [86.0, 5463.0], [87.0, 5563.5], [89.0, 29979.0], [90.0, 5507.0], [91.0, 5336.0], [92.0, 5341.0], [93.0, 5258.0], [94.0, 5150.0], [95.0, 5415.0], [96.0, 5674.0], [97.0, 5594.0], [98.0, 5757.0], [100.0, 21861.666666666664], [102.0, 6170.0], [103.0, 6180.0], [104.0, 6407.0], [105.0, 6502.0], [107.0, 6929.0], [106.0, 52781.0], [108.0, 29936.0], [109.0, 32289.0], [110.0, 52760.0], [112.0, 7786.0], [113.0, 56492.5], [114.0, 7384.0], [115.0, 7499.0], [117.0, 7715.0], [118.0, 7320.0], [119.0, 7056.0], [120.0, 7445.0], [121.0, 7940.0], [122.0, 7829.0], [123.0, 7936.0], [124.0, 7765.0], [125.0, 8056.0], [126.0, 8192.0], [128.0, 8722.0], [130.0, 8756.0], [132.0, 9673.0], [134.0, 9112.0], [135.0, 13503.5], [133.0, 22176.0], [129.0, 21469.0], [136.0, 8912.0], [138.0, 9147.0], [139.0, 9373.0], [140.0, 8642.0], [141.0, 8707.0], [142.0, 8721.0], [143.0, 14354.5], [145.0, 9617.5], [146.0, 9323.0], [148.0, 10224.0], [149.0, 10106.0], [144.0, 17679.0], [152.0, 10348.0], [153.0, 10319.0], [155.0, 10273.5], [156.0, 10039.0], [158.0, 35071.0], [159.0, 10183.0], [154.0, 18374.0], [160.0, 9956.0], [161.0, 10049.0], [162.0, 9989.0], [165.0, 9885.0], [168.0, 9602.0], [170.0, 10377.0], [173.0, 10474.5], [177.0, 10533.0], [181.0, 10880.0], [182.0, 70062.16666666666], [184.0, 10400.0], [189.0, 18318.0], [187.0, 21151.0], [194.0, 11434.0], [195.0, 13667.0], [196.0, 11238.0], [201.0, 10756.0], [203.0, 11802.0], [206.0, 10578.5], [207.0, 15396.0], [204.0, 15448.0], [200.0, 18345.0], [211.0, 13486.0], [214.0, 10849.5], [220.0, 10894.0], [221.0, 10761.0], [227.0, 10806.0], [230.0, 10029.0], [231.0, 9922.0], [224.0, 12665.0], [232.0, 10355.0], [236.0, 10398.0], [237.0, 10416.0], [241.0, 11324.5], [242.0, 10464.0], [243.0, 10987.0], [245.0, 10478.0], [247.0, 11021.0], [248.0, 22568.0], [250.0, 10895.0], [251.0, 5024.5], [252.0, 10240.0], [255.0, 10483.333333333334], [258.0, 12287.0], [256.0, 12290.0], [259.0, 13452.0], [269.0, 13311.0], [270.0, 11796.666666666666], [271.0, 7700.6], [260.0, 106337.0], [261.0, 10239.0], [262.0, 13056.0], [263.0, 12698.0], [264.0, 53536.5], [265.0, 11161.0], [274.0, 31573.0], [272.0, 10831.0], [275.0, 10495.0], [284.0, 4352.0], [285.0, 12309.25], [286.0, 18290.75], [287.0, 5095.5], [276.0, 13311.0], [277.0, 10239.0], [278.0, 12927.5], [279.0, 9962.4], [281.0, 8703.0], [282.0, 11836.25], [283.0, 9855.0], [290.0, 17172.666666666668], [289.0, 10645.333333333334], [291.0, 11440.0], [300.0, 7679.0], [301.0, 13311.0], [302.0, 8477.666666666666], [303.0, 10569.166666666666], [292.0, 15358.0], [294.0, 33663.0], [295.0, 9471.0], [296.0, 8794.0], [297.0, 12416.555555555555], [298.0, 15871.2], [299.0, 9721.0], [305.0, 25086.5], [304.0, 13542.111111111113], [306.0, 8575.0], [307.0, 11433.0], [309.0, 11768.153846153846], [310.0, 9137.5], [311.0, 12019.0], [313.0, 11162.0], [318.0, 9223.714285714284], [319.0, 15792.11111111111], [316.0, 11267.857142857141], [317.0, 9145.454545454546], [321.0, 12582.5], [320.0, 11113.916666666668], [322.0, 12220.5], [323.0, 107268.0], [324.0, 18194.23076923077], [325.0, 12798.666666666666], [326.0, 11909.0], [327.0, 24866.8], [328.0, 8962.0], [334.0, 13081.0], [332.0, 19199.0], [333.0, 13822.714285714286], [329.0, 31260.833333333336], [330.0, 5786.5], [331.0, 13474.4], [337.0, 12082.4], [336.0, 10815.25], [338.0, 9725.800000000001], [339.0, 8511.666666666666], [340.0, 10159.181818181818], [341.0, 7679.0], [342.0, 8861.5], [344.0, 7743.25], [350.0, 77345.66666666667], [351.0, 10536.4375], [348.0, 6960.444444444444], [349.0, 11113.0], [345.0, 11263.5], [346.0, 12645.2], [347.0, 11626.0], [353.0, 10178.363636363638], [352.0, 10898.750000000002], [354.0, 6656.250000000001], [355.0, 13311.0], [356.0, 9366.0], [357.0, 8704.5], [358.0, 10677.999999999998], [359.0, 6656.5], [360.0, 5826.6], [366.0, 10077.25], [367.0, 10562.0], [364.0, 10914.272727272726], [365.0, 13310.5], [361.0, 8008.142857142857], [362.0, 12576.0], [363.0, 10513.333333333334], [370.0, 11058.4], [369.0, 16490.714285714286], [371.0, 13315.5], [380.0, 10873.0], [381.0, 10901.666666666666], [382.0, 9301.0], [383.0, 10485.0], [372.0, 13652.857142857143], [373.0, 10003.4], [374.0, 10172.727272727272], [375.0, 11093.0], [376.0, 10238.5], [377.0, 13058.0], [378.0, 11113.0], [379.0, 11904.5], [385.0, 12082.6], [384.0, 13924.2], [386.0, 9451.5], [387.0, 10328.666666666666], [388.0, 13686.916666666666], [389.0, 12799.0], [390.0, 13516.2], [391.0, 9427.5], [393.0, 10630.0], [396.0, 8768.5], [397.0, 12559.42857142857], [398.0, 10043.0], [399.0, 11894.500000000002], [395.0, 13037.90909090909], [402.0, 11263.0], [401.0, 14591.5], [403.0, 12031.5], [412.0, 12642.076923076922], [413.0, 12108.1], [414.0, 10177.0], [415.0, 8050.5], [404.0, 9881.8], [405.0, 8131.428571428571], [406.0, 13311.0], [407.0, 7716.0], [408.0, 12416.400000000001], [411.0, 12745.0], [417.0, 12905.666666666668], [416.0, 13312.142857142857], [418.0, 10103.0], [419.0, 7680.666666666667], [420.0, 12614.5], [421.0, 8609.272727272726], [422.0, 10722.42857142857], [423.0, 9003.166666666668], [424.0, 9631.25], [430.0, 10775.2], [431.0, 10500.0], [428.0, 13823.0], [429.0, 9420.4], [425.0, 9720.0], [426.0, 0.5], [427.0, 12670.9], [433.0, 13323.0], [432.0, 61694.0], [434.0, 11349.0], [435.0, 11411.5], [436.0, 11022.222222222224], [437.0, 10917.777777777777], [438.0, 11947.0], [439.0, 13515.6], [440.0, 10192.0], [446.0, 58525.125], [447.0, 8678.6], [444.0, 9502.75], [445.0, 11904.0], [441.0, 10841.0], [442.0, 4779.0], [443.0, 10998.736842105263], [449.0, 10065.5], [450.0, 13141.333333333334], [460.0, 11275.75], [462.0, 66477.8], [463.0, 13311.25], [452.0, 13824.0], [453.0, 13310.6], [454.0, 8444.666666666666], [455.0, 9879.0], [456.0, 11860.0], [457.0, 9211.636363636362], [458.0, 12184.666666666668], [459.0, 14362.5], [465.0, 12046.0], [464.0, 16828.214285714286], [466.0, 12228.0], [467.0, 11038.0], [468.0, 7065.200000000001], [469.0, 13331.5], [470.0, 30462.833333333336], [471.0, 11001.833333333332], [472.0, 40806.3], [478.0, 7877.076923076924], [479.0, 10920.75], [476.0, 6174.333333333333], [477.0, 6764.333333333334], [473.0, 7804.0], [474.0, 12964.0], [475.0, 22129.2], [481.0, 1.0], [480.0, 11363.0], [482.0, 10984.5], [483.0, 12531.333333333332], [484.0, 10498.375], [485.0, 8959.833333333332], [486.0, 14591.0], [487.0, 7935.85714285714], [488.0, 12074.5], [495.0, 50938.2], [493.0, 4608.0], [494.0, 13847.5], [489.0, 10495.0], [490.0, 9718.0], [491.0, 8396.888888888889], [496.0, 10512.0], [498.0, 13311.0], [499.0, 13245.75], [500.0, 19117.42647058825]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[382.18151447661523, 16841.329621380843]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 1272.0], [4.0, 1266.0], [5.0, 1223.5], [6.0, 1220.0], [7.0, 1324.0], [8.0, 1081.625], [9.0, 1038.4285714285716], [10.0, 1206.0], [11.0, 1235.888888888889], [12.0, 1229.5555555555557], [13.0, 1220.125], [14.0, 1215.8000000000002], [15.0, 1243.909090909091], [16.0, 1273.111111111111], [17.0, 1216.3333333333335], [18.0, 1464.7142857142853], [19.0, 1330.333333333333], [20.0, 1503.4545454545453], [21.0, 1547.5000000000002], [22.0, 1612.3571428571431], [23.0, 1748.7142857142853], [24.0, 1801.5], [25.0, 19097.5], [26.0, 1754.7692307692305], [27.0, 19675.75], [28.0, 28333.5625], [29.0, 2092.1666666666665], [30.0, 18243.153846153844], [31.0, 2166.428571428571], [32.0, 23109.300000000003], [33.0, 2307.0], [34.0, 23268.199999999997], [35.0, 2230.916666666667], [36.0, 2592.0], [37.0, 2697.4615384615386], [38.0, 2763.4999999999995], [39.0, 44735.7], [40.0, 93935.17391304347], [41.0, 11419.187499999998], [42.0, 2782.272727272727], [43.0, 2880.7692307692305], [44.0, 17386.0], [45.0, 3428.181818181818], [46.0, 14146.437499999998], [47.0, 14878.066666666666], [48.0, 11943.916666666666], [49.0, 11325.23076923077], [50.0, 11958.500000000002], [51.0, 11419.076923076922], [52.0, 9879.375], [53.0, 3518.3333333333335], [54.0, 3643.7], [55.0, 4074.6428571428573], [56.0, 3964.9166666666665], [57.0, 3983.2727272727275], [58.0, 4011.222222222222], [59.0, 3805.933333333333], [60.0, 4284.153846153846], [61.0, 48283.78571428571], [62.0, 4398.90909090909], [63.0, 4517.099999999999], [64.0, 4693.900000000001], [65.0, 4834.0], [66.0, 5150.818181818182], [67.0, 38488.11111111111], [68.0, 5515.846153846153], [69.0, 5191.272727272727], [70.0, 27525.733333333334], [71.0, 5044.769230769232], [72.0, 5000.200000000001], [73.0, 5574.692307692307], [74.0, 15062.214285714286], [75.0, 8512.0], [76.0, 8294.666666666668], [77.0, 10814.666666666668], [78.0, 8699.4], [79.0, 8839.333333333334], [80.0, 5475.818181818182], [81.0, 14122.916666666666], [82.0, 9775.25], [83.0, 9586.384615384615], [84.0, 9408.214285714286], [85.0, 9622.428571428572], [86.0, 10717.272727272728], [87.0, 8457.909090909092], [88.0, 10350.461538461539], [89.0, 6135.799999999998], [90.0, 9581.933333333332], [91.0, 9441.357142857143], [92.0, 9450.8], [93.0, 5899.0], [94.0, 9066.8], [95.0, 12013.875], [96.0, 6100.076923076923], [97.0, 6289.461538461539], [98.0, 5817.000000000001], [99.0, 6458.333333333334], [100.0, 6599.307692307693], [101.0, 6708.25], [102.0, 6908.692307692307], [103.0, 6958.785714285715], [104.0, 6418.083333333333], [105.0, 7060.8], [106.0, 7141.666666666667], [107.0, 7530.083333333333], [108.0, 7442.538461538462], [109.0, 7593.916666666667], [110.0, 7713.0], [111.0, 7206.5], [112.0, 7979.416666666666], [113.0, 16315.333333333332], [114.0, 8895.4375], [115.0, 9721.4], [116.0, 9137.333333333334], [117.0, 9543.25], [118.0, 9107.529411764706], [119.0, 9117.23076923077], [120.0, 8317.5625], [121.0, 9220.333333333334], [122.0, 8828.866666666667], [123.0, 9065.0], [124.0, 9277.090909090908], [125.0, 9402.384615384615], [126.0, 9649.083333333332], [127.0, 9477.066666666668], [128.0, 10179.666666666664], [129.0, 9085.363636363636], [130.0, 10240.071428571428], [131.0, 10471.7], [132.0, 9489.499999999998], [133.0, 9581.800000000001], [134.0, 10386.307692307691], [135.0, 9566.466666666665], [136.0, 9584.545454545454], [137.0, 9476.76923076923], [138.0, 9659.166666666666], [139.0, 13250.76923076923], [140.0, 12529.375000000002], [141.0, 9391.1], [142.0, 9511.562499999998], [143.0, 9506.0], [144.0, 9507.545454545454], [145.0, 13218.533333333331], [146.0, 11221.0], [147.0, 10435.769230769232], [148.0, 10149.636363636364], [149.0, 11244.416666666668], [150.0, 11397.714285714286], [151.0, 11096.333333333334], [152.0, 10575.461538461537], [153.0, 11334.0], [154.0, 11162.571428571428], [155.0, 11521.7], [156.0, 11238.25], [157.0, 10826.583333333334], [158.0, 10839.23076923077], [159.0, 11685.727272727272], [160.0, 11370.142857142857], [161.0, 10600.076923076922], [162.0, 10594.214285714286], [163.0, 11246.75], [164.0, 10384.76923076923], [165.0, 10963.785714285714], [166.0, 11217.588235294115], [167.0, 10953.999999999998], [168.0, 10976.071428571428], [169.0, 10569.0], [170.0, 10596.384615384615], [171.0, 10838.76923076923], [172.0, 10864.0], [173.0, 10879.909090909092], [174.0, 11065.400000000001], [175.0, 11133.636363636362], [176.0, 11468.400000000001], [177.0, 11203.75], [178.0, 11231.933333333332], [179.0, 11268.92857142857], [180.0, 11794.75], [181.0, 11103.538461538463], [182.0, 27289.88888888889], [183.0, 11268.800000000001], [184.0, 10904.75], [185.0, 11277.100000000002], [186.0, 12256.583333333334], [187.0, 11440.461538461539], [188.0, 11707.76923076923], [189.0, 11486.250000000002], [190.0, 11781.888888888889], [191.0, 12512.2], [192.0, 12276.153846153846], [193.0, 12345.928571428569], [194.0, 12596.846153846152], [195.0, 12150.416666666666], [196.0, 11987.571428571428], [197.0, 12192.0], [198.0, 12359.411764705883], [199.0, 12656.066666666666], [200.0, 11695.357142857145], [201.0, 11773.090909090908], [202.0, 11529.3], [203.0, 11249.666666666666], [204.0, 11113.785714285716], [205.0, 11955.285714285714], [206.0, 11018.083333333334], [207.0, 11086.0], [208.0, 11268.142857142857], [209.0, 11268.0], [210.0, 11374.46153846154], [211.0, 11097.416666666666], [212.0, 11794.6], [213.0, 11219.181818181816], [214.0, 11609.0], [215.0, 11314.76923076923], [216.0, 11730.083333333332], [217.0, 12344.166666666668], [218.0, 11748.230769230768], [219.0, 11402.76923076923], [220.0, 11512.866666666669], [221.0, 11365.857142857143], [222.0, 10628.0625], [223.0, 11272.071428571428], [224.0, 11012.333333333334], [225.0, 10950.384615384615], [226.0, 10916.30769230769], [227.0, 14072.0], [228.0, 9927.92857142857], [229.0, 12701.066666666668], [230.0, 10540.888888888889], [231.0, 10691.333333333332], [232.0, 10860.866666666667], [233.0, 10753.384615384615], [234.0, 10721.615384615383], [235.0, 10875.307692307693], [236.0, 11183.999999999998], [237.0, 14796.272727272726], [238.0, 11127.133333333333], [239.0, 11145.769230769232], [240.0, 11209.166666666666], [241.0, 10328.846153846152], [242.0, 11630.769230769229], [243.0, 11208.454545454546], [244.0, 11498.062499999998], [245.0, 11194.666666666666], [246.0, 11508.416666666668], [247.0, 11147.133333333333], [248.0, 11048.846153846154], [249.0, 10294.176470588238], [250.0, 10785.785714285714], [251.0, 11012.785714285716], [252.0, 11255.384615384613], [253.0, 16538.7], [254.0, 11061.0], [255.0, 21677.26666666667], [257.0, 19338.07142857143], [256.0, 12359.812500000002], [258.0, 11223.333333333334], [259.0, 10818.538461538463], [260.0, 15446.0], [261.0, 11926.214285714286], [262.0, 18088.187500000004], [263.0, 12667.58333333333], [264.0, 13458.76923076923], [270.0, 17874.6], [271.0, 11915.235294117647], [268.0, 20378.777777777777], [269.0, 12302.25], [265.0, 12451.166666666666], [266.0, 11331.062499999998], [267.0, 12171.2], [273.0, 10876.176470588236], [272.0, 16399.75], [274.0, 12256.842105263157], [275.0, 11018.083333333334], [276.0, 11411.0], [277.0, 11056.27777777778], [278.0, 20385.750000000004], [279.0, 11208.5], [280.0, 14167.199999999999], [286.0, 37048.05882352942], [287.0, 10911.352941176468], [284.0, 13677.434782608698], [285.0, 11227.863636363636], [281.0, 10881.800000000001], [282.0, 19261.882352941175], [283.0, 10719.4], [289.0, 11894.0], [288.0, 10788.722222222223], [290.0, 11671.764705882355], [291.0, 10899.416666666666], [292.0, 12617.61904761905], [293.0, 11769.999999999998], [294.0, 11151.5], [295.0, 11351.5], [296.0, 11228.6], [302.0, 11178.2], [303.0, 13108.000000000002], [300.0, 15098.450000000003], [301.0, 11850.6], [297.0, 10792.48], [298.0, 13439.307692307693], [299.0, 12507.800000000001], [305.0, 15178.526315789473], [304.0, 12453.666666666666], [306.0, 9922.3], [307.0, 14015.368421052632], [308.0, 11899.636363636366], [309.0, 14211.299999999997], [310.0, 10471.59090909091], [311.0, 12562.307692307693], [312.0, 11557.529411764708], [318.0, 12415.15], [319.0, 21175.058823529413], [316.0, 12008.8], [317.0, 15064.72], [313.0, 15994.307692307695], [314.0, 11703.923076923078], [315.0, 11908.5], [321.0, 12374.454545454546], [320.0, 11005.617647058822], [322.0, 10987.75], [323.0, 12615.090909090908], [324.0, 17666.304347826088], [325.0, 17395.21052631579], [326.0, 12421.874999999998], [327.0, 11885.57894736842], [328.0, 12232.812500000002], [334.0, 11681.045454545452], [335.0, 11576.749999999998], [332.0, 11051.789473684212], [333.0, 11353.677419354839], [329.0, 16615.999999999996], [330.0, 11817.357142857143], [331.0, 19425.086956521736], [337.0, 10318.416666666666], [336.0, 11205.0], [338.0, 10292.266666666666], [339.0, 9868.09677419355], [340.0, 12258.764705882355], [341.0, 10992.538461538463], [342.0, 10015.95], [343.0, 11916.733333333334], [344.0, 10512.545454545454], [350.0, 17841.499999999996], [351.0, 11432.344827586208], [348.0, 10849.72727272727], [349.0, 11083.727272727272], [345.0, 11577.375], [346.0, 12219.56], [347.0, 11292.687499999998], [353.0, 10400.137931034484], [352.0, 11725.380952380952], [354.0, 9407.392857142857], [355.0, 11046.133333333333], [356.0, 11085.15789473684], [357.0, 10103.76923076923], [358.0, 10136.272727272728], [359.0, 10161.578947368422], [360.0, 9243.307692307691], [366.0, 11660.1875], [367.0, 11245.937500000002], [364.0, 11152.666666666666], [365.0, 11683.307692307691], [361.0, 9560.727272727272], [362.0, 11355.29411764706], [363.0, 9837.681818181816], [369.0, 11778.058823529409], [368.0, 11672.5], [370.0, 11685.062500000002], [371.0, 11657.823529411768], [372.0, 12489.2962962963], [373.0, 11810.222222222219], [374.0, 15138.478260869566], [375.0, 11480.27777777778], [376.0, 11263.90625], [382.0, 10851.0], [383.0, 9805.58620689655], [380.0, 10777.625], [381.0, 10888.800000000001], [377.0, 10402.78947368421], [378.0, 11136.375], [379.0, 10996.499999999998], [385.0, 10841.75], [384.0, 9962.266666666666], [386.0, 11849.333333333334], [387.0, 10881.1875], [388.0, 11406.826086956522], [389.0, 10895.117647058823], [390.0, 11414.499999999998], [391.0, 11091.28], [392.0, 10947.076923076922], [398.0, 10742.454545454546], [399.0, 10738.074074074075], [396.0, 9950.307692307691], [397.0, 11295.44117647059], [393.0, 11725.761904761905], [394.0, 11110.266666666666], [395.0, 12079.851851851854], [401.0, 11185.722222222223], [400.0, 11018.0], [402.0, 10848.785714285712], [403.0, 11820.758620689656], [404.0, 10737.249999999998], [405.0, 9744.708333333336], [406.0, 11129.5], [407.0, 10757.550000000001], [408.0, 10687.40909090909], [414.0, 9775.8125], [415.0, 9875.76], [412.0, 10630.583333333336], [413.0, 11289.249999999998], [409.0, 11020.384615384615], [410.0, 10648.0], [411.0, 11532.208333333334], [417.0, 11779.652173913042], [416.0, 11193.419354838708], [418.0, 11562.636363636364], [419.0, 9874.363636363636], [420.0, 10105.181818181818], [421.0, 9737.035714285716], [422.0, 10529.478260869564], [423.0, 9629.199999999999], [424.0, 10940.758620689654], [430.0, 11195.74074074074], [431.0, 11168.818181818182], [428.0, 11410.590909090908], [429.0, 9476.105263157895], [425.0, 10597.916666666668], [426.0, 11619.315789473683], [427.0, 11045.73913043478], [433.0, 11688.533333333333], [432.0, 11320.4], [434.0, 10343.42857142857], [435.0, 12363.75], [436.0, 11389.954545454546], [437.0, 10073.478260869566], [438.0, 11279.679999999998], [439.0, 10735.833333333332], [440.0, 11020.333333333332], [446.0, 34604.62499999999], [447.0, 9382.478260869564], [444.0, 10393.4], [445.0, 11854.2], [441.0, 11685.3], [442.0, 10554.900000000001], [443.0, 11188.333333333334], [449.0, 10637.227272727274], [448.0, 11908.5], [450.0, 12530.312500000004], [451.0, 11752.266666666665], [452.0, 17194.949999999997], [453.0, 11308.296296296297], [454.0, 11021.692307692307], [455.0, 11123.5], [456.0, 12008.519999999997], [462.0, 24032.928571428572], [463.0, 11198.478260869566], [460.0, 9353.916666666664], [461.0, 10697.437499999998], [457.0, 10954.185185185184], [458.0, 12017.22222222222], [459.0, 11979.359999999999], [465.0, 10485.578947368422], [464.0, 12711.388888888887], [466.0, 11037.461538461535], [467.0, 10961.454545454546], [468.0, 22093.34210526316], [469.0, 17385.350000000002], [470.0, 10351.307692307691], [471.0, 11786.129032258064], [472.0, 25118.0], [478.0, 9531.63157894737], [479.0, 11327.764705882355], [476.0, 11509.999999999998], [477.0, 11209.764705882355], [473.0, 17518.187499999996], [474.0, 10293.740740740739], [475.0, 18781.133333333328], [481.0, 11538.000000000002], [480.0, 11544.64285714286], [482.0, 10933.769230769232], [483.0, 12174.714285714283], [484.0, 9686.043478260866], [485.0, 11630.35], [486.0, 10636.684210526315], [487.0, 8973.191489361705], [488.0, 11619.199999999997], [494.0, 11113.999999999998], [495.0, 28067.499999999993], [492.0, 11736.181818181816], [493.0, 11039.315789473683], [489.0, 18160.375000000004], [490.0, 9223.565217391306], [491.0, 15009.36], [496.0, 10735.23076923077], [497.0, 11076.294117647058], [498.0, 10513.000000000002], [499.0, 10281.346153846156], [500.0, 13279.89666357737]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[330.513714457952, 12056.334170601804]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 31.0], [3.0, 36.0], [4.0, 34.0], [5.0, 29.0], [6.0, 35.0], [7.0, 18.5], [8.0, 27.0], [9.0, 34.0], [10.0, 38.0], [11.0, 37.0], [12.0, 27.0], [13.0, 34.0], [14.0, 27.0], [15.0, 40.0], [16.0, 16.0], [17.0, 50.0], [18.0, 276.0], [19.0, 534.0], [20.0, 110.0], [21.0, 329.0], [22.0, 2.0], [23.0, 836.0], [24.0, 944.0], [25.0, 429.0], [26.0, 562.0], [27.0, 211714.0], [28.0, 890.0], [29.0, 105601.0], [31.0, 988.0], [33.0, 1254.0], [34.0, 1007.0], [35.0, 1481.0], [36.0, 1313.0], [37.0, 1516.0], [38.0, 1665.0], [39.0, 107016.0], [40.0, 159546.75], [41.0, 1477.0], [42.0, 1620.0], [43.0, 1990.0], [45.0, 2047.0], [46.0, 2018.0], [47.0, 1772.0], [49.0, 2098.0], [50.0, 2301.0], [51.0, 2289.0], [52.0, 2366.0], [53.0, 2367.0], [54.0, 2415.0], [55.0, 2689.0], [56.0, 80419.0], [57.0, 2867.0], [59.0, 3220.0], [60.0, 3301.0], [61.0, 106328.0], [62.0, 3112.0], [63.0, 3364.0], [64.0, 3621.0], [65.0, 3716.0], [66.0, 3969.0], [67.0, 154880.0], [68.0, 4346.0], [70.0, 3940.0], [71.0, 3689.0], [73.0, 3894.5], [74.0, 74542.0], [75.0, 3693.0], [76.0, 3758.0], [78.0, 4044.0], [79.0, 4313.0], [80.0, 4614.0], [81.0, 4916.0], [82.0, 4328.0], [83.0, 4549.0], [84.0, 4737.0], [85.0, 4813.0], [86.0, 4903.0], [88.0, 5001.0], [89.0, 5043.0], [90.0, 4921.5], [91.0, 4672.0], [92.0, 4672.0], [93.0, 4545.0], [94.0, 4843.0], [96.0, 31553.5], [97.0, 29548.5], [98.0, 31449.0], [99.0, 31263.5], [100.0, 5496.0], [101.0, 31370.5], [102.0, 31437.5], [103.0, 31659.0], [104.0, 31504.0], [105.0, 31543.5], [107.0, 31329.5], [108.0, 6461.0], [109.0, 6635.0], [111.0, 32228.0], [112.0, 6972.0], [113.0, 6660.0], [114.0, 6806.0], [116.0, 7036.0], [117.0, 6907.5], [118.0, 6520.0], [119.0, 6690.0], [120.0, 6921.0], [122.0, 7204.0], [123.0, 6982.5], [125.0, 7136.0], [126.0, 7538.0], [127.0, 7880.0], [129.0, 8191.0], [130.0, 8115.0], [131.0, 8427.0], [132.0, 15265.5], [133.0, 4185.0], [134.0, 8277.0], [135.0, 8324.0], [136.0, 13214.0], [137.0, 13019.0], [138.0, 12980.0], [139.0, 8221.0], [140.0, 8040.0], [142.0, 8136.0], [143.0, 8312.0], [141.0, 19821.0], [144.0, 8615.0], [145.0, 8779.0], [146.0, 8899.0], [148.0, 15361.0], [149.0, 9230.0], [150.0, 9558.0], [151.0, 9543.0], [152.0, 9799.0], [153.0, 9652.0], [155.0, 10433.0], [157.0, 14421.5], [158.0, 10717.0], [160.0, 10365.0], [162.0, 35184.5], [163.0, 9077.0], [166.0, 10488.0], [164.0, 59746.0], [161.0, 59559.0], [170.0, 10489.0], [171.0, 9554.0], [173.0, 12982.0], [183.0, 12959.333333333334], [182.0, 81919.8], [185.0, 15817.5], [191.0, 10721.0], [190.0, 18306.0], [195.0, 10995.0], [196.0, 16537.0], [200.0, 11214.0], [203.0, 14745.666666666666], [206.0, 15419.0], [205.0, 15420.0], [209.0, 10383.0], [210.0, 13377.0], [215.0, 16051.0], [213.0, 16069.0], [216.0, 19854.0], [220.0, 10415.0], [221.0, 26647.333333333332], [222.0, 11355.0], [223.0, 65127.0], [219.0, 16973.0], [225.0, 10290.5], [226.0, 30882.5], [227.0, 39264.0], [231.0, 11143.0], [230.0, 12894.0], [232.0, 11724.0], [234.0, 11745.0], [236.0, 11612.0], [239.0, 16800.0], [233.0, 12855.0], [241.0, 51420.666666666664], [242.0, 9992.0], [243.0, 16705.0], [244.0, 17436.666666666668], [245.0, 8922.0], [246.0, 14170.0], [247.0, 67201.5], [248.0, 12937.0], [249.0, 82756.0], [250.0, 9932.0], [251.0, 12419.5], [253.0, 106847.0], [255.0, 106901.0], [258.0, 8950.5], [257.0, 60183.5], [259.0, 11313.666666666666], [268.0, 11978.333333333334], [269.0, 13264.0], [271.0, 9200.0], [260.0, 36499.6], [261.0, 13269.0], [262.0, 66112.25], [263.0, 12060.0], [264.0, 64084.66666666667], [266.0, 13404.0], [267.0, 13172.0], [273.0, 7315.0], [272.0, 50870.6], [274.0, 5467.0], [275.0, 5008.5], [276.0, 106377.0], [277.0, 8654.0], [278.0, 29687.2], [279.0, 14151.75], [280.0, 13227.0], [286.0, 12695.0], [287.0, 12804.666666666666], [284.0, 32721.714285714286], [285.0, 21761.666666666668], [281.0, 9952.0], [282.0, 73241.66666666667], [283.0, 5675.333333333333], [289.0, 15723.4], [288.0, 106660.0], [290.0, 14402.2], [291.0, 9580.0], [292.0, 9367.666666666666], [294.0, 64742.8], [295.0, 11154.333333333334], [296.0, 30130.4], [302.0, 8651.0], [303.0, 58502.0], [300.0, 57312.5], [301.0, 9217.0], [297.0, 10650.000000000002], [298.0, 51406.8], [299.0, 9844.0], [307.0, 11910.333333333334], [305.0, 10596.4], [304.0, 16453.14285714286], [306.0, 8703.4], [309.0, 16463.625000000004], [310.0, 8725.555555555555], [313.0, 59328.5], [318.0, 13330.666666666666], [319.0, 29547.14285714286], [316.0, 13315.0], [317.0, 18332.06666666667], [314.0, 12784.0], [315.0, 48674.0], [321.0, 13172.0], [320.0, 11066.285714285716], [322.0, 12517.0], [323.0, 9783.0], [324.0, 29758.666666666664], [325.0, 64264.0], [326.0, 14046.0], [327.0, 8470.6], [328.0, 10667.0], [334.0, 14131.2], [335.0, 14478.0], [332.0, 19191.0], [333.0, 11923.25], [329.0, 25334.571428571428], [330.0, 9089.0], [331.0, 23317.875], [337.0, 26087.5], [336.0, 6957.6], [338.0, 9252.142857142857], [339.0, 11214.09090909091], [340.0, 13329.5], [341.0, 22895.5], [342.0, 7841.6], [343.0, 15284.5], [344.0, 7322.5], [351.0, 10611.4], [348.0, 10934.75], [350.0, 9231.0], [345.0, 13312.0], [346.0, 11725.0], [353.0, 11525.666666666668], [352.0, 12688.461538461537], [354.0, 20817.200000000004], [355.0, 14387.0], [356.0, 9214.666666666666], [357.0, 8803.5], [358.0, 10189.571428571428], [359.0, 9932.6], [360.0, 9215.5], [366.0, 14592.666666666666], [364.0, 13101.6], [365.0, 12288.0], [361.0, 9177.0], [362.0, 13140.75], [363.0, 9025.666666666666], [369.0, 18654.6], [368.0, 14079.5], [370.0, 8874.0], [371.0, 5252.5], [372.0, 15325.666666666666], [373.0, 11462.249999999998], [374.0, 15828.562499999998], [375.0, 10333.714285714286], [376.0, 10517.5], [382.0, 10974.6], [383.0, 14463.0], [380.0, 9575.666666666666], [381.0, 11097.5], [377.0, 12380.0], [378.0, 4353.5], [379.0, 13136.0], [385.0, 12876.0], [384.0, 11028.0], [386.0, 10993.833333333332], [387.0, 12934.8], [388.0, 9625.555555555555], [389.0, 11343.8], [390.0, 14131.4], [391.0, 11615.75], [392.0, 7861.0], [393.0, 13312.0], [398.0, 11756.0], [399.0, 11775.285714285714], [396.0, 8757.4], [397.0, 12263.363636363634], [394.0, 13309.0], [395.0, 5871.0], [402.0, 11226.0], [401.0, 15359.0], [403.0, 10943.272727272726], [412.0, 12721.0], [413.0, 13115.0], [414.0, 13327.25], [415.0, 9400.900000000001], [404.0, 12364.0], [405.0, 9881.166666666666], [406.0, 12493.0], [407.0, 11604.666666666666], [408.0, 7680.0], [409.0, 9807.0], [410.0, 7532.0], [411.0, 13459.0], [417.0, 10239.25], [416.0, 12683.4], [418.0, 12954.000000000002], [419.0, 8056.0], [420.0, 8806.666666666666], [421.0, 9021.571428571428], [422.0, 13098.333333333334], [423.0, 8011.333333333334], [424.0, 7988.25], [430.0, 12005.4], [428.0, 14143.75], [429.0, 30626.333333333332], [426.0, 12799.5], [427.0, 23629.4], [433.0, 12540.75], [432.0, 13813.0], [435.0, 12936.888888888887], [444.0, 7492.6], [445.0, 13325.333333333334], [446.0, 47294.62500000001], [447.0, 9141.666666666666], [436.0, 19482.6], [437.0, 12435.375], [438.0, 13311.5], [439.0, 13279.333333333334], [440.0, 13313.666666666666], [442.0, 45226.66666666667], [443.0, 9864.538461538463], [449.0, 10815.75], [448.0, 12438.5], [450.0, 12660.333333333332], [451.0, 8703.0], [452.0, 12084.25], [453.0, 11114.142857142857], [454.0, 12096.5], [455.0, 13311.0], [456.0, 12129.833333333334], [462.0, 82386.0], [463.0, 9983.75], [460.0, 7729.0], [461.0, 9279.5], [457.0, 12380.727272727274], [458.0, 13233.0], [459.0, 11050.0], [464.0, 31598.11111111111], [465.0, 12498.333333333334], [476.0, 11775.0], [477.0, 10095.0], [478.0, 10864.071428571428], [479.0, 10530.0], [468.0, 9727.846153846152], [469.0, 10775.0], [470.0, 10367.5], [471.0, 12292.545454545452], [472.0, 31872.0], [473.0, 8342.5], [474.0, 9344.0], [475.0, 44304.0], [481.0, 14444.0], [480.0, 11256.333333333334], [482.0, 11213.0], [483.0, 23834.0], [484.0, 10377.2], [485.0, 13225.0], [486.0, 12605.75], [487.0, 8426.555555555557], [488.0, 10583.222222222223], [493.0, 9903.0], [495.0, 50790.4], [489.0, 11976.333333333334], [490.0, 11058.57142857143], [491.0, 7852.454545454546], [496.0, 13296.0], [498.0, 13506.8], [499.0, 12379.0], [500.0, 21511.894273127768], [1.0, 89.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[378.6570972886764, 18366.41626794258]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 250.65, "minX": 1.53939186E12, "maxY": 1078339.1666666667, "series": [{"data": [[1.53939192E12, 1036378.0666666667], [1.5393924E12, 1043685.8833333333], [1.5393921E12, 1034231.5166666667], [1.53939228E12, 1032674.0166666667], [1.53939198E12, 1050022.4166666667], [1.53939246E12, 350418.06666666665], [1.53939216E12, 1003523.2666666667], [1.53939186E12, 856274.55], [1.53939234E12, 1067583.4166666667], [1.53939204E12, 1050501.3166666667], [1.53939252E12, 7540.833333333333], [1.53939222E12, 1078339.1666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939192E12, 3629.0], [1.5393924E12, 7649.416666666667], [1.5393921E12, 4520.4], [1.53939228E12, 7630.75], [1.53939198E12, 3570.883333333333], [1.53939246E12, 1872.1], [1.53939216E12, 6607.633333333333], [1.53939186E12, 3111.1666666666665], [1.53939234E12, 7213.233333333334], [1.53939204E12, 3400.15], [1.53939252E12, 250.65], [1.53939222E12, 7085.766666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939252E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1023.3898305084746, "minX": 1.53939186E12, "maxY": 194357.45, "series": [{"data": [[1.53939192E12, 5595.679245283021], [1.5393924E12, 21586.94604316547], [1.5393921E12, 14226.457142857143], [1.53939228E12, 14842.674050632902], [1.53939198E12, 9397.977777777776], [1.53939246E12, 34913.45714285714], [1.53939216E12, 12314.22302158273], [1.53939186E12, 1699.5272727272725], [1.53939234E12, 14869.708029197087], [1.53939204E12, 10736.5652173913], [1.53939252E12, 194357.45], [1.53939222E12, 11373.311827956992]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939192E12, 6110.8803894297625], [1.5393924E12, 13739.887963663883], [1.5393921E12, 13258.194312796213], [1.53939228E12, 12451.410858995136], [1.53939198E12, 9965.279229711141], [1.53939246E12, 22792.403785488947], [1.53939216E12, 12165.212464589238], [1.53939186E12, 2431.8775167785216], [1.53939234E12, 12502.51535269708], [1.53939204E12, 11469.670765027326], [1.53939252E12, 183533.75000000003], [1.53939222E12, 10934.792630676955]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939192E12, 5002.285714285714], [1.5393924E12, 22406.965779467682], [1.5393921E12, 29596.101449275364], [1.53939228E12, 17166.397553516825], [1.53939198E12, 8637.046511627907], [1.53939246E12, 34623.52564102564], [1.53939216E12, 15747.80204778157], [1.53939186E12, 1023.3898305084746], [1.53939234E12, 18138.329861111106], [1.53939204E12, 17836.1935483871], [1.53939252E12, 193837.77777777778], [1.53939222E12, 11515.472972972975]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939252E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1023.3050847457625, "minX": 1.53939186E12, "maxY": 194357.45, "series": [{"data": [[1.53939192E12, 5595.679245283021], [1.5393924E12, 21586.942446043176], [1.5393921E12, 14226.457142857143], [1.53939228E12, 14842.674050632902], [1.53939198E12, 9397.977777777776], [1.53939246E12, 34913.428571428565], [1.53939216E12, 12314.22302158273], [1.53939186E12, 1699.5090909090907], [1.53939234E12, 14869.704379562048], [1.53939204E12, 10736.5652173913], [1.53939252E12, 194357.45], [1.53939222E12, 11373.301075268817]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939192E12, 6110.389429763556], [1.5393924E12, 13739.626797880386], [1.5393921E12, 13257.790284360188], [1.53939228E12, 12451.056726094004], [1.53939198E12, 9964.78679504814], [1.53939246E12, 22791.921135646684], [1.53939216E12, 12164.786591123704], [1.53939186E12, 2431.3070469798668], [1.53939234E12, 12502.225726141076], [1.53939204E12, 11469.090163934432], [1.53939252E12, 183533.71875000006], [1.53939222E12, 10934.459297343605]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939192E12, 5002.23214285714], [1.5393924E12, 22406.965779467682], [1.5393921E12, 29596.101449275364], [1.53939228E12, 17166.388379204884], [1.53939198E12, 8637.046511627907], [1.53939246E12, 34623.48717948718], [1.53939216E12, 15747.791808873719], [1.53939186E12, 1023.3050847457625], [1.53939234E12, 18138.32638888889], [1.53939204E12, 17836.1935483871], [1.53939252E12, 193837.77777777778], [1.53939222E12, 11515.46621621622]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939252E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.14545454545454545, "minX": 1.53939186E12, "maxY": 1.9322033898305084, "series": [{"data": [[1.53939192E12, 0.9999999999999999], [1.5393924E12, 0.39568345323740994], [1.5393921E12, 0.7047619047619044], [1.53939228E12, 0.5063291139240501], [1.53939198E12, 0.8000000000000002], [1.53939246E12, 0.3428571428571429], [1.53939216E12, 0.5143884892086332], [1.53939186E12, 0.14545454545454545], [1.53939234E12, 0.42335766423357685], [1.53939204E12, 0.6521739130434783], [1.53939252E12, 0.15], [1.53939222E12, 0.5268817204301072]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939192E12, 0.5410292072322669], [1.5393924E12, 0.3777441332323999], [1.5393921E12, 0.5165876777251185], [1.53939228E12, 0.4367909238249589], [1.53939198E12, 0.5061898211829441], [1.53939246E12, 0.34700315457413233], [1.53939216E12, 0.5892351274787541], [1.53939186E12, 0.6627516778523485], [1.53939234E12, 0.44315352697095434], [1.53939204E12, 0.5860655737704918], [1.53939252E12, 0.4375], [1.53939222E12, 0.48671808054841537]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939192E12, 0.8392857142857143], [1.5393924E12, 0.30798479087452457], [1.5393921E12, 0.6666666666666666], [1.53939228E12, 0.44648318042813456], [1.53939198E12, 1.1860465116279069], [1.53939246E12, 0.2564102564102564], [1.53939216E12, 0.6075085324232085], [1.53939186E12, 1.9322033898305084], [1.53939234E12, 0.39583333333333326], [1.53939204E12, 0.9677419354838708], [1.53939252E12, 0.2222222222222222], [1.53939222E12, 0.5270270270270269]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939252E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.53939186E12, "maxY": 106838.0, "series": [{"data": [[1.53939192E12, 12018.0], [1.5393924E12, 25061.0], [1.5393921E12, 58402.0], [1.53939228E12, 84533.0], [1.53939198E12, 17275.0], [1.53939246E12, 60922.0], [1.53939216E12, 18974.0], [1.53939186E12, 6882.0], [1.53939234E12, 18350.0], [1.53939204E12, 53111.0], [1.53939252E12, 106838.0], [1.53939222E12, 23309.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939192E12, 3078.0], [1.5393924E12, 9342.0], [1.5393921E12, 9338.0], [1.53939228E12, 8835.0], [1.53939198E12, 6690.0], [1.53939246E12, 10735.0], [1.53939216E12, 9104.0], [1.53939186E12, 27.0], [1.53939234E12, 9262.0], [1.53939204E12, 9893.0], [1.53939252E12, 106662.0], [1.53939222E12, 9077.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939192E12, 7218.0], [1.5393924E12, 11860.0], [1.5393921E12, 11568.400000000001], [1.53939228E12, 11851.400000000001], [1.53939198E12, 10667.0], [1.53939246E12, 11993.0], [1.53939216E12, 11927.800000000001], [1.53939186E12, 3601.3], [1.53939234E12, 11810.0], [1.53939204E12, 11307.0], [1.53939252E12, 11996.0], [1.53939222E12, 11855.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939192E12, 8510.199999999999], [1.5393924E12, 14748.279999999999], [1.5393921E12, 14014.48], [1.53939228E12, 14672.48000000001], [1.53939198E12, 11329.7], [1.53939246E12, 18781.900000000114], [1.53939216E12, 14680.970000000056], [1.53939186E12, 4325.949999999973], [1.53939234E12, 14715.72], [1.53939204E12, 12378.92], [1.53939252E12, 19027.40000000001], [1.53939222E12, 14525.570000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939192E12, 7893.0], [1.5393924E12, 12162.3], [1.5393921E12, 11990.7], [1.53939228E12, 12142.0], [1.53939198E12, 10909.0], [1.53939246E12, 12351.5], [1.53939216E12, 12200.9], [1.53939186E12, 3988.15], [1.53939234E12, 12127.0], [1.53939204E12, 11695.9], [1.53939252E12, 12375.0], [1.53939222E12, 12164.599999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939252E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 211617.5, "series": [{"data": [[1.0, 106741.0], [18.0, 11182.0], [11.0, 2275.0], [13.0, 9923.0], [27.0, 11557.5], [7.0, 12257.0], [29.0, 10907.5], [31.0, 11157.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 211617.5], [18.0, 13311.0], [11.0, 2.0], [13.0, 3973.0], [27.0, 13232.5], [7.0, 13312.0], [29.0, 13309.0], [31.0, 13311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 211617.5, "series": [{"data": [[1.0, 106741.0], [18.0, 11181.0], [11.0, 2275.0], [13.0, 9923.0], [27.0, 11556.0], [7.0, 12256.0], [29.0, 10906.5], [31.0, 11157.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 211617.5], [18.0, 13311.0], [11.0, 2.0], [13.0, 3973.0], [27.0, 13232.5], [7.0, 13312.0], [29.0, 13309.0], [31.0, 13311.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.53939186E12, "maxY": 32.28333333333333, "series": [{"data": [[1.53939192E12, 14.8], [1.5393924E12, 31.033333333333335], [1.5393921E12, 19.116666666666667], [1.53939228E12, 32.28333333333333], [1.53939198E12, 14.583333333333334], [1.53939246E12, 0.43333333333333335], [1.53939216E12, 28.166666666666668], [1.53939186E12, 12.816666666666666], [1.53939234E12, 29.8], [1.53939204E12, 14.1], [1.53939222E12, 30.033333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939246E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939186E12, "maxY": 18.3, "series": [{"data": [[1.53939192E12, 12.833333333333334], [1.5393924E12, 12.3], [1.5393921E12, 12.283333333333333], [1.53939228E12, 12.383333333333333], [1.53939198E12, 12.766666666666667], [1.53939246E12, 4.666666666666667], [1.53939216E12, 12.016666666666667], [1.53939186E12, 10.733333333333333], [1.53939234E12, 12.716666666666667], [1.53939204E12, 12.5], [1.53939252E12, 0.08333333333333333], [1.53939222E12, 12.883333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939192E12, 0.8833333333333333], [1.5393924E12, 0.3333333333333333], [1.5393921E12, 0.4], [1.53939228E12, 0.5333333333333333], [1.53939198E12, 0.7333333333333333], [1.53939246E12, 0.016666666666666666], [1.53939216E12, 0.45], [1.53939186E12, 0.8666666666666667], [1.53939234E12, 0.45], [1.53939204E12, 0.36666666666666664], [1.53939222E12, 0.45]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939192E12, 0.08333333333333333], [1.5393924E12, 18.3], [1.5393921E12, 5.266666666666667], [1.53939228E12, 18.183333333333334], [1.53939198E12, 0.06666666666666667], [1.53939246E12, 2.7], [1.53939216E12, 14.533333333333333], [1.53939186E12, 0.18333333333333332], [1.53939234E12, 16.083333333333332], [1.53939204E12, 0.21666666666666667], [1.53939252E12, 0.9], [1.53939222E12, 15.5]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.5393924E12, 0.1], [1.5393921E12, 0.16666666666666666], [1.53939228E12, 0.18333333333333332], [1.53939198E12, 0.016666666666666666], [1.53939246E12, 0.36666666666666664], [1.53939216E12, 0.16666666666666666], [1.53939186E12, 0.05], [1.53939234E12, 0.2], [1.53939204E12, 0.016666666666666666], [1.53939252E12, 0.03333333333333333], [1.53939222E12, 0.2]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939252E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939186E12, "maxY": 12.366666666666667, "series": [{"data": [[1.53939192E12, 0.9333333333333333], [1.5393924E12, 0.31666666666666665], [1.5393921E12, 0.4166666666666667], [1.53939228E12, 0.55], [1.53939198E12, 0.7], [1.53939246E12, 0.6833333333333333], [1.53939216E12, 0.5], [1.53939186E12, 0.9333333333333333], [1.53939234E12, 0.43333333333333335], [1.53939204E12, 0.4], [1.53939222E12, 0.5166666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939192E12, 0.8833333333333333], [1.5393924E12, 0.3333333333333333], [1.5393921E12, 0.4], [1.53939228E12, 0.5333333333333333], [1.53939198E12, 0.7333333333333333], [1.53939246E12, 0.016666666666666666], [1.53939216E12, 0.45], [1.53939186E12, 0.8666666666666667], [1.53939234E12, 0.45], [1.53939204E12, 0.36666666666666664], [1.53939222E12, 0.45]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.5393924E12, 4.066666666666666], [1.5393921E12, 1.8833333333333333], [1.53939228E12, 4.9], [1.53939198E12, 0.016666666666666666], [1.53939246E12, 0.6166666666666667], [1.53939216E12, 4.383333333333334], [1.53939186E12, 0.05], [1.53939234E12, 4.366666666666666], [1.53939204E12, 0.11666666666666667], [1.53939252E12, 0.15], [1.53939222E12, 4.416666666666667]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939192E12, 0.08333333333333333], [1.5393924E12, 10.033333333333333], [1.5393921E12, 2.2], [1.53939228E12, 8.733333333333333], [1.53939198E12, 0.05], [1.53939246E12, 1.3], [1.53939216E12, 6.133333333333334], [1.53939186E12, 0.13333333333333333], [1.53939234E12, 7.8], [1.53939204E12, 0.1], [1.53939252E12, 0.45], [1.53939222E12, 7.083333333333333]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.5393924E12, 4.3], [1.5393921E12, 1.35], [1.53939228E12, 4.733333333333333], [1.53939198E12, 0.016666666666666666], [1.53939246E12, 1.15], [1.53939216E12, 4.183333333333334], [1.53939186E12, 0.05], [1.53939234E12, 4.116666666666666], [1.53939204E12, 0.016666666666666666], [1.53939252E12, 0.3333333333333333], [1.53939222E12, 4.2]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53939192E12, 11.9], [1.5393924E12, 11.983333333333333], [1.5393921E12, 11.866666666666667], [1.53939228E12, 11.833333333333334], [1.53939198E12, 12.066666666666666], [1.53939246E12, 3.9833333333333334], [1.53939216E12, 11.516666666666667], [1.53939186E12, 9.8], [1.53939234E12, 12.283333333333333], [1.53939204E12, 12.1], [1.53939252E12, 0.08333333333333333], [1.53939222E12, 12.366666666666667]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939252E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
