/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 212992.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 586.0], [7.9, 738.0], [8.0, 763.0], [8.1, 800.0], [8.2, 888.0], [8.3, 1180.0], [8.4, 1324.0], [8.5, 1340.0], [8.6, 1341.0], [8.7, 1345.0], [8.8, 1358.0], [8.9, 1489.0], [9.0, 1654.0], [9.1, 1717.0], [9.2, 2041.0], [9.3, 2322.0], [9.4, 2388.0], [9.5, 2467.0], [9.6, 2478.0], [9.7, 2647.0], [9.8, 2908.0], [9.9, 2953.0], [10.0, 2979.0], [10.1, 3076.0], [10.2, 3136.0], [10.3, 3569.0], [10.4, 3642.0], [10.5, 3757.0], [10.6, 3806.0], [10.7, 3894.0], [10.8, 3912.0], [10.9, 4091.0], [11.0, 4373.0], [11.1, 4523.0], [11.2, 4591.0], [11.3, 4819.0], [11.4, 4915.0], [11.5, 5191.0], [11.6, 5272.0], [11.7, 5380.0], [11.8, 5469.0], [11.9, 5568.0], [12.0, 5707.0], [12.1, 5860.0], [12.2, 5984.0], [12.3, 6057.0], [12.4, 6231.0], [12.5, 6297.0], [12.6, 6463.0], [12.7, 6740.0], [12.8, 6742.0], [12.9, 7048.0], [13.0, 7163.0], [13.1, 7166.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7171.0], [14.9, 7171.0], [15.0, 7184.0], [15.1, 7401.0], [15.2, 7420.0], [15.3, 7422.0], [15.4, 7423.0], [15.5, 7423.0], [15.6, 7423.0], [15.7, 7423.0], [15.8, 7423.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7427.0], [17.0, 7675.0], [17.1, 7678.0], [17.2, 7679.0], [17.3, 7679.0], [17.4, 7679.0], [17.5, 7679.0], [17.6, 7679.0], [17.7, 7679.0], [17.8, 7679.0], [17.9, 7679.0], [18.0, 7680.0], [18.1, 7680.0], [18.2, 7680.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7680.0], [18.6, 7680.0], [18.7, 7680.0], [18.8, 7681.0], [18.9, 7683.0], [19.0, 7685.0], [19.1, 7932.0], [19.2, 7932.0], [19.3, 7934.0], [19.4, 7934.0], [19.5, 7934.0], [19.6, 7934.0], [19.7, 7935.0], [19.8, 7935.0], [19.9, 7935.0], [20.0, 7935.0], [20.1, 7935.0], [20.2, 7935.0], [20.3, 7935.0], [20.4, 7935.0], [20.5, 7935.0], [20.6, 7936.0], [20.7, 7936.0], [20.8, 7936.0], [20.9, 7936.0], [21.0, 7936.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7936.0], [21.6, 7939.0], [21.7, 7939.0], [21.8, 8030.0], [21.9, 8190.0], [22.0, 8190.0], [22.1, 8191.0], [22.2, 8191.0], [22.3, 8191.0], [22.4, 8191.0], [22.5, 8191.0], [22.6, 8191.0], [22.7, 8191.0], [22.8, 8191.0], [22.9, 8191.0], [23.0, 8192.0], [23.1, 8192.0], [23.2, 8192.0], [23.3, 8192.0], [23.4, 8193.0], [23.5, 8196.0], [23.6, 8220.0], [23.7, 8385.0], [23.8, 8446.0], [23.9, 8447.0], [24.0, 8447.0], [24.1, 8447.0], [24.2, 8604.0], [24.3, 8639.0], [24.4, 8699.0], [24.5, 8699.0], [24.6, 8700.0], [24.7, 8702.0], [24.8, 8702.0], [24.9, 8702.0], [25.0, 8703.0], [25.1, 8703.0], [25.2, 8703.0], [25.3, 8703.0], [25.4, 8703.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8703.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8704.0], [26.3, 8704.0], [26.4, 8704.0], [26.5, 8704.0], [26.6, 8704.0], [26.7, 8704.0], [26.8, 8706.0], [26.9, 8750.0], [27.0, 8920.0], [27.1, 8956.0], [27.2, 8958.0], [27.3, 8958.0], [27.4, 8959.0], [27.5, 8959.0], [27.6, 8959.0], [27.7, 8959.0], [27.8, 8959.0], [27.9, 8959.0], [28.0, 8960.0], [28.1, 8960.0], [28.2, 8960.0], [28.3, 8961.0], [28.4, 8963.0], [28.5, 8966.0], [28.6, 9002.0], [28.7, 9157.0], [28.8, 9171.0], [28.9, 9210.0], [29.0, 9212.0], [29.1, 9214.0], [29.2, 9214.0], [29.3, 9215.0], [29.4, 9215.0], [29.5, 9215.0], [29.6, 9215.0], [29.7, 9215.0], [29.8, 9215.0], [29.9, 9215.0], [30.0, 9215.0], [30.1, 9215.0], [30.2, 9215.0], [30.3, 9215.0], [30.4, 9215.0], [30.5, 9215.0], [30.6, 9215.0], [30.7, 9215.0], [30.8, 9216.0], [30.9, 9216.0], [31.0, 9216.0], [31.1, 9216.0], [31.2, 9216.0], [31.3, 9216.0], [31.4, 9217.0], [31.5, 9219.0], [31.6, 9265.0], [31.7, 9284.0], [31.8, 9347.0], [31.9, 9368.0], [32.0, 9399.0], [32.1, 9448.0], [32.2, 9470.0], [32.3, 9471.0], [32.4, 9471.0], [32.5, 9472.0], [32.6, 9473.0], [32.7, 9475.0], [32.8, 9492.0], [32.9, 9516.0], [33.0, 9544.0], [33.1, 9611.0], [33.2, 9616.0], [33.3, 9656.0], [33.4, 9713.0], [33.5, 9721.0], [33.6, 9722.0], [33.7, 9722.0], [33.8, 9726.0], [33.9, 9727.0], [34.0, 9727.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9727.0], [34.4, 9727.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9730.0], [34.9, 9761.0], [35.0, 9769.0], [35.1, 9804.0], [35.2, 9822.0], [35.3, 9827.0], [35.4, 9840.0], [35.5, 9877.0], [35.6, 9893.0], [35.7, 9904.0], [35.8, 9936.0], [35.9, 9944.0], [36.0, 9947.0], [36.1, 9952.0], [36.2, 9977.0], [36.3, 9977.0], [36.4, 9984.0], [36.5, 9984.0], [36.6, 9985.0], [36.7, 10003.0], [36.8, 10025.0], [36.9, 10033.0], [37.0, 10041.0], [37.1, 10052.0], [37.2, 10060.0], [37.3, 10092.0], [37.4, 10104.0], [37.5, 10116.0], [37.6, 10139.0], [37.7, 10177.0], [37.8, 10190.0], [37.9, 10195.0], [38.0, 10205.0], [38.1, 10224.0], [38.2, 10237.0], [38.3, 10237.0], [38.4, 10238.0], [38.5, 10238.0], [38.6, 10239.0], [38.7, 10239.0], [38.8, 10239.0], [38.9, 10239.0], [39.0, 10240.0], [39.1, 10240.0], [39.2, 10240.0], [39.3, 10243.0], [39.4, 10243.0], [39.5, 10243.0], [39.6, 10243.0], [39.7, 10244.0], [39.8, 10244.0], [39.9, 10245.0], [40.0, 10262.0], [40.1, 10298.0], [40.2, 10302.0], [40.3, 10318.0], [40.4, 10337.0], [40.5, 10342.0], [40.6, 10354.0], [40.7, 10370.0], [40.8, 10383.0], [40.9, 10398.0], [41.0, 10423.0], [41.1, 10456.0], [41.2, 10461.0], [41.3, 10472.0], [41.4, 10495.0], [41.5, 10496.0], [41.6, 10510.0], [41.7, 10540.0], [41.8, 10560.0], [41.9, 10577.0], [42.0, 10578.0], [42.1, 10582.0], [42.2, 10590.0], [42.3, 10609.0], [42.4, 10618.0], [42.5, 10646.0], [42.6, 10650.0], [42.7, 10674.0], [42.8, 10686.0], [42.9, 10709.0], [43.0, 10728.0], [43.1, 10745.0], [43.2, 10751.0], [43.3, 10751.0], [43.4, 10751.0], [43.5, 10751.0], [43.6, 10752.0], [43.7, 10752.0], [43.8, 10752.0], [43.9, 10776.0], [44.0, 10783.0], [44.1, 10810.0], [44.2, 10822.0], [44.3, 10836.0], [44.4, 10854.0], [44.5, 10889.0], [44.6, 10902.0], [44.7, 10905.0], [44.8, 10918.0], [44.9, 10935.0], [45.0, 10946.0], [45.1, 10954.0], [45.2, 10985.0], [45.3, 10989.0], [45.4, 11005.0], [45.5, 11007.0], [45.6, 11007.0], [45.7, 11007.0], [45.8, 11007.0], [45.9, 11008.0], [46.0, 11012.0], [46.1, 11012.0], [46.2, 11037.0], [46.3, 11047.0], [46.4, 11064.0], [46.5, 11075.0], [46.6, 11082.0], [46.7, 11104.0], [46.8, 11142.0], [46.9, 11145.0], [47.0, 11158.0], [47.1, 11184.0], [47.2, 11202.0], [47.3, 11258.0], [47.4, 11260.0], [47.5, 11263.0], [47.6, 11263.0], [47.7, 11263.0], [47.8, 11264.0], [47.9, 11264.0], [48.0, 11264.0], [48.1, 11264.0], [48.2, 11265.0], [48.3, 11277.0], [48.4, 11346.0], [48.5, 11364.0], [48.6, 11417.0], [48.7, 11475.0], [48.8, 11497.0], [48.9, 11518.0], [49.0, 11519.0], [49.1, 11519.0], [49.2, 11519.0], [49.3, 11520.0], [49.4, 11525.0], [49.5, 11623.0], [49.6, 11636.0], [49.7, 11678.0], [49.8, 11726.0], [49.9, 11745.0], [50.0, 11774.0], [50.1, 11775.0], [50.2, 11775.0], [50.3, 11775.0], [50.4, 11775.0], [50.5, 11775.0], [50.6, 11775.0], [50.7, 11775.0], [50.8, 11775.0], [50.9, 11775.0], [51.0, 11776.0], [51.1, 11776.0], [51.2, 11776.0], [51.3, 11787.0], [51.4, 11787.0], [51.5, 11860.0], [51.6, 11909.0], [51.7, 11930.0], [51.8, 12028.0], [51.9, 12031.0], [52.0, 12032.0], [52.1, 12032.0], [52.2, 12032.0], [52.3, 12033.0], [52.4, 12078.0], [52.5, 12199.0], [52.6, 12269.0], [52.7, 12286.0], [52.8, 12287.0], [52.9, 12287.0], [53.0, 12287.0], [53.1, 12288.0], [53.2, 12288.0], [53.3, 12288.0], [53.4, 12292.0], [53.5, 12292.0], [53.6, 12458.0], [53.7, 12503.0], [53.8, 12543.0], [53.9, 12657.0], [54.0, 12798.0], [54.1, 12798.0], [54.2, 12799.0], [54.3, 12799.0], [54.4, 12799.0], [54.5, 12799.0], [54.6, 12800.0], [54.7, 12800.0], [54.8, 13053.0], [54.9, 13056.0], [55.0, 13057.0], [55.1, 13109.0], [55.2, 13227.0], [55.3, 13298.0], [55.4, 13307.0], [55.5, 13307.0], [55.6, 13307.0], [55.7, 13307.0], [55.8, 13307.0], [55.9, 13307.0], [56.0, 13307.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13309.0], [56.8, 13309.0], [56.9, 13310.0], [57.0, 13310.0], [57.1, 13310.0], [57.2, 13310.0], [57.3, 13310.0], [57.4, 13310.0], [57.5, 13310.0], [57.6, 13310.0], [57.7, 13310.0], [57.8, 13310.0], [57.9, 13310.0], [58.0, 13310.0], [58.1, 13310.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13310.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13313.0], [76.1, 13313.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13313.0], [77.1, 13313.0], [77.2, 13314.0], [77.3, 13315.0], [77.4, 13315.0], [77.5, 13315.0], [77.6, 13315.0], [77.7, 13315.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13315.0], [78.2, 13316.0], [78.3, 13316.0], [78.4, 13316.0], [78.5, 13316.0], [78.6, 13316.0], [78.7, 13492.0], [78.8, 13564.0], [78.9, 13568.0], [79.0, 13568.0], [79.1, 13819.0], [79.2, 13820.0], [79.3, 13820.0], [79.4, 13822.0], [79.5, 13822.0], [79.6, 13822.0], [79.7, 13823.0], [79.8, 13823.0], [79.9, 13823.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13823.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13823.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13824.0], [82.2, 13824.0], [82.3, 13824.0], [82.4, 13825.0], [82.5, 13825.0], [82.6, 13825.0], [82.7, 13825.0], [82.8, 13828.0], [82.9, 13828.0], [83.0, 13838.0], [83.1, 14076.0], [83.2, 14078.0], [83.3, 14079.0], [83.4, 14080.0], [83.5, 14264.0], [83.6, 14331.0], [83.7, 14331.0], [83.8, 14332.0], [83.9, 14332.0], [84.0, 14332.0], [84.1, 14333.0], [84.2, 14334.0], [84.3, 14334.0], [84.4, 14334.0], [84.5, 14334.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14335.0], [85.2, 14335.0], [85.3, 14335.0], [85.4, 14335.0], [85.5, 14335.0], [85.6, 14335.0], [85.7, 14335.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14336.0], [86.4, 14336.0], [86.5, 14337.0], [86.6, 14338.0], [86.7, 14340.0], [86.8, 14437.0], [86.9, 14590.0], [87.0, 14591.0], [87.1, 14641.0], [87.2, 14847.0], [87.3, 14847.0], [87.4, 14848.0], [87.5, 14848.0], [87.6, 14857.0], [87.7, 15270.0], [87.8, 15335.0], [87.9, 15359.0], [88.0, 15359.0], [88.1, 15360.0], [88.2, 15360.0], [88.3, 15476.0], [88.4, 15611.0], [88.5, 15612.0], [88.6, 15783.0], [88.7, 15871.0], [88.8, 15888.0], [88.9, 16378.0], [89.0, 16379.0], [89.1, 16383.0], [89.2, 16384.0], [89.3, 16481.0], [89.4, 16773.0], [89.5, 17151.0], [89.6, 17153.0], [89.7, 17486.0], [89.8, 17770.0], [89.9, 17830.0], [90.0, 17869.0], [90.1, 18175.0], [90.2, 18176.0], [90.3, 18176.0], [90.4, 19713.0], [90.5, 19741.0], [90.6, 20511.0], [90.7, 20989.0], [90.8, 22222.0], [90.9, 25855.0], [91.0, 26366.0], [91.1, 26367.0], [91.2, 26367.0], [91.3, 26367.0], [91.4, 26367.0], [91.5, 26367.0], [91.6, 26367.0], [91.7, 26368.0], [91.8, 26368.0], [91.9, 26368.0], [92.0, 26368.0], [92.1, 26368.0], [92.2, 26371.0], [92.3, 26623.0], [92.4, 26624.0], [92.5, 27135.0], [92.6, 27390.0], [92.7, 27391.0], [92.8, 27391.0], [92.9, 27392.0], [93.0, 27393.0], [93.1, 27647.0], [93.2, 28415.0], [93.3, 28416.0], [93.4, 28736.0], [93.5, 28928.0], [93.6, 29593.0], [93.7, 29610.0], [93.8, 32513.0], [93.9, 32767.0], [94.0, 32768.0], [94.1, 48153.0], [94.2, 52250.0], [94.3, 52736.0], [94.4, 52991.0], [94.5, 53247.0], [94.6, 53247.0], [94.7, 53247.0], [94.8, 53471.0], [94.9, 56263.0], [95.0, 59414.0], [95.1, 59416.0], [95.2, 59425.0], [95.3, 77054.0], [95.4, 84479.0], [95.5, 85502.0], [95.6, 85503.0], [95.7, 85504.0], [95.8, 85504.0], [95.9, 85760.0], [96.0, 85761.0], [96.1, 86016.0], [96.2, 87039.0], [96.3, 105441.0], [96.4, 105728.0], [96.5, 106240.0], [96.6, 106240.0], [96.7, 106750.0], [96.8, 106751.0], [96.9, 106751.0], [97.0, 106751.0], [97.1, 106751.0], [97.2, 106751.0], [97.3, 106751.0], [97.4, 106752.0], [97.5, 106752.0], [97.6, 106752.0], [97.7, 106752.0], [97.8, 106997.0], [97.9, 107002.0], [98.0, 107002.0], [98.1, 107005.0], [98.2, 107006.0], [98.3, 107007.0], [98.4, 107008.0], [98.5, 107009.0], [98.6, 107263.0], [98.7, 107775.0], [98.8, 108032.0], [98.9, 109055.0], [99.0, 109056.0], [99.1, 113665.0], [99.2, 114684.0], [99.3, 116732.0], [99.4, 126205.0], [99.5, 129278.0], [99.6, 136448.0], [99.7, 147198.0], [99.8, 153087.0], [99.9, 209919.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 2.0], [2.4, 2.0], [2.5, 6.0], [2.6, 1193.0], [2.7, 1207.0], [2.8, 1215.0], [2.9, 1220.0], [3.0, 1228.0], [3.1, 1239.0], [3.2, 1243.0], [3.3, 1249.0], [3.4, 1263.0], [3.5, 1272.0], [3.6, 1292.0], [3.7, 1315.0], [3.8, 1339.0], [3.9, 1384.0], [4.0, 1418.0], [4.1, 1471.0], [4.2, 1570.0], [4.3, 1684.0], [4.4, 1795.0], [4.5, 1878.0], [4.6, 1927.0], [4.7, 1979.0], [4.8, 2009.0], [4.9, 2032.0], [5.0, 2056.0], [5.1, 2087.0], [5.2, 2133.0], [5.3, 2197.0], [5.4, 2273.0], [5.5, 2343.0], [5.6, 2377.0], [5.7, 2399.0], [5.8, 2487.0], [5.9, 2575.0], [6.0, 2630.0], [6.1, 2693.0], [6.2, 2743.0], [6.3, 2833.0], [6.4, 2906.0], [6.5, 3016.0], [6.6, 3104.0], [6.7, 3132.0], [6.8, 3157.0], [6.9, 3196.0], [7.0, 3234.0], [7.1, 3322.0], [7.2, 3398.0], [7.3, 3489.0], [7.4, 3534.0], [7.5, 3550.0], [7.6, 3573.0], [7.7, 3597.0], [7.8, 3608.0], [7.9, 3633.0], [8.0, 3656.0], [8.1, 3694.0], [8.2, 3730.0], [8.3, 3750.0], [8.4, 3780.0], [8.5, 3829.0], [8.6, 3868.0], [8.7, 3901.0], [8.8, 3946.0], [8.9, 4040.0], [9.0, 4073.0], [9.1, 4106.0], [9.2, 4153.0], [9.3, 4182.0], [9.4, 4232.0], [9.5, 4264.0], [9.6, 4334.0], [9.7, 4412.0], [9.8, 4494.0], [9.9, 4536.0], [10.0, 4630.0], [10.1, 4708.0], [10.2, 4860.0], [10.3, 4924.0], [10.4, 4982.0], [10.5, 5013.0], [10.6, 5046.0], [10.7, 5105.0], [10.8, 5162.0], [10.9, 5281.0], [11.0, 5387.0], [11.1, 5514.0], [11.2, 5595.0], [11.3, 5702.0], [11.4, 5764.0], [11.5, 5827.0], [11.6, 5852.0], [11.7, 5870.0], [11.8, 5897.0], [11.9, 5925.0], [12.0, 5943.0], [12.1, 5979.0], [12.2, 6006.0], [12.3, 6041.0], [12.4, 6064.0], [12.5, 6112.0], [12.6, 6161.0], [12.7, 6207.0], [12.8, 6282.0], [12.9, 6344.0], [13.0, 6423.0], [13.1, 6456.0], [13.2, 6501.0], [13.3, 6545.0], [13.4, 6597.0], [13.5, 6623.0], [13.6, 6653.0], [13.7, 6674.0], [13.8, 6715.0], [13.9, 6739.0], [14.0, 6765.0], [14.1, 6786.0], [14.2, 6814.0], [14.3, 6832.0], [14.4, 6852.0], [14.5, 6878.0], [14.6, 6912.0], [14.7, 6962.0], [14.8, 7047.0], [14.9, 7106.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7171.0], [15.6, 7248.0], [15.7, 7313.0], [15.8, 7406.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7425.0], [16.5, 7461.0], [16.6, 7553.0], [16.7, 7644.0], [16.8, 7679.0], [16.9, 7679.0], [17.0, 7680.0], [17.1, 7680.0], [17.2, 7682.0], [17.3, 7807.0], [17.4, 7895.0], [17.5, 7932.0], [17.6, 7935.0], [17.7, 7935.0], [17.8, 7936.0], [17.9, 7936.0], [18.0, 7937.0], [18.1, 7940.0], [18.2, 8000.0], [18.3, 8064.0], [18.4, 8191.0], [18.5, 8192.0], [18.6, 8193.0], [18.7, 8198.0], [18.8, 8260.0], [18.9, 8311.0], [19.0, 8407.0], [19.1, 8447.0], [19.2, 8449.0], [19.3, 8560.0], [19.4, 8609.0], [19.5, 8643.0], [19.6, 8682.0], [19.7, 8703.0], [19.8, 8704.0], [19.9, 8704.0], [20.0, 8704.0], [20.1, 8704.0], [20.2, 8715.0], [20.3, 8816.0], [20.4, 8896.0], [20.5, 8959.0], [20.6, 8960.0], [20.7, 8992.0], [20.8, 9138.0], [20.9, 9212.0], [21.0, 9215.0], [21.1, 9215.0], [21.2, 9215.0], [21.3, 9216.0], [21.4, 9216.0], [21.5, 9217.0], [21.6, 9217.0], [21.7, 9234.0], [21.8, 9280.0], [21.9, 9302.0], [22.0, 9341.0], [22.1, 9356.0], [22.2, 9391.0], [22.3, 9409.0], [22.4, 9434.0], [22.5, 9464.0], [22.6, 9471.0], [22.7, 9473.0], [22.8, 9525.0], [22.9, 9564.0], [23.0, 9590.0], [23.1, 9637.0], [23.2, 9668.0], [23.3, 9710.0], [23.4, 9727.0], [23.5, 9728.0], [23.6, 9728.0], [23.7, 9729.0], [23.8, 9748.0], [23.9, 9764.0], [24.0, 9781.0], [24.1, 9799.0], [24.2, 9810.0], [24.3, 9835.0], [24.4, 9854.0], [24.5, 9874.0], [24.6, 9889.0], [24.7, 9900.0], [24.8, 9916.0], [24.9, 9923.0], [25.0, 9933.0], [25.1, 9946.0], [25.2, 9960.0], [25.3, 9969.0], [25.4, 9983.0], [25.5, 9984.0], [25.6, 9987.0], [25.7, 9999.0], [25.8, 10005.0], [25.9, 10022.0], [26.0, 10028.0], [26.1, 10039.0], [26.2, 10047.0], [26.3, 10053.0], [26.4, 10060.0], [26.5, 10073.0], [26.6, 10080.0], [26.7, 10086.0], [26.8, 10093.0], [26.9, 10102.0], [27.0, 10113.0], [27.1, 10121.0], [27.2, 10130.0], [27.3, 10137.0], [27.4, 10142.0], [27.5, 10151.0], [27.6, 10158.0], [27.7, 10164.0], [27.8, 10169.0], [27.9, 10179.0], [28.0, 10184.0], [28.1, 10190.0], [28.2, 10198.0], [28.3, 10206.0], [28.4, 10210.0], [28.5, 10215.0], [28.6, 10219.0], [28.7, 10225.0], [28.8, 10229.0], [28.9, 10236.0], [29.0, 10239.0], [29.1, 10240.0], [29.2, 10240.0], [29.3, 10244.0], [29.4, 10248.0], [29.5, 10255.0], [29.6, 10259.0], [29.7, 10264.0], [29.8, 10268.0], [29.9, 10275.0], [30.0, 10278.0], [30.1, 10286.0], [30.2, 10290.0], [30.3, 10298.0], [30.4, 10302.0], [30.5, 10306.0], [30.6, 10311.0], [30.7, 10317.0], [30.8, 10322.0], [30.9, 10325.0], [31.0, 10331.0], [31.1, 10334.0], [31.2, 10341.0], [31.3, 10345.0], [31.4, 10349.0], [31.5, 10354.0], [31.6, 10361.0], [31.7, 10363.0], [31.8, 10365.0], [31.9, 10370.0], [32.0, 10373.0], [32.1, 10375.0], [32.2, 10381.0], [32.3, 10386.0], [32.4, 10392.0], [32.5, 10396.0], [32.6, 10401.0], [32.7, 10404.0], [32.8, 10407.0], [32.9, 10411.0], [33.0, 10417.0], [33.1, 10422.0], [33.2, 10428.0], [33.3, 10433.0], [33.4, 10436.0], [33.5, 10440.0], [33.6, 10445.0], [33.7, 10448.0], [33.8, 10454.0], [33.9, 10462.0], [34.0, 10465.0], [34.1, 10468.0], [34.2, 10473.0], [34.3, 10477.0], [34.4, 10479.0], [34.5, 10481.0], [34.6, 10484.0], [34.7, 10488.0], [34.8, 10494.0], [34.9, 10496.0], [35.0, 10500.0], [35.1, 10506.0], [35.2, 10510.0], [35.3, 10513.0], [35.4, 10517.0], [35.5, 10524.0], [35.6, 10530.0], [35.7, 10535.0], [35.8, 10540.0], [35.9, 10544.0], [36.0, 10547.0], [36.1, 10551.0], [36.2, 10555.0], [36.3, 10558.0], [36.4, 10561.0], [36.5, 10565.0], [36.6, 10568.0], [36.7, 10572.0], [36.8, 10574.0], [36.9, 10578.0], [37.0, 10583.0], [37.1, 10586.0], [37.2, 10590.0], [37.3, 10594.0], [37.4, 10596.0], [37.5, 10601.0], [37.6, 10603.0], [37.7, 10605.0], [37.8, 10606.0], [37.9, 10610.0], [38.0, 10613.0], [38.1, 10616.0], [38.2, 10619.0], [38.3, 10621.0], [38.4, 10623.0], [38.5, 10627.0], [38.6, 10630.0], [38.7, 10634.0], [38.8, 10636.0], [38.9, 10640.0], [39.0, 10642.0], [39.1, 10644.0], [39.2, 10646.0], [39.3, 10649.0], [39.4, 10651.0], [39.5, 10654.0], [39.6, 10656.0], [39.7, 10659.0], [39.8, 10662.0], [39.9, 10665.0], [40.0, 10671.0], [40.1, 10674.0], [40.2, 10676.0], [40.3, 10680.0], [40.4, 10685.0], [40.5, 10686.0], [40.6, 10689.0], [40.7, 10691.0], [40.8, 10694.0], [40.9, 10699.0], [41.0, 10702.0], [41.1, 10705.0], [41.2, 10707.0], [41.3, 10710.0], [41.4, 10712.0], [41.5, 10713.0], [41.6, 10714.0], [41.7, 10716.0], [41.8, 10719.0], [41.9, 10723.0], [42.0, 10725.0], [42.1, 10729.0], [42.2, 10731.0], [42.3, 10735.0], [42.4, 10737.0], [42.5, 10740.0], [42.6, 10742.0], [42.7, 10745.0], [42.8, 10746.0], [42.9, 10749.0], [43.0, 10751.0], [43.1, 10752.0], [43.2, 10753.0], [43.3, 10757.0], [43.4, 10758.0], [43.5, 10762.0], [43.6, 10764.0], [43.7, 10766.0], [43.8, 10770.0], [43.9, 10771.0], [44.0, 10773.0], [44.1, 10776.0], [44.2, 10779.0], [44.3, 10781.0], [44.4, 10785.0], [44.5, 10787.0], [44.6, 10790.0], [44.7, 10794.0], [44.8, 10797.0], [44.9, 10800.0], [45.0, 10803.0], [45.1, 10804.0], [45.2, 10807.0], [45.3, 10809.0], [45.4, 10812.0], [45.5, 10813.0], [45.6, 10817.0], [45.7, 10819.0], [45.8, 10822.0], [45.9, 10824.0], [46.0, 10826.0], [46.1, 10828.0], [46.2, 10830.0], [46.3, 10833.0], [46.4, 10835.0], [46.5, 10837.0], [46.6, 10839.0], [46.7, 10843.0], [46.8, 10846.0], [46.9, 10849.0], [47.0, 10851.0], [47.1, 10853.0], [47.2, 10855.0], [47.3, 10858.0], [47.4, 10860.0], [47.5, 10863.0], [47.6, 10865.0], [47.7, 10868.0], [47.8, 10869.0], [47.9, 10872.0], [48.0, 10874.0], [48.1, 10876.0], [48.2, 10877.0], [48.3, 10880.0], [48.4, 10882.0], [48.5, 10883.0], [48.6, 10885.0], [48.7, 10886.0], [48.8, 10888.0], [48.9, 10890.0], [49.0, 10893.0], [49.1, 10895.0], [49.2, 10897.0], [49.3, 10899.0], [49.4, 10902.0], [49.5, 10904.0], [49.6, 10905.0], [49.7, 10907.0], [49.8, 10908.0], [49.9, 10910.0], [50.0, 10912.0], [50.1, 10914.0], [50.2, 10915.0], [50.3, 10917.0], [50.4, 10918.0], [50.5, 10920.0], [50.6, 10922.0], [50.7, 10924.0], [50.8, 10926.0], [50.9, 10929.0], [51.0, 10931.0], [51.1, 10933.0], [51.2, 10934.0], [51.3, 10937.0], [51.4, 10938.0], [51.5, 10940.0], [51.6, 10942.0], [51.7, 10943.0], [51.8, 10944.0], [51.9, 10946.0], [52.0, 10947.0], [52.1, 10949.0], [52.2, 10951.0], [52.3, 10952.0], [52.4, 10954.0], [52.5, 10956.0], [52.6, 10958.0], [52.7, 10960.0], [52.8, 10962.0], [52.9, 10963.0], [53.0, 10966.0], [53.1, 10968.0], [53.2, 10970.0], [53.3, 10972.0], [53.4, 10974.0], [53.5, 10975.0], [53.6, 10977.0], [53.7, 10978.0], [53.8, 10980.0], [53.9, 10982.0], [54.0, 10984.0], [54.1, 10985.0], [54.2, 10987.0], [54.3, 10989.0], [54.4, 10991.0], [54.5, 10993.0], [54.6, 10995.0], [54.7, 10997.0], [54.8, 10998.0], [54.9, 11000.0], [55.0, 11002.0], [55.1, 11004.0], [55.2, 11005.0], [55.3, 11007.0], [55.4, 11007.0], [55.5, 11008.0], [55.6, 11008.0], [55.7, 11009.0], [55.8, 11011.0], [55.9, 11012.0], [56.0, 11014.0], [56.1, 11015.0], [56.2, 11017.0], [56.3, 11019.0], [56.4, 11021.0], [56.5, 11022.0], [56.6, 11024.0], [56.7, 11025.0], [56.8, 11027.0], [56.9, 11029.0], [57.0, 11031.0], [57.1, 11032.0], [57.2, 11035.0], [57.3, 11037.0], [57.4, 11039.0], [57.5, 11040.0], [57.6, 11041.0], [57.7, 11042.0], [57.8, 11044.0], [57.9, 11046.0], [58.0, 11048.0], [58.1, 11049.0], [58.2, 11051.0], [58.3, 11053.0], [58.4, 11055.0], [58.5, 11056.0], [58.6, 11058.0], [58.7, 11060.0], [58.8, 11062.0], [58.9, 11064.0], [59.0, 11066.0], [59.1, 11068.0], [59.2, 11069.0], [59.3, 11072.0], [59.4, 11074.0], [59.5, 11076.0], [59.6, 11077.0], [59.7, 11079.0], [59.8, 11081.0], [59.9, 11083.0], [60.0, 11085.0], [60.1, 11087.0], [60.2, 11089.0], [60.3, 11091.0], [60.4, 11094.0], [60.5, 11095.0], [60.6, 11096.0], [60.7, 11098.0], [60.8, 11101.0], [60.9, 11103.0], [61.0, 11105.0], [61.1, 11107.0], [61.2, 11109.0], [61.3, 11112.0], [61.4, 11114.0], [61.5, 11116.0], [61.6, 11118.0], [61.7, 11119.0], [61.8, 11122.0], [61.9, 11123.0], [62.0, 11124.0], [62.1, 11126.0], [62.2, 11127.0], [62.3, 11129.0], [62.4, 11132.0], [62.5, 11133.0], [62.6, 11135.0], [62.7, 11137.0], [62.8, 11138.0], [62.9, 11140.0], [63.0, 11141.0], [63.1, 11143.0], [63.2, 11144.0], [63.3, 11148.0], [63.4, 11151.0], [63.5, 11152.0], [63.6, 11154.0], [63.7, 11155.0], [63.8, 11156.0], [63.9, 11158.0], [64.0, 11159.0], [64.1, 11161.0], [64.2, 11163.0], [64.3, 11165.0], [64.4, 11166.0], [64.5, 11169.0], [64.6, 11171.0], [64.7, 11175.0], [64.8, 11177.0], [64.9, 11180.0], [65.0, 11182.0], [65.1, 11185.0], [65.2, 11187.0], [65.3, 11189.0], [65.4, 11190.0], [65.5, 11194.0], [65.6, 11197.0], [65.7, 11199.0], [65.8, 11202.0], [65.9, 11205.0], [66.0, 11207.0], [66.1, 11210.0], [66.2, 11213.0], [66.3, 11215.0], [66.4, 11217.0], [66.5, 11220.0], [66.6, 11223.0], [66.7, 11225.0], [66.8, 11229.0], [66.9, 11231.0], [67.0, 11234.0], [67.1, 11237.0], [67.2, 11240.0], [67.3, 11243.0], [67.4, 11244.0], [67.5, 11249.0], [67.6, 11252.0], [67.7, 11255.0], [67.8, 11258.0], [67.9, 11262.0], [68.0, 11263.0], [68.1, 11264.0], [68.2, 11266.0], [68.3, 11270.0], [68.4, 11274.0], [68.5, 11276.0], [68.6, 11279.0], [68.7, 11281.0], [68.8, 11284.0], [68.9, 11286.0], [69.0, 11290.0], [69.1, 11293.0], [69.2, 11296.0], [69.3, 11298.0], [69.4, 11302.0], [69.5, 11304.0], [69.6, 11307.0], [69.7, 11311.0], [69.8, 11318.0], [69.9, 11322.0], [70.0, 11325.0], [70.1, 11330.0], [70.2, 11333.0], [70.3, 11336.0], [70.4, 11341.0], [70.5, 11346.0], [70.6, 11353.0], [70.7, 11356.0], [70.8, 11361.0], [70.9, 11366.0], [71.0, 11371.0], [71.1, 11374.0], [71.2, 11379.0], [71.3, 11380.0], [71.4, 11385.0], [71.5, 11390.0], [71.6, 11394.0], [71.7, 11396.0], [71.8, 11402.0], [71.9, 11406.0], [72.0, 11410.0], [72.1, 11412.0], [72.2, 11417.0], [72.3, 11421.0], [72.4, 11426.0], [72.5, 11429.0], [72.6, 11433.0], [72.7, 11435.0], [72.8, 11438.0], [72.9, 11440.0], [73.0, 11444.0], [73.1, 11451.0], [73.2, 11455.0], [73.3, 11459.0], [73.4, 11464.0], [73.5, 11471.0], [73.6, 11478.0], [73.7, 11483.0], [73.8, 11485.0], [73.9, 11493.0], [74.0, 11503.0], [74.1, 11510.0], [74.2, 11516.0], [74.3, 11519.0], [74.4, 11520.0], [74.5, 11524.0], [74.6, 11526.0], [74.7, 11531.0], [74.8, 11534.0], [74.9, 11538.0], [75.0, 11544.0], [75.1, 11547.0], [75.2, 11553.0], [75.3, 11557.0], [75.4, 11561.0], [75.5, 11565.0], [75.6, 11573.0], [75.7, 11581.0], [75.8, 11584.0], [75.9, 11590.0], [76.0, 11595.0], [76.1, 11604.0], [76.2, 11611.0], [76.3, 11615.0], [76.4, 11623.0], [76.5, 11629.0], [76.6, 11631.0], [76.7, 11641.0], [76.8, 11650.0], [76.9, 11655.0], [77.0, 11658.0], [77.1, 11665.0], [77.2, 11671.0], [77.3, 11681.0], [77.4, 11689.0], [77.5, 11699.0], [77.6, 11706.0], [77.7, 11712.0], [77.8, 11726.0], [77.9, 11736.0], [78.0, 11745.0], [78.1, 11753.0], [78.2, 11763.0], [78.3, 11769.0], [78.4, 11775.0], [78.5, 11776.0], [78.6, 11777.0], [78.7, 11784.0], [78.8, 11787.0], [78.9, 11796.0], [79.0, 11810.0], [79.1, 11816.0], [79.2, 11834.0], [79.3, 11841.0], [79.4, 11860.0], [79.5, 11872.0], [79.6, 11893.0], [79.7, 11907.0], [79.8, 11922.0], [79.9, 11943.0], [80.0, 11959.0], [80.1, 11977.0], [80.2, 11999.0], [80.3, 12016.0], [80.4, 12026.0], [80.5, 12032.0], [80.6, 12045.0], [80.7, 12065.0], [80.8, 12077.0], [80.9, 12088.0], [81.0, 12097.0], [81.1, 12118.0], [81.2, 12136.0], [81.3, 12176.0], [81.4, 12193.0], [81.5, 12199.0], [81.6, 12230.0], [81.7, 12249.0], [81.8, 12286.0], [81.9, 12293.0], [82.0, 12320.0], [82.1, 12356.0], [82.2, 12387.0], [82.3, 12410.0], [82.4, 12424.0], [82.5, 12441.0], [82.6, 12467.0], [82.7, 12492.0], [82.8, 12513.0], [82.9, 12542.0], [83.0, 12568.0], [83.1, 12606.0], [83.2, 12633.0], [83.3, 12663.0], [83.4, 12684.0], [83.5, 12722.0], [83.6, 12738.0], [83.7, 12767.0], [83.8, 12799.0], [83.9, 12804.0], [84.0, 12829.0], [84.1, 12863.0], [84.2, 12905.0], [84.3, 12925.0], [84.4, 12980.0], [84.5, 13014.0], [84.6, 13055.0], [84.7, 13062.0], [84.8, 13137.0], [84.9, 13184.0], [85.0, 13202.0], [85.1, 13229.0], [85.2, 13245.0], [85.3, 13279.0], [85.4, 13299.0], [85.5, 13307.0], [85.6, 13308.0], [85.7, 13308.0], [85.8, 13309.0], [85.9, 13310.0], [86.0, 13310.0], [86.1, 13310.0], [86.2, 13311.0], [86.3, 13311.0], [86.4, 13311.0], [86.5, 13311.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13311.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13312.0], [90.5, 13312.0], [90.6, 13312.0], [90.7, 13313.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13313.0], [91.1, 13313.0], [91.2, 13313.0], [91.3, 13313.0], [91.4, 13314.0], [91.5, 13315.0], [91.6, 13316.0], [91.7, 13316.0], [91.8, 13320.0], [91.9, 13340.0], [92.0, 13345.0], [92.1, 13365.0], [92.2, 13387.0], [92.3, 13409.0], [92.4, 13417.0], [92.5, 13464.0], [92.6, 13554.0], [92.7, 13568.0], [92.8, 13749.0], [92.9, 13800.0], [93.0, 13823.0], [93.1, 13823.0], [93.2, 13824.0], [93.3, 13824.0], [93.4, 13824.0], [93.5, 13824.0], [93.6, 13825.0], [93.7, 13825.0], [93.8, 13825.0], [93.9, 13847.0], [94.0, 13899.0], [94.1, 14040.0], [94.2, 14080.0], [94.3, 14158.0], [94.4, 14315.0], [94.5, 14334.0], [94.6, 14335.0], [94.7, 14335.0], [94.8, 14335.0], [94.9, 14336.0], [95.0, 14336.0], [95.1, 14391.0], [95.2, 14592.0], [95.3, 14771.0], [95.4, 14848.0], [95.5, 14953.0], [95.6, 15097.0], [95.7, 15167.0], [95.8, 15359.0], [95.9, 15360.0], [96.0, 15672.0], [96.1, 16013.0], [96.2, 16370.0], [96.3, 16384.0], [96.4, 16527.0], [96.5, 17134.0], [96.6, 17408.0], [96.7, 18176.0], [96.8, 18816.0], [96.9, 23896.0], [97.0, 26367.0], [97.1, 26367.0], [97.2, 26368.0], [97.3, 26381.0], [97.4, 27132.0], [97.5, 27647.0], [97.6, 28412.0], [97.7, 30026.0], [97.8, 30566.0], [97.9, 32512.0], [98.0, 44175.0], [98.1, 53527.0], [98.2, 60589.0], [98.3, 77056.0], [98.4, 85761.0], [98.5, 91544.0], [98.6, 105729.0], [98.7, 106241.0], [98.8, 106495.0], [98.9, 106592.0], [99.0, 106751.0], [99.1, 106778.0], [99.2, 106997.0], [99.3, 107008.0], [99.4, 107296.0], [99.5, 109055.0], [99.6, 114684.0], [99.7, 118528.0], [99.8, 132629.0], [99.9, 204660.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 3.0], [8.6, 18.0], [8.7, 24.0], [8.8, 28.0], [8.9, 31.0], [9.0, 33.0], [9.1, 34.0], [9.2, 38.0], [9.3, 42.0], [9.4, 89.0], [9.5, 297.0], [9.6, 455.0], [9.7, 643.0], [9.8, 656.0], [9.9, 724.0], [10.0, 917.0], [10.1, 1058.0], [10.2, 1094.0], [10.3, 1478.0], [10.4, 1674.0], [10.5, 1808.0], [10.6, 1836.0], [10.7, 2010.0], [10.8, 2190.0], [10.9, 2330.0], [11.0, 2389.0], [11.1, 2459.0], [11.2, 2534.0], [11.3, 2710.0], [11.4, 2749.0], [11.5, 2889.0], [11.6, 3128.0], [11.7, 3282.0], [11.8, 3391.0], [11.9, 3836.0], [12.0, 3952.0], [12.1, 4166.0], [12.2, 4285.0], [12.3, 4403.0], [12.4, 4555.0], [12.5, 4688.0], [12.6, 4792.0], [12.7, 4806.0], [12.8, 5040.0], [12.9, 5134.0], [13.0, 5314.0], [13.1, 5384.0], [13.2, 5448.0], [13.3, 5500.0], [13.4, 5512.0], [13.5, 5664.0], [13.6, 5810.0], [13.7, 6020.0], [13.8, 6348.0], [13.9, 6766.0], [14.0, 7046.0], [14.1, 7066.0], [14.2, 7083.0], [14.3, 7118.0], [14.4, 7166.0], [14.5, 7166.0], [14.6, 7166.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7167.0], [15.3, 7167.0], [15.4, 7167.0], [15.5, 7167.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7169.0], [16.4, 7176.0], [16.5, 7192.0], [16.6, 7224.0], [16.7, 7331.0], [16.8, 7353.0], [16.9, 7371.0], [17.0, 7394.0], [17.1, 7415.0], [17.2, 7420.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7425.0], [18.9, 7425.0], [19.0, 7427.0], [19.1, 7429.0], [19.2, 7477.0], [19.3, 7503.0], [19.4, 7524.0], [19.5, 7544.0], [19.6, 7676.0], [19.7, 7678.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7681.0], [20.9, 7681.0], [21.0, 7681.0], [21.1, 7682.0], [21.2, 7682.0], [21.3, 7684.0], [21.4, 7686.0], [21.5, 7849.0], [21.6, 7886.0], [21.7, 7932.0], [21.8, 7932.0], [21.9, 7933.0], [22.0, 7934.0], [22.1, 7934.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7935.0], [22.5, 7935.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7937.0], [23.4, 7939.0], [23.5, 7939.0], [23.6, 7940.0], [23.7, 7949.0], [23.8, 8018.0], [23.9, 8075.0], [24.0, 8120.0], [24.1, 8144.0], [24.2, 8188.0], [24.3, 8188.0], [24.4, 8190.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8192.0], [25.3, 8192.0], [25.4, 8193.0], [25.5, 8213.0], [25.6, 8255.0], [25.7, 8263.0], [25.8, 8284.0], [25.9, 8313.0], [26.0, 8379.0], [26.1, 8446.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8448.0], [26.5, 8450.0], [26.6, 8452.0], [26.7, 8534.0], [26.8, 8554.0], [26.9, 8590.0], [27.0, 8657.0], [27.1, 8671.0], [27.2, 8681.0], [27.3, 8699.0], [27.4, 8700.0], [27.5, 8700.0], [27.6, 8702.0], [27.7, 8702.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8705.0], [29.0, 8705.0], [29.1, 8707.0], [29.2, 8708.0], [29.3, 8709.0], [29.4, 8757.0], [29.5, 8801.0], [29.6, 8836.0], [29.7, 8888.0], [29.8, 8915.0], [29.9, 8957.0], [30.0, 8959.0], [30.1, 8959.0], [30.2, 8959.0], [30.3, 8960.0], [30.4, 8960.0], [30.5, 8960.0], [30.6, 8961.0], [30.7, 8961.0], [30.8, 8963.0], [30.9, 9006.0], [31.0, 9037.0], [31.1, 9081.0], [31.2, 9084.0], [31.3, 9085.0], [31.4, 9089.0], [31.5, 9174.0], [31.6, 9197.0], [31.7, 9206.0], [31.8, 9211.0], [31.9, 9211.0], [32.0, 9214.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9215.0], [32.7, 9215.0], [32.8, 9215.0], [32.9, 9215.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9216.0], [33.9, 9217.0], [34.0, 9224.0], [34.1, 9237.0], [34.2, 9245.0], [34.3, 9271.0], [34.4, 9295.0], [34.5, 9309.0], [34.6, 9326.0], [34.7, 9347.0], [34.8, 9394.0], [34.9, 9428.0], [35.0, 9453.0], [35.1, 9471.0], [35.2, 9472.0], [35.3, 9473.0], [35.4, 9494.0], [35.5, 9508.0], [35.6, 9518.0], [35.7, 9562.0], [35.8, 9581.0], [35.9, 9599.0], [36.0, 9637.0], [36.1, 9682.0], [36.2, 9701.0], [36.3, 9721.0], [36.4, 9727.0], [36.5, 9727.0], [36.6, 9727.0], [36.7, 9728.0], [36.8, 9728.0], [36.9, 9728.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9729.0], [37.3, 9732.0], [37.4, 9748.0], [37.5, 9765.0], [37.6, 9790.0], [37.7, 9797.0], [37.8, 9814.0], [37.9, 9851.0], [38.0, 9873.0], [38.1, 9898.0], [38.2, 9917.0], [38.3, 9921.0], [38.4, 9931.0], [38.5, 9951.0], [38.6, 9956.0], [38.7, 9964.0], [38.8, 9982.0], [38.9, 9983.0], [39.0, 9983.0], [39.1, 9984.0], [39.2, 9984.0], [39.3, 9985.0], [39.4, 9985.0], [39.5, 9986.0], [39.6, 10004.0], [39.7, 10047.0], [39.8, 10085.0], [39.9, 10096.0], [40.0, 10098.0], [40.1, 10164.0], [40.2, 10169.0], [40.3, 10190.0], [40.4, 10221.0], [40.5, 10239.0], [40.6, 10239.0], [40.7, 10240.0], [40.8, 10240.0], [40.9, 10240.0], [41.0, 10242.0], [41.1, 10244.0], [41.2, 10244.0], [41.3, 10244.0], [41.4, 10262.0], [41.5, 10275.0], [41.6, 10292.0], [41.7, 10350.0], [41.8, 10360.0], [41.9, 10377.0], [42.0, 10391.0], [42.1, 10421.0], [42.2, 10481.0], [42.3, 10497.0], [42.4, 10528.0], [42.5, 10574.0], [42.6, 10594.0], [42.7, 10611.0], [42.8, 10650.0], [42.9, 10683.0], [43.0, 10722.0], [43.1, 10741.0], [43.2, 10750.0], [43.3, 10750.0], [43.4, 10751.0], [43.5, 10751.0], [43.6, 10752.0], [43.7, 10752.0], [43.8, 10756.0], [43.9, 10777.0], [44.0, 10865.0], [44.1, 10899.0], [44.2, 10985.0], [44.3, 11007.0], [44.4, 11008.0], [44.5, 11008.0], [44.6, 11009.0], [44.7, 11011.0], [44.8, 11016.0], [44.9, 11026.0], [45.0, 11171.0], [45.1, 11206.0], [45.2, 11211.0], [45.3, 11262.0], [45.4, 11262.0], [45.5, 11263.0], [45.6, 11263.0], [45.7, 11263.0], [45.8, 11264.0], [45.9, 11268.0], [46.0, 11332.0], [46.1, 11375.0], [46.2, 11438.0], [46.3, 11516.0], [46.4, 11518.0], [46.5, 11519.0], [46.6, 11520.0], [46.7, 11520.0], [46.8, 11550.0], [46.9, 11668.0], [47.0, 11751.0], [47.1, 11773.0], [47.2, 11775.0], [47.3, 11776.0], [47.4, 11776.0], [47.5, 11776.0], [47.6, 11776.0], [47.7, 11777.0], [47.8, 11777.0], [47.9, 11798.0], [48.0, 12016.0], [48.1, 12031.0], [48.2, 12032.0], [48.3, 12032.0], [48.4, 12161.0], [48.5, 12205.0], [48.6, 12246.0], [48.7, 12286.0], [48.8, 12287.0], [48.9, 12288.0], [49.0, 12289.0], [49.1, 12332.0], [49.2, 12407.0], [49.3, 12495.0], [49.4, 12544.0], [49.5, 12544.0], [49.6, 12613.0], [49.7, 12661.0], [49.8, 12799.0], [49.9, 12799.0], [50.0, 12800.0], [50.1, 12800.0], [50.2, 12800.0], [50.3, 12800.0], [50.4, 12800.0], [50.5, 12801.0], [50.6, 12829.0], [50.7, 12898.0], [50.8, 12945.0], [50.9, 12967.0], [51.0, 12978.0], [51.1, 13054.0], [51.2, 13056.0], [51.3, 13057.0], [51.4, 13070.0], [51.5, 13167.0], [51.6, 13175.0], [51.7, 13191.0], [51.8, 13198.0], [51.9, 13205.0], [52.0, 13206.0], [52.1, 13208.0], [52.2, 13214.0], [52.3, 13223.0], [52.4, 13225.0], [52.5, 13234.0], [52.6, 13239.0], [52.7, 13239.0], [52.8, 13245.0], [52.9, 13251.0], [53.0, 13259.0], [53.1, 13270.0], [53.2, 13273.0], [53.3, 13275.0], [53.4, 13284.0], [53.5, 13299.0], [53.6, 13306.0], [53.7, 13307.0], [53.8, 13307.0], [53.9, 13308.0], [54.0, 13308.0], [54.1, 13308.0], [54.2, 13308.0], [54.3, 13308.0], [54.4, 13308.0], [54.5, 13308.0], [54.6, 13309.0], [54.7, 13309.0], [54.8, 13309.0], [54.9, 13309.0], [55.0, 13309.0], [55.1, 13309.0], [55.2, 13309.0], [55.3, 13309.0], [55.4, 13309.0], [55.5, 13309.0], [55.6, 13310.0], [55.7, 13310.0], [55.8, 13310.0], [55.9, 13310.0], [56.0, 13310.0], [56.1, 13310.0], [56.2, 13310.0], [56.3, 13310.0], [56.4, 13310.0], [56.5, 13310.0], [56.6, 13310.0], [56.7, 13310.0], [56.8, 13310.0], [56.9, 13310.0], [57.0, 13311.0], [57.1, 13311.0], [57.2, 13311.0], [57.3, 13311.0], [57.4, 13311.0], [57.5, 13311.0], [57.6, 13311.0], [57.7, 13311.0], [57.8, 13311.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13313.0], [70.7, 13313.0], [70.8, 13313.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13314.0], [73.7, 13314.0], [73.8, 13314.0], [73.9, 13314.0], [74.0, 13314.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13315.0], [74.4, 13315.0], [74.5, 13315.0], [74.6, 13315.0], [74.7, 13315.0], [74.8, 13316.0], [74.9, 13316.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13316.0], [75.3, 13317.0], [75.4, 13317.0], [75.5, 13318.0], [75.6, 13319.0], [75.7, 13319.0], [75.8, 13324.0], [75.9, 13337.0], [76.0, 13348.0], [76.1, 13350.0], [76.2, 13357.0], [76.3, 13364.0], [76.4, 13374.0], [76.5, 13376.0], [76.6, 13377.0], [76.7, 13382.0], [76.8, 13392.0], [76.9, 13397.0], [77.0, 13401.0], [77.1, 13411.0], [77.2, 13418.0], [77.3, 13429.0], [77.4, 13441.0], [77.5, 13456.0], [77.6, 13506.0], [77.7, 13531.0], [77.8, 13567.0], [77.9, 13568.0], [78.0, 13568.0], [78.1, 13569.0], [78.2, 13671.0], [78.3, 13760.0], [78.4, 13781.0], [78.5, 13798.0], [78.6, 13821.0], [78.7, 13822.0], [78.8, 13823.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13825.0], [80.6, 13825.0], [80.7, 13825.0], [80.8, 13825.0], [80.9, 13825.0], [81.0, 13825.0], [81.1, 13825.0], [81.2, 13825.0], [81.3, 13826.0], [81.4, 13827.0], [81.5, 13827.0], [81.6, 13828.0], [81.7, 13828.0], [81.8, 13829.0], [81.9, 13846.0], [82.0, 14078.0], [82.1, 14081.0], [82.2, 14191.0], [82.3, 14222.0], [82.4, 14292.0], [82.5, 14332.0], [82.6, 14333.0], [82.7, 14334.0], [82.8, 14334.0], [82.9, 14335.0], [83.0, 14335.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14336.0], [83.7, 14336.0], [83.8, 14336.0], [83.9, 14336.0], [84.0, 14336.0], [84.1, 14337.0], [84.2, 14588.0], [84.3, 14591.0], [84.4, 14591.0], [84.5, 14592.0], [84.6, 14738.0], [84.7, 14847.0], [84.8, 14847.0], [84.9, 14848.0], [85.0, 14884.0], [85.1, 15104.0], [85.2, 15235.0], [85.3, 15301.0], [85.4, 15359.0], [85.5, 15360.0], [85.6, 15484.0], [85.7, 15488.0], [85.8, 15613.0], [85.9, 15616.0], [86.0, 15694.0], [86.1, 15871.0], [86.2, 16198.0], [86.3, 16359.0], [86.4, 16383.0], [86.5, 16384.0], [86.6, 16385.0], [86.7, 16422.0], [86.8, 16692.0], [86.9, 16846.0], [87.0, 17148.0], [87.1, 17151.0], [87.2, 17505.0], [87.3, 17698.0], [87.4, 17856.0], [87.5, 18175.0], [87.6, 18176.0], [87.7, 18686.0], [87.8, 18687.0], [87.9, 18688.0], [88.0, 19713.0], [88.1, 19737.0], [88.2, 19917.0], [88.3, 20607.0], [88.4, 20985.0], [88.5, 20993.0], [88.6, 24881.0], [88.7, 25855.0], [88.8, 26367.0], [88.9, 26367.0], [89.0, 26367.0], [89.1, 26367.0], [89.2, 26367.0], [89.3, 26367.0], [89.4, 26368.0], [89.5, 26368.0], [89.6, 26368.0], [89.7, 26452.0], [89.8, 26624.0], [89.9, 26624.0], [90.0, 26624.0], [90.1, 26703.0], [90.2, 27154.0], [90.3, 27390.0], [90.4, 27392.0], [90.5, 27409.0], [90.6, 27647.0], [90.7, 27648.0], [90.8, 27649.0], [90.9, 27649.0], [91.0, 28390.0], [91.1, 28754.0], [91.2, 28820.0], [91.3, 28945.0], [91.4, 29569.0], [91.5, 29615.0], [91.6, 29691.0], [91.7, 30720.0], [91.8, 31850.0], [91.9, 32512.0], [92.0, 32513.0], [92.1, 32768.0], [92.2, 35503.0], [92.3, 40852.0], [92.4, 49208.0], [92.5, 52525.0], [92.6, 53073.0], [92.7, 53253.0], [92.8, 53789.0], [92.9, 57389.0], [93.0, 59409.0], [93.1, 59415.0], [93.2, 62376.0], [93.3, 65226.0], [93.4, 69872.0], [93.5, 74918.0], [93.6, 77057.0], [93.7, 79536.0], [93.8, 84479.0], [93.9, 84480.0], [94.0, 85503.0], [94.1, 85504.0], [94.2, 86013.0], [94.3, 87036.0], [94.4, 88154.0], [94.5, 91135.0], [94.6, 99065.0], [94.7, 102113.0], [94.8, 105346.0], [94.9, 105729.0], [95.0, 105814.0], [95.1, 105908.0], [95.2, 106203.0], [95.3, 106240.0], [95.4, 106241.0], [95.5, 106299.0], [95.6, 106372.0], [95.7, 106490.0], [95.8, 106492.0], [95.9, 106495.0], [96.0, 106497.0], [96.1, 106635.0], [96.2, 106669.0], [96.3, 106751.0], [96.4, 106751.0], [96.5, 106751.0], [96.6, 106752.0], [96.7, 106752.0], [96.8, 106784.0], [96.9, 106826.0], [97.0, 106914.0], [97.1, 106983.0], [97.2, 106997.0], [97.3, 107003.0], [97.4, 107005.0], [97.5, 107007.0], [97.6, 107008.0], [97.7, 107009.0], [97.8, 107058.0], [97.9, 107155.0], [98.0, 107259.0], [98.1, 107262.0], [98.2, 107267.0], [98.3, 107346.0], [98.4, 107923.0], [98.5, 109056.0], [98.6, 109682.0], [98.7, 111104.0], [98.8, 113664.0], [98.9, 114684.0], [99.0, 115970.0], [99.1, 123258.0], [99.2, 127232.0], [99.3, 128593.0], [99.4, 136368.0], [99.5, 146176.0], [99.6, 154624.0], [99.7, 210689.0], [99.8, 210943.0], [99.9, 211332.0], [100.0, 212992.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 650.0, "series": [{"data": [[0.0, 148.0], [106700.0, 20.0], [153000.0, 1.0], [154600.0, 1.0], [48100.0, 2.0], [52900.0, 1.0], [52500.0, 1.0], [209900.0, 1.0], [57300.0, 1.0], [77000.0, 1.0], [109000.0, 4.0], [114600.0, 2.0], [500.0, 2.0], [700.0, 4.0], [800.0, 3.0], [1000.0, 1.0], [1100.0, 1.0], [1300.0, 9.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 4.0], [2400.0, 2.0], [2600.0, 2.0], [2800.0, 1.0], [2900.0, 5.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3600.0, 3.0], [3800.0, 2.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 2.0], [4400.0, 1.0], [4500.0, 3.0], [4600.0, 1.0], [4800.0, 2.0], [4900.0, 2.0], [5100.0, 1.0], [5300.0, 1.0], [5200.0, 3.0], [85700.0, 3.0], [5500.0, 3.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 2.0], [6100.0, 1.0], [6000.0, 2.0], [5900.0, 1.0], [6200.0, 3.0], [6400.0, 2.0], [6500.0, 1.0], [105700.0, 1.0], [6700.0, 2.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 40.0], [7400.0, 37.0], [7600.0, 40.0], [7900.0, 51.0], [8100.0, 33.0], [8000.0, 1.0], [8300.0, 1.0], [8600.0, 7.0], [8700.0, 46.0], [8200.0, 2.0], [8400.0, 9.0], [8900.0, 31.0], [9100.0, 3.0], [9000.0, 2.0], [9200.0, 55.0], [9600.0, 6.0], [9300.0, 5.0], [9700.0, 33.0], [9400.0, 17.0], [9500.0, 3.0], [10200.0, 43.0], [9800.0, 11.0], [9900.0, 18.0], [10000.0, 14.0], [10100.0, 11.0], [10300.0, 14.0], [10600.0, 11.0], [10400.0, 11.0], [10700.0, 23.0], [10500.0, 15.0], [10900.0, 14.0], [10800.0, 10.0], [11000.0, 25.0], [11100.0, 10.0], [11200.0, 22.0], [11300.0, 5.0], [11400.0, 5.0], [11600.0, 6.0], [11700.0, 31.0], [11500.0, 12.0], [11800.0, 2.0], [12100.0, 2.0], [12200.0, 19.0], [11900.0, 5.0], [12000.0, 12.0], [12500.0, 4.0], [12700.0, 11.0], [12400.0, 2.0], [12300.0, 1.0], [12600.0, 1.0], [12800.0, 5.0], [13300.0, 445.0], [13000.0, 6.0], [13200.0, 3.0], [13100.0, 2.0], [13400.0, 1.0], [13800.0, 75.0], [13500.0, 5.0], [13600.0, 1.0], [14000.0, 7.0], [14300.0, 62.0], [14100.0, 1.0], [14200.0, 1.0], [13900.0, 1.0], [14500.0, 5.0], [14800.0, 9.0], [14400.0, 1.0], [14600.0, 1.0], [15300.0, 9.0], [14900.0, 1.0], [15200.0, 2.0], [15600.0, 4.0], [15700.0, 1.0], [15800.0, 4.0], [15500.0, 1.0], [15400.0, 1.0], [16300.0, 7.0], [16200.0, 1.0], [16400.0, 2.0], [17400.0, 1.0], [17800.0, 3.0], [17600.0, 1.0], [19800.0, 1.0], [22200.0, 1.0], [26600.0, 5.0], [25800.0, 2.0], [27600.0, 2.0], [28400.0, 4.0], [29600.0, 1.0], [53200.0, 6.0], [52800.0, 1.0], [54000.0, 1.0], [106400.0, 1.0], [108000.0, 2.0], [107200.0, 3.0], [113600.0, 1.0], [127200.0, 1.0], [85500.0, 8.0], [91100.0, 1.0], [116700.0, 2.0], [115900.0, 1.0], [132300.0, 1.0], [52700.0, 1.0], [87000.0, 2.0], [105400.0, 2.0], [106200.0, 4.0], [107000.0, 13.0], [126200.0, 1.0], [136400.0, 2.0], [210900.0, 1.0], [69300.0, 1.0], [106900.0, 2.0], [107700.0, 1.0], [151000.0, 1.0], [17100.0, 5.0], [16700.0, 1.0], [18100.0, 7.0], [17700.0, 2.0], [19700.0, 2.0], [20900.0, 3.0], [20500.0, 1.0], [26300.0, 25.0], [27100.0, 1.0], [27300.0, 9.0], [29300.0, 1.0], [28700.0, 3.0], [28900.0, 1.0], [29500.0, 1.0], [32700.0, 4.0], [32500.0, 2.0], [147100.0, 1.0], [52200.0, 2.0], [53400.0, 1.0], [56200.0, 1.0], [59400.0, 5.0], [84400.0, 2.0], [86000.0, 2.0], [129200.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 239.0], [212900.0, 2.0], [66700.0, 1.0], [91500.0, 1.0], [105900.0, 1.0], [106700.0, 19.0], [153000.0, 1.0], [154600.0, 3.0], [210600.0, 1.0], [33700.0, 2.0], [34100.0, 1.0], [44100.0, 1.0], [49300.0, 4.0], [53700.0, 1.0], [57300.0, 1.0], [60500.0, 3.0], [64900.0, 4.0], [77000.0, 2.0], [105800.0, 1.0], [103400.0, 1.0], [109000.0, 5.0], [114600.0, 3.0], [156400.0, 1.0], [1100.0, 11.0], [1200.0, 98.0], [1300.0, 29.0], [1400.0, 17.0], [1500.0, 7.0], [1600.0, 9.0], [1700.0, 11.0], [1800.0, 12.0], [1900.0, 22.0], [2000.0, 33.0], [2100.0, 18.0], [2200.0, 13.0], [2300.0, 24.0], [2400.0, 11.0], [2500.0, 11.0], [2600.0, 16.0], [2700.0, 16.0], [2800.0, 11.0], [2900.0, 8.0], [3000.0, 12.0], [3100.0, 32.0], [3200.0, 14.0], [3300.0, 12.0], [3400.0, 12.0], [3500.0, 39.0], [3600.0, 37.0], [3700.0, 31.0], [3800.0, 23.0], [3900.0, 15.0], [4000.0, 23.0], [4200.0, 24.0], [4100.0, 20.0], [4300.0, 11.0], [4600.0, 12.0], [4400.0, 14.0], [4500.0, 12.0], [4700.0, 10.0], [4800.0, 7.0], [4900.0, 19.0], [5100.0, 13.0], [5000.0, 23.0], [5200.0, 11.0], [5300.0, 6.0], [85700.0, 5.0], [5400.0, 9.0], [5500.0, 10.0], [5600.0, 9.0], [5700.0, 14.0], [5800.0, 36.0], [6000.0, 27.0], [5900.0, 34.0], [6100.0, 20.0], [6200.0, 16.0], [6300.0, 14.0], [6400.0, 20.0], [6500.0, 20.0], [6600.0, 33.0], [105700.0, 9.0], [6800.0, 38.0], [6700.0, 38.0], [6900.0, 19.0], [107300.0, 2.0], [106500.0, 3.0], [7000.0, 12.0], [7100.0, 64.0], [7200.0, 10.0], [7300.0, 13.0], [7400.0, 70.0], [118500.0, 1.0], [7600.0, 58.0], [7500.0, 10.0], [7800.0, 12.0], [7700.0, 5.0], [7900.0, 74.0], [8000.0, 13.0], [8100.0, 35.0], [8300.0, 11.0], [8200.0, 16.0], [8400.0, 26.0], [8500.0, 10.0], [8600.0, 25.0], [8700.0, 61.0], [132600.0, 2.0], [9200.0, 99.0], [9000.0, 4.0], [8800.0, 13.0], [9100.0, 9.0], [8900.0, 29.0], [9600.0, 26.0], [9500.0, 24.0], [9400.0, 51.0], [9300.0, 33.0], [9700.0, 78.0], [9800.0, 56.0], [9900.0, 97.0], [10000.0, 112.0], [10100.0, 125.0], [10200.0, 203.0], [10300.0, 212.0], [10400.0, 232.0], [10500.0, 236.0], [10600.0, 327.0], [10700.0, 378.0], [10800.0, 422.0], [11000.0, 559.0], [11100.0, 473.0], [10900.0, 529.0], [11200.0, 345.0], [11400.0, 209.0], [11300.0, 230.0], [11700.0, 135.0], [11600.0, 141.0], [11500.0, 200.0], [11900.0, 54.0], [12000.0, 79.0], [12100.0, 45.0], [11800.0, 67.0], [12200.0, 40.0], [12300.0, 35.0], [12400.0, 43.0], [12500.0, 31.0], [12700.0, 36.0], [12600.0, 37.0], [204600.0, 1.0], [12800.0, 33.0], [13000.0, 30.0], [13100.0, 21.0], [13200.0, 40.0], [12900.0, 25.0], [13300.0, 650.0], [13400.0, 30.0], [13700.0, 14.0], [13500.0, 17.0], [13800.0, 106.0], [13600.0, 2.0], [14200.0, 4.0], [14100.0, 9.0], [14300.0, 69.0], [14000.0, 19.0], [13900.0, 4.0], [14400.0, 4.0], [14600.0, 7.0], [14800.0, 16.0], [14500.0, 6.0], [14700.0, 2.0], [15200.0, 3.0], [15100.0, 10.0], [14900.0, 6.0], [15300.0, 18.0], [15000.0, 6.0], [15400.0, 4.0], [15600.0, 4.0], [15500.0, 1.0], [15800.0, 4.0], [16200.0, 4.0], [16300.0, 14.0], [16000.0, 3.0], [15900.0, 2.0], [16400.0, 7.0], [17000.0, 1.0], [17200.0, 2.0], [17400.0, 4.0], [16800.0, 3.0], [18000.0, 1.0], [17800.0, 1.0], [18800.0, 5.0], [18600.0, 1.0], [23800.0, 1.0], [25000.0, 2.0], [26200.0, 2.0], [26400.0, 1.0], [26600.0, 6.0], [27200.0, 1.0], [27600.0, 10.0], [26800.0, 1.0], [28400.0, 4.0], [29400.0, 2.0], [29800.0, 1.0], [30000.0, 5.0], [30200.0, 2.0], [30600.0, 1.0], [30800.0, 2.0], [34000.0, 1.0], [53200.0, 2.0], [52400.0, 1.0], [53600.0, 1.0], [57200.0, 1.0], [68800.0, 1.0], [106400.0, 14.0], [107200.0, 6.0], [108000.0, 5.0], [113600.0, 4.0], [127200.0, 4.0], [147200.0, 1.0], [153600.0, 1.0], [85500.0, 3.0], [107100.0, 1.0], [115100.0, 1.0], [116700.0, 2.0], [115900.0, 3.0], [211400.0, 3.0], [132300.0, 1.0], [33900.0, 1.0], [52300.0, 1.0], [52700.0, 1.0], [53500.0, 1.0], [57100.0, 1.0], [76600.0, 1.0], [87000.0, 4.0], [97400.0, 1.0], [105400.0, 2.0], [106200.0, 6.0], [107000.0, 9.0], [119000.0, 1.0], [210900.0, 3.0], [106900.0, 10.0], [107700.0, 1.0], [115700.0, 2.0], [127700.0, 1.0], [151000.0, 1.0], [17100.0, 6.0], [16500.0, 3.0], [16700.0, 3.0], [16900.0, 1.0], [18300.0, 1.0], [17700.0, 2.0], [17500.0, 1.0], [18100.0, 7.0], [18500.0, 1.0], [18700.0, 1.0], [18900.0, 2.0], [19700.0, 2.0], [23500.0, 1.0], [23900.0, 1.0], [25500.0, 1.0], [26300.0, 32.0], [25700.0, 1.0], [27300.0, 6.0], [27100.0, 1.0], [28100.0, 1.0], [29500.0, 1.0], [30700.0, 3.0], [30500.0, 1.0], [29900.0, 1.0], [30100.0, 1.0], [30300.0, 2.0], [30900.0, 3.0], [32500.0, 4.0], [147100.0, 1.0], [53800.0, 1.0], [55000.0, 1.0], [84400.0, 5.0], [86000.0, 1.0], [106000.0, 1.0], [106800.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 189.0], [212900.0, 1.0], [211300.0, 1.0], [79500.0, 1.0], [82700.0, 1.0], [105900.0, 1.0], [106700.0, 12.0], [154600.0, 2.0], [210600.0, 2.0], [100.0, 1.0], [136300.0, 1.0], [48100.0, 1.0], [200.0, 1.0], [52500.0, 1.0], [54500.0, 1.0], [53700.0, 2.0], [57300.0, 1.0], [63700.0, 1.0], [69800.0, 1.0], [300.0, 1.0], [77000.0, 2.0], [400.0, 1.0], [105800.0, 2.0], [106600.0, 3.0], [109000.0, 1.0], [114600.0, 1.0], [600.0, 5.0], [700.0, 1.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 4.0], [1300.0, 1.0], [1400.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 4.0], [146100.0, 1.0], [2400.0, 2.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 1.0], [2900.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 2.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4500.0, 2.0], [4600.0, 2.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 2.0], [5300.0, 3.0], [85700.0, 1.0], [5400.0, 3.0], [5500.0, 3.0], [5600.0, 3.0], [88100.0, 1.0], [5800.0, 1.0], [90500.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [100900.0, 1.0], [103300.0, 1.0], [105700.0, 2.0], [6700.0, 2.0], [6900.0, 1.0], [107300.0, 2.0], [106500.0, 1.0], [7000.0, 6.0], [7100.0, 45.0], [7200.0, 3.0], [7400.0, 43.0], [7300.0, 8.0], [7500.0, 6.0], [7600.0, 39.0], [7900.0, 43.0], [7800.0, 3.0], [8100.0, 30.0], [8000.0, 4.0], [8300.0, 4.0], [8600.0, 9.0], [8500.0, 5.0], [8200.0, 7.0], [8400.0, 13.0], [8700.0, 42.0], [8800.0, 6.0], [8900.0, 22.0], [9100.0, 5.0], [9000.0, 11.0], [9200.0, 55.0], [9500.0, 10.0], [9600.0, 5.0], [9300.0, 8.0], [9700.0, 32.0], [9400.0, 12.0], [10000.0, 9.0], [10100.0, 7.0], [9900.0, 29.0], [9800.0, 7.0], [10200.0, 25.0], [10400.0, 5.0], [10300.0, 9.0], [10700.0, 20.0], [10500.0, 7.0], [10600.0, 5.0], [10800.0, 4.0], [10900.0, 2.0], [11200.0, 18.0], [11000.0, 15.0], [11100.0, 1.0], [11700.0, 19.0], [11500.0, 12.0], [11400.0, 1.0], [11300.0, 5.0], [11600.0, 3.0], [11900.0, 1.0], [12200.0, 13.0], [12000.0, 7.0], [12100.0, 2.0], [12400.0, 3.0], [12600.0, 4.0], [12700.0, 5.0], [12500.0, 5.0], [12300.0, 2.0], [12900.0, 6.0], [12800.0, 15.0], [13200.0, 33.0], [13300.0, 469.0], [13100.0, 8.0], [13000.0, 9.0], [13500.0, 12.0], [13400.0, 12.0], [13600.0, 2.0], [13800.0, 68.0], [13700.0, 5.0], [14300.0, 35.0], [14000.0, 3.0], [14100.0, 2.0], [14200.0, 4.0], [13900.0, 1.0], [14700.0, 1.0], [14500.0, 7.0], [14600.0, 1.0], [14800.0, 8.0], [15300.0, 6.0], [15200.0, 2.0], [15100.0, 2.0], [15000.0, 1.0], [15400.0, 3.0], [15600.0, 5.0], [15800.0, 1.0], [15700.0, 1.0], [15500.0, 1.0], [15900.0, 1.0], [16300.0, 9.0], [16100.0, 1.0], [16600.0, 2.0], [16800.0, 1.0], [16400.0, 1.0], [17600.0, 2.0], [17800.0, 2.0], [18600.0, 6.0], [20000.0, 1.0], [20600.0, 1.0], [24800.0, 1.0], [26400.0, 1.0], [25600.0, 1.0], [26600.0, 7.0], [25800.0, 1.0], [27400.0, 1.0], [27600.0, 8.0], [29600.0, 4.0], [28800.0, 3.0], [31800.0, 2.0], [36400.0, 1.0], [40800.0, 1.0], [49200.0, 1.0], [53200.0, 2.0], [58400.0, 1.0], [65200.0, 1.0], [79200.0, 1.0], [106400.0, 7.0], [107200.0, 6.0], [109600.0, 1.0], [108000.0, 1.0], [113600.0, 2.0], [116000.0, 1.0], [123200.0, 1.0], [127200.0, 2.0], [153600.0, 1.0], [135300.0, 1.0], [72700.0, 1.0], [85500.0, 3.0], [91100.0, 1.0], [106300.0, 3.0], [107100.0, 2.0], [107900.0, 1.0], [111100.0, 2.0], [115900.0, 1.0], [211400.0, 1.0], [35500.0, 1.0], [52700.0, 1.0], [62300.0, 1.0], [84600.0, 1.0], [87000.0, 3.0], [99000.0, 1.0], [106200.0, 7.0], [107000.0, 11.0], [109400.0, 1.0], [136400.0, 1.0], [210900.0, 2.0], [74900.0, 1.0], [102100.0, 1.0], [106100.0, 1.0], [105300.0, 2.0], [106900.0, 6.0], [107700.0, 1.0], [115700.0, 1.0], [128500.0, 1.0], [17100.0, 5.0], [16700.0, 1.0], [18100.0, 5.0], [17500.0, 1.0], [19700.0, 3.0], [19900.0, 2.0], [21100.0, 1.0], [20900.0, 3.0], [20700.0, 1.0], [26300.0, 19.0], [27100.0, 2.0], [27300.0, 5.0], [26700.0, 1.0], [28300.0, 1.0], [28100.0, 1.0], [28700.0, 2.0], [28900.0, 2.0], [29500.0, 2.0], [30700.0, 1.0], [32700.0, 2.0], [32500.0, 5.0], [52200.0, 1.0], [53000.0, 1.0], [59400.0, 4.0], [67600.0, 1.0], [84400.0, 3.0], [86000.0, 1.0], [94000.0, 1.0], [106800.0, 3.0], [114000.0, 1.0], [127600.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 212900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7836.0, "series": [{"data": [[1.0, 189.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5385.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 21.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7836.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.904761904761905, "minX": 1.53939408E12, "maxY": 498.6875000000003, "series": [{"data": [[1.53939414E12, 38.83128078817739], [1.53939462E12, 498.6875000000003], [1.53939444E12, 337.3404856013548], [1.53939426E12, 157.92634207240928], [1.53939474E12, 142.05017921146955], [1.53939408E12, 4.904761904761905], [1.53939456E12, 458.3418666666664], [1.53939438E12, 280.90009000900034], [1.5393942E12, 96.90965346534654], [1.53939468E12, 486.9923580786025], [1.5393945E12, 398.4042416452443], [1.53939432E12, 217.67453416149064]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939474E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 210943.0, "series": [{"data": [[3.0, 969.0], [4.0, 2155.5], [7.0, 1341.0], [8.0, 2938.0], [9.0, 972.0], [10.0, 2388.0], [11.0, 1345.0], [12.0, 1033.0], [13.0, 888.0], [14.0, 210943.0], [15.0, 1320.0], [16.0, 1340.0], [17.0, 1059.0], [18.0, 209919.0], [19.0, 1324.0], [20.0, 1489.0], [21.0, 1472.0], [22.0, 853.0], [23.0, 786.5], [25.0, 1497.5], [27.0, 2150.0], [28.0, 1683.0], [30.0, 2363.0], [31.0, 71594.16666666667], [33.0, 2055.5], [34.0, 1654.0], [35.0, 1180.0], [36.0, 2041.0], [39.0, 2859.6666666666665], [41.0, 59425.0], [42.0, 30948.5], [43.0, 21588.666666666668], [44.0, 31025.0], [45.0, 2956.0], [47.0, 31585.5], [48.0, 3787.0], [49.0, 31161.0], [51.0, 3254.0], [53.0, 2876.0], [55.0, 3379.0], [56.0, 3136.0], [58.0, 3806.0], [59.0, 3894.0], [60.0, 3909.0], [61.0, 3642.0], [62.0, 4091.0], [64.0, 4312.0], [65.0, 4373.0], [66.0, 4401.0], [67.0, 4523.0], [68.0, 3702.5], [69.0, 3912.0], [70.0, 4591.0], [72.0, 4915.0], [73.0, 4534.0], [75.0, 4619.0], [77.0, 5476.5], [78.0, 5064.0], [79.0, 4819.0], [81.0, 94150.125], [83.0, 5418.0], [82.0, 53471.0], [84.0, 29041.0], [86.0, 29107.5], [87.0, 5469.0], [85.0, 52250.0], [88.0, 3569.0], [90.0, 6131.0], [92.0, 34201.0], [93.0, 6247.5], [95.0, 5896.0], [97.0, 5922.0], [99.0, 6009.0], [98.0, 136448.0], [100.0, 6231.0], [101.0, 6740.0], [102.0, 6570.5], [104.0, 6755.5], [106.0, 6517.0], [108.0, 7188.0], [109.0, 6742.0], [110.0, 7049.0], [112.0, 7694.0], [113.0, 7401.0], [115.0, 14141.0], [116.0, 8604.0], [117.0, 8639.0], [118.0, 8135.0], [120.0, 8706.0], [121.0, 8246.0], [122.0, 8920.0], [123.0, 9171.0], [125.0, 19602.0], [126.0, 9368.0], [124.0, 29610.0], [128.0, 9763.0], [129.0, 10262.0], [131.0, 10946.0], [132.0, 10836.0], [133.0, 10989.0], [135.0, 33558.5], [136.0, 11037.0], [137.0, 10897.0], [138.0, 10324.0], [139.0, 9877.0], [141.0, 9561.5], [142.0, 9439.0], [143.0, 9083.0], [144.0, 8702.0], [145.0, 8781.0], [146.0, 8635.0], [147.0, 9099.0], [148.0, 8942.0], [149.0, 9052.0], [150.0, 9157.0], [152.0, 19360.5], [153.0, 9819.0], [154.0, 9827.0], [156.0, 10646.0], [158.0, 10688.0], [159.0, 28736.0], [155.0, 28928.0], [160.0, 20043.0], [161.0, 10918.0], [163.0, 11475.0], [164.0, 14733.5], [165.0, 14593.5], [166.0, 10907.0], [162.0, 29375.0], [174.0, 10712.0], [175.0, 17830.0], [171.0, 17869.0], [169.0, 17644.0], [178.0, 13492.0], [179.0, 11158.0], [183.0, 10777.0], [180.0, 17486.0], [185.0, 9769.0], [186.0, 13438.5], [190.0, 15572.0], [187.0, 15476.0], [192.0, 12608.5], [194.0, 10092.0], [197.0, 13292.0], [201.0, 10902.0], [204.0, 15287.0], [202.0, 15335.0], [211.0, 11136.0], [214.0, 10799.0], [215.0, 13758.5], [212.0, 14900.0], [216.0, 13797.0], [217.0, 12015.5], [218.0, 11079.0], [221.0, 10623.0], [224.0, 11227.0], [227.0, 12815.0], [230.0, 10190.0], [231.0, 15888.0], [233.0, 10333.333333333334], [234.0, 10674.0], [239.0, 11050.0], [247.0, 10238.0], [246.0, 10252.0], [251.0, 11781.0], [253.0, 5579.0], [254.0, 10714.0], [249.0, 10205.0], [268.0, 11431.0], [256.0, 11580.0], [257.0, 11860.0], [260.0, 13311.0], [262.0, 19841.5], [263.0, 12916.0], [264.0, 13074.0], [265.0, 14079.0], [269.0, 13989.333333333334], [271.0, 8826.333333333334], [273.0, 9761.0], [272.0, 11064.0], [274.0, 8565.6], [284.0, 21249.0], [286.0, 12911.6], [285.0, 10123.0], [287.0, 11142.0], [276.0, 1.0], [277.0, 8422.666666666666], [278.0, 7167.666666666667], [280.0, 30235.25], [281.0, 11037.0], [282.0, 10107.0], [283.0, 12159.0], [289.0, 12072.636363636364], [288.0, 8303.666666666666], [290.0, 43871.666666666664], [300.0, 7069.25], [301.0, 9346.0], [302.0, 19715.5], [303.0, 10476.333333333334], [292.0, 13311.0], [293.0, 10496.0], [294.0, 21428.666666666664], [295.0, 8703.0], [297.0, 13438.75], [298.0, 14535.5], [299.0, 7731.333333333333], [305.0, 10274.5], [304.0, 11515.0], [306.0, 18294.0], [307.0, 27698.2], [308.0, 13312.0], [310.0, 10143.6], [311.0, 26101.285714285714], [312.0, 11967.0], [318.0, 9075.5], [319.0, 10199.8], [316.0, 17031.81818181818], [317.0, 12432.857142857143], [313.0, 9023.5], [314.0, 11468.5], [315.0, 11739.285714285714], [321.0, 9094.222222222223], [320.0, 5925.0], [322.0, 13312.0], [323.0, 17047.272727272728], [324.0, 9623.6], [325.0, 13823.0], [326.0, 10606.75], [327.0, 8276.833333333334], [328.0, 10648.4], [334.0, 12836.833333333334], [335.0, 10991.5], [332.0, 8909.272727272728], [333.0, 9909.6], [329.0, 8767.25], [330.0, 6451.0], [331.0, 10549.0], [337.0, 12031.0], [336.0, 11955.0], [338.0, 11860.111111111111], [339.0, 8277.666666666666], [340.0, 8448.0], [341.0, 9583.5], [342.0, 11058.333333333336], [343.0, 9617.714285714286], [344.0, 10824.285714285714], [350.0, 7327.75], [351.0, 10328.777777777777], [348.0, 19818.999999999996], [349.0, 10399.57142857143], [345.0, 11092.666666666666], [347.0, 7934.5], [353.0, 7555.833333333333], [352.0, 11598.428571428572], [354.0, 10665.666666666666], [364.0, 13311.0], [365.0, 10818.0], [366.0, 13991.666666666666], [367.0, 15611.333333333334], [356.0, 11201.0], [357.0, 13187.714285714284], [358.0, 8319.25], [359.0, 7808.0], [360.0, 9215.666666666666], [361.0, 10694.947368421053], [362.0, 9853.75], [363.0, 12215.666666666666], [369.0, 13695.0], [368.0, 12032.0], [370.0, 9730.0], [371.0, 11243.555555555557], [372.0, 13312.0], [373.0, 10643.714285714284], [374.0, 11243.615384615387], [375.0, 12628.888888888889], [376.0, 7812.0], [382.0, 11623.0], [380.0, 11346.0], [381.0, 19711.6], [377.0, 26624.0], [378.0, 11202.0], [379.0, 12627.333333333334], [385.0, 12601.444444444445], [384.0, 13310.714285714286], [386.0, 13051.599999999999], [387.0, 12595.0], [388.0, 13928.81818181818], [389.0, 22186.66666666667], [390.0, 10702.0], [391.0, 13311.0], [392.0, 8873.5], [398.0, 8542.8], [399.0, 11972.75], [396.0, 8190.333333333333], [397.0, 8567.2], [393.0, 13673.0], [394.0, 7166.666666666667], [395.0, 11105.571428571428], [401.0, 19839.75], [400.0, 11503.0], [402.0, 18016.2], [403.0, 10954.0], [404.0, 11070.0], [406.0, 14080.0], [407.0, 6699.0], [408.0, 11640.5], [415.0, 12031.0], [414.0, 14336.0], [412.0, 9556.333333333332], [413.0, 11277.0], [409.0, 10247.714285714286], [410.0, 8173.999999999999], [411.0, 11967.333333333332], [417.0, 7474.8], [416.0, 5376.166666666667], [418.0, 7679.5], [419.0, 9914.333333333334], [420.0, 10580.0], [421.0, 16679.75], [422.0, 13309.5], [423.0, 6517.333333333334], [424.0, 13312.0], [430.0, 12173.714285714286], [431.0, 8609.25], [428.0, 10618.0], [429.0, 4416.5], [425.0, 12220.23076923077], [426.0, 10337.0], [427.0, 13375.0], [435.0, 6399.833333333334], [433.0, 7935.833333333334], [432.0, 10791.846153846152], [434.0, 6911.25], [436.0, 13171.357142857143], [439.0, 11994.0], [440.0, 13139.5], [446.0, 10845.0], [447.0, 11519.0], [444.0, 11993.857142857143], [445.0, 11178.0], [441.0, 14335.0], [442.0, 9952.6], [443.0, 11783.714285714286], [449.0, 8191.0], [448.0, 9710.727272727274], [450.0, 9284.0], [451.0, 7609.454545454546], [452.0, 44493.66666666667], [453.0, 8293.6], [454.0, 10801.666666666668], [455.0, 9943.666666666666], [456.0, 11340.5], [462.0, 10342.8], [463.0, 12537.0], [460.0, 80510.75], [461.0, 9908.6], [457.0, 13208.6], [458.0, 23337.375], [459.0, 88264.0], [465.0, 10324.333333333334], [464.0, 13311.42857142857], [466.0, 8799.333333333334], [467.0, 13567.25], [468.0, 60031.75], [469.0, 13310.0], [470.0, 43542.42857142857], [471.0, 10365.800000000001], [472.0, 10560.0], [478.0, 13824.625], [479.0, 11168.222222222224], [476.0, 13823.0], [477.0, 15063.428571428572], [473.0, 12833.866666666667], [474.0, 11518.5], [481.0, 12047.3125], [480.0, 8121.75], [482.0, 12416.299999999997], [483.0, 43092.0], [484.0, 6702.666666666666], [485.0, 9840.0], [486.0, 10561.5], [487.0, 9720.5], [488.0, 10137.727272727272], [494.0, 10652.0], [495.0, 9613.0], [492.0, 2646.0], [493.0, 10925.875], [489.0, 12250.333333333334], [490.0, 8564.285714285714], [491.0, 26793.846153846156], [497.0, 13312.0], [498.0, 13316.0], [499.0, 11954.5], [500.0, 20562.671259842507]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[386.10440713536167, 15930.336831059796]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 1217.0], [5.0, 1328.0], [6.0, 1244.0], [7.0, 1581.25], [8.0, 1245.8], [9.0, 1213.5], [10.0, 1349.0], [11.0, 53889.875], [12.0, 1401.2500000000002], [13.0, 1364.5714285714287], [14.0, 82058.61538461539], [15.0, 1233.5833333333335], [16.0, 1151.666666666667], [17.0, 1288.8461538461538], [18.0, 36532.916666666664], [19.0, 11816.1], [20.0, 1277.3125], [21.0, 1315.0588235294117], [22.0, 1518.8333333333335], [23.0, 1687.9166666666665], [24.0, 1640.0], [25.0, 1655.2307692307695], [26.0, 1782.230769230769], [27.0, 1782.2666666666667], [28.0, 2051.9090909090905], [29.0, 1840.0], [30.0, 2052.9230769230767], [31.0, 36757.13333333333], [32.0, 6639.357142857143], [33.0, 6749.0714285714275], [34.0, 7082.857142857143], [35.0, 8087.0], [36.0, 2480.6923076923076], [37.0, 7862.818181818182], [38.0, 2548.6875], [39.0, 12512.5], [40.0, 3061.6666666666665], [41.0, 2810.9333333333334], [42.0, 3057.769230769231], [43.0, 3227.6000000000004], [44.0, 3169.4285714285716], [45.0, 3456.333333333333], [46.0, 3301.0], [47.0, 3632.9333333333334], [48.0, 3499.090909090909], [49.0, 3401.0000000000005], [50.0, 3258.1000000000004], [51.0, 3452.545454545455], [52.0, 3882.461538461538], [53.0, 3632.071428571429], [54.0, 3600.9285714285716], [55.0, 3647.727272727273], [56.0, 3431.2307692307695], [57.0, 3774.3076923076924], [58.0, 3769.153846153846], [59.0, 3860.416666666666], [60.0, 3941.928571428571], [61.0, 4020.307692307693], [62.0, 4083.75], [63.0, 4080.8333333333335], [64.0, 4150.4], [65.0, 4280.909090909091], [66.0, 4352.857142857142], [67.0, 4452.083333333333], [68.0, 4481.900000000001], [69.0, 4608.846153846154], [70.0, 4696.2307692307695], [71.0, 12166.142857142855], [72.0, 4974.4], [73.0, 13530.666666666666], [74.0, 4747.285714285716], [75.0, 12931.923076923078], [76.0, 5188.071428571428], [77.0, 15606.0], [78.0, 25764.8], [79.0, 14302.916666666664], [80.0, 33791.055555555555], [81.0, 23671.529411764706], [82.0, 5801.416666666666], [83.0, 9855.666666666666], [84.0, 5837.571428571428], [85.0, 6214.333333333333], [86.0, 6123.090909090908], [87.0, 9170.642857142857], [88.0, 8934.8], [89.0, 9089.357142857143], [90.0, 10320.2], [91.0, 6131.454545454546], [92.0, 6489.416666666666], [93.0, 6394.0], [94.0, 6123.1875], [95.0, 6649.375], [96.0, 6629.25], [97.0, 6660.999999999999], [98.0, 6572.25], [99.0, 8442.866666666667], [100.0, 8540.666666666668], [101.0, 9388.416666666666], [102.0, 8887.153846153846], [103.0, 8227.5], [104.0, 8408.066666666666], [105.0, 8217.05882352941], [106.0, 9083.090909090908], [107.0, 8108.999999999999], [108.0, 9006.416666666666], [109.0, 9118.076923076922], [110.0, 9129.714285714286], [111.0, 9403.0], [112.0, 12887.099999999999], [113.0, 7898.888888888889], [114.0, 8041.571428571429], [115.0, 8139.923076923076], [116.0, 12371.583333333332], [117.0, 11213.444444444445], [118.0, 13230.727272727272], [119.0, 9328.888888888889], [120.0, 10146.214285714286], [121.0, 9826.727272727274], [122.0, 10699.727272727274], [123.0, 8982.375], [124.0, 9062.5], [125.0, 9428.25], [126.0, 10576.666666666666], [127.0, 12183.9], [128.0, 12609.625], [129.0, 12106.545454545454], [130.0, 10667.0], [131.0, 11007.625], [132.0, 11907.444444444445], [133.0, 13260.083333333332], [134.0, 13412.818181818182], [135.0, 11371.461538461537], [136.0, 13011.249999999998], [137.0, 12435.076923076922], [138.0, 11268.733333333332], [139.0, 11479.916666666668], [140.0, 10661.933333333332], [141.0, 10399.0], [142.0, 10179.416666666668], [143.0, 10049.785714285714], [144.0, 9416.071428571428], [145.0, 9977.642857142859], [146.0, 9988.923076923078], [147.0, 9335.285714285714], [148.0, 10088.142857142857], [149.0, 9517.181818181818], [150.0, 9988.153846153844], [151.0, 9733.999999999998], [152.0, 9894.272727272728], [153.0, 10499.272727272726], [154.0, 10180.999999999998], [155.0, 10427.307692307693], [156.0, 11105.727272727274], [157.0, 11176.142857142857], [158.0, 10951.166666666668], [159.0, 11291.90909090909], [160.0, 11176.454545454546], [161.0, 11715.272727272726], [162.0, 11628.400000000001], [163.0, 11806.928571428572], [164.0, 11484.375], [165.0, 11404.499999999998], [166.0, 11793.642857142857], [167.0, 11748.25], [168.0, 11697.384615384615], [169.0, 11422.25], [170.0, 11756.923076923078], [171.0, 10831.533333333335], [172.0, 11394.666666666668], [173.0, 11376.454545454544], [174.0, 11650.416666666664], [175.0, 11156.999999999998], [176.0, 11504.75], [177.0, 11556.5], [178.0, 11156.428571428572], [179.0, 12059.875], [180.0, 11053.785714285716], [181.0, 10608.5], [182.0, 10992.0], [183.0, 11380.615384615385], [184.0, 10755.666666666666], [185.0, 10655.142857142857], [186.0, 10675.153846153846], [187.0, 10646.933333333334], [188.0, 10769.8], [189.0, 10524.785714285714], [190.0, 10400.818181818182], [191.0, 10663.153846153846], [192.0, 10407.133333333331], [193.0, 10832.785714285716], [194.0, 11042.615384615385], [195.0, 10436.615384615385], [196.0, 10992.133333333331], [197.0, 10651.785714285716], [198.0, 11227.357142857141], [199.0, 11326.384615384615], [200.0, 11002.363636363638], [201.0, 11303.800000000001], [202.0, 10818.214285714286], [203.0, 11412.307692307691], [204.0, 10949.833333333334], [205.0, 11172.909090909092], [206.0, 11272.666666666666], [207.0, 11093.071428571431], [208.0, 10907.583333333332], [209.0, 11123.999999999998], [210.0, 9971.0], [211.0, 11173.555555555555], [212.0, 11265.76923076923], [213.0, 11394.90909090909], [214.0, 11436.384615384615], [215.0, 11473.454545454544], [216.0, 11993.5], [217.0, 11592.76923076923], [218.0, 11879.666666666668], [219.0, 11744.0], [220.0, 12590.357142857141], [221.0, 11454.5], [222.0, 11415.5], [223.0, 11349.833333333334], [224.0, 11155.307692307691], [225.0, 11149.812500000002], [226.0, 11047.300000000001], [227.0, 10980.857142857143], [228.0, 10978.0], [229.0, 10966.250000000002], [230.0, 10953.25], [231.0, 10810.444444444445], [232.0, 11142.0], [233.0, 10903.4], [234.0, 10903.5625], [235.0, 10806.866666666667], [236.0, 10793.166666666666], [237.0, 10725.27272727273], [238.0, 10807.533333333333], [239.0, 10997.357142857143], [240.0, 11611.07142857143], [241.0, 10861.25], [242.0, 11364.166666666668], [243.0, 11258.416666666668], [244.0, 11202.875000000002], [245.0, 12505.75], [246.0, 11840.307692307693], [247.0, 11500.571428571428], [248.0, 11427.6], [249.0, 11799.866666666665], [250.0, 11477.333333333332], [251.0, 11512.0625], [252.0, 11332.416666666666], [253.0, 19130.0], [254.0, 11436.285714285714], [255.0, 11527.5], [257.0, 19877.583333333332], [256.0, 11857.500000000002], [258.0, 12650.666666666666], [259.0, 24662.25], [260.0, 12746.083333333332], [261.0, 13036.583333333334], [262.0, 13097.0], [263.0, 13743.545454545454], [264.0, 13248.888888888889], [270.0, 17510.705882352937], [271.0, 11700.75], [268.0, 24522.999999999996], [269.0, 13376.833333333332], [265.0, 14949.066666666668], [266.0, 14315.470588235294], [267.0, 13463.187500000002], [273.0, 11041.4375], [272.0, 13257.625], [274.0, 24664.0], [275.0, 11286.750000000002], [276.0, 9869.157894736842], [277.0, 10344.866666666665], [278.0, 10294.785714285714], [279.0, 10277.249999999998], [280.0, 11248.3125], [286.0, 11388.470588235294], [287.0, 11176.153846153848], [284.0, 13596.785714285714], [285.0, 10786.400000000001], [281.0, 10223.687500000002], [282.0, 10458.333333333334], [283.0, 10220.8125], [289.0, 10897.0], [288.0, 18729.217391304348], [290.0, 11782.785714285714], [291.0, 11385.176470588236], [292.0, 18389.733333333334], [293.0, 10503.058823529413], [294.0, 18060.083333333336], [295.0, 10918.642857142857], [296.0, 20778.833333333336], [302.0, 19268.75], [303.0, 10941.666666666666], [300.0, 25612.15384615385], [301.0, 10403.625000000002], [297.0, 11366.555555555557], [298.0, 10741.5], [299.0, 10753.533333333333], [305.0, 19814.833333333336], [304.0, 11779.5], [306.0, 15180.952380952382], [307.0, 18231.263157894744], [308.0, 11201.588235294117], [309.0, 10920.636363636364], [310.0, 10759.727272727274], [311.0, 19621.619047619042], [312.0, 10314.304347826086], [318.0, 8896.733333333334], [319.0, 12212.900000000003], [316.0, 13356.090909090908], [317.0, 10404.066666666666], [313.0, 9761.0], [314.0, 10591.25], [315.0, 10017.272727272726], [321.0, 11233.518518518518], [320.0, 9694.649999999998], [322.0, 10292.999999999998], [323.0, 9469.5], [324.0, 11285.625000000002], [325.0, 10017.052631578948], [326.0, 10466.722222222223], [327.0, 12748.62068965517], [328.0, 11174.699999999999], [334.0, 10539.727272727272], [335.0, 11672.250000000002], [332.0, 9371.185185185186], [333.0, 11373.153846153842], [329.0, 9546.538461538461], [330.0, 10331.153846153846], [331.0, 11237.526315789475], [337.0, 11440.785714285714], [336.0, 11028.454545454544], [338.0, 11226.384615384617], [339.0, 11107.192307692307], [340.0, 10738.636363636362], [341.0, 10539.73076923077], [342.0, 12116.190476190475], [343.0, 10058.96], [344.0, 10907.92], [350.0, 9584.6875], [351.0, 9942.45833333333], [348.0, 11433.454545454546], [349.0, 10590.434782608694], [345.0, 11577.636363636366], [346.0, 11127.923076923076], [347.0, 10379.833333333334], [353.0, 11453.400000000001], [352.0, 13669.44827586207], [354.0, 10388.176470588236], [355.0, 11048.0], [356.0, 11060.666666666668], [357.0, 11179.363636363634], [358.0, 10593.624999999998], [359.0, 11761.38888888889], [360.0, 11031.095238095239], [366.0, 11160.78947368421], [367.0, 11310.923076923078], [364.0, 11203.8], [365.0, 10787.071428571428], [361.0, 10654.875], [362.0, 14694.192307692305], [363.0, 10477.190476190477], [369.0, 10851.692307692309], [368.0, 12173.352941176472], [370.0, 10833.90909090909], [371.0, 11475.32], [372.0, 11522.058823529413], [373.0, 10861.25], [374.0, 11194.235294117647], [375.0, 11438.521739130436], [376.0, 10757.058823529413], [382.0, 11903.750000000002], [383.0, 11976.0], [380.0, 12138.999999999998], [381.0, 12678.333333333332], [377.0, 11576.5], [378.0, 10801.058823529413], [379.0, 11963.636363636364], [385.0, 11333.449999999999], [384.0, 12063.263157894737], [386.0, 12914.000000000002], [387.0, 11793.384615384617], [388.0, 14320.6875], [389.0, 12420.04347826087], [390.0, 13216.25], [391.0, 12301.928571428572], [392.0, 12978.133333333333], [398.0, 11674.210526315792], [399.0, 12432.866666666667], [396.0, 11582.764705882353], [397.0, 11592.724137931034], [393.0, 13002.166666666666], [394.0, 11564.368421052632], [395.0, 11552.6], [401.0, 11706.1], [400.0, 11473.235294117647], [402.0, 14698.076923076924], [403.0, 12121.846153846152], [404.0, 10369.777777777777], [405.0, 10465.64705882353], [406.0, 11730.5], [407.0, 10164.52380952381], [408.0, 11360.666666666668], [414.0, 12099.071428571428], [415.0, 11964.642857142857], [412.0, 11124.000000000002], [413.0, 11142.076923076924], [409.0, 9654.7], [410.0, 9881.035714285714], [411.0, 10916.884615384613], [417.0, 10388.480000000001], [416.0, 10696.75], [418.0, 11574.550000000001], [419.0, 10396.400000000001], [420.0, 12796.75], [421.0, 14408.625000000002], [422.0, 10763.277777777777], [423.0, 10868.999999999998], [424.0, 11091.933333333332], [430.0, 11596.625], [431.0, 10827.1875], [428.0, 11164.705882352939], [429.0, 11381.473684210529], [425.0, 12984.499999999998], [426.0, 11109.714285714286], [427.0, 11808.21739130435], [433.0, 10894.692307692309], [432.0, 10428.791666666664], [434.0, 10779.421052631578], [435.0, 9722.85], [436.0, 12007.0], [437.0, 11040.266666666666], [438.0, 11224.076923076922], [439.0, 10102.368421052632], [440.0, 10595.466666666665], [446.0, 10711.499999999998], [447.0, 9768.5625], [444.0, 14806.8275862069], [445.0, 9703.416666666666], [441.0, 11171.15], [442.0, 15289.705882352939], [443.0, 11988.666666666668], [449.0, 9649.444444444445], [448.0, 10245.499999999996], [450.0, 8905.76923076923], [451.0, 8703.153846153846], [452.0, 24752.703703703708], [453.0, 8806.7], [454.0, 10266.933333333334], [455.0, 9910.666666666668], [456.0, 9849.176470588238], [462.0, 10540.958333333334], [463.0, 11704.733333333332], [460.0, 42514.086956521736], [461.0, 11394.0], [457.0, 10620.374999999998], [458.0, 30471.428571428572], [459.0, 23899.0], [465.0, 9950.555555555555], [464.0, 11091.347826086956], [466.0, 10070.133333333333], [467.0, 12269.961538461539], [468.0, 41633.46428571428], [469.0, 11141.611111111113], [470.0, 29495.749999999993], [471.0, 11049.941176470587], [472.0, 11372.0], [478.0, 11404.526315789471], [479.0, 11133.133333333333], [476.0, 11036.249999999998], [477.0, 11419.5], [473.0, 11556.478260869566], [474.0, 10431.666666666668], [475.0, 11070.0], [481.0, 10492.121212121216], [480.0, 9679.846153846154], [482.0, 10173.17391304348], [483.0, 14795.636363636364], [484.0, 9700.473684210525], [485.0, 10243.461538461537], [486.0, 10401.083333333334], [487.0, 9332.733333333332], [488.0, 10080.347826086954], [494.0, 11382.666666666666], [495.0, 10503.444444444445], [492.0, 10001.000000000002], [493.0, 10539.190476190475], [489.0, 11070.42105263158], [490.0, 10349.391304347828], [491.0, 30297.095238095237], [496.0, 10962.571428571428], [497.0, 10753.2], [498.0, 10842.76923076923], [499.0, 11508.5], [500.0, 14658.043646944703]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[326.6263782421514, 12108.0025202142]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 39.0], [3.0, 31.0], [4.0, 43.0], [5.0, 643.0], [6.0, 37.0], [7.0, 656.0], [8.0, 33.0], [9.0, 38.0], [10.0, 26.0], [11.0, 105361.5], [12.0, 33.0], [13.0, 105354.0], [14.0, 168941.8], [15.0, 42.0], [16.0, 28.0], [17.0, 28.0], [18.0, 106505.0], [19.0, 24.0], [20.0, 89.0], [21.0, 354.0], [22.0, 626.0], [23.0, 4.0], [24.0, 488.0], [25.0, 455.0], [26.0, 653.0], [27.0, 724.0], [28.0, 917.0], [30.0, 943.0], [31.0, 106751.66666666667], [32.0, 1094.0], [33.0, 1058.0], [34.0, 547.0], [36.0, 22454.0], [37.0, 1345.0], [38.0, 1628.0], [39.0, 1808.0], [41.0, 2066.0], [40.0, 57389.0], [42.0, 1904.0], [43.0, 1674.0], [44.0, 1978.0], [45.0, 59416.0], [46.0, 2190.0], [47.0, 30932.0], [48.0, 1917.0], [49.0, 59414.0], [50.0, 30899.0], [51.0, 2354.0], [52.0, 2459.0], [53.0, 2329.0], [54.0, 2512.0], [55.0, 2534.0], [56.0, 2735.0], [57.0, 2617.0], [58.0, 2777.0], [59.0, 2749.0], [60.0, 2710.0], [61.0, 2889.0], [62.0, 2980.0], [64.0, 3138.0], [65.0, 1642.5], [66.0, 3309.0], [67.0, 3128.0], [69.0, 3391.0], [70.0, 3609.0], [71.0, 3836.0], [72.0, 3898.0], [74.0, 55519.0], [75.0, 55583.0], [76.0, 4285.0], [77.0, 4484.0], [78.0, 55581.5], [79.0, 4343.0], [80.0, 86331.8], [81.0, 72857.0], [82.0, 4688.0], [83.0, 4797.0], [84.0, 4691.0], [85.0, 4914.0], [87.0, 4923.0], [88.0, 4792.0], [89.0, 4594.0], [91.0, 5134.0], [92.0, 5091.0], [93.0, 26782.5], [94.0, 5585.0], [95.0, 5500.0], [96.0, 5324.0], [97.0, 5153.0], [98.0, 103376.25], [99.0, 5512.0], [100.0, 5810.0], [101.0, 5695.0], [102.0, 5384.0], [103.0, 5448.0], [104.0, 5472.0], [105.0, 5635.0], [106.0, 5902.0], [108.0, 6020.0], [109.0, 6272.0], [110.0, 6348.0], [111.0, 6766.0], [113.0, 13481.5], [114.0, 11237.0], [115.0, 6968.0], [117.0, 7224.0], [118.0, 7503.0], [119.0, 7526.0], [120.0, 7477.0], [121.0, 7331.0], [122.0, 7933.0], [123.0, 29630.0], [124.0, 8303.0], [125.0, 8690.0], [126.0, 8826.0], [127.0, 8963.0], [129.0, 9548.0], [131.0, 19846.0], [132.0, 19879.5], [133.0, 10421.0], [134.0, 10096.0], [135.0, 9984.0], [130.0, 29615.0], [136.0, 9622.0], [137.0, 9581.0], [138.0, 9071.0], [139.0, 8657.0], [140.0, 8585.0], [141.0, 8379.0], [142.0, 8165.0], [143.0, 8084.0], [144.0, 18606.5], [145.0, 8144.0], [146.0, 8133.0], [147.0, 18632.5], [148.0, 8313.0], [149.0, 18644.0], [150.0, 8554.0], [151.0, 18695.0], [153.0, 9006.0], [154.0, 19071.0], [155.0, 9313.0], [158.0, 28754.0], [163.0, 10360.0], [164.0, 10709.0], [168.0, 10004.0], [172.0, 15130.666666666666], [175.0, 1.0], [173.0, 17850.0], [176.0, 10980.5], [182.0, 15978.0], [183.0, 9917.0], [179.0, 17505.0], [187.0, 9586.0], [190.0, 35503.0], [191.0, 15301.0], [189.0, 15588.0], [185.0, 16791.0], [184.0, 13480.0], [199.0, 12967.0], [195.0, 15051.0], [200.0, 16692.0], [203.0, 11356.0], [204.0, 16846.0], [205.0, 26452.0], [207.0, 10594.0], [210.0, 14319.5], [213.0, 28390.0], [214.0, 13921.0], [211.0, 15677.0], [208.0, 15235.0], [220.0, 29251.5], [221.0, 19233.0], [222.0, 36481.0], [223.0, 12090.666666666666], [224.0, 8120.0], [227.0, 13103.0], [228.0, 11397.5], [230.0, 13521.0], [236.0, 27409.0], [238.0, 13456.0], [239.0, 13224.0], [233.0, 13531.0], [241.0, 30404.5], [242.0, 10353.0], [244.0, 15822.0], [245.0, 11922.0], [247.0, 13671.0], [243.0, 10611.0], [249.0, 42964.5], [250.0, 10372.0], [251.0, 12503.0], [253.0, 81482.66666666667], [254.0, 8469.0], [255.0, 77777.0], [263.0, 12713.333333333334], [257.0, 75287.75], [260.0, 14738.0], [261.0, 16494.0], [262.0, 13275.0], [264.0, 86142.0], [266.0, 75076.0], [268.0, 97654.5], [269.0, 10380.0], [270.0, 68090.75], [271.0, 11757.5], [273.0, 13273.0], [272.0, 27603.2], [274.0, 59802.5], [284.0, 38715.25], [285.0, 13823.5], [286.0, 10617.333333333334], [287.0, 21105.0], [276.0, 64452.57142857143], [277.0, 10426.25], [278.0, 41385.333333333336], [279.0, 8053.0], [280.0, 5968.2], [281.0, 14354.666666666666], [282.0, 106490.0], [283.0, 4913.5], [289.0, 13251.555555555555], [288.0, 43393.66666666667], [290.0, 52462.28571428571], [291.0, 11479.0], [292.0, 25954.0], [293.0, 8852.666666666666], [294.0, 49945.666666666664], [295.0, 9621.5], [296.0, 106826.0], [302.0, 31602.6], [303.0, 12222.8], [300.0, 54379.0], [301.0, 7679.0], [297.0, 13310.0], [298.0, 69872.0], [299.0, 12396.75], [305.0, 48919.666666666664], [304.0, 11069.0], [306.0, 12644.9], [307.0, 41077.2], [308.0, 11777.333333333334], [309.0, 55837.5], [310.0, 9931.166666666668], [311.0, 12697.666666666668], [312.0, 11650.6], [318.0, 7679.0], [319.0, 9067.857142857143], [316.0, 15609.4], [317.0, 33481.75], [313.0, 7211.0], [314.0, 13274.5], [315.0, 19615.0], [321.0, 15284.81818181818], [320.0, 7423.5], [322.0, 10235.6], [323.0, 12744.333333333334], [324.0, 11194.285714285714], [325.0, 9614.2], [326.0, 11768.333333333334], [327.0, 10086.0], [328.0, 13315.4], [334.0, 10931.25], [335.0, 16056.0], [332.0, 11317.142857142857], [333.0, 20258.4], [329.0, 25648.624999999996], [330.0, 7807.0], [331.0, 38585.75], [337.0, 28588.166666666664], [336.0, 9419.833333333334], [338.0, 13951.25], [339.0, 10936.571428571428], [340.0, 9060.6], [341.0, 10671.857142857143], [342.0, 9666.0], [343.0, 9085.0], [344.0, 8908.2], [350.0, 8920.777777777777], [351.0, 8444.538461538461], [348.0, 9245.666666666666], [349.0, 5660.0], [345.0, 12211.3], [346.0, 9851.0], [347.0, 10750.0], [353.0, 10924.5], [352.0, 11554.0], [354.0, 5361.5], [366.0, 12205.5], [367.0, 13946.333333333334], [356.0, 12852.5], [357.0, 8211.5], [358.0, 9114.0], [359.0, 15104.333333333334], [360.0, 9691.0], [361.0, 12001.1875], [362.0, 18610.500000000004], [363.0, 13312.0], [369.0, 13277.0], [368.0, 10014.0], [371.0, 10024.846153846154], [380.0, 10768.0], [381.0, 10367.5], [382.0, 9487.0], [372.0, 8066.571428571429], [373.0, 12172.555555555557], [374.0, 13036.333333333334], [375.0, 9681.454545454546], [376.0, 8837.5], [377.0, 9240.0], [378.0, 9225.5], [379.0, 9152.25], [385.0, 6656.0], [384.0, 12333.5], [386.0, 11389.57142857143], [387.0, 13201.75], [388.0, 10272.125], [389.0, 14314.0], [390.0, 10459.75], [391.0, 13814.0], [392.0, 12799.0], [398.0, 11234.181818181822], [399.0, 10905.750000000002], [396.0, 10242.0], [397.0, 11246.562500000002], [393.0, 12055.0], [394.0, 8539.333333333334], [395.0, 4153.0], [403.0, 12132.0], [401.0, 14679.666666666666], [400.0, 9985.0], [402.0, 20807.333333333332], [406.0, 14078.0], [407.0, 12921.88888888889], [408.0, 10625.8], [415.0, 10191.0], [412.0, 10547.4], [414.0, 14640.0], [409.0, 8702.0], [410.0, 10603.09090909091], [411.0, 10916.461538461537], [417.0, 6541.555555555556], [416.0, 8326.857142857143], [418.0, 17175.6], [419.0, 10172.6], [420.0, 16975.25], [421.0, 24035.555555555555], [422.0, 13311.0], [423.0, 7167.5], [424.0, 8703.0], [431.0, 8877.857142857143], [429.0, 8885.857142857143], [428.0, 13313.0], [430.0, 10657.818181818182], [425.0, 18050.6875], [426.0, 12552.6], [427.0, 10340.0], [433.0, 9362.0], [432.0, 9424.999999999998], [434.0, 7679.500000000001], [435.0, 9699.0], [436.0, 11505.444444444445], [437.0, 10894.0], [439.0, 9211.25], [441.0, 12658.0], [446.0, 11516.6], [447.0, 7364.0], [444.0, 10139.615384615385], [445.0, 11513.666666666666], [442.0, 17764.555555555555], [443.0, 14181.666666666666], [449.0, 4096.0], [448.0, 11834.666666666666], [450.0, 8254.5], [451.0, 7994.076923076924], [452.0, 51630.21428571428], [453.0, 8191.0], [454.0, 19592.857142857145], [455.0, 9081.0], [456.0, 2.0], [462.0, 10584.090909090908], [463.0, 13312.0], [460.0, 72724.73333333332], [461.0, 11747.666666666666], [457.0, 13141.0], [458.0, 31632.3], [459.0, 75766.0], [465.0, 7637.5], [464.0, 13311.42857142857], [466.0, 7249.4], [467.0, 11052.333333333334], [468.0, 49795.0], [469.0, 13312.0], [470.0, 47105.666666666664], [471.0, 13008.75], [473.0, 11320.857142857143], [478.0, 8912.2], [479.0, 9204.4], [476.0, 9938.4], [477.0, 11112.166666666668], [474.0, 13533.222222222223], [475.0, 10800.4], [481.0, 8857.954545454544], [480.0, 8722.75], [482.0, 8748.5], [483.0, 24534.833333333332], [484.0, 7680.0], [485.0, 9453.0], [486.0, 8277.0], [487.0, 6552.2], [488.0, 9065.6], [494.0, 13316.222222222223], [492.0, 10799.9], [493.0, 11755.857142857143], [489.0, 12841.666666666668], [490.0, 11346.57142857143], [491.0, 35180.5], [497.0, 9326.0], [498.0, 11974.833333333332], [499.0, 10496.666666666666], [500.0, 18612.655030800815], [1.0, 100.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[381.4165834165836, 17856.597902097907]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 92.33333333333333, "minX": 1.53939408E12, "maxY": 1116371.5, "series": [{"data": [[1.53939414E12, 1000807.5833333334], [1.53939462E12, 1022592.3], [1.53939444E12, 1095748.7166666666], [1.53939426E12, 1041036.5833333334], [1.53939474E12, 194405.13333333333], [1.53939408E12, 13806.95], [1.53939456E12, 1100306.0], [1.53939438E12, 1025635.2833333333], [1.5393942E12, 1006239.2833333333], [1.53939468E12, 1116371.5], [1.5393945E12, 1015197.2166666667], [1.53939432E12, 1084206.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939414E12, 3558.7], [1.53939462E12, 7163.766666666666], [1.53939444E12, 7148.633333333333], [1.53939426E12, 3517.15], [1.53939474E12, 1101.6666666666667], [1.53939408E12, 92.33333333333333], [1.53939456E12, 7535.316666666667], [1.53939438E12, 4577.333333333333], [1.5393942E12, 3536.5833333333335], [1.53939468E12, 7464.366666666667], [1.5393945E12, 6269.7], [1.53939432E12, 3469.733333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939474E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 221.28571428571428, "minX": 1.53939408E12, "maxY": 69303.98360655738, "series": [{"data": [[1.53939414E12, 2439.5263157894738], [1.53939462E12, 14830.259868421057], [1.53939444E12, 11554.417445482868], [1.53939426E12, 10231.488372093025], [1.53939474E12, 54922.2105263158], [1.53939408E12, 1518.0], [1.53939456E12, 14822.766853932586], [1.53939438E12, 14794.862903225801], [1.5393942E12, 6258.423076923076], [1.53939468E12, 25557.522184300335], [1.5393945E12, 11990.281021897816], [1.53939432E12, 10904.749999999998]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939414E12, 2715.860431654679], [1.53939462E12, 13253.588744588762], [1.53939444E12, 11131.43800178412], [1.53939426E12, 10702.430555555578], [1.53939474E12, 43631.65838509316], [1.53939408E12, 1409.5555555555557], [1.53939456E12, 13345.15982532753], [1.53939438E12, 14206.434306569354], [1.5393942E12, 6684.405714285708], [1.53939468E12, 15408.337034099908], [1.5393945E12, 11713.806122448974], [1.53939432E12, 11062.58753315649]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939414E12, 1392.5333333333333], [1.53939462E12, 15599.455149501662], [1.53939444E12, 13108.689969604866], [1.53939426E12, 9473.342105263157], [1.53939474E12, 69303.98360655738], [1.53939408E12, 221.28571428571428], [1.53939456E12, 17018.013368983968], [1.53939438E12, 32899.32121212125], [1.5393942E12, 5666.92857142857], [1.53939468E12, 21001.435251798554], [1.5393945E12, 11851.460264900656], [1.53939432E12, 17421.61290322581]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939474E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 221.14285714285714, "minX": 1.53939408E12, "maxY": 69303.96721311474, "series": [{"data": [[1.53939414E12, 2439.5263157894738], [1.53939462E12, 14830.256578947367], [1.53939444E12, 11554.417445482868], [1.53939426E12, 10231.488372093025], [1.53939474E12, 54922.2105263158], [1.53939408E12, 1518.0], [1.53939456E12, 14822.766853932586], [1.53939438E12, 14794.862903225801], [1.5393942E12, 6258.423076923076], [1.53939468E12, 25557.522184300335], [1.5393945E12, 11990.281021897816], [1.53939432E12, 10904.749999999998]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939414E12, 2715.407194244608], [1.53939462E12, 13253.274458874457], [1.53939444E12, 11131.094558429968], [1.53939426E12, 10701.991666666665], [1.53939474E12, 43631.29192546583], [1.53939408E12, 1409.0], [1.53939456E12, 13344.803493449788], [1.53939438E12, 14205.93673965935], [1.5393942E12, 6683.95571428571], [1.53939468E12, 15408.014274385421], [1.5393945E12, 11713.420408163256], [1.53939432E12, 11062.045092838198]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939414E12, 1392.5], [1.53939462E12, 15599.448504983386], [1.53939444E12, 13108.683890577508], [1.53939426E12, 9473.315789473685], [1.53939474E12, 69303.96721311474], [1.53939408E12, 221.14285714285714], [1.53939456E12, 17018.010695187168], [1.53939438E12, 32899.30303030303], [1.5393942E12, 5666.892857142855], [1.53939468E12, 21001.431654676242], [1.5393945E12, 11851.456953642382], [1.53939432E12, 17421.61290322581]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939474E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53939408E12, "maxY": 7.857142857142858, "series": [{"data": [[1.53939414E12, 0.3508771929824562], [1.53939462E12, 0.5000000000000001], [1.53939444E12, 0.47975077881619926], [1.53939426E12, 0.6976744186046511], [1.53939474E12, 0.6666666666666667], [1.53939408E12, 0.0], [1.53939456E12, 0.5280898876404503], [1.53939438E12, 0.43548387096774216], [1.5393942E12, 0.9615384615384615], [1.53939468E12, 0.464163822525597], [1.5393945E12, 0.5620437956204377], [1.53939432E12, 0.65]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939414E12, 0.7438848920863314], [1.53939462E12, 0.4199134199134198], [1.53939444E12, 0.5691347011596792], [1.53939426E12, 0.5069444444444443], [1.53939474E12, 0.3788819875776397], [1.53939408E12, 0.4444444444444444], [1.53939456E12, 0.4078602620087336], [1.53939438E12, 0.4975669099756692], [1.5393942E12, 0.587142857142858], [1.53939468E12, 0.43774781919111866], [1.5393945E12, 0.4704081632653061], [1.53939432E12, 0.5278514588859415]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939414E12, 1.3166666666666667], [1.53939462E12, 0.6245847176079736], [1.53939444E12, 0.4954407294832828], [1.53939426E12, 1.2105263157894732], [1.53939474E12, 0.5081967213114754], [1.53939408E12, 7.857142857142858], [1.53939456E12, 0.4999999999999997], [1.53939438E12, 0.5636363636363637], [1.5393942E12, 0.5357142857142856], [1.53939468E12, 0.5575539568345322], [1.5393945E12, 0.59271523178808], [1.53939432E12, 0.806451612903226]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939474E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.53939408E12, "maxY": 65226.0, "series": [{"data": [[1.53939414E12, 7057.0], [1.53939462E12, 44175.0], [1.53939444E12, 17211.0], [1.53939426E12, 16671.0], [1.53939474E12, 64977.0], [1.53939408E12, 3569.0], [1.53939456E12, 15121.0], [1.53939438E12, 65226.0], [1.5393942E12, 12805.0], [1.53939468E12, 15479.0], [1.5393945E12, 18899.0], [1.53939432E12, 36481.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939414E12, 18.0], [1.53939462E12, 8836.0], [1.53939444E12, 8888.0], [1.53939426E12, 8084.0], [1.53939474E12, 9749.0], [1.53939408E12, 31.0], [1.53939456E12, 8772.0], [1.53939438E12, 8864.0], [1.5393942E12, 3391.0], [1.53939468E12, 9515.0], [1.5393945E12, 8915.0], [1.53939432E12, 9814.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939414E12, 4087.2000000000007], [1.53939462E12, 11823.900000000001], [1.53939444E12, 11451.0], [1.53939426E12, 11194.5], [1.53939474E12, 11893.3], [1.53939408E12, 2436.600000000001], [1.53939456E12, 11641.0], [1.53939438E12, 11529.0], [1.5393942E12, 8026.6], [1.53939468E12, 11765.0], [1.5393945E12, 11695.0], [1.53939432E12, 11327.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939414E12, 4548.24], [1.53939462E12, 14847.43], [1.53939444E12, 14288.199999999997], [1.53939426E12, 11698.43], [1.53939474E12, 18762.289999999975], [1.53939408E12, 3569.0], [1.53939456E12, 14628.900000000003], [1.53939438E12, 14288.999999999996], [1.5393942E12, 9717.95], [1.53939468E12, 14840.48], [1.5393945E12, 14840.800000000001], [1.53939432E12, 12942.64999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939414E12, 4258.9], [1.53939462E12, 12553.3], [1.53939444E12, 11914.299999999992], [1.53939426E12, 11378.05], [1.53939474E12, 12812.949999999999], [1.53939408E12, 3480.5999999999985], [1.53939456E12, 12216.15], [1.53939438E12, 12112.5], [1.5393942E12, 8659.9], [1.53939468E12, 12495.0], [1.5393945E12, 12340.0], [1.53939432E12, 11542.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939474E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 106497.0, "series": [{"data": [[0.0, 1209.0], [4.0, 16482.0], [18.0, 11022.0], [25.0, 11246.0], [13.0, 9197.0], [29.0, 10942.5], [30.0, 10998.0], [31.0, 10574.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 106497.0], [18.0, 13311.0], [25.0, 13311.0], [13.0, 4.0], [29.0, 11775.0], [30.0, 13312.0], [31.0, 13306.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 106497.0, "series": [{"data": [[0.0, 1209.0], [4.0, 16481.0], [18.0, 11021.5], [25.0, 11245.0], [13.0, 9197.0], [29.0, 10942.0], [30.0, 10997.0], [31.0, 10574.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 106497.0], [18.0, 13311.0], [25.0, 13311.0], [13.0, 4.0], [29.0, 11775.0], [30.0, 13312.0], [31.0, 13306.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.53939408E12, "maxY": 32.25, "series": [{"data": [[1.53939414E12, 14.533333333333333], [1.53939462E12, 29.533333333333335], [1.53939444E12, 30.5], [1.53939426E12, 14.35], [1.53939408E12, 0.4666666666666667], [1.53939456E12, 32.25], [1.53939438E12, 19.516666666666666], [1.5393942E12, 14.466666666666667], [1.53939468E12, 26.85], [1.5393945E12, 26.95], [1.53939432E12, 14.433333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939468E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939408E12, "maxY": 17.416666666666668, "series": [{"data": [[1.53939414E12, 12.416666666666666], [1.53939462E12, 12.05], [1.53939444E12, 12.966666666666667], [1.53939426E12, 12.583333333333334], [1.53939474E12, 2.8333333333333335], [1.53939408E12, 0.26666666666666666], [1.53939456E12, 13.183333333333334], [1.53939438E12, 12.233333333333333], [1.5393942E12, 12.483333333333333], [1.53939468E12, 12.966666666666667], [1.5393945E12, 12.083333333333334], [1.53939432E12, 12.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939414E12, 0.9166666666666666], [1.53939462E12, 0.45], [1.53939444E12, 0.4], [1.53939426E12, 0.7166666666666667], [1.53939474E12, 0.016666666666666666], [1.53939408E12, 0.08333333333333333], [1.53939456E12, 0.43333333333333335], [1.53939438E12, 0.43333333333333335], [1.5393942E12, 0.8333333333333334], [1.53939468E12, 0.18333333333333332], [1.5393945E12, 0.4666666666666667], [1.53939432E12, 0.3]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939414E12, 0.16666666666666666], [1.53939462E12, 16.633333333333333], [1.53939444E12, 16.016666666666666], [1.53939426E12, 0.05], [1.53939474E12, 1.1166666666666667], [1.53939456E12, 17.416666666666668], [1.53939438E12, 5.666666666666667], [1.5393942E12, 0.13333333333333333], [1.53939468E12, 17.233333333333334], [1.5393945E12, 13.2], [1.53939432E12, 0.3]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939414E12, 0.03333333333333333], [1.53939462E12, 0.2], [1.53939444E12, 0.13333333333333333], [1.53939474E12, 0.6833333333333333], [1.53939456E12, 0.21666666666666667], [1.53939438E12, 0.18333333333333332], [1.5393942E12, 0.016666666666666666], [1.53939468E12, 0.15], [1.5393945E12, 0.18333333333333332], [1.53939432E12, 0.016666666666666666]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939474E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939408E12, "maxY": 12.766666666666667, "series": [{"data": [[1.53939414E12, 0.95], [1.53939462E12, 0.36666666666666664], [1.53939444E12, 0.45], [1.53939426E12, 0.6166666666666667], [1.53939474E12, 0.65], [1.53939408E12, 0.11666666666666667], [1.53939456E12, 0.5833333333333334], [1.53939438E12, 0.45], [1.5393942E12, 0.9333333333333333], [1.53939468E12, 0.2], [1.5393945E12, 0.48333333333333334], [1.53939432E12, 0.31666666666666665]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939414E12, 0.9166666666666666], [1.53939462E12, 0.45], [1.53939444E12, 0.4], [1.53939426E12, 0.7166666666666667], [1.53939474E12, 0.016666666666666666], [1.53939408E12, 0.08333333333333333], [1.53939456E12, 0.43333333333333335], [1.53939438E12, 0.43333333333333335], [1.5393942E12, 0.8333333333333334], [1.53939468E12, 0.18333333333333332], [1.5393945E12, 0.4666666666666667], [1.53939432E12, 0.3]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939414E12, 0.05], [1.53939462E12, 4.65], [1.53939444E12, 5.033333333333333], [1.53939426E12, 0.016666666666666666], [1.53939474E12, 0.36666666666666664], [1.53939456E12, 5.65], [1.53939438E12, 2.3], [1.53939468E12, 4.433333333333334], [1.5393945E12, 4.55], [1.53939432E12, 0.2]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939414E12, 0.11666666666666667], [1.53939462E12, 7.566666666666666], [1.53939444E12, 6.166666666666667], [1.53939426E12, 0.03333333333333333], [1.53939474E12, 0.5], [1.53939456E12, 6.483333333333333], [1.53939438E12, 1.9166666666666667], [1.5393942E12, 0.11666666666666667], [1.53939468E12, 8.25], [1.5393945E12, 4.733333333333333], [1.53939432E12, 0.08333333333333333]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.53939414E12, 0.03333333333333333], [1.53939462E12, 4.616666666666666], [1.53939444E12, 4.95], [1.53939474E12, 0.9333333333333333], [1.53939456E12, 5.5], [1.53939438E12, 1.6333333333333333], [1.5393942E12, 0.03333333333333333], [1.53939468E12, 4.7], [1.5393945E12, 4.1], [1.53939432E12, 0.03333333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53939414E12, 11.466666666666667], [1.53939462E12, 11.683333333333334], [1.53939444E12, 12.516666666666667], [1.53939426E12, 11.966666666666667], [1.53939474E12, 2.183333333333333], [1.53939408E12, 0.15], [1.53939456E12, 12.6], [1.53939438E12, 11.783333333333333], [1.5393942E12, 11.55], [1.53939468E12, 12.766666666666667], [1.5393945E12, 11.6], [1.53939432E12, 12.483333333333333]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939474E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
