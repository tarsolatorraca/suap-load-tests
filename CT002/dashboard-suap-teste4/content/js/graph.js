/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 227060.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 5.0], [8.2, 48.0], [8.3, 573.0], [8.4, 592.0], [8.5, 599.0], [8.6, 648.0], [8.7, 711.0], [8.8, 743.0], [8.9, 746.0], [9.0, 1084.0], [9.1, 1317.0], [9.2, 1340.0], [9.3, 1676.0], [9.4, 1684.0], [9.5, 1712.0], [9.6, 1858.0], [9.7, 1950.0], [9.8, 2062.0], [9.9, 2289.0], [10.0, 2393.0], [10.1, 2606.0], [10.2, 2703.0], [10.3, 2965.0], [10.4, 3068.0], [10.5, 3180.0], [10.6, 3309.0], [10.7, 3343.0], [10.8, 3374.0], [10.9, 3450.0], [11.0, 3526.0], [11.1, 3635.0], [11.2, 3744.0], [11.3, 3914.0], [11.4, 3996.0], [11.5, 4220.0], [11.6, 4299.0], [11.7, 4316.0], [11.8, 4382.0], [11.9, 4461.0], [12.0, 4667.0], [12.1, 4809.0], [12.2, 4983.0], [12.3, 5220.0], [12.4, 6072.0], [12.5, 6458.0], [12.6, 6458.0], [12.7, 6569.0], [12.8, 6672.0], [12.9, 6763.0], [13.0, 6790.0], [13.1, 6977.0], [13.2, 7055.0], [13.3, 7128.0], [13.4, 7156.0], [13.5, 7163.0], [13.6, 7163.0], [13.7, 7164.0], [13.8, 7165.0], [13.9, 7166.0], [14.0, 7166.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7167.0], [15.3, 7167.0], [15.4, 7167.0], [15.5, 7167.0], [15.6, 7167.0], [15.7, 7167.0], [15.8, 7167.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7168.0], [16.6, 7168.0], [16.7, 7169.0], [16.8, 7169.0], [16.9, 7171.0], [17.0, 7172.0], [17.1, 7414.0], [17.2, 7417.0], [17.3, 7418.0], [17.4, 7421.0], [17.5, 7422.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7423.0], [18.5, 7423.0], [18.6, 7423.0], [18.7, 7423.0], [18.8, 7423.0], [18.9, 7423.0], [19.0, 7423.0], [19.1, 7423.0], [19.2, 7424.0], [19.3, 7424.0], [19.4, 7424.0], [19.5, 7424.0], [19.6, 7424.0], [19.7, 7424.0], [19.8, 7425.0], [19.9, 7441.0], [20.0, 7676.0], [20.1, 7676.0], [20.2, 7676.0], [20.3, 7678.0], [20.4, 7678.0], [20.5, 7678.0], [20.6, 7679.0], [20.7, 7679.0], [20.8, 7679.0], [20.9, 7679.0], [21.0, 7679.0], [21.1, 7679.0], [21.2, 7679.0], [21.3, 7679.0], [21.4, 7679.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7680.0], [21.8, 7680.0], [21.9, 7680.0], [22.0, 7680.0], [22.1, 7680.0], [22.2, 7680.0], [22.3, 7684.0], [22.4, 7804.0], [22.5, 7933.0], [22.6, 7934.0], [22.7, 7934.0], [22.8, 7935.0], [22.9, 7935.0], [23.0, 7935.0], [23.1, 7935.0], [23.2, 7935.0], [23.3, 7935.0], [23.4, 7935.0], [23.5, 7936.0], [23.6, 7936.0], [23.7, 7937.0], [23.8, 7939.0], [23.9, 8001.0], [24.0, 8186.0], [24.1, 8188.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8191.0], [24.5, 8191.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8191.0], [25.1, 8191.0], [25.2, 8191.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8193.0], [25.6, 8193.0], [25.7, 8223.0], [25.8, 8241.0], [25.9, 8435.0], [26.0, 8446.0], [26.1, 8446.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8447.0], [26.5, 8447.0], [26.6, 8447.0], [26.7, 8447.0], [26.8, 8448.0], [26.9, 8448.0], [27.0, 8449.0], [27.1, 8654.0], [27.2, 8698.0], [27.3, 8699.0], [27.4, 8701.0], [27.5, 8701.0], [27.6, 8702.0], [27.7, 8702.0], [27.8, 8702.0], [27.9, 8702.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8703.0], [29.0, 8703.0], [29.1, 8703.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8705.0], [29.6, 8709.0], [29.7, 8709.0], [29.8, 8709.0], [29.9, 8753.0], [30.0, 8834.0], [30.1, 8941.0], [30.2, 8958.0], [30.3, 8958.0], [30.4, 8958.0], [30.5, 8959.0], [30.6, 8959.0], [30.7, 8959.0], [30.8, 8959.0], [30.9, 8959.0], [31.0, 8960.0], [31.1, 8960.0], [31.2, 8960.0], [31.3, 8965.0], [31.4, 9140.0], [31.5, 9143.0], [31.6, 9177.0], [31.7, 9208.0], [31.8, 9211.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9215.0], [32.7, 9215.0], [32.8, 9215.0], [32.9, 9215.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9217.0], [33.9, 9217.0], [34.0, 9217.0], [34.1, 9217.0], [34.2, 9228.0], [34.3, 9268.0], [34.4, 9329.0], [34.5, 9380.0], [34.6, 9409.0], [34.7, 9470.0], [34.8, 9471.0], [34.9, 9471.0], [35.0, 9471.0], [35.1, 9471.0], [35.2, 9472.0], [35.3, 9472.0], [35.4, 9474.0], [35.5, 9494.0], [35.6, 9521.0], [35.7, 9583.0], [35.8, 9614.0], [35.9, 9661.0], [36.0, 9712.0], [36.1, 9722.0], [36.2, 9725.0], [36.3, 9726.0], [36.4, 9726.0], [36.5, 9727.0], [36.6, 9727.0], [36.7, 9727.0], [36.8, 9727.0], [36.9, 9727.0], [37.0, 9727.0], [37.1, 9727.0], [37.2, 9727.0], [37.3, 9727.0], [37.4, 9727.0], [37.5, 9727.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9728.0], [37.9, 9728.0], [38.0, 9728.0], [38.1, 9729.0], [38.2, 9731.0], [38.3, 9796.0], [38.4, 9805.0], [38.5, 9808.0], [38.6, 9853.0], [38.7, 9854.0], [38.8, 9892.0], [38.9, 9907.0], [39.0, 9916.0], [39.1, 9933.0], [39.2, 9959.0], [39.3, 9973.0], [39.4, 9979.0], [39.5, 9979.0], [39.6, 9981.0], [39.7, 9982.0], [39.8, 9982.0], [39.9, 9983.0], [40.0, 9983.0], [40.1, 9983.0], [40.2, 9987.0], [40.3, 9990.0], [40.4, 10026.0], [40.5, 10044.0], [40.6, 10055.0], [40.7, 10076.0], [40.8, 10093.0], [40.9, 10102.0], [41.0, 10111.0], [41.1, 10157.0], [41.2, 10170.0], [41.3, 10187.0], [41.4, 10218.0], [41.5, 10236.0], [41.6, 10238.0], [41.7, 10239.0], [41.8, 10239.0], [41.9, 10239.0], [42.0, 10239.0], [42.1, 10240.0], [42.2, 10240.0], [42.3, 10240.0], [42.4, 10240.0], [42.5, 10243.0], [42.6, 10273.0], [42.7, 10280.0], [42.8, 10283.0], [42.9, 10285.0], [43.0, 10313.0], [43.1, 10332.0], [43.2, 10346.0], [43.3, 10350.0], [43.4, 10352.0], [43.5, 10376.0], [43.6, 10389.0], [43.7, 10401.0], [43.8, 10420.0], [43.9, 10462.0], [44.0, 10474.0], [44.1, 10486.0], [44.2, 10488.0], [44.3, 10491.0], [44.4, 10494.0], [44.5, 10495.0], [44.6, 10495.0], [44.7, 10496.0], [44.8, 10496.0], [44.9, 10518.0], [45.0, 10531.0], [45.1, 10536.0], [45.2, 10547.0], [45.3, 10575.0], [45.4, 10589.0], [45.5, 10590.0], [45.6, 10603.0], [45.7, 10621.0], [45.8, 10635.0], [45.9, 10648.0], [46.0, 10648.0], [46.1, 10653.0], [46.2, 10689.0], [46.3, 10696.0], [46.4, 10711.0], [46.5, 10719.0], [46.6, 10736.0], [46.7, 10748.0], [46.8, 10751.0], [46.9, 10751.0], [47.0, 10751.0], [47.1, 10752.0], [47.2, 10753.0], [47.3, 10756.0], [47.4, 10772.0], [47.5, 10794.0], [47.6, 10805.0], [47.7, 10831.0], [47.8, 10831.0], [47.9, 10841.0], [48.0, 10852.0], [48.1, 10866.0], [48.2, 10884.0], [48.3, 10893.0], [48.4, 10911.0], [48.5, 10925.0], [48.6, 10949.0], [48.7, 10956.0], [48.8, 10966.0], [48.9, 10977.0], [49.0, 10990.0], [49.1, 10996.0], [49.2, 11004.0], [49.3, 11007.0], [49.4, 11007.0], [49.5, 11007.0], [49.6, 11007.0], [49.7, 11007.0], [49.8, 11008.0], [49.9, 11008.0], [50.0, 11009.0], [50.1, 11023.0], [50.2, 11041.0], [50.3, 11063.0], [50.4, 11070.0], [50.5, 11074.0], [50.6, 11166.0], [50.7, 11180.0], [50.8, 11193.0], [50.9, 11219.0], [51.0, 11255.0], [51.1, 11261.0], [51.2, 11262.0], [51.3, 11262.0], [51.4, 11263.0], [51.5, 11263.0], [51.6, 11263.0], [51.7, 11263.0], [51.8, 11263.0], [51.9, 11264.0], [52.0, 11264.0], [52.1, 11264.0], [52.2, 11265.0], [52.3, 11266.0], [52.4, 11273.0], [52.5, 11319.0], [52.6, 11343.0], [52.7, 11345.0], [52.8, 11376.0], [52.9, 11376.0], [53.0, 11381.0], [53.1, 11419.0], [53.2, 11454.0], [53.3, 11456.0], [53.4, 11464.0], [53.5, 11472.0], [53.6, 11517.0], [53.7, 11519.0], [53.8, 11519.0], [53.9, 11519.0], [54.0, 11520.0], [54.1, 11520.0], [54.2, 11547.0], [54.3, 11648.0], [54.4, 11668.0], [54.5, 11689.0], [54.6, 11760.0], [54.7, 11771.0], [54.8, 11771.0], [54.9, 11774.0], [55.0, 11775.0], [55.1, 11775.0], [55.2, 11775.0], [55.3, 11775.0], [55.4, 11775.0], [55.5, 11775.0], [55.6, 11775.0], [55.7, 11777.0], [55.8, 11833.0], [55.9, 11854.0], [56.0, 11870.0], [56.1, 11892.0], [56.2, 11927.0], [56.3, 12097.0], [56.4, 12114.0], [56.5, 12275.0], [56.6, 12287.0], [56.7, 12287.0], [56.8, 12287.0], [56.9, 12291.0], [57.0, 12341.0], [57.1, 12366.0], [57.2, 12540.0], [57.3, 12541.0], [57.4, 12544.0], [57.5, 12547.0], [57.6, 12574.0], [57.7, 12704.0], [57.8, 12765.0], [57.9, 12766.0], [58.0, 12772.0], [58.1, 12798.0], [58.2, 12799.0], [58.3, 12799.0], [58.4, 12799.0], [58.5, 12799.0], [58.6, 12800.0], [58.7, 12803.0], [58.8, 12861.0], [58.9, 13055.0], [59.0, 13055.0], [59.1, 13056.0], [59.2, 13056.0], [59.3, 13059.0], [59.4, 13122.0], [59.5, 13278.0], [59.6, 13298.0], [59.7, 13307.0], [59.8, 13307.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13309.0], [60.6, 13309.0], [60.7, 13310.0], [60.8, 13310.0], [60.9, 13310.0], [61.0, 13310.0], [61.1, 13310.0], [61.2, 13310.0], [61.3, 13310.0], [61.4, 13310.0], [61.5, 13310.0], [61.6, 13310.0], [61.7, 13310.0], [61.8, 13310.0], [61.9, 13310.0], [62.0, 13310.0], [62.1, 13310.0], [62.2, 13310.0], [62.3, 13310.0], [62.4, 13310.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13313.0], [77.1, 13313.0], [77.2, 13313.0], [77.3, 13313.0], [77.4, 13315.0], [77.5, 13315.0], [77.6, 13315.0], [77.7, 13315.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13315.0], [78.2, 13315.0], [78.3, 13316.0], [78.4, 13316.0], [78.5, 13316.0], [78.6, 13365.0], [78.7, 13444.0], [78.8, 13567.0], [78.9, 13568.0], [79.0, 13568.0], [79.1, 13571.0], [79.2, 13820.0], [79.3, 13820.0], [79.4, 13821.0], [79.5, 13822.0], [79.6, 13822.0], [79.7, 13823.0], [79.8, 13823.0], [79.9, 13823.0], [80.0, 13823.0], [80.1, 13823.0], [80.2, 13823.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13823.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13824.0], [82.1, 13828.0], [82.2, 13833.0], [82.3, 14078.0], [82.4, 14078.0], [82.5, 14079.0], [82.6, 14079.0], [82.7, 14079.0], [82.8, 14079.0], [82.9, 14081.0], [83.0, 14082.0], [83.1, 14083.0], [83.2, 14090.0], [83.3, 14175.0], [83.4, 14331.0], [83.5, 14332.0], [83.6, 14333.0], [83.7, 14334.0], [83.8, 14334.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14335.0], [85.2, 14335.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14337.0], [86.4, 14337.0], [86.5, 14422.0], [86.6, 14590.0], [86.7, 14591.0], [86.8, 14591.0], [86.9, 14591.0], [87.0, 14592.0], [87.1, 14847.0], [87.2, 14847.0], [87.3, 14847.0], [87.4, 14852.0], [87.5, 14883.0], [87.6, 15102.0], [87.7, 15103.0], [87.8, 15103.0], [87.9, 15104.0], [88.0, 15104.0], [88.1, 15153.0], [88.2, 15359.0], [88.3, 15615.0], [88.4, 16132.0], [88.5, 16286.0], [88.6, 16379.0], [88.7, 16380.0], [88.8, 16382.0], [88.9, 16383.0], [89.0, 16383.0], [89.1, 16383.0], [89.2, 16383.0], [89.3, 16384.0], [89.4, 16386.0], [89.5, 16626.0], [89.6, 16895.0], [89.7, 17147.0], [89.8, 17151.0], [89.9, 17407.0], [90.0, 17407.0], [90.1, 17409.0], [90.2, 17919.0], [90.3, 17920.0], [90.4, 18173.0], [90.5, 18240.0], [90.6, 18687.0], [90.7, 18943.0], [90.8, 18943.0], [90.9, 19174.0], [91.0, 19234.0], [91.1, 19967.0], [91.2, 20041.0], [91.3, 20119.0], [91.4, 20147.0], [91.5, 20223.0], [91.6, 20598.0], [91.7, 21149.0], [91.8, 25600.0], [91.9, 26365.0], [92.0, 26367.0], [92.1, 26367.0], [92.2, 26367.0], [92.3, 26367.0], [92.4, 26368.0], [92.5, 26391.0], [92.6, 26623.0], [92.7, 26997.0], [92.8, 27247.0], [92.9, 27391.0], [93.0, 27420.0], [93.1, 27647.0], [93.2, 27647.0], [93.3, 27649.0], [93.4, 29439.0], [93.5, 29691.0], [93.6, 36514.0], [93.7, 36863.0], [93.8, 36863.0], [93.9, 42145.0], [94.0, 43006.0], [94.1, 43009.0], [94.2, 49135.0], [94.3, 52248.0], [94.4, 53246.0], [94.5, 53251.0], [94.6, 53346.0], [94.7, 53519.0], [94.8, 53566.0], [94.9, 54739.0], [95.0, 54760.0], [95.1, 55295.0], [95.2, 81283.0], [95.3, 89474.0], [95.4, 96254.0], [95.5, 96256.0], [95.6, 97534.0], [95.7, 100862.0], [95.8, 101124.0], [95.9, 101126.0], [96.0, 101887.0], [96.1, 101891.0], [96.2, 105726.0], [96.3, 105726.0], [96.4, 105980.0], [96.5, 105982.0], [96.6, 105983.0], [96.7, 106238.0], [96.8, 106499.0], [96.9, 106748.0], [97.0, 106751.0], [97.1, 106756.0], [97.2, 107262.0], [97.3, 109567.0], [97.4, 110335.0], [97.5, 110848.0], [97.6, 112641.0], [97.7, 113663.0], [97.8, 114943.0], [97.9, 114944.0], [98.0, 117246.0], [98.1, 118271.0], [98.2, 118271.0], [98.3, 119295.0], [98.4, 131838.0], [98.5, 136703.0], [98.6, 139006.0], [98.7, 139011.0], [98.8, 140798.0], [98.9, 157439.0], [99.0, 163072.0], [99.1, 164096.0], [99.2, 173056.0], [99.3, 177406.0], [99.4, 178175.0], [99.5, 178175.0], [99.6, 178176.0], [99.7, 210430.0], [99.8, 210431.0], [99.9, 227060.0], [100.0, 227060.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 2.0], [3.0, 2.0], [3.1, 1175.0], [3.2, 1200.0], [3.3, 1209.0], [3.4, 1215.0], [3.5, 1221.0], [3.6, 1228.0], [3.7, 1244.0], [3.8, 1254.0], [3.9, 1262.0], [4.0, 1276.0], [4.1, 1294.0], [4.2, 1331.0], [4.3, 1373.0], [4.4, 1438.0], [4.5, 1482.0], [4.6, 1528.0], [4.7, 1579.0], [4.8, 1642.0], [4.9, 1691.0], [5.0, 1772.0], [5.1, 1912.0], [5.2, 1994.0], [5.3, 2033.0], [5.4, 2086.0], [5.5, 2124.0], [5.6, 2285.0], [5.7, 2402.0], [5.8, 2439.0], [5.9, 2482.0], [6.0, 2509.0], [6.1, 2539.0], [6.2, 2563.0], [6.3, 2599.0], [6.4, 2623.0], [6.5, 2696.0], [6.6, 2733.0], [6.7, 2779.0], [6.8, 2871.0], [6.9, 2928.0], [7.0, 2956.0], [7.1, 3052.0], [7.2, 3127.0], [7.3, 3166.0], [7.4, 3192.0], [7.5, 3237.0], [7.6, 3302.0], [7.7, 3431.0], [7.8, 3524.0], [7.9, 3586.0], [8.0, 3669.0], [8.1, 3728.0], [8.2, 3783.0], [8.3, 3843.0], [8.4, 3906.0], [8.5, 3946.0], [8.6, 3990.0], [8.7, 4018.0], [8.8, 4043.0], [8.9, 4065.0], [9.0, 4088.0], [9.1, 4131.0], [9.2, 4163.0], [9.3, 4178.0], [9.4, 4194.0], [9.5, 4227.0], [9.6, 4255.0], [9.7, 4281.0], [9.8, 4307.0], [9.9, 4330.0], [10.0, 4362.0], [10.1, 4403.0], [10.2, 4427.0], [10.3, 4454.0], [10.4, 4510.0], [10.5, 4607.0], [10.6, 4687.0], [10.7, 4738.0], [10.8, 4809.0], [10.9, 4846.0], [11.0, 4876.0], [11.1, 4907.0], [11.2, 4929.0], [11.3, 4948.0], [11.4, 4997.0], [11.5, 5029.0], [11.6, 5078.0], [11.7, 5202.0], [11.8, 5300.0], [11.9, 5366.0], [12.0, 5420.0], [12.1, 5500.0], [12.2, 5579.0], [12.3, 5710.0], [12.4, 5861.0], [12.5, 5979.0], [12.6, 6049.0], [12.7, 6284.0], [12.8, 6390.0], [12.9, 6511.0], [13.0, 6571.0], [13.1, 6609.0], [13.2, 6659.0], [13.3, 6708.0], [13.4, 6747.0], [13.5, 6798.0], [13.6, 6820.0], [13.7, 6863.0], [13.8, 6886.0], [13.9, 6905.0], [14.0, 6919.0], [14.1, 6959.0], [14.2, 6998.0], [14.3, 7040.0], [14.4, 7082.0], [14.5, 7111.0], [14.6, 7128.0], [14.7, 7144.0], [14.8, 7161.0], [14.9, 7166.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7169.0], [15.6, 7174.0], [15.7, 7223.0], [15.8, 7260.0], [15.9, 7329.0], [16.0, 7418.0], [16.1, 7422.0], [16.2, 7423.0], [16.3, 7423.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7425.0], [16.9, 7427.0], [17.0, 7469.0], [17.1, 7521.0], [17.2, 7603.0], [17.3, 7639.0], [17.4, 7678.0], [17.5, 7679.0], [17.6, 7679.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7680.0], [18.0, 7681.0], [18.1, 7684.0], [18.2, 7745.0], [18.3, 7818.0], [18.4, 7903.0], [18.5, 7934.0], [18.6, 7935.0], [18.7, 7935.0], [18.8, 7936.0], [18.9, 7936.0], [19.0, 7937.0], [19.1, 8020.0], [19.2, 8177.0], [19.3, 8191.0], [19.4, 8191.0], [19.5, 8191.0], [19.6, 8192.0], [19.7, 8193.0], [19.8, 8224.0], [19.9, 8385.0], [20.0, 8446.0], [20.1, 8447.0], [20.2, 8448.0], [20.3, 8449.0], [20.4, 8515.0], [20.5, 8561.0], [20.6, 8615.0], [20.7, 8677.0], [20.8, 8702.0], [20.9, 8703.0], [21.0, 8703.0], [21.1, 8704.0], [21.2, 8704.0], [21.3, 8704.0], [21.4, 8705.0], [21.5, 8714.0], [21.6, 8748.0], [21.7, 8792.0], [21.8, 8827.0], [21.9, 8864.0], [22.0, 8902.0], [22.1, 8939.0], [22.2, 8958.0], [22.3, 8959.0], [22.4, 8961.0], [22.5, 8998.0], [22.6, 9045.0], [22.7, 9075.0], [22.8, 9108.0], [22.9, 9138.0], [23.0, 9168.0], [23.1, 9193.0], [23.2, 9212.0], [23.3, 9213.0], [23.4, 9215.0], [23.5, 9215.0], [23.6, 9216.0], [23.7, 9216.0], [23.8, 9216.0], [23.9, 9216.0], [24.0, 9217.0], [24.1, 9241.0], [24.2, 9262.0], [24.3, 9308.0], [24.4, 9353.0], [24.5, 9409.0], [24.6, 9437.0], [24.7, 9471.0], [24.8, 9471.0], [24.9, 9472.0], [25.0, 9506.0], [25.1, 9545.0], [25.2, 9584.0], [25.3, 9627.0], [25.4, 9683.0], [25.5, 9711.0], [25.6, 9724.0], [25.7, 9726.0], [25.8, 9727.0], [25.9, 9728.0], [26.0, 9729.0], [26.1, 9729.0], [26.2, 9754.0], [26.3, 9775.0], [26.4, 9826.0], [26.5, 9857.0], [26.6, 9889.0], [26.7, 9910.0], [26.8, 9953.0], [26.9, 9978.0], [27.0, 9983.0], [27.1, 9984.0], [27.2, 10000.0], [27.3, 10030.0], [27.4, 10045.0], [27.5, 10064.0], [27.6, 10072.0], [27.7, 10085.0], [27.8, 10094.0], [27.9, 10113.0], [28.0, 10126.0], [28.1, 10136.0], [28.2, 10145.0], [28.3, 10154.0], [28.4, 10160.0], [28.5, 10164.0], [28.6, 10169.0], [28.7, 10172.0], [28.8, 10183.0], [28.9, 10188.0], [29.0, 10192.0], [29.1, 10197.0], [29.2, 10201.0], [29.3, 10205.0], [29.4, 10215.0], [29.5, 10219.0], [29.6, 10225.0], [29.7, 10232.0], [29.8, 10237.0], [29.9, 10238.0], [30.0, 10239.0], [30.1, 10240.0], [30.2, 10240.0], [30.3, 10241.0], [30.4, 10244.0], [30.5, 10248.0], [30.6, 10256.0], [30.7, 10264.0], [30.8, 10267.0], [30.9, 10271.0], [31.0, 10277.0], [31.1, 10282.0], [31.2, 10284.0], [31.3, 10288.0], [31.4, 10293.0], [31.5, 10296.0], [31.6, 10301.0], [31.7, 10304.0], [31.8, 10308.0], [31.9, 10311.0], [32.0, 10319.0], [32.1, 10322.0], [32.2, 10326.0], [32.3, 10333.0], [32.4, 10340.0], [32.5, 10346.0], [32.6, 10354.0], [32.7, 10359.0], [32.8, 10362.0], [32.9, 10367.0], [33.0, 10372.0], [33.1, 10379.0], [33.2, 10383.0], [33.3, 10388.0], [33.4, 10395.0], [33.5, 10402.0], [33.6, 10407.0], [33.7, 10413.0], [33.8, 10415.0], [33.9, 10421.0], [34.0, 10428.0], [34.1, 10433.0], [34.2, 10437.0], [34.3, 10440.0], [34.4, 10446.0], [34.5, 10449.0], [34.6, 10452.0], [34.7, 10455.0], [34.8, 10459.0], [34.9, 10462.0], [35.0, 10465.0], [35.1, 10467.0], [35.2, 10472.0], [35.3, 10474.0], [35.4, 10480.0], [35.5, 10482.0], [35.6, 10486.0], [35.7, 10491.0], [35.8, 10492.0], [35.9, 10495.0], [36.0, 10497.0], [36.1, 10500.0], [36.2, 10505.0], [36.3, 10509.0], [36.4, 10511.0], [36.5, 10514.0], [36.6, 10517.0], [36.7, 10522.0], [36.8, 10526.0], [36.9, 10528.0], [37.0, 10533.0], [37.1, 10535.0], [37.2, 10537.0], [37.3, 10541.0], [37.4, 10545.0], [37.5, 10549.0], [37.6, 10552.0], [37.7, 10555.0], [37.8, 10560.0], [37.9, 10562.0], [38.0, 10566.0], [38.1, 10568.0], [38.2, 10569.0], [38.3, 10571.0], [38.4, 10574.0], [38.5, 10576.0], [38.6, 10578.0], [38.7, 10581.0], [38.8, 10584.0], [38.9, 10589.0], [39.0, 10593.0], [39.1, 10597.0], [39.2, 10601.0], [39.3, 10604.0], [39.4, 10606.0], [39.5, 10610.0], [39.6, 10612.0], [39.7, 10616.0], [39.8, 10620.0], [39.9, 10622.0], [40.0, 10627.0], [40.1, 10630.0], [40.2, 10632.0], [40.3, 10636.0], [40.4, 10640.0], [40.5, 10642.0], [40.6, 10645.0], [40.7, 10648.0], [40.8, 10651.0], [40.9, 10653.0], [41.0, 10656.0], [41.1, 10659.0], [41.2, 10664.0], [41.3, 10667.0], [41.4, 10671.0], [41.5, 10674.0], [41.6, 10677.0], [41.7, 10679.0], [41.8, 10682.0], [41.9, 10683.0], [42.0, 10686.0], [42.1, 10690.0], [42.2, 10694.0], [42.3, 10696.0], [42.4, 10699.0], [42.5, 10703.0], [42.6, 10706.0], [42.7, 10707.0], [42.8, 10709.0], [42.9, 10712.0], [43.0, 10715.0], [43.1, 10719.0], [43.2, 10722.0], [43.3, 10725.0], [43.4, 10729.0], [43.5, 10732.0], [43.6, 10734.0], [43.7, 10736.0], [43.8, 10739.0], [43.9, 10741.0], [44.0, 10746.0], [44.1, 10748.0], [44.2, 10750.0], [44.3, 10751.0], [44.4, 10751.0], [44.5, 10752.0], [44.6, 10754.0], [44.7, 10756.0], [44.8, 10763.0], [44.9, 10766.0], [45.0, 10770.0], [45.1, 10775.0], [45.2, 10779.0], [45.3, 10780.0], [45.4, 10783.0], [45.5, 10786.0], [45.6, 10790.0], [45.7, 10793.0], [45.8, 10798.0], [45.9, 10801.0], [46.0, 10803.0], [46.1, 10807.0], [46.2, 10811.0], [46.3, 10814.0], [46.4, 10818.0], [46.5, 10821.0], [46.6, 10824.0], [46.7, 10827.0], [46.8, 10831.0], [46.9, 10835.0], [47.0, 10837.0], [47.1, 10840.0], [47.2, 10842.0], [47.3, 10844.0], [47.4, 10847.0], [47.5, 10849.0], [47.6, 10853.0], [47.7, 10855.0], [47.8, 10859.0], [47.9, 10862.0], [48.0, 10865.0], [48.1, 10868.0], [48.2, 10872.0], [48.3, 10875.0], [48.4, 10878.0], [48.5, 10883.0], [48.6, 10885.0], [48.7, 10887.0], [48.8, 10889.0], [48.9, 10890.0], [49.0, 10893.0], [49.1, 10896.0], [49.2, 10900.0], [49.3, 10904.0], [49.4, 10906.0], [49.5, 10909.0], [49.6, 10914.0], [49.7, 10917.0], [49.8, 10919.0], [49.9, 10924.0], [50.0, 10927.0], [50.1, 10929.0], [50.2, 10934.0], [50.3, 10937.0], [50.4, 10940.0], [50.5, 10944.0], [50.6, 10947.0], [50.7, 10952.0], [50.8, 10954.0], [50.9, 10956.0], [51.0, 10958.0], [51.1, 10961.0], [51.2, 10964.0], [51.3, 10967.0], [51.4, 10968.0], [51.5, 10971.0], [51.6, 10975.0], [51.7, 10977.0], [51.8, 10980.0], [51.9, 10983.0], [52.0, 10986.0], [52.1, 10989.0], [52.2, 10991.0], [52.3, 10995.0], [52.4, 10996.0], [52.5, 10999.0], [52.6, 11001.0], [52.7, 11004.0], [52.8, 11006.0], [52.9, 11007.0], [53.0, 11009.0], [53.1, 11009.0], [53.2, 11010.0], [53.3, 11013.0], [53.4, 11015.0], [53.5, 11018.0], [53.6, 11019.0], [53.7, 11022.0], [53.8, 11025.0], [53.9, 11027.0], [54.0, 11028.0], [54.1, 11030.0], [54.2, 11033.0], [54.3, 11036.0], [54.4, 11038.0], [54.5, 11040.0], [54.6, 11042.0], [54.7, 11044.0], [54.8, 11046.0], [54.9, 11048.0], [55.0, 11051.0], [55.1, 11053.0], [55.2, 11055.0], [55.3, 11058.0], [55.4, 11059.0], [55.5, 11061.0], [55.6, 11063.0], [55.7, 11065.0], [55.8, 11067.0], [55.9, 11069.0], [56.0, 11070.0], [56.1, 11072.0], [56.2, 11074.0], [56.3, 11076.0], [56.4, 11078.0], [56.5, 11080.0], [56.6, 11082.0], [56.7, 11085.0], [56.8, 11087.0], [56.9, 11089.0], [57.0, 11090.0], [57.1, 11091.0], [57.2, 11097.0], [57.3, 11098.0], [57.4, 11099.0], [57.5, 11101.0], [57.6, 11104.0], [57.7, 11106.0], [57.8, 11108.0], [57.9, 11111.0], [58.0, 11114.0], [58.1, 11116.0], [58.2, 11120.0], [58.3, 11121.0], [58.4, 11122.0], [58.5, 11125.0], [58.6, 11126.0], [58.7, 11128.0], [58.8, 11129.0], [58.9, 11131.0], [59.0, 11133.0], [59.1, 11134.0], [59.2, 11137.0], [59.3, 11139.0], [59.4, 11143.0], [59.5, 11144.0], [59.6, 11146.0], [59.7, 11148.0], [59.8, 11150.0], [59.9, 11152.0], [60.0, 11154.0], [60.1, 11157.0], [60.2, 11159.0], [60.3, 11162.0], [60.4, 11166.0], [60.5, 11170.0], [60.6, 11171.0], [60.7, 11175.0], [60.8, 11177.0], [60.9, 11180.0], [61.0, 11182.0], [61.1, 11184.0], [61.2, 11188.0], [61.3, 11190.0], [61.4, 11192.0], [61.5, 11194.0], [61.6, 11197.0], [61.7, 11199.0], [61.8, 11201.0], [61.9, 11205.0], [62.0, 11208.0], [62.1, 11211.0], [62.2, 11212.0], [62.3, 11215.0], [62.4, 11217.0], [62.5, 11219.0], [62.6, 11222.0], [62.7, 11224.0], [62.8, 11226.0], [62.9, 11229.0], [63.0, 11233.0], [63.1, 11235.0], [63.2, 11237.0], [63.3, 11239.0], [63.4, 11241.0], [63.5, 11247.0], [63.6, 11250.0], [63.7, 11256.0], [63.8, 11258.0], [63.9, 11261.0], [64.0, 11263.0], [64.1, 11263.0], [64.2, 11263.0], [64.3, 11264.0], [64.4, 11264.0], [64.5, 11266.0], [64.6, 11269.0], [64.7, 11272.0], [64.8, 11274.0], [64.9, 11277.0], [65.0, 11281.0], [65.1, 11284.0], [65.2, 11289.0], [65.3, 11292.0], [65.4, 11296.0], [65.5, 11299.0], [65.6, 11303.0], [65.7, 11306.0], [65.8, 11311.0], [65.9, 11314.0], [66.0, 11322.0], [66.1, 11324.0], [66.2, 11327.0], [66.3, 11331.0], [66.4, 11334.0], [66.5, 11339.0], [66.6, 11343.0], [66.7, 11348.0], [66.8, 11351.0], [66.9, 11355.0], [67.0, 11357.0], [67.1, 11363.0], [67.2, 11366.0], [67.3, 11370.0], [67.4, 11374.0], [67.5, 11379.0], [67.6, 11382.0], [67.7, 11386.0], [67.8, 11392.0], [67.9, 11397.0], [68.0, 11401.0], [68.1, 11404.0], [68.2, 11409.0], [68.3, 11412.0], [68.4, 11418.0], [68.5, 11422.0], [68.6, 11425.0], [68.7, 11429.0], [68.8, 11435.0], [68.9, 11440.0], [69.0, 11446.0], [69.1, 11451.0], [69.2, 11453.0], [69.3, 11459.0], [69.4, 11462.0], [69.5, 11468.0], [69.6, 11472.0], [69.7, 11476.0], [69.8, 11480.0], [69.9, 11483.0], [70.0, 11487.0], [70.1, 11492.0], [70.2, 11497.0], [70.3, 11503.0], [70.4, 11509.0], [70.5, 11512.0], [70.6, 11515.0], [70.7, 11519.0], [70.8, 11520.0], [70.9, 11525.0], [71.0, 11531.0], [71.1, 11534.0], [71.2, 11540.0], [71.3, 11544.0], [71.4, 11550.0], [71.5, 11555.0], [71.6, 11557.0], [71.7, 11560.0], [71.8, 11565.0], [71.9, 11570.0], [72.0, 11576.0], [72.1, 11581.0], [72.2, 11587.0], [72.3, 11592.0], [72.4, 11597.0], [72.5, 11600.0], [72.6, 11606.0], [72.7, 11609.0], [72.8, 11614.0], [72.9, 11619.0], [73.0, 11630.0], [73.1, 11638.0], [73.2, 11642.0], [73.3, 11647.0], [73.4, 11651.0], [73.5, 11654.0], [73.6, 11659.0], [73.7, 11662.0], [73.8, 11666.0], [73.9, 11674.0], [74.0, 11679.0], [74.1, 11684.0], [74.2, 11689.0], [74.3, 11694.0], [74.4, 11697.0], [74.5, 11702.0], [74.6, 11707.0], [74.7, 11713.0], [74.8, 11718.0], [74.9, 11723.0], [75.0, 11729.0], [75.1, 11734.0], [75.2, 11738.0], [75.3, 11742.0], [75.4, 11747.0], [75.5, 11753.0], [75.6, 11760.0], [75.7, 11764.0], [75.8, 11766.0], [75.9, 11771.0], [76.0, 11775.0], [76.1, 11775.0], [76.2, 11776.0], [76.3, 11778.0], [76.4, 11783.0], [76.5, 11794.0], [76.6, 11801.0], [76.7, 11808.0], [76.8, 11813.0], [76.9, 11819.0], [77.0, 11823.0], [77.1, 11828.0], [77.2, 11835.0], [77.3, 11842.0], [77.4, 11852.0], [77.5, 11861.0], [77.6, 11870.0], [77.7, 11876.0], [77.8, 11882.0], [77.9, 11887.0], [78.0, 11893.0], [78.1, 11897.0], [78.2, 11906.0], [78.3, 11914.0], [78.4, 11916.0], [78.5, 11926.0], [78.6, 11931.0], [78.7, 11936.0], [78.8, 11943.0], [78.9, 11952.0], [79.0, 11962.0], [79.1, 11969.0], [79.2, 11976.0], [79.3, 11983.0], [79.4, 11989.0], [79.5, 11994.0], [79.6, 12000.0], [79.7, 12008.0], [79.8, 12019.0], [79.9, 12025.0], [80.0, 12036.0], [80.1, 12044.0], [80.2, 12053.0], [80.3, 12063.0], [80.4, 12069.0], [80.5, 12076.0], [80.6, 12084.0], [80.7, 12091.0], [80.8, 12099.0], [80.9, 12109.0], [81.0, 12120.0], [81.1, 12127.0], [81.2, 12134.0], [81.3, 12144.0], [81.4, 12151.0], [81.5, 12159.0], [81.6, 12166.0], [81.7, 12178.0], [81.8, 12192.0], [81.9, 12205.0], [82.0, 12217.0], [82.1, 12227.0], [82.2, 12239.0], [82.3, 12248.0], [82.4, 12259.0], [82.5, 12271.0], [82.6, 12278.0], [82.7, 12284.0], [82.8, 12287.0], [82.9, 12288.0], [83.0, 12296.0], [83.1, 12308.0], [83.2, 12315.0], [83.3, 12329.0], [83.4, 12339.0], [83.5, 12359.0], [83.6, 12370.0], [83.7, 12387.0], [83.8, 12420.0], [83.9, 12436.0], [84.0, 12458.0], [84.1, 12477.0], [84.2, 12496.0], [84.3, 12524.0], [84.4, 12544.0], [84.5, 12554.0], [84.6, 12595.0], [84.7, 12652.0], [84.8, 12724.0], [84.9, 12796.0], [85.0, 12799.0], [85.1, 12802.0], [85.2, 12830.0], [85.3, 12861.0], [85.4, 12909.0], [85.5, 12997.0], [85.6, 13099.0], [85.7, 13152.0], [85.8, 13186.0], [85.9, 13217.0], [86.0, 13242.0], [86.1, 13291.0], [86.2, 13308.0], [86.3, 13308.0], [86.4, 13309.0], [86.5, 13310.0], [86.6, 13310.0], [86.7, 13310.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13311.0], [88.2, 13311.0], [88.3, 13311.0], [88.4, 13311.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13312.0], [90.5, 13312.0], [90.6, 13312.0], [90.7, 13312.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13313.0], [91.1, 13313.0], [91.2, 13313.0], [91.3, 13313.0], [91.4, 13314.0], [91.5, 13315.0], [91.6, 13316.0], [91.7, 13330.0], [91.8, 13349.0], [91.9, 13375.0], [92.0, 13388.0], [92.1, 13422.0], [92.2, 13535.0], [92.3, 13568.0], [92.4, 13742.0], [92.5, 13822.0], [92.6, 13823.0], [92.7, 13823.0], [92.8, 13823.0], [92.9, 13824.0], [93.0, 13824.0], [93.1, 13824.0], [93.2, 13824.0], [93.3, 13825.0], [93.4, 13827.0], [93.5, 13834.0], [93.6, 13909.0], [93.7, 14078.0], [93.8, 14079.0], [93.9, 14084.0], [94.0, 14333.0], [94.1, 14334.0], [94.2, 14335.0], [94.3, 14335.0], [94.4, 14335.0], [94.5, 14336.0], [94.6, 14336.0], [94.7, 14336.0], [94.8, 14337.0], [94.9, 14339.0], [95.0, 14450.0], [95.1, 14537.0], [95.2, 14592.0], [95.3, 14777.0], [95.4, 14848.0], [95.5, 15010.0], [95.6, 15103.0], [95.7, 15105.0], [95.8, 15261.0], [95.9, 15358.0], [96.0, 15577.0], [96.1, 15616.0], [96.2, 15869.0], [96.3, 16378.0], [96.4, 16384.0], [96.5, 16386.0], [96.6, 16864.0], [96.7, 17157.0], [96.8, 17698.0], [96.9, 18097.0], [97.0, 18181.0], [97.1, 19092.0], [97.2, 20301.0], [97.3, 21117.0], [97.4, 21985.0], [97.5, 24831.0], [97.6, 26367.0], [97.7, 26369.0], [97.8, 27392.0], [97.9, 28150.0], [98.0, 28529.0], [98.1, 30648.0], [98.2, 50298.0], [98.3, 53440.0], [98.4, 54611.0], [98.5, 55961.0], [98.6, 90838.0], [98.7, 98477.0], [98.8, 101891.0], [98.9, 105728.0], [99.0, 106214.0], [99.1, 106757.0], [99.2, 107227.0], [99.3, 110080.0], [99.4, 114175.0], [99.5, 117248.0], [99.6, 118783.0], [99.7, 137729.0], [99.8, 157440.0], [99.9, 178175.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 5.0], [8.0, 21.0], [8.1, 25.0], [8.2, 27.0], [8.3, 29.0], [8.4, 33.0], [8.5, 35.0], [8.6, 35.0], [8.7, 90.0], [8.8, 97.0], [8.9, 167.0], [9.0, 456.0], [9.1, 609.0], [9.2, 728.0], [9.3, 810.0], [9.4, 1246.0], [9.5, 1277.0], [9.6, 1329.0], [9.7, 1398.0], [9.8, 1556.0], [9.9, 1669.0], [10.0, 1802.0], [10.1, 1983.0], [10.2, 2012.0], [10.3, 2076.0], [10.4, 2425.0], [10.5, 2626.0], [10.6, 2793.0], [10.7, 2808.0], [10.8, 2939.0], [10.9, 2982.0], [11.0, 3057.0], [11.1, 3071.0], [11.2, 3186.0], [11.3, 3385.0], [11.4, 3509.0], [11.5, 3686.0], [11.6, 3759.0], [11.7, 3908.0], [11.8, 3965.0], [11.9, 4162.0], [12.0, 4192.0], [12.1, 4494.0], [12.2, 4997.0], [12.3, 5260.0], [12.4, 5384.0], [12.5, 5543.0], [12.6, 5635.0], [12.7, 5662.0], [12.8, 5774.0], [12.9, 5857.0], [13.0, 5875.0], [13.1, 5904.0], [13.2, 6006.0], [13.3, 6238.0], [13.4, 6486.0], [13.5, 6802.0], [13.6, 7069.0], [13.7, 7157.0], [13.8, 7162.0], [13.9, 7166.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7169.0], [15.9, 7172.0], [16.0, 7191.0], [16.1, 7225.0], [16.2, 7289.0], [16.3, 7312.0], [16.4, 7335.0], [16.5, 7382.0], [16.6, 7397.0], [16.7, 7417.0], [16.8, 7418.0], [16.9, 7421.0], [17.0, 7422.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7424.0], [19.2, 7425.0], [19.3, 7425.0], [19.4, 7425.0], [19.5, 7427.0], [19.6, 7428.0], [19.7, 7457.0], [19.8, 7530.0], [19.9, 7550.0], [20.0, 7560.0], [20.1, 7592.0], [20.2, 7599.0], [20.3, 7625.0], [20.4, 7678.0], [20.5, 7678.0], [20.6, 7678.0], [20.7, 7679.0], [20.8, 7679.0], [20.9, 7679.0], [21.0, 7679.0], [21.1, 7679.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7680.0], [21.5, 7680.0], [21.6, 7680.0], [21.7, 7680.0], [21.8, 7680.0], [21.9, 7680.0], [22.0, 7680.0], [22.1, 7681.0], [22.2, 7681.0], [22.3, 7684.0], [22.4, 7731.0], [22.5, 7742.0], [22.6, 7763.0], [22.7, 7783.0], [22.8, 7798.0], [22.9, 7902.0], [23.0, 7923.0], [23.1, 7932.0], [23.2, 7933.0], [23.3, 7935.0], [23.4, 7935.0], [23.5, 7935.0], [23.6, 7935.0], [23.7, 7935.0], [23.8, 7935.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7936.0], [24.3, 7937.0], [24.4, 7937.0], [24.5, 7938.0], [24.6, 7968.0], [24.7, 7982.0], [24.8, 8048.0], [24.9, 8095.0], [25.0, 8127.0], [25.1, 8155.0], [25.2, 8187.0], [25.3, 8188.0], [25.4, 8191.0], [25.5, 8191.0], [25.6, 8191.0], [25.7, 8191.0], [25.8, 8192.0], [25.9, 8192.0], [26.0, 8192.0], [26.1, 8192.0], [26.2, 8194.0], [26.3, 8196.0], [26.4, 8268.0], [26.5, 8351.0], [26.6, 8363.0], [26.7, 8422.0], [26.8, 8446.0], [26.9, 8447.0], [27.0, 8447.0], [27.1, 8448.0], [27.2, 8448.0], [27.3, 8448.0], [27.4, 8448.0], [27.5, 8451.0], [27.6, 8451.0], [27.7, 8495.0], [27.8, 8596.0], [27.9, 8655.0], [28.0, 8666.0], [28.1, 8697.0], [28.2, 8700.0], [28.3, 8702.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8703.0], [28.7, 8703.0], [28.8, 8703.0], [28.9, 8703.0], [29.0, 8703.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8704.0], [29.5, 8705.0], [29.6, 8705.0], [29.7, 8707.0], [29.8, 8707.0], [29.9, 8708.0], [30.0, 8730.0], [30.1, 8807.0], [30.2, 8869.0], [30.3, 8959.0], [30.4, 8959.0], [30.5, 8959.0], [30.6, 8959.0], [30.7, 8960.0], [30.8, 8960.0], [30.9, 9022.0], [31.0, 9080.0], [31.1, 9088.0], [31.2, 9118.0], [31.3, 9137.0], [31.4, 9150.0], [31.5, 9188.0], [31.6, 9198.0], [31.7, 9211.0], [31.8, 9214.0], [31.9, 9214.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9217.0], [33.6, 9217.0], [33.7, 9217.0], [33.8, 9217.0], [33.9, 9220.0], [34.0, 9221.0], [34.1, 9239.0], [34.2, 9282.0], [34.3, 9302.0], [34.4, 9315.0], [34.5, 9327.0], [34.6, 9376.0], [34.7, 9391.0], [34.8, 9391.0], [34.9, 9416.0], [35.0, 9441.0], [35.1, 9465.0], [35.2, 9469.0], [35.3, 9471.0], [35.4, 9471.0], [35.5, 9471.0], [35.6, 9471.0], [35.7, 9471.0], [35.8, 9471.0], [35.9, 9472.0], [36.0, 9475.0], [36.1, 9476.0], [36.2, 9499.0], [36.3, 9503.0], [36.4, 9532.0], [36.5, 9549.0], [36.6, 9576.0], [36.7, 9586.0], [36.8, 9601.0], [36.9, 9620.0], [37.0, 9633.0], [37.1, 9675.0], [37.2, 9716.0], [37.3, 9723.0], [37.4, 9725.0], [37.5, 9725.0], [37.6, 9726.0], [37.7, 9726.0], [37.8, 9727.0], [37.9, 9727.0], [38.0, 9727.0], [38.1, 9727.0], [38.2, 9727.0], [38.3, 9727.0], [38.4, 9728.0], [38.5, 9728.0], [38.6, 9728.0], [38.7, 9728.0], [38.8, 9728.0], [38.9, 9728.0], [39.0, 9729.0], [39.1, 9729.0], [39.2, 9729.0], [39.3, 9731.0], [39.4, 9740.0], [39.5, 9758.0], [39.6, 9767.0], [39.7, 9775.0], [39.8, 9814.0], [39.9, 9822.0], [40.0, 9832.0], [40.1, 9845.0], [40.2, 9874.0], [40.3, 9906.0], [40.4, 9912.0], [40.5, 9937.0], [40.6, 9937.0], [40.7, 9947.0], [40.8, 9980.0], [40.9, 9983.0], [41.0, 9983.0], [41.1, 9987.0], [41.2, 10006.0], [41.3, 10022.0], [41.4, 10044.0], [41.5, 10082.0], [41.6, 10111.0], [41.7, 10160.0], [41.8, 10176.0], [41.9, 10195.0], [42.0, 10212.0], [42.1, 10217.0], [42.2, 10238.0], [42.3, 10238.0], [42.4, 10238.0], [42.5, 10239.0], [42.6, 10239.0], [42.7, 10239.0], [42.8, 10239.0], [42.9, 10240.0], [43.0, 10240.0], [43.1, 10240.0], [43.2, 10240.0], [43.3, 10240.0], [43.4, 10240.0], [43.5, 10240.0], [43.6, 10240.0], [43.7, 10241.0], [43.8, 10241.0], [43.9, 10241.0], [44.0, 10243.0], [44.1, 10246.0], [44.2, 10285.0], [44.3, 10302.0], [44.4, 10320.0], [44.5, 10332.0], [44.6, 10388.0], [44.7, 10404.0], [44.8, 10415.0], [44.9, 10450.0], [45.0, 10451.0], [45.1, 10470.0], [45.2, 10490.0], [45.3, 10492.0], [45.4, 10494.0], [45.5, 10495.0], [45.6, 10495.0], [45.7, 10495.0], [45.8, 10499.0], [45.9, 10533.0], [46.0, 10546.0], [46.1, 10565.0], [46.2, 10600.0], [46.3, 10636.0], [46.4, 10687.0], [46.5, 10746.0], [46.6, 10751.0], [46.7, 10751.0], [46.8, 10752.0], [46.9, 10752.0], [47.0, 10755.0], [47.1, 10771.0], [47.2, 10783.0], [47.3, 10810.0], [47.4, 10866.0], [47.5, 10893.0], [47.6, 10901.0], [47.7, 10978.0], [47.8, 10990.0], [47.9, 10993.0], [48.0, 11007.0], [48.1, 11007.0], [48.2, 11008.0], [48.3, 11008.0], [48.4, 11008.0], [48.5, 11008.0], [48.6, 11009.0], [48.7, 11025.0], [48.8, 11050.0], [48.9, 11075.0], [49.0, 11135.0], [49.1, 11155.0], [49.2, 11251.0], [49.3, 11261.0], [49.4, 11263.0], [49.5, 11264.0], [49.6, 11264.0], [49.7, 11264.0], [49.8, 11264.0], [49.9, 11264.0], [50.0, 11274.0], [50.1, 11282.0], [50.2, 11303.0], [50.3, 11324.0], [50.4, 11359.0], [50.5, 11460.0], [50.6, 11519.0], [50.7, 11520.0], [50.8, 11521.0], [50.9, 11533.0], [51.0, 11580.0], [51.1, 11608.0], [51.2, 11758.0], [51.3, 11772.0], [51.4, 11774.0], [51.5, 11775.0], [51.6, 11775.0], [51.7, 11775.0], [51.8, 11776.0], [51.9, 11776.0], [52.0, 11779.0], [52.1, 11823.0], [52.2, 11870.0], [52.3, 11894.0], [52.4, 11937.0], [52.5, 12039.0], [52.6, 12136.0], [52.7, 12170.0], [52.8, 12276.0], [52.9, 12286.0], [53.0, 12287.0], [53.1, 12287.0], [53.2, 12288.0], [53.3, 12319.0], [53.4, 12345.0], [53.5, 12449.0], [53.6, 12541.0], [53.7, 12542.0], [53.8, 12543.0], [53.9, 12545.0], [54.0, 12545.0], [54.1, 12545.0], [54.2, 12578.0], [54.3, 12628.0], [54.4, 12685.0], [54.5, 12799.0], [54.6, 12799.0], [54.7, 12799.0], [54.8, 12800.0], [54.9, 12800.0], [55.0, 12802.0], [55.1, 12803.0], [55.2, 12930.0], [55.3, 12962.0], [55.4, 13055.0], [55.5, 13055.0], [55.6, 13059.0], [55.7, 13163.0], [55.8, 13179.0], [55.9, 13185.0], [56.0, 13187.0], [56.1, 13194.0], [56.2, 13200.0], [56.3, 13216.0], [56.4, 13226.0], [56.5, 13238.0], [56.6, 13249.0], [56.7, 13257.0], [56.8, 13262.0], [56.9, 13272.0], [57.0, 13279.0], [57.1, 13282.0], [57.2, 13292.0], [57.3, 13298.0], [57.4, 13302.0], [57.5, 13305.0], [57.6, 13308.0], [57.7, 13308.0], [57.8, 13309.0], [57.9, 13309.0], [58.0, 13309.0], [58.1, 13309.0], [58.2, 13310.0], [58.3, 13310.0], [58.4, 13310.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13310.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13314.0], [73.9, 13314.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13315.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13317.0], [74.9, 13326.0], [75.0, 13329.0], [75.1, 13342.0], [75.2, 13350.0], [75.3, 13357.0], [75.4, 13358.0], [75.5, 13371.0], [75.6, 13374.0], [75.7, 13381.0], [75.8, 13390.0], [75.9, 13398.0], [76.0, 13405.0], [76.1, 13414.0], [76.2, 13423.0], [76.3, 13462.0], [76.4, 13489.0], [76.5, 13508.0], [76.6, 13527.0], [76.7, 13567.0], [76.8, 13567.0], [76.9, 13567.0], [77.0, 13567.0], [77.1, 13568.0], [77.2, 13571.0], [77.3, 13675.0], [77.4, 13681.0], [77.5, 13701.0], [77.6, 13752.0], [77.7, 13776.0], [77.8, 13796.0], [77.9, 13818.0], [78.0, 13822.0], [78.1, 13823.0], [78.2, 13823.0], [78.3, 13823.0], [78.4, 13823.0], [78.5, 13823.0], [78.6, 13824.0], [78.7, 13824.0], [78.8, 13824.0], [78.9, 13824.0], [79.0, 13824.0], [79.1, 13824.0], [79.2, 13824.0], [79.3, 13824.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13825.0], [79.8, 13825.0], [79.9, 13825.0], [80.0, 13825.0], [80.1, 13827.0], [80.2, 13828.0], [80.3, 13831.0], [80.4, 13835.0], [80.5, 13835.0], [80.6, 13837.0], [80.7, 13871.0], [80.8, 13975.0], [80.9, 14075.0], [81.0, 14079.0], [81.1, 14079.0], [81.2, 14080.0], [81.3, 14080.0], [81.4, 14083.0], [81.5, 14230.0], [81.6, 14333.0], [81.7, 14334.0], [81.8, 14334.0], [81.9, 14334.0], [82.0, 14335.0], [82.1, 14335.0], [82.2, 14335.0], [82.3, 14335.0], [82.4, 14335.0], [82.5, 14335.0], [82.6, 14335.0], [82.7, 14335.0], [82.8, 14336.0], [82.9, 14336.0], [83.0, 14336.0], [83.1, 14336.0], [83.2, 14336.0], [83.3, 14336.0], [83.4, 14336.0], [83.5, 14336.0], [83.6, 14337.0], [83.7, 14337.0], [83.8, 14337.0], [83.9, 14338.0], [84.0, 14339.0], [84.1, 14339.0], [84.2, 14350.0], [84.3, 14591.0], [84.4, 14592.0], [84.5, 14592.0], [84.6, 14596.0], [84.7, 14843.0], [84.8, 14848.0], [84.9, 15057.0], [85.0, 15103.0], [85.1, 15103.0], [85.2, 15104.0], [85.3, 15136.0], [85.4, 15171.0], [85.5, 15239.0], [85.6, 15359.0], [85.7, 15363.0], [85.8, 15615.0], [85.9, 15616.0], [86.0, 15870.0], [86.1, 16277.0], [86.2, 16382.0], [86.3, 16383.0], [86.4, 16383.0], [86.5, 16383.0], [86.6, 16384.0], [86.7, 16384.0], [86.8, 16384.0], [86.9, 16484.0], [87.0, 16492.0], [87.1, 16531.0], [87.2, 16587.0], [87.3, 16792.0], [87.4, 16814.0], [87.5, 17062.0], [87.6, 17154.0], [87.7, 17155.0], [87.8, 17407.0], [87.9, 17919.0], [88.0, 18077.0], [88.1, 18177.0], [88.2, 18273.0], [88.3, 18317.0], [88.4, 18656.0], [88.5, 18913.0], [88.6, 19150.0], [88.7, 19177.0], [88.8, 19193.0], [88.9, 19302.0], [89.0, 19558.0], [89.1, 20622.0], [89.2, 20735.0], [89.3, 20791.0], [89.4, 21054.0], [89.5, 21182.0], [89.6, 22296.0], [89.7, 23704.0], [89.8, 25088.0], [89.9, 25600.0], [90.0, 26365.0], [90.1, 26367.0], [90.2, 26368.0], [90.3, 26438.0], [90.4, 26455.0], [90.5, 27225.0], [90.6, 27324.0], [90.7, 27392.0], [90.8, 27392.0], [90.9, 27646.0], [91.0, 27648.0], [91.1, 27649.0], [91.2, 28414.0], [91.3, 28672.0], [91.4, 28672.0], [91.5, 29463.0], [91.6, 29492.0], [91.7, 29695.0], [91.8, 29814.0], [91.9, 37518.0], [92.0, 42952.0], [92.1, 49098.0], [92.2, 53272.0], [92.3, 53288.0], [92.4, 53328.0], [92.5, 53527.0], [92.6, 53548.0], [92.7, 53566.0], [92.8, 53617.0], [92.9, 53806.0], [93.0, 54015.0], [93.1, 54179.0], [93.2, 55293.0], [93.3, 65046.0], [93.4, 69138.0], [93.5, 72995.0], [93.6, 89534.0], [93.7, 91245.0], [93.8, 94048.0], [93.9, 97536.0], [94.0, 100599.0], [94.1, 100608.0], [94.2, 100864.0], [94.3, 101126.0], [94.4, 101127.0], [94.5, 102862.0], [94.6, 105570.0], [94.7, 105670.0], [94.8, 105718.0], [94.9, 105726.0], [95.0, 105811.0], [95.1, 105908.0], [95.2, 105953.0], [95.3, 105983.0], [95.4, 105984.0], [95.5, 106097.0], [95.6, 106238.0], [95.7, 106240.0], [95.8, 106283.0], [95.9, 106342.0], [96.0, 106526.0], [96.1, 106629.0], [96.2, 106718.0], [96.3, 106752.0], [96.4, 106753.0], [96.5, 106763.0], [96.6, 106905.0], [96.7, 106985.0], [96.8, 107007.0], [96.9, 107008.0], [97.0, 107262.0], [97.1, 107264.0], [97.2, 107264.0], [97.3, 107288.0], [97.4, 108007.0], [97.5, 110080.0], [97.6, 110847.0], [97.7, 110847.0], [97.8, 112643.0], [97.9, 113676.0], [98.0, 114715.0], [98.1, 115198.0], [98.2, 116478.0], [98.3, 117247.0], [98.4, 117248.0], [98.5, 118271.0], [98.6, 118272.0], [98.7, 118330.0], [98.8, 119377.0], [98.9, 122485.0], [99.0, 131839.0], [99.1, 132863.0], [99.2, 135537.0], [99.3, 137214.0], [99.4, 157283.0], [99.5, 157441.0], [99.6, 169979.0], [99.7, 173055.0], [99.8, 210163.0], [99.9, 210687.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 582.0, "series": [{"data": [[0.0, 151.0], [164000.0, 2.0], [210400.0, 3.0], [206500.0, 1.0], [101100.0, 4.0], [105900.0, 6.0], [106700.0, 5.0], [145900.0, 1.0], [36500.0, 1.0], [42100.0, 1.0], [169900.0, 1.0], [53300.0, 2.0], [55300.0, 1.0], [96200.0, 3.0], [101800.0, 4.0], [109800.0, 1.0], [500.0, 6.0], [600.0, 3.0], [700.0, 5.0], [1000.0, 1.0], [1300.0, 4.0], [1600.0, 4.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [178100.0, 5.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 2.0], [3300.0, 5.0], [3200.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 3.0], [3800.0, 1.0], [3900.0, 2.0], [4300.0, 5.0], [4200.0, 4.0], [4600.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6400.0, 2.0], [6600.0, 3.0], [6500.0, 2.0], [105700.0, 4.0], [6800.0, 1.0], [6900.0, 1.0], [6700.0, 3.0], [7000.0, 2.0], [7100.0, 70.0], [7400.0, 53.0], [7600.0, 44.0], [7700.0, 1.0], [7800.0, 1.0], [7900.0, 26.0], [8000.0, 1.0], [8100.0, 33.0], [8400.0, 23.0], [8600.0, 5.0], [8700.0, 48.0], [8200.0, 2.0], [139000.0, 3.0], [8800.0, 2.0], [8900.0, 25.0], [9200.0, 50.0], [9100.0, 5.0], [9300.0, 3.0], [9400.0, 18.0], [9500.0, 5.0], [9700.0, 44.0], [9600.0, 3.0], [9900.0, 26.0], [10000.0, 10.0], [10100.0, 9.0], [9800.0, 10.0], [10200.0, 30.0], [163000.0, 1.0], [10600.0, 14.0], [10500.0, 14.0], [10400.0, 21.0], [10300.0, 13.0], [10700.0, 23.0], [10800.0, 14.0], [10900.0, 15.0], [11000.0, 25.0], [11200.0, 29.0], [11100.0, 7.0], [177400.0, 1.0], [11300.0, 10.0], [11600.0, 5.0], [11700.0, 22.0], [11500.0, 14.0], [11400.0, 9.0], [11800.0, 7.0], [12100.0, 2.0], [11900.0, 2.0], [12200.0, 9.0], [12000.0, 2.0], [12700.0, 16.0], [12600.0, 1.0], [12300.0, 4.0], [12400.0, 1.0], [12500.0, 8.0], [13100.0, 1.0], [13300.0, 350.0], [13000.0, 10.0], [13200.0, 4.0], [12800.0, 5.0], [13800.0, 57.0], [13500.0, 8.0], [13400.0, 1.0], [14100.0, 2.0], [14300.0, 58.0], [14000.0, 18.0], [227000.0, 2.0], [14800.0, 8.0], [14500.0, 10.0], [14400.0, 1.0], [15100.0, 11.0], [15300.0, 3.0], [15600.0, 1.0], [15800.0, 1.0], [16300.0, 16.0], [16100.0, 2.0], [16200.0, 1.0], [17400.0, 4.0], [16400.0, 1.0], [16800.0, 3.0], [16600.0, 1.0], [18200.0, 2.0], [18600.0, 1.0], [19400.0, 1.0], [19200.0, 1.0], [18800.0, 1.0], [20200.0, 2.0], [20400.0, 1.0], [20000.0, 1.0], [26600.0, 2.0], [25600.0, 1.0], [27600.0, 5.0], [27200.0, 2.0], [27400.0, 1.0], [28600.0, 1.0], [29600.0, 2.0], [29400.0, 2.0], [136700.0, 2.0], [36800.0, 3.0], [53200.0, 4.0], [55200.0, 1.0], [100800.0, 2.0], [106400.0, 1.0], [107200.0, 2.0], [113600.0, 1.0], [115200.0, 1.0], [119200.0, 2.0], [132800.0, 1.0], [89500.0, 1.0], [97500.0, 1.0], [110300.0, 1.0], [109500.0, 1.0], [123100.0, 1.0], [173000.0, 1.0], [177100.0, 1.0], [49100.0, 1.0], [53500.0, 3.0], [54700.0, 4.0], [89400.0, 2.0], [106200.0, 2.0], [107000.0, 1.0], [113400.0, 1.0], [112600.0, 2.0], [118200.0, 3.0], [210900.0, 1.0], [114900.0, 4.0], [131800.0, 1.0], [157400.0, 2.0], [17100.0, 4.0], [17900.0, 4.0], [18100.0, 2.0], [19100.0, 2.0], [18900.0, 4.0], [19900.0, 1.0], [20100.0, 4.0], [20900.0, 1.0], [20500.0, 1.0], [21100.0, 2.0], [26300.0, 13.0], [27100.0, 1.0], [27300.0, 2.0], [26900.0, 1.0], [140700.0, 1.0], [37800.0, 1.0], [43000.0, 4.0], [49000.0, 1.0], [52200.0, 2.0], [81200.0, 1.0], [110800.0, 1.0], [117200.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 302.0], [164000.0, 1.0], [210400.0, 4.0], [137700.0, 3.0], [214500.0, 1.0], [69100.0, 1.0], [93100.0, 1.0], [101100.0, 4.0], [105900.0, 3.0], [106700.0, 8.0], [108300.0, 1.0], [118700.0, 3.0], [210600.0, 1.0], [169900.0, 3.0], [47300.0, 1.0], [48900.0, 1.0], [50900.0, 1.0], [52900.0, 1.0], [53300.0, 1.0], [214700.0, 1.0], [54500.0, 1.0], [57300.0, 1.0], [55700.0, 1.0], [58100.0, 1.0], [101800.0, 2.0], [117000.0, 1.0], [118600.0, 1.0], [1100.0, 12.0], [1200.0, 90.0], [1300.0, 28.0], [1400.0, 14.0], [1500.0, 18.0], [1600.0, 20.0], [1700.0, 10.0], [1800.0, 7.0], [1900.0, 14.0], [2000.0, 20.0], [2100.0, 11.0], [2200.0, 6.0], [2300.0, 9.0], [2400.0, 25.0], [2500.0, 35.0], [2600.0, 21.0], [2800.0, 13.0], [2700.0, 21.0], [178100.0, 3.0], [2900.0, 19.0], [3000.0, 12.0], [3100.0, 23.0], [3200.0, 17.0], [3300.0, 7.0], [3400.0, 11.0], [3500.0, 15.0], [3600.0, 12.0], [3700.0, 20.0], [3800.0, 14.0], [3900.0, 23.0], [4000.0, 40.0], [4100.0, 40.0], [4200.0, 35.0], [4300.0, 28.0], [4600.0, 14.0], [4400.0, 32.0], [4500.0, 9.0], [69700.0, 1.0], [4800.0, 30.0], [4700.0, 13.0], [4900.0, 34.0], [5100.0, 7.0], [5000.0, 21.0], [5200.0, 10.0], [5300.0, 17.0], [5500.0, 12.0], [5400.0, 12.0], [5600.0, 8.0], [5700.0, 7.0], [5800.0, 7.0], [5900.0, 9.0], [6000.0, 8.0], [6100.0, 5.0], [6200.0, 4.0], [6300.0, 12.0], [6400.0, 6.0], [6500.0, 19.0], [6600.0, 20.0], [105700.0, 15.0], [6700.0, 22.0], [6800.0, 37.0], [6900.0, 32.0], [7100.0, 118.0], [7000.0, 24.0], [7200.0, 21.0], [7300.0, 10.0], [7400.0, 108.0], [7500.0, 14.0], [7600.0, 95.0], [7700.0, 10.0], [7900.0, 68.0], [7800.0, 13.0], [8100.0, 60.0], [8000.0, 8.0], [8300.0, 6.0], [8200.0, 9.0], [8500.0, 19.0], [8400.0, 42.0], [8600.0, 18.0], [8700.0, 97.0], [8800.0, 26.0], [8900.0, 53.0], [9200.0, 111.0], [9000.0, 25.0], [9100.0, 38.0], [9300.0, 17.0], [9400.0, 53.0], [9600.0, 24.0], [9500.0, 23.0], [9700.0, 88.0], [9800.0, 28.0], [9900.0, 53.0], [10000.0, 64.0], [10100.0, 130.0], [10200.0, 239.0], [163000.0, 2.0], [10400.0, 261.0], [10600.0, 321.0], [10300.0, 181.0], [10500.0, 304.0], [10700.0, 338.0], [10800.0, 327.0], [10900.0, 328.0], [11000.0, 484.0], [11100.0, 423.0], [11200.0, 375.0], [177400.0, 1.0], [11400.0, 223.0], [11600.0, 194.0], [11500.0, 222.0], [11300.0, 241.0], [11700.0, 209.0], [11800.0, 153.0], [12100.0, 103.0], [11900.0, 143.0], [12000.0, 120.0], [12200.0, 118.0], [12300.0, 69.0], [12600.0, 15.0], [12500.0, 40.0], [12400.0, 45.0], [12700.0, 26.0], [13100.0, 25.0], [13300.0, 582.0], [12900.0, 10.0], [12800.0, 37.0], [13200.0, 25.0], [13000.0, 10.0], [13500.0, 19.0], [13400.0, 14.0], [13600.0, 3.0], [13800.0, 113.0], [13700.0, 6.0], [13900.0, 8.0], [14200.0, 3.0], [14000.0, 23.0], [14300.0, 98.0], [14100.0, 3.0], [227000.0, 1.0], [14600.0, 4.0], [14800.0, 11.0], [14400.0, 12.0], [14700.0, 4.0], [14500.0, 15.0], [15000.0, 6.0], [15200.0, 9.0], [14900.0, 4.0], [15300.0, 11.0], [15100.0, 21.0], [15600.0, 14.0], [15400.0, 3.0], [15700.0, 2.0], [15500.0, 4.0], [15800.0, 5.0], [15900.0, 1.0], [16300.0, 22.0], [16100.0, 3.0], [16200.0, 1.0], [17400.0, 4.0], [16800.0, 4.0], [16400.0, 3.0], [17600.0, 4.0], [18000.0, 3.0], [17800.0, 2.0], [18400.0, 1.0], [19400.0, 1.0], [19000.0, 2.0], [19200.0, 2.0], [20200.0, 2.0], [19800.0, 1.0], [20400.0, 3.0], [20600.0, 2.0], [21200.0, 1.0], [21800.0, 1.0], [22400.0, 1.0], [23000.0, 1.0], [22600.0, 1.0], [24200.0, 2.0], [24800.0, 1.0], [25000.0, 3.0], [26600.0, 7.0], [26400.0, 1.0], [27600.0, 4.0], [28400.0, 5.0], [28600.0, 4.0], [28200.0, 1.0], [29600.0, 1.0], [29400.0, 1.0], [30600.0, 4.0], [31000.0, 1.0], [32400.0, 1.0], [136700.0, 1.0], [36800.0, 1.0], [53200.0, 1.0], [54000.0, 1.0], [55200.0, 1.0], [54400.0, 3.0], [54800.0, 2.0], [56000.0, 1.0], [57600.0, 1.0], [80800.0, 1.0], [98400.0, 1.0], [106400.0, 1.0], [107200.0, 4.0], [113600.0, 1.0], [115200.0, 1.0], [124000.0, 1.0], [132800.0, 2.0], [97500.0, 2.0], [110300.0, 1.0], [109500.0, 4.0], [115100.0, 1.0], [34300.0, 1.0], [50300.0, 2.0], [52700.0, 1.0], [53500.0, 2.0], [54700.0, 3.0], [55900.0, 3.0], [80600.0, 1.0], [92600.0, 1.0], [96600.0, 1.0], [100600.0, 4.0], [106200.0, 2.0], [105400.0, 1.0], [107000.0, 7.0], [113400.0, 1.0], [112600.0, 3.0], [118200.0, 4.0], [90900.0, 2.0], [114100.0, 1.0], [114900.0, 5.0], [131800.0, 2.0], [157400.0, 11.0], [16500.0, 4.0], [16700.0, 1.0], [17100.0, 7.0], [18300.0, 1.0], [18100.0, 10.0], [17700.0, 1.0], [17500.0, 2.0], [17900.0, 4.0], [18500.0, 2.0], [18900.0, 4.0], [20100.0, 2.0], [19500.0, 1.0], [20300.0, 2.0], [20700.0, 1.0], [20500.0, 2.0], [21500.0, 1.0], [21300.0, 2.0], [21100.0, 2.0], [21700.0, 2.0], [21900.0, 1.0], [22100.0, 2.0], [22300.0, 2.0], [24900.0, 1.0], [26300.0, 15.0], [26100.0, 1.0], [27300.0, 2.0], [27500.0, 5.0], [28500.0, 3.0], [28100.0, 2.0], [28300.0, 1.0], [29500.0, 1.0], [50200.0, 1.0], [53000.0, 1.0], [53400.0, 3.0], [54200.0, 1.0], [54600.0, 2.0], [90800.0, 2.0], [106800.0, 2.0], [110000.0, 2.0], [107600.0, 1.0], [110800.0, 1.0], [117200.0, 4.0], [130800.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 170.0], [69100.0, 1.0], [65900.0, 1.0], [69900.0, 1.0], [93100.0, 1.0], [101100.0, 4.0], [105900.0, 7.0], [106700.0, 7.0], [114700.0, 1.0], [120300.0, 1.0], [210600.0, 2.0], [100.0, 2.0], [42900.0, 1.0], [169900.0, 1.0], [200.0, 1.0], [52100.0, 1.0], [54100.0, 1.0], [53700.0, 1.0], [53300.0, 3.0], [96200.0, 1.0], [400.0, 1.0], [105800.0, 2.0], [106600.0, 2.0], [500.0, 1.0], [137200.0, 1.0], [600.0, 1.0], [700.0, 3.0], [800.0, 1.0], [210800.0, 1.0], [900.0, 1.0], [1200.0, 3.0], [1300.0, 4.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 3.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 2.0], [2700.0, 2.0], [2800.0, 3.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 2.0], [3300.0, 3.0], [210100.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 3.0], [4100.0, 4.0], [4400.0, 2.0], [72900.0, 1.0], [4900.0, 2.0], [5200.0, 2.0], [5300.0, 2.0], [5600.0, 3.0], [5400.0, 1.0], [5500.0, 2.0], [5700.0, 2.0], [5800.0, 4.0], [5900.0, 2.0], [6000.0, 2.0], [6200.0, 2.0], [6400.0, 1.0], [105700.0, 5.0], [6800.0, 1.0], [6700.0, 1.0], [106500.0, 2.0], [7000.0, 3.0], [7100.0, 46.0], [7200.0, 4.0], [7300.0, 7.0], [7400.0, 61.0], [7500.0, 9.0], [7600.0, 41.0], [119300.0, 1.0], [7900.0, 36.0], [7700.0, 9.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 27.0], [8400.0, 20.0], [8500.0, 2.0], [8300.0, 5.0], [8200.0, 2.0], [8600.0, 6.0], [8700.0, 38.0], [139000.0, 1.0], [8800.0, 3.0], [9000.0, 6.0], [9100.0, 10.0], [9200.0, 51.0], [8900.0, 11.0], [9500.0, 10.0], [9400.0, 28.0], [9300.0, 10.0], [9700.0, 51.0], [9600.0, 7.0], [9900.0, 17.0], [10000.0, 8.0], [10100.0, 7.0], [9800.0, 10.0], [10200.0, 45.0], [158200.0, 1.0], [10600.0, 4.0], [10500.0, 7.0], [10700.0, 16.0], [10400.0, 23.0], [10300.0, 7.0], [11100.0, 4.0], [10900.0, 6.0], [11000.0, 20.0], [10800.0, 7.0], [11200.0, 20.0], [177400.0, 1.0], [11300.0, 5.0], [11700.0, 19.0], [11500.0, 9.0], [11600.0, 2.0], [11400.0, 2.0], [11800.0, 4.0], [11900.0, 3.0], [12100.0, 5.0], [12200.0, 9.0], [12000.0, 1.0], [12600.0, 4.0], [12400.0, 3.0], [12300.0, 4.0], [12500.0, 12.0], [12700.0, 6.0], [13300.0, 360.0], [13100.0, 11.0], [13200.0, 22.0], [12800.0, 8.0], [13000.0, 6.0], [12900.0, 3.0], [13700.0, 7.0], [13800.0, 56.0], [13400.0, 10.0], [13500.0, 15.0], [13600.0, 4.0], [14000.0, 11.0], [14300.0, 52.0], [13900.0, 2.0], [14200.0, 2.0], [14500.0, 8.0], [14800.0, 3.0], [14600.0, 1.0], [15100.0, 11.0], [15000.0, 2.0], [15300.0, 3.0], [15200.0, 1.0], [15500.0, 1.0], [15800.0, 2.0], [15600.0, 3.0], [16200.0, 1.0], [16300.0, 15.0], [16000.0, 1.0], [17400.0, 2.0], [16400.0, 3.0], [17000.0, 1.0], [16800.0, 3.0], [16600.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [18200.0, 3.0], [18600.0, 1.0], [19400.0, 1.0], [19200.0, 1.0], [19000.0, 1.0], [19800.0, 1.0], [20800.0, 1.0], [21000.0, 1.0], [20600.0, 1.0], [22200.0, 1.0], [22000.0, 1.0], [23000.0, 1.0], [24800.0, 1.0], [25000.0, 1.0], [26400.0, 4.0], [25600.0, 1.0], [26600.0, 1.0], [27600.0, 5.0], [27200.0, 2.0], [27400.0, 1.0], [28400.0, 3.0], [28600.0, 3.0], [29600.0, 2.0], [29400.0, 4.0], [29800.0, 1.0], [136700.0, 1.0], [36800.0, 1.0], [47600.0, 1.0], [53200.0, 3.0], [54000.0, 3.0], [53600.0, 1.0], [55200.0, 1.0], [64400.0, 1.0], [91200.0, 1.0], [100800.0, 2.0], [105600.0, 1.0], [107200.0, 6.0], [108000.0, 1.0], [113600.0, 1.0], [122400.0, 1.0], [119200.0, 1.0], [132800.0, 2.0], [89500.0, 2.0], [97500.0, 1.0], [106300.0, 2.0], [105500.0, 2.0], [107100.0, 1.0], [107900.0, 1.0], [113500.0, 1.0], [118300.0, 1.0], [115100.0, 2.0], [126300.0, 1.0], [173000.0, 2.0], [135500.0, 1.0], [37500.0, 1.0], [39900.0, 1.0], [53500.0, 5.0], [54700.0, 1.0], [100600.0, 2.0], [106200.0, 5.0], [105400.0, 1.0], [107000.0, 4.0], [112600.0, 1.0], [118200.0, 3.0], [157200.0, 1.0], [98900.0, 1.0], [100500.0, 1.0], [106100.0, 1.0], [106900.0, 3.0], [108500.0, 1.0], [114100.0, 1.0], [118100.0, 1.0], [114900.0, 1.0], [131800.0, 2.0], [157400.0, 2.0], [16500.0, 3.0], [17100.0, 5.0], [16700.0, 1.0], [18300.0, 1.0], [18100.0, 2.0], [17900.0, 2.0], [19100.0, 5.0], [18900.0, 1.0], [19300.0, 1.0], [19500.0, 1.0], [20700.0, 4.0], [21100.0, 2.0], [23700.0, 1.0], [26300.0, 6.0], [27300.0, 5.0], [49000.0, 1.0], [53800.0, 1.0], [65000.0, 1.0], [76400.0, 1.0], [94000.0, 1.0], [106000.0, 2.0], [102800.0, 1.0], [106800.0, 1.0], [110000.0, 2.0], [110800.0, 4.0], [117200.0, 3.0], [116400.0, 2.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 227000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7850.0, "series": [{"data": [[1.0, 179.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5571.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 21.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7850.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.6, "minX": 1.53939108E12, "maxY": 500.0, "series": [{"data": [[1.53939144E12, 385.9791666666664], [1.53939114E12, 86.15789473684207], [1.53939162E12, 500.0], [1.5393915E12, 447.94005449591276], [1.53939132E12, 270.0275229357794], [1.53939168E12, 279.91681735985554], [1.53939138E12, 327.97397769516704], [1.5393912E12, 146.6148989898989], [1.53939156E12, 495.30358097274205], [1.53939126E12, 206.6424090338775], [1.53939174E12, 3.6], [1.53939108E12, 31.872563718140942]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939174E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 227060.0, "series": [{"data": [[2.0, 711.0], [3.0, 227060.0], [4.0, 955.5], [5.0, 592.0], [7.0, 1317.0], [8.0, 1340.0], [9.0, 954.0], [10.0, 57900.0], [11.0, 598.0], [12.0, 573.0], [13.0, 562.0], [14.0, 746.0], [16.0, 721.0], [17.0, 792.0], [18.0, 1858.5], [19.0, 743.0], [21.0, 1662.0], [22.0, 1712.0], [24.0, 79562.0], [25.0, 53399.666666666664], [27.0, 106557.0], [28.0, 1682.0], [29.0, 2289.0], [31.0, 2393.0], [32.0, 1785.0], [33.0, 1858.0], [34.0, 1948.0], [35.0, 1956.0], [36.0, 53519.0], [38.0, 2513.5], [39.0, 3544.0], [41.0, 2539.0], [43.0, 3105.0], [45.0, 20234.0], [46.0, 2606.0], [47.0, 28702.5], [49.0, 3458.0], [50.0, 3744.0], [51.0, 3914.0], [52.0, 37668.0], [53.0, 3374.0], [54.0, 3056.0], [56.0, 3996.0], [57.0, 3343.0], [58.0, 3309.0], [59.0, 28323.5], [60.0, 28367.5], [61.0, 3350.0], [62.0, 28600.5], [64.0, 4004.5], [65.0, 3450.0], [67.0, 3907.0], [68.0, 28578.5], [70.0, 4718.0], [71.0, 36814.333333333336], [72.0, 4273.0], [73.0, 4380.0], [74.0, 4220.0], [75.0, 4306.0], [76.0, 4299.0], [78.0, 4385.0], [79.0, 4461.0], [80.0, 4382.0], [82.0, 134757.125], [84.0, 3296.6666666666665], [86.0, 5767.0], [87.0, 6072.0], [89.0, 6156.0], [91.0, 6458.0], [93.0, 6677.0], [94.0, 6812.0], [95.0, 6672.0], [96.0, 6604.0], [97.0, 3489.0], [98.0, 7055.0], [99.0, 6458.0], [100.0, 59655.75], [101.0, 6556.0], [105.0, 17542.0], [106.0, 6790.0], [108.0, 13522.666666666668], [110.0, 7284.5], [111.0, 7485.0], [114.0, 8119.5], [116.0, 7909.0], [118.0, 8624.5], [121.0, 9409.0], [122.0, 8990.0], [124.0, 9268.0], [126.0, 10158.333333333334], [127.0, 8714.0], [129.0, 9151.0], [130.0, 9253.0], [131.0, 9228.0], [132.0, 8589.0], [134.0, 8429.0], [128.0, 139902.5], [136.0, 8776.0], [137.0, 8241.0], [138.0, 8660.0], [139.0, 8941.0], [141.0, 9254.5], [143.0, 9278.0], [144.0, 9380.0], [145.0, 9736.0], [147.0, 9916.0], [148.0, 10689.0], [149.0, 10055.0], [151.0, 18901.0], [146.0, 27247.0], [152.0, 10571.0], [154.0, 10518.0], [155.0, 10590.0], [156.0, 9987.0], [157.0, 18622.5], [159.0, 10623.0], [160.0, 10270.0], [161.0, 10044.0], [163.0, 10472.0], [165.0, 10949.0], [166.0, 20041.0], [164.0, 20202.0], [162.0, 18240.0], [168.0, 11023.0], [170.0, 11878.0], [174.0, 19234.0], [169.0, 18807.0], [180.0, 15491.5], [182.0, 15662.0], [181.0, 20119.0], [179.0, 20147.0], [185.0, 10589.0], [187.0, 10575.0], [188.0, 10975.0], [189.0, 19174.0], [193.0, 10389.0], [196.0, 21149.0], [192.0, 21183.0], [200.0, 15312.0], [205.0, 10107.0], [204.0, 20481.0], [214.0, 20989.0], [216.0, 11344.0], [219.0, 13122.0], [223.0, 11689.0], [222.0, 49135.0], [227.0, 11247.5], [229.0, 11255.0], [231.0, 10866.0], [225.0, 49095.0], [235.0, 50032.0], [238.0, 14799.0], [239.0, 28766.5], [236.0, 89459.0], [232.0, 89548.0], [240.0, 11582.5], [241.0, 12114.0], [243.0, 11059.0], [244.0, 15153.0], [249.0, 11927.0], [252.0, 14665.0], [253.0, 12275.0], [254.0, 14219.5], [255.0, 12366.0], [256.0, 11543.0], [261.0, 13312.0], [263.0, 3712.0], [264.0, 11664.0], [265.0, 10462.0], [269.0, 9215.0], [270.0, 10901.0], [271.0, 13311.0], [273.0, 87696.0], [272.0, 19004.333333333332], [274.0, 10893.0], [275.0, 26367.0], [277.0, 72703.14285714286], [278.0, 13327.375], [279.0, 13312.0], [280.0, 15447.25], [287.0, 9521.25], [285.0, 8987.0], [286.0, 8143.5], [281.0, 11390.75], [282.0, 13311.0], [283.0, 11200.0], [289.0, 12927.0], [288.0, 36171.75], [290.0, 30977.0], [291.0, 9538.0], [292.0, 21216.666666666668], [293.0, 9266.666666666666], [294.0, 13270.666666666666], [295.0, 10910.0], [296.0, 34045.5], [300.0, 7594.124999999999], [301.0, 12799.166666666666], [297.0, 11673.5], [298.0, 9599.75], [299.0, 10163.0], [305.0, 13309.6], [304.0, 27445.285714285714], [306.0, 13311.0], [307.0, 6803.2], [308.0, 10751.625], [309.0, 6656.0], [310.0, 13311.0], [311.0, 10954.0], [312.0, 11298.5], [318.0, 11518.2], [319.0, 5645.333333333333], [316.0, 14079.0], [317.0, 10438.444444444445], [313.0, 9787.4], [314.0, 12752.333333333332], [315.0, 10770.0], [321.0, 17581.199999999997], [320.0, 11823.5], [322.0, 10911.0], [332.0, 7422.0], [333.0, 21826.666666666668], [334.0, 13311.0], [324.0, 10774.0], [325.0, 7166.8], [326.0, 10307.8125], [327.0, 26957.777777777777], [328.0, 23208.333333333332], [329.0, 11517.5], [330.0, 9816.727272727272], [331.0, 12490.666666666666], [337.0, 12944.42857142857], [336.0, 10836.666666666666], [339.0, 12388.6], [349.0, 9474.0], [350.0, 8127.500000000002], [351.0, 10121.833333333334], [340.0, 2.0], [341.0, 9063.2], [342.0, 12946.0], [343.0, 12127.125], [344.0, 9073.4], [345.0, 10945.5], [346.0, 8035.444444444443], [347.0, 10365.875], [353.0, 10909.625000000002], [352.0, 11569.25], [355.0, 7195.0], [364.0, 12302.0], [365.0, 9026.625], [366.0, 8089.333333333333], [367.0, 7021.285714285714], [356.0, 22911.25], [358.0, 12082.6], [359.0, 13573.2], [360.0, 12414.333333333334], [361.0, 10042.999999999998], [362.0, 10393.4], [363.0, 6114.6], [369.0, 9450.500000000002], [368.0, 8171.777777777777], [370.0, 9216.0], [371.0, 9979.0], [373.0, 10176.5], [374.0, 10719.125], [375.0, 9778.5], [376.0, 12499.636363636364], [382.0, 12148.333333333334], [383.0, 11263.4], [380.0, 11481.5], [381.0, 6127.5], [377.0, 5120.5], [378.0, 4224.75], [379.0, 9942.2], [385.0, 10110.833333333332], [384.0, 7167.0], [386.0, 10831.0], [387.0, 11736.375], [388.0, 7779.333333333334], [389.0, 10986.142857142857], [390.0, 9601.57142857143], [391.0, 12927.5], [392.0, 13312.0], [398.0, 8220.444444444445], [399.0, 13312.0], [396.0, 16417.0], [397.0, 11519.5], [393.0, 11707.5], [394.0, 12455.0], [395.0, 8150.333333333334], [403.0, 10218.0], [401.0, 12726.285714285714], [400.0, 10673.5], [402.0, 10815.083333333334], [404.0, 26367.5], [405.0, 21072.666666666668], [408.0, 1.0], [415.0, 14335.0], [412.0, 13823.333333333334], [413.0, 13607.5], [409.0, 8106.5], [410.0, 12083.466666666667], [411.0, 11162.083333333334], [418.0, 12322.375], [416.0, 13566.75], [419.0, 15281.666666666666], [428.0, 7132.4], [429.0, 19272.428571428572], [430.0, 8192.500000000002], [431.0, 83543.8], [420.0, 17149.0], [422.0, 11980.4], [423.0, 10679.285714285714], [424.0, 13311.75], [425.0, 9387.0], [426.0, 11861.0], [427.0, 10899.0], [433.0, 25557.166666666668], [432.0, 11456.0], [434.0, 5557.833333333333], [435.0, 6314.0], [436.0, 13311.5], [437.0, 11374.125], [438.0, 16082.333333333334], [439.0, 10556.625], [440.0, 11795.0], [447.0, 12671.333333333334], [444.0, 10239.0], [446.0, 8703.625], [441.0, 10438.0], [442.0, 109823.0], [443.0, 13312.0], [449.0, 13311.5], [448.0, 11280.499999999998], [450.0, 75136.16666666666], [451.0, 12351.0], [452.0, 9639.714285714284], [453.0, 12634.833333333334], [454.0, 11194.333333333334], [455.0, 8446.75], [456.0, 8959.333333333334], [462.0, 23262.11111111111], [463.0, 8876.833333333334], [460.0, 33397.5294117647], [461.0, 10136.0], [457.0, 10265.0], [458.0, 12029.0], [459.0, 10111.666666666666], [466.0, 8983.75], [464.0, 9215.0], [467.0, 9565.111111111111], [476.0, 28287.125], [477.0, 12714.2], [478.0, 11212.0], [479.0, 12065.000000000002], [468.0, 51096.666666666664], [469.0, 9719.75], [470.0, 13311.0], [471.0, 8209.5], [472.0, 14591.0], [473.0, 13823.6], [474.0, 11481.285714285714], [475.0, 13311.666666666666], [481.0, 50858.0], [480.0, 13312.0], [482.0, 8506.375], [483.0, 14335.0], [484.0, 10362.285714285716], [485.0, 8551.300000000001], [486.0, 11262.5], [487.0, 12540.333333333334], [488.0, 4792.0], [495.0, 11134.375], [492.0, 6868.4285714285725], [494.0, 9787.125], [489.0, 10444.5], [490.0, 12969.333333333334], [491.0, 11749.57142857143], [496.0, 10428.0], [497.0, 7057.714285714286], [498.0, 8988.666666666668], [499.0, 15116.75], [500.0, 18768.18390804598], [1.0, 648.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[386.74416078218366, 16620.931015752307]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 114193.0], [4.0, 72370.33333333333], [5.0, 1254.75], [6.0, 1222.0], [7.0, 1206.0], [8.0, 1240.8333333333335], [9.0, 1051.142857142857], [10.0, 24007.5], [11.0, 1239.4285714285713], [12.0, 1207.875], [13.0, 1076.6666666666667], [14.0, 1261.3846153846155], [15.0, 1230.4545454545455], [16.0, 1276.090909090909], [17.0, 16983.1], [18.0, 1323.3636363636363], [19.0, 23605.785714285717], [20.0, 15540.454545454546], [21.0, 11284.5], [22.0, 24092.357142857145], [23.0, 1695.3636363636363], [24.0, 1729.4], [25.0, 43220.46666666667], [26.0, 1817.5], [27.0, 1893.4285714285713], [28.0, 6089.0], [29.0, 6691.454545454546], [30.0, 6631.583333333333], [31.0, 7229.454545454546], [32.0, 6026.533333333333], [33.0, 6614.153846153846], [34.0, 5002.909090909091], [35.0, 2556.363636363636], [36.0, 2627.615384615385], [37.0, 5042.461538461538], [38.0, 7007.166666666667], [39.0, 6223.666666666667], [40.0, 7828.3], [41.0, 6469.214285714286], [42.0, 7732.09090909091], [43.0, 3077.5714285714284], [44.0, 6932.384615384615], [45.0, 3158.230769230769], [46.0, 7180.0], [47.0, 3296.6363636363635], [48.0, 7904.363636363636], [49.0, 7329.7692307692305], [50.0, 7804.583333333333], [51.0, 3703.333333333333], [52.0, 4051.75], [53.0, 8528.090909090908], [54.0, 7750.846153846153], [55.0, 8968.9], [56.0, 7486.571428571429], [57.0, 8215.0], [58.0, 4463.153846153846], [59.0, 4123.538461538462], [60.0, 4087.4166666666665], [61.0, 4051.2727272727275], [62.0, 4363.461538461538], [63.0, 4157.5], [64.0, 3924.733333333333], [65.0, 4262.571428571428], [66.0, 4272.833333333333], [67.0, 4279.727272727274], [68.0, 4339.153846153847], [69.0, 4440.133333333333], [70.0, 4480.333333333334], [71.0, 4583.181818181818], [72.0, 4375.666666666667], [73.0, 4805.124999999999], [74.0, 4926.416666666668], [75.0, 4829.599999999999], [76.0, 4944.142857142858], [77.0, 4913.0], [78.0, 4960.687499999999], [79.0, 5061.846153846153], [80.0, 5176.416666666667], [81.0, 5216.199999999999], [82.0, 42390.642857142855], [83.0, 7304.076923076922], [84.0, 5503.599999999999], [85.0, 8718.8], [86.0, 7489.866666666667], [87.0, 7935.692307692308], [88.0, 10334.0], [89.0, 7894.071428571429], [90.0, 8225.384615384615], [91.0, 6572.615384615384], [92.0, 10264.307692307693], [93.0, 9761.142857142857], [94.0, 8468.466666666667], [95.0, 7138.583333333334], [96.0, 6886.666666666667], [97.0, 6980.727272727272], [98.0, 7226.636363636363], [99.0, 6905.2307692307695], [100.0, 28028.4], [101.0, 6974.692307692308], [102.0, 6317.799999999999], [103.0, 6981.6923076923085], [104.0, 6962.2], [105.0, 6950.071428571429], [106.0, 7148.6], [107.0, 7124.777777777777], [108.0, 7305.923076923077], [109.0, 7435.666666666667], [110.0, 7414.5], [111.0, 7650.833333333334], [112.0, 7810.25], [113.0, 7760.0], [114.0, 8028.166666666667], [115.0, 8297.900000000001], [116.0, 8325.25], [117.0, 8503.0], [118.0, 9032.500000000002], [119.0, 9136.9], [120.0, 9576.583333333336], [121.0, 9544.375], [122.0, 9439.272727272728], [123.0, 9520.583333333336], [124.0, 9685.181818181818], [125.0, 9937.0], [126.0, 9973.416666666666], [127.0, 9337.111111111111], [128.0, 54508.357142857145], [129.0, 10768.090909090912], [130.0, 10348.57142857143], [131.0, 10279.785714285714], [132.0, 10068.533333333335], [133.0, 10496.454545454548], [134.0, 9623.333333333332], [135.0, 10074.625], [136.0, 10564.333333333334], [137.0, 10376.199999999997], [138.0, 10131.000000000002], [139.0, 10304.363636363636], [140.0, 10360.416666666668], [141.0, 10523.166666666668], [142.0, 10621.416666666668], [143.0, 9895.25], [144.0, 11243.083333333332], [145.0, 10158.900000000001], [146.0, 9556.266666666666], [147.0, 10356.636363636364], [148.0, 11475.727272727272], [149.0, 11382.916666666666], [150.0, 11650.266666666666], [151.0, 10595.714285714284], [152.0, 11555.666666666666], [153.0, 11767.615384615385], [154.0, 11406.583333333332], [155.0, 11206.466666666665], [156.0, 11292.562499999998], [157.0, 10590.90909090909], [158.0, 10395.066666666668], [159.0, 10452.222222222223], [160.0, 10391.454545454546], [161.0, 11222.375], [162.0, 10640.272727272728], [163.0, 11696.769230769232], [164.0, 10886.6], [165.0, 11956.900000000001], [166.0, 11094.5], [167.0, 12233.272727272726], [168.0, 12177.928571428572], [169.0, 12057.800000000001], [170.0, 11715.111111111111], [171.0, 11828.999999999998], [172.0, 12105.466666666665], [173.0, 12562.384615384615], [174.0, 11872.833333333334], [175.0, 12591.444444444445], [176.0, 12425.750000000002], [177.0, 12398.625], [178.0, 12614.642857142857], [179.0, 11412.083333333334], [180.0, 11384.57142857143], [181.0, 11351.69230769231], [182.0, 11323.6], [183.0, 12134.357142857141], [184.0, 11349.846153846154], [185.0, 12671.818181818182], [186.0, 11277.81818181818], [187.0, 10465.8125], [188.0, 11166.571428571428], [189.0, 11193.583333333336], [190.0, 11427.923076923078], [191.0, 12626.727272727272], [192.0, 11014.733333333334], [193.0, 10910.411764705883], [194.0, 10970.090909090908], [195.0, 13389.066666666668], [196.0, 9694.363636363638], [197.0, 10657.533333333333], [198.0, 12812.333333333334], [199.0, 13227.6], [200.0, 10587.818181818182], [201.0, 16251.07142857143], [202.0, 10502.076923076924], [203.0, 15499.1875], [204.0, 10526.500000000002], [205.0, 16331.599999999999], [206.0, 10563.636363636364], [207.0, 15503.3125], [208.0, 10452.307692307693], [209.0, 10771.937499999998], [210.0, 10928.142857142857], [211.0, 11259.166666666666], [212.0, 10577.785714285716], [213.0, 11139.454545454546], [214.0, 10838.153846153848], [215.0, 11680.545454545454], [216.0, 11122.833333333332], [217.0, 11298.307692307693], [218.0, 12075.727272727274], [219.0, 12087.846153846154], [220.0, 12528.3], [221.0, 13273.000000000002], [222.0, 11988.000000000002], [223.0, 11391.727272727274], [224.0, 12379.1], [225.0, 11817.214285714284], [226.0, 12031.0], [227.0, 15607.375000000004], [228.0, 12665.866666666667], [229.0, 13386.42857142857], [230.0, 11819.0], [231.0, 11224.230769230768], [232.0, 11172.76923076923], [233.0, 11172.6], [234.0, 11895.375], [235.0, 11100.5], [236.0, 11240.615384615387], [237.0, 11676.692307692307], [238.0, 11535.999999999998], [239.0, 11357.25], [240.0, 12584.666666666666], [241.0, 12344.066666666666], [242.0, 11390.714285714286], [243.0, 11811.916666666668], [244.0, 11632.615384615385], [245.0, 18512.5], [246.0, 11693.333333333334], [247.0, 12140.846153846154], [248.0, 12846.727272727272], [249.0, 12514.7], [250.0, 13457.111111111111], [251.0, 13066.583333333332], [252.0, 14054.90909090909], [253.0, 12916.3], [254.0, 13428.7], [255.0, 19260.3125], [257.0, 12737.142857142857], [256.0, 14447.666666666668], [258.0, 12828.5], [259.0, 12138.785714285717], [260.0, 12181.4], [261.0, 12081.999999999998], [262.0, 11785.733333333332], [263.0, 10974.09090909091], [264.0, 10341.066666666668], [270.0, 9591.875], [271.0, 13918.846153846154], [268.0, 28633.18181818182], [269.0, 11465.0], [265.0, 11119.23076923077], [266.0, 21096.333333333332], [267.0, 11212.416666666668], [273.0, 11669.666666666666], [272.0, 27350.666666666668], [274.0, 13956.8], [275.0, 11885.583333333332], [276.0, 17388.76923076923], [277.0, 54643.53846153846], [278.0, 11204.3125], [279.0, 12292.100000000002], [280.0, 11745.6], [286.0, 21135.8], [287.0, 10783.111111111111], [284.0, 13786.631578947368], [285.0, 11278.649999999998], [281.0, 10853.0], [282.0, 12329.916666666664], [283.0, 11980.0625], [289.0, 10247.27777777778], [288.0, 14587.0625], [290.0, 9822.842105263158], [291.0, 10588.7], [292.0, 13769.176470588236], [293.0, 10168.3125], [294.0, 11574.0], [295.0, 11235.0], [296.0, 14881.166666666666], [302.0, 22824.2], [303.0, 12198.428571428572], [300.0, 12051.90909090909], [301.0, 11682.0], [297.0, 9909.066666666668], [298.0, 13437.238095238095], [299.0, 11611.166666666668], [305.0, 14138.222222222223], [304.0, 12012.285714285716], [306.0, 12944.818181818182], [307.0, 12186.818181818184], [308.0, 12004.789473684212], [309.0, 17886.61111111111], [310.0, 11789.722222222223], [311.0, 11000.384615384615], [312.0, 12107.1], [318.0, 10459.263157894735], [319.0, 15160.521739130432], [316.0, 10893.428571428572], [317.0, 17328.5], [313.0, 17963.818181818187], [314.0, 11995.818181818182], [315.0, 10919.000000000002], [321.0, 16104.5], [320.0, 11047.349999999999], [322.0, 10635.538461538461], [323.0, 10674.375], [324.0, 11186.214285714284], [325.0, 10751.411764705881], [326.0, 9642.5625], [327.0, 20733.649999999998], [328.0, 12404.714285714286], [334.0, 10594.555555555555], [335.0, 10926.529411764704], [332.0, 10824.5625], [333.0, 21764.894736842107], [329.0, 10775.400000000001], [330.0, 10821.411764705881], [331.0, 10916.466666666664], [337.0, 14929.5], [336.0, 9509.190476190479], [338.0, 10190.5], [339.0, 9939.772727272726], [340.0, 11655.055555555555], [341.0, 10342.875000000002], [342.0, 9677.000000000002], [343.0, 11547.09090909091], [344.0, 10080.0], [350.0, 10704.86956521739], [351.0, 10778.687499999998], [348.0, 11317.941176470587], [349.0, 10720.4], [345.0, 10939.785714285714], [346.0, 10316.062500000002], [347.0, 10467.75], [353.0, 11336.699999999997], [352.0, 11727.235294117647], [354.0, 11495.6875], [355.0, 10348.166666666668], [356.0, 15320.416666666666], [357.0, 10504.64705882353], [358.0, 12254.526315789471], [359.0, 11416.8], [360.0, 10419.086956521738], [366.0, 10942.461538461539], [367.0, 9947.153846153846], [364.0, 10801.888888888889], [365.0, 10045.736842105263], [361.0, 9349.041666666666], [362.0, 9932.166666666664], [363.0, 10278.521739130432], [369.0, 10489.517241379313], [368.0, 8797.611111111111], [370.0, 10228.333333333338], [371.0, 10601.357142857141], [372.0, 10381.2], [373.0, 10827.625], [374.0, 11135.625], [375.0, 10247.136363636366], [376.0, 10516.77272727273], [382.0, 11606.76923076923], [383.0, 12284.368421052633], [380.0, 12223.785714285714], [381.0, 11432.95], [377.0, 10226.0], [378.0, 9828.800000000001], [379.0, 11715.375000000002], [385.0, 11520.681818181816], [384.0, 10460.333333333334], [386.0, 11503.454545454546], [387.0, 11696.89655172414], [388.0, 10699.25], [389.0, 10983.5], [390.0, 11603.062500000002], [391.0, 11833.64], [392.0, 11202.857142857143], [398.0, 10789.695652173914], [399.0, 10833.647058823528], [396.0, 11195.699999999999], [397.0, 10594.241379310346], [393.0, 10824.083333333332], [394.0, 11371.333333333334], [395.0, 11211.235294117647], [401.0, 11773.800000000003], [400.0, 10098.285714285714], [402.0, 10699.5], [403.0, 10817.705882352942], [404.0, 11894.388888888889], [405.0, 12840.461538461537], [406.0, 11017.083333333332], [407.0, 10189.0], [408.0, 11488.666666666666], [414.0, 11255.0], [415.0, 10103.36842105263], [412.0, 11070.125], [413.0, 10619.368421052633], [409.0, 10913.52380952381], [410.0, 10144.468749999998], [411.0, 11275.750000000004], [417.0, 11036.285714285716], [416.0, 10700.555555555555], [418.0, 9636.842105263158], [419.0, 12307.31818181818], [420.0, 11911.650000000003], [421.0, 10732.214285714286], [422.0, 10774.947368421052], [423.0, 10799.333333333332], [424.0, 11122.88235294118], [430.0, 10559.312499999998], [431.0, 28363.75], [428.0, 10420.882352941177], [429.0, 12052.541666666666], [425.0, 11801.29411764706], [426.0, 11049.15], [427.0, 10852.857142857145], [433.0, 15147.476190476189], [432.0, 11660.714285714284], [434.0, 10884.523809523811], [435.0, 10908.409090909092], [436.0, 11011.315789473687], [437.0, 11495.559999999998], [438.0, 14383.59259259259], [439.0, 13454.913043478264], [440.0, 10013.888888888887], [446.0, 9460.18918918919], [447.0, 11175.15384615385], [444.0, 9491.050000000001], [445.0, 10626.083333333332], [441.0, 11026.416666666666], [442.0, 10941.533333333333], [443.0, 11970.44], [449.0, 11643.333333333332], [448.0, 11180.23076923077], [450.0, 50209.875], [451.0, 11131.833333333332], [452.0, 9914.29411764706], [453.0, 11646.142857142857], [454.0, 10363.2], [455.0, 9878.125], [456.0, 10490.0], [462.0, 9710.47619047619], [463.0, 9873.611111111111], [460.0, 10617.27272727273], [461.0, 9882.699999999999], [457.0, 10637.75], [458.0, 11006.95652173913], [459.0, 10869.357142857145], [465.0, 10196.125], [464.0, 9449.444444444442], [466.0, 10097.70588235294], [467.0, 9641.208333333334], [468.0, 28652.264705882357], [469.0, 11602.478260869566], [470.0, 11268.4375], [471.0, 11526.75], [472.0, 11395.833333333334], [478.0, 10591.814814814814], [479.0, 12020.157894736843], [476.0, 10299.617647058823], [477.0, 11045.631578947367], [473.0, 11721.5], [474.0, 11738.684210526317], [475.0, 10970.75], [481.0, 29906.037037037036], [480.0, 11757.5625], [482.0, 9856.916666666668], [483.0, 9891.545454545456], [484.0, 10422.210526315788], [485.0, 9703.81081081081], [486.0, 9549.857142857141], [487.0, 11226.52], [488.0, 9122.625], [494.0, 8324.13888888889], [495.0, 9935.48148148148], [492.0, 9885.099999999999], [493.0, 10491.846153846152], [489.0, 11407.925925925925], [490.0, 10465.090909090908], [491.0, 9798.100000000002], [496.0, 10883.09090909091], [497.0, 9592.624999999998], [498.0, 10863.235294117647], [499.0, 11134.466666666667], [500.0, 13518.855698529425]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[331.5247233221655, 11896.493958777543]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 33.0], [3.0, 35.0], [4.0, 35.0], [5.0, 105098.0], [6.0, 22.0], [7.0, 29.0], [8.0, 28.0], [9.0, 30.0], [10.0, 76810.66666666667], [11.0, 21.0], [12.0, 21.0], [13.0, 27.0], [14.0, 27.0], [15.0, 728.0], [16.0, 78733.0], [17.0, 100.0], [18.0, 90.0], [19.0, 167.0], [20.0, 94.0], [21.0, 203.0], [22.0, 79024.5], [23.0, 756.0], [24.0, 810.0], [25.0, 456.0], [26.0, 567.0], [27.0, 105761.0], [28.0, 932.0], [30.0, 1277.0], [31.0, 1266.0], [32.0, 1246.0], [33.0, 1329.0], [34.0, 1352.0], [35.0, 27422.5], [36.0, 1398.0], [37.0, 1468.0], [38.0, 1601.0], [39.0, 1556.0], [40.0, 1669.0], [41.0, 1949.0], [42.0, 1707.0], [43.0, 28379.5], [44.0, 1802.0], [46.0, 2012.0], [47.0, 2052.0], [48.0, 2076.0], [49.0, 2246.0], [50.0, 2425.0], [51.0, 2626.0], [52.0, 2793.0], [53.0, 2719.0], [54.0, 2946.0], [56.0, 3004.5], [58.0, 19689.0], [59.0, 2808.0], [60.0, 2808.0], [61.0, 53328.0], [62.0, 3047.0], [63.0, 28188.0], [64.0, 19843.0], [65.0, 28265.0], [67.0, 28229.0], [66.0, 53288.0], [68.0, 3385.0], [69.0, 3527.0], [70.0, 3390.0], [71.0, 28323.5], [72.0, 28518.0], [73.0, 3759.0], [74.0, 3686.0], [75.0, 3806.0], [76.0, 3965.0], [78.0, 4163.0], [79.0, 4052.5], [81.0, 4050.0], [83.0, 4142.0], [82.0, 137214.0], [84.0, 4494.0], [85.0, 4485.0], [86.0, 4919.0], [88.0, 4997.0], [89.0, 5202.0], [90.0, 5574.5], [91.0, 5635.0], [92.0, 5904.0], [94.0, 5674.0], [95.0, 5416.0], [96.0, 5662.0], [97.0, 5875.0], [98.0, 5864.0], [99.0, 5384.0], [100.0, 59191.0], [101.0, 17676.0], [102.0, 17734.5], [103.0, 13559.666666666668], [104.0, 5577.0], [105.0, 5838.0], [107.0, 16713.5], [106.0, 26400.0], [108.0, 6261.0], [109.0, 17850.5], [110.0, 6486.0], [111.0, 6802.0], [113.0, 7069.0], [114.0, 7022.5], [116.0, 7191.0], [118.0, 8010.5], [120.0, 8162.0], [122.0, 8127.0], [123.0, 8495.0], [124.0, 8516.0], [125.0, 8172.5], [126.0, 7967.0], [127.0, 7989.0], [128.0, 126151.8], [129.0, 7592.0], [130.0, 7560.0], [131.0, 7550.0], [132.0, 7530.0], [133.0, 7782.0], [135.0, 7919.0], [137.0, 7977.5], [139.0, 8048.0], [140.0, 8268.0], [141.0, 8666.0], [142.0, 8638.0], [143.0, 18096.5], [145.0, 18172.0], [146.0, 9142.0], [147.0, 18364.0], [148.0, 9499.0], [149.0, 9391.0], [150.0, 9314.0], [151.0, 9441.0], [152.0, 9586.0], [153.0, 9252.0], [154.0, 9331.0], [157.0, 9594.0], [158.0, 13736.0], [159.0, 18273.0], [160.0, 18264.0], [170.0, 15456.0], [171.0, 16367.0], [174.0, 10987.0], [172.0, 19011.0], [177.0, 11123.0], [183.0, 10565.0], [190.0, 17152.5], [188.0, 19177.0], [187.0, 19192.0], [186.0, 19193.0], [184.0, 19210.0], [195.0, 11050.0], [197.0, 18449.5], [194.0, 21168.0], [193.0, 21182.0], [204.0, 9740.0], [206.0, 16026.5], [207.0, 22296.0], [202.0, 19558.0], [211.0, 9315.0], [215.0, 24163.5], [212.0, 21054.0], [208.0, 19302.0], [216.0, 14093.5], [217.0, 17271.5], [221.0, 11075.0], [225.0, 14075.0], [227.0, 66797.0], [228.0, 10920.5], [229.0, 26438.0], [231.0, 89566.0], [224.0, 49098.0], [232.0, 10710.0], [234.0, 13302.0], [236.0, 13348.0], [237.0, 11713.0], [239.0, 10749.0], [233.0, 89534.0], [240.0, 10810.0], [241.0, 10783.0], [243.0, 21212.0], [245.0, 13309.0], [247.0, 13869.0], [246.0, 16792.0], [242.0, 15185.0], [249.0, 13398.0], [251.0, 48454.0], [252.0, 10470.0], [253.0, 37713.25], [254.0, 15049.0], [255.0, 58965.5], [268.0, 80095.0], [257.0, 106354.5], [259.0, 60793.75], [260.0, 12229.5], [261.0, 71915.8], [263.0, 51052.0], [256.0, 16065.0], [265.0, 26367.0], [266.0, 52017.5], [267.0, 13205.5], [269.0, 13374.0], [270.0, 25595.0], [271.0, 18560.0], [273.0, 13726.0], [272.0, 68569.0], [274.0, 59867.5], [284.0, 34651.666666666664], [285.0, 11324.333333333334], [286.0, 41754.166666666664], [287.0, 1.0], [276.0, 59824.75], [277.0, 60778.625], [278.0, 39875.75], [279.0, 7236.666666666667], [280.0, 59878.0], [281.0, 9406.0], [282.0, 59373.5], [283.0, 10597.5], [289.0, 11950.833333333334], [288.0, 37765.11111111111], [290.0, 18177.6], [300.0, 22115.0], [301.0, 10903.5], [302.0, 58338.0], [303.0, 11430.0], [292.0, 83789.5], [293.0, 12279.0], [294.0, 60420.0], [295.0, 12551.75], [296.0, 60037.0], [297.0, 13278.0], [298.0, 15012.125], [299.0, 9731.0], [305.0, 13308.0], [304.0, 15562.6], [306.0, 13312.0], [307.0, 35862.846153846156], [308.0, 6602.125], [309.0, 36106.5], [310.0, 10331.333333333334], [311.0, 31071.8], [312.0, 10901.0], [318.0, 11290.125], [319.0, 25649.071428571428], [316.0, 14335.0], [317.0, 24389.153846153848], [313.0, 12724.8], [314.0, 13141.166666666668], [315.0, 13306.25], [321.0, 17220.0], [320.0, 11322.6], [323.0, 13055.5], [332.0, 8447.2], [333.0, 28569.6], [334.0, 13056.2], [335.0, 10388.5], [324.0, 11033.0], [325.0, 1.0], [326.0, 11098.833333333334], [327.0, 30899.25], [328.0, 14814.333333333334], [329.0, 10615.25], [330.0, 12143.6], [331.0, 31201.666666666668], [337.0, 14383.333333333334], [336.0, 10174.5], [338.0, 11736.0], [339.0, 8960.888888888889], [340.0, 13312.285714285714], [341.0, 9607.0], [342.0, 9585.833333333334], [343.0, 12927.785714285716], [344.0, 11294.0], [351.0, 12735.333333333334], [349.0, 9469.0], [350.0, 9762.6], [346.0, 5632.0], [347.0, 13311.0], [353.0, 12736.0], [352.0, 12191.5], [354.0, 9743.0], [355.0, 8060.714285714285], [356.0, 12850.6], [357.0, 12935.000000000002], [358.0, 8960.25], [359.0, 11584.1], [360.0, 9483.5], [367.0, 9984.0], [365.0, 6708.333333333334], [364.0, 13315.0], [366.0, 11761.0], [361.0, 7749.416666666665], [362.0, 8313.833333333334], [363.0, 9629.083333333332], [371.0, 0.0], [369.0, 8538.600000000002], [368.0, 6033.333333333334], [370.0, 9725.8], [374.0, 10527.25], [375.0, 7423.857142857143], [376.0, 11015.545454545454], [383.0, 9979.4], [380.0, 13788.0], [381.0, 11532.6], [377.0, 9875.999999999998], [378.0, 10566.0], [379.0, 6740.249999999999], [385.0, 9343.25], [384.0, 6948.0], [387.0, 10369.5], [396.0, 10334.0], [397.0, 9859.583333333332], [398.0, 10724.1], [399.0, 13870.666666666666], [388.0, 13289.714285714284], [389.0, 12133.6], [390.0, 10738.833333333332], [391.0, 14063.2], [392.0, 9966.666666666666], [394.0, 12314.0], [393.0, 13313.0], [395.0, 10738.333333333334], [403.0, 10758.0], [401.0, 10300.466666666667], [400.0, 11562.5], [402.0, 8288.583333333332], [404.0, 13183.5], [405.0, 12675.25], [408.0, 12009.0], [413.0, 11734.0], [415.0, 14336.0], [409.0, 10918.0], [410.0, 10981.333333333334], [411.0, 11825.999999999998], [417.0, 11022.5], [416.0, 12413.0], [418.0, 7423.428571428571], [419.0, 15458.0], [420.0, 0.0], [421.0, 11771.5], [422.0, 13338.2], [423.0, 12783.0], [424.0, 13312.0], [430.0, 10607.666666666666], [431.0, 70107.66666666667], [428.0, 9239.285714285714], [429.0, 15155.4], [425.0, 12763.333333333334], [426.0, 10308.5], [427.0, 7548.0], [433.0, 7943.0], [432.0, 10855.333333333334], [434.0, 7167.75], [435.0, 9933.8], [436.0, 10037.5], [437.0, 12401.375], [438.0, 12059.333333333334], [439.0, 15745.818181818182], [440.0, 0.0], [447.0, 11001.555555555555], [444.0, 10137.900000000001], [446.0, 6072.0], [441.0, 10404.0], [443.0, 9954.555555555555], [449.0, 10364.6], [448.0, 20254.083333333332], [450.0, 83342.36363636365], [451.0, 12056.75], [452.0, 9313.5], [453.0, 13636.0], [454.0, 9849.125], [455.0, 8447.666666666666], [456.0, 6565.25], [462.0, 8953.571428571428], [463.0, 8831.75], [460.0, 36741.53846153846], [461.0, 7680.0], [457.0, 10350.75], [458.0, 12090.166666666666], [459.0, 11858.916666666666], [466.0, 11439.307692307691], [464.0, 9216.0], [467.0, 10689.333333333334], [476.0, 9366.083333333334], [477.0, 8468.5], [478.0, 9863.727272727272], [479.0, 8397.09090909091], [468.0, 20950.57142857143], [469.0, 12804.5], [470.0, 13322.0], [471.0, 11093.333333333334], [473.0, 13824.5], [474.0, 11249.124999999998], [475.0, 13280.25], [482.0, 9151.615384615387], [481.0, 53759.0], [483.0, 9573.6], [492.0, 9963.5], [493.0, 10049.0], [494.0, 8014.666666666667], [495.0, 10634.111111111111], [484.0, 11546.666666666666], [485.0, 7822.9], [486.0, 10747.75], [487.0, 13835.0], [488.0, 7680.0], [489.0, 53132.57142857143], [490.0, 12458.0], [491.0, 4096.0], [497.0, 9154.833333333334], [498.0, 14758.0], [499.0, 13571.333333333332], [500.0, 19655.954545454544], [1.0, 97.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[382.23925427239834, 17948.07871569137]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20.116666666666667, "minX": 1.53939108E12, "maxY": 1088318.0833333333, "series": [{"data": [[1.53939144E12, 1058476.6], [1.53939114E12, 1049242.3666666667], [1.53939162E12, 1079688.6], [1.5393915E12, 1048862.5666666667], [1.53939132E12, 1008666.65], [1.53939168E12, 423783.1666666667], [1.53939138E12, 1018652.45], [1.5393912E12, 1016904.2333333333], [1.53939156E12, 1059500.4166666667], [1.53939126E12, 1088318.0833333333], [1.53939174E12, 27.5], [1.53939108E12, 809559.8666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939144E12, 6837.433333333333], [1.53939114E12, 3661.5], [1.53939162E12, 8119.016666666666], [1.5393915E12, 7423.866666666667], [1.53939132E12, 4081.4666666666667], [1.53939168E12, 2227.4333333333334], [1.53939138E12, 6562.416666666667], [1.5393912E12, 3476.5333333333333], [1.53939156E12, 7589.383333333333], [1.53939126E12, 3437.5666666666666], [1.53939174E12, 20.116666666666667], [1.53939108E12, 2931.6833333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939174E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1065.3148148148148, "minX": 1.53939108E12, "maxY": 227060.0, "series": [{"data": [[1.53939144E12, 10590.093283582086], [1.53939114E12, 5410.226415094339], [1.53939162E12, 19835.559748427673], [1.5393915E12, 17291.942122186498], [1.53939132E12, 15298.247058823532], [1.53939168E12, 56236.10752688173], [1.53939138E12, 12161.851590106007], [1.5393912E12, 9683.42222222222], [1.53939156E12, 14713.272151898731], [1.53939126E12, 11005.8125], [1.53939174E12, 227060.0], [1.53939108E12, 1985.7058823529412]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939144E12, 10794.726708074524], [1.53939114E12, 5856.460055096419], [1.53939162E12, 13857.079912023466], [1.5393915E12, 12774.22883487007], [1.53939132E12, 13048.805447470815], [1.53939168E12, 29793.730245231607], [1.53939138E12, 12380.726396917154], [1.5393912E12, 10188.914893617026], [1.53939156E12, 12395.651050080767], [1.53939126E12, 11176.892857142873], [1.53939174E12, 220794.0], [1.53939108E12, 2391.402135231316]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939144E12, 10084.870175438591], [1.53939114E12, 4791.0350877193], [1.53939162E12, 20637.681818181823], [1.5393915E12, 15797.755287009066], [1.53939132E12, 38861.61599999999], [1.53939168E12, 44165.65591397849], [1.53939138E12, 16318.440273037551], [1.5393912E12, 8723.095238095237], [1.53939156E12, 16054.6593059937], [1.53939126E12, 18208.079999999998], [1.53939174E12, 210163.0], [1.53939108E12, 1065.3148148148148]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939174E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1065.2592592592594, "minX": 1.53939108E12, "maxY": 227060.0, "series": [{"data": [[1.53939144E12, 10590.08208955224], [1.53939114E12, 5410.226415094339], [1.53939162E12, 19835.559748427673], [1.5393915E12, 17291.932475884256], [1.53939132E12, 15298.247058823532], [1.53939168E12, 56236.10752688173], [1.53939138E12, 12161.840989399294], [1.5393912E12, 9683.42222222222], [1.53939156E12, 14713.265822784813], [1.53939126E12, 11005.8125], [1.53939174E12, 227060.0], [1.53939108E12, 1985.7058823529412]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939144E12, 10794.33806566105], [1.53939114E12, 5855.966942148759], [1.53939162E12, 13856.804252199427], [1.5393915E12, 12773.821458507953], [1.53939132E12, 13048.33852140079], [1.53939168E12, 29793.28610354223], [1.53939138E12, 12380.356454720612], [1.5393912E12, 10188.397163120564], [1.53939156E12, 12395.368336025833], [1.53939126E12, 11176.437830687828], [1.53939174E12, 220794.0], [1.53939108E12, 2390.959074733095]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939144E12, 10084.866666666674], [1.53939114E12, 4791.01754385965], [1.53939162E12, 20637.675324675325], [1.5393915E12, 15797.755287009066], [1.53939132E12, 38861.60799999999], [1.53939168E12, 44165.65591397849], [1.53939138E12, 16318.41979522184], [1.5393912E12, 8723.095238095237], [1.53939156E12, 16054.640378548896], [1.53939126E12, 18208.079999999998], [1.53939174E12, 210163.0], [1.53939108E12, 1065.2592592592594]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939174E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53939108E12, "maxY": 1.9814814814814816, "series": [{"data": [[1.53939144E12, 0.47388059701492513], [1.53939114E12, 0.7924528301886791], [1.53939162E12, 0.3836477987421385], [1.5393915E12, 0.41157556270096474], [1.53939132E12, 0.8117647058823529], [1.53939168E12, 0.4086021505376345], [1.53939138E12, 0.5477031802120138], [1.5393912E12, 0.711111111111111], [1.53939156E12, 0.7341772151898739], [1.53939126E12, 0.6875], [1.53939174E12, 0.0], [1.53939108E12, 0.17647058823529413]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939144E12, 0.44454303460514644], [1.53939114E12, 0.5716253443526175], [1.53939162E12, 0.4127565982404693], [1.5393915E12, 0.4073763621123224], [1.53939132E12, 0.49935149156939035], [1.53939168E12, 0.36784741144414157], [1.53939138E12, 0.47976878612716783], [1.5393912E12, 0.5418439716312057], [1.53939156E12, 0.4733441033925691], [1.53939126E12, 0.5978835978835977], [1.53939174E12, 1.0], [1.53939108E12, 0.5925266903914587]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939144E12, 0.45964912280701753], [1.53939114E12, 0.9122807017543859], [1.53939162E12, 0.40584415584415595], [1.5393915E12, 0.4320241691842899], [1.53939132E12, 0.728], [1.53939168E12, 0.35483870967741926], [1.53939138E12, 0.4948805460750851], [1.5393912E12, 1.119047619047619], [1.53939156E12, 0.548895899053628], [1.53939126E12, 0.6799999999999999], [1.53939174E12, 0.0], [1.53939108E12, 1.9814814814814816]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939174E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.53939108E12, "maxY": 90986.0, "series": [{"data": [[1.53939144E12, 18576.0], [1.53939114E12, 10824.0], [1.53939162E12, 29527.0], [1.5393915E12, 17130.0], [1.53939132E12, 54179.0], [1.53939168E12, 90986.0], [1.53939138E12, 23082.0], [1.5393912E12, 15290.0], [1.53939156E12, 18081.0], [1.53939126E12, 64456.0], [1.53939108E12, 7154.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939144E12, 9224.0], [1.53939114E12, 2622.0], [1.53939162E12, 9202.0], [1.5393915E12, 9108.0], [1.53939132E12, 9137.0], [1.53939168E12, 10782.0], [1.53939138E12, 8840.0], [1.5393912E12, 7530.0], [1.53939156E12, 9327.0], [1.53939126E12, 9315.0], [1.53939108E12, 21.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939144E12, 11899.3], [1.53939114E12, 7139.4], [1.53939162E12, 11916.0], [1.5393915E12, 11918.2], [1.53939132E12, 11812.1], [1.53939168E12, 12075.800000000001], [1.53939138E12, 11907.400000000001], [1.5393912E12, 10664.0], [1.53939156E12, 11897.0], [1.53939126E12, 11448.0], [1.53939108E12, 3725.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939144E12, 14679.329999999993], [1.53939114E12, 8479.559999999998], [1.53939162E12, 15016.369999999999], [1.5393915E12, 14699.529999999973], [1.53939132E12, 13581.409999999993], [1.53939168E12, 24624.429999999847], [1.53939138E12, 14407.94000000001], [1.5393912E12, 12107.57], [1.53939156E12, 14791.059999999996], [1.53939126E12, 12218.8], [1.53939108E12, 4439.289999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939144E12, 12324.3], [1.53939114E12, 7606.799999999999], [1.53939162E12, 12298.55], [1.5393915E12, 12310.65], [1.53939132E12, 12178.0], [1.53939168E12, 12647.05], [1.53939138E12, 12344.9], [1.5393912E12, 11472.649999999998], [1.53939156E12, 12287.4], [1.53939126E12, 11749.75], [1.53939108E12, 3917.7999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939168E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 227060.0, "series": [{"data": [[16.0, 11492.0], [33.0, 11063.0], [9.0, 12543.0], [11.0, 2326.5], [13.0, 10000.5], [26.0, 11170.0], [28.0, 10917.0], [30.0, 10856.0], [31.0, 11007.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13312.0], [33.0, 11776.0], [0.0, 227060.0], [9.0, 20041.0], [11.0, 2.0], [13.0, 2.0], [26.0, 12287.0], [28.0, 10751.0], [30.0, 11265.0], [31.0, 12039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 227060.0, "series": [{"data": [[16.0, 11492.0], [33.0, 11063.0], [9.0, 12542.5], [11.0, 2326.0], [13.0, 10000.5], [26.0, 11169.0], [28.0, 10917.0], [30.0, 10856.0], [31.0, 11007.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 13312.0], [33.0, 11776.0], [0.0, 227060.0], [9.0, 20041.0], [11.0, 2.0], [13.0, 2.0], [26.0, 12287.0], [28.0, 10751.0], [30.0, 11265.0], [31.0, 12039.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.9666666666666667, "minX": 1.53939108E12, "maxY": 33.166666666666664, "series": [{"data": [[1.53939144E12, 29.0], [1.53939114E12, 14.933333333333334], [1.53939162E12, 33.166666666666664], [1.5393915E12, 31.583333333333332], [1.53939132E12, 17.35], [1.53939168E12, 0.9666666666666667], [1.53939138E12, 27.9], [1.5393912E12, 14.2], [1.53939156E12, 31.566666666666666], [1.53939126E12, 14.283333333333333], [1.53939108E12, 12.066666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939168E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939108E12, "maxY": 19.983333333333334, "series": [{"data": [[1.53939144E12, 12.616666666666667], [1.53939114E12, 13.0], [1.53939162E12, 12.716666666666667], [1.5393915E12, 12.55], [1.53939132E12, 12.0], [1.53939168E12, 5.7], [1.53939138E12, 12.266666666666667], [1.5393912E12, 12.4], [1.53939156E12, 12.6], [1.53939126E12, 12.816666666666666], [1.53939108E12, 10.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939144E12, 0.4666666666666667], [1.53939114E12, 0.85], [1.53939162E12, 0.3333333333333333], [1.5393915E12, 0.45], [1.53939132E12, 0.4], [1.53939138E12, 0.6166666666666667], [1.5393912E12, 0.75], [1.53939156E12, 0.38333333333333336], [1.53939126E12, 0.25], [1.53939108E12, 0.85]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939144E12, 14.766666666666667], [1.53939114E12, 0.08333333333333333], [1.53939162E12, 19.983333333333334], [1.5393915E12, 17.4], [1.53939132E12, 3.816666666666667], [1.53939168E12, 2.75], [1.53939138E12, 13.85], [1.5393912E12, 0.05], [1.53939156E12, 17.95], [1.53939126E12, 0.2], [1.53939174E12, 0.08333333333333333], [1.53939108E12, 0.11666666666666667]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939144E12, 0.15], [1.53939162E12, 0.13333333333333333], [1.5393915E12, 0.18333333333333332], [1.53939132E12, 0.13333333333333333], [1.53939168E12, 0.7666666666666667], [1.53939138E12, 0.16666666666666666], [1.53939156E12, 0.25], [1.53939126E12, 0.016666666666666666]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939174E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939108E12, "maxY": 12.516666666666667, "series": [{"data": [[1.53939144E12, 0.4666666666666667], [1.53939114E12, 0.95], [1.53939162E12, 0.2833333333333333], [1.5393915E12, 0.5], [1.53939132E12, 0.4166666666666667], [1.53939168E12, 0.8833333333333333], [1.53939138E12, 0.6], [1.5393912E12, 0.7], [1.53939156E12, 0.4], [1.53939126E12, 0.3], [1.53939108E12, 0.9]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939144E12, 0.4666666666666667], [1.53939114E12, 0.85], [1.53939162E12, 0.3333333333333333], [1.5393915E12, 0.45], [1.53939132E12, 0.4], [1.53939138E12, 0.6166666666666667], [1.5393912E12, 0.75], [1.53939156E12, 0.38333333333333336], [1.53939126E12, 0.25], [1.53939108E12, 0.85]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939144E12, 4.283333333333333], [1.53939162E12, 4.85], [1.5393915E12, 5.016666666666667], [1.53939132E12, 1.6666666666666667], [1.53939168E12, 0.6666666666666666], [1.53939138E12, 4.283333333333333], [1.53939156E12, 4.883333333333334], [1.53939126E12, 0.11666666666666667], [1.53939174E12, 0.016666666666666666]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939144E12, 6.633333333333334], [1.53939114E12, 0.05], [1.53939162E12, 10.3], [1.5393915E12, 7.833333333333333], [1.53939132E12, 1.2666666666666666], [1.53939168E12, 1.3], [1.53939138E12, 5.633333333333334], [1.5393912E12, 0.05], [1.53939156E12, 8.433333333333334], [1.53939126E12, 0.08333333333333333], [1.53939174E12, 0.03333333333333333], [1.53939108E12, 0.11666666666666667]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.53939144E12, 4.0], [1.53939114E12, 0.03333333333333333], [1.53939162E12, 4.966666666666667], [1.5393915E12, 4.733333333333333], [1.53939132E12, 1.0166666666666666], [1.53939168E12, 1.55], [1.53939138E12, 4.1], [1.53939156E12, 4.883333333333334], [1.53939126E12, 0.016666666666666666], [1.53939174E12, 0.03333333333333333]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53939144E12, 12.15], [1.53939114E12, 12.05], [1.53939162E12, 12.433333333333334], [1.5393915E12, 12.05], [1.53939132E12, 11.583333333333334], [1.53939168E12, 4.816666666666666], [1.53939138E12, 11.666666666666666], [1.5393912E12, 11.7], [1.53939156E12, 12.2], [1.53939126E12, 12.516666666666667], [1.53939108E12, 9.25]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939174E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
