/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 229116.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 30.0], [7.8, 595.0], [7.9, 646.0], [8.0, 702.0], [8.1, 726.0], [8.2, 810.0], [8.3, 895.0], [8.4, 1129.0], [8.5, 1310.0], [8.6, 1325.0], [8.7, 1333.0], [8.8, 1349.0], [8.9, 1535.0], [9.0, 1616.0], [9.1, 2074.0], [9.2, 2169.0], [9.3, 2273.0], [9.4, 2411.0], [9.5, 2506.0], [9.6, 2593.0], [9.7, 2808.0], [9.8, 3061.0], [9.9, 3173.0], [10.0, 3335.0], [10.1, 3415.0], [10.2, 3481.0], [10.3, 3598.0], [10.4, 3633.0], [10.5, 3733.0], [10.6, 3881.0], [10.7, 3892.0], [10.8, 3984.0], [10.9, 4080.0], [11.0, 4181.0], [11.1, 4448.0], [11.2, 4621.0], [11.3, 4828.0], [11.4, 5120.0], [11.5, 5158.0], [11.6, 5314.0], [11.7, 5609.0], [11.8, 5694.0], [11.9, 5716.0], [12.0, 6058.0], [12.1, 6191.0], [12.2, 6269.0], [12.3, 6320.0], [12.4, 6608.0], [12.5, 6863.0], [12.6, 7166.0], [12.7, 7166.0], [12.8, 7167.0], [12.9, 7167.0], [13.0, 7167.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7168.0], [13.5, 7168.0], [13.6, 7168.0], [13.7, 7168.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7169.0], [14.2, 7171.0], [14.3, 7218.0], [14.4, 7418.0], [14.5, 7419.0], [14.6, 7419.0], [14.7, 7422.0], [14.8, 7422.0], [14.9, 7422.0], [15.0, 7422.0], [15.1, 7422.0], [15.2, 7423.0], [15.3, 7423.0], [15.4, 7423.0], [15.5, 7423.0], [15.6, 7423.0], [15.7, 7423.0], [15.8, 7423.0], [15.9, 7423.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7423.0], [16.4, 7423.0], [16.5, 7423.0], [16.6, 7424.0], [16.7, 7424.0], [16.8, 7424.0], [16.9, 7424.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7425.0], [17.5, 7427.0], [17.6, 7427.0], [17.7, 7430.0], [17.8, 7675.0], [17.9, 7678.0], [18.0, 7679.0], [18.1, 7679.0], [18.2, 7679.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7679.0], [18.9, 7679.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7682.0], [19.5, 7683.0], [19.6, 7683.0], [19.7, 7683.0], [19.8, 7683.0], [19.9, 7683.0], [20.0, 7685.0], [20.1, 7704.0], [20.2, 7879.0], [20.3, 7932.0], [20.4, 7934.0], [20.5, 7934.0], [20.6, 7935.0], [20.7, 7935.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7935.0], [21.2, 7935.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7935.0], [21.6, 7935.0], [21.7, 7935.0], [21.8, 7935.0], [21.9, 7935.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7937.0], [23.4, 7937.0], [23.5, 7940.0], [23.6, 7984.0], [23.7, 7993.0], [23.8, 8058.0], [23.9, 8162.0], [24.0, 8186.0], [24.1, 8187.0], [24.2, 8187.0], [24.3, 8188.0], [24.4, 8190.0], [24.5, 8190.0], [24.6, 8190.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8191.0], [25.1, 8191.0], [25.2, 8191.0], [25.3, 8192.0], [25.4, 8192.0], [25.5, 8192.0], [25.6, 8192.0], [25.7, 8192.0], [25.8, 8192.0], [25.9, 8193.0], [26.0, 8193.0], [26.1, 8195.0], [26.2, 8221.0], [26.3, 8284.0], [26.4, 8446.0], [26.5, 8447.0], [26.6, 8480.0], [26.7, 8582.0], [26.8, 8585.0], [26.9, 8643.0], [27.0, 8699.0], [27.1, 8702.0], [27.2, 8702.0], [27.3, 8703.0], [27.4, 8703.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8703.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8707.0], [29.1, 8709.0], [29.2, 8749.0], [29.3, 8773.0], [29.4, 8820.0], [29.5, 8956.0], [29.6, 8958.0], [29.7, 8959.0], [29.8, 8959.0], [29.9, 8959.0], [30.0, 8959.0], [30.1, 8960.0], [30.2, 8960.0], [30.3, 8960.0], [30.4, 8960.0], [30.5, 8960.0], [30.6, 8961.0], [30.7, 9087.0], [30.8, 9213.0], [30.9, 9214.0], [31.0, 9215.0], [31.1, 9215.0], [31.2, 9215.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9215.0], [31.6, 9215.0], [31.7, 9215.0], [31.8, 9215.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9216.0], [33.0, 9217.0], [33.1, 9333.0], [33.2, 9358.0], [33.3, 9396.0], [33.4, 9439.0], [33.5, 9472.0], [33.6, 9483.0], [33.7, 9513.0], [33.8, 9527.0], [33.9, 9539.0], [34.0, 9594.0], [34.1, 9622.0], [34.2, 9643.0], [34.3, 9717.0], [34.4, 9724.0], [34.5, 9725.0], [34.6, 9726.0], [34.7, 9727.0], [34.8, 9727.0], [34.9, 9727.0], [35.0, 9727.0], [35.1, 9727.0], [35.2, 9727.0], [35.3, 9727.0], [35.4, 9727.0], [35.5, 9728.0], [35.6, 9728.0], [35.7, 9728.0], [35.8, 9728.0], [35.9, 9728.0], [36.0, 9728.0], [36.1, 9746.0], [36.2, 9765.0], [36.3, 9775.0], [36.4, 9781.0], [36.5, 9822.0], [36.6, 9836.0], [36.7, 9846.0], [36.8, 9885.0], [36.9, 9922.0], [37.0, 9982.0], [37.1, 9983.0], [37.2, 9983.0], [37.3, 9983.0], [37.4, 9983.0], [37.5, 9983.0], [37.6, 9984.0], [37.7, 9984.0], [37.8, 9984.0], [37.9, 9985.0], [38.0, 9987.0], [38.1, 9987.0], [38.2, 9988.0], [38.3, 10007.0], [38.4, 10034.0], [38.5, 10081.0], [38.6, 10118.0], [38.7, 10129.0], [38.8, 10158.0], [38.9, 10163.0], [39.0, 10211.0], [39.1, 10222.0], [39.2, 10234.0], [39.3, 10237.0], [39.4, 10238.0], [39.5, 10238.0], [39.6, 10238.0], [39.7, 10238.0], [39.8, 10238.0], [39.9, 10239.0], [40.0, 10239.0], [40.1, 10239.0], [40.2, 10240.0], [40.3, 10240.0], [40.4, 10240.0], [40.5, 10240.0], [40.6, 10240.0], [40.7, 10240.0], [40.8, 10256.0], [40.9, 10266.0], [41.0, 10286.0], [41.1, 10318.0], [41.2, 10333.0], [41.3, 10335.0], [41.4, 10351.0], [41.5, 10356.0], [41.6, 10371.0], [41.7, 10386.0], [41.8, 10397.0], [41.9, 10420.0], [42.0, 10434.0], [42.1, 10493.0], [42.2, 10495.0], [42.3, 10495.0], [42.4, 10496.0], [42.5, 10496.0], [42.6, 10501.0], [42.7, 10550.0], [42.8, 10555.0], [42.9, 10566.0], [43.0, 10586.0], [43.1, 10622.0], [43.2, 10629.0], [43.3, 10646.0], [43.4, 10664.0], [43.5, 10682.0], [43.6, 10685.0], [43.7, 10712.0], [43.8, 10730.0], [43.9, 10744.0], [44.0, 10748.0], [44.1, 10748.0], [44.2, 10750.0], [44.3, 10750.0], [44.4, 10751.0], [44.5, 10751.0], [44.6, 10751.0], [44.7, 10751.0], [44.8, 10752.0], [44.9, 10752.0], [45.0, 10752.0], [45.1, 10752.0], [45.2, 10753.0], [45.3, 10754.0], [45.4, 10772.0], [45.5, 10778.0], [45.6, 10779.0], [45.7, 10793.0], [45.8, 10808.0], [45.9, 10811.0], [46.0, 10826.0], [46.1, 10828.0], [46.2, 10830.0], [46.3, 10836.0], [46.4, 10877.0], [46.5, 10882.0], [46.6, 10886.0], [46.7, 10894.0], [46.8, 10899.0], [46.9, 10902.0], [47.0, 10903.0], [47.1, 10909.0], [47.2, 10950.0], [47.3, 10963.0], [47.4, 10974.0], [47.5, 10983.0], [47.6, 10984.0], [47.7, 11001.0], [47.8, 11003.0], [47.9, 11003.0], [48.0, 11004.0], [48.1, 11004.0], [48.2, 11005.0], [48.3, 11007.0], [48.4, 11007.0], [48.5, 11007.0], [48.6, 11008.0], [48.7, 11008.0], [48.8, 11008.0], [48.9, 11008.0], [49.0, 11008.0], [49.1, 11008.0], [49.2, 11008.0], [49.3, 11008.0], [49.4, 11014.0], [49.5, 11022.0], [49.6, 11028.0], [49.7, 11030.0], [49.8, 11039.0], [49.9, 11049.0], [50.0, 11052.0], [50.1, 11072.0], [50.2, 11094.0], [50.3, 11107.0], [50.4, 11107.0], [50.5, 11120.0], [50.6, 11122.0], [50.7, 11162.0], [50.8, 11204.0], [50.9, 11230.0], [51.0, 11255.0], [51.1, 11261.0], [51.2, 11263.0], [51.3, 11263.0], [51.4, 11263.0], [51.5, 11263.0], [51.6, 11263.0], [51.7, 11263.0], [51.8, 11263.0], [51.9, 11264.0], [52.0, 11264.0], [52.1, 11264.0], [52.2, 11264.0], [52.3, 11305.0], [52.4, 11312.0], [52.5, 11343.0], [52.6, 11373.0], [52.7, 11399.0], [52.8, 11415.0], [52.9, 11435.0], [53.0, 11451.0], [53.1, 11504.0], [53.2, 11515.0], [53.3, 11519.0], [53.4, 11520.0], [53.5, 11520.0], [53.6, 11520.0], [53.7, 11543.0], [53.8, 11550.0], [53.9, 11582.0], [54.0, 11595.0], [54.1, 11627.0], [54.2, 11631.0], [54.3, 11670.0], [54.4, 11699.0], [54.5, 11718.0], [54.6, 11758.0], [54.7, 11772.0], [54.8, 11775.0], [54.9, 11775.0], [55.0, 11775.0], [55.1, 11775.0], [55.2, 11776.0], [55.3, 11776.0], [55.4, 11776.0], [55.5, 11800.0], [55.6, 11841.0], [55.7, 11856.0], [55.8, 11872.0], [55.9, 11884.0], [56.0, 11886.0], [56.1, 11943.0], [56.2, 12015.0], [56.3, 12031.0], [56.4, 12058.0], [56.5, 12062.0], [56.6, 12138.0], [56.7, 12190.0], [56.8, 12228.0], [56.9, 12283.0], [57.0, 12286.0], [57.1, 12286.0], [57.2, 12287.0], [57.3, 12287.0], [57.4, 12287.0], [57.5, 12287.0], [57.6, 12287.0], [57.7, 12288.0], [57.8, 12288.0], [57.9, 12288.0], [58.0, 12334.0], [58.1, 12400.0], [58.2, 12542.0], [58.3, 12542.0], [58.4, 12543.0], [58.5, 12544.0], [58.6, 12544.0], [58.7, 12647.0], [58.8, 12680.0], [58.9, 12724.0], [59.0, 12797.0], [59.1, 12799.0], [59.2, 12799.0], [59.3, 12799.0], [59.4, 12799.0], [59.5, 12799.0], [59.6, 12799.0], [59.7, 12800.0], [59.8, 13055.0], [59.9, 13056.0], [60.0, 13115.0], [60.1, 13172.0], [60.2, 13221.0], [60.3, 13306.0], [60.4, 13307.0], [60.5, 13307.0], [60.6, 13307.0], [60.7, 13307.0], [60.8, 13307.0], [60.9, 13308.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13308.0], [61.3, 13308.0], [61.4, 13309.0], [61.5, 13310.0], [61.6, 13310.0], [61.7, 13310.0], [61.8, 13310.0], [61.9, 13310.0], [62.0, 13310.0], [62.1, 13310.0], [62.2, 13310.0], [62.3, 13310.0], [62.4, 13310.0], [62.5, 13310.0], [62.6, 13310.0], [62.7, 13310.0], [62.8, 13310.0], [62.9, 13310.0], [63.0, 13310.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13311.0], [70.4, 13311.0], [70.5, 13311.0], [70.6, 13311.0], [70.7, 13311.0], [70.8, 13311.0], [70.9, 13311.0], [71.0, 13311.0], [71.1, 13311.0], [71.2, 13311.0], [71.3, 13311.0], [71.4, 13311.0], [71.5, 13311.0], [71.6, 13311.0], [71.7, 13311.0], [71.8, 13311.0], [71.9, 13311.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13312.0], [78.9, 13312.0], [79.0, 13312.0], [79.1, 13312.0], [79.2, 13312.0], [79.3, 13312.0], [79.4, 13312.0], [79.5, 13313.0], [79.6, 13313.0], [79.7, 13313.0], [79.8, 13313.0], [79.9, 13313.0], [80.0, 13313.0], [80.1, 13313.0], [80.2, 13313.0], [80.3, 13313.0], [80.4, 13313.0], [80.5, 13313.0], [80.6, 13314.0], [80.7, 13314.0], [80.8, 13314.0], [80.9, 13315.0], [81.0, 13315.0], [81.1, 13315.0], [81.2, 13315.0], [81.3, 13315.0], [81.4, 13315.0], [81.5, 13315.0], [81.6, 13315.0], [81.7, 13315.0], [81.8, 13315.0], [81.9, 13315.0], [82.0, 13316.0], [82.1, 13317.0], [82.2, 13317.0], [82.3, 13425.0], [82.4, 13540.0], [82.5, 13546.0], [82.6, 13567.0], [82.7, 13698.0], [82.8, 13819.0], [82.9, 13819.0], [83.0, 13820.0], [83.1, 13820.0], [83.2, 13821.0], [83.3, 13822.0], [83.4, 13822.0], [83.5, 13822.0], [83.6, 13823.0], [83.7, 13823.0], [83.8, 13823.0], [83.9, 13823.0], [84.0, 13823.0], [84.1, 13823.0], [84.2, 13823.0], [84.3, 13824.0], [84.4, 13824.0], [84.5, 13824.0], [84.6, 13824.0], [84.7, 13824.0], [84.8, 13825.0], [84.9, 13827.0], [85.0, 13828.0], [85.1, 13828.0], [85.2, 13828.0], [85.3, 13983.0], [85.4, 14079.0], [85.5, 14079.0], [85.6, 14079.0], [85.7, 14080.0], [85.8, 14331.0], [85.9, 14331.0], [86.0, 14332.0], [86.1, 14334.0], [86.2, 14334.0], [86.3, 14334.0], [86.4, 14334.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14335.0], [87.2, 14335.0], [87.3, 14335.0], [87.4, 14335.0], [87.5, 14335.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14336.0], [88.0, 14337.0], [88.1, 14337.0], [88.2, 14339.0], [88.3, 14339.0], [88.4, 14588.0], [88.5, 14590.0], [88.6, 14590.0], [88.7, 14590.0], [88.8, 14591.0], [88.9, 14591.0], [89.0, 14592.0], [89.1, 14592.0], [89.2, 14846.0], [89.3, 14847.0], [89.4, 14847.0], [89.5, 14958.0], [89.6, 15102.0], [89.7, 15103.0], [89.8, 15104.0], [89.9, 15121.0], [90.0, 15294.0], [90.1, 15356.0], [90.2, 15359.0], [90.3, 15359.0], [90.4, 15516.0], [90.5, 15612.0], [90.6, 15615.0], [90.7, 15616.0], [90.8, 15696.0], [90.9, 15740.0], [91.0, 16127.0], [91.1, 16128.0], [91.2, 16185.0], [91.3, 16385.0], [91.4, 16639.0], [91.5, 17407.0], [91.6, 17408.0], [91.7, 17411.0], [91.8, 17484.0], [91.9, 17663.0], [92.0, 17992.0], [92.1, 18687.0], [92.2, 18687.0], [92.3, 18944.0], [92.4, 19064.0], [92.5, 19222.0], [92.6, 19312.0], [92.7, 19690.0], [92.8, 19711.0], [92.9, 19713.0], [93.0, 19962.0], [93.1, 20062.0], [93.2, 20479.0], [93.3, 20480.0], [93.4, 22015.0], [93.5, 26367.0], [93.6, 26367.0], [93.7, 26623.0], [93.8, 27647.0], [93.9, 27647.0], [94.0, 28671.0], [94.1, 28671.0], [94.2, 29439.0], [94.3, 29695.0], [94.4, 29696.0], [94.5, 29696.0], [94.6, 29696.0], [94.7, 31743.0], [94.8, 34815.0], [94.9, 51195.0], [95.0, 53247.0], [95.1, 53248.0], [95.2, 53539.0], [95.3, 53786.0], [95.4, 54461.0], [95.5, 54983.0], [95.6, 56975.0], [95.7, 57507.0], [95.8, 57537.0], [95.9, 57571.0], [96.0, 57738.0], [96.1, 57926.0], [96.2, 58675.0], [96.3, 82176.0], [96.4, 95488.0], [96.5, 98561.0], [96.6, 105728.0], [96.7, 105985.0], [96.8, 106495.0], [96.9, 106496.0], [97.0, 106496.0], [97.1, 106750.0], [97.2, 106751.0], [97.3, 106752.0], [97.4, 106752.0], [97.5, 107263.0], [97.6, 107263.0], [97.7, 107265.0], [97.8, 107265.0], [97.9, 109567.0], [98.0, 109568.0], [98.1, 109568.0], [98.2, 113662.0], [98.3, 118271.0], [98.4, 126207.0], [98.5, 127232.0], [98.6, 127488.0], [98.7, 127742.0], [98.8, 131072.0], [98.9, 143862.0], [99.0, 144640.0], [99.1, 144894.0], [99.2, 148223.0], [99.3, 148227.0], [99.4, 156927.0], [99.5, 168195.0], [99.6, 178687.0], [99.7, 178688.0], [99.8, 211198.0], [99.9, 221445.0], [100.0, 229116.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 1174.0], [3.2, 1183.0], [3.3, 1196.0], [3.4, 1213.0], [3.5, 1222.0], [3.6, 1230.0], [3.7, 1237.0], [3.8, 1247.0], [3.9, 1260.0], [4.0, 1277.0], [4.1, 1309.0], [4.2, 1337.0], [4.3, 1415.0], [4.4, 1470.0], [4.5, 1523.0], [4.6, 1560.0], [4.7, 1623.0], [4.8, 1689.0], [4.9, 1750.0], [5.0, 1810.0], [5.1, 1870.0], [5.2, 1913.0], [5.3, 1959.0], [5.4, 2010.0], [5.5, 2077.0], [5.6, 2129.0], [5.7, 2177.0], [5.8, 2203.0], [5.9, 2279.0], [6.0, 2325.0], [6.1, 2382.0], [6.2, 2411.0], [6.3, 2444.0], [6.4, 2481.0], [6.5, 2505.0], [6.6, 2533.0], [6.7, 2609.0], [6.8, 2660.0], [6.9, 2719.0], [7.0, 2809.0], [7.1, 2886.0], [7.2, 2951.0], [7.3, 3063.0], [7.4, 3134.0], [7.5, 3196.0], [7.6, 3237.0], [7.7, 3400.0], [7.8, 3496.0], [7.9, 3597.0], [8.0, 3626.0], [8.1, 3653.0], [8.2, 3672.0], [8.3, 3702.0], [8.4, 3732.0], [8.5, 3764.0], [8.6, 3809.0], [8.7, 3837.0], [8.8, 3932.0], [8.9, 3988.0], [9.0, 4036.0], [9.1, 4083.0], [9.2, 4119.0], [9.3, 4152.0], [9.4, 4168.0], [9.5, 4213.0], [9.6, 4245.0], [9.7, 4277.0], [9.8, 4308.0], [9.9, 4342.0], [10.0, 4376.0], [10.1, 4428.0], [10.2, 4485.0], [10.3, 4575.0], [10.4, 4625.0], [10.5, 4695.0], [10.6, 4772.0], [10.7, 4841.0], [10.8, 4884.0], [10.9, 4949.0], [11.0, 5017.0], [11.1, 5041.0], [11.2, 5099.0], [11.3, 5222.0], [11.4, 5344.0], [11.5, 5457.0], [11.6, 5555.0], [11.7, 5648.0], [11.8, 5712.0], [11.9, 5830.0], [12.0, 5901.0], [12.1, 5927.0], [12.2, 5998.0], [12.3, 6027.0], [12.4, 6072.0], [12.5, 6112.0], [12.6, 6137.0], [12.7, 6158.0], [12.8, 6186.0], [12.9, 6213.0], [13.0, 6233.0], [13.1, 6260.0], [13.2, 6288.0], [13.3, 6334.0], [13.4, 6427.0], [13.5, 6478.0], [13.6, 6527.0], [13.7, 6598.0], [13.8, 6628.0], [13.9, 6695.0], [14.0, 6772.0], [14.1, 6818.0], [14.2, 6862.0], [14.3, 6915.0], [14.4, 6997.0], [14.5, 7099.0], [14.6, 7166.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7169.0], [15.2, 7172.0], [15.3, 7189.0], [15.4, 7296.0], [15.5, 7392.0], [15.6, 7420.0], [15.7, 7423.0], [15.8, 7423.0], [15.9, 7423.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7425.0], [16.5, 7426.0], [16.6, 7439.0], [16.7, 7528.0], [16.8, 7623.0], [16.9, 7676.0], [17.0, 7679.0], [17.1, 7679.0], [17.2, 7679.0], [17.3, 7680.0], [17.4, 7681.0], [17.5, 7681.0], [17.6, 7683.0], [17.7, 7713.0], [17.8, 7900.0], [17.9, 7933.0], [18.0, 7935.0], [18.1, 7935.0], [18.2, 7935.0], [18.3, 7935.0], [18.4, 7936.0], [18.5, 7936.0], [18.6, 7936.0], [18.7, 7939.0], [18.8, 7985.0], [18.9, 8061.0], [19.0, 8127.0], [19.1, 8158.0], [19.2, 8186.0], [19.3, 8188.0], [19.4, 8191.0], [19.5, 8191.0], [19.6, 8192.0], [19.7, 8192.0], [19.8, 8198.0], [19.9, 8241.0], [20.0, 8261.0], [20.1, 8309.0], [20.2, 8354.0], [20.3, 8381.0], [20.4, 8418.0], [20.5, 8445.0], [20.6, 8448.0], [20.7, 8463.0], [20.8, 8492.0], [20.9, 8513.0], [21.0, 8527.0], [21.1, 8579.0], [21.2, 8606.0], [21.3, 8699.0], [21.4, 8703.0], [21.5, 8703.0], [21.6, 8704.0], [21.7, 8704.0], [21.8, 8704.0], [21.9, 8705.0], [22.0, 8727.0], [22.1, 8791.0], [22.2, 8956.0], [22.3, 8959.0], [22.4, 8960.0], [22.5, 8993.0], [22.6, 9033.0], [22.7, 9083.0], [22.8, 9103.0], [22.9, 9143.0], [23.0, 9176.0], [23.1, 9189.0], [23.2, 9206.0], [23.3, 9214.0], [23.4, 9215.0], [23.5, 9215.0], [23.6, 9216.0], [23.7, 9216.0], [23.8, 9217.0], [23.9, 9229.0], [24.0, 9252.0], [24.1, 9277.0], [24.2, 9322.0], [24.3, 9352.0], [24.4, 9382.0], [24.5, 9398.0], [24.6, 9459.0], [24.7, 9471.0], [24.8, 9526.0], [24.9, 9564.0], [25.0, 9611.0], [25.1, 9641.0], [25.2, 9677.0], [25.3, 9703.0], [25.4, 9725.0], [25.5, 9727.0], [25.6, 9727.0], [25.7, 9727.0], [25.8, 9728.0], [25.9, 9728.0], [26.0, 9728.0], [26.1, 9757.0], [26.2, 9792.0], [26.3, 9827.0], [26.4, 9885.0], [26.5, 9945.0], [26.6, 9968.0], [26.7, 9980.0], [26.8, 9983.0], [26.9, 9984.0], [27.0, 9984.0], [27.1, 9988.0], [27.2, 10001.0], [27.3, 10019.0], [27.4, 10036.0], [27.5, 10048.0], [27.6, 10060.0], [27.7, 10074.0], [27.8, 10080.0], [27.9, 10089.0], [28.0, 10094.0], [28.1, 10104.0], [28.2, 10119.0], [28.3, 10130.0], [28.4, 10134.0], [28.5, 10147.0], [28.6, 10152.0], [28.7, 10160.0], [28.8, 10173.0], [28.9, 10183.0], [29.0, 10188.0], [29.1, 10193.0], [29.2, 10202.0], [29.3, 10219.0], [29.4, 10225.0], [29.5, 10234.0], [29.6, 10239.0], [29.7, 10239.0], [29.8, 10240.0], [29.9, 10241.0], [30.0, 10245.0], [30.1, 10249.0], [30.2, 10258.0], [30.3, 10263.0], [30.4, 10270.0], [30.5, 10275.0], [30.6, 10281.0], [30.7, 10288.0], [30.8, 10292.0], [30.9, 10303.0], [31.0, 10311.0], [31.1, 10316.0], [31.2, 10320.0], [31.3, 10324.0], [31.4, 10328.0], [31.5, 10333.0], [31.6, 10338.0], [31.7, 10345.0], [31.8, 10347.0], [31.9, 10353.0], [32.0, 10362.0], [32.1, 10370.0], [32.2, 10375.0], [32.3, 10384.0], [32.4, 10392.0], [32.5, 10400.0], [32.6, 10404.0], [32.7, 10413.0], [32.8, 10419.0], [32.9, 10422.0], [33.0, 10428.0], [33.1, 10432.0], [33.2, 10437.0], [33.3, 10442.0], [33.4, 10449.0], [33.5, 10459.0], [33.6, 10466.0], [33.7, 10470.0], [33.8, 10477.0], [33.9, 10482.0], [34.0, 10487.0], [34.1, 10491.0], [34.2, 10494.0], [34.3, 10496.0], [34.4, 10502.0], [34.5, 10508.0], [34.6, 10512.0], [34.7, 10518.0], [34.8, 10526.0], [34.9, 10530.0], [35.0, 10535.0], [35.1, 10538.0], [35.2, 10541.0], [35.3, 10547.0], [35.4, 10551.0], [35.5, 10553.0], [35.6, 10556.0], [35.7, 10559.0], [35.8, 10562.0], [35.9, 10568.0], [36.0, 10572.0], [36.1, 10577.0], [36.2, 10582.0], [36.3, 10585.0], [36.4, 10590.0], [36.5, 10593.0], [36.6, 10597.0], [36.7, 10599.0], [36.8, 10601.0], [36.9, 10604.0], [37.0, 10609.0], [37.1, 10613.0], [37.2, 10616.0], [37.3, 10619.0], [37.4, 10622.0], [37.5, 10626.0], [37.6, 10630.0], [37.7, 10633.0], [37.8, 10637.0], [37.9, 10641.0], [38.0, 10645.0], [38.1, 10649.0], [38.2, 10651.0], [38.3, 10654.0], [38.4, 10657.0], [38.5, 10660.0], [38.6, 10663.0], [38.7, 10666.0], [38.8, 10670.0], [38.9, 10672.0], [39.0, 10675.0], [39.1, 10678.0], [39.2, 10683.0], [39.3, 10687.0], [39.4, 10693.0], [39.5, 10697.0], [39.6, 10704.0], [39.7, 10709.0], [39.8, 10713.0], [39.9, 10715.0], [40.0, 10722.0], [40.1, 10727.0], [40.2, 10730.0], [40.3, 10734.0], [40.4, 10736.0], [40.5, 10742.0], [40.6, 10745.0], [40.7, 10748.0], [40.8, 10751.0], [40.9, 10752.0], [41.0, 10752.0], [41.1, 10754.0], [41.2, 10758.0], [41.3, 10762.0], [41.4, 10766.0], [41.5, 10771.0], [41.6, 10777.0], [41.7, 10781.0], [41.8, 10784.0], [41.9, 10787.0], [42.0, 10790.0], [42.1, 10796.0], [42.2, 10800.0], [42.3, 10805.0], [42.4, 10809.0], [42.5, 10813.0], [42.6, 10816.0], [42.7, 10819.0], [42.8, 10825.0], [42.9, 10830.0], [43.0, 10834.0], [43.1, 10839.0], [43.2, 10845.0], [43.3, 10850.0], [43.4, 10852.0], [43.5, 10857.0], [43.6, 10861.0], [43.7, 10866.0], [43.8, 10869.0], [43.9, 10872.0], [44.0, 10877.0], [44.1, 10883.0], [44.2, 10888.0], [44.3, 10893.0], [44.4, 10897.0], [44.5, 10905.0], [44.6, 10908.0], [44.7, 10915.0], [44.8, 10919.0], [44.9, 10921.0], [45.0, 10925.0], [45.1, 10930.0], [45.2, 10933.0], [45.3, 10938.0], [45.4, 10941.0], [45.5, 10946.0], [45.6, 10949.0], [45.7, 10953.0], [45.8, 10958.0], [45.9, 10960.0], [46.0, 10964.0], [46.1, 10967.0], [46.2, 10970.0], [46.3, 10975.0], [46.4, 10979.0], [46.5, 10982.0], [46.6, 10984.0], [46.7, 10987.0], [46.8, 10990.0], [46.9, 10993.0], [47.0, 10996.0], [47.1, 10999.0], [47.2, 11002.0], [47.3, 11004.0], [47.4, 11006.0], [47.5, 11007.0], [47.6, 11008.0], [47.7, 11008.0], [47.8, 11008.0], [47.9, 11011.0], [48.0, 11014.0], [48.1, 11017.0], [48.2, 11021.0], [48.3, 11023.0], [48.4, 11026.0], [48.5, 11030.0], [48.6, 11033.0], [48.7, 11035.0], [48.8, 11038.0], [48.9, 11041.0], [49.0, 11044.0], [49.1, 11047.0], [49.2, 11051.0], [49.3, 11054.0], [49.4, 11058.0], [49.5, 11061.0], [49.6, 11065.0], [49.7, 11067.0], [49.8, 11071.0], [49.9, 11075.0], [50.0, 11078.0], [50.1, 11080.0], [50.2, 11083.0], [50.3, 11085.0], [50.4, 11087.0], [50.5, 11089.0], [50.6, 11094.0], [50.7, 11095.0], [50.8, 11099.0], [50.9, 11101.0], [51.0, 11104.0], [51.1, 11108.0], [51.2, 11110.0], [51.3, 11112.0], [51.4, 11117.0], [51.5, 11119.0], [51.6, 11122.0], [51.7, 11127.0], [51.8, 11128.0], [51.9, 11134.0], [52.0, 11137.0], [52.1, 11139.0], [52.2, 11143.0], [52.3, 11146.0], [52.4, 11149.0], [52.5, 11152.0], [52.6, 11153.0], [52.7, 11157.0], [52.8, 11159.0], [52.9, 11162.0], [53.0, 11167.0], [53.1, 11169.0], [53.2, 11172.0], [53.3, 11174.0], [53.4, 11177.0], [53.5, 11180.0], [53.6, 11183.0], [53.7, 11185.0], [53.8, 11187.0], [53.9, 11190.0], [54.0, 11193.0], [54.1, 11197.0], [54.2, 11200.0], [54.3, 11204.0], [54.4, 11208.0], [54.5, 11211.0], [54.6, 11213.0], [54.7, 11215.0], [54.8, 11217.0], [54.9, 11220.0], [55.0, 11222.0], [55.1, 11224.0], [55.2, 11226.0], [55.3, 11228.0], [55.4, 11230.0], [55.5, 11232.0], [55.6, 11235.0], [55.7, 11239.0], [55.8, 11242.0], [55.9, 11244.0], [56.0, 11246.0], [56.1, 11247.0], [56.2, 11250.0], [56.3, 11253.0], [56.4, 11254.0], [56.5, 11256.0], [56.6, 11258.0], [56.7, 11260.0], [56.8, 11262.0], [56.9, 11263.0], [57.0, 11263.0], [57.1, 11264.0], [57.2, 11265.0], [57.3, 11266.0], [57.4, 11268.0], [57.5, 11269.0], [57.6, 11272.0], [57.7, 11274.0], [57.8, 11276.0], [57.9, 11279.0], [58.0, 11282.0], [58.1, 11284.0], [58.2, 11287.0], [58.3, 11291.0], [58.4, 11295.0], [58.5, 11297.0], [58.6, 11298.0], [58.7, 11299.0], [58.8, 11301.0], [58.9, 11303.0], [59.0, 11306.0], [59.1, 11308.0], [59.2, 11310.0], [59.3, 11312.0], [59.4, 11314.0], [59.5, 11318.0], [59.6, 11320.0], [59.7, 11322.0], [59.8, 11324.0], [59.9, 11326.0], [60.0, 11328.0], [60.1, 11330.0], [60.2, 11332.0], [60.3, 11336.0], [60.4, 11337.0], [60.5, 11339.0], [60.6, 11342.0], [60.7, 11346.0], [60.8, 11348.0], [60.9, 11349.0], [61.0, 11352.0], [61.1, 11354.0], [61.2, 11357.0], [61.3, 11359.0], [61.4, 11361.0], [61.5, 11363.0], [61.6, 11366.0], [61.7, 11369.0], [61.8, 11371.0], [61.9, 11373.0], [62.0, 11375.0], [62.1, 11377.0], [62.2, 11380.0], [62.3, 11383.0], [62.4, 11385.0], [62.5, 11388.0], [62.6, 11389.0], [62.7, 11390.0], [62.8, 11393.0], [62.9, 11396.0], [63.0, 11397.0], [63.1, 11399.0], [63.2, 11401.0], [63.3, 11403.0], [63.4, 11404.0], [63.5, 11409.0], [63.6, 11412.0], [63.7, 11414.0], [63.8, 11415.0], [63.9, 11417.0], [64.0, 11419.0], [64.1, 11422.0], [64.2, 11424.0], [64.3, 11427.0], [64.4, 11429.0], [64.5, 11431.0], [64.6, 11432.0], [64.7, 11433.0], [64.8, 11436.0], [64.9, 11438.0], [65.0, 11441.0], [65.1, 11444.0], [65.2, 11446.0], [65.3, 11448.0], [65.4, 11450.0], [65.5, 11452.0], [65.6, 11454.0], [65.7, 11456.0], [65.8, 11458.0], [65.9, 11460.0], [66.0, 11462.0], [66.1, 11466.0], [66.2, 11470.0], [66.3, 11472.0], [66.4, 11473.0], [66.5, 11475.0], [66.6, 11478.0], [66.7, 11480.0], [66.8, 11482.0], [66.9, 11484.0], [67.0, 11487.0], [67.1, 11490.0], [67.2, 11493.0], [67.3, 11495.0], [67.4, 11498.0], [67.5, 11500.0], [67.6, 11502.0], [67.7, 11504.0], [67.8, 11506.0], [67.9, 11508.0], [68.0, 11510.0], [68.1, 11512.0], [68.2, 11514.0], [68.3, 11518.0], [68.4, 11520.0], [68.5, 11522.0], [68.6, 11525.0], [68.7, 11528.0], [68.8, 11530.0], [68.9, 11533.0], [69.0, 11535.0], [69.1, 11539.0], [69.2, 11542.0], [69.3, 11544.0], [69.4, 11546.0], [69.5, 11548.0], [69.6, 11551.0], [69.7, 11554.0], [69.8, 11556.0], [69.9, 11559.0], [70.0, 11561.0], [70.1, 11564.0], [70.2, 11569.0], [70.3, 11573.0], [70.4, 11577.0], [70.5, 11580.0], [70.6, 11584.0], [70.7, 11588.0], [70.8, 11593.0], [70.9, 11595.0], [71.0, 11598.0], [71.1, 11599.0], [71.2, 11603.0], [71.3, 11608.0], [71.4, 11609.0], [71.5, 11612.0], [71.6, 11614.0], [71.7, 11618.0], [71.8, 11620.0], [71.9, 11625.0], [72.0, 11628.0], [72.1, 11632.0], [72.2, 11633.0], [72.3, 11637.0], [72.4, 11641.0], [72.5, 11644.0], [72.6, 11646.0], [72.7, 11649.0], [72.8, 11651.0], [72.9, 11655.0], [73.0, 11657.0], [73.1, 11661.0], [73.2, 11664.0], [73.3, 11667.0], [73.4, 11670.0], [73.5, 11674.0], [73.6, 11678.0], [73.7, 11680.0], [73.8, 11685.0], [73.9, 11687.0], [74.0, 11691.0], [74.1, 11695.0], [74.2, 11698.0], [74.3, 11705.0], [74.4, 11710.0], [74.5, 11713.0], [74.6, 11715.0], [74.7, 11718.0], [74.8, 11721.0], [74.9, 11725.0], [75.0, 11731.0], [75.1, 11737.0], [75.2, 11742.0], [75.3, 11748.0], [75.4, 11752.0], [75.5, 11754.0], [75.6, 11758.0], [75.7, 11762.0], [75.8, 11766.0], [75.9, 11770.0], [76.0, 11774.0], [76.1, 11775.0], [76.2, 11776.0], [76.3, 11777.0], [76.4, 11785.0], [76.5, 11787.0], [76.6, 11792.0], [76.7, 11797.0], [76.8, 11803.0], [76.9, 11807.0], [77.0, 11809.0], [77.1, 11813.0], [77.2, 11820.0], [77.3, 11825.0], [77.4, 11829.0], [77.5, 11836.0], [77.6, 11840.0], [77.7, 11846.0], [77.8, 11851.0], [77.9, 11857.0], [78.0, 11863.0], [78.1, 11864.0], [78.2, 11867.0], [78.3, 11875.0], [78.4, 11879.0], [78.5, 11886.0], [78.6, 11892.0], [78.7, 11895.0], [78.8, 11902.0], [78.9, 11906.0], [79.0, 11911.0], [79.1, 11915.0], [79.2, 11922.0], [79.3, 11931.0], [79.4, 11934.0], [79.5, 11939.0], [79.6, 11944.0], [79.7, 11949.0], [79.8, 11954.0], [79.9, 11962.0], [80.0, 11971.0], [80.1, 11976.0], [80.2, 11982.0], [80.3, 11985.0], [80.4, 11995.0], [80.5, 12000.0], [80.6, 12006.0], [80.7, 12013.0], [80.8, 12021.0], [80.9, 12028.0], [81.0, 12031.0], [81.1, 12040.0], [81.2, 12045.0], [81.3, 12052.0], [81.4, 12061.0], [81.5, 12069.0], [81.6, 12080.0], [81.7, 12091.0], [81.8, 12103.0], [81.9, 12110.0], [82.0, 12117.0], [82.1, 12131.0], [82.2, 12145.0], [82.3, 12157.0], [82.4, 12172.0], [82.5, 12185.0], [82.6, 12195.0], [82.7, 12204.0], [82.8, 12220.0], [82.9, 12233.0], [83.0, 12239.0], [83.1, 12252.0], [83.2, 12269.0], [83.3, 12286.0], [83.4, 12288.0], [83.5, 12288.0], [83.6, 12290.0], [83.7, 12297.0], [83.8, 12313.0], [83.9, 12323.0], [84.0, 12332.0], [84.1, 12354.0], [84.2, 12368.0], [84.3, 12386.0], [84.4, 12395.0], [84.5, 12428.0], [84.6, 12447.0], [84.7, 12459.0], [84.8, 12469.0], [84.9, 12489.0], [85.0, 12515.0], [85.1, 12535.0], [85.2, 12543.0], [85.3, 12559.0], [85.4, 12592.0], [85.5, 12627.0], [85.6, 12652.0], [85.7, 12712.0], [85.8, 12799.0], [85.9, 12800.0], [86.0, 12892.0], [86.1, 13101.0], [86.2, 13235.0], [86.3, 13295.0], [86.4, 13308.0], [86.5, 13308.0], [86.6, 13308.0], [86.7, 13309.0], [86.8, 13310.0], [86.9, 13310.0], [87.0, 13310.0], [87.1, 13310.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13311.0], [88.2, 13311.0], [88.3, 13311.0], [88.4, 13311.0], [88.5, 13311.0], [88.6, 13311.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13312.0], [90.5, 13312.0], [90.6, 13312.0], [90.7, 13312.0], [90.8, 13312.0], [90.9, 13312.0], [91.0, 13312.0], [91.1, 13312.0], [91.2, 13313.0], [91.3, 13313.0], [91.4, 13313.0], [91.5, 13313.0], [91.6, 13313.0], [91.7, 13313.0], [91.8, 13313.0], [91.9, 13313.0], [92.0, 13313.0], [92.1, 13313.0], [92.2, 13314.0], [92.3, 13315.0], [92.4, 13316.0], [92.5, 13317.0], [92.6, 13344.0], [92.7, 13363.0], [92.8, 13393.0], [92.9, 13409.0], [93.0, 13427.0], [93.1, 13620.0], [93.2, 13822.0], [93.3, 13823.0], [93.4, 13824.0], [93.5, 13824.0], [93.6, 13824.0], [93.7, 13825.0], [93.8, 13825.0], [93.9, 13826.0], [94.0, 13828.0], [94.1, 13885.0], [94.2, 14079.0], [94.3, 14212.0], [94.4, 14332.0], [94.5, 14334.0], [94.6, 14335.0], [94.7, 14335.0], [94.8, 14336.0], [94.9, 14336.0], [95.0, 14336.0], [95.1, 14337.0], [95.2, 14340.0], [95.3, 14524.0], [95.4, 14591.0], [95.5, 14592.0], [95.6, 14778.0], [95.7, 14847.0], [95.8, 14869.0], [95.9, 14955.0], [96.0, 15162.0], [96.1, 15321.0], [96.2, 15359.0], [96.3, 15506.0], [96.4, 15664.0], [96.5, 15872.0], [96.6, 16276.0], [96.7, 16383.0], [96.8, 16717.0], [96.9, 17015.0], [97.0, 17326.0], [97.1, 17660.0], [97.2, 18427.0], [97.3, 18705.0], [97.4, 19710.0], [97.5, 20339.0], [97.6, 20977.0], [97.7, 23862.0], [97.8, 26368.0], [97.9, 27648.0], [98.0, 36622.0], [98.1, 53757.0], [98.2, 54807.0], [98.3, 58722.0], [98.4, 66261.0], [98.5, 77355.0], [98.6, 105899.0], [98.7, 105985.0], [98.8, 106494.0], [98.9, 106750.0], [99.0, 106752.0], [99.1, 107264.0], [99.2, 109312.0], [99.3, 114429.0], [99.4, 126206.0], [99.5, 132096.0], [99.6, 144383.0], [99.7, 148228.0], [99.8, 170240.0], [99.9, 221439.0], [100.0, 227327.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 3.0], [7.7, 3.0], [7.8, 20.0], [7.9, 23.0], [8.0, 28.0], [8.1, 33.0], [8.2, 34.0], [8.3, 35.0], [8.4, 37.0], [8.5, 45.0], [8.6, 66.0], [8.7, 92.0], [8.8, 229.0], [8.9, 424.0], [9.0, 619.0], [9.1, 660.0], [9.2, 781.0], [9.3, 1000.0], [9.4, 1049.0], [9.5, 1159.0], [9.6, 1312.0], [9.7, 1457.0], [9.8, 1586.0], [9.9, 1917.0], [10.0, 2061.0], [10.1, 2305.0], [10.2, 2474.0], [10.3, 2530.0], [10.4, 2819.0], [10.5, 2822.0], [10.6, 2889.0], [10.7, 2927.0], [10.8, 3017.0], [10.9, 3106.0], [11.0, 3228.0], [11.1, 3353.0], [11.2, 3575.0], [11.3, 3749.0], [11.4, 3976.0], [11.5, 4263.0], [11.6, 4536.0], [11.7, 4642.0], [11.8, 4777.0], [11.9, 4921.0], [12.0, 5018.0], [12.1, 5161.0], [12.2, 5266.0], [12.3, 5331.0], [12.4, 5428.0], [12.5, 5565.0], [12.6, 5608.0], [12.7, 6010.0], [12.8, 6351.0], [12.9, 6871.0], [13.0, 6968.0], [13.1, 7012.0], [13.2, 7059.0], [13.3, 7093.0], [13.4, 7166.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7169.0], [14.9, 7169.0], [15.0, 7169.0], [15.1, 7170.0], [15.2, 7171.0], [15.3, 7171.0], [15.4, 7186.0], [15.5, 7203.0], [15.6, 7224.0], [15.7, 7245.0], [15.8, 7284.0], [15.9, 7324.0], [16.0, 7358.0], [16.1, 7416.0], [16.2, 7419.0], [16.3, 7420.0], [16.4, 7421.0], [16.5, 7422.0], [16.6, 7423.0], [16.7, 7423.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7425.0], [18.7, 7425.0], [18.8, 7428.0], [18.9, 7446.0], [19.0, 7497.0], [19.1, 7563.0], [19.2, 7632.0], [19.3, 7676.0], [19.4, 7678.0], [19.5, 7678.0], [19.6, 7678.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7681.0], [20.7, 7681.0], [20.8, 7681.0], [20.9, 7682.0], [21.0, 7683.0], [21.1, 7683.0], [21.2, 7683.0], [21.3, 7684.0], [21.4, 7693.0], [21.5, 7713.0], [21.6, 7826.0], [21.7, 7871.0], [21.8, 7878.0], [21.9, 7889.0], [22.0, 7910.0], [22.1, 7932.0], [22.2, 7932.0], [22.3, 7935.0], [22.4, 7935.0], [22.5, 7935.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7935.0], [22.9, 7935.0], [23.0, 7935.0], [23.1, 7935.0], [23.2, 7935.0], [23.3, 7935.0], [23.4, 7935.0], [23.5, 7936.0], [23.6, 7936.0], [23.7, 7936.0], [23.8, 7936.0], [23.9, 7936.0], [24.0, 7936.0], [24.1, 7936.0], [24.2, 7936.0], [24.3, 7936.0], [24.4, 7936.0], [24.5, 7936.0], [24.6, 7936.0], [24.7, 7936.0], [24.8, 7937.0], [24.9, 7938.0], [25.0, 7939.0], [25.1, 7943.0], [25.2, 7956.0], [25.3, 8007.0], [25.4, 8067.0], [25.5, 8100.0], [25.6, 8117.0], [25.7, 8145.0], [25.8, 8187.0], [25.9, 8188.0], [26.0, 8188.0], [26.1, 8188.0], [26.2, 8188.0], [26.3, 8191.0], [26.4, 8191.0], [26.5, 8191.0], [26.6, 8191.0], [26.7, 8191.0], [26.8, 8191.0], [26.9, 8191.0], [27.0, 8191.0], [27.1, 8192.0], [27.2, 8192.0], [27.3, 8192.0], [27.4, 8192.0], [27.5, 8192.0], [27.6, 8192.0], [27.7, 8192.0], [27.8, 8193.0], [27.9, 8195.0], [28.0, 8274.0], [28.1, 8277.0], [28.2, 8349.0], [28.3, 8428.0], [28.4, 8447.0], [28.5, 8448.0], [28.6, 8448.0], [28.7, 8449.0], [28.8, 8520.0], [28.9, 8590.0], [29.0, 8655.0], [29.1, 8671.0], [29.2, 8701.0], [29.3, 8702.0], [29.4, 8703.0], [29.5, 8703.0], [29.6, 8703.0], [29.7, 8703.0], [29.8, 8703.0], [29.9, 8704.0], [30.0, 8704.0], [30.1, 8704.0], [30.2, 8704.0], [30.3, 8704.0], [30.4, 8704.0], [30.5, 8704.0], [30.6, 8704.0], [30.7, 8704.0], [30.8, 8704.0], [30.9, 8705.0], [31.0, 8708.0], [31.1, 8724.0], [31.2, 8746.0], [31.3, 8782.0], [31.4, 8806.0], [31.5, 8857.0], [31.6, 8883.0], [31.7, 8912.0], [31.8, 8949.0], [31.9, 8958.0], [32.0, 8959.0], [32.1, 8959.0], [32.2, 8959.0], [32.3, 8960.0], [32.4, 8960.0], [32.5, 8961.0], [32.6, 8961.0], [32.7, 8962.0], [32.8, 8999.0], [32.9, 9021.0], [33.0, 9028.0], [33.1, 9044.0], [33.2, 9059.0], [33.3, 9066.0], [33.4, 9111.0], [33.5, 9136.0], [33.6, 9152.0], [33.7, 9165.0], [33.8, 9184.0], [33.9, 9203.0], [34.0, 9211.0], [34.1, 9215.0], [34.2, 9215.0], [34.3, 9215.0], [34.4, 9215.0], [34.5, 9215.0], [34.6, 9216.0], [34.7, 9216.0], [34.8, 9216.0], [34.9, 9216.0], [35.0, 9216.0], [35.1, 9216.0], [35.2, 9216.0], [35.3, 9216.0], [35.4, 9217.0], [35.5, 9260.0], [35.6, 9324.0], [35.7, 9369.0], [35.8, 9420.0], [35.9, 9443.0], [36.0, 9472.0], [36.1, 9495.0], [36.2, 9515.0], [36.3, 9534.0], [36.4, 9546.0], [36.5, 9554.0], [36.6, 9565.0], [36.7, 9616.0], [36.8, 9633.0], [36.9, 9679.0], [37.0, 9690.0], [37.1, 9712.0], [37.2, 9724.0], [37.3, 9725.0], [37.4, 9726.0], [37.5, 9726.0], [37.6, 9727.0], [37.7, 9727.0], [37.8, 9727.0], [37.9, 9727.0], [38.0, 9727.0], [38.1, 9727.0], [38.2, 9728.0], [38.3, 9728.0], [38.4, 9728.0], [38.5, 9729.0], [38.6, 9731.0], [38.7, 9765.0], [38.8, 9789.0], [38.9, 9808.0], [39.0, 9816.0], [39.1, 9830.0], [39.2, 9869.0], [39.3, 9897.0], [39.4, 9909.0], [39.5, 9963.0], [39.6, 9974.0], [39.7, 9980.0], [39.8, 9981.0], [39.9, 9983.0], [40.0, 9983.0], [40.1, 9983.0], [40.2, 9983.0], [40.3, 9983.0], [40.4, 9983.0], [40.5, 9984.0], [40.6, 9984.0], [40.7, 9984.0], [40.8, 9985.0], [40.9, 9985.0], [41.0, 9987.0], [41.1, 9987.0], [41.2, 9988.0], [41.3, 10002.0], [41.4, 10030.0], [41.5, 10064.0], [41.6, 10070.0], [41.7, 10079.0], [41.8, 10113.0], [41.9, 10122.0], [42.0, 10168.0], [42.1, 10184.0], [42.2, 10193.0], [42.3, 10214.0], [42.4, 10236.0], [42.5, 10236.0], [42.6, 10238.0], [42.7, 10238.0], [42.8, 10239.0], [42.9, 10239.0], [43.0, 10239.0], [43.1, 10240.0], [43.2, 10240.0], [43.3, 10240.0], [43.4, 10241.0], [43.5, 10251.0], [43.6, 10266.0], [43.7, 10282.0], [43.8, 10287.0], [43.9, 10322.0], [44.0, 10348.0], [44.1, 10366.0], [44.2, 10378.0], [44.3, 10387.0], [44.4, 10415.0], [44.5, 10454.0], [44.6, 10456.0], [44.7, 10472.0], [44.8, 10479.0], [44.9, 10492.0], [45.0, 10493.0], [45.1, 10496.0], [45.2, 10496.0], [45.3, 10497.0], [45.4, 10508.0], [45.5, 10537.0], [45.6, 10552.0], [45.7, 10562.0], [45.8, 10624.0], [45.9, 10662.0], [46.0, 10687.0], [46.1, 10694.0], [46.2, 10750.0], [46.3, 10751.0], [46.4, 10751.0], [46.5, 10752.0], [46.6, 10752.0], [46.7, 10753.0], [46.8, 10753.0], [46.9, 10770.0], [47.0, 10846.0], [47.1, 10920.0], [47.2, 10998.0], [47.3, 11003.0], [47.4, 11003.0], [47.5, 11004.0], [47.6, 11005.0], [47.7, 11005.0], [47.8, 11007.0], [47.9, 11007.0], [48.0, 11007.0], [48.1, 11008.0], [48.2, 11008.0], [48.3, 11008.0], [48.4, 11008.0], [48.5, 11008.0], [48.6, 11008.0], [48.7, 11009.0], [48.8, 11012.0], [48.9, 11063.0], [49.0, 11086.0], [49.1, 11163.0], [49.2, 11193.0], [49.3, 11240.0], [49.4, 11263.0], [49.5, 11263.0], [49.6, 11263.0], [49.7, 11264.0], [49.8, 11264.0], [49.9, 11267.0], [50.0, 11297.0], [50.1, 11304.0], [50.2, 11312.0], [50.3, 11356.0], [50.4, 11414.0], [50.5, 11490.0], [50.6, 11510.0], [50.7, 11519.0], [50.8, 11520.0], [50.9, 11521.0], [51.0, 11587.0], [51.1, 11628.0], [51.2, 11702.0], [51.3, 11775.0], [51.4, 11775.0], [51.5, 11775.0], [51.6, 11776.0], [51.7, 11776.0], [51.8, 11776.0], [51.9, 11776.0], [52.0, 11777.0], [52.1, 11805.0], [52.2, 11810.0], [52.3, 11834.0], [52.4, 11849.0], [52.5, 11938.0], [52.6, 12032.0], [52.7, 12056.0], [52.8, 12209.0], [52.9, 12275.0], [53.0, 12283.0], [53.1, 12284.0], [53.2, 12286.0], [53.3, 12287.0], [53.4, 12287.0], [53.5, 12288.0], [53.6, 12288.0], [53.7, 12291.0], [53.8, 12308.0], [53.9, 12406.0], [54.0, 12492.0], [54.1, 12538.0], [54.2, 12543.0], [54.3, 12543.0], [54.4, 12544.0], [54.5, 12544.0], [54.6, 12581.0], [54.7, 12696.0], [54.8, 12732.0], [54.9, 12746.0], [55.0, 12798.0], [55.1, 12799.0], [55.2, 12799.0], [55.3, 12800.0], [55.4, 12800.0], [55.5, 12835.0], [55.6, 13018.0], [55.7, 13055.0], [55.8, 13057.0], [55.9, 13072.0], [56.0, 13177.0], [56.1, 13184.0], [56.2, 13189.0], [56.3, 13196.0], [56.4, 13200.0], [56.5, 13202.0], [56.6, 13206.0], [56.7, 13208.0], [56.8, 13213.0], [56.9, 13218.0], [57.0, 13223.0], [57.1, 13235.0], [57.2, 13238.0], [57.3, 13252.0], [57.4, 13269.0], [57.5, 13271.0], [57.6, 13272.0], [57.7, 13283.0], [57.8, 13286.0], [57.9, 13292.0], [58.0, 13298.0], [58.1, 13307.0], [58.2, 13307.0], [58.3, 13308.0], [58.4, 13308.0], [58.5, 13308.0], [58.6, 13309.0], [58.7, 13309.0], [58.8, 13309.0], [58.9, 13309.0], [59.0, 13309.0], [59.1, 13309.0], [59.2, 13309.0], [59.3, 13309.0], [59.4, 13310.0], [59.5, 13310.0], [59.6, 13310.0], [59.7, 13310.0], [59.8, 13310.0], [59.9, 13310.0], [60.0, 13310.0], [60.1, 13310.0], [60.2, 13310.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13313.0], [73.9, 13313.0], [74.0, 13313.0], [74.1, 13313.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13313.0], [74.7, 13313.0], [74.8, 13313.0], [74.9, 13313.0], [75.0, 13313.0], [75.1, 13313.0], [75.2, 13313.0], [75.3, 13313.0], [75.4, 13313.0], [75.5, 13313.0], [75.6, 13313.0], [75.7, 13313.0], [75.8, 13313.0], [75.9, 13313.0], [76.0, 13313.0], [76.1, 13313.0], [76.2, 13313.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13314.0], [76.6, 13314.0], [76.7, 13314.0], [76.8, 13314.0], [76.9, 13315.0], [77.0, 13315.0], [77.1, 13315.0], [77.2, 13315.0], [77.3, 13315.0], [77.4, 13315.0], [77.5, 13316.0], [77.6, 13316.0], [77.7, 13316.0], [77.8, 13316.0], [77.9, 13316.0], [78.0, 13317.0], [78.1, 13327.0], [78.2, 13337.0], [78.3, 13338.0], [78.4, 13355.0], [78.5, 13359.0], [78.6, 13366.0], [78.7, 13369.0], [78.8, 13384.0], [78.9, 13397.0], [79.0, 13402.0], [79.1, 13408.0], [79.2, 13423.0], [79.3, 13430.0], [79.4, 13467.0], [79.5, 13497.0], [79.6, 13526.0], [79.7, 13552.0], [79.8, 13577.0], [79.9, 13678.0], [80.0, 13767.0], [80.1, 13818.0], [80.2, 13820.0], [80.3, 13821.0], [80.4, 13821.0], [80.5, 13821.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13824.0], [81.9, 13824.0], [82.0, 13825.0], [82.1, 13827.0], [82.2, 13828.0], [82.3, 13830.0], [82.4, 13855.0], [82.5, 13899.0], [82.6, 13919.0], [82.7, 13968.0], [82.8, 14080.0], [82.9, 14149.0], [83.0, 14212.0], [83.1, 14241.0], [83.2, 14286.0], [83.3, 14332.0], [83.4, 14332.0], [83.5, 14333.0], [83.6, 14334.0], [83.7, 14334.0], [83.8, 14334.0], [83.9, 14334.0], [84.0, 14334.0], [84.1, 14334.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14336.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14337.0], [85.6, 14337.0], [85.7, 14337.0], [85.8, 14337.0], [85.9, 14339.0], [86.0, 14380.0], [86.1, 14457.0], [86.2, 14591.0], [86.3, 14591.0], [86.4, 14592.0], [86.5, 14592.0], [86.6, 14602.0], [86.7, 14846.0], [86.8, 14847.0], [86.9, 14847.0], [87.0, 14848.0], [87.1, 15102.0], [87.2, 15209.0], [87.3, 15357.0], [87.4, 15360.0], [87.5, 15360.0], [87.6, 15518.0], [87.7, 15611.0], [87.8, 15615.0], [87.9, 15616.0], [88.0, 15620.0], [88.1, 15648.0], [88.2, 15688.0], [88.3, 16127.0], [88.4, 16136.0], [88.5, 16223.0], [88.6, 16383.0], [88.7, 16388.0], [88.8, 16683.0], [88.9, 16900.0], [89.0, 17404.0], [89.1, 17408.0], [89.2, 17408.0], [89.3, 17412.0], [89.4, 17923.0], [89.5, 18022.0], [89.6, 18197.0], [89.7, 18952.0], [89.8, 19206.0], [89.9, 19586.0], [90.0, 19707.0], [90.1, 19712.0], [90.2, 19906.0], [90.3, 19968.0], [90.4, 20025.0], [90.5, 20139.0], [90.6, 20480.0], [90.7, 22550.0], [90.8, 26229.0], [90.9, 26310.0], [91.0, 26368.0], [91.1, 26463.0], [91.2, 26798.0], [91.3, 29696.0], [91.4, 29697.0], [91.5, 32884.0], [91.6, 36155.0], [91.7, 37099.0], [91.8, 41196.0], [91.9, 49150.0], [92.0, 53372.0], [92.1, 53526.0], [92.2, 53548.0], [92.3, 53786.0], [92.4, 56137.0], [92.5, 57570.0], [92.6, 58662.0], [92.7, 59719.0], [92.8, 62572.0], [92.9, 65846.0], [93.0, 70406.0], [93.1, 74240.0], [93.2, 74326.0], [93.3, 82176.0], [93.4, 82597.0], [93.5, 93758.0], [93.6, 95547.0], [93.7, 102151.0], [93.8, 105342.0], [93.9, 105437.0], [94.0, 105534.0], [94.1, 105753.0], [94.2, 105852.0], [94.3, 105961.0], [94.4, 105983.0], [94.5, 105985.0], [94.6, 106046.0], [94.7, 106096.0], [94.8, 106239.0], [94.9, 106239.0], [95.0, 106268.0], [95.1, 106294.0], [95.2, 106469.0], [95.3, 106495.0], [95.4, 106496.0], [95.5, 106497.0], [95.6, 106657.0], [95.7, 106750.0], [95.8, 106751.0], [95.9, 106751.0], [96.0, 106752.0], [96.1, 106851.0], [96.2, 106900.0], [96.3, 107045.0], [96.4, 107143.0], [96.5, 107243.0], [96.6, 107263.0], [96.7, 107264.0], [96.8, 107265.0], [96.9, 107266.0], [97.0, 107266.0], [97.1, 110438.0], [97.2, 110591.0], [97.3, 114687.0], [97.4, 115726.0], [97.5, 118272.0], [97.6, 126208.0], [97.7, 127486.0], [97.8, 127489.0], [97.9, 127489.0], [98.0, 127741.0], [98.1, 129251.0], [98.2, 131072.0], [98.3, 131072.0], [98.4, 132300.0], [98.5, 140543.0], [98.6, 144383.0], [98.7, 144641.0], [98.8, 144896.0], [98.9, 148224.0], [99.0, 148229.0], [99.1, 152921.0], [99.2, 160000.0], [99.3, 166401.0], [99.4, 170240.0], [99.5, 178687.0], [99.6, 187393.0], [99.7, 200959.0], [99.8, 211456.0], [99.9, 221444.0], [100.0, 221444.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 635.0, "series": [{"data": [[0.0, 144.0], [144800.0, 2.0], [156900.0, 1.0], [168100.0, 1.0], [105900.0, 2.0], [106700.0, 7.0], [148200.0, 2.0], [178600.0, 3.0], [50100.0, 1.0], [53700.0, 1.0], [54100.0, 1.0], [54900.0, 1.0], [56900.0, 1.0], [229100.0, 1.0], [57700.0, 1.0], [95400.0, 1.0], [500.0, 2.0], [127400.0, 3.0], [600.0, 3.0], [156400.0, 1.0], [700.0, 4.0], [800.0, 3.0], [1100.0, 1.0], [1200.0, 1.0], [1300.0, 7.0], [1400.0, 1.0], [1500.0, 2.0], [1600.0, 2.0], [2000.0, 1.0], [2100.0, 2.0], [2300.0, 1.0], [2200.0, 1.0], [2400.0, 2.0], [2500.0, 3.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 3.0], [3500.0, 2.0], [3600.0, 2.0], [3700.0, 2.0], [3800.0, 3.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 2.0], [4300.0, 1.0], [4600.0, 2.0], [4400.0, 1.0], [4500.0, 1.0], [73700.0, 1.0], [4800.0, 1.0], [5000.0, 1.0], [5100.0, 3.0], [5300.0, 1.0], [5600.0, 3.0], [5500.0, 1.0], [5700.0, 2.0], [6000.0, 3.0], [6100.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [98500.0, 2.0], [6600.0, 1.0], [6500.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7100.0, 32.0], [7200.0, 2.0], [7400.0, 62.0], [7600.0, 44.0], [7700.0, 1.0], [7900.0, 65.0], [7800.0, 2.0], [8100.0, 44.0], [8000.0, 2.0], [8200.0, 3.0], [8400.0, 7.0], [8700.0, 43.0], [8500.0, 2.0], [8600.0, 4.0], [9000.0, 1.0], [8800.0, 3.0], [9200.0, 44.0], [8900.0, 22.0], [143800.0, 2.0], [9400.0, 5.0], [9300.0, 6.0], [9700.0, 40.0], [9600.0, 5.0], [9500.0, 7.0], [9800.0, 8.0], [9900.0, 26.0], [10100.0, 7.0], [10200.0, 39.0], [10000.0, 6.0], [10400.0, 13.0], [10300.0, 15.0], [10700.0, 40.0], [10500.0, 9.0], [10600.0, 11.0], [10900.0, 16.0], [10800.0, 20.0], [11100.0, 9.0], [11000.0, 49.0], [11200.0, 28.0], [11300.0, 8.0], [11500.0, 19.0], [11700.0, 20.0], [11600.0, 7.0], [11400.0, 6.0], [11800.0, 10.0], [12000.0, 7.0], [12100.0, 4.0], [12200.0, 24.0], [11900.0, 2.0], [12700.0, 16.0], [12400.0, 1.0], [12500.0, 10.0], [12600.0, 3.0], [12300.0, 1.0], [13300.0, 411.0], [13100.0, 3.0], [13000.0, 4.0], [12800.0, 2.0], [13200.0, 3.0], [13500.0, 6.0], [13400.0, 1.0], [13800.0, 47.0], [13700.0, 1.0], [13600.0, 1.0], [14000.0, 8.0], [14300.0, 49.0], [13900.0, 1.0], [14500.0, 14.0], [14800.0, 4.0], [14600.0, 1.0], [14900.0, 2.0], [15300.0, 5.0], [15200.0, 1.0], [15100.0, 9.0], [15600.0, 7.0], [15500.0, 2.0], [15700.0, 1.0], [15400.0, 1.0], [16300.0, 2.0], [16100.0, 6.0], [16200.0, 1.0], [16600.0, 2.0], [17400.0, 6.0], [17600.0, 2.0], [18000.0, 1.0], [19400.0, 1.0], [18600.0, 4.0], [19200.0, 3.0], [19000.0, 1.0], [20400.0, 3.0], [20000.0, 1.0], [19600.0, 1.0], [20600.0, 1.0], [22000.0, 1.0], [24800.0, 1.0], [26600.0, 1.0], [27600.0, 2.0], [28600.0, 5.0], [29400.0, 2.0], [29600.0, 7.0], [34800.0, 2.0], [53200.0, 3.0], [54400.0, 1.0], [57600.0, 1.0], [106400.0, 5.0], [107200.0, 8.0], [113600.0, 1.0], [127200.0, 1.0], [160000.0, 1.0], [200900.0, 1.0], [109500.0, 6.0], [211400.0, 1.0], [132300.0, 1.0], [51100.0, 2.0], [53500.0, 3.0], [56300.0, 1.0], [57500.0, 5.0], [57900.0, 1.0], [105400.0, 1.0], [106200.0, 1.0], [118200.0, 2.0], [119800.0, 1.0], [126200.0, 1.0], [131000.0, 2.0], [82100.0, 1.0], [127700.0, 1.0], [144600.0, 2.0], [170200.0, 1.0], [221400.0, 1.0], [17500.0, 1.0], [17900.0, 1.0], [18900.0, 1.0], [19300.0, 1.0], [19700.0, 5.0], [19900.0, 2.0], [26300.0, 4.0], [27300.0, 1.0], [31700.0, 1.0], [211100.0, 1.0], [57000.0, 1.0], [57800.0, 1.0], [58600.0, 1.0], [93200.0, 1.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 294.0], [132000.0, 4.0], [144800.0, 2.0], [186400.0, 1.0], [218400.0, 1.0], [156900.0, 1.0], [227300.0, 3.0], [67500.0, 2.0], [105900.0, 9.0], [106700.0, 11.0], [107500.0, 1.0], [113100.0, 2.0], [137000.0, 1.0], [148200.0, 6.0], [153000.0, 2.0], [178600.0, 2.0], [144300.0, 2.0], [37300.0, 1.0], [52900.0, 1.0], [54100.0, 1.0], [53700.0, 1.0], [58500.0, 1.0], [58900.0, 1.0], [59700.0, 1.0], [63700.0, 1.0], [67400.0, 1.0], [105800.0, 1.0], [106600.0, 1.0], [108200.0, 2.0], [114600.0, 3.0], [110600.0, 1.0], [127400.0, 1.0], [156400.0, 1.0], [1100.0, 28.0], [1200.0, 71.0], [1300.0, 21.0], [1400.0, 20.0], [1500.0, 16.0], [1600.0, 18.0], [1700.0, 15.0], [1800.0, 18.0], [1900.0, 21.0], [2000.0, 17.0], [2100.0, 24.0], [2200.0, 14.0], [2300.0, 21.0], [2400.0, 31.0], [2500.0, 18.0], [2600.0, 20.0], [2800.0, 12.0], [2700.0, 12.0], [2900.0, 11.0], [3000.0, 11.0], [3100.0, 16.0], [3200.0, 13.0], [3300.0, 5.0], [3400.0, 11.0], [3500.0, 11.0], [3700.0, 27.0], [3600.0, 37.0], [3800.0, 18.0], [3900.0, 15.0], [4000.0, 23.0], [4200.0, 33.0], [4100.0, 27.0], [4300.0, 29.0], [68100.0, 1.0], [4400.0, 14.0], [4600.0, 15.0], [4500.0, 14.0], [73700.0, 1.0], [4700.0, 10.0], [4800.0, 20.0], [4900.0, 12.0], [5000.0, 25.0], [5100.0, 6.0], [5200.0, 8.0], [5300.0, 10.0], [5400.0, 10.0], [5500.0, 12.0], [5600.0, 12.0], [5700.0, 9.0], [5800.0, 10.0], [5900.0, 21.0], [6000.0, 25.0], [6100.0, 37.0], [6200.0, 37.0], [6300.0, 12.0], [98500.0, 1.0], [6600.0, 20.0], [6400.0, 19.0], [6500.0, 16.0], [105700.0, 3.0], [6700.0, 12.0], [6800.0, 23.0], [6900.0, 12.0], [106500.0, 2.0], [110500.0, 1.0], [7100.0, 79.0], [7000.0, 10.0], [7200.0, 8.0], [7300.0, 12.0], [7400.0, 111.0], [115300.0, 1.0], [7600.0, 90.0], [7500.0, 10.0], [7800.0, 6.0], [7700.0, 4.0], [7900.0, 100.0], [8000.0, 12.0], [8100.0, 83.0], [8300.0, 23.0], [8200.0, 28.0], [8400.0, 50.0], [8600.0, 16.0], [8500.0, 30.0], [8700.0, 77.0], [9100.0, 35.0], [8800.0, 5.0], [8900.0, 33.0], [9000.0, 28.0], [9200.0, 97.0], [9300.0, 34.0], [9600.0, 29.0], [9700.0, 94.0], [9400.0, 26.0], [9500.0, 20.0], [10000.0, 85.0], [9900.0, 75.0], [9800.0, 17.0], [10200.0, 167.0], [10100.0, 107.0], [10300.0, 156.0], [10400.0, 183.0], [10500.0, 229.0], [10600.0, 272.0], [10700.0, 259.0], [11200.0, 439.0], [10900.0, 263.0], [10800.0, 217.0], [11000.0, 361.0], [11100.0, 324.0], [11300.0, 430.0], [11400.0, 423.0], [11600.0, 303.0], [11500.0, 353.0], [11700.0, 241.0], [11900.0, 167.0], [11800.0, 199.0], [12000.0, 124.0], [12100.0, 84.0], [12200.0, 105.0], [12300.0, 67.0], [12500.0, 45.0], [12400.0, 54.0], [12600.0, 24.0], [12700.0, 21.0], [12800.0, 12.0], [12900.0, 3.0], [13300.0, 635.0], [13200.0, 16.0], [13000.0, 5.0], [13100.0, 5.0], [13800.0, 95.0], [13700.0, 3.0], [13400.0, 20.0], [13600.0, 2.0], [13500.0, 3.0], [14000.0, 7.0], [14100.0, 6.0], [14200.0, 5.0], [14300.0, 85.0], [13900.0, 5.0], [14800.0, 19.0], [14700.0, 6.0], [14500.0, 24.0], [14400.0, 6.0], [14600.0, 4.0], [14900.0, 8.0], [15300.0, 14.0], [15200.0, 8.0], [15000.0, 5.0], [15100.0, 5.0], [15500.0, 3.0], [15600.0, 10.0], [15400.0, 5.0], [15700.0, 1.0], [15800.0, 9.0], [16000.0, 2.0], [16200.0, 2.0], [16300.0, 14.0], [15900.0, 1.0], [16100.0, 2.0], [17400.0, 8.0], [16600.0, 2.0], [16400.0, 1.0], [16800.0, 4.0], [17000.0, 2.0], [17200.0, 1.0], [18000.0, 1.0], [18400.0, 1.0], [17600.0, 5.0], [17800.0, 2.0], [18200.0, 1.0], [19400.0, 1.0], [18600.0, 7.0], [19200.0, 3.0], [20400.0, 3.0], [20200.0, 2.0], [20000.0, 2.0], [20800.0, 2.0], [21200.0, 1.0], [22000.0, 1.0], [21800.0, 1.0], [23800.0, 1.0], [26400.0, 4.0], [26600.0, 1.0], [26200.0, 1.0], [27600.0, 5.0], [29600.0, 3.0], [34800.0, 1.0], [43600.0, 1.0], [53200.0, 2.0], [51200.0, 1.0], [54800.0, 1.0], [58800.0, 6.0], [57600.0, 2.0], [101600.0, 1.0], [106400.0, 7.0], [107200.0, 12.0], [114400.0, 1.0], [119200.0, 1.0], [127200.0, 1.0], [160000.0, 2.0], [167300.0, 1.0], [200900.0, 2.0], [67900.0, 1.0], [105500.0, 1.0], [107100.0, 2.0], [109500.0, 5.0], [211400.0, 1.0], [132300.0, 2.0], [53100.0, 2.0], [54700.0, 8.0], [58700.0, 1.0], [57500.0, 3.0], [66200.0, 1.0], [74200.0, 2.0], [99800.0, 1.0], [106200.0, 5.0], [105400.0, 2.0], [107000.0, 1.0], [118200.0, 3.0], [126200.0, 1.0], [131000.0, 4.0], [157200.0, 1.0], [140500.0, 4.0], [77300.0, 1.0], [106100.0, 3.0], [109300.0, 1.0], [144600.0, 1.0], [170200.0, 2.0], [221400.0, 7.0], [17100.0, 7.0], [16700.0, 4.0], [16900.0, 2.0], [17300.0, 1.0], [16500.0, 1.0], [17900.0, 2.0], [18700.0, 1.0], [18900.0, 1.0], [18500.0, 1.0], [19100.0, 2.0], [19300.0, 1.0], [19900.0, 3.0], [19700.0, 2.0], [20300.0, 4.0], [19500.0, 1.0], [20500.0, 1.0], [21100.0, 3.0], [20900.0, 1.0], [21300.0, 2.0], [21700.0, 1.0], [24300.0, 1.0], [26300.0, 9.0], [26700.0, 1.0], [28100.0, 1.0], [33800.0, 1.0], [36600.0, 1.0], [50200.0, 1.0], [201500.0, 1.0], [211100.0, 1.0], [55000.0, 1.0], [58600.0, 1.0], [68400.0, 1.0], [106000.0, 1.0], [130000.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 170.0], [132000.0, 1.0], [144800.0, 2.0], [187300.0, 1.0], [74700.0, 1.0], [95500.0, 1.0], [105900.0, 6.0], [106700.0, 7.0], [113100.0, 1.0], [116300.0, 1.0], [128300.0, 1.0], [148200.0, 5.0], [178600.0, 2.0], [100.0, 1.0], [36100.0, 1.0], [144300.0, 2.0], [39300.0, 1.0], [200.0, 2.0], [53300.0, 1.0], [54500.0, 1.0], [53700.0, 2.0], [56100.0, 1.0], [59300.0, 1.0], [59700.0, 1.0], [62500.0, 1.0], [65800.0, 1.0], [400.0, 1.0], [105800.0, 3.0], [106600.0, 1.0], [114600.0, 1.0], [122600.0, 1.0], [500.0, 1.0], [127400.0, 5.0], [600.0, 3.0], [700.0, 2.0], [900.0, 1.0], [1000.0, 3.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 3.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 1.0], [2700.0, 1.0], [2800.0, 5.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 3.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4100.0, 1.0], [4500.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [73700.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [4900.0, 2.0], [5100.0, 2.0], [5000.0, 2.0], [5300.0, 3.0], [5200.0, 1.0], [82500.0, 2.0], [5400.0, 2.0], [5500.0, 2.0], [5600.0, 1.0], [5700.0, 1.0], [93700.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [98500.0, 1.0], [105700.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 2.0], [107300.0, 1.0], [106500.0, 1.0], [110500.0, 2.0], [7000.0, 5.0], [7100.0, 42.0], [7200.0, 7.0], [7300.0, 5.0], [7400.0, 58.0], [7500.0, 3.0], [7600.0, 44.0], [7800.0, 7.0], [7900.0, 66.0], [7700.0, 2.0], [8000.0, 4.0], [8100.0, 48.0], [8400.0, 10.0], [8200.0, 4.0], [8300.0, 2.0], [8500.0, 3.0], [8700.0, 44.0], [8600.0, 4.0], [9000.0, 11.0], [8800.0, 6.0], [8900.0, 22.0], [9100.0, 10.0], [9200.0, 33.0], [143800.0, 1.0], [9500.0, 11.0], [9600.0, 6.0], [9400.0, 7.0], [9300.0, 4.0], [9700.0, 36.0], [9800.0, 9.0], [10200.0, 31.0], [9900.0, 39.0], [10000.0, 9.0], [10100.0, 9.0], [10300.0, 10.0], [10600.0, 8.0], [10500.0, 7.0], [10700.0, 17.0], [10400.0, 20.0], [11200.0, 16.0], [10900.0, 3.0], [11100.0, 4.0], [11000.0, 35.0], [10800.0, 2.0], [11500.0, 10.0], [11700.0, 18.0], [11600.0, 3.0], [11300.0, 5.0], [11400.0, 4.0], [11800.0, 7.0], [12000.0, 4.0], [12200.0, 20.0], [12100.0, 1.0], [11900.0, 1.0], [12500.0, 11.0], [12400.0, 3.0], [12300.0, 2.0], [12700.0, 11.0], [12600.0, 2.0], [13300.0, 409.0], [13200.0, 32.0], [13100.0, 9.0], [12900.0, 1.0], [12800.0, 5.0], [13000.0, 7.0], [13400.0, 11.0], [13500.0, 6.0], [13600.0, 2.0], [13800.0, 49.0], [13700.0, 2.0], [14000.0, 3.0], [14100.0, 2.0], [14300.0, 54.0], [14200.0, 6.0], [13900.0, 3.0], [14500.0, 9.0], [14800.0, 7.0], [14400.0, 2.0], [14600.0, 1.0], [15000.0, 1.0], [15300.0, 6.0], [15100.0, 2.0], [15200.0, 1.0], [15600.0, 11.0], [15500.0, 3.0], [16200.0, 1.0], [16300.0, 4.0], [16100.0, 5.0], [17200.0, 1.0], [16800.0, 1.0], [16400.0, 1.0], [17400.0, 6.0], [16600.0, 1.0], [18000.0, 1.0], [18600.0, 1.0], [19200.0, 2.0], [20400.0, 2.0], [20000.0, 2.0], [21600.0, 1.0], [26400.0, 1.0], [26200.0, 2.0], [26600.0, 1.0], [29600.0, 4.0], [32800.0, 1.0], [170300.0, 1.0], [47200.0, 1.0], [64000.0, 1.0], [70400.0, 1.0], [106400.0, 7.0], [105600.0, 1.0], [102400.0, 1.0], [107200.0, 12.0], [110400.0, 1.0], [127200.0, 1.0], [160000.0, 1.0], [166400.0, 2.0], [152900.0, 1.0], [200900.0, 2.0], [74300.0, 1.0], [106300.0, 1.0], [105500.0, 1.0], [107100.0, 1.0], [115100.0, 1.0], [187400.0, 1.0], [211400.0, 1.0], [33500.0, 1.0], [132300.0, 2.0], [156300.0, 1.0], [41100.0, 1.0], [49100.0, 1.0], [53100.0, 1.0], [53500.0, 4.0], [57500.0, 3.0], [62300.0, 1.0], [74200.0, 2.0], [106200.0, 8.0], [105400.0, 3.0], [107000.0, 3.0], [118200.0, 1.0], [126200.0, 1.0], [131000.0, 3.0], [140500.0, 1.0], [69300.0, 1.0], [82100.0, 1.0], [94100.0, 1.0], [102100.0, 1.0], [105300.0, 1.0], [106900.0, 1.0], [115700.0, 1.0], [127700.0, 1.0], [144600.0, 1.0], [170200.0, 1.0], [221400.0, 3.0], [16900.0, 1.0], [17500.0, 1.0], [18100.0, 2.0], [17900.0, 2.0], [18900.0, 1.0], [19900.0, 4.0], [19700.0, 5.0], [19500.0, 2.0], [20100.0, 1.0], [22500.0, 1.0], [25300.0, 1.0], [26300.0, 4.0], [26700.0, 1.0], [36200.0, 1.0], [37000.0, 1.0], [164700.0, 1.0], [58600.0, 1.0], [106000.0, 3.0], [106800.0, 3.0], [130000.0, 1.0], [129200.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 229100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7757.0, "series": [{"data": [[1.0, 178.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5580.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7757.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.142857142857142, "minX": 1.5393903E12, "maxY": 498.53623188405794, "series": [{"data": [[1.53939066E12, 335.87564469914025], [1.53939048E12, 155.4656019656017], [1.53939096E12, 177.01428571428576], [1.53939054E12, 215.96573604060916], [1.53939036E12, 37.47421383647801], [1.53939084E12, 498.53623188405794], [1.53939042E12, 95.47073474470724], [1.5393909E12, 494.0460273972601], [1.53939072E12, 395.66947250280555], [1.5393903E12, 4.142857142857142], [1.53939078E12, 455.1357439241258], [1.5393906E12, 280.09122807017565]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939096E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 229116.0, "series": [{"data": [[2.0, 109568.0], [3.0, 1031.0], [5.0, 1333.0], [6.0, 3521.5], [7.0, 1023.5], [9.0, 87919.2], [10.0, 954.0], [11.0, 810.0], [12.0, 336.5], [14.0, 74485.66666666667], [15.0, 694.0], [16.0, 561.0], [17.0, 739.0], [18.0, 646.0], [20.0, 1616.0], [21.0, 1535.0], [22.0, 895.0], [23.0, 1129.0], [24.0, 846.0], [26.0, 1446.0], [27.0, 1485.0], [28.0, 169343.5], [29.0, 2336.0], [31.0, 2411.0], [32.0, 2491.0], [33.0, 2173.5], [34.0, 1581.0], [36.0, 2506.0], [37.0, 2593.0], [38.0, 2559.0], [39.0, 2169.0], [40.0, 2184.0], [42.0, 2771.0], [43.0, 3113.0], [44.0, 54945.0], [45.0, 106495.33333333333], [46.0, 3201.5], [47.0, 2808.0], [49.0, 3415.0], [50.0, 3625.0], [51.0, 3733.0], [52.0, 3335.0], [54.0, 3437.5], [55.0, 3173.0], [57.0, 3975.0], [59.0, 3953.0], [60.0, 3633.0], [61.0, 86530.8], [62.0, 81741.5], [63.0, 3539.0], [65.0, 4256.5], [66.0, 3881.0], [68.0, 4074.0], [69.0, 4080.0], [70.0, 3984.0], [71.0, 4169.0], [72.0, 4339.0], [74.0, 135276.75], [75.0, 4448.0], [76.0, 4555.0], [77.0, 4680.0], [78.0, 4828.0], [80.0, 5158.0], [81.0, 5314.0], [82.0, 5185.0], [84.0, 5671.0], [86.0, 6059.0], [87.0, 30296.0], [88.0, 5654.0], [89.0, 5566.0], [90.0, 5704.0], [91.0, 54461.0], [92.0, 30191.0], [93.0, 31622.0], [94.0, 29938.5], [95.0, 5716.0], [96.0, 29798.5], [97.0, 6034.0], [98.0, 6608.0], [99.0, 30290.0], [101.0, 6863.0], [102.0, 6549.0], [100.0, 56338.0], [104.0, 9439.0], [105.0, 7343.0], [106.0, 7223.0], [108.0, 8221.0], [109.0, 7430.0], [110.0, 7993.0], [113.0, 8136.0], [114.0, 56984.5], [115.0, 9393.5], [117.0, 8283.0], [118.0, 8284.0], [119.0, 56931.0], [116.0, 106751.0], [120.0, 8497.0], [121.0, 8045.0], [122.0, 7961.0], [123.0, 87341.0], [124.0, 8771.0], [125.0, 8735.0], [126.0, 8585.0], [128.0, 8846.0], [130.0, 82906.0], [131.0, 8892.0], [132.0, 8643.0], [133.0, 8773.0], [134.0, 8749.0], [136.0, 9148.5], [137.0, 8582.0], [140.0, 9600.0], [141.0, 9748.0], [142.0, 9358.0], [144.0, 9719.0], [146.0, 10158.0], [147.0, 15062.0], [148.0, 15468.0], [149.0, 9637.0], [151.0, 9643.0], [152.0, 10129.0], [154.0, 9985.0], [155.0, 9778.0], [157.0, 10737.0], [158.0, 10887.0], [159.0, 10081.0], [156.0, 132352.0], [160.0, 10524.0], [161.0, 14017.5], [162.0, 14942.5], [163.0, 9735.0], [164.0, 14309.5], [165.0, 10646.0], [168.0, 9891.0], [170.0, 9724.0], [172.0, 15430.5], [173.0, 10467.0], [171.0, 19723.0], [176.0, 11121.0], [180.0, 15005.0], [182.0, 19222.0], [189.0, 19312.0], [195.0, 10977.0], [197.0, 26331.666666666664], [199.0, 57878.0], [196.0, 57926.0], [193.0, 19064.0], [203.0, 10145.0], [204.0, 10984.0], [205.0, 26298.666666666664], [207.0, 57571.0], [209.0, 34355.5], [213.0, 11107.0], [214.0, 34273.0], [215.0, 11851.0], [211.0, 57535.0], [210.0, 57537.0], [217.0, 11052.0], [223.0, 57738.0], [221.0, 57076.0], [224.0, 11334.0], [227.0, 11030.0], [229.0, 10337.0], [231.0, 10902.0], [230.0, 15458.0], [234.0, 10886.0], [235.0, 13323.5], [237.0, 10984.0], [236.0, 15121.0], [241.0, 19572.5], [242.0, 10836.0], [245.0, 12062.0], [246.0, 13311.0], [243.0, 16185.0], [251.0, 10909.0], [252.0, 11919.5], [253.0, 14643.0], [255.0, 22015.0], [254.0, 16239.0], [269.0, 10375.0], [258.0, 11097.0], [262.0, 18307.0], [263.0, 11743.5], [264.0, 11615.666666666666], [265.0, 15395.0], [270.0, 21119.0], [271.0, 10581.0], [257.0, 15696.0], [273.0, 10240.333333333334], [272.0, 8584.5], [274.0, 12102.333333333334], [284.0, 12625.666666666666], [285.0, 7679.0], [286.0, 11109.6], [276.0, 26367.0], [277.0, 12077.5], [278.0, 14807.5], [279.0, 7679.0], [280.0, 6782.0], [281.0, 13311.0], [282.0, 20505.2], [283.0, 8191.0], [289.0, 22102.333333333332], [288.0, 17392.333333333332], [290.0, 12803.25], [291.0, 10283.0], [300.0, 10958.6], [301.0, 10307.0], [302.0, 10826.0], [303.0, 6826.0], [292.0, 15291.0], [293.0, 8874.0], [294.0, 39005.666666666664], [296.0, 15883.777777777777], [297.0, 12879.111111111111], [298.0, 18633.714285714286], [299.0, 10648.8], [305.0, 17719.444444444445], [304.0, 7295.5], [306.0, 8446.833333333334], [307.0, 10814.25], [308.0, 8289.5], [309.0, 34815.0], [310.0, 7679.0], [311.0, 16298.333333333334], [312.0, 11647.25], [318.0, 8343.9], [319.0, 10068.333333333332], [316.0, 7751.799999999999], [317.0, 10690.199999999999], [313.0, 13927.2], [314.0, 13311.5], [315.0, 8102.375], [321.0, 8958.333333333334], [320.0, 8831.0], [322.0, 7767.5], [323.0, 9502.428571428572], [324.0, 11712.666666666666], [325.0, 13439.0], [326.0, 12325.5], [327.0, 8384.333333333334], [328.0, 19456.0], [334.0, 8639.0], [335.0, 7805.333333333334], [332.0, 12715.0], [333.0, 8191.0], [329.0, 10932.88888888889], [330.0, 13311.333333333334], [331.0, 9095.4], [337.0, 8240.272727272728], [336.0, 11079.5], [338.0, 9118.375], [348.0, 11642.0], [349.0, 8726.363636363636], [341.0, 11432.666666666666], [342.0, 9214.5], [343.0, 11843.0], [344.0, 10383.8], [345.0, 10689.199999999999], [346.0, 11135.75], [347.0, 8704.0], [353.0, 10775.454545454546], [352.0, 10466.444444444443], [354.0, 9873.444444444445], [365.0, 9642.666666666666], [366.0, 12926.5], [367.0, 10214.85], [356.0, 13411.8], [357.0, 10325.416666666666], [358.0, 11960.0], [359.0, 9582.5], [360.0, 9662.25], [361.0, 13315.0], [362.0, 7675.0], [363.0, 11839.333333333334], [371.0, 9519.166666666668], [369.0, 3966.5], [368.0, 5375.5], [370.0, 11063.25], [372.0, 14032.0], [375.0, 8509.166666666668], [376.0, 11908.8125], [382.0, 9152.0], [383.0, 9898.0], [380.0, 9432.0], [381.0, 8422.2], [377.0, 10309.5], [378.0, 11004.0], [379.0, 11772.0], [385.0, 5120.0], [384.0, 7508.700000000002], [386.0, 1.0], [387.0, 9258.0], [388.0, 9982.333333333334], [389.0, 9875.0], [390.0, 10557.199999999999], [391.0, 12684.0], [392.0, 7662.6], [398.0, 8874.333333333334], [399.0, 11027.25], [396.0, 18346.0], [397.0, 9011.2], [393.0, 10998.0], [394.0, 10752.0], [401.0, 11416.57142857143], [400.0, 11662.714285714286], [402.0, 11902.5], [403.0, 13311.250000000002], [404.0, 10496.75], [405.0, 10407.5], [406.0, 8671.375], [407.0, 10579.888888888889], [408.0, 10206.8], [415.0, 9088.0], [412.0, 11650.5], [414.0, 15103.0], [409.0, 8822.5], [410.0, 5680.5], [411.0, 9197.0], [417.0, 7296.333333333333], [416.0, 8709.923076923076], [418.0, 9692.666666666666], [419.0, 13315.666666666666], [420.0, 9161.333333333334], [421.0, 12070.4], [422.0, 8086.5], [423.0, 14218.0], [424.0, 6656.0], [430.0, 11441.874999999998], [431.0, 11775.166666666666], [428.0, 5315.0], [429.0, 12843.857142857143], [425.0, 10366.75], [426.0, 9042.0], [427.0, 12251.0], [433.0, 11974.5], [432.0, 15516.0], [434.0, 8163.777777777777], [435.0, 13311.833333333332], [436.0, 8186.0], [437.0, 9846.0], [438.0, 9706.285714285714], [439.0, 6553.8], [440.0, 22668.5], [447.0, 10670.5], [444.0, 12320.5], [446.0, 42563.5], [441.0, 7021.142857142857], [442.0, 12916.75], [443.0, 12271.0], [450.0, 15372.999999999998], [448.0, 6495.25], [451.0, 9696.0], [460.0, 30008.0], [461.0, 12390.4], [462.0, 49587.071428571435], [463.0, 12698.57142857143], [452.0, 11122.090909090908], [453.0, 10107.333333333334], [454.0, 29568.0], [455.0, 7936.0], [456.0, 98560.0], [459.0, 13311.0], [457.0, 148223.0], [466.0, 13311.5], [464.0, 21275.5], [467.0, 11007.0], [476.0, 12123.0], [479.0, 7252.666666666667], [468.0, 1.0], [469.0, 13824.666666666666], [470.0, 9936.333333333334], [471.0, 8232.75], [472.0, 11922.25], [473.0, 7082.333333333334], [474.0, 11157.666666666666], [475.0, 10351.333333333334], [481.0, 19120.384615384617], [480.0, 9215.0], [482.0, 11092.5], [483.0, 21084.000000000004], [484.0, 13311.5], [485.0, 11451.0], [486.0, 6656.5], [487.0, 11584.0], [488.0, 11469.2], [494.0, 11926.444444444445], [495.0, 12153.000000000002], [492.0, 9984.0], [493.0, 11246.0], [489.0, 9407.111111111113], [490.0, 9611.333333333334], [491.0, 8792.0], [496.0, 12544.0], [497.0, 28266.428571428572], [498.0, 18691.0], [499.0, 44372.833333333336], [500.0, 16488.36170212766], [1.0, 229116.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[381.6736222578919, 15463.546281433893]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 1237.0], [5.0, 1253.5], [6.0, 809.0], [7.0, 1213.25], [8.0, 14788.875], [9.0, 23165.2], [10.0, 1226.4], [11.0, 1229.2222222222224], [12.0, 1208.1111111111113], [13.0, 1287.888888888889], [14.0, 25678.0], [15.0, 1201.5454545454545], [16.0, 1511.6666666666665], [17.0, 1254.818181818182], [18.0, 17030.214285714286], [19.0, 1364.0], [20.0, 1366.0909090909092], [21.0, 1500.6153846153845], [22.0, 90767.58823529411], [23.0, 1935.4374999999998], [24.0, 1924.857142857143], [25.0, 1673.6666666666667], [26.0, 1810.0000000000002], [27.0, 1883.4615384615386], [28.0, 22831.375], [29.0, 2007.0], [30.0, 1806.0833333333335], [31.0, 2367.142857142857], [32.0, 2028.4666666666665], [33.0, 2280.6923076923076], [34.0, 2277.5555555555557], [35.0, 2304.6923076923076], [36.0, 2404.076923076923], [37.0, 2475.8571428571427], [38.0, 2529.0000000000005], [39.0, 2469.615384615385], [40.0, 9604.2], [41.0, 2658.5384615384614], [42.0, 2855.818181818182], [43.0, 3008.538461538462], [44.0, 20295.833333333332], [45.0, 28763.3125], [46.0, 3290.785714285714], [47.0, 3417.7272727272725], [48.0, 3439.222222222222], [49.0, 3428.1818181818185], [50.0, 3552.3333333333335], [51.0, 3676.76923076923], [52.0, 3704.7692307692305], [53.0, 3779.833333333333], [54.0, 3755.0], [55.0, 3770.0833333333335], [56.0, 3882.0], [57.0, 3868.3999999999996], [58.0, 4434.999999999999], [59.0, 12754.666666666668], [60.0, 4157.384615384615], [61.0, 28010.58823529412], [62.0, 4190.25], [63.0, 4271.916666666666], [64.0, 4161.75], [65.0, 21829.16666666667], [66.0, 7815.75], [67.0, 8606.538461538461], [68.0, 4421.75], [69.0, 4404.416666666667], [70.0, 4568.076923076924], [71.0, 4762.142857142857], [72.0, 4856.8], [73.0, 4915.642857142856], [74.0, 33988.41666666667], [75.0, 8850.0], [76.0, 8911.076923076922], [77.0, 9126.307692307691], [78.0, 8742.428571428572], [79.0, 9986.416666666668], [80.0, 11091.333333333332], [81.0, 9283.857142857143], [82.0, 8792.8], [83.0, 9617.071428571428], [84.0, 10622.454545454546], [85.0, 10016.0], [86.0, 11277.7], [87.0, 6164.071428571429], [88.0, 10170.923076923076], [89.0, 9999.5], [90.0, 10032.461538461539], [91.0, 6358.090909090909], [92.0, 6241.53846153846], [93.0, 6178.363636363636], [94.0, 6260.538461538462], [95.0, 6374.461538461537], [96.0, 6982.666666666667], [97.0, 6610.214285714286], [98.0, 6675.5], [99.0, 6741.7], [100.0, 6807.785714285714], [101.0, 6920.200000000001], [102.0, 6964.428571428572], [103.0, 7090.5], [104.0, 7267.909090909091], [105.0, 7326.875], [106.0, 6970.833333333334], [107.0, 7889.9], [108.0, 7952.545454545453], [109.0, 8167.090909090909], [110.0, 8246.81818181818], [111.0, 8292.833333333334], [112.0, 8475.777777777777], [113.0, 8404.7], [114.0, 8737.000000000002], [115.0, 8675.4], [116.0, 14751.5], [117.0, 8327.0], [118.0, 8371.5], [119.0, 8408.214285714286], [120.0, 17295.636363636364], [121.0, 31692.35294117647], [122.0, 8543.9], [123.0, 41520.08333333333], [124.0, 8880.53846153846], [125.0, 9035.363636363636], [126.0, 9181.909090909094], [127.0, 34557.0], [128.0, 9622.555555555555], [129.0, 9381.076923076926], [130.0, 20182.428571428572], [131.0, 9670.384615384615], [132.0, 10307.785714285714], [133.0, 10389.5], [134.0, 10261.538461538461], [135.0, 9920.0], [136.0, 10327.75], [137.0, 10026.384615384615], [138.0, 10383.0], [139.0, 10248.833333333334], [140.0, 10630.307692307693], [141.0, 10448.666666666666], [142.0, 10574.214285714284], [143.0, 10769.0], [144.0, 10884.5], [145.0, 9944.785714285716], [146.0, 10667.466666666667], [147.0, 10134.785714285716], [148.0, 10618.0], [149.0, 10235.916666666666], [150.0, 10178.76923076923], [151.0, 10904.999999999998], [152.0, 10355.5], [153.0, 19863.307692307688], [154.0, 10473.0], [155.0, 21541.272727272728], [156.0, 10484.92857142857], [157.0, 10547.076923076924], [158.0, 10571.454545454546], [159.0, 11625.384615384615], [160.0, 10577.352941176468], [161.0, 10657.0], [162.0, 10525.600000000002], [163.0, 11182.357142857143], [164.0, 10526.818181818182], [165.0, 10497.846153846154], [166.0, 10508.249999999998], [167.0, 11074.533333333333], [168.0, 10346.562500000002], [169.0, 11144.333333333334], [170.0, 16560.25], [171.0, 10459.285714285716], [172.0, 10547.545454545456], [173.0, 10739.5625], [174.0, 14320.571428571428], [175.0, 15310.454545454544], [176.0, 15227.09090909091], [177.0, 10936.214285714283], [178.0, 14020.6875], [179.0, 14826.461538461539], [180.0, 11677.09090909091], [181.0, 18435.25], [182.0, 11510.6], [183.0, 11584.0], [184.0, 15047.42857142857], [185.0, 15636.250000000002], [186.0, 11560.300000000001], [187.0, 12165.23076923077], [188.0, 16023.384615384613], [189.0, 12110.312499999998], [190.0, 14242.882352941178], [191.0, 16042.333333333332], [192.0, 15548.692307692309], [193.0, 11055.307692307693], [194.0, 14438.25], [195.0, 11190.357142857143], [196.0, 10591.636363636364], [197.0, 10557.33333333333], [198.0, 10447.909090909092], [199.0, 10434.076923076922], [200.0, 10504.999999999998], [201.0, 11061.769230769232], [202.0, 11032.846153846154], [203.0, 11787.692307692309], [204.0, 11264.166666666666], [205.0, 10928.4], [206.0, 11056.583333333334], [207.0, 11476.800000000001], [208.0, 11348.461538461535], [209.0, 11527.111111111111], [210.0, 11869.461538461537], [211.0, 11403.642857142859], [212.0, 12367.333333333332], [213.0, 11668.23076923077], [214.0, 11750.499999999998], [215.0, 12137.142857142857], [216.0, 12476.75], [217.0, 11365.6875], [218.0, 12158.333333333334], [219.0, 11545.066666666666], [220.0, 11768.153846153848], [221.0, 11356.3], [222.0, 11840.833333333334], [223.0, 12438.5625], [224.0, 12009.416666666668], [225.0, 11894.363636363636], [226.0, 11723.5], [227.0, 11304.09090909091], [228.0, 11399.2], [229.0, 11870.933333333332], [230.0, 11589.666666666666], [231.0, 12267.75], [232.0, 12047.75], [233.0, 11937.533333333331], [234.0, 11736.357142857145], [235.0, 11590.818181818184], [236.0, 11584.999999999998], [237.0, 11771.384615384615], [238.0, 11735.909090909092], [239.0, 12724.642857142857], [240.0, 11890.692307692309], [241.0, 12765.272727272726], [242.0, 12436.166666666668], [243.0, 16024.000000000002], [244.0, 11746.230769230768], [245.0, 12033.266666666666], [246.0, 12346.214285714286], [247.0, 17738.199999999997], [248.0, 12064.500000000002], [249.0, 11780.333333333334], [250.0, 13751.076923076924], [251.0, 10853.071428571428], [252.0, 11964.090909090908], [253.0, 20466.72727272727], [254.0, 11732.083333333332], [255.0, 18668.999999999996], [257.0, 27871.0], [256.0, 11990.25], [258.0, 13216.153846153848], [259.0, 12242.785714285714], [260.0, 11758.384615384617], [261.0, 20295.533333333333], [262.0, 30779.375], [263.0, 12151.642857142859], [264.0, 11944.214285714286], [270.0, 11001.294117647061], [271.0, 10965.076923076924], [268.0, 11487.529411764706], [269.0, 12577.785714285714], [265.0, 12991.384615384615], [266.0, 21049.823529411766], [267.0, 11281.272727272728], [273.0, 10746.733333333334], [272.0, 10553.75], [274.0, 12305.6875], [275.0, 10799.785714285716], [276.0, 17938.600000000002], [277.0, 10778.538461538461], [278.0, 11807.499999999998], [279.0, 11000.538461538461], [280.0, 17166.187499999996], [286.0, 10919.75], [287.0, 12360.466666666669], [284.0, 23481.920000000002], [285.0, 11269.882352941177], [281.0, 11221.8], [282.0, 17848.941176470587], [283.0, 11691.454545454544], [289.0, 11097.529411764704], [288.0, 10932.999999999998], [290.0, 17555.06666666667], [291.0, 10798.615384615385], [292.0, 13761.9375], [293.0, 10440.187499999998], [294.0, 10826.875], [295.0, 10980.5], [296.0, 13554.85], [302.0, 10835.166666666666], [303.0, 14511.29166666667], [300.0, 10318.882352941177], [301.0, 10700.333333333332], [297.0, 12256.13043478261], [298.0, 20451.913043478264], [299.0, 11236.428571428574], [305.0, 10206.0], [304.0, 10897.4], [306.0, 11214.375], [307.0, 13001.217391304348], [308.0, 11040.615384615385], [309.0, 12539.133333333333], [310.0, 13172.125], [311.0, 16490.523809523813], [312.0, 9497.38888888889], [318.0, 10913.842105263157], [319.0, 16077.612903225812], [316.0, 10997.833333333334], [317.0, 18516.29411764706], [313.0, 12616.866666666665], [314.0, 11344.94117647059], [315.0, 10223.526315789477], [321.0, 9918.125], [320.0, 11435.473684210529], [322.0, 10392.42857142857], [323.0, 10468.21052631579], [324.0, 10245.599999999999], [325.0, 10750.357142857145], [326.0, 10241.4], [327.0, 8902.91304347826], [328.0, 10603.857142857141], [334.0, 8709.827586206897], [335.0, 8750.260869565216], [332.0, 10515.952380952382], [333.0, 9918.823529411764], [329.0, 13398.411764705885], [330.0, 11006.466666666669], [331.0, 11048.40909090909], [337.0, 9512.807692307695], [336.0, 9979.066666666668], [338.0, 9540.64705882353], [339.0, 11003.142857142857], [340.0, 11003.8], [341.0, 10884.157894736843], [342.0, 8969.166666666664], [343.0, 11532.714285714284], [344.0, 10145.076923076922], [350.0, 11141.529411764706], [351.0, 12186.076923076922], [348.0, 20511.333333333332], [349.0, 10464.172413793103], [345.0, 11084.000000000002], [346.0, 11427.499999999998], [347.0, 12063.133333333335], [353.0, 11254.652173913042], [352.0, 11535.947368421053], [354.0, 10276.185185185186], [355.0, 11489.933333333332], [356.0, 11282.470588235292], [357.0, 11086.843750000002], [358.0, 9995.444444444445], [359.0, 11159.545454545454], [360.0, 11088.142857142857], [366.0, 11047.176470588236], [367.0, 10624.999999999998], [364.0, 10449.7], [365.0, 11128.411764705881], [361.0, 11612.285714285716], [362.0, 9561.277777777777], [363.0, 10881.766666666665], [369.0, 11382.0], [368.0, 10461.764705882355], [370.0, 9422.760000000002], [371.0, 10686.349999999999], [372.0, 12118.500000000002], [373.0, 11670.454545454544], [374.0, 11926.333333333332], [375.0, 9442.769230769232], [376.0, 12195.935483870964], [382.0, 11904.380952380952], [383.0, 11404.238095238095], [380.0, 12228.545454545456], [381.0, 10792.866666666669], [377.0, 8711.347826086958], [378.0, 12608.454545454546], [379.0, 12475.833333333332], [385.0, 11896.499999999998], [384.0, 11613.090909090912], [386.0, 11086.235294117647], [387.0, 10330.833333333334], [388.0, 11210.599999999997], [389.0, 9751.842105263158], [390.0, 10897.342857142852], [391.0, 10948.052631578948], [392.0, 9993.666666666666], [398.0, 11299.838709677419], [399.0, 11414.0], [396.0, 14111.882352941175], [397.0, 9935.375], [393.0, 11438.0], [394.0, 10835.312500000002], [395.0, 11025.999999999998], [401.0, 9728.642857142857], [400.0, 10757.800000000001], [402.0, 11120.76923076923], [403.0, 10212.709677419358], [404.0, 11958.366666666669], [405.0, 11293.909090909092], [406.0, 10726.875], [407.0, 10948.454545454546], [408.0, 10268.962962962964], [414.0, 11888.4375], [415.0, 10095.629629629628], [412.0, 11105.0], [413.0, 11766.5], [409.0, 11745.050000000001], [410.0, 11323.818181818182], [411.0, 9988.117647058825], [417.0, 11042.0], [416.0, 11043.294117647056], [418.0, 11418.13043478261], [419.0, 11218.0], [420.0, 9260.571428571428], [421.0, 11438.941176470587], [422.0, 9913.842105263158], [423.0, 12527.461538461537], [424.0, 10145.76923076923], [430.0, 9972.958333333336], [431.0, 11857.319999999998], [428.0, 11060.0], [429.0, 11304.904761904761], [425.0, 10276.4], [426.0, 9484.833333333334], [427.0, 10857.875000000002], [433.0, 10739.8], [432.0, 10300.599999999999], [434.0, 10008.84375], [435.0, 10739.785714285714], [436.0, 14378.095238095237], [437.0, 10302.25], [438.0, 8698.047619047618], [439.0, 9195.499999999998], [440.0, 10373.055555555557], [446.0, 16865.250000000004], [447.0, 11453.18181818182], [444.0, 10315.0625], [445.0, 11306.000000000002], [441.0, 10070.4375], [442.0, 10720.107142857141], [443.0, 10447.937500000002], [449.0, 11407.846153846152], [448.0, 11373.481481481482], [450.0, 26028.772727272724], [451.0, 8950.12], [452.0, 13485.074999999999], [453.0, 10968.666666666666], [454.0, 21193.789473684203], [455.0, 9740.45], [456.0, 26238.4], [462.0, 20556.148148148146], [463.0, 11434.27777777778], [460.0, 9951.239999999998], [461.0, 10933.692307692309], [457.0, 29424.333333333332], [458.0, 10930.07142857143], [459.0, 10381.285714285714], [465.0, 10867.833333333334], [464.0, 11326.866666666665], [466.0, 11420.76923076923], [467.0, 11214.555555555555], [468.0, 11257.636363636364], [469.0, 12090.2], [470.0, 19921.428571428572], [471.0, 10469.695652173914], [472.0, 11969.555555555557], [478.0, 12715.538461538461], [479.0, 12186.0], [476.0, 11664.357142857141], [477.0, 12113.75], [473.0, 11798.923076923078], [474.0, 11715.444444444445], [475.0, 9575.999999999996], [481.0, 13219.681818181818], [480.0, 11205.428571428572], [482.0, 11248.25], [483.0, 31416.95238095238], [484.0, 11561.941176470587], [485.0, 11150.923076923078], [486.0, 11071.5], [487.0, 18605.76923076923], [488.0, 10424.61111111111], [494.0, 11818.464285714286], [495.0, 11400.846153846152], [492.0, 10752.533333333335], [493.0, 11972.61904761905], [489.0, 11006.083333333338], [490.0, 10658.25], [491.0, 10824.388888888889], [496.0, 10626.124999999998], [497.0, 21439.166666666664], [498.0, 12960.84210526316], [499.0, 25066.380952380947], [500.0, 14386.308397683375]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[327.6981675931639, 12129.428865554837]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 35.0], [3.0, 37.0], [4.0, 28.0], [5.0, 45.0], [6.0, 34.0], [7.0, 23.0], [8.0, 29.0], [9.0, 55312.5], [10.0, 20.0], [11.0, 21.0], [12.0, 18.5], [13.0, 35.0], [14.0, 166089.75], [15.0, 47.0], [16.0, 33.0], [17.0, 40.0], [18.0, 125.0], [19.0, 66.0], [20.0, 229.0], [21.0, 251.0], [22.0, 519.0], [23.0, 660.0], [24.0, 922.0], [25.0, 649.0], [26.0, 424.0], [27.0, 619.0], [28.0, 113156.66666666667], [30.0, 1025.0], [31.0, 938.0], [32.0, 1000.0], [34.0, 1049.0], [35.0, 1136.0], [36.0, 1237.0], [37.0, 1312.0], [38.0, 1316.0], [39.0, 1457.0], [40.0, 54009.0], [41.0, 1586.0], [42.0, 1893.0], [43.0, 1917.0], [45.0, 71684.0], [44.0, 106494.66666666667], [46.0, 2349.0], [47.0, 2099.0], [48.0, 2031.0], [49.0, 2305.0], [50.0, 2474.0], [51.0, 2499.0], [52.0, 2530.0], [53.0, 2715.0], [54.0, 2819.0], [55.0, 55062.0], [56.0, 2909.0], [57.0, 55043.5], [59.0, 55141.5], [60.0, 37771.333333333336], [61.0, 81170.5], [62.0, 2961.0], [64.0, 81553.0], [65.0, 3328.0], [66.0, 3357.0], [67.0, 3046.5], [69.0, 3353.0], [70.0, 3575.0], [71.0, 3749.0], [72.0, 3627.0], [73.0, 3819.0], [74.0, 120451.33333333333], [76.0, 4263.0], [77.0, 4144.0], [78.0, 4536.0], [79.0, 4642.0], [80.0, 4484.0], [81.0, 4638.0], [82.0, 4678.0], [83.0, 4863.0], [84.0, 4777.0], [85.0, 4925.0], [87.0, 5161.0], [88.0, 5353.0], [89.0, 5331.0], [90.0, 5095.0], [91.0, 4969.5], [93.0, 5165.0], [94.0, 5266.0], [95.0, 29493.0], [96.0, 5428.0], [97.0, 29428.5], [98.0, 29675.5], [99.0, 5594.0], [100.0, 5757.0], [102.0, 5809.0], [101.0, 53526.0], [104.0, 6180.0], [105.0, 6351.0], [106.0, 6758.0], [108.0, 6941.5], [110.0, 7245.0], [111.0, 7217.0], [112.0, 7186.0], [113.0, 7166.0], [114.0, 7303.0], [115.0, 7085.5], [116.0, 6933.0], [118.0, 7109.0], [119.0, 7284.0], [120.0, 7325.0], [121.0, 73320.33333333333], [122.0, 7518.0], [123.0, 106921.0], [124.0, 8067.0], [125.0, 7998.0], [126.0, 7802.0], [127.0, 187423.0], [128.0, 8100.0], [129.0, 8117.0], [130.0, 82429.0], [131.0, 8428.0], [132.0, 7994.0], [133.0, 8073.0], [134.0, 8141.0], [135.0, 8114.5], [136.0, 7943.0], [138.0, 8007.0], [139.0, 8301.0], [140.0, 8442.0], [141.0, 8590.0], [142.0, 8724.0], [143.0, 8671.0], [145.0, 9003.0], [146.0, 8973.0], [147.0, 8912.0], [148.0, 8962.0], [150.0, 9184.0], [151.0, 9257.0], [152.0, 9561.0], [153.0, 9519.0], [154.0, 9028.0], [155.0, 9164.0], [158.0, 15018.0], [157.0, 18113.0], [156.0, 132326.0], [160.0, 9869.0], [161.0, 9546.0], [163.0, 10353.0], [165.0, 14574.0], [166.0, 20025.0], [169.0, 9628.0], [173.0, 19945.0], [168.0, 17959.0], [183.0, 19206.0], [177.0, 19906.0], [184.0, 11849.0], [187.0, 28333.5], [188.0, 11210.0], [186.0, 19586.0], [193.0, 24368.0], [194.0, 13458.5], [198.0, 35351.0], [202.0, 13309.0], [203.0, 38715.5], [206.0, 33937.5], [200.0, 59399.0], [213.0, 25575.666666666664], [208.0, 57570.0], [216.0, 21625.0], [219.0, 70397.5], [220.0, 11805.0], [223.0, 11240.0], [224.0, 13470.0], [226.0, 13202.0], [229.0, 18808.0], [231.0, 7324.0], [228.0, 15500.0], [227.0, 15518.0], [233.0, 43863.0], [234.0, 8652.0], [235.0, 70406.0], [239.0, 54506.0], [240.0, 13134.0], [241.0, 40718.0], [242.0, 14382.0], [243.0, 82597.0], [247.0, 11909.0], [244.0, 16683.0], [250.0, 12838.5], [252.0, 12048.5], [253.0, 72968.75], [255.0, 12639.0], [249.0, 15648.0], [258.0, 19691.0], [259.0, 44992.333333333336], [268.0, 29525.5], [269.0, 11999.5], [270.0, 55891.333333333336], [271.0, 18320.0], [260.0, 10238.0], [261.0, 15288.5], [262.0, 49038.666666666664], [263.0, 11054.4], [264.0, 106096.0], [265.0, 12308.0], [266.0, 33650.0], [267.0, 7383.0], [273.0, 14536.0], [272.0, 41781.0], [274.0, 47516.2], [275.0, 12732.0], [284.0, 31834.285714285714], [285.0, 13577.0], [286.0, 7907.8], [287.0, 7785.0], [276.0, 91695.0], [277.0, 7167.0], [278.0, 106390.0], [279.0, 7536.5], [280.0, 83156.5], [281.0, 7743.75], [282.0, 62089.66666666667], [283.0, 8233.5], [289.0, 13678.0], [288.0, 52441.8], [290.0, 23258.5], [291.0, 9505.0], [292.0, 54485.5], [293.0, 13262.0], [294.0, 64279.5], [296.0, 30225.11111111111], [302.0, 14149.0], [303.0, 32044.4], [300.0, 10536.333333333334], [301.0, 14092.0], [297.0, 12280.75], [298.0, 64718.5], [299.0, 12081.142857142857], [305.0, 18088.86666666667], [304.0, 9508.5], [306.0, 9999.800000000001], [307.0, 32272.428571428576], [308.0, 12287.0], [309.0, 62485.75], [310.0, 10119.0], [311.0, 22873.4], [312.0, 11490.41666666667], [318.0, 10136.57142857143], [319.0, 7428.5], [316.0, 9270.25], [317.0, 9507.714285714286], [313.0, 24082.428571428572], [314.0, 9329.2], [315.0, 7357.875], [321.0, 21571.875], [320.0, 15688.0], [322.0, 7423.5], [323.0, 37074.66666666667], [324.0, 12543.0], [325.0, 9044.666666666666], [326.0, 12454.833333333334], [327.0, 8681.5], [328.0, 11538.333333333334], [334.0, 10155.166666666666], [335.0, 7931.5], [332.0, 9379.714285714286], [333.0, 28191.333333333332], [329.0, 17593.466666666667], [330.0, 11690.125], [331.0, 10283.875], [337.0, 10106.909090909092], [336.0, 9195.0], [338.0, 6963.6], [339.0, 43744.0], [340.0, 9762.666666666668], [341.0, 8897.714285714286], [342.0, 7391.25], [343.0, 8959.0], [344.0, 7959.5], [351.0, 11003.0], [348.0, 75450.0], [349.0, 9059.454545454546], [345.0, 13285.5], [346.0, 9402.5], [347.0, 8120.0], [353.0, 7310.333333333333], [352.0, 12479.666666666666], [354.0, 9068.166666666666], [355.0, 9978.5], [356.0, 9460.857142857143], [357.0, 11776.250000000002], [358.0, 13311.666666666666], [359.0, 9059.0], [360.0, 10034.875], [366.0, 11404.0], [367.0, 10187.133333333331], [364.0, 11937.6], [365.0, 11173.4], [361.0, 13369.0], [362.0, 8359.333333333334], [363.0, 10538.125], [369.0, 9387.666666666666], [368.0, 9498.666666666666], [370.0, 10377.5], [371.0, 10547.0], [372.0, 12336.6], [373.0, 7680.0], [374.0, 7673.0], [375.0, 7907.583333333335], [376.0, 6949.11111111111], [382.0, 10056.42857142857], [383.0, 10928.8], [380.0, 8793.25], [381.0, 11549.733333333332], [377.0, 9776.0], [378.0, 13655.0], [379.0, 8704.0], [385.0, 14337.0], [384.0, 10857.444444444445], [386.0, 8968.0], [387.0, 8787.75], [388.0, 1.0], [389.0, 11044.714285714286], [390.0, 11677.266666666666], [391.0, 10301.0], [392.0, 8703.333333333334], [398.0, 12825.071428571428], [399.0, 8051.857142857143], [396.0, 9345.5], [397.0, 9229.375], [393.0, 2.0], [394.0, 5755.5], [395.0, 16900.0], [401.0, 10509.666666666666], [400.0, 12736.5], [402.0, 8057.0], [403.0, 13369.555555555555], [404.0, 13907.857142857143], [406.0, 7323.285714285714], [407.0, 8515.142857142857], [408.0, 7385.571428571429], [415.0, 10419.444444444445], [412.0, 11821.5], [414.0, 15102.0], [409.0, 9301.166666666666], [410.0, 11450.333333333334], [411.0, 12235.0], [417.0, 10531.166666666666], [416.0, 9255.666666666668], [418.0, 9025.833333333334], [419.0, 11201.333333333334], [420.0, 6551.5], [421.0, 9026.666666666666], [422.0, 5786.571428571428], [423.0, 13853.285714285716], [424.0, 6783.5], [430.0, 11712.666666666666], [431.0, 10189.555555555557], [428.0, 9765.5], [429.0, 11367.400000000001], [425.0, 8317.0], [426.0, 4605.5], [427.0, 11170.0], [433.0, 11394.625], [432.0, 8857.0], [434.0, 8667.222222222223], [435.0, 1.0], [436.0, 7618.333333333334], [437.0, 8063.0], [438.0, 5763.25], [439.0, 8919.8], [440.0, 12550.8], [446.0, 101045.5], [447.0, 11093.5], [444.0, 8835.5], [445.0, 13301.0], [441.0, 7167.5], [442.0, 22188.100000000002], [443.0, 7424.0], [449.0, 9566.5], [448.0, 10338.076923076924], [450.0, 24828.88888888889], [451.0, 9907.4], [452.0, 11683.666666666668], [453.0, 11409.2], [454.0, 27096.8], [456.0, 39614.0], [460.0, 12157.5], [461.0, 10993.625], [462.0, 39824.071428571435], [463.0, 12458.285714285714], [459.0, 14472.0], [457.0, 148224.0], [465.0, 8520.0], [464.0, 12666.8], [466.0, 13312.0], [476.0, 10602.0], [477.0, 10678.0], [479.0, 12242.166666666666], [468.0, 13324.0], [469.0, 12478.25], [470.0, 19201.222222222223], [471.0, 10955.0], [472.0, 11475.0], [473.0, 12844.833333333332], [474.0, 12955.0], [483.0, 51227.399999999994], [481.0, 19377.6], [480.0, 8965.5], [482.0, 11934.0], [484.0, 12137.57142857143], [486.0, 8920.6], [488.0, 8447.0], [494.0, 8961.222222222224], [495.0, 13474.0], [492.0, 9429.3], [493.0, 19200.0], [489.0, 23944.58823529412], [490.0, 8757.0], [491.0, 8772.0], [496.0, 12544.0], [497.0, 34013.4], [499.0, 30179.2], [500.0, 19990.655172413815], [1.0, 92.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[380.19549641760545, 18514.910951893537]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 60.96666666666667, "minX": 1.5393903E12, "maxY": 1088539.25, "series": [{"data": [[1.53939066E12, 1010031.3666666667], [1.53939048E12, 1060835.3333333333], [1.53939096E12, 232621.8], [1.53939054E12, 1047518.0166666667], [1.53939036E12, 982190.7666666667], [1.53939084E12, 1038813.6666666666], [1.53939042E12, 1006203.3333333334], [1.5393909E12, 1088539.25], [1.53939072E12, 1016791.2333333333], [1.5393903E12, 6327.733333333334], [1.53939078E12, 1036009.6], [1.5393906E12, 1047218.7166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939066E12, 7064.85], [1.53939048E12, 3576.1833333333334], [1.53939096E12, 1425.85], [1.53939054E12, 3391.9666666666667], [1.53939036E12, 3489.1], [1.53939084E12, 7245.05], [1.53939042E12, 3516.75], [1.5393909E12, 7424.783333333334], [1.53939072E12, 7236.683333333333], [1.5393903E12, 60.96666666666667], [1.53939078E12, 6880.433333333333], [1.5393906E12, 4685.783333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939096E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 45.166666666666664, "minX": 1.5393903E12, "maxY": 85890.25806451612, "series": [{"data": [[1.53939066E12, 10211.785234899333], [1.53939048E12, 9783.880952380952], [1.53939096E12, 68548.03749999999], [1.53939054E12, 11693.21739130435], [1.53939036E12, 2320.9642857142853], [1.53939084E12, 16943.624223602477], [1.53939042E12, 6501.803921568628], [1.5393909E12, 16128.900735294126], [1.53939072E12, 10072.408360128613], [1.5393903E12, 1186.0], [1.53939078E12, 15633.476868327405], [1.5393906E12, 14417.06976744186]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939066E12, 11178.51739518288], [1.53939048E12, 10265.876526458609], [1.53939096E12, 49343.28365384616], [1.53939054E12, 11533.19726027397], [1.53939036E12, 2673.741556534508], [1.53939084E12, 14776.924413553435], [1.53939042E12, 6682.641319942605], [1.5393909E12, 13955.865612648246], [1.53939072E12, 10925.666955767556], [1.5393903E12, 1233.5], [1.53939078E12, 12429.979482604815], [1.5393906E12, 13437.709219858158]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939066E12, 13598.812883435596], [1.53939048E12, 8880.285714285716], [1.53939096E12, 85890.25806451612], [1.53939054E12, 25449.571428571428], [1.53939036E12, 1398.2068965517244], [1.53939084E12, 18306.177570093456], [1.53939042E12, 5656.2], [1.5393909E12, 21543.22222222222], [1.53939072E12, 9995.367924528298], [1.5393903E12, 45.166666666666664], [1.53939078E12, 16227.722807017539], [1.5393906E12, 29948.878787878806]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939096E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 45.166666666666664, "minX": 1.5393903E12, "maxY": 85890.25806451612, "series": [{"data": [[1.53939066E12, 10211.781879194645], [1.53939048E12, 9783.880952380952], [1.53939096E12, 68548.01249999997], [1.53939054E12, 11693.21739130435], [1.53939036E12, 2320.9464285714284], [1.53939084E12, 16943.61801242236], [1.53939042E12, 6501.803921568628], [1.5393909E12, 16128.897058823542], [1.53939072E12, 10072.395498392283], [1.5393903E12, 1186.0], [1.53939078E12, 15633.476868327405], [1.5393906E12, 14417.06976744186]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939066E12, 11178.205173951836], [1.53939048E12, 10265.44911804614], [1.53939096E12, 49342.93269230771], [1.53939054E12, 11532.750684931503], [1.53939036E12, 2673.2349486049943], [1.53939084E12, 14776.599478714174], [1.53939042E12, 6682.15208034433], [1.5393909E12, 13955.516996047423], [1.53939072E12, 10925.38334778837], [1.5393903E12, 1233.0], [1.53939078E12, 12429.600356824285], [1.5393906E12, 13437.235224586286]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939066E12, 13598.806748466264], [1.53939048E12, 8880.285714285716], [1.53939096E12, 85890.25806451612], [1.53939054E12, 25449.54285714286], [1.53939036E12, 1398.1551724137933], [1.53939084E12, 18306.17445482867], [1.53939042E12, 5656.163636363638], [1.5393909E12, 21543.21874999998], [1.53939072E12, 9995.358490566035], [1.5393903E12, 45.166666666666664], [1.53939078E12, 16227.719298245616], [1.5393906E12, 29948.872727272712]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939096E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5393903E12, "maxY": 8.333333333333334, "series": [{"data": [[1.53939066E12, 0.5369127516778522], [1.53939048E12, 0.8095238095238094], [1.53939096E12, 0.35000000000000003], [1.53939054E12, 0.7391304347826086], [1.53939036E12, 0.3214285714285714], [1.53939084E12, 0.38509316770186314], [1.53939042E12, 0.7058823529411764], [1.5393909E12, 0.4338235294117648], [1.53939072E12, 0.6302250803858522], [1.5393903E12, 0.0], [1.53939078E12, 0.4875444839857649], [1.5393906E12, 0.5581395348837208]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939066E12, 0.5057983942908117], [1.53939048E12, 0.5074626865671644], [1.53939096E12, 0.37499999999999983], [1.53939054E12, 0.5534246575342457], [1.53939036E12, 0.6402349486049923], [1.53939084E12, 0.38053866203301473], [1.53939042E12, 0.5810616929698708], [1.5393909E12, 0.3976284584980239], [1.53939072E12, 0.40676496097137893], [1.5393903E12, 0.75], [1.53939078E12, 0.4058876003568243], [1.5393906E12, 0.5059101654846336]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939066E12, 0.5552147239263804], [1.53939048E12, 1.2], [1.53939096E12, 0.41935483870967744], [1.53939054E12, 0.7714285714285712], [1.53939036E12, 1.2413793103448274], [1.53939084E12, 0.5046728971962615], [1.53939042E12, 0.8], [1.5393909E12, 0.472222222222222], [1.53939072E12, 0.6069182389937107], [1.5393903E12, 8.333333333333334], [1.53939078E12, 0.5333333333333332], [1.5393906E12, 0.6303030303030303]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939096E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.5393903E12, "maxY": 68123.0, "series": [{"data": [[1.53939066E12, 16238.0], [1.53939048E12, 14949.0], [1.53939096E12, 68123.0], [1.53939054E12, 53372.0], [1.53939036E12, 7623.0], [1.53939084E12, 19203.0], [1.53939042E12, 12368.0], [1.5393909E12, 63765.0], [1.53939072E12, 16857.0], [1.5393903E12, 1349.0], [1.53939078E12, 17660.0], [1.5393906E12, 17588.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939066E12, 9039.0], [1.53939048E12, 7802.0], [1.53939096E12, 10315.0], [1.53939054E12, 9527.0], [1.53939036E12, 20.0], [1.53939084E12, 9803.0], [1.53939042E12, 2927.0], [1.5393909E12, 8835.0], [1.53939072E12, 9210.0], [1.5393903E12, 28.0], [1.53939078E12, 8770.0], [1.5393906E12, 9165.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939066E12, 11804.7], [1.53939048E12, 10624.0], [1.53939096E12, 11969.0], [1.53939054E12, 11565.9], [1.53939036E12, 4124.8], [1.53939084E12, 11922.0], [1.53939042E12, 8252.300000000001], [1.5393909E12, 11907.0], [1.53939072E12, 11832.4], [1.5393903E12, 1342.5], [1.53939078E12, 11830.0], [1.5393906E12, 11717.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939066E12, 14227.849999999995], [1.53939048E12, 11849.0], [1.53939096E12, 19568.0], [1.53939054E12, 12575.32], [1.53939036E12, 4738.9], [1.53939084E12, 14789.609999999982], [1.53939042E12, 9175.75], [1.5393909E12, 14885.859999999997], [1.53939072E12, 14693.12999999999], [1.5393903E12, 1349.0], [1.53939078E12, 14702.500000000002], [1.5393906E12, 13376.1]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939066E12, 12042.349999999999], [1.53939048E12, 11033.5], [1.53939096E12, 12392.0], [1.53939054E12, 11813.9], [1.53939036E12, 4328.8], [1.53939084E12, 12241.55], [1.53939042E12, 8517.95], [1.5393909E12, 12234.0], [1.53939072E12, 12078.699999999999], [1.5393903E12, 1349.0], [1.53939078E12, 12063.0], [1.5393906E12, 11939.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939096E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 958.0, "minX": 0.0, "maxY": 106751.0, "series": [{"data": [[0.0, 958.0], [19.0, 11211.0], [5.0, 16715.0], [13.0, 8827.0], [28.0, 11106.0], [29.0, 11369.0], [30.0, 11086.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 13311.0], [5.0, 106751.0], [13.0, 8771.0], [28.0, 13309.0], [29.0, 11009.0], [30.0, 13310.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 958.0, "minX": 0.0, "maxY": 106751.0, "series": [{"data": [[0.0, 958.0], [19.0, 11210.5], [5.0, 16714.0], [13.0, 8826.5], [28.0, 11105.0], [29.0, 11369.0], [30.0, 11086.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 13311.0], [5.0, 106751.0], [13.0, 8771.0], [28.0, 13309.0], [29.0, 11009.0], [30.0, 13310.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 30.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.5393903E12, "maxY": 30.7, "series": [{"data": [[1.53939066E12, 30.083333333333332], [1.53939048E12, 14.566666666666666], [1.53939054E12, 14.133333333333333], [1.53939036E12, 14.25], [1.53939084E12, 30.133333333333333], [1.53939042E12, 14.383333333333333], [1.5393909E12, 27.916666666666668], [1.53939072E12, 30.7], [1.5393903E12, 0.3333333333333333], [1.53939078E12, 29.116666666666667], [1.5393906E12, 20.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5393909E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5393903E12, "maxY": 17.383333333333333, "series": [{"data": [[1.53939066E12, 12.233333333333333], [1.53939048E12, 12.783333333333333], [1.53939096E12, 3.1], [1.53939054E12, 12.366666666666667], [1.53939036E12, 12.2], [1.53939084E12, 12.116666666666667], [1.53939042E12, 12.466666666666667], [1.5393909E12, 12.766666666666667], [1.53939072E12, 12.15], [1.5393903E12, 0.16666666666666666], [1.53939078E12, 12.4], [1.5393906E12, 12.533333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939066E12, 0.5666666666666667], [1.53939048E12, 0.7], [1.53939096E12, 0.05], [1.53939054E12, 0.31666666666666665], [1.53939036E12, 0.9166666666666666], [1.53939084E12, 0.2833333333333333], [1.53939042E12, 0.85], [1.5393909E12, 0.23333333333333334], [1.53939072E12, 0.5166666666666667], [1.5393903E12, 0.06666666666666667], [1.53939078E12, 0.4666666666666667], [1.5393906E12, 0.36666666666666664]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939066E12, 16.116666666666667], [1.53939048E12, 0.08333333333333333], [1.53939096E12, 1.95], [1.53939054E12, 0.4], [1.53939036E12, 0.11666666666666667], [1.53939084E12, 17.383333333333333], [1.53939042E12, 0.06666666666666667], [1.5393909E12, 17.216666666666665], [1.53939072E12, 16.816666666666666], [1.53939078E12, 15.05], [1.5393906E12, 5.866666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939066E12, 0.16666666666666666], [1.53939096E12, 0.7333333333333333], [1.53939054E12, 0.05], [1.53939036E12, 0.016666666666666666], [1.53939084E12, 0.11666666666666667], [1.5393909E12, 0.2], [1.53939072E12, 0.21666666666666667], [1.53939078E12, 0.2], [1.5393906E12, 0.23333333333333334]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939096E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5393903E12, "maxY": 12.45, "series": [{"data": [[1.53939066E12, 0.65], [1.53939048E12, 0.5833333333333334], [1.53939096E12, 0.48333333333333334], [1.53939054E12, 0.31666666666666665], [1.53939036E12, 0.95], [1.53939084E12, 0.23333333333333334], [1.53939042E12, 0.9166666666666666], [1.5393909E12, 0.31666666666666665], [1.53939072E12, 0.5166666666666667], [1.5393903E12, 0.1], [1.53939078E12, 0.55], [1.5393906E12, 0.48333333333333334]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939066E12, 0.5666666666666667], [1.53939048E12, 0.7], [1.53939096E12, 0.05], [1.53939054E12, 0.31666666666666665], [1.53939036E12, 0.9166666666666666], [1.53939084E12, 0.2833333333333333], [1.53939042E12, 0.85], [1.5393909E12, 0.23333333333333334], [1.53939072E12, 0.5166666666666667], [1.5393903E12, 0.06666666666666667], [1.53939078E12, 0.4666666666666667], [1.5393906E12, 0.36666666666666664]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939066E12, 4.783333333333333], [1.53939096E12, 0.55], [1.53939054E12, 0.26666666666666666], [1.53939036E12, 0.016666666666666666], [1.53939084E12, 5.116666666666666], [1.5393909E12, 4.483333333333333], [1.53939072E12, 4.783333333333333], [1.53939078E12, 4.2], [1.5393906E12, 2.2666666666666666]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939066E12, 7.1], [1.53939048E12, 0.08333333333333333], [1.53939096E12, 0.85], [1.53939054E12, 0.11666666666666667], [1.53939036E12, 0.1], [1.53939084E12, 7.3], [1.53939042E12, 0.06666666666666667], [1.5393909E12, 8.633333333333333], [1.53939072E12, 7.583333333333333], [1.53939078E12, 6.833333333333333], [1.5393906E12, 2.05]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.53939066E12, 4.4], [1.53939096E12, 1.2833333333333334], [1.53939054E12, 0.06666666666666667], [1.53939036E12, 0.016666666666666666], [1.53939084E12, 5.083333333333333], [1.5393909E12, 4.3], [1.53939072E12, 4.666666666666667], [1.53939078E12, 4.216666666666667], [1.5393906E12, 1.7833333333333334]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53939066E12, 11.583333333333334], [1.53939048E12, 12.2], [1.53939096E12, 2.6166666666666667], [1.53939054E12, 12.05], [1.53939036E12, 11.25], [1.53939084E12, 11.883333333333333], [1.53939042E12, 11.55], [1.5393909E12, 12.45], [1.53939072E12, 11.633333333333333], [1.5393903E12, 0.06666666666666667], [1.53939078E12, 11.85], [1.5393906E12, 12.05]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939096E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
