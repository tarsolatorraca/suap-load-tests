/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 212479.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 5.0], [7.1, 565.0], [7.2, 588.0], [7.3, 605.0], [7.4, 606.0], [7.5, 621.0], [7.6, 684.0], [7.7, 704.0], [7.8, 713.0], [7.9, 821.0], [8.0, 1233.0], [8.1, 1330.0], [8.2, 1347.0], [8.3, 1427.0], [8.4, 1481.0], [8.5, 1536.0], [8.6, 1633.0], [8.7, 1765.0], [8.8, 2218.0], [8.9, 2635.0], [9.0, 2743.0], [9.1, 2885.0], [9.2, 3147.0], [9.3, 3213.0], [9.4, 3216.0], [9.5, 3298.0], [9.6, 3458.0], [9.7, 3574.0], [9.8, 3828.0], [9.9, 3848.0], [10.0, 3859.0], [10.1, 3967.0], [10.2, 4103.0], [10.3, 4131.0], [10.4, 4202.0], [10.5, 4276.0], [10.6, 4331.0], [10.7, 4499.0], [10.8, 4652.0], [10.9, 4703.0], [11.0, 4732.0], [11.1, 4754.0], [11.2, 4798.0], [11.3, 4927.0], [11.4, 5133.0], [11.5, 5378.0], [11.6, 5393.0], [11.7, 5881.0], [11.8, 6278.0], [11.9, 6301.0], [12.0, 6369.0], [12.1, 6399.0], [12.2, 6573.0], [12.3, 6732.0], [12.4, 6796.0], [12.5, 6847.0], [12.6, 6993.0], [12.7, 7034.0], [12.8, 7163.0], [12.9, 7164.0], [13.0, 7164.0], [13.1, 7164.0], [13.2, 7164.0], [13.3, 7166.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7168.0], [16.5, 7169.0], [16.6, 7171.0], [16.7, 7171.0], [16.8, 7214.0], [16.9, 7330.0], [17.0, 7367.0], [17.1, 7375.0], [17.2, 7422.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7423.0], [18.2, 7423.0], [18.3, 7423.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7425.0], [19.0, 7426.0], [19.1, 7498.0], [19.2, 7536.0], [19.3, 7677.0], [19.4, 7678.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7681.0], [21.3, 7681.0], [21.4, 7681.0], [21.5, 7683.0], [21.6, 7759.0], [21.7, 7874.0], [21.8, 7934.0], [21.9, 7934.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7935.0], [22.5, 7935.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7936.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7936.0], [23.4, 7937.0], [23.5, 7938.0], [23.6, 7939.0], [23.7, 7940.0], [23.8, 7940.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8193.0], [25.1, 8193.0], [25.2, 8196.0], [25.3, 8315.0], [25.4, 8394.0], [25.5, 8417.0], [25.6, 8444.0], [25.7, 8445.0], [25.8, 8445.0], [25.9, 8445.0], [26.0, 8446.0], [26.1, 8446.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8447.0], [26.5, 8448.0], [26.6, 8480.0], [26.7, 8499.0], [26.8, 8507.0], [26.9, 8540.0], [27.0, 8613.0], [27.1, 8686.0], [27.2, 8699.0], [27.3, 8700.0], [27.4, 8700.0], [27.5, 8702.0], [27.6, 8702.0], [27.7, 8702.0], [27.8, 8702.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8704.0], [29.2, 8704.0], [29.3, 8704.0], [29.4, 8705.0], [29.5, 8705.0], [29.6, 8706.0], [29.7, 8707.0], [29.8, 8708.0], [29.9, 8831.0], [30.0, 8855.0], [30.1, 8958.0], [30.2, 8958.0], [30.3, 8959.0], [30.4, 8959.0], [30.5, 8959.0], [30.6, 8959.0], [30.7, 8959.0], [30.8, 8959.0], [30.9, 8959.0], [31.0, 8959.0], [31.1, 8960.0], [31.2, 8960.0], [31.3, 8960.0], [31.4, 8960.0], [31.5, 9054.0], [31.6, 9057.0], [31.7, 9100.0], [31.8, 9214.0], [31.9, 9214.0], [32.0, 9215.0], [32.1, 9215.0], [32.2, 9215.0], [32.3, 9215.0], [32.4, 9215.0], [32.5, 9215.0], [32.6, 9215.0], [32.7, 9215.0], [32.8, 9215.0], [32.9, 9215.0], [33.0, 9216.0], [33.1, 9216.0], [33.2, 9216.0], [33.3, 9216.0], [33.4, 9216.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9216.0], [33.9, 9216.0], [34.0, 9216.0], [34.1, 9216.0], [34.2, 9217.0], [34.3, 9219.0], [34.4, 9219.0], [34.5, 9219.0], [34.6, 9220.0], [34.7, 9222.0], [34.8, 9234.0], [34.9, 9279.0], [35.0, 9308.0], [35.1, 9322.0], [35.2, 9404.0], [35.3, 9449.0], [35.4, 9471.0], [35.5, 9472.0], [35.6, 9472.0], [35.7, 9472.0], [35.8, 9479.0], [35.9, 9542.0], [36.0, 9561.0], [36.1, 9605.0], [36.2, 9609.0], [36.3, 9636.0], [36.4, 9681.0], [36.5, 9697.0], [36.6, 9712.0], [36.7, 9723.0], [36.8, 9725.0], [36.9, 9726.0], [37.0, 9726.0], [37.1, 9726.0], [37.2, 9726.0], [37.3, 9727.0], [37.4, 9727.0], [37.5, 9727.0], [37.6, 9727.0], [37.7, 9727.0], [37.8, 9727.0], [37.9, 9727.0], [38.0, 9727.0], [38.1, 9728.0], [38.2, 9728.0], [38.3, 9728.0], [38.4, 9728.0], [38.5, 9728.0], [38.6, 9728.0], [38.7, 9728.0], [38.8, 9728.0], [38.9, 9731.0], [39.0, 9731.0], [39.1, 9737.0], [39.2, 9771.0], [39.3, 9807.0], [39.4, 9829.0], [39.5, 9839.0], [39.6, 9845.0], [39.7, 9854.0], [39.8, 9882.0], [39.9, 9891.0], [40.0, 9930.0], [40.1, 9940.0], [40.2, 9947.0], [40.3, 9960.0], [40.4, 9969.0], [40.5, 9972.0], [40.6, 9981.0], [40.7, 9983.0], [40.8, 9983.0], [40.9, 9984.0], [41.0, 9984.0], [41.1, 9987.0], [41.2, 9988.0], [41.3, 10003.0], [41.4, 10006.0], [41.5, 10007.0], [41.6, 10017.0], [41.7, 10050.0], [41.8, 10063.0], [41.9, 10091.0], [42.0, 10105.0], [42.1, 10135.0], [42.2, 10140.0], [42.3, 10172.0], [42.4, 10186.0], [42.5, 10198.0], [42.6, 10216.0], [42.7, 10236.0], [42.8, 10239.0], [42.9, 10239.0], [43.0, 10239.0], [43.1, 10239.0], [43.2, 10239.0], [43.3, 10240.0], [43.4, 10240.0], [43.5, 10240.0], [43.6, 10240.0], [43.7, 10240.0], [43.8, 10241.0], [43.9, 10271.0], [44.0, 10274.0], [44.1, 10285.0], [44.2, 10285.0], [44.3, 10299.0], [44.4, 10300.0], [44.5, 10315.0], [44.6, 10335.0], [44.7, 10341.0], [44.8, 10357.0], [44.9, 10403.0], [45.0, 10422.0], [45.1, 10423.0], [45.2, 10463.0], [45.3, 10482.0], [45.4, 10482.0], [45.5, 10495.0], [45.6, 10495.0], [45.7, 10495.0], [45.8, 10496.0], [45.9, 10522.0], [46.0, 10535.0], [46.1, 10540.0], [46.2, 10554.0], [46.3, 10568.0], [46.4, 10570.0], [46.5, 10573.0], [46.6, 10594.0], [46.7, 10602.0], [46.8, 10636.0], [46.9, 10644.0], [47.0, 10651.0], [47.1, 10653.0], [47.2, 10659.0], [47.3, 10660.0], [47.4, 10679.0], [47.5, 10691.0], [47.6, 10692.0], [47.7, 10706.0], [47.8, 10715.0], [47.9, 10718.0], [48.0, 10724.0], [48.1, 10748.0], [48.2, 10751.0], [48.3, 10751.0], [48.4, 10751.0], [48.5, 10751.0], [48.6, 10751.0], [48.7, 10752.0], [48.8, 10752.0], [48.9, 10752.0], [49.0, 10752.0], [49.1, 10752.0], [49.2, 10752.0], [49.3, 10752.0], [49.4, 10752.0], [49.5, 10753.0], [49.6, 10753.0], [49.7, 10755.0], [49.8, 10774.0], [49.9, 10776.0], [50.0, 10830.0], [50.1, 10845.0], [50.2, 10848.0], [50.3, 10854.0], [50.4, 10854.0], [50.5, 10861.0], [50.6, 10894.0], [50.7, 10910.0], [50.8, 10925.0], [50.9, 10935.0], [51.0, 10938.0], [51.1, 10948.0], [51.2, 10949.0], [51.3, 10982.0], [51.4, 10999.0], [51.5, 11005.0], [51.6, 11006.0], [51.7, 11007.0], [51.8, 11007.0], [51.9, 11008.0], [52.0, 11008.0], [52.1, 11008.0], [52.2, 11023.0], [52.3, 11042.0], [52.4, 11059.0], [52.5, 11059.0], [52.6, 11103.0], [52.7, 11106.0], [52.8, 11117.0], [52.9, 11147.0], [53.0, 11155.0], [53.1, 11157.0], [53.2, 11183.0], [53.3, 11201.0], [53.4, 11213.0], [53.5, 11243.0], [53.6, 11263.0], [53.7, 11263.0], [53.8, 11264.0], [53.9, 11264.0], [54.0, 11268.0], [54.1, 11274.0], [54.2, 11322.0], [54.3, 11362.0], [54.4, 11371.0], [54.5, 11411.0], [54.6, 11430.0], [54.7, 11432.0], [54.8, 11450.0], [54.9, 11469.0], [55.0, 11473.0], [55.1, 11475.0], [55.2, 11494.0], [55.3, 11520.0], [55.4, 11520.0], [55.5, 11571.0], [55.6, 11581.0], [55.7, 11604.0], [55.8, 11610.0], [55.9, 11658.0], [56.0, 11667.0], [56.1, 11718.0], [56.2, 11772.0], [56.3, 11773.0], [56.4, 11775.0], [56.5, 11775.0], [56.6, 11775.0], [56.7, 11775.0], [56.8, 11776.0], [56.9, 11776.0], [57.0, 11776.0], [57.1, 11776.0], [57.2, 11776.0], [57.3, 11777.0], [57.4, 11780.0], [57.5, 11801.0], [57.6, 11837.0], [57.7, 11898.0], [57.8, 11930.0], [57.9, 11935.0], [58.0, 11944.0], [58.1, 12000.0], [58.2, 12031.0], [58.3, 12077.0], [58.4, 12098.0], [58.5, 12141.0], [58.6, 12157.0], [58.7, 12256.0], [58.8, 12284.0], [58.9, 12287.0], [59.0, 12287.0], [59.1, 12288.0], [59.2, 12288.0], [59.3, 12292.0], [59.4, 12432.0], [59.5, 12532.0], [59.6, 12544.0], [59.7, 12653.0], [59.8, 12780.0], [59.9, 12799.0], [60.0, 12799.0], [60.1, 12803.0], [60.2, 12939.0], [60.3, 13056.0], [60.4, 13196.0], [60.5, 13276.0], [60.6, 13307.0], [60.7, 13307.0], [60.8, 13307.0], [60.9, 13308.0], [61.0, 13308.0], [61.1, 13308.0], [61.2, 13308.0], [61.3, 13308.0], [61.4, 13308.0], [61.5, 13308.0], [61.6, 13308.0], [61.7, 13309.0], [61.8, 13309.0], [61.9, 13309.0], [62.0, 13310.0], [62.1, 13310.0], [62.2, 13310.0], [62.3, 13310.0], [62.4, 13310.0], [62.5, 13310.0], [62.6, 13310.0], [62.7, 13310.0], [62.8, 13310.0], [62.9, 13310.0], [63.0, 13310.0], [63.1, 13310.0], [63.2, 13310.0], [63.3, 13310.0], [63.4, 13310.0], [63.5, 13310.0], [63.6, 13310.0], [63.7, 13310.0], [63.8, 13310.0], [63.9, 13310.0], [64.0, 13310.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13313.0], [77.8, 13313.0], [77.9, 13313.0], [78.0, 13313.0], [78.1, 13313.0], [78.2, 13313.0], [78.3, 13313.0], [78.4, 13313.0], [78.5, 13313.0], [78.6, 13313.0], [78.7, 13313.0], [78.8, 13313.0], [78.9, 13313.0], [79.0, 13313.0], [79.1, 13315.0], [79.2, 13316.0], [79.3, 13318.0], [79.4, 13322.0], [79.5, 13365.0], [79.6, 13480.0], [79.7, 13566.0], [79.8, 13567.0], [79.9, 13568.0], [80.0, 13618.0], [80.1, 13664.0], [80.2, 13821.0], [80.3, 13822.0], [80.4, 13822.0], [80.5, 13823.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13824.0], [81.1, 13824.0], [81.2, 13824.0], [81.3, 13824.0], [81.4, 13824.0], [81.5, 13824.0], [81.6, 13824.0], [81.7, 13824.0], [81.8, 13828.0], [81.9, 13944.0], [82.0, 14075.0], [82.1, 14080.0], [82.2, 14083.0], [82.3, 14083.0], [82.4, 14265.0], [82.5, 14331.0], [82.6, 14334.0], [82.7, 14334.0], [82.8, 14334.0], [82.9, 14334.0], [83.0, 14334.0], [83.1, 14335.0], [83.2, 14335.0], [83.3, 14335.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14337.0], [85.8, 14337.0], [85.9, 14337.0], [86.0, 14340.0], [86.1, 14369.0], [86.2, 14389.0], [86.3, 14592.0], [86.4, 14847.0], [86.5, 14847.0], [86.6, 14848.0], [86.7, 15165.0], [86.8, 15597.0], [86.9, 15615.0], [87.0, 15616.0], [87.1, 15672.0], [87.2, 16127.0], [87.3, 16382.0], [87.4, 16383.0], [87.5, 16383.0], [87.6, 16383.0], [87.7, 16383.0], [87.8, 16383.0], [87.9, 16383.0], [88.0, 16640.0], [88.1, 16896.0], [88.2, 16896.0], [88.3, 17151.0], [88.4, 17155.0], [88.5, 17230.0], [88.6, 17721.0], [88.7, 17908.0], [88.8, 18174.0], [88.9, 18686.0], [89.0, 18687.0], [89.1, 18688.0], [89.2, 18688.0], [89.3, 19455.0], [89.4, 19455.0], [89.5, 19966.0], [89.6, 20224.0], [89.7, 20474.0], [89.8, 20475.0], [89.9, 20478.0], [90.0, 20479.0], [90.1, 20479.0], [90.2, 20480.0], [90.3, 21120.0], [90.4, 21274.0], [90.5, 21534.0], [90.6, 24320.0], [90.7, 24748.0], [90.8, 24863.0], [90.9, 26364.0], [91.0, 26366.0], [91.1, 26368.0], [91.2, 26368.0], [91.3, 26371.0], [91.4, 26396.0], [91.5, 26622.0], [91.6, 26623.0], [91.7, 26623.0], [91.8, 26624.0], [91.9, 26624.0], [92.0, 26624.0], [92.1, 26628.0], [92.2, 27386.0], [92.3, 27387.0], [92.4, 27391.0], [92.5, 27392.0], [92.6, 27652.0], [92.7, 27652.0], [92.8, 27903.0], [92.9, 28672.0], [93.0, 29443.0], [93.1, 29695.0], [93.2, 29695.0], [93.3, 30463.0], [93.4, 30463.0], [93.5, 30719.0], [93.6, 32511.0], [93.7, 32516.0], [93.8, 46068.0], [93.9, 53247.0], [94.0, 53269.0], [94.1, 53274.0], [94.2, 61390.0], [94.3, 69835.0], [94.4, 70364.0], [94.5, 74908.0], [94.6, 76286.0], [94.7, 76287.0], [94.8, 76288.0], [94.9, 76288.0], [95.0, 98816.0], [95.1, 105727.0], [95.2, 105727.0], [95.3, 105727.0], [95.4, 105728.0], [95.5, 105984.0], [95.6, 106240.0], [95.7, 106750.0], [95.8, 106751.0], [95.9, 106751.0], [96.0, 106752.0], [96.1, 106756.0], [96.2, 106757.0], [96.3, 107007.0], [96.4, 107007.0], [96.5, 107008.0], [96.6, 107008.0], [96.7, 107264.0], [96.8, 107264.0], [96.9, 107264.0], [97.0, 107267.0], [97.1, 108544.0], [97.2, 110332.0], [97.3, 110336.0], [97.4, 110336.0], [97.5, 110336.0], [97.6, 110896.0], [97.7, 111104.0], [97.8, 118783.0], [97.9, 118783.0], [98.0, 118784.0], [98.1, 118784.0], [98.2, 118784.0], [98.3, 119295.0], [98.4, 119552.0], [98.5, 120578.0], [98.6, 123136.0], [98.7, 123136.0], [98.8, 126719.0], [98.9, 126720.0], [99.0, 127232.0], [99.1, 127232.0], [99.2, 132862.0], [99.3, 153599.0], [99.4, 153599.0], [99.5, 164351.0], [99.6, 189440.0], [99.7, 211452.0], [99.8, 211452.0], [99.9, 211456.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 2.0], [2.5, 2.0], [2.6, 3.0], [2.7, 1155.0], [2.8, 1178.0], [2.9, 1192.0], [3.0, 1202.0], [3.1, 1217.0], [3.2, 1227.0], [3.3, 1237.0], [3.4, 1248.0], [3.5, 1265.0], [3.6, 1279.0], [3.7, 1292.0], [3.8, 1309.0], [3.9, 1339.0], [4.0, 1360.0], [4.1, 1375.0], [4.2, 1405.0], [4.3, 1446.0], [4.4, 1478.0], [4.5, 1517.0], [4.6, 1622.0], [4.7, 1729.0], [4.8, 1791.0], [4.9, 1843.0], [5.0, 1875.0], [5.1, 1905.0], [5.2, 1954.0], [5.3, 2011.0], [5.4, 2079.0], [5.5, 2148.0], [5.6, 2207.0], [5.7, 2280.0], [5.8, 2330.0], [5.9, 2360.0], [6.0, 2420.0], [6.1, 2543.0], [6.2, 2793.0], [6.3, 2880.0], [6.4, 2947.0], [6.5, 3033.0], [6.6, 3110.0], [6.7, 3206.0], [6.8, 3289.0], [6.9, 3396.0], [7.0, 3477.0], [7.1, 3538.0], [7.2, 3603.0], [7.3, 3655.0], [7.4, 3739.0], [7.5, 3795.0], [7.6, 3836.0], [7.7, 3863.0], [7.8, 3893.0], [7.9, 3957.0], [8.0, 3989.0], [8.1, 4015.0], [8.2, 4050.0], [8.3, 4081.0], [8.4, 4136.0], [8.5, 4157.0], [8.6, 4206.0], [8.7, 4223.0], [8.8, 4268.0], [8.9, 4305.0], [9.0, 4340.0], [9.1, 4400.0], [9.2, 4495.0], [9.3, 4542.0], [9.4, 4610.0], [9.5, 4684.0], [9.6, 4819.0], [9.7, 4882.0], [9.8, 4917.0], [9.9, 4958.0], [10.0, 4991.0], [10.1, 5071.0], [10.2, 5145.0], [10.3, 5183.0], [10.4, 5199.0], [10.5, 5232.0], [10.6, 5260.0], [10.7, 5295.0], [10.8, 5328.0], [10.9, 5422.0], [11.0, 5503.0], [11.1, 5565.0], [11.2, 5602.0], [11.3, 5633.0], [11.4, 5684.0], [11.5, 5716.0], [11.6, 5754.0], [11.7, 5776.0], [11.8, 5797.0], [11.9, 5834.0], [12.0, 5885.0], [12.1, 5968.0], [12.2, 6166.0], [12.3, 6221.0], [12.4, 6378.0], [12.5, 6526.0], [12.6, 6622.0], [12.7, 6658.0], [12.8, 6724.0], [12.9, 6740.0], [13.0, 6773.0], [13.1, 6827.0], [13.2, 6854.0], [13.3, 6885.0], [13.4, 6931.0], [13.5, 6975.0], [13.6, 6998.0], [13.7, 7029.0], [13.8, 7047.0], [13.9, 7061.0], [14.0, 7085.0], [14.1, 7103.0], [14.2, 7135.0], [14.3, 7162.0], [14.4, 7166.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7169.0], [15.1, 7201.0], [15.2, 7215.0], [15.3, 7279.0], [15.4, 7308.0], [15.5, 7342.0], [15.6, 7367.0], [15.7, 7382.0], [15.8, 7402.0], [15.9, 7419.0], [16.0, 7423.0], [16.1, 7423.0], [16.2, 7424.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7425.0], [16.6, 7428.0], [16.7, 7455.0], [16.8, 7469.0], [16.9, 7486.0], [17.0, 7500.0], [17.1, 7534.0], [17.2, 7592.0], [17.3, 7635.0], [17.4, 7676.0], [17.5, 7679.0], [17.6, 7679.0], [17.7, 7680.0], [17.8, 7680.0], [17.9, 7681.0], [18.0, 7681.0], [18.1, 7691.0], [18.2, 7749.0], [18.3, 7873.0], [18.4, 7933.0], [18.5, 7936.0], [18.6, 7936.0], [18.7, 7936.0], [18.8, 7936.0], [18.9, 7937.0], [19.0, 7938.0], [19.1, 7941.0], [19.2, 8029.0], [19.3, 8133.0], [19.4, 8191.0], [19.5, 8191.0], [19.6, 8192.0], [19.7, 8192.0], [19.8, 8194.0], [19.9, 8268.0], [20.0, 8400.0], [20.1, 8447.0], [20.2, 8448.0], [20.3, 8451.0], [20.4, 8606.0], [20.5, 8697.0], [20.6, 8702.0], [20.7, 8703.0], [20.8, 8703.0], [20.9, 8704.0], [21.0, 8704.0], [21.1, 8704.0], [21.2, 8705.0], [21.3, 8708.0], [21.4, 8737.0], [21.5, 8783.0], [21.6, 8828.0], [21.7, 8885.0], [21.8, 8907.0], [21.9, 8958.0], [22.0, 8959.0], [22.1, 8960.0], [22.2, 8961.0], [22.3, 8993.0], [22.4, 9018.0], [22.5, 9046.0], [22.6, 9079.0], [22.7, 9095.0], [22.8, 9110.0], [22.9, 9126.0], [23.0, 9141.0], [23.1, 9153.0], [23.2, 9170.0], [23.3, 9186.0], [23.4, 9203.0], [23.5, 9211.0], [23.6, 9215.0], [23.7, 9215.0], [23.8, 9216.0], [23.9, 9216.0], [24.0, 9216.0], [24.1, 9217.0], [24.2, 9223.0], [24.3, 9230.0], [24.4, 9254.0], [24.5, 9269.0], [24.6, 9290.0], [24.7, 9314.0], [24.8, 9351.0], [24.9, 9401.0], [25.0, 9441.0], [25.1, 9471.0], [25.2, 9472.0], [25.3, 9516.0], [25.4, 9568.0], [25.5, 9645.0], [25.6, 9690.0], [25.7, 9708.0], [25.8, 9726.0], [25.9, 9727.0], [26.0, 9727.0], [26.1, 9728.0], [26.2, 9728.0], [26.3, 9728.0], [26.4, 9731.0], [26.5, 9743.0], [26.6, 9760.0], [26.7, 9767.0], [26.8, 9788.0], [26.9, 9801.0], [27.0, 9816.0], [27.1, 9835.0], [27.2, 9859.0], [27.3, 9878.0], [27.4, 9896.0], [27.5, 9922.0], [27.6, 9956.0], [27.7, 9983.0], [27.8, 9984.0], [27.9, 9984.0], [28.0, 9991.0], [28.1, 10003.0], [28.2, 10022.0], [28.3, 10039.0], [28.4, 10061.0], [28.5, 10077.0], [28.6, 10088.0], [28.7, 10095.0], [28.8, 10103.0], [28.9, 10116.0], [29.0, 10122.0], [29.1, 10131.0], [29.2, 10150.0], [29.3, 10163.0], [29.4, 10173.0], [29.5, 10184.0], [29.6, 10194.0], [29.7, 10208.0], [29.8, 10214.0], [29.9, 10220.0], [30.0, 10224.0], [30.1, 10232.0], [30.2, 10239.0], [30.3, 10240.0], [30.4, 10241.0], [30.5, 10247.0], [30.6, 10252.0], [30.7, 10258.0], [30.8, 10263.0], [30.9, 10269.0], [31.0, 10280.0], [31.1, 10286.0], [31.2, 10295.0], [31.3, 10298.0], [31.4, 10303.0], [31.5, 10309.0], [31.6, 10313.0], [31.7, 10318.0], [31.8, 10326.0], [31.9, 10330.0], [32.0, 10332.0], [32.1, 10338.0], [32.2, 10345.0], [32.3, 10349.0], [32.4, 10354.0], [32.5, 10358.0], [32.6, 10364.0], [32.7, 10368.0], [32.8, 10373.0], [32.9, 10375.0], [33.0, 10379.0], [33.1, 10382.0], [33.2, 10386.0], [33.3, 10391.0], [33.4, 10394.0], [33.5, 10397.0], [33.6, 10399.0], [33.7, 10402.0], [33.8, 10407.0], [33.9, 10411.0], [34.0, 10414.0], [34.1, 10418.0], [34.2, 10421.0], [34.3, 10423.0], [34.4, 10427.0], [34.5, 10429.0], [34.6, 10432.0], [34.7, 10435.0], [34.8, 10437.0], [34.9, 10439.0], [35.0, 10441.0], [35.1, 10444.0], [35.2, 10446.0], [35.3, 10448.0], [35.4, 10452.0], [35.5, 10454.0], [35.6, 10456.0], [35.7, 10461.0], [35.8, 10465.0], [35.9, 10467.0], [36.0, 10469.0], [36.1, 10471.0], [36.2, 10475.0], [36.3, 10476.0], [36.4, 10478.0], [36.5, 10481.0], [36.6, 10483.0], [36.7, 10485.0], [36.8, 10491.0], [36.9, 10494.0], [37.0, 10496.0], [37.1, 10497.0], [37.2, 10499.0], [37.3, 10502.0], [37.4, 10505.0], [37.5, 10508.0], [37.6, 10510.0], [37.7, 10516.0], [37.8, 10520.0], [37.9, 10523.0], [38.0, 10525.0], [38.1, 10529.0], [38.2, 10532.0], [38.3, 10536.0], [38.4, 10538.0], [38.5, 10543.0], [38.6, 10547.0], [38.7, 10550.0], [38.8, 10552.0], [38.9, 10554.0], [39.0, 10555.0], [39.1, 10559.0], [39.2, 10562.0], [39.3, 10567.0], [39.4, 10570.0], [39.5, 10573.0], [39.6, 10576.0], [39.7, 10578.0], [39.8, 10584.0], [39.9, 10588.0], [40.0, 10592.0], [40.1, 10596.0], [40.2, 10597.0], [40.3, 10601.0], [40.4, 10603.0], [40.5, 10608.0], [40.6, 10611.0], [40.7, 10614.0], [40.8, 10616.0], [40.9, 10619.0], [41.0, 10621.0], [41.1, 10624.0], [41.2, 10627.0], [41.3, 10630.0], [41.4, 10632.0], [41.5, 10637.0], [41.6, 10639.0], [41.7, 10643.0], [41.8, 10646.0], [41.9, 10648.0], [42.0, 10651.0], [42.1, 10653.0], [42.2, 10657.0], [42.3, 10660.0], [42.4, 10665.0], [42.5, 10669.0], [42.6, 10671.0], [42.7, 10674.0], [42.8, 10676.0], [42.9, 10679.0], [43.0, 10683.0], [43.1, 10686.0], [43.2, 10688.0], [43.3, 10690.0], [43.4, 10693.0], [43.5, 10696.0], [43.6, 10700.0], [43.7, 10704.0], [43.8, 10706.0], [43.9, 10708.0], [44.0, 10711.0], [44.1, 10713.0], [44.2, 10717.0], [44.3, 10719.0], [44.4, 10722.0], [44.5, 10725.0], [44.6, 10728.0], [44.7, 10730.0], [44.8, 10732.0], [44.9, 10734.0], [45.0, 10737.0], [45.1, 10741.0], [45.2, 10744.0], [45.3, 10746.0], [45.4, 10748.0], [45.5, 10751.0], [45.6, 10752.0], [45.7, 10753.0], [45.8, 10755.0], [45.9, 10757.0], [46.0, 10760.0], [46.1, 10762.0], [46.2, 10766.0], [46.3, 10768.0], [46.4, 10770.0], [46.5, 10773.0], [46.6, 10777.0], [46.7, 10780.0], [46.8, 10784.0], [46.9, 10787.0], [47.0, 10792.0], [47.1, 10795.0], [47.2, 10797.0], [47.3, 10799.0], [47.4, 10802.0], [47.5, 10806.0], [47.6, 10807.0], [47.7, 10811.0], [47.8, 10815.0], [47.9, 10816.0], [48.0, 10819.0], [48.1, 10821.0], [48.2, 10825.0], [48.3, 10827.0], [48.4, 10830.0], [48.5, 10833.0], [48.6, 10835.0], [48.7, 10837.0], [48.8, 10840.0], [48.9, 10842.0], [49.0, 10845.0], [49.1, 10847.0], [49.2, 10848.0], [49.3, 10852.0], [49.4, 10855.0], [49.5, 10857.0], [49.6, 10859.0], [49.7, 10862.0], [49.8, 10864.0], [49.9, 10866.0], [50.0, 10868.0], [50.1, 10872.0], [50.2, 10874.0], [50.3, 10877.0], [50.4, 10879.0], [50.5, 10883.0], [50.6, 10884.0], [50.7, 10886.0], [50.8, 10889.0], [50.9, 10892.0], [51.0, 10894.0], [51.1, 10896.0], [51.2, 10899.0], [51.3, 10902.0], [51.4, 10905.0], [51.5, 10907.0], [51.6, 10910.0], [51.7, 10911.0], [51.8, 10913.0], [51.9, 10915.0], [52.0, 10917.0], [52.1, 10919.0], [52.2, 10922.0], [52.3, 10923.0], [52.4, 10928.0], [52.5, 10930.0], [52.6, 10933.0], [52.7, 10937.0], [52.8, 10940.0], [52.9, 10942.0], [53.0, 10945.0], [53.1, 10948.0], [53.2, 10951.0], [53.3, 10953.0], [53.4, 10957.0], [53.5, 10959.0], [53.6, 10963.0], [53.7, 10966.0], [53.8, 10969.0], [53.9, 10972.0], [54.0, 10974.0], [54.1, 10977.0], [54.2, 10980.0], [54.3, 10985.0], [54.4, 10988.0], [54.5, 10992.0], [54.6, 10994.0], [54.7, 10997.0], [54.8, 11000.0], [54.9, 11004.0], [55.0, 11006.0], [55.1, 11008.0], [55.2, 11009.0], [55.3, 11010.0], [55.4, 11014.0], [55.5, 11016.0], [55.6, 11018.0], [55.7, 11020.0], [55.8, 11024.0], [55.9, 11026.0], [56.0, 11028.0], [56.1, 11032.0], [56.2, 11034.0], [56.3, 11036.0], [56.4, 11038.0], [56.5, 11041.0], [56.6, 11043.0], [56.7, 11046.0], [56.8, 11052.0], [56.9, 11054.0], [57.0, 11056.0], [57.1, 11060.0], [57.2, 11062.0], [57.3, 11064.0], [57.4, 11066.0], [57.5, 11070.0], [57.6, 11074.0], [57.7, 11078.0], [57.8, 11081.0], [57.9, 11083.0], [58.0, 11087.0], [58.1, 11094.0], [58.2, 11097.0], [58.3, 11101.0], [58.4, 11104.0], [58.5, 11110.0], [58.6, 11115.0], [58.7, 11117.0], [58.8, 11120.0], [58.9, 11121.0], [59.0, 11124.0], [59.1, 11127.0], [59.2, 11129.0], [59.3, 11133.0], [59.4, 11137.0], [59.5, 11141.0], [59.6, 11142.0], [59.7, 11145.0], [59.8, 11148.0], [59.9, 11150.0], [60.0, 11154.0], [60.1, 11157.0], [60.2, 11159.0], [60.3, 11163.0], [60.4, 11166.0], [60.5, 11171.0], [60.6, 11174.0], [60.7, 11176.0], [60.8, 11179.0], [60.9, 11184.0], [61.0, 11188.0], [61.1, 11192.0], [61.2, 11197.0], [61.3, 11200.0], [61.4, 11205.0], [61.5, 11207.0], [61.6, 11209.0], [61.7, 11212.0], [61.8, 11215.0], [61.9, 11219.0], [62.0, 11222.0], [62.1, 11227.0], [62.2, 11232.0], [62.3, 11235.0], [62.4, 11240.0], [62.5, 11245.0], [62.6, 11249.0], [62.7, 11253.0], [62.8, 11257.0], [62.9, 11259.0], [63.0, 11262.0], [63.1, 11263.0], [63.2, 11265.0], [63.3, 11268.0], [63.4, 11271.0], [63.5, 11275.0], [63.6, 11280.0], [63.7, 11285.0], [63.8, 11290.0], [63.9, 11296.0], [64.0, 11302.0], [64.1, 11304.0], [64.2, 11309.0], [64.3, 11314.0], [64.4, 11318.0], [64.5, 11322.0], [64.6, 11324.0], [64.7, 11328.0], [64.8, 11331.0], [64.9, 11336.0], [65.0, 11339.0], [65.1, 11342.0], [65.2, 11346.0], [65.3, 11351.0], [65.4, 11356.0], [65.5, 11360.0], [65.6, 11365.0], [65.7, 11372.0], [65.8, 11375.0], [65.9, 11379.0], [66.0, 11384.0], [66.1, 11388.0], [66.2, 11392.0], [66.3, 11397.0], [66.4, 11400.0], [66.5, 11406.0], [66.6, 11411.0], [66.7, 11413.0], [66.8, 11416.0], [66.9, 11419.0], [67.0, 11424.0], [67.1, 11427.0], [67.2, 11431.0], [67.3, 11437.0], [67.4, 11443.0], [67.5, 11448.0], [67.6, 11455.0], [67.7, 11459.0], [67.8, 11464.0], [67.9, 11469.0], [68.0, 11473.0], [68.1, 11478.0], [68.2, 11481.0], [68.3, 11484.0], [68.4, 11486.0], [68.5, 11489.0], [68.6, 11494.0], [68.7, 11498.0], [68.8, 11501.0], [68.9, 11504.0], [69.0, 11506.0], [69.1, 11511.0], [69.2, 11514.0], [69.3, 11518.0], [69.4, 11520.0], [69.5, 11522.0], [69.6, 11527.0], [69.7, 11531.0], [69.8, 11536.0], [69.9, 11540.0], [70.0, 11542.0], [70.1, 11545.0], [70.2, 11550.0], [70.3, 11556.0], [70.4, 11559.0], [70.5, 11563.0], [70.6, 11566.0], [70.7, 11570.0], [70.8, 11572.0], [70.9, 11575.0], [71.0, 11578.0], [71.1, 11581.0], [71.2, 11584.0], [71.3, 11588.0], [71.4, 11592.0], [71.5, 11596.0], [71.6, 11599.0], [71.7, 11604.0], [71.8, 11606.0], [71.9, 11609.0], [72.0, 11612.0], [72.1, 11616.0], [72.2, 11621.0], [72.3, 11626.0], [72.4, 11629.0], [72.5, 11633.0], [72.6, 11637.0], [72.7, 11641.0], [72.8, 11646.0], [72.9, 11653.0], [73.0, 11661.0], [73.1, 11668.0], [73.2, 11678.0], [73.3, 11682.0], [73.4, 11686.0], [73.5, 11692.0], [73.6, 11703.0], [73.7, 11710.0], [73.8, 11716.0], [73.9, 11720.0], [74.0, 11726.0], [74.1, 11733.0], [74.2, 11745.0], [74.3, 11750.0], [74.4, 11753.0], [74.5, 11757.0], [74.6, 11761.0], [74.7, 11768.0], [74.8, 11772.0], [74.9, 11775.0], [75.0, 11776.0], [75.1, 11776.0], [75.2, 11779.0], [75.3, 11784.0], [75.4, 11794.0], [75.5, 11799.0], [75.6, 11807.0], [75.7, 11813.0], [75.8, 11818.0], [75.9, 11825.0], [76.0, 11837.0], [76.1, 11843.0], [76.2, 11848.0], [76.3, 11856.0], [76.4, 11860.0], [76.5, 11867.0], [76.6, 11875.0], [76.7, 11883.0], [76.8, 11889.0], [76.9, 11892.0], [77.0, 11896.0], [77.1, 11909.0], [77.2, 11918.0], [77.3, 11925.0], [77.4, 11932.0], [77.5, 11937.0], [77.6, 11944.0], [77.7, 11955.0], [77.8, 11961.0], [77.9, 11966.0], [78.0, 11974.0], [78.1, 11977.0], [78.2, 11988.0], [78.3, 11997.0], [78.4, 12006.0], [78.5, 12017.0], [78.6, 12022.0], [78.7, 12030.0], [78.8, 12034.0], [78.9, 12038.0], [79.0, 12047.0], [79.1, 12055.0], [79.2, 12062.0], [79.3, 12070.0], [79.4, 12081.0], [79.5, 12089.0], [79.6, 12101.0], [79.7, 12110.0], [79.8, 12121.0], [79.9, 12127.0], [80.0, 12136.0], [80.1, 12149.0], [80.2, 12163.0], [80.3, 12174.0], [80.4, 12181.0], [80.5, 12191.0], [80.6, 12200.0], [80.7, 12209.0], [80.8, 12216.0], [80.9, 12225.0], [81.0, 12235.0], [81.1, 12240.0], [81.2, 12245.0], [81.3, 12253.0], [81.4, 12260.0], [81.5, 12274.0], [81.6, 12284.0], [81.7, 12287.0], [81.8, 12291.0], [81.9, 12304.0], [82.0, 12316.0], [82.1, 12321.0], [82.2, 12330.0], [82.3, 12339.0], [82.4, 12348.0], [82.5, 12370.0], [82.6, 12377.0], [82.7, 12385.0], [82.8, 12395.0], [82.9, 12411.0], [83.0, 12417.0], [83.1, 12438.0], [83.2, 12453.0], [83.3, 12464.0], [83.4, 12481.0], [83.5, 12502.0], [83.6, 12514.0], [83.7, 12530.0], [83.8, 12544.0], [83.9, 12563.0], [84.0, 12580.0], [84.1, 12606.0], [84.2, 12633.0], [84.3, 12666.0], [84.4, 12700.0], [84.5, 12768.0], [84.6, 12799.0], [84.7, 12800.0], [84.8, 12811.0], [84.9, 12848.0], [85.0, 12889.0], [85.1, 12942.0], [85.2, 13014.0], [85.3, 13095.0], [85.4, 13165.0], [85.5, 13193.0], [85.6, 13215.0], [85.7, 13263.0], [85.8, 13301.0], [85.9, 13308.0], [86.0, 13309.0], [86.1, 13310.0], [86.2, 13310.0], [86.3, 13310.0], [86.4, 13310.0], [86.5, 13311.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13313.0], [90.5, 13313.0], [90.6, 13313.0], [90.7, 13313.0], [90.8, 13313.0], [90.9, 13313.0], [91.0, 13313.0], [91.1, 13313.0], [91.2, 13313.0], [91.3, 13313.0], [91.4, 13314.0], [91.5, 13316.0], [91.6, 13335.0], [91.7, 13358.0], [91.8, 13400.0], [91.9, 13417.0], [92.0, 13566.0], [92.1, 13706.0], [92.2, 13821.0], [92.3, 13823.0], [92.4, 13823.0], [92.5, 13824.0], [92.6, 13824.0], [92.7, 13824.0], [92.8, 13825.0], [92.9, 13918.0], [93.0, 14080.0], [93.1, 14179.0], [93.2, 14332.0], [93.3, 14334.0], [93.4, 14335.0], [93.5, 14335.0], [93.6, 14336.0], [93.7, 14336.0], [93.8, 14336.0], [93.9, 14336.0], [94.0, 14337.0], [94.1, 14354.0], [94.2, 14490.0], [94.3, 14592.0], [94.4, 14691.0], [94.5, 14847.0], [94.6, 14872.0], [94.7, 15041.0], [94.8, 15198.0], [94.9, 15285.0], [95.0, 15497.0], [95.1, 15617.0], [95.2, 15865.0], [95.3, 16188.0], [95.4, 16384.0], [95.5, 16892.0], [95.6, 17152.0], [95.7, 17906.0], [95.8, 18676.0], [95.9, 18782.0], [96.0, 19686.0], [96.1, 20475.0], [96.2, 20479.0], [96.3, 20480.0], [96.4, 20481.0], [96.5, 22496.0], [96.6, 26240.0], [96.7, 26367.0], [96.8, 26371.0], [96.9, 26623.0], [97.0, 26624.0], [97.1, 26625.0], [97.2, 27391.0], [97.3, 27647.0], [97.4, 27653.0], [97.5, 28672.0], [97.6, 29695.0], [97.7, 30464.0], [97.8, 30719.0], [97.9, 37276.0], [98.0, 54081.0], [98.1, 61951.0], [98.2, 69631.0], [98.3, 76287.0], [98.4, 81920.0], [98.5, 105889.0], [98.6, 106751.0], [98.7, 107007.0], [98.8, 107009.0], [98.9, 107268.0], [99.0, 110335.0], [99.1, 110896.0], [99.2, 117588.0], [99.3, 118784.0], [99.4, 118846.0], [99.5, 122366.0], [99.6, 126721.0], [99.7, 132353.0], [99.8, 153600.0], [99.9, 189440.0], [100.0, 211457.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 6.0], [6.6, 26.0], [6.7, 28.0], [6.8, 32.0], [6.9, 34.0], [7.0, 34.0], [7.1, 36.0], [7.2, 36.0], [7.3, 44.0], [7.4, 103.0], [7.5, 151.0], [7.6, 173.0], [7.7, 304.0], [7.8, 559.0], [7.9, 658.0], [8.0, 697.0], [8.1, 790.0], [8.2, 887.0], [8.3, 1035.0], [8.4, 1129.0], [8.5, 1714.0], [8.6, 1844.0], [8.7, 2003.0], [8.8, 2083.0], [8.9, 2381.0], [9.0, 2457.0], [9.1, 2570.0], [9.2, 2618.0], [9.3, 2701.0], [9.4, 2844.0], [9.5, 2869.0], [9.6, 2903.0], [9.7, 3047.0], [9.8, 3142.0], [9.9, 3313.0], [10.0, 3387.0], [10.1, 3570.0], [10.2, 3726.0], [10.3, 3847.0], [10.4, 4067.0], [10.5, 4179.0], [10.6, 4240.0], [10.7, 4348.0], [10.8, 4462.0], [10.9, 4486.0], [11.0, 4488.0], [11.1, 4564.0], [11.2, 4665.0], [11.3, 5120.0], [11.4, 5446.0], [11.5, 5549.0], [11.6, 5607.0], [11.7, 5660.0], [11.8, 5718.0], [11.9, 5821.0], [12.0, 5907.0], [12.1, 6002.0], [12.2, 6095.0], [12.3, 6112.0], [12.4, 6189.0], [12.5, 6243.0], [12.6, 6315.0], [12.7, 6447.0], [12.8, 6655.0], [12.9, 7021.0], [13.0, 7122.0], [13.1, 7163.0], [13.2, 7164.0], [13.3, 7166.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7168.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7181.0], [14.8, 7219.0], [14.9, 7249.0], [15.0, 7376.0], [15.1, 7422.0], [15.2, 7422.0], [15.3, 7423.0], [15.4, 7424.0], [15.5, 7424.0], [15.6, 7424.0], [15.7, 7424.0], [15.8, 7424.0], [15.9, 7424.0], [16.0, 7424.0], [16.1, 7424.0], [16.2, 7425.0], [16.3, 7425.0], [16.4, 7425.0], [16.5, 7425.0], [16.6, 7425.0], [16.7, 7428.0], [16.8, 7428.0], [16.9, 7428.0], [17.0, 7444.0], [17.1, 7461.0], [17.2, 7482.0], [17.3, 7482.0], [17.4, 7524.0], [17.5, 7575.0], [17.6, 7628.0], [17.7, 7629.0], [17.8, 7646.0], [17.9, 7675.0], [18.0, 7676.0], [18.1, 7676.0], [18.2, 7678.0], [18.3, 7679.0], [18.4, 7679.0], [18.5, 7679.0], [18.6, 7679.0], [18.7, 7679.0], [18.8, 7680.0], [18.9, 7680.0], [19.0, 7680.0], [19.1, 7680.0], [19.2, 7680.0], [19.3, 7680.0], [19.4, 7680.0], [19.5, 7680.0], [19.6, 7680.0], [19.7, 7681.0], [19.8, 7681.0], [19.9, 7681.0], [20.0, 7681.0], [20.1, 7682.0], [20.2, 7682.0], [20.3, 7689.0], [20.4, 7735.0], [20.5, 7838.0], [20.6, 7838.0], [20.7, 7845.0], [20.8, 7901.0], [20.9, 7927.0], [21.0, 7932.0], [21.1, 7933.0], [21.2, 7934.0], [21.3, 7935.0], [21.4, 7935.0], [21.5, 7935.0], [21.6, 7935.0], [21.7, 7936.0], [21.8, 7936.0], [21.9, 7936.0], [22.0, 7936.0], [22.1, 7936.0], [22.2, 7936.0], [22.3, 7936.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7937.0], [22.9, 7937.0], [23.0, 7938.0], [23.1, 7940.0], [23.2, 7953.0], [23.3, 7991.0], [23.4, 7996.0], [23.5, 8064.0], [23.6, 8072.0], [23.7, 8078.0], [23.8, 8168.0], [23.9, 8187.0], [24.0, 8190.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8192.0], [24.4, 8192.0], [24.5, 8192.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8193.0], [24.9, 8201.0], [25.0, 8280.0], [25.1, 8319.0], [25.2, 8419.0], [25.3, 8438.0], [25.4, 8446.0], [25.5, 8446.0], [25.6, 8447.0], [25.7, 8448.0], [25.8, 8448.0], [25.9, 8480.0], [26.0, 8550.0], [26.1, 8572.0], [26.2, 8594.0], [26.3, 8636.0], [26.4, 8639.0], [26.5, 8639.0], [26.6, 8649.0], [26.7, 8684.0], [26.8, 8700.0], [26.9, 8700.0], [27.0, 8701.0], [27.1, 8702.0], [27.2, 8702.0], [27.3, 8702.0], [27.4, 8703.0], [27.5, 8703.0], [27.6, 8703.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8704.0], [28.2, 8704.0], [28.3, 8704.0], [28.4, 8704.0], [28.5, 8704.0], [28.6, 8705.0], [28.7, 8705.0], [28.8, 8705.0], [28.9, 8705.0], [29.0, 8705.0], [29.1, 8708.0], [29.2, 8737.0], [29.3, 8826.0], [29.4, 8846.0], [29.5, 8878.0], [29.6, 8930.0], [29.7, 8958.0], [29.8, 8959.0], [29.9, 8959.0], [30.0, 8959.0], [30.1, 8959.0], [30.2, 8960.0], [30.3, 8960.0], [30.4, 8960.0], [30.5, 8960.0], [30.6, 8960.0], [30.7, 8960.0], [30.8, 8961.0], [30.9, 8961.0], [31.0, 8996.0], [31.1, 9010.0], [31.2, 9056.0], [31.3, 9111.0], [31.4, 9171.0], [31.5, 9214.0], [31.6, 9215.0], [31.7, 9215.0], [31.8, 9215.0], [31.9, 9215.0], [32.0, 9215.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9216.0], [32.6, 9216.0], [32.7, 9216.0], [32.8, 9216.0], [32.9, 9217.0], [33.0, 9217.0], [33.1, 9217.0], [33.2, 9217.0], [33.3, 9219.0], [33.4, 9219.0], [33.5, 9220.0], [33.6, 9226.0], [33.7, 9244.0], [33.8, 9262.0], [33.9, 9288.0], [34.0, 9294.0], [34.1, 9301.0], [34.2, 9341.0], [34.3, 9362.0], [34.4, 9386.0], [34.5, 9399.0], [34.6, 9424.0], [34.7, 9437.0], [34.8, 9470.0], [34.9, 9471.0], [35.0, 9472.0], [35.1, 9472.0], [35.2, 9473.0], [35.3, 9473.0], [35.4, 9478.0], [35.5, 9490.0], [35.6, 9509.0], [35.7, 9509.0], [35.8, 9540.0], [35.9, 9555.0], [36.0, 9578.0], [36.1, 9605.0], [36.2, 9633.0], [36.3, 9688.0], [36.4, 9695.0], [36.5, 9723.0], [36.6, 9726.0], [36.7, 9726.0], [36.8, 9727.0], [36.9, 9727.0], [37.0, 9727.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9728.0], [37.9, 9729.0], [38.0, 9729.0], [38.1, 9729.0], [38.2, 9740.0], [38.3, 9748.0], [38.4, 9762.0], [38.5, 9797.0], [38.6, 9806.0], [38.7, 9807.0], [38.8, 9840.0], [38.9, 9847.0], [39.0, 9859.0], [39.1, 9861.0], [39.2, 9870.0], [39.3, 9876.0], [39.4, 9903.0], [39.5, 9926.0], [39.6, 9941.0], [39.7, 9943.0], [39.8, 9964.0], [39.9, 9975.0], [40.0, 9979.0], [40.1, 9982.0], [40.2, 9983.0], [40.3, 9984.0], [40.4, 9984.0], [40.5, 9984.0], [40.6, 9984.0], [40.7, 9984.0], [40.8, 9984.0], [40.9, 9985.0], [41.0, 9993.0], [41.1, 10013.0], [41.2, 10021.0], [41.3, 10047.0], [41.4, 10091.0], [41.5, 10102.0], [41.6, 10114.0], [41.7, 10162.0], [41.8, 10189.0], [41.9, 10203.0], [42.0, 10230.0], [42.1, 10239.0], [42.2, 10239.0], [42.3, 10240.0], [42.4, 10241.0], [42.5, 10241.0], [42.6, 10243.0], [42.7, 10243.0], [42.8, 10247.0], [42.9, 10251.0], [43.0, 10264.0], [43.1, 10277.0], [43.2, 10287.0], [43.3, 10293.0], [43.4, 10348.0], [43.5, 10391.0], [43.6, 10468.0], [43.7, 10479.0], [43.8, 10495.0], [43.9, 10496.0], [44.0, 10513.0], [44.1, 10532.0], [44.2, 10532.0], [44.3, 10619.0], [44.4, 10640.0], [44.5, 10673.0], [44.6, 10687.0], [44.7, 10743.0], [44.8, 10750.0], [44.9, 10751.0], [45.0, 10751.0], [45.1, 10751.0], [45.2, 10752.0], [45.3, 10752.0], [45.4, 10752.0], [45.5, 10752.0], [45.6, 10752.0], [45.7, 10752.0], [45.8, 10752.0], [45.9, 10754.0], [46.0, 10769.0], [46.1, 10783.0], [46.2, 10818.0], [46.3, 10833.0], [46.4, 10852.0], [46.5, 10867.0], [46.6, 10953.0], [46.7, 10977.0], [46.8, 10998.0], [46.9, 11004.0], [47.0, 11005.0], [47.1, 11006.0], [47.2, 11007.0], [47.3, 11007.0], [47.4, 11008.0], [47.5, 11008.0], [47.6, 11008.0], [47.7, 11009.0], [47.8, 11032.0], [47.9, 11058.0], [48.0, 11073.0], [48.1, 11102.0], [48.2, 11116.0], [48.3, 11154.0], [48.4, 11170.0], [48.5, 11217.0], [48.6, 11248.0], [48.7, 11262.0], [48.8, 11263.0], [48.9, 11263.0], [49.0, 11263.0], [49.1, 11263.0], [49.2, 11264.0], [49.3, 11264.0], [49.4, 11264.0], [49.5, 11265.0], [49.6, 11265.0], [49.7, 11265.0], [49.8, 11268.0], [49.9, 11288.0], [50.0, 11306.0], [50.1, 11403.0], [50.2, 11520.0], [50.3, 11577.0], [50.4, 11675.0], [50.5, 11681.0], [50.6, 11701.0], [50.7, 11774.0], [50.8, 11775.0], [50.9, 11775.0], [51.0, 11776.0], [51.1, 11776.0], [51.2, 11777.0], [51.3, 11842.0], [51.4, 11904.0], [51.5, 11980.0], [51.6, 12021.0], [51.7, 12028.0], [51.8, 12031.0], [51.9, 12032.0], [52.0, 12266.0], [52.1, 12287.0], [52.2, 12288.0], [52.3, 12327.0], [52.4, 12369.0], [52.5, 12453.0], [52.6, 12501.0], [52.7, 12543.0], [52.8, 12543.0], [52.9, 12609.0], [53.0, 12688.0], [53.1, 12736.0], [53.2, 12799.0], [53.3, 12801.0], [53.4, 12819.0], [53.5, 12932.0], [53.6, 13055.0], [53.7, 13166.0], [53.8, 13171.0], [53.9, 13179.0], [54.0, 13181.0], [54.1, 13186.0], [54.2, 13192.0], [54.3, 13196.0], [54.4, 13209.0], [54.5, 13216.0], [54.6, 13220.0], [54.7, 13224.0], [54.8, 13230.0], [54.9, 13244.0], [55.0, 13255.0], [55.1, 13262.0], [55.2, 13266.0], [55.3, 13275.0], [55.4, 13282.0], [55.5, 13289.0], [55.6, 13298.0], [55.7, 13305.0], [55.8, 13307.0], [55.9, 13307.0], [56.0, 13308.0], [56.1, 13308.0], [56.2, 13308.0], [56.3, 13308.0], [56.4, 13308.0], [56.5, 13308.0], [56.6, 13308.0], [56.7, 13308.0], [56.8, 13309.0], [56.9, 13309.0], [57.0, 13309.0], [57.1, 13310.0], [57.2, 13310.0], [57.3, 13310.0], [57.4, 13310.0], [57.5, 13310.0], [57.6, 13310.0], [57.7, 13310.0], [57.8, 13310.0], [57.9, 13311.0], [58.0, 13311.0], [58.1, 13311.0], [58.2, 13311.0], [58.3, 13311.0], [58.4, 13311.0], [58.5, 13311.0], [58.6, 13311.0], [58.7, 13311.0], [58.8, 13311.0], [58.9, 13311.0], [59.0, 13311.0], [59.1, 13311.0], [59.2, 13311.0], [59.3, 13311.0], [59.4, 13311.0], [59.5, 13311.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13312.0], [61.8, 13312.0], [61.9, 13312.0], [62.0, 13312.0], [62.1, 13312.0], [62.2, 13312.0], [62.3, 13312.0], [62.4, 13312.0], [62.5, 13312.0], [62.6, 13312.0], [62.7, 13312.0], [62.8, 13312.0], [62.9, 13312.0], [63.0, 13312.0], [63.1, 13312.0], [63.2, 13312.0], [63.3, 13312.0], [63.4, 13312.0], [63.5, 13312.0], [63.6, 13312.0], [63.7, 13312.0], [63.8, 13312.0], [63.9, 13312.0], [64.0, 13312.0], [64.1, 13312.0], [64.2, 13312.0], [64.3, 13312.0], [64.4, 13312.0], [64.5, 13312.0], [64.6, 13312.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13313.0], [68.8, 13313.0], [68.9, 13313.0], [69.0, 13313.0], [69.1, 13313.0], [69.2, 13313.0], [69.3, 13313.0], [69.4, 13313.0], [69.5, 13313.0], [69.6, 13313.0], [69.7, 13313.0], [69.8, 13313.0], [69.9, 13313.0], [70.0, 13313.0], [70.1, 13313.0], [70.2, 13313.0], [70.3, 13313.0], [70.4, 13313.0], [70.5, 13313.0], [70.6, 13313.0], [70.7, 13313.0], [70.8, 13313.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13314.0], [72.4, 13314.0], [72.5, 13314.0], [72.6, 13314.0], [72.7, 13314.0], [72.8, 13314.0], [72.9, 13315.0], [73.0, 13315.0], [73.1, 13316.0], [73.2, 13316.0], [73.3, 13317.0], [73.4, 13321.0], [73.5, 13328.0], [73.6, 13340.0], [73.7, 13342.0], [73.8, 13350.0], [73.9, 13355.0], [74.0, 13370.0], [74.1, 13379.0], [74.2, 13381.0], [74.3, 13388.0], [74.4, 13388.0], [74.5, 13408.0], [74.6, 13410.0], [74.7, 13430.0], [74.8, 13450.0], [74.9, 13462.0], [75.0, 13477.0], [75.1, 13521.0], [75.2, 13567.0], [75.3, 13568.0], [75.4, 13568.0], [75.5, 13568.0], [75.6, 13568.0], [75.7, 13569.0], [75.8, 13691.0], [75.9, 13704.0], [76.0, 13748.0], [76.1, 13755.0], [76.2, 13791.0], [76.3, 13823.0], [76.4, 13823.0], [76.5, 13823.0], [76.6, 13823.0], [76.7, 13824.0], [76.8, 13824.0], [76.9, 13824.0], [77.0, 13824.0], [77.1, 13824.0], [77.2, 13824.0], [77.3, 13824.0], [77.4, 13824.0], [77.5, 13824.0], [77.6, 13824.0], [77.7, 13824.0], [77.8, 13825.0], [77.9, 13825.0], [78.0, 13825.0], [78.1, 13825.0], [78.2, 13828.0], [78.3, 13841.0], [78.4, 13875.0], [78.5, 13929.0], [78.6, 13951.0], [78.7, 14079.0], [78.8, 14081.0], [78.9, 14083.0], [79.0, 14083.0], [79.1, 14084.0], [79.2, 14252.0], [79.3, 14275.0], [79.4, 14298.0], [79.5, 14298.0], [79.6, 14313.0], [79.7, 14317.0], [79.8, 14331.0], [79.9, 14332.0], [80.0, 14332.0], [80.1, 14334.0], [80.2, 14335.0], [80.3, 14335.0], [80.4, 14335.0], [80.5, 14335.0], [80.6, 14335.0], [80.7, 14335.0], [80.8, 14335.0], [80.9, 14335.0], [81.0, 14335.0], [81.1, 14336.0], [81.2, 14336.0], [81.3, 14336.0], [81.4, 14336.0], [81.5, 14336.0], [81.6, 14336.0], [81.7, 14336.0], [81.8, 14336.0], [81.9, 14336.0], [82.0, 14336.0], [82.1, 14337.0], [82.2, 14337.0], [82.3, 14337.0], [82.4, 14340.0], [82.5, 14592.0], [82.6, 14820.0], [82.7, 14847.0], [82.8, 14847.0], [82.9, 14848.0], [83.0, 14930.0], [83.1, 14971.0], [83.2, 15089.0], [83.3, 15109.0], [83.4, 15136.0], [83.5, 15200.0], [83.6, 15488.0], [83.7, 15568.0], [83.8, 15617.0], [83.9, 15676.0], [84.0, 15872.0], [84.1, 15872.0], [84.2, 15973.0], [84.3, 16127.0], [84.4, 16306.0], [84.5, 16353.0], [84.6, 16383.0], [84.7, 16383.0], [84.8, 16384.0], [84.9, 16384.0], [85.0, 16449.0], [85.1, 16896.0], [85.2, 17105.0], [85.3, 17152.0], [85.4, 17152.0], [85.5, 17631.0], [85.6, 17807.0], [85.7, 18676.0], [85.8, 18676.0], [85.9, 18688.0], [86.0, 18688.0], [86.1, 18688.0], [86.2, 18689.0], [86.3, 19383.0], [86.4, 19948.0], [86.5, 20143.0], [86.6, 20220.0], [86.7, 20224.0], [86.8, 20225.0], [86.9, 20476.0], [87.0, 20479.0], [87.1, 20479.0], [87.2, 20481.0], [87.3, 20481.0], [87.4, 20481.0], [87.5, 20736.0], [87.6, 21178.0], [87.7, 21964.0], [87.8, 23017.0], [87.9, 24260.0], [88.0, 26219.0], [88.1, 26366.0], [88.2, 26367.0], [88.3, 26367.0], [88.4, 26368.0], [88.5, 26368.0], [88.6, 26368.0], [88.7, 26368.0], [88.8, 26386.0], [88.9, 26465.0], [89.0, 26494.0], [89.1, 26619.0], [89.2, 26622.0], [89.3, 26623.0], [89.4, 26624.0], [89.5, 26625.0], [89.6, 26629.0], [89.7, 26775.0], [89.8, 27391.0], [89.9, 27393.0], [90.0, 27647.0], [90.1, 27650.0], [90.2, 27650.0], [90.3, 27650.0], [90.4, 27650.0], [90.5, 27650.0], [90.6, 27650.0], [90.7, 27651.0], [90.8, 27652.0], [90.9, 28470.0], [91.0, 28672.0], [91.1, 28672.0], [91.2, 28672.0], [91.3, 28694.0], [91.4, 28759.0], [91.5, 29440.0], [91.6, 29440.0], [91.7, 29440.0], [91.8, 29443.0], [91.9, 30717.0], [92.0, 30720.0], [92.1, 30957.0], [92.2, 35574.0], [92.3, 37382.0], [92.4, 53271.0], [92.5, 53274.0], [92.6, 53504.0], [92.7, 60531.0], [92.8, 65169.0], [92.9, 69632.0], [93.0, 72919.0], [93.1, 74737.0], [93.2, 76287.0], [93.3, 76287.0], [93.4, 76288.0], [93.5, 76288.0], [93.6, 81920.0], [93.7, 90608.0], [93.8, 105352.0], [93.9, 105497.0], [94.0, 105614.0], [94.1, 105728.0], [94.2, 105728.0], [94.3, 105749.0], [94.4, 106018.0], [94.5, 106161.0], [94.6, 106209.0], [94.7, 106305.0], [94.8, 106400.0], [94.9, 106497.0], [95.0, 106556.0], [95.1, 106650.0], [95.2, 106704.0], [95.3, 106760.0], [95.4, 106881.0], [95.5, 107006.0], [95.6, 107008.0], [95.7, 107008.0], [95.8, 107009.0], [95.9, 107034.0], [96.0, 107113.0], [96.1, 107136.0], [96.2, 107257.0], [96.3, 107269.0], [96.4, 107352.0], [96.5, 108543.0], [96.6, 109567.0], [96.7, 110179.0], [96.8, 110336.0], [96.9, 110336.0], [97.0, 110337.0], [97.1, 110592.0], [97.2, 110913.0], [97.3, 111326.0], [97.4, 114990.0], [97.5, 115092.0], [97.6, 116125.0], [97.7, 118784.0], [97.8, 118785.0], [97.9, 119548.0], [98.0, 123130.0], [98.1, 123136.0], [98.2, 123136.0], [98.3, 123136.0], [98.4, 125232.0], [98.5, 127096.0], [98.6, 127232.0], [98.7, 127232.0], [98.8, 128753.0], [98.9, 132352.0], [99.0, 132863.0], [99.1, 140034.0], [99.2, 141056.0], [99.3, 153599.0], [99.4, 154521.0], [99.5, 164352.0], [99.6, 209920.0], [99.7, 210942.0], [99.8, 211453.0], [99.9, 211453.0], [100.0, 211457.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 582.0, "series": [{"data": [[0.0, 119.0], [69900.0, 1.0], [105900.0, 2.0], [106700.0, 9.0], [118700.0, 8.0], [119500.0, 2.0], [126700.0, 3.0], [60900.0, 1.0], [61300.0, 1.0], [69800.0, 1.0], [76200.0, 6.0], [89800.0, 1.0], [500.0, 4.0], [600.0, 6.0], [700.0, 4.0], [800.0, 2.0], [212400.0, 1.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 3.0], [1500.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3100.0, 2.0], [3200.0, 4.0], [3400.0, 2.0], [3500.0, 2.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 1.0], [4100.0, 3.0], [4300.0, 2.0], [4200.0, 3.0], [4600.0, 2.0], [4500.0, 1.0], [4400.0, 1.0], [4700.0, 6.0], [5000.0, 1.0], [5100.0, 1.0], [4900.0, 1.0], [5300.0, 3.0], [5600.0, 1.0], [5800.0, 1.0], [6300.0, 5.0], [6200.0, 2.0], [6400.0, 1.0], [6500.0, 1.0], [105700.0, 6.0], [6700.0, 4.0], [6900.0, 1.0], [6800.0, 1.0], [7000.0, 3.0], [7100.0, 67.0], [7200.0, 2.0], [7300.0, 4.0], [7400.0, 34.0], [7500.0, 2.0], [7600.0, 39.0], [7800.0, 1.0], [7700.0, 2.0], [7900.0, 35.0], [8100.0, 25.0], [8400.0, 21.0], [8500.0, 5.0], [8600.0, 4.0], [8300.0, 3.0], [8700.0, 45.0], [139000.0, 1.0], [9100.0, 2.0], [8800.0, 2.0], [9000.0, 3.0], [9200.0, 53.0], [8900.0, 25.0], [9300.0, 4.0], [9600.0, 8.0], [9700.0, 46.0], [9400.0, 11.0], [9500.0, 4.0], [9800.0, 12.0], [9900.0, 22.0], [10200.0, 31.0], [10100.0, 9.0], [10000.0, 12.0], [10300.0, 9.0], [10600.0, 17.0], [10500.0, 13.0], [10400.0, 17.0], [10700.0, 39.0], [10800.0, 11.0], [11200.0, 15.0], [11100.0, 12.0], [11000.0, 19.0], [10900.0, 14.0], [11600.0, 6.0], [11400.0, 13.0], [11300.0, 5.0], [11500.0, 7.0], [11700.0, 25.0], [11900.0, 6.0], [12000.0, 6.0], [12200.0, 11.0], [11800.0, 4.0], [12100.0, 4.0], [12500.0, 4.0], [12700.0, 5.0], [12300.0, 1.0], [12400.0, 1.0], [12600.0, 1.0], [13300.0, 322.0], [13100.0, 2.0], [12800.0, 2.0], [13200.0, 1.0], [13000.0, 2.0], [12900.0, 1.0], [13500.0, 6.0], [13800.0, 28.0], [13600.0, 2.0], [13400.0, 1.0], [13700.0, 1.0], [14300.0, 64.0], [14000.0, 7.0], [13900.0, 2.0], [14200.0, 1.0], [14800.0, 5.0], [14500.0, 2.0], [15100.0, 2.0], [15600.0, 5.0], [15500.0, 2.0], [16300.0, 11.0], [16100.0, 2.0], [17200.0, 1.0], [16600.0, 2.0], [16800.0, 2.0], [17800.0, 1.0], [18600.0, 6.0], [19400.0, 4.0], [20200.0, 2.0], [20400.0, 10.0], [21200.0, 2.0], [24800.0, 2.0], [26600.0, 12.0], [27600.0, 4.0], [28600.0, 1.0], [29400.0, 1.0], [29600.0, 4.0], [30400.0, 4.0], [46000.0, 1.0], [53200.0, 5.0], [106400.0, 1.0], [107200.0, 6.0], [119200.0, 2.0], [127200.0, 3.0], [132800.0, 1.0], [70300.0, 1.0], [110300.0, 7.0], [111100.0, 1.0], [123100.0, 4.0], [211400.0, 5.0], [132300.0, 1.0], [164300.0, 2.0], [106200.0, 1.0], [105400.0, 1.0], [107000.0, 8.0], [70900.0, 1.0], [74900.0, 1.0], [107700.0, 1.0], [108500.0, 1.0], [120500.0, 1.0], [189400.0, 1.0], [17100.0, 4.0], [16700.0, 1.0], [17900.0, 1.0], [18100.0, 2.0], [17500.0, 1.0], [17700.0, 1.0], [19900.0, 2.0], [21500.0, 1.0], [21100.0, 1.0], [23700.0, 1.0], [24300.0, 1.0], [24700.0, 1.0], [26300.0, 10.0], [27300.0, 6.0], [27100.0, 1.0], [27900.0, 2.0], [30700.0, 1.0], [32500.0, 4.0], [153500.0, 3.0], [98800.0, 1.0], [110800.0, 2.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 258.0], [145700.0, 1.0], [81900.0, 1.0], [105900.0, 2.0], [106700.0, 8.0], [118700.0, 18.0], [119500.0, 2.0], [126700.0, 3.0], [167400.0, 1.0], [36100.0, 1.0], [37300.0, 2.0], [46500.0, 1.0], [52500.0, 1.0], [209900.0, 1.0], [51700.0, 1.0], [54900.0, 1.0], [55700.0, 1.0], [69800.0, 1.0], [76200.0, 6.0], [93800.0, 1.0], [105800.0, 1.0], [113800.0, 1.0], [114600.0, 1.0], [132400.0, 1.0], [1100.0, 29.0], [1200.0, 75.0], [1300.0, 45.0], [1400.0, 26.0], [1500.0, 11.0], [1600.0, 7.0], [1700.0, 17.0], [1800.0, 26.0], [1900.0, 18.0], [2000.0, 17.0], [2100.0, 11.0], [2200.0, 15.0], [2300.0, 24.0], [2400.0, 10.0], [152500.0, 1.0], [2500.0, 5.0], [2600.0, 4.0], [2800.0, 13.0], [2700.0, 4.0], [2900.0, 12.0], [3000.0, 13.0], [3100.0, 9.0], [3200.0, 11.0], [3300.0, 11.0], [3400.0, 10.0], [3500.0, 17.0], [3600.0, 14.0], [3700.0, 19.0], [3800.0, 26.0], [3900.0, 21.0], [4000.0, 32.0], [4100.0, 22.0], [4200.0, 29.0], [4300.0, 21.0], [65700.0, 1.0], [4400.0, 12.0], [4500.0, 16.0], [4600.0, 14.0], [4700.0, 7.0], [4800.0, 14.0], [5000.0, 12.0], [4900.0, 25.0], [5100.0, 27.0], [81700.0, 1.0], [5200.0, 29.0], [5300.0, 16.0], [5600.0, 23.0], [5400.0, 12.0], [5500.0, 20.0], [5700.0, 36.0], [5800.0, 21.0], [5900.0, 8.0], [6000.0, 5.0], [6100.0, 11.0], [6300.0, 11.0], [6200.0, 5.0], [6400.0, 4.0], [6500.0, 9.0], [6600.0, 16.0], [105700.0, 3.0], [6800.0, 29.0], [6700.0, 28.0], [6900.0, 28.0], [106500.0, 1.0], [7000.0, 47.0], [7100.0, 97.0], [7200.0, 26.0], [7400.0, 115.0], [7300.0, 42.0], [7500.0, 23.0], [7600.0, 87.0], [7700.0, 11.0], [7800.0, 11.0], [7900.0, 79.0], [8000.0, 10.0], [8100.0, 55.0], [8300.0, 7.0], [8200.0, 9.0], [8400.0, 32.0], [8600.0, 13.0], [8700.0, 99.0], [8500.0, 6.0], [139000.0, 2.0], [8900.0, 53.0], [9100.0, 64.0], [8800.0, 22.0], [9000.0, 39.0], [9200.0, 120.0], [9400.0, 36.0], [9300.0, 28.0], [9500.0, 16.0], [9600.0, 23.0], [9700.0, 118.0], [10000.0, 66.0], [9800.0, 52.0], [9900.0, 62.0], [10100.0, 87.0], [10200.0, 162.0], [10600.0, 323.0], [10700.0, 361.0], [10400.0, 350.0], [10300.0, 222.0], [10500.0, 295.0], [10800.0, 379.0], [11000.0, 336.0], [10900.0, 347.0], [11200.0, 259.0], [11100.0, 292.0], [11300.0, 237.0], [11500.0, 275.0], [11600.0, 190.0], [11400.0, 232.0], [11700.0, 188.0], [12100.0, 97.0], [12000.0, 119.0], [11800.0, 148.0], [12200.0, 126.0], [11900.0, 129.0], [12300.0, 92.0], [12500.0, 59.0], [12600.0, 30.0], [12400.0, 62.0], [12700.0, 23.0], [13100.0, 22.0], [13300.0, 582.0], [12900.0, 14.0], [13200.0, 25.0], [12800.0, 40.0], [13000.0, 12.0], [13400.0, 16.0], [13500.0, 10.0], [13800.0, 72.0], [13700.0, 5.0], [13600.0, 3.0], [14200.0, 6.0], [14000.0, 13.0], [14300.0, 92.0], [13900.0, 7.0], [14100.0, 2.0], [14600.0, 7.0], [14400.0, 8.0], [14700.0, 4.0], [14500.0, 12.0], [14800.0, 17.0], [15200.0, 9.0], [15000.0, 6.0], [15100.0, 8.0], [15300.0, 3.0], [14900.0, 5.0], [15400.0, 8.0], [15600.0, 6.0], [15500.0, 4.0], [15700.0, 5.0], [15800.0, 5.0], [16100.0, 4.0], [16000.0, 3.0], [15900.0, 1.0], [16300.0, 10.0], [16200.0, 2.0], [16800.0, 9.0], [17000.0, 1.0], [17400.0, 1.0], [16600.0, 1.0], [17600.0, 1.0], [18000.0, 2.0], [18200.0, 1.0], [17800.0, 1.0], [19000.0, 1.0], [19400.0, 7.0], [18600.0, 10.0], [19800.0, 1.0], [20200.0, 6.0], [20400.0, 30.0], [19600.0, 1.0], [21200.0, 1.0], [21400.0, 1.0], [21000.0, 1.0], [22400.0, 2.0], [23200.0, 1.0], [23000.0, 1.0], [23600.0, 1.0], [26400.0, 4.0], [26200.0, 1.0], [26600.0, 24.0], [26000.0, 1.0], [27600.0, 14.0], [27400.0, 1.0], [28600.0, 8.0], [28400.0, 3.0], [29400.0, 3.0], [29600.0, 10.0], [30400.0, 4.0], [31400.0, 1.0], [37200.0, 1.0], [53200.0, 1.0], [54000.0, 2.0], [62000.0, 1.0], [69600.0, 2.0], [100000.0, 1.0], [106400.0, 4.0], [107200.0, 10.0], [119200.0, 1.0], [127200.0, 7.0], [132800.0, 1.0], [153600.0, 2.0], [68700.0, 1.0], [71100.0, 1.0], [75900.0, 2.0], [106300.0, 1.0], [107100.0, 1.0], [110300.0, 8.0], [117500.0, 1.0], [119900.0, 1.0], [122300.0, 2.0], [126300.0, 1.0], [123100.0, 5.0], [141000.0, 2.0], [211400.0, 4.0], [132300.0, 2.0], [37900.0, 1.0], [164300.0, 6.0], [43500.0, 1.0], [55500.0, 1.0], [61900.0, 3.0], [71000.0, 3.0], [79800.0, 3.0], [105400.0, 1.0], [107000.0, 14.0], [113400.0, 1.0], [210900.0, 3.0], [95700.0, 3.0], [106100.0, 1.0], [107700.0, 2.0], [108500.0, 1.0], [110900.0, 1.0], [120500.0, 5.0], [163800.0, 1.0], [189400.0, 2.0], [17100.0, 5.0], [16900.0, 3.0], [16500.0, 1.0], [16700.0, 1.0], [17500.0, 1.0], [17900.0, 4.0], [18100.0, 1.0], [18300.0, 1.0], [18700.0, 1.0], [18500.0, 1.0], [18900.0, 1.0], [19900.0, 1.0], [20500.0, 1.0], [21700.0, 2.0], [22300.0, 2.0], [22500.0, 1.0], [23300.0, 1.0], [24300.0, 2.0], [26300.0, 22.0], [25900.0, 1.0], [27300.0, 14.0], [27900.0, 1.0], [30700.0, 10.0], [30300.0, 1.0], [32500.0, 3.0], [36600.0, 1.0], [153500.0, 1.0], [55000.0, 1.0], [61400.0, 1.0], [61800.0, 3.0], [62200.0, 1.0], [62600.0, 1.0], [65000.0, 1.0], [78000.0, 1.0], [110000.0, 1.0], [109200.0, 1.0], [111600.0, 1.0], [110800.0, 7.0], [118800.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 130.0], [140000.0, 1.0], [74700.0, 2.0], [81900.0, 1.0], [106700.0, 3.0], [118700.0, 3.0], [119500.0, 1.0], [126700.0, 1.0], [100.0, 4.0], [36100.0, 1.0], [37300.0, 1.0], [200.0, 1.0], [209900.0, 1.0], [60500.0, 1.0], [300.0, 2.0], [76200.0, 6.0], [90600.0, 1.0], [105800.0, 1.0], [106600.0, 3.0], [109000.0, 1.0], [111400.0, 1.0], [500.0, 1.0], [600.0, 3.0], [700.0, 3.0], [800.0, 1.0], [1000.0, 3.0], [1100.0, 1.0], [1700.0, 2.0], [1800.0, 2.0], [2000.0, 3.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [2800.0, 4.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 3.0], [3500.0, 1.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 2.0], [4100.0, 2.0], [4300.0, 1.0], [4400.0, 6.0], [4500.0, 2.0], [4600.0, 1.0], [72900.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [5600.0, 4.0], [5500.0, 2.0], [5400.0, 1.0], [5800.0, 2.0], [5700.0, 2.0], [5900.0, 2.0], [6000.0, 2.0], [6100.0, 5.0], [6200.0, 2.0], [6300.0, 1.0], [6400.0, 2.0], [6600.0, 1.0], [105700.0, 4.0], [6900.0, 1.0], [107300.0, 2.0], [106500.0, 1.0], [110500.0, 1.0], [7000.0, 2.0], [7100.0, 31.0], [111300.0, 1.0], [7400.0, 39.0], [7200.0, 4.0], [7300.0, 2.0], [116100.0, 1.0], [7500.0, 5.0], [7600.0, 48.0], [7700.0, 2.0], [7900.0, 47.0], [7800.0, 6.0], [8000.0, 5.0], [8100.0, 20.0], [8200.0, 3.0], [8300.0, 3.0], [8400.0, 13.0], [8500.0, 6.0], [8600.0, 9.0], [8700.0, 44.0], [8800.0, 5.0], [8900.0, 26.0], [9200.0, 45.0], [9000.0, 4.0], [9100.0, 4.0], [9500.0, 8.0], [9700.0, 38.0], [9400.0, 19.0], [9600.0, 7.0], [9300.0, 8.0], [10000.0, 8.0], [9800.0, 14.0], [10200.0, 25.0], [9900.0, 29.0], [10100.0, 7.0], [10600.0, 6.0], [10400.0, 8.0], [10300.0, 4.0], [10700.0, 27.0], [10500.0, 5.0], [11000.0, 22.0], [11100.0, 7.0], [11200.0, 26.0], [10800.0, 8.0], [10900.0, 4.0], [11500.0, 4.0], [11700.0, 12.0], [11600.0, 3.0], [11300.0, 2.0], [11400.0, 2.0], [12000.0, 7.0], [11900.0, 4.0], [11800.0, 2.0], [12200.0, 5.0], [12600.0, 2.0], [12300.0, 4.0], [12500.0, 6.0], [12700.0, 4.0], [12400.0, 1.0], [12800.0, 3.0], [13200.0, 23.0], [13300.0, 332.0], [13100.0, 11.0], [12900.0, 3.0], [13000.0, 2.0], [13400.0, 11.0], [13700.0, 6.0], [13500.0, 12.0], [13800.0, 40.0], [13600.0, 2.0], [14000.0, 9.0], [14300.0, 51.0], [13900.0, 2.0], [14200.0, 6.0], [14100.0, 1.0], [14800.0, 7.0], [14500.0, 2.0], [14700.0, 1.0], [15100.0, 5.0], [14900.0, 3.0], [15000.0, 1.0], [15300.0, 1.0], [15200.0, 1.0], [15400.0, 1.0], [15500.0, 1.0], [15600.0, 4.0], [15800.0, 4.0], [16100.0, 1.0], [16300.0, 9.0], [16000.0, 1.0], [16200.0, 1.0], [15900.0, 1.0], [16400.0, 2.0], [17200.0, 1.0], [16800.0, 1.0], [17800.0, 1.0], [17600.0, 2.0], [18600.0, 10.0], [20200.0, 5.0], [20400.0, 11.0], [21000.0, 1.0], [22200.0, 1.0], [23000.0, 1.0], [24200.0, 1.0], [26400.0, 4.0], [26200.0, 1.0], [26600.0, 11.0], [27600.0, 16.0], [28600.0, 7.0], [28400.0, 1.0], [29400.0, 6.0], [29600.0, 1.0], [139900.0, 1.0], [53200.0, 2.0], [58800.0, 1.0], [69600.0, 1.0], [106400.0, 3.0], [105600.0, 2.0], [107200.0, 2.0], [127200.0, 4.0], [132800.0, 1.0], [153600.0, 1.0], [154500.0, 1.0], [91900.0, 1.0], [106300.0, 2.0], [105500.0, 1.0], [107100.0, 4.0], [110300.0, 6.0], [109500.0, 1.0], [115900.0, 1.0], [118300.0, 1.0], [123100.0, 7.0], [128700.0, 1.0], [141000.0, 1.0], [211400.0, 5.0], [33500.0, 1.0], [132300.0, 2.0], [35500.0, 1.0], [40300.0, 1.0], [164300.0, 2.0], [210700.0, 1.0], [53500.0, 1.0], [65100.0, 1.0], [73400.0, 1.0], [79800.0, 1.0], [106200.0, 2.0], [105400.0, 2.0], [107000.0, 10.0], [115000.0, 1.0], [127000.0, 1.0], [210900.0, 1.0], [106100.0, 1.0], [105300.0, 1.0], [108500.0, 1.0], [110100.0, 1.0], [110900.0, 2.0], [114900.0, 1.0], [16900.0, 1.0], [17100.0, 4.0], [16700.0, 1.0], [18100.0, 1.0], [19300.0, 1.0], [19900.0, 3.0], [20100.0, 1.0], [20700.0, 1.0], [21300.0, 1.0], [21100.0, 1.0], [21900.0, 1.0], [26100.0, 1.0], [26300.0, 14.0], [26700.0, 1.0], [27300.0, 4.0], [28700.0, 3.0], [30700.0, 3.0], [30900.0, 1.0], [153500.0, 2.0], [53400.0, 1.0], [63800.0, 1.0], [70800.0, 1.0], [106000.0, 2.0], [106800.0, 1.0], [107600.0, 1.0], [110800.0, 1.0], [122800.0, 1.0], [125200.0, 1.0], [130800.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 212400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7766.0, "series": [{"data": [[1.0, 211.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5151.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7766.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.911392405063296, "minX": 1.53938886E12, "maxY": 499.697429136453, "series": [{"data": [[1.53938892E12, 42.88764044943824], [1.53938952E12, 93.10497237569064], [1.5393891E12, 224.09045848822797], [1.53938904E12, 161.8871989860581], [1.5393894E12, 499.697429136453], [1.53938922E12, 342.60266049739784], [1.53938946E12, 467.18464592984765], [1.53938916E12, 285.8784530386743], [1.53938928E12, 403.7724215246632], [1.53938886E12, 8.911392405063296], [1.53938934E12, 464.31827956989235], [1.53938898E12, 103.0957575757575]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53938952E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 164351.0, "series": [{"data": [[2.0, 565.0], [3.0, 624.0], [5.0, 1330.0], [6.0, 2570.0], [7.0, 621.0], [8.0, 587.0], [10.0, 1025.5], [11.0, 617.0], [12.0, 53678.5], [13.0, 606.0], [14.0, 596.0], [15.0, 701.0], [16.0, 111017.83333333333], [17.0, 970.5], [18.0, 684.0], [20.0, 877.0], [21.0, 1485.0], [22.0, 1427.0], [23.0, 1481.0], [24.0, 821.0], [25.0, 786.0], [26.0, 101172.0], [28.0, 50499.0], [29.0, 1765.0], [30.0, 1585.0], [31.0, 64432.5], [32.0, 23802.0], [34.0, 2218.0], [35.0, 2526.0], [36.0, 2743.0], [38.0, 3147.0], [39.0, 3148.0], [40.0, 70821.5], [41.0, 2885.0], [43.0, 2938.5], [44.0, 2951.0], [46.0, 3298.0], [48.0, 3942.0], [49.0, 3648.5], [51.0, 3836.0], [52.0, 3848.0], [53.0, 3967.0], [54.0, 4103.0], [55.0, 3216.0], [56.0, 3574.0], [58.0, 3959.5], [59.0, 99274.2], [61.0, 3891.0], [62.0, 14899.0], [63.0, 3859.0], [65.0, 28963.0], [66.0, 4202.0], [67.0, 28701.5], [68.0, 4180.0], [69.0, 28750.0], [70.0, 4276.0], [72.0, 5342.0], [73.0, 4743.0], [74.0, 4703.0], [75.0, 4798.0], [76.0, 4732.0], [78.0, 4553.0], [79.0, 4499.0], [80.0, 5028.0], [81.0, 5881.0], [82.0, 14998.0], [83.0, 4927.0], [84.0, 14802.5], [85.0, 4658.0], [86.0, 14759.5], [87.0, 5378.0], [88.0, 40150.5], [90.0, 6301.0], [92.0, 6473.0], [93.0, 6779.0], [94.0, 7062.0], [95.0, 6369.0], [97.0, 6656.0], [99.0, 7214.0], [100.0, 7022.0], [101.0, 6364.0], [102.0, 85672.0], [103.0, 58996.0], [105.0, 6573.0], [106.0, 6399.0], [108.0, 7239.0], [109.0, 7107.0], [111.0, 34461.5], [112.0, 7147.0], [114.0, 6765.5], [113.0, 60972.0], [116.0, 7536.0], [118.0, 7874.0], [119.0, 8417.0], [120.0, 7768.0], [122.0, 8507.0], [123.0, 8540.0], [124.0, 8515.0], [127.0, 9040.5], [126.0, 21274.0], [129.0, 9609.0], [130.0, 9100.0], [131.0, 8831.0], [132.0, 8383.0], [133.0, 8480.0], [134.0, 8507.0], [135.0, 8315.0], [136.0, 8499.0], [137.0, 14839.0], [138.0, 8855.0], [139.0, 8580.0], [140.0, 8613.0], [141.0, 9087.0], [142.0, 8707.0], [144.0, 9413.5], [146.0, 11395.0], [148.0, 12436.5], [149.0, 9054.0], [150.0, 8936.0], [152.0, 9590.5], [153.0, 9404.0], [155.0, 9981.0], [156.0, 9624.0], [158.0, 10315.0], [159.0, 9636.0], [157.0, 14369.0], [161.0, 12478.5], [162.0, 10245.0], [164.0, 10568.0], [165.0, 10854.0], [166.0, 21120.0], [168.0, 11658.0], [172.0, 13501.0], [169.0, 15595.0], [176.0, 12265.333333333334], [180.0, 16640.0], [187.0, 11381.5], [188.0, 11042.0], [189.0, 40878.5], [191.0, 11157.0], [186.0, 69946.0], [184.0, 70364.0], [195.0, 11432.0], [199.0, 13397.0], [198.0, 12141.0], [197.0, 12157.0], [207.0, 14389.0], [206.0, 13566.0], [205.0, 13593.0], [203.0, 13723.0], [208.0, 11474.0], [211.0, 10423.0], [212.0, 10172.0], [215.0, 10140.0], [214.0, 11633.0], [209.0, 17721.0], [218.0, 10936.0], [220.0, 8952.5], [223.0, 11012.0], [227.0, 11034.0], [229.0, 10300.0], [230.0, 11667.0], [232.0, 13941.5], [235.0, 10914.0], [237.0, 10304.0], [240.0, 9710.0], [242.0, 9681.0], [246.0, 9685.0], [247.0, 16383.0], [249.0, 10938.0], [250.0, 10922.5], [251.0, 5473.0], [253.0, 11117.0], [269.0, 63361.0], [257.0, 11183.0], [256.0, 11059.0], [259.0, 10450.0], [261.0, 21534.0], [262.0, 10393.5], [265.0, 5431.0], [267.0, 7168.0], [270.0, 9215.166666666666], [271.0, 13312.0], [284.0, 8318.166666666666], [272.0, 11710.166666666668], [274.0, 10178.25], [277.0, 7808.0], [276.0, 126720.0], [279.0, 107603.44444444444], [280.0, 13311.0], [281.0, 10236.0], [282.0, 8580.857142857143], [283.0, 7133.833333333333], [286.0, 8836.333333333334], [287.0, 13312.0], [289.0, 44033.0], [288.0, 15188.333333333334], [290.0, 13318.0], [291.0, 9475.25], [293.0, 13823.333333333334], [294.0, 8875.0], [295.0, 8748.0], [296.0, 10878.5], [302.0, 9315.8], [303.0, 8011.9], [300.0, 8700.0], [301.0, 13952.0], [298.0, 15732.727272727272], [299.0, 6246.333333333334], [305.0, 11444.0], [304.0, 10903.0], [306.0, 10469.0], [307.0, 26368.0], [308.0, 15063.857142857143], [309.0, 5156.714285714286], [310.0, 16242.785714285714], [311.0, 10373.2], [312.0, 11155.0], [319.0, 7935.333333333333], [316.0, 11626.833333333332], [318.0, 11115.0], [313.0, 10993.0], [314.0, 25611.800000000003], [315.0, 12323.5], [321.0, 13312.0], [320.0, 7346.0], [322.0, 10666.666666666666], [323.0, 8471.181818181818], [324.0, 21208.85714285714], [325.0, 21244.0], [326.0, 9314.555555555555], [328.0, 12269.333333333332], [334.0, 11202.6], [335.0, 11473.0], [332.0, 7871.5], [333.0, 9721.384615384615], [329.0, 7553.0], [330.0, 11177.5], [331.0, 10454.5], [337.0, 32153.2], [336.0, 13821.0], [339.0, 10617.199999999999], [348.0, 7000.666666666667], [349.0, 15329.5], [350.0, 6627.333333333334], [351.0, 8806.0], [340.0, 12874.874999999998], [341.0, 10042.5], [342.0, 10250.5], [343.0, 9162.93333333333], [344.0, 10750.42857142857], [345.0, 14847.0], [346.0, 7679.0], [347.0, 7166.857142857142], [353.0, 13055.75], [355.0, 7679.0], [354.0, 13311.0], [364.0, 9269.666666666666], [365.0, 9565.0], [366.0, 5888.666666666667], [367.0, 9457.333333333334], [356.0, 11517.875], [357.0, 13112.533333333335], [358.0, 5915.333333333333], [359.0, 13821.0], [360.0, 12117.333333333334], [361.0, 10512.0], [362.0, 10337.6], [363.0, 11900.625], [370.0, 10652.199999999997], [369.0, 10593.5], [371.0, 11287.0], [380.0, 5971.666666666667], [381.0, 13823.099999999999], [382.0, 72557.0], [372.0, 23725.0], [374.0, 7168.0], [375.0, 10856.2], [376.0, 10385.111111111111], [377.0, 7146.0], [378.0, 13897.142857142859], [379.0, 8607.1], [396.0, 7167.0], [385.0, 7167.333333333333], [386.0, 10840.0], [397.0, 11044.5], [398.0, 10109.357142857141], [399.0, 10111.25], [388.0, 13195.625], [389.0, 7680.0], [390.0, 13316.25], [392.0, 5232.0], [393.0, 12185.9], [394.0, 7850.666666666666], [395.0, 9643.0], [402.0, 9029.636363636364], [401.0, 9888.0], [403.0, 11264.0], [412.0, 11359.375], [413.0, 12089.125], [414.0, 11358.812499999998], [415.0, 8262.0], [404.0, 11423.0], [405.0, 7508.0], [406.0, 13618.0], [407.0, 12878.857142857143], [408.0, 15610.5], [409.0, 10072.0], [410.0, 8958.333333333334], [411.0, 4904.0], [417.0, 8118.9], [416.0, 8194.000000000002], [418.0, 8960.0], [419.0, 11007.5], [420.0, 9029.5], [421.0, 14592.0], [422.0, 7167.0], [423.0, 10240.0], [424.0, 10170.894736842105], [430.0, 9669.5], [431.0, 10862.5], [428.0, 11475.0], [429.0, 12721.2], [425.0, 9636.666666666666], [426.0, 9779.666666666666], [427.0, 12725.285714285714], [433.0, 8532.666666666668], [432.0, 11566.562499999998], [435.0, 10675.0], [444.0, 10497.0], [445.0, 11268.0], [446.0, 7680.0], [447.0, 13823.0], [436.0, 13312.0], [437.0, 10437.25], [438.0, 10670.0], [439.0, 9300.0], [440.0, 8972.599999999999], [441.0, 10542.0], [443.0, 11993.42857142857], [451.0, 96153.4], [449.0, 10923.333333333332], [448.0, 9813.166666666668], [450.0, 10348.2], [453.0, 10194.777777777777], [455.0, 29191.818181818184], [456.0, 7338.5], [462.0, 10531.857142857143], [463.0, 9874.0], [460.0, 10932.833333333334], [461.0, 13311.2], [457.0, 36326.26666666667], [458.0, 6784.0], [459.0, 12902.6], [465.0, 8567.0], [464.0, 7679.333333333334], [466.0, 6484.666666666666], [467.0, 8780.857142857143], [468.0, 120578.0], [469.0, 12809.75], [470.0, 52095.454545454544], [471.0, 12257.333333333334], [472.0, 23113.875], [478.0, 7185.75], [479.0, 9595.0], [476.0, 14075.0], [477.0, 12651.941176470587], [473.0, 11410.142857142857], [474.0, 9834.5], [475.0, 9294.0], [481.0, 13183.0], [480.0, 8447.5], [482.0, 11442.1], [492.0, 10093.5], [494.0, 90437.6], [495.0, 13890.5], [484.0, 10240.0], [486.0, 10290.6], [487.0, 9533.0], [488.0, 8603.285714285714], [489.0, 36377.5], [490.0, 10813.190476190477], [491.0, 59823.5], [496.0, 6655.666666666666], [498.0, 11889.666666666668], [499.0, 13312.0], [500.0, 22578.062874251504]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[373.89816459443466, 16912.86678507993]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 1296.0], [4.0, 1208.0], [5.0, 1202.0], [6.0, 919.25], [7.0, 1230.0], [8.0, 1225.0], [9.0, 1232.7142857142858], [10.0, 1225.3333333333333], [11.0, 14415.625], [12.0, 1249.181818181818], [13.0, 1228.375], [14.0, 17440.0], [15.0, 12014.727272727272], [16.0, 26616.384615384617], [17.0, 1280.9230769230771], [18.0, 1306.9375000000002], [19.0, 1304.2500000000002], [20.0, 1402.0], [21.0, 1361.1818181818182], [22.0, 1732.7333333333333], [23.0, 1607.1428571428573], [24.0, 1710.5454545454543], [25.0, 1623.1000000000001], [26.0, 36266.5], [27.0, 8316.533333333333], [28.0, 1900.9333333333334], [29.0, 6871.0], [30.0, 1823.7499999999998], [31.0, 2007.5], [32.0, 2153.0], [33.0, 2133.3571428571427], [34.0, 2127.142857142857], [35.0, 25452.75], [36.0, 2569.3846153846152], [37.0, 2727.2], [38.0, 2892.2], [39.0, 12982.538461538461], [40.0, 21013.583333333336], [41.0, 3167.076923076923], [42.0, 3198.181818181818], [43.0, 3359.5], [44.0, 3333.4999999999995], [45.0, 3766.3636363636365], [46.0, 3547.0], [47.0, 3909.5384615384614], [48.0, 4039.5], [49.0, 3886.5714285714284], [50.0, 3791.692307692308], [51.0, 3900.714285714286], [52.0, 3914.909090909091], [53.0, 4285.692307692308], [54.0, 4039.1000000000004], [55.0, 3942.0], [56.0, 4443.5], [57.0, 4073.769230769231], [58.0, 4136.111111111111], [59.0, 40129.82608695651], [60.0, 5883.857142857143], [61.0, 9335.333333333334], [62.0, 4232.272727272728], [63.0, 4199.833333333332], [64.0, 8329.538461538461], [65.0, 4504.545454545455], [66.0, 4969.090909090909], [67.0, 4347.071428571428], [68.0, 4848.538461538462], [69.0, 4919.272727272728], [70.0, 11975.5], [71.0, 6859.545454545455], [72.0, 6681.461538461539], [73.0, 8639.785714285714], [74.0, 6662.928571428571], [75.0, 12733.099999999999], [76.0, 11925.545454545456], [77.0, 7068.545454545454], [78.0, 9540.0], [79.0, 8921.875], [80.0, 9274.533333333333], [81.0, 10236.153846153846], [82.0, 5406.111111111111], [83.0, 9222.466666666667], [84.0, 5495.866666666667], [85.0, 8714.125], [86.0, 5643.75], [87.0, 11816.111111111111], [88.0, 5798.461538461538], [89.0, 9776.666666666666], [90.0, 11211.636363636364], [91.0, 7806.833333333333], [92.0, 6629.6], [93.0, 6681.909090909092], [94.0, 6737.692307692308], [95.0, 6898.1], [96.0, 6794.909090909091], [97.0, 6959.266666666667], [98.0, 6971.5], [99.0, 6896.7692307692305], [100.0, 29426.85714285714], [101.0, 6896.900000000001], [102.0, 6905.333333333333], [103.0, 53454.117647058825], [104.0, 7048.846153846154], [105.0, 9432.0], [106.0, 8396.0], [107.0, 7145.846153846154], [108.0, 7324.153846153846], [109.0, 9955.153846153848], [110.0, 8548.214285714286], [111.0, 7379.642857142857], [112.0, 8889.181818181818], [113.0, 7454.249999999999], [114.0, 8418.25], [115.0, 8602.692307692309], [116.0, 8618.692307692309], [117.0, 8341.357142857143], [118.0, 8626.818181818182], [119.0, 8621.5], [120.0, 9016.90909090909], [121.0, 8372.099999999999], [122.0, 8382.599999999999], [123.0, 8678.166666666666], [124.0, 9516.23076923077], [125.0, 9616.307692307691], [126.0, 9444.111111111111], [127.0, 10126.153846153846], [128.0, 9463.714285714284], [129.0, 9373.1], [130.0, 9737.0], [131.0, 9840.636363636364], [132.0, 9123.142857142859], [133.0, 9471.5], [134.0, 8608.083333333336], [135.0, 9455.461538461539], [136.0, 8953.266666666666], [137.0, 9017.0], [138.0, 8979.307692307691], [139.0, 9183.454545454546], [140.0, 9228.333333333334], [141.0, 9068.5], [142.0, 9842.75], [143.0, 10138.444444444445], [144.0, 10494.23076923077], [145.0, 9827.133333333335], [146.0, 9690.6], [147.0, 10206.733333333332], [148.0, 9613.0], [149.0, 9714.666666666664], [150.0, 10163.923076923078], [151.0, 10048.611111111111], [152.0, 10283.923076923076], [153.0, 10127.357142857143], [154.0, 10256.000000000002], [155.0, 10265.166666666664], [156.0, 10241.875], [157.0, 10028.92857142857], [158.0, 10381.071428571428], [159.0, 10274.800000000001], [160.0, 10256.384615384615], [161.0, 10496.999999999998], [162.0, 11401.363636363636], [163.0, 15222.071428571428], [164.0, 18675.5], [165.0, 15706.5], [166.0, 11600.666666666664], [167.0, 19080.125], [168.0, 11873.833333333334], [169.0, 12135.333333333334], [170.0, 13093.750000000002], [171.0, 12963.923076923076], [172.0, 12448.545454545454], [173.0, 12748.23076923077], [174.0, 12448.6], [175.0, 12585.692307692307], [176.0, 12136.545454545454], [177.0, 12783.5], [178.0, 12130.357142857143], [179.0, 11822.2], [180.0, 11707.6], [181.0, 12111.333333333332], [182.0, 11661.57142857143], [183.0, 11831.076923076922], [184.0, 11787.083333333336], [185.0, 11740.181818181818], [186.0, 11467.23076923077], [187.0, 12057.642857142855], [188.0, 12261.75], [189.0, 10691.076923076922], [190.0, 11884.545454545454], [191.0, 11731.416666666668], [192.0, 11689.384615384615], [193.0, 11989.333333333332], [194.0, 11820.818181818182], [195.0, 12274.166666666668], [196.0, 12005.615384615387], [197.0, 11983.083333333334], [198.0, 12072.875], [199.0, 12149.000000000002], [200.0, 12662.0], [201.0, 12397.285714285716], [202.0, 12977.166666666668], [203.0, 16695.8], [204.0, 12592.599999999999], [205.0, 12292.916666666668], [206.0, 12391.928571428572], [207.0, 12042.42857142857], [208.0, 12310.444444444445], [209.0, 11650.375000000002], [210.0, 11289.750000000002], [211.0, 11343.42857142857], [212.0, 12949.23076923077], [213.0, 10919.692307692309], [214.0, 10634.384615384615], [215.0, 10724.46153846154], [216.0, 10567.285714285714], [217.0, 11056.428571428572], [218.0, 10842.428571428572], [219.0, 11097.538461538461], [220.0, 11204.444444444445], [221.0, 11242.214285714286], [222.0, 11338.714285714284], [223.0, 11406.272727272728], [224.0, 12646.857142857141], [225.0, 11862.75], [226.0, 11552.58333333333], [227.0, 11645.214285714286], [228.0, 11936.416666666668], [229.0, 11513.499999999998], [230.0, 15107.066666666668], [231.0, 11483.666666666668], [232.0, 11846.066666666668], [233.0, 11194.727272727272], [234.0, 11096.64705882353], [235.0, 11245.000000000002], [236.0, 10937.384615384613], [237.0, 10704.642857142857], [238.0, 10616.533333333333], [239.0, 10592.071428571428], [240.0, 10888.125000000002], [241.0, 10271.928571428572], [242.0, 14278.909090909092], [243.0, 10509.92857142857], [244.0, 14582.153846153846], [245.0, 11748.733333333334], [246.0, 10390.090909090908], [247.0, 11622.571428571431], [248.0, 10603.666666666668], [249.0, 10737.222222222223], [250.0, 14339.4], [251.0, 10652.166666666668], [252.0, 11687.538461538461], [253.0, 11506.250000000002], [254.0, 10789.375], [255.0, 16023.000000000002], [257.0, 11802.583333333334], [256.0, 12627.0], [258.0, 12650.799999999997], [259.0, 11550.733333333334], [260.0, 11257.0], [261.0, 24766.857142857145], [262.0, 11004.8], [263.0, 10063.285714285714], [264.0, 10927.8125], [270.0, 17469.35294117647], [271.0, 24755.73333333333], [268.0, 33464.4], [269.0, 16278.315789473683], [265.0, 17015.750000000004], [266.0, 10818.90909090909], [267.0, 23195.41176470588], [273.0, 10676.866666666667], [272.0, 17989.384615384617], [274.0, 15207.909090909092], [275.0, 10739.76923076923], [276.0, 35914.90476190476], [277.0, 14754.666666666668], [278.0, 22215.263157894737], [279.0, 46206.57142857142], [280.0, 11139.249999999998], [286.0, 10257.624999999998], [287.0, 10561.42857142857], [284.0, 10233.18181818182], [285.0, 10639.923076923076], [281.0, 10808.374999999998], [282.0, 9903.4], [283.0, 12427.470588235296], [289.0, 12900.22222222222], [288.0, 10454.428571428574], [290.0, 9898.764705882351], [291.0, 13514.999999999998], [292.0, 11746.4], [293.0, 14291.499999999998], [294.0, 12083.647058823528], [295.0, 11054.13636363636], [296.0, 15654.444444444443], [302.0, 13529.888888888889], [303.0, 9981.346153846154], [300.0, 17571.333333333332], [301.0, 12421.611111111111], [297.0, 11220.5], [298.0, 20281.833333333336], [299.0, 10941.571428571428], [305.0, 10774.285714285714], [304.0, 11092.833333333332], [306.0, 16458.470588235294], [307.0, 14916.666666666666], [308.0, 12123.099999999997], [309.0, 11543.75], [310.0, 14101.434782608696], [311.0, 11014.000000000002], [312.0, 10937.124999999998], [318.0, 10759.6], [319.0, 10481.941176470587], [316.0, 15863.52380952381], [317.0, 10998.285714285716], [313.0, 11399.0], [314.0, 10763.35294117647], [315.0, 10615.384615384617], [321.0, 12182.949999999999], [320.0, 16757.399999999998], [322.0, 10707.124999999996], [323.0, 11873.300000000001], [324.0, 9617.588235294115], [325.0, 11595.77777777778], [326.0, 12751.96], [327.0, 11345.92857142857], [328.0, 15183.78260869565], [334.0, 11475.444444444445], [335.0, 11927.57894736842], [332.0, 14772.08695652174], [333.0, 9718.535714285712], [329.0, 8645.499999999998], [330.0, 16246.555555555553], [331.0, 11834.4], [337.0, 20963.61904761905], [336.0, 10902.2], [338.0, 11354.22222222222], [339.0, 13286.050000000001], [340.0, 10496.818181818182], [341.0, 9706.222222222223], [342.0, 9720.611111111111], [343.0, 9600.074074074075], [344.0, 11073.64], [350.0, 9446.952380952382], [351.0, 11392.0], [348.0, 9280.05], [349.0, 11669.6875], [345.0, 21627.263157894737], [346.0, 9287.09090909091], [347.0, 9056.966666666667], [353.0, 11132.92857142857], [352.0, 10818.153846153846], [354.0, 11747.749999999998], [355.0, 9951.470588235292], [356.0, 11492.954545454546], [357.0, 11075.964285714286], [358.0, 10808.2], [359.0, 11175.809523809527], [360.0, 11004.222222222223], [366.0, 9974.42105263158], [367.0, 8606.434782608696], [364.0, 9344.785714285714], [365.0, 10423.3], [361.0, 10209.615384615387], [362.0, 10313.850000000002], [363.0, 10679.555555555555], [369.0, 10360.5], [368.0, 10126.437499999998], [370.0, 11415.866666666667], [371.0, 11227.157894736843], [372.0, 10133.0], [373.0, 11158.846153846154], [374.0, 10130.4], [375.0, 11683.08], [376.0, 11096.65], [382.0, 27237.416666666668], [383.0, 10913.875], [380.0, 18442.9375], [381.0, 11547.583333333336], [377.0, 11157.25], [378.0, 16561.354838709678], [379.0, 10552.904761904761], [385.0, 8375.151515151516], [384.0, 10782.076923076924], [386.0, 11416.300000000001], [387.0, 10826.933333333332], [388.0, 12003.615384615385], [389.0, 10424.913043478262], [390.0, 11228.562499999998], [391.0, 10221.066666666668], [392.0, 11005.56], [398.0, 10874.648648648648], [399.0, 10185.733333333332], [396.0, 11605.833333333334], [397.0, 11234.636363636364], [393.0, 11538.217391304348], [394.0, 10874.842105263157], [395.0, 11773.22222222222], [401.0, 11173.384615384617], [400.0, 11308.07142857143], [402.0, 11805.458333333334], [403.0, 11537.142857142859], [404.0, 11252.0], [405.0, 8412.793103448275], [406.0, 11112.888888888889], [407.0, 11484.0], [408.0, 12656.758620689654], [414.0, 10457.594594594593], [415.0, 10050.35294117647], [412.0, 11274.90909090909], [413.0, 10432.32], [409.0, 11579.666666666668], [410.0, 9295.772727272728], [411.0, 9904.529411764704], [417.0, 9530.653846153846], [416.0, 9173.307692307691], [418.0, 10320.538461538461], [419.0, 9259.0], [420.0, 10315.538461538463], [421.0, 10935.625], [422.0, 10555.09090909091], [423.0, 10600.88888888889], [424.0, 10154.750000000002], [430.0, 11937.76923076923], [431.0, 8876.964285714286], [428.0, 11636.416666666666], [429.0, 11906.862068965518], [425.0, 11263.000000000002], [426.0, 13897.29411764706], [427.0, 12268.428571428572], [433.0, 10706.272727272724], [432.0, 13472.296296296294], [434.0, 11763.999999999998], [435.0, 11676.266666666666], [436.0, 12032.411764705883], [437.0, 10923.1875], [438.0, 10544.0], [439.0, 10816.714285714286], [440.0, 10164.484848484848], [446.0, 10504.875000000002], [447.0, 11379.785714285714], [444.0, 11507.941176470587], [445.0, 11347.111111111111], [441.0, 10731.687499999998], [442.0, 11329.8], [443.0, 11542.499999999998], [449.0, 11807.136363636362], [448.0, 9855.617647058823], [450.0, 9566.041666666666], [451.0, 42025.15789473684], [452.0, 10893.5], [453.0, 11500.454545454548], [454.0, 10985.857142857143], [455.0, 26571.05], [456.0, 10078.105263157897], [462.0, 11429.75], [463.0, 11869.444444444443], [460.0, 10800.588235294115], [461.0, 12286.454545454544], [457.0, 23374.769230769234], [458.0, 10874.850000000002], [459.0, 10481.315789473683], [465.0, 10407.733333333335], [464.0, 10945.608695652172], [466.0, 9916.636363636362], [467.0, 10858.333333333332], [468.0, 35683.13636363636], [469.0, 11843.692307692307], [470.0, 41054.375], [471.0, 10951.857142857143], [472.0, 10497.521739130432], [478.0, 8595.080000000002], [479.0, 9855.384615384615], [476.0, 11140.384615384617], [477.0, 10776.404761904761], [473.0, 11136.565217391304], [474.0, 10659.8125], [475.0, 10061.0], [481.0, 10848.153846153846], [480.0, 9172.92857142857], [482.0, 11771.846153846152], [483.0, 10583.933333333332], [484.0, 10585.999999999998], [485.0, 9586.411764705885], [486.0, 11018.371428571429], [487.0, 20647.65], [488.0, 19516.619047619046], [494.0, 19276.846153846152], [495.0, 11590.615384615383], [492.0, 19234.052631578947], [493.0, 10848.57142857143], [489.0, 10308.333333333332], [490.0, 12429.111111111111], [491.0, 12926.214285714286], [496.0, 11065.095238095235], [497.0, 11288.466666666669], [498.0, 14027.69696969697], [499.0, 12575.642857142857], [500.0, 14883.250000000002]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[325.89524693267253, 12331.932157954401]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 33.0], [3.0, 32.0], [4.0, 35.0], [5.0, 34.0], [6.0, 34.0], [7.0, 34.0], [8.0, 26.0], [9.0, 36.0], [10.0, 40.0], [11.0, 44.0], [12.0, 36.0], [13.0, 28.0], [14.0, 21.0], [15.0, 45.0], [16.0, 75442.66666666667], [17.0, 115.0], [18.0, 173.0], [19.0, 658.0], [20.0, 151.0], [21.0, 247.0], [22.0, 384.0], [23.0, 655.0], [24.0, 887.0], [25.0, 697.0], [26.0, 71439.66666666667], [27.0, 559.0], [28.0, 790.0], [30.0, 47229.666666666664], [31.0, 790.0], [33.0, 1064.0], [34.0, 1026.0], [35.0, 71092.5], [36.0, 1738.0], [37.0, 1714.0], [39.0, 2015.0], [40.0, 28615.666666666668], [41.0, 1865.0], [43.0, 2003.0], [44.0, 2457.0], [45.0, 2386.0], [46.0, 2381.0], [47.0, 2610.0], [48.0, 2538.0], [49.0, 2570.0], [50.0, 2775.0], [52.0, 2874.0], [53.0, 2864.0], [54.0, 2618.0], [55.0, 2844.0], [57.0, 3085.0], [58.0, 3207.0], [59.0, 91633.22222222222], [60.0, 2899.0], [61.0, 2903.0], [63.0, 14849.5], [64.0, 3381.0], [65.0, 3601.0], [66.0, 28330.5], [67.0, 3570.0], [68.0, 28498.5], [69.0, 3847.0], [70.0, 3828.0], [72.0, 4242.0], [73.0, 4495.0], [74.0, 4565.0], [75.0, 4179.0], [76.0, 4067.0], [77.0, 4122.0], [78.0, 4348.0], [79.0, 4486.0], [80.0, 4462.0], [81.0, 4217.5], [83.0, 4240.0], [84.0, 4488.0], [85.0, 4564.0], [86.0, 4807.0], [87.0, 4424.0], [88.0, 4665.0], [90.0, 5120.0], [91.0, 5606.0], [92.0, 40146.0], [93.0, 5446.0], [94.0, 5660.0], [95.0, 5821.0], [96.0, 5844.0], [97.0, 5607.0], [98.0, 5636.0], [99.0, 5718.0], [100.0, 5907.0], [101.0, 5784.0], [102.0, 84950.5], [103.0, 164351.0], [104.0, 28887.0], [106.0, 6112.0], [107.0, 11776.0], [108.0, 12739.0], [109.0, 6176.0], [110.0, 6189.0], [111.0, 6190.0], [112.0, 6244.0], [113.0, 6112.0], [114.0, 6243.0], [115.0, 6315.0], [116.0, 6483.0], [117.0, 6655.0], [119.0, 7009.0], [121.0, 33776.0], [122.0, 11727.5], [123.0, 36176.0], [124.0, 7990.5], [125.0, 7953.0], [127.0, 8078.0], [128.0, 15268.0], [129.0, 14621.0], [130.0, 7955.0], [131.0, 7927.0], [132.0, 14369.5], [133.0, 7842.0], [134.0, 14769.5], [135.0, 7689.0], [136.0, 14570.0], [137.0, 7629.0], [139.0, 10362.666666666666], [141.0, 8201.0], [142.0, 8480.0], [143.0, 8078.0], [140.0, 154521.0], [138.0, 15114.0], [144.0, 8311.0], [145.0, 12101.0], [146.0, 8636.0], [147.0, 8639.0], [148.0, 8550.0], [149.0, 12227.5], [150.0, 8684.0], [151.0, 8739.0], [152.0, 8438.0], [153.0, 8636.0], [154.0, 8826.0], [156.0, 8996.0], [159.0, 14316.0], [164.0, 13462.0], [165.0, 11088.0], [160.0, 14298.0], [175.0, 19973.5], [171.0, 13521.0], [168.0, 15614.0], [176.0, 11107.0], [177.0, 10957.0], [180.0, 10494.0], [179.0, 13852.0], [184.0, 13450.0], [193.0, 11583.0], [196.0, 11102.0], [197.0, 17807.0], [200.0, 12688.0], [202.0, 12327.0], [205.0, 10844.0], [208.0, 12021.0], [210.0, 11004.0], [212.0, 10607.333333333334], [215.0, 8649.0], [216.0, 10013.0], [217.0, 16449.0], [218.0, 10423.5], [219.0, 15488.0], [221.0, 11775.0], [224.0, 13156.5], [227.0, 10353.0], [230.0, 19529.0], [232.0, 19905.0], [236.0, 12501.0], [238.0, 10953.0], [239.0, 10020.5], [240.0, 11259.0], [241.0, 9010.0], [244.0, 61334.5], [245.0, 11073.0], [246.0, 10283.0], [248.0, 72919.0], [251.0, 21120.5], [253.0, 106018.0], [254.0, 11904.0], [258.0, 13390.0], [257.0, 63628.0], [259.0, 92830.66666666667], [268.0, 17631.0], [269.0, 60559.8], [270.0, 1.0], [271.0, 34349.0], [260.0, 28694.0], [261.0, 47551.0], [262.0, 15114.0], [263.0, 62007.0], [264.0, 12785.0], [265.0, 84642.0], [267.0, 73957.4], [273.0, 41189.0], [272.0, 38072.0], [274.0, 14071.25], [275.0, 89616.66666666667], [276.0, 12397.5], [277.0, 76599.0], [279.0, 67601.0], [278.0, 118784.0], [281.0, 29343.999999999996], [287.0, 4286.5], [284.0, 12289.666666666666], [286.0, 11842.0], [282.0, 9059.0], [283.0, 14668.142857142857], [289.0, 94554.66666666667], [288.0, 12716.5], [291.0, 14082.5], [300.0, 64249.25], [301.0, 9114.5], [302.0, 7304.7], [303.0, 8984.5], [292.0, 15658.4], [293.0, 29819.454545454537], [294.0, 15951.5], [295.0, 12186.4], [296.0, 31356.2], [297.0, 10369.0], [298.0, 57547.5], [299.0, 8358.0], [305.0, 9925.0], [304.0, 10810.0], [306.0, 8700.0], [307.0, 15666.2], [308.0, 31890.2], [309.0, 21924.25], [310.0, 19719.5], [311.0, 13318.400000000001], [312.0, 7933.0], [319.0, 7934.0], [318.0, 13312.0], [316.0, 12956.199999999999], [317.0, 12597.75], [313.0, 8959.0], [314.0, 111465.0], [315.0, 11460.8], [321.0, 12766.5], [320.0, 31394.57142857143], [322.0, 11478.0], [323.0, 12717.124999999998], [324.0, 27365.166666666664], [325.0, 9226.0], [326.0, 36897.181818181816], [327.0, 13264.0], [328.0, 11093.166666666668], [334.0, 11298.666666666666], [332.0, 8384.699999999999], [333.0, 10982.666666666666], [329.0, 10371.833333333334], [330.0, 0.0], [331.0, 13348.0], [337.0, 12668.75], [336.0, 13823.8], [338.0, 13501.5], [339.0, 9783.818181818182], [340.0, 6308.25], [341.0, 65218.24999999999], [342.0, 10004.75], [343.0, 9187.45], [344.0, 10303.25], [350.0, 9598.428571428572], [351.0, 47115.66666666667], [348.0, 7480.333333333333], [349.0, 16491.666666666668], [345.0, 13705.0], [346.0, 6562.2], [347.0, 22534.000000000004], [353.0, 12288.0], [352.0, 9869.666666666666], [354.0, 9813.0], [355.0, 8770.5], [356.0, 13406.25], [357.0, 10086.199999999999], [358.0, 10617.0], [359.0, 7674.75], [360.0, 12688.0], [366.0, 9129.666666666666], [367.0, 9741.583333333334], [364.0, 7167.0], [365.0, 8678.833333333334], [361.0, 11896.333333333334], [362.0, 11461.75], [363.0, 9343.5], [380.0, 8993.0], [370.0, 10752.5], [369.0, 11941.749999999998], [371.0, 14083.25], [381.0, 9216.333333333334], [382.0, 81068.11111111111], [374.0, 13891.0], [375.0, 11282.4], [376.0, 7987.6], [377.0, 13267.666666666666], [378.0, 17859.666666666668], [379.0, 6912.75], [385.0, 7313.8], [384.0, 12089.5], [386.0, 9600.0], [387.0, 12485.5], [388.0, 13412.75], [389.0, 11516.09090909091], [390.0, 12505.0], [392.0, 12435.625000000002], [398.0, 9572.500000000002], [399.0, 8444.142857142857], [396.0, 10191.0], [397.0, 13410.0], [393.0, 12084.5], [394.0, 12216.2], [412.0, 11903.833333333334], [402.0, 13312.0], [401.0, 8334.307692307691], [403.0, 12309.0], [413.0, 11908.538461538461], [414.0, 8230.461538461539], [415.0, 9222.0], [405.0, 5568.250000000001], [407.0, 14548.000000000002], [408.0, 12922.714285714284], [409.0, 14494.75], [410.0, 8959.0], [411.0, 9983.0], [417.0, 8981.4], [416.0, 10035.6], [418.0, 1.0], [419.0, 12220.5], [420.0, 1.0], [421.0, 8711.5], [422.0, 7247.0], [423.0, 10251.0], [424.0, 10363.5], [430.0, 13595.0], [431.0, 7437.5], [428.0, 12932.0], [429.0, 13094.25], [425.0, 11596.555555555555], [426.0, 10109.5], [427.0, 14399.75], [433.0, 7899.714285714285], [432.0, 12974.222222222224], [434.0, 15174.0], [444.0, 14264.0], [446.0, 9019.0], [447.0, 10460.4], [436.0, 13821.6], [437.0, 12960.333333333334], [438.0, 8705.0], [439.0, 11093.333333333334], [440.0, 8282.57142857143], [441.0, 12330.0], [443.0, 4089.333333333333], [449.0, 10992.416666666668], [448.0, 11045.0], [450.0, 8083.142857142859], [451.0, 66471.16666666666], [453.0, 13552.666666666668], [454.0, 11288.0], [455.0, 34943.0], [456.0, 8590.11111111111], [462.0, 10488.25], [463.0, 12232.6], [460.0, 10162.92307692308], [461.0, 10116.666666666668], [457.0, 46624.09090909091], [458.0, 10143.2], [459.0, 27542.14285714286], [465.0, 13755.0], [464.0, 8065.500000000001], [466.0, 8838.6], [467.0, 11183.0], [468.0, 9941.0], [469.0, 10696.090909090908], [470.0, 23501.399999999998], [471.0, 8874.666666666668], [472.0, 11555.333333333334], [478.0, 10475.0], [479.0, 11152.6], [476.0, 7249.0], [477.0, 10672.625], [473.0, 12418.0], [474.0, 11878.0], [475.0, 13308.0], [481.0, 4556.0], [480.0, 9088.374999999998], [482.0, 10030.454545454546], [483.0, 9152.0], [484.0, 8860.5], [485.0, 10239.42857142857], [486.0, 11272.909090909092], [487.0, 26665.0], [488.0, 57801.5], [494.0, 110257.0], [492.0, 13213.666666666668], [493.0, 12233.0], [489.0, 6656.5], [490.0, 14958.391304347822], [491.0, 8576.5], [496.0, 7264.0], [498.0, 14439.249999999998], [499.0, 10495.333333333334], [500.0, 25123.43674698796], [1.0, 103.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[372.1032917139617, 18766.842792281503]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 355.93333333333334, "minX": 1.53938886E12, "maxY": 1094179.85, "series": [{"data": [[1.53938892E12, 1000802.1166666667], [1.53938952E12, 98383.75], [1.5393891E12, 1053226.7], [1.53938904E12, 1038986.4666666667], [1.5393894E12, 1094179.85], [1.53938922E12, 1029330.2833333333], [1.53938946E12, 986011.8333333334], [1.53938916E12, 1062045.5833333333], [1.53938928E12, 1067956.1166666667], [1.53938886E12, 77192.71666666666], [1.53938934E12, 1035433.4833333333], [1.53938898E12, 1036193.9166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53938892E12, 3509.266666666667], [1.53938952E12, 714.1833333333333], [1.5393891E12, 3482.9333333333334], [1.53938904E12, 3460.516666666667], [1.5393894E12, 6254.3], [1.53938922E12, 7048.383333333333], [1.53938946E12, 6252.683333333333], [1.53938916E12, 5195.533333333334], [1.53938928E12, 7244.483333333334], [1.53938886E12, 355.93333333333334], [1.53938934E12, 7530.65], [1.53938898E12, 3612.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53938952E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 39.61538461538462, "minX": 1.53938886E12, "maxY": 74388.82926829268, "series": [{"data": [[1.53938892E12, 2855.5961538461543], [1.53938952E12, 74388.82926829268], [1.5393891E12, 10773.071428571428], [1.53938904E12, 9834.378378378378], [1.5393894E12, 21166.098039215707], [1.53938922E12, 10780.003558718861], [1.53938946E12, 31599.934272300474], [1.53938916E12, 11362.905063291139], [1.53938928E12, 10278.361403508783], [1.53938886E12, 1178.1538461538462], [1.53938934E12, 17018.821538461518], [1.53938898E12, 6787.0192307692305]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53938892E12, 3092.650793650795], [1.53938952E12, 65137.20408163266], [1.5393891E12, 11731.526954177896], [1.53938904E12, 10695.371705963937], [1.5393894E12, 14650.331531531514], [1.53938922E12, 11270.80052493439], [1.53938946E12, 17906.879032258064], [1.53938916E12, 12564.631693989062], [1.53938928E12, 10856.599832915615], [1.53938886E12, 1209.3396226415095], [1.53938934E12, 13300.197654941372], [1.53938898E12, 7112.42956764295]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53938892E12, 2000.8214285714284], [1.53938952E12, 66451.5238095238], [1.5393891E12, 19662.72972972973], [1.53938904E12, 9764.548387096775], [1.5393894E12, 25300.63054187192], [1.53938922E12, 14082.547540983594], [1.53938946E12, 31862.1978021978], [1.53938916E12, 28625.948453608253], [1.53938928E12, 10786.25496688741], [1.53938886E12, 39.61538461538462], [1.53938934E12, 13952.087976539597], [1.53938898E12, 5977.857142857142]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53938952E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 39.46153846153846, "minX": 1.53938886E12, "maxY": 74388.78048780486, "series": [{"data": [[1.53938892E12, 2855.5961538461543], [1.53938952E12, 74388.78048780486], [1.5393891E12, 10773.071428571428], [1.53938904E12, 9834.351351351355], [1.5393894E12, 21166.098039215707], [1.53938922E12, 10779.999999999998], [1.53938946E12, 31599.929577464787], [1.53938916E12, 11362.89873417722], [1.53938928E12, 10278.361403508783], [1.53938886E12, 1178.1538461538462], [1.53938934E12, 17018.815384615373], [1.53938898E12, 6787.0192307692305]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53938892E12, 3092.2467532467535], [1.53938952E12, 65136.87755102041], [1.5393891E12, 11731.025606469], [1.53938904E12, 10694.909847434126], [1.5393894E12, 14649.992792792795], [1.53938922E12, 11270.47856517937], [1.53938946E12, 17906.583333333332], [1.53938916E12, 12564.198907103828], [1.53938928E12, 10856.127819548865], [1.53938886E12, 1208.8490566037735], [1.53938934E12, 13299.907035175871], [1.53938898E12, 7111.870292887033]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53938892E12, 2000.7678571428576], [1.53938952E12, 66451.5238095238], [1.5393891E12, 19662.72972972973], [1.53938904E12, 9764.483870967742], [1.5393894E12, 25300.63054187192], [1.53938922E12, 14082.540983606565], [1.53938946E12, 31862.18131868132], [1.53938916E12, 28625.943298969083], [1.53938928E12, 10786.24834437086], [1.53938886E12, 39.46153846153846], [1.53938934E12, 13952.085043988276], [1.53938898E12, 5977.857142857142]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53938952E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53938886E12, "maxY": 4.384615384615386, "series": [{"data": [[1.53938892E12, 0.44230769230769224], [1.53938952E12, 0.4878048780487806], [1.5393891E12, 0.7142857142857143], [1.53938904E12, 0.8648648648648647], [1.5393894E12, 0.5245098039215683], [1.53938922E12, 0.6085409252669038], [1.53938946E12, 0.5258215962441318], [1.53938916E12, 0.6835443037974682], [1.53938928E12, 0.5789473684210524], [1.53938886E12, 0.0], [1.53938934E12, 0.5230769230769232], [1.53938898E12, 0.7692307692307694]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53938892E12, 0.6796536796536798], [1.53938952E12, 0.4183673469387756], [1.5393891E12, 0.526954177897575], [1.53938904E12, 0.5464632454923716], [1.5393894E12, 0.36936936936936954], [1.53938922E12, 0.5564304461942248], [1.53938946E12, 0.5860215053763438], [1.53938916E12, 0.5715846994535522], [1.53938928E12, 0.45530492898913977], [1.53938886E12, 0.4716981132075473], [1.53938934E12, 0.39363484087102185], [1.53938898E12, 0.5815899581589965]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53938892E12, 1.5535714285714286], [1.53938952E12, 0.5714285714285714], [1.5393891E12, 1.0000000000000004], [1.53938904E12, 2.2580645161290325], [1.5393894E12, 0.5763546798029557], [1.53938922E12, 0.5803278688524587], [1.53938946E12, 0.5824175824175825], [1.53938916E12, 0.7010309278350515], [1.53938928E12, 0.6986754966887421], [1.53938886E12, 4.384615384615386], [1.53938934E12, 0.5542521994134898], [1.53938898E12, 0.9464285714285715]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53938952E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 21.0, "minX": 1.53938886E12, "maxY": 100067.0, "series": [{"data": [[1.53938892E12, 8355.0], [1.53938952E12, 100067.0], [1.5393891E12, 55073.0], [1.53938904E12, 26483.0], [1.5393894E12, 91906.0], [1.53938922E12, 23725.0], [1.53938946E12, 18956.0], [1.53938916E12, 23017.0], [1.53938928E12, 17507.0], [1.53938886E12, 5664.0], [1.53938934E12, 37967.0], [1.53938898E12, 12120.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53938892E12, 21.0], [1.53938952E12, 13464.0], [1.5393891E12, 9010.0], [1.53938904E12, 7575.0], [1.5393894E12, 9262.0], [1.53938922E12, 9171.0], [1.53938946E12, 10468.0], [1.53938916E12, 9288.0], [1.53938928E12, 8992.0], [1.53938886E12, 26.0], [1.53938934E12, 8930.0], [1.53938898E12, 3972.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53938892E12, 4633.6], [1.53938952E12, 12082.0], [1.5393891E12, 11860.0], [1.53938904E12, 11578.6], [1.5393894E12, 11667.6], [1.53938922E12, 11724.1], [1.53938946E12, 12017.0], [1.53938916E12, 11758.2], [1.53938928E12, 11704.599999999999], [1.53938886E12, 1330.3], [1.53938934E12, 11711.0], [1.53938898E12, 8200.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53938892E12, 5618.400000000001], [1.53938952E12, 16904.0], [1.5393891E12, 13070.200000000017], [1.53938904E12, 12514.839999999993], [1.5393894E12, 14417.64], [1.53938922E12, 14247.829999999998], [1.53938946E12, 14840.920000000002], [1.53938916E12, 13473.96], [1.53938928E12, 14344.56000000002], [1.53938886E12, 5664.0], [1.53938934E12, 14417.099999999997], [1.53938898E12, 9483.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53938892E12, 4945.799999999999], [1.53938952E12, 12511.0], [1.5393891E12, 12239.0], [1.53938904E12, 11977.999999999998], [1.5393894E12, 12062.8], [1.53938922E12, 12170.150000000001], [1.53938946E12, 12384.599999999999], [1.53938916E12, 12185.6], [1.53938928E12, 12124.0], [1.53938886E12, 1353.6], [1.53938934E12, 12105.0], [1.53938898E12, 9100.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53938952E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 1.0, "maxY": 107008.0, "series": [{"data": [[1.0, 1197.5], [21.0, 10905.5], [3.0, 21240.0], [25.0, 11393.0], [13.0, 9033.0], [28.0, 10854.0], [29.0, 10850.0], [31.0, 11053.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 6.0], [21.0, 13305.0], [3.0, 107008.0], [25.0, 13312.0], [13.0, 13224.0], [28.0, 10240.0], [29.0, 10751.0], [31.0, 11775.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 1.0, "maxY": 107008.0, "series": [{"data": [[1.0, 1197.5], [21.0, 10905.0], [3.0, 21240.0], [25.0, 11392.5], [13.0, 9032.0], [28.0, 10854.0], [29.0, 10849.0], [31.0, 11052.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 6.0], [21.0, 13305.0], [3.0, 107008.0], [25.0, 13312.0], [13.0, 13224.0], [28.0, 10240.0], [29.0, 10751.0], [31.0, 11775.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.5333333333333334, "minX": 1.53938886E12, "maxY": 32.0, "series": [{"data": [[1.53938892E12, 14.35], [1.5393891E12, 14.45], [1.53938904E12, 14.15], [1.5393894E12, 25.4], [1.53938922E12, 29.816666666666666], [1.53938946E12, 19.866666666666667], [1.53938916E12, 22.116666666666667], [1.53938928E12, 30.733333333333334], [1.53938886E12, 1.5333333333333334], [1.53938934E12, 32.0], [1.53938898E12, 14.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53938946E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53938886E12, "maxY": 17.783333333333335, "series": [{"data": [[1.53938892E12, 12.416666666666666], [1.53938952E12, 1.5166666666666666], [1.5393891E12, 12.55], [1.53938904E12, 12.483333333333333], [1.5393894E12, 12.95], [1.53938922E12, 12.516666666666667], [1.53938946E12, 11.55], [1.53938916E12, 12.733333333333333], [1.53938928E12, 12.733333333333333], [1.53938886E12, 1.0833333333333333], [1.53938934E12, 12.483333333333333], [1.53938898E12, 12.833333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53938892E12, 0.8666666666666667], [1.53938952E12, 0.016666666666666666], [1.5393891E12, 0.38333333333333336], [1.53938904E12, 0.6166666666666667], [1.5393894E12, 0.2833333333333333], [1.53938922E12, 0.6666666666666666], [1.53938946E12, 0.18333333333333332], [1.53938916E12, 0.4], [1.53938928E12, 0.4166666666666667], [1.53938886E12, 0.21666666666666667], [1.53938934E12, 0.55], [1.53938898E12, 0.8666666666666667]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53938892E12, 0.06666666666666667], [1.53938952E12, 1.1333333333333333], [1.5393891E12, 0.48333333333333334], [1.53938904E12, 0.05], [1.5393894E12, 11.866666666666667], [1.53938922E12, 15.366666666666667], [1.53938946E12, 13.116666666666667], [1.53938916E12, 7.766666666666667], [1.53938928E12, 16.45], [1.53938886E12, 0.016666666666666666], [1.53938934E12, 17.783333333333335], [1.53938898E12, 0.05]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53938952E12, 0.35], [1.5393891E12, 0.03333333333333333], [1.5393894E12, 0.18333333333333332], [1.53938922E12, 0.26666666666666666], [1.53938946E12, 0.3333333333333333], [1.53938916E12, 0.21666666666666667], [1.53938928E12, 0.13333333333333333], [1.53938934E12, 0.18333333333333332]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53938952E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53938886E12, "maxY": 12.633333333333333, "series": [{"data": [[1.53938892E12, 0.9333333333333333], [1.53938952E12, 0.4166666666666667], [1.5393891E12, 0.4], [1.53938904E12, 0.5166666666666667], [1.5393894E12, 0.31666666666666665], [1.53938922E12, 0.6666666666666666], [1.53938946E12, 0.18333333333333332], [1.53938916E12, 0.48333333333333334], [1.53938928E12, 0.4166666666666667], [1.53938886E12, 0.21666666666666667], [1.53938934E12, 0.5666666666666667], [1.53938898E12, 0.9333333333333333]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53938892E12, 0.8666666666666667], [1.53938952E12, 0.016666666666666666], [1.5393891E12, 0.38333333333333336], [1.53938904E12, 0.6166666666666667], [1.5393894E12, 0.2833333333333333], [1.53938922E12, 0.6666666666666666], [1.53938946E12, 0.18333333333333332], [1.53938916E12, 0.4], [1.53938928E12, 0.4166666666666667], [1.53938886E12, 0.21666666666666667], [1.53938934E12, 0.55], [1.53938898E12, 0.8666666666666667]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53938952E12, 0.2833333333333333], [1.5393891E12, 0.21666666666666667], [1.5393894E12, 3.066666666666667], [1.53938922E12, 4.416666666666667], [1.53938946E12, 2.85], [1.53938916E12, 2.75], [1.53938928E12, 4.616666666666666], [1.53938934E12, 5.116666666666666]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53938892E12, 0.06666666666666667], [1.53938952E12, 0.5333333333333333], [1.5393891E12, 0.21666666666666667], [1.53938904E12, 0.05], [1.5393894E12, 5.866666666666666], [1.53938922E12, 7.2], [1.53938946E12, 7.233333333333333], [1.53938916E12, 3.0], [1.53938928E12, 7.633333333333334], [1.53938886E12, 0.016666666666666666], [1.53938934E12, 7.983333333333333], [1.53938898E12, 0.05]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.53938952E12, 0.6666666666666666], [1.5393891E12, 0.08333333333333333], [1.5393894E12, 3.1166666666666667], [1.53938922E12, 4.016666666666667], [1.53938946E12, 3.3666666666666667], [1.53938916E12, 2.2333333333333334], [1.53938928E12, 4.333333333333333], [1.53938934E12, 4.866666666666666]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53938892E12, 11.483333333333333], [1.53938952E12, 1.1], [1.5393891E12, 12.15], [1.53938904E12, 11.966666666666667], [1.5393894E12, 12.633333333333333], [1.53938922E12, 11.85], [1.53938946E12, 11.366666666666667], [1.53938916E12, 12.25], [1.53938928E12, 12.316666666666666], [1.53938886E12, 0.8666666666666667], [1.53938934E12, 11.916666666666666], [1.53938898E12, 11.9]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53938952E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
