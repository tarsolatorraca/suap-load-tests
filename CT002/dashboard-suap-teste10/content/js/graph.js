/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 229631.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 3.0], [6.8, 3.0], [6.9, 5.0], [7.0, 22.0], [7.1, 592.0], [7.2, 695.0], [7.3, 722.0], [7.4, 986.0], [7.5, 1316.0], [7.6, 1319.0], [7.7, 1334.0], [7.8, 1340.0], [7.9, 1366.0], [8.0, 1385.0], [8.1, 1731.0], [8.2, 1843.0], [8.3, 1922.0], [8.4, 1995.0], [8.5, 2066.0], [8.6, 2228.0], [8.7, 2263.0], [8.8, 2289.0], [8.9, 2308.0], [9.0, 2713.0], [9.1, 2830.0], [9.2, 3184.0], [9.3, 3378.0], [9.4, 3437.0], [9.5, 3562.0], [9.6, 3683.0], [9.7, 3736.0], [9.8, 3780.0], [9.9, 3792.0], [10.0, 4068.0], [10.1, 4224.0], [10.2, 4269.0], [10.3, 4354.0], [10.4, 4583.0], [10.5, 4696.0], [10.6, 4703.0], [10.7, 4952.0], [10.8, 5222.0], [10.9, 5503.0], [11.0, 5702.0], [11.1, 5716.0], [11.2, 5893.0], [11.3, 5945.0], [11.4, 6048.0], [11.5, 6273.0], [11.6, 6316.0], [11.7, 6334.0], [11.8, 6422.0], [11.9, 6555.0], [12.0, 6574.0], [12.1, 6577.0], [12.2, 6661.0], [12.3, 6709.0], [12.4, 6936.0], [12.5, 7112.0], [12.6, 7163.0], [12.7, 7163.0], [12.8, 7165.0], [12.9, 7166.0], [13.0, 7166.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7167.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7169.0], [15.8, 7169.0], [15.9, 7171.0], [16.0, 7171.0], [16.1, 7172.0], [16.2, 7172.0], [16.3, 7368.0], [16.4, 7372.0], [16.5, 7421.0], [16.6, 7421.0], [16.7, 7422.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7425.0], [18.7, 7427.0], [18.8, 7525.0], [18.9, 7678.0], [19.0, 7678.0], [19.1, 7679.0], [19.2, 7679.0], [19.3, 7679.0], [19.4, 7679.0], [19.5, 7679.0], [19.6, 7680.0], [19.7, 7680.0], [19.8, 7680.0], [19.9, 7684.0], [20.0, 7690.0], [20.1, 7886.0], [20.2, 7931.0], [20.3, 7932.0], [20.4, 7932.0], [20.5, 7932.0], [20.6, 7934.0], [20.7, 7934.0], [20.8, 7935.0], [20.9, 7935.0], [21.0, 7935.0], [21.1, 7936.0], [21.2, 7936.0], [21.3, 7936.0], [21.4, 7936.0], [21.5, 7962.0], [21.6, 8087.0], [21.7, 8187.0], [21.8, 8188.0], [21.9, 8188.0], [22.0, 8190.0], [22.1, 8191.0], [22.2, 8191.0], [22.3, 8191.0], [22.4, 8191.0], [22.5, 8191.0], [22.6, 8191.0], [22.7, 8191.0], [22.8, 8192.0], [22.9, 8192.0], [23.0, 8192.0], [23.1, 8193.0], [23.2, 8193.0], [23.3, 8194.0], [23.4, 8195.0], [23.5, 8196.0], [23.6, 8385.0], [23.7, 8446.0], [23.8, 8447.0], [23.9, 8447.0], [24.0, 8447.0], [24.1, 8447.0], [24.2, 8451.0], [24.3, 8699.0], [24.4, 8702.0], [24.5, 8702.0], [24.6, 8703.0], [24.7, 8703.0], [24.8, 8703.0], [24.9, 8703.0], [25.0, 8703.0], [25.1, 8703.0], [25.2, 8703.0], [25.3, 8703.0], [25.4, 8703.0], [25.5, 8703.0], [25.6, 8703.0], [25.7, 8703.0], [25.8, 8704.0], [25.9, 8704.0], [26.0, 8704.0], [26.1, 8704.0], [26.2, 8767.0], [26.3, 8958.0], [26.4, 8959.0], [26.5, 8959.0], [26.6, 9184.0], [26.7, 9202.0], [26.8, 9211.0], [26.9, 9212.0], [27.0, 9214.0], [27.1, 9214.0], [27.2, 9214.0], [27.3, 9215.0], [27.4, 9215.0], [27.5, 9215.0], [27.6, 9215.0], [27.7, 9215.0], [27.8, 9215.0], [27.9, 9215.0], [28.0, 9215.0], [28.1, 9215.0], [28.2, 9215.0], [28.3, 9216.0], [28.4, 9216.0], [28.5, 9216.0], [28.6, 9216.0], [28.7, 9216.0], [28.8, 9216.0], [28.9, 9216.0], [29.0, 9216.0], [29.1, 9219.0], [29.2, 9225.0], [29.3, 9238.0], [29.4, 9257.0], [29.5, 9288.0], [29.6, 9297.0], [29.7, 9301.0], [29.8, 9311.0], [29.9, 9368.0], [30.0, 9427.0], [30.1, 9430.0], [30.2, 9445.0], [30.3, 9462.0], [30.4, 9468.0], [30.5, 9471.0], [30.6, 9472.0], [30.7, 9492.0], [30.8, 9494.0], [30.9, 9494.0], [31.0, 9535.0], [31.1, 9558.0], [31.2, 9568.0], [31.3, 9588.0], [31.4, 9597.0], [31.5, 9607.0], [31.6, 9610.0], [31.7, 9625.0], [31.8, 9639.0], [31.9, 9643.0], [32.0, 9650.0], [32.1, 9676.0], [32.2, 9695.0], [32.3, 9709.0], [32.4, 9712.0], [32.5, 9723.0], [32.6, 9723.0], [32.7, 9724.0], [32.8, 9726.0], [32.9, 9726.0], [33.0, 9727.0], [33.1, 9727.0], [33.2, 9727.0], [33.3, 9727.0], [33.4, 9727.0], [33.5, 9727.0], [33.6, 9727.0], [33.7, 9727.0], [33.8, 9727.0], [33.9, 9727.0], [34.0, 9727.0], [34.1, 9727.0], [34.2, 9727.0], [34.3, 9728.0], [34.4, 9728.0], [34.5, 9728.0], [34.6, 9728.0], [34.7, 9728.0], [34.8, 9728.0], [34.9, 9728.0], [35.0, 9728.0], [35.1, 9728.0], [35.2, 9729.0], [35.3, 9730.0], [35.4, 9731.0], [35.5, 9739.0], [35.6, 9745.0], [35.7, 9750.0], [35.8, 9762.0], [35.9, 9779.0], [36.0, 9790.0], [36.1, 9799.0], [36.2, 9803.0], [36.3, 9809.0], [36.4, 9827.0], [36.5, 9845.0], [36.6, 9867.0], [36.7, 9882.0], [36.8, 9902.0], [36.9, 9910.0], [37.0, 9918.0], [37.1, 9920.0], [37.2, 9942.0], [37.3, 9945.0], [37.4, 9971.0], [37.5, 9980.0], [37.6, 9981.0], [37.7, 9981.0], [37.8, 9982.0], [37.9, 9982.0], [38.0, 9983.0], [38.1, 9983.0], [38.2, 9984.0], [38.3, 9984.0], [38.4, 9984.0], [38.5, 9984.0], [38.6, 9985.0], [38.7, 10036.0], [38.8, 10057.0], [38.9, 10067.0], [39.0, 10074.0], [39.1, 10110.0], [39.2, 10118.0], [39.3, 10149.0], [39.4, 10161.0], [39.5, 10173.0], [39.6, 10176.0], [39.7, 10184.0], [39.8, 10202.0], [39.9, 10207.0], [40.0, 10238.0], [40.1, 10238.0], [40.2, 10238.0], [40.3, 10238.0], [40.4, 10238.0], [40.5, 10239.0], [40.6, 10239.0], [40.7, 10239.0], [40.8, 10239.0], [40.9, 10240.0], [41.0, 10240.0], [41.1, 10240.0], [41.2, 10242.0], [41.3, 10242.0], [41.4, 10243.0], [41.5, 10276.0], [41.6, 10292.0], [41.7, 10310.0], [41.8, 10318.0], [41.9, 10341.0], [42.0, 10351.0], [42.1, 10364.0], [42.2, 10367.0], [42.3, 10387.0], [42.4, 10389.0], [42.5, 10405.0], [42.6, 10440.0], [42.7, 10442.0], [42.8, 10459.0], [42.9, 10477.0], [43.0, 10489.0], [43.1, 10495.0], [43.2, 10495.0], [43.3, 10496.0], [43.4, 10499.0], [43.5, 10506.0], [43.6, 10566.0], [43.7, 10572.0], [43.8, 10599.0], [43.9, 10621.0], [44.0, 10634.0], [44.1, 10646.0], [44.2, 10654.0], [44.3, 10676.0], [44.4, 10696.0], [44.5, 10709.0], [44.6, 10744.0], [44.7, 10750.0], [44.8, 10750.0], [44.9, 10751.0], [45.0, 10751.0], [45.1, 10751.0], [45.2, 10751.0], [45.3, 10751.0], [45.4, 10751.0], [45.5, 10751.0], [45.6, 10752.0], [45.7, 10763.0], [45.8, 10779.0], [45.9, 10801.0], [46.0, 10826.0], [46.1, 10839.0], [46.2, 10860.0], [46.3, 10871.0], [46.4, 10889.0], [46.5, 10929.0], [46.6, 10950.0], [46.7, 10959.0], [46.8, 11003.0], [46.9, 11004.0], [47.0, 11006.0], [47.1, 11006.0], [47.2, 11007.0], [47.3, 11007.0], [47.4, 11007.0], [47.5, 11007.0], [47.6, 11007.0], [47.7, 11007.0], [47.8, 11007.0], [47.9, 11007.0], [48.0, 11007.0], [48.1, 11008.0], [48.2, 11008.0], [48.3, 11008.0], [48.4, 11008.0], [48.5, 11012.0], [48.6, 11039.0], [48.7, 11056.0], [48.8, 11066.0], [48.9, 11067.0], [49.0, 11099.0], [49.1, 11115.0], [49.2, 11140.0], [49.3, 11163.0], [49.4, 11194.0], [49.5, 11207.0], [49.6, 11216.0], [49.7, 11217.0], [49.8, 11262.0], [49.9, 11263.0], [50.0, 11263.0], [50.1, 11263.0], [50.2, 11263.0], [50.3, 11263.0], [50.4, 11263.0], [50.5, 11264.0], [50.6, 11264.0], [50.7, 11264.0], [50.8, 11290.0], [50.9, 11318.0], [51.0, 11336.0], [51.1, 11360.0], [51.2, 11370.0], [51.3, 11381.0], [51.4, 11397.0], [51.5, 11405.0], [51.6, 11431.0], [51.7, 11469.0], [51.8, 11496.0], [51.9, 11507.0], [52.0, 11518.0], [52.1, 11519.0], [52.2, 11519.0], [52.3, 11519.0], [52.4, 11520.0], [52.5, 11520.0], [52.6, 11545.0], [52.7, 11546.0], [52.8, 11557.0], [52.9, 11586.0], [53.0, 11648.0], [53.1, 11653.0], [53.2, 11689.0], [53.3, 11697.0], [53.4, 11741.0], [53.5, 11755.0], [53.6, 11764.0], [53.7, 11771.0], [53.8, 11772.0], [53.9, 11774.0], [54.0, 11774.0], [54.1, 11774.0], [54.2, 11774.0], [54.3, 11774.0], [54.4, 11775.0], [54.5, 11775.0], [54.6, 11775.0], [54.7, 11775.0], [54.8, 11775.0], [54.9, 11775.0], [55.0, 11775.0], [55.1, 11776.0], [55.2, 11776.0], [55.3, 11844.0], [55.4, 11881.0], [55.5, 11904.0], [55.6, 11910.0], [55.7, 11921.0], [55.8, 12009.0], [55.9, 12031.0], [56.0, 12032.0], [56.1, 12032.0], [56.2, 12087.0], [56.3, 12141.0], [56.4, 12144.0], [56.5, 12163.0], [56.6, 12171.0], [56.7, 12285.0], [56.8, 12287.0], [56.9, 12287.0], [57.0, 12287.0], [57.1, 12287.0], [57.2, 12288.0], [57.3, 12288.0], [57.4, 12288.0], [57.5, 12288.0], [57.6, 12288.0], [57.7, 12291.0], [57.8, 12333.0], [57.9, 12429.0], [58.0, 12454.0], [58.1, 12499.0], [58.2, 12543.0], [58.3, 12544.0], [58.4, 12713.0], [58.5, 12799.0], [58.6, 12799.0], [58.7, 12800.0], [58.8, 12800.0], [58.9, 12860.0], [59.0, 12981.0], [59.1, 13030.0], [59.2, 13068.0], [59.3, 13247.0], [59.4, 13279.0], [59.5, 13305.0], [59.6, 13307.0], [59.7, 13307.0], [59.8, 13307.0], [59.9, 13308.0], [60.0, 13308.0], [60.1, 13308.0], [60.2, 13308.0], [60.3, 13308.0], [60.4, 13308.0], [60.5, 13308.0], [60.6, 13308.0], [60.7, 13309.0], [60.8, 13309.0], [60.9, 13310.0], [61.0, 13310.0], [61.1, 13310.0], [61.2, 13310.0], [61.3, 13310.0], [61.4, 13310.0], [61.5, 13310.0], [61.6, 13310.0], [61.7, 13310.0], [61.8, 13310.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13312.0], [71.8, 13312.0], [71.9, 13312.0], [72.0, 13312.0], [72.1, 13312.0], [72.2, 13312.0], [72.3, 13312.0], [72.4, 13312.0], [72.5, 13312.0], [72.6, 13312.0], [72.7, 13312.0], [72.8, 13312.0], [72.9, 13312.0], [73.0, 13312.0], [73.1, 13312.0], [73.2, 13312.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13313.0], [76.4, 13313.0], [76.5, 13313.0], [76.6, 13313.0], [76.7, 13313.0], [76.8, 13313.0], [76.9, 13313.0], [77.0, 13313.0], [77.1, 13313.0], [77.2, 13313.0], [77.3, 13313.0], [77.4, 13313.0], [77.5, 13314.0], [77.6, 13314.0], [77.7, 13315.0], [77.8, 13315.0], [77.9, 13315.0], [78.0, 13315.0], [78.1, 13315.0], [78.2, 13315.0], [78.3, 13316.0], [78.4, 13316.0], [78.5, 13316.0], [78.6, 13316.0], [78.7, 13317.0], [78.8, 13322.0], [78.9, 13395.0], [79.0, 13403.0], [79.1, 13519.0], [79.2, 13567.0], [79.3, 13567.0], [79.4, 13568.0], [79.5, 13568.0], [79.6, 13569.0], [79.7, 13569.0], [79.8, 13819.0], [79.9, 13820.0], [80.0, 13821.0], [80.1, 13822.0], [80.2, 13822.0], [80.3, 13823.0], [80.4, 13823.0], [80.5, 13823.0], [80.6, 13823.0], [80.7, 13823.0], [80.8, 13823.0], [80.9, 13823.0], [81.0, 13823.0], [81.1, 13823.0], [81.2, 13823.0], [81.3, 13823.0], [81.4, 13823.0], [81.5, 13823.0], [81.6, 13823.0], [81.7, 13823.0], [81.8, 13823.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13823.0], [82.5, 13824.0], [82.6, 13824.0], [82.7, 13824.0], [82.8, 13824.0], [82.9, 13824.0], [83.0, 13824.0], [83.1, 13824.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13825.0], [83.8, 13825.0], [83.9, 13956.0], [84.0, 14079.0], [84.1, 14079.0], [84.2, 14079.0], [84.3, 14080.0], [84.4, 14331.0], [84.5, 14331.0], [84.6, 14332.0], [84.7, 14332.0], [84.8, 14334.0], [84.9, 14334.0], [85.0, 14334.0], [85.1, 14334.0], [85.2, 14334.0], [85.3, 14334.0], [85.4, 14334.0], [85.5, 14334.0], [85.6, 14334.0], [85.7, 14334.0], [85.8, 14334.0], [85.9, 14335.0], [86.0, 14335.0], [86.1, 14335.0], [86.2, 14335.0], [86.3, 14335.0], [86.4, 14335.0], [86.5, 14335.0], [86.6, 14335.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14335.0], [87.2, 14336.0], [87.3, 14336.0], [87.4, 14336.0], [87.5, 14336.0], [87.6, 14336.0], [87.7, 14336.0], [87.8, 14336.0], [87.9, 14336.0], [88.0, 14336.0], [88.1, 14336.0], [88.2, 14336.0], [88.3, 14337.0], [88.4, 14337.0], [88.5, 14338.0], [88.6, 14339.0], [88.7, 14339.0], [88.8, 14380.0], [88.9, 14591.0], [89.0, 14591.0], [89.1, 14591.0], [89.2, 14592.0], [89.3, 14592.0], [89.4, 14614.0], [89.5, 14660.0], [89.6, 14755.0], [89.7, 14847.0], [89.8, 14847.0], [89.9, 14847.0], [90.0, 14848.0], [90.1, 14851.0], [90.2, 15010.0], [90.3, 15102.0], [90.4, 15103.0], [90.5, 15104.0], [90.6, 15156.0], [90.7, 15611.0], [90.8, 15614.0], [90.9, 15615.0], [91.0, 15616.0], [91.1, 15616.0], [91.2, 15835.0], [91.3, 15998.0], [91.4, 16379.0], [91.5, 16383.0], [91.6, 16384.0], [91.7, 16384.0], [91.8, 16384.0], [91.9, 16809.0], [92.0, 17151.0], [92.1, 18176.0], [92.2, 18687.0], [92.3, 18691.0], [92.4, 18691.0], [92.5, 18691.0], [92.6, 20223.0], [92.7, 20478.0], [92.8, 20479.0], [92.9, 20991.0], [93.0, 22409.0], [93.1, 23192.0], [93.2, 23483.0], [93.3, 23843.0], [93.4, 26364.0], [93.5, 26366.0], [93.6, 26367.0], [93.7, 26367.0], [93.8, 26367.0], [93.9, 26368.0], [94.0, 26368.0], [94.1, 26784.0], [94.2, 27391.0], [94.3, 30736.0], [94.4, 31487.0], [94.5, 32972.0], [94.6, 36863.0], [94.7, 36864.0], [94.8, 38655.0], [94.9, 43775.0], [95.0, 46978.0], [95.1, 47040.0], [95.2, 53259.0], [95.3, 58391.0], [95.4, 59421.0], [95.5, 59437.0], [95.6, 63487.0], [95.7, 64814.0], [95.8, 69632.0], [95.9, 75264.0], [96.0, 75264.0], [96.1, 80127.0], [96.2, 81663.0], [96.3, 81663.0], [96.4, 87324.0], [96.5, 93694.0], [96.6, 97786.0], [96.7, 98047.0], [96.8, 98302.0], [96.9, 105473.0], [97.0, 105982.0], [97.1, 106241.0], [97.2, 106495.0], [97.3, 106500.0], [97.4, 106752.0], [97.5, 107205.0], [97.6, 107263.0], [97.7, 107520.0], [97.8, 108031.0], [97.9, 108034.0], [98.0, 108287.0], [98.1, 108980.0], [98.2, 109677.0], [98.3, 110592.0], [98.4, 111615.0], [98.5, 111615.0], [98.6, 112127.0], [98.7, 119040.0], [98.8, 119040.0], [98.9, 122367.0], [99.0, 122623.0], [99.1, 123905.0], [99.2, 125184.0], [99.3, 139774.0], [99.4, 140032.0], [99.5, 155391.0], [99.6, 155392.0], [99.7, 200704.0], [99.8, 211452.0], [99.9, 227326.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 9.0], [3.3, 1187.0], [3.4, 1200.0], [3.5, 1208.0], [3.6, 1214.0], [3.7, 1222.0], [3.8, 1230.0], [3.9, 1237.0], [4.0, 1246.0], [4.1, 1263.0], [4.2, 1287.0], [4.3, 1328.0], [4.4, 1355.0], [4.5, 1401.0], [4.6, 1449.0], [4.7, 1510.0], [4.8, 1581.0], [4.9, 1690.0], [5.0, 1744.0], [5.1, 1840.0], [5.2, 2024.0], [5.3, 2193.0], [5.4, 2322.0], [5.5, 2412.0], [5.6, 2481.0], [5.7, 2514.0], [5.8, 2572.0], [5.9, 2603.0], [6.0, 2644.0], [6.1, 2682.0], [6.2, 2743.0], [6.3, 2785.0], [6.4, 2835.0], [6.5, 2877.0], [6.6, 2934.0], [6.7, 3000.0], [6.8, 3097.0], [6.9, 3179.0], [7.0, 3257.0], [7.1, 3320.0], [7.2, 3444.0], [7.3, 3511.0], [7.4, 3649.0], [7.5, 3804.0], [7.6, 3877.0], [7.7, 3934.0], [7.8, 3974.0], [7.9, 4021.0], [8.0, 4073.0], [8.1, 4110.0], [8.2, 4136.0], [8.3, 4166.0], [8.4, 4201.0], [8.5, 4232.0], [8.6, 4261.0], [8.7, 4277.0], [8.8, 4295.0], [8.9, 4316.0], [9.0, 4342.0], [9.1, 4365.0], [9.2, 4393.0], [9.3, 4421.0], [9.4, 4444.0], [9.5, 4478.0], [9.6, 4499.0], [9.7, 4535.0], [9.8, 4612.0], [9.9, 4646.0], [10.0, 4681.0], [10.1, 4706.0], [10.2, 4743.0], [10.3, 4773.0], [10.4, 4864.0], [10.5, 4942.0], [10.6, 4996.0], [10.7, 5065.0], [10.8, 5201.0], [10.9, 5314.0], [11.0, 5388.0], [11.1, 5506.0], [11.2, 5563.0], [11.3, 5681.0], [11.4, 5741.0], [11.5, 5793.0], [11.6, 5939.0], [11.7, 6036.0], [11.8, 6094.0], [11.9, 6128.0], [12.0, 6152.0], [12.1, 6194.0], [12.2, 6211.0], [12.3, 6264.0], [12.4, 6297.0], [12.5, 6323.0], [12.6, 6386.0], [12.7, 6472.0], [12.8, 6529.0], [12.9, 6649.0], [13.0, 6757.0], [13.1, 6786.0], [13.2, 6822.0], [13.3, 6858.0], [13.4, 6895.0], [13.5, 6964.0], [13.6, 6989.0], [13.7, 7012.0], [13.8, 7037.0], [13.9, 7061.0], [14.0, 7091.0], [14.1, 7105.0], [14.2, 7122.0], [14.3, 7135.0], [14.4, 7153.0], [14.5, 7165.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7169.0], [15.4, 7171.0], [15.5, 7173.0], [15.6, 7189.0], [15.7, 7202.0], [15.8, 7215.0], [15.9, 7231.0], [16.0, 7238.0], [16.1, 7262.0], [16.2, 7273.0], [16.3, 7294.0], [16.4, 7313.0], [16.5, 7341.0], [16.6, 7377.0], [16.7, 7408.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7424.0], [17.1, 7424.0], [17.2, 7424.0], [17.3, 7425.0], [17.4, 7425.0], [17.5, 7427.0], [17.6, 7441.0], [17.7, 7484.0], [17.8, 7530.0], [17.9, 7570.0], [18.0, 7627.0], [18.1, 7676.0], [18.2, 7679.0], [18.3, 7680.0], [18.4, 7680.0], [18.5, 7681.0], [18.6, 7684.0], [18.7, 7750.0], [18.8, 7838.0], [18.9, 7928.0], [19.0, 7935.0], [19.1, 7935.0], [19.2, 7936.0], [19.3, 7937.0], [19.4, 7976.0], [19.5, 8004.0], [19.6, 8041.0], [19.7, 8072.0], [19.8, 8123.0], [19.9, 8172.0], [20.0, 8189.0], [20.1, 8190.0], [20.2, 8191.0], [20.3, 8192.0], [20.4, 8192.0], [20.5, 8193.0], [20.6, 8195.0], [20.7, 8230.0], [20.8, 8260.0], [20.9, 8326.0], [21.0, 8393.0], [21.1, 8443.0], [21.2, 8446.0], [21.3, 8447.0], [21.4, 8448.0], [21.5, 8490.0], [21.6, 8551.0], [21.7, 8604.0], [21.8, 8662.0], [21.9, 8701.0], [22.0, 8703.0], [22.1, 8703.0], [22.2, 8703.0], [22.3, 8704.0], [22.4, 8704.0], [22.5, 8705.0], [22.6, 8751.0], [22.7, 8831.0], [22.8, 8957.0], [22.9, 8959.0], [23.0, 8960.0], [23.1, 9044.0], [23.2, 9152.0], [23.3, 9215.0], [23.4, 9215.0], [23.5, 9216.0], [23.6, 9216.0], [23.7, 9216.0], [23.8, 9216.0], [23.9, 9234.0], [24.0, 9277.0], [24.1, 9379.0], [24.2, 9471.0], [24.3, 9474.0], [24.4, 9563.0], [24.5, 9706.0], [24.6, 9724.0], [24.7, 9725.0], [24.8, 9726.0], [24.9, 9727.0], [25.0, 9727.0], [25.1, 9728.0], [25.2, 9728.0], [25.3, 9728.0], [25.4, 9728.0], [25.5, 9728.0], [25.6, 9729.0], [25.7, 9731.0], [25.8, 9761.0], [25.9, 9796.0], [26.0, 9822.0], [26.1, 9840.0], [26.2, 9854.0], [26.3, 9871.0], [26.4, 9881.0], [26.5, 9894.0], [26.6, 9902.0], [26.7, 9913.0], [26.8, 9923.0], [26.9, 9933.0], [27.0, 9942.0], [27.1, 9952.0], [27.2, 9960.0], [27.3, 9966.0], [27.4, 9980.0], [27.5, 9983.0], [27.6, 9984.0], [27.7, 9985.0], [27.8, 9989.0], [27.9, 9996.0], [28.0, 10005.0], [28.1, 10011.0], [28.2, 10016.0], [28.3, 10023.0], [28.4, 10031.0], [28.5, 10037.0], [28.6, 10043.0], [28.7, 10049.0], [28.8, 10057.0], [28.9, 10063.0], [29.0, 10067.0], [29.1, 10072.0], [29.2, 10080.0], [29.3, 10087.0], [29.4, 10093.0], [29.5, 10102.0], [29.6, 10110.0], [29.7, 10114.0], [29.8, 10118.0], [29.9, 10123.0], [30.0, 10126.0], [30.1, 10130.0], [30.2, 10132.0], [30.3, 10138.0], [30.4, 10142.0], [30.5, 10147.0], [30.6, 10150.0], [30.7, 10152.0], [30.8, 10156.0], [30.9, 10159.0], [31.0, 10162.0], [31.1, 10166.0], [31.2, 10174.0], [31.3, 10182.0], [31.4, 10186.0], [31.5, 10190.0], [31.6, 10194.0], [31.7, 10197.0], [31.8, 10200.0], [31.9, 10202.0], [32.0, 10206.0], [32.1, 10209.0], [32.2, 10211.0], [32.3, 10215.0], [32.4, 10219.0], [32.5, 10223.0], [32.6, 10228.0], [32.7, 10233.0], [32.8, 10234.0], [32.9, 10236.0], [33.0, 10238.0], [33.1, 10239.0], [33.2, 10240.0], [33.3, 10241.0], [33.4, 10242.0], [33.5, 10243.0], [33.6, 10245.0], [33.7, 10248.0], [33.8, 10251.0], [33.9, 10254.0], [34.0, 10257.0], [34.1, 10260.0], [34.2, 10262.0], [34.3, 10266.0], [34.4, 10269.0], [34.5, 10271.0], [34.6, 10273.0], [34.7, 10278.0], [34.8, 10280.0], [34.9, 10281.0], [35.0, 10285.0], [35.1, 10289.0], [35.2, 10292.0], [35.3, 10296.0], [35.4, 10299.0], [35.5, 10304.0], [35.6, 10308.0], [35.7, 10313.0], [35.8, 10315.0], [35.9, 10318.0], [36.0, 10320.0], [36.1, 10325.0], [36.2, 10328.0], [36.3, 10332.0], [36.4, 10336.0], [36.5, 10339.0], [36.6, 10340.0], [36.7, 10343.0], [36.8, 10346.0], [36.9, 10349.0], [37.0, 10352.0], [37.1, 10355.0], [37.2, 10358.0], [37.3, 10360.0], [37.4, 10363.0], [37.5, 10365.0], [37.6, 10367.0], [37.7, 10371.0], [37.8, 10375.0], [37.9, 10378.0], [38.0, 10381.0], [38.1, 10382.0], [38.2, 10385.0], [38.3, 10389.0], [38.4, 10394.0], [38.5, 10398.0], [38.6, 10399.0], [38.7, 10401.0], [38.8, 10404.0], [38.9, 10407.0], [39.0, 10410.0], [39.1, 10414.0], [39.2, 10416.0], [39.3, 10420.0], [39.4, 10424.0], [39.5, 10427.0], [39.6, 10430.0], [39.7, 10435.0], [39.8, 10436.0], [39.9, 10439.0], [40.0, 10442.0], [40.1, 10444.0], [40.2, 10446.0], [40.3, 10449.0], [40.4, 10453.0], [40.5, 10459.0], [40.6, 10462.0], [40.7, 10465.0], [40.8, 10469.0], [40.9, 10471.0], [41.0, 10475.0], [41.1, 10478.0], [41.2, 10480.0], [41.3, 10482.0], [41.4, 10485.0], [41.5, 10491.0], [41.6, 10493.0], [41.7, 10495.0], [41.8, 10496.0], [41.9, 10498.0], [42.0, 10501.0], [42.1, 10505.0], [42.2, 10507.0], [42.3, 10510.0], [42.4, 10513.0], [42.5, 10518.0], [42.6, 10521.0], [42.7, 10524.0], [42.8, 10527.0], [42.9, 10532.0], [43.0, 10534.0], [43.1, 10536.0], [43.2, 10541.0], [43.3, 10546.0], [43.4, 10548.0], [43.5, 10553.0], [43.6, 10558.0], [43.7, 10561.0], [43.8, 10564.0], [43.9, 10568.0], [44.0, 10572.0], [44.1, 10575.0], [44.2, 10579.0], [44.3, 10583.0], [44.4, 10587.0], [44.5, 10591.0], [44.6, 10594.0], [44.7, 10598.0], [44.8, 10602.0], [44.9, 10605.0], [45.0, 10610.0], [45.1, 10613.0], [45.2, 10619.0], [45.3, 10623.0], [45.4, 10627.0], [45.5, 10631.0], [45.6, 10636.0], [45.7, 10641.0], [45.8, 10646.0], [45.9, 10650.0], [46.0, 10654.0], [46.1, 10656.0], [46.2, 10660.0], [46.3, 10662.0], [46.4, 10666.0], [46.5, 10670.0], [46.6, 10674.0], [46.7, 10677.0], [46.8, 10680.0], [46.9, 10685.0], [47.0, 10691.0], [47.1, 10694.0], [47.2, 10696.0], [47.3, 10700.0], [47.4, 10706.0], [47.5, 10708.0], [47.6, 10712.0], [47.7, 10714.0], [47.8, 10717.0], [47.9, 10722.0], [48.0, 10725.0], [48.1, 10728.0], [48.2, 10731.0], [48.3, 10733.0], [48.4, 10738.0], [48.5, 10741.0], [48.6, 10746.0], [48.7, 10748.0], [48.8, 10749.0], [48.9, 10751.0], [49.0, 10751.0], [49.1, 10752.0], [49.2, 10753.0], [49.3, 10755.0], [49.4, 10757.0], [49.5, 10760.0], [49.6, 10763.0], [49.7, 10765.0], [49.8, 10769.0], [49.9, 10773.0], [50.0, 10776.0], [50.1, 10779.0], [50.2, 10782.0], [50.3, 10787.0], [50.4, 10790.0], [50.5, 10795.0], [50.6, 10799.0], [50.7, 10803.0], [50.8, 10804.0], [50.9, 10807.0], [51.0, 10814.0], [51.1, 10819.0], [51.2, 10825.0], [51.3, 10828.0], [51.4, 10833.0], [51.5, 10835.0], [51.6, 10839.0], [51.7, 10844.0], [51.8, 10850.0], [51.9, 10852.0], [52.0, 10858.0], [52.1, 10860.0], [52.2, 10862.0], [52.3, 10866.0], [52.4, 10870.0], [52.5, 10874.0], [52.6, 10881.0], [52.7, 10889.0], [52.8, 10892.0], [52.9, 10897.0], [53.0, 10900.0], [53.1, 10904.0], [53.2, 10907.0], [53.3, 10910.0], [53.4, 10913.0], [53.5, 10916.0], [53.6, 10918.0], [53.7, 10923.0], [53.8, 10927.0], [53.9, 10933.0], [54.0, 10938.0], [54.1, 10942.0], [54.2, 10947.0], [54.3, 10951.0], [54.4, 10956.0], [54.5, 10958.0], [54.6, 10959.0], [54.7, 10965.0], [54.8, 10968.0], [54.9, 10973.0], [55.0, 10977.0], [55.1, 10982.0], [55.2, 10989.0], [55.3, 10993.0], [55.4, 11001.0], [55.5, 11004.0], [55.6, 11006.0], [55.7, 11007.0], [55.8, 11008.0], [55.9, 11009.0], [56.0, 11014.0], [56.1, 11016.0], [56.2, 11022.0], [56.3, 11027.0], [56.4, 11031.0], [56.5, 11033.0], [56.6, 11036.0], [56.7, 11038.0], [56.8, 11045.0], [56.9, 11049.0], [57.0, 11052.0], [57.1, 11057.0], [57.2, 11061.0], [57.3, 11064.0], [57.4, 11071.0], [57.5, 11076.0], [57.6, 11083.0], [57.7, 11086.0], [57.8, 11090.0], [57.9, 11096.0], [58.0, 11101.0], [58.1, 11105.0], [58.2, 11110.0], [58.3, 11113.0], [58.4, 11118.0], [58.5, 11124.0], [58.6, 11129.0], [58.7, 11134.0], [58.8, 11138.0], [58.9, 11142.0], [59.0, 11144.0], [59.1, 11148.0], [59.2, 11153.0], [59.3, 11157.0], [59.4, 11164.0], [59.5, 11168.0], [59.6, 11173.0], [59.7, 11176.0], [59.8, 11181.0], [59.9, 11185.0], [60.0, 11190.0], [60.1, 11191.0], [60.2, 11194.0], [60.3, 11196.0], [60.4, 11200.0], [60.5, 11204.0], [60.6, 11211.0], [60.7, 11215.0], [60.8, 11217.0], [60.9, 11221.0], [61.0, 11225.0], [61.1, 11227.0], [61.2, 11230.0], [61.3, 11234.0], [61.4, 11239.0], [61.5, 11242.0], [61.6, 11247.0], [61.7, 11250.0], [61.8, 11255.0], [61.9, 11262.0], [62.0, 11263.0], [62.1, 11264.0], [62.2, 11264.0], [62.3, 11266.0], [62.4, 11272.0], [62.5, 11276.0], [62.6, 11278.0], [62.7, 11283.0], [62.8, 11287.0], [62.9, 11290.0], [63.0, 11293.0], [63.1, 11297.0], [63.2, 11301.0], [63.3, 11304.0], [63.4, 11307.0], [63.5, 11310.0], [63.6, 11313.0], [63.7, 11316.0], [63.8, 11323.0], [63.9, 11329.0], [64.0, 11333.0], [64.1, 11339.0], [64.2, 11343.0], [64.3, 11348.0], [64.4, 11351.0], [64.5, 11354.0], [64.6, 11359.0], [64.7, 11364.0], [64.8, 11368.0], [64.9, 11371.0], [65.0, 11375.0], [65.1, 11377.0], [65.2, 11380.0], [65.3, 11384.0], [65.4, 11390.0], [65.5, 11394.0], [65.6, 11397.0], [65.7, 11401.0], [65.8, 11406.0], [65.9, 11408.0], [66.0, 11410.0], [66.1, 11414.0], [66.2, 11418.0], [66.3, 11421.0], [66.4, 11424.0], [66.5, 11428.0], [66.6, 11434.0], [66.7, 11439.0], [66.8, 11442.0], [66.9, 11444.0], [67.0, 11448.0], [67.1, 11454.0], [67.2, 11457.0], [67.3, 11462.0], [67.4, 11468.0], [67.5, 11476.0], [67.6, 11481.0], [67.7, 11486.0], [67.8, 11496.0], [67.9, 11501.0], [68.0, 11506.0], [68.1, 11511.0], [68.2, 11518.0], [68.3, 11519.0], [68.4, 11523.0], [68.5, 11528.0], [68.6, 11533.0], [68.7, 11537.0], [68.8, 11541.0], [68.9, 11546.0], [69.0, 11550.0], [69.1, 11557.0], [69.2, 11564.0], [69.3, 11569.0], [69.4, 11575.0], [69.5, 11578.0], [69.6, 11586.0], [69.7, 11595.0], [69.8, 11605.0], [69.9, 11611.0], [70.0, 11621.0], [70.1, 11630.0], [70.2, 11634.0], [70.3, 11641.0], [70.4, 11648.0], [70.5, 11659.0], [70.6, 11664.0], [70.7, 11671.0], [70.8, 11684.0], [70.9, 11693.0], [71.0, 11701.0], [71.1, 11706.0], [71.2, 11710.0], [71.3, 11715.0], [71.4, 11718.0], [71.5, 11723.0], [71.6, 11728.0], [71.7, 11733.0], [71.8, 11738.0], [71.9, 11740.0], [72.0, 11746.0], [72.1, 11749.0], [72.2, 11754.0], [72.3, 11760.0], [72.4, 11764.0], [72.5, 11769.0], [72.6, 11771.0], [72.7, 11775.0], [72.8, 11775.0], [72.9, 11776.0], [73.0, 11776.0], [73.1, 11777.0], [73.2, 11782.0], [73.3, 11788.0], [73.4, 11792.0], [73.5, 11799.0], [73.6, 11802.0], [73.7, 11812.0], [73.8, 11817.0], [73.9, 11823.0], [74.0, 11829.0], [74.1, 11834.0], [74.2, 11839.0], [74.3, 11852.0], [74.4, 11857.0], [74.5, 11862.0], [74.6, 11869.0], [74.7, 11879.0], [74.8, 11884.0], [74.9, 11889.0], [75.0, 11895.0], [75.1, 11907.0], [75.2, 11915.0], [75.3, 11924.0], [75.4, 11931.0], [75.5, 11937.0], [75.6, 11950.0], [75.7, 11961.0], [75.8, 11971.0], [75.9, 11977.0], [76.0, 11989.0], [76.1, 11997.0], [76.2, 12005.0], [76.3, 12012.0], [76.4, 12019.0], [76.5, 12030.0], [76.6, 12034.0], [76.7, 12037.0], [76.8, 12044.0], [76.9, 12052.0], [77.0, 12058.0], [77.1, 12065.0], [77.2, 12070.0], [77.3, 12081.0], [77.4, 12086.0], [77.5, 12092.0], [77.6, 12102.0], [77.7, 12114.0], [77.8, 12117.0], [77.9, 12126.0], [78.0, 12133.0], [78.1, 12143.0], [78.2, 12150.0], [78.3, 12159.0], [78.4, 12169.0], [78.5, 12178.0], [78.6, 12185.0], [78.7, 12194.0], [78.8, 12201.0], [78.9, 12206.0], [79.0, 12214.0], [79.1, 12221.0], [79.2, 12228.0], [79.3, 12233.0], [79.4, 12244.0], [79.5, 12255.0], [79.6, 12265.0], [79.7, 12272.0], [79.8, 12283.0], [79.9, 12287.0], [80.0, 12288.0], [80.1, 12289.0], [80.2, 12299.0], [80.3, 12304.0], [80.4, 12311.0], [80.5, 12316.0], [80.6, 12322.0], [80.7, 12330.0], [80.8, 12338.0], [80.9, 12343.0], [81.0, 12350.0], [81.1, 12358.0], [81.2, 12363.0], [81.3, 12371.0], [81.4, 12381.0], [81.5, 12392.0], [81.6, 12403.0], [81.7, 12414.0], [81.8, 12418.0], [81.9, 12432.0], [82.0, 12450.0], [82.1, 12458.0], [82.2, 12476.0], [82.3, 12487.0], [82.4, 12499.0], [82.5, 12518.0], [82.6, 12543.0], [82.7, 12558.0], [82.8, 12585.0], [82.9, 12620.0], [83.0, 12641.0], [83.1, 12662.0], [83.2, 12672.0], [83.3, 12686.0], [83.4, 12707.0], [83.5, 12734.0], [83.6, 12763.0], [83.7, 12777.0], [83.8, 12795.0], [83.9, 12800.0], [84.0, 12801.0], [84.1, 12820.0], [84.2, 12855.0], [84.3, 12872.0], [84.4, 12923.0], [84.5, 13056.0], [84.6, 13067.0], [84.7, 13184.0], [84.8, 13233.0], [84.9, 13279.0], [85.0, 13305.0], [85.1, 13308.0], [85.2, 13309.0], [85.3, 13309.0], [85.4, 13310.0], [85.5, 13310.0], [85.6, 13310.0], [85.7, 13310.0], [85.8, 13311.0], [85.9, 13311.0], [86.0, 13311.0], [86.1, 13311.0], [86.2, 13311.0], [86.3, 13311.0], [86.4, 13311.0], [86.5, 13311.0], [86.6, 13311.0], [86.7, 13311.0], [86.8, 13311.0], [86.9, 13311.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13312.0], [87.7, 13312.0], [87.8, 13312.0], [87.9, 13312.0], [88.0, 13312.0], [88.1, 13312.0], [88.2, 13312.0], [88.3, 13312.0], [88.4, 13312.0], [88.5, 13312.0], [88.6, 13312.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13313.0], [89.8, 13313.0], [89.9, 13313.0], [90.0, 13313.0], [90.1, 13313.0], [90.2, 13313.0], [90.3, 13313.0], [90.4, 13313.0], [90.5, 13313.0], [90.6, 13314.0], [90.7, 13315.0], [90.8, 13316.0], [90.9, 13318.0], [91.0, 13344.0], [91.1, 13351.0], [91.2, 13367.0], [91.3, 13400.0], [91.4, 13440.0], [91.5, 13566.0], [91.6, 13568.0], [91.7, 13666.0], [91.8, 13762.0], [91.9, 13820.0], [92.0, 13822.0], [92.1, 13823.0], [92.2, 13823.0], [92.3, 13823.0], [92.4, 13824.0], [92.5, 13824.0], [92.6, 13824.0], [92.7, 13824.0], [92.8, 13824.0], [92.9, 13824.0], [93.0, 13824.0], [93.1, 13825.0], [93.2, 13827.0], [93.3, 13870.0], [93.4, 13984.0], [93.5, 14079.0], [93.6, 14080.0], [93.7, 14111.0], [93.8, 14326.0], [93.9, 14333.0], [94.0, 14334.0], [94.1, 14334.0], [94.2, 14335.0], [94.3, 14335.0], [94.4, 14335.0], [94.5, 14335.0], [94.6, 14335.0], [94.7, 14336.0], [94.8, 14336.0], [94.9, 14336.0], [95.0, 14337.0], [95.1, 14338.0], [95.2, 14369.0], [95.3, 14591.0], [95.4, 14592.0], [95.5, 14779.0], [95.6, 14847.0], [95.7, 14852.0], [95.8, 15050.0], [95.9, 15103.0], [96.0, 15151.0], [96.1, 15308.0], [96.2, 15524.0], [96.3, 15614.0], [96.4, 15616.0], [96.5, 15775.0], [96.6, 16148.0], [96.7, 16382.0], [96.8, 16384.0], [96.9, 16533.0], [97.0, 17184.0], [97.1, 17597.0], [97.2, 18110.0], [97.3, 18692.0], [97.4, 20426.0], [97.5, 20478.0], [97.6, 24064.0], [97.7, 26367.0], [97.8, 26472.0], [97.9, 29483.0], [98.0, 37005.0], [98.1, 52224.0], [98.2, 57327.0], [98.3, 60619.0], [98.4, 66124.0], [98.5, 75263.0], [98.6, 81324.0], [98.7, 90368.0], [98.8, 105507.0], [98.9, 106240.0], [99.0, 106625.0], [99.1, 106753.0], [99.2, 107011.0], [99.3, 108031.0], [99.4, 110582.0], [99.5, 111687.0], [99.6, 120320.0], [99.7, 137472.0], [99.8, 155392.0], [99.9, 200706.0], [100.0, 229631.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 3.0], [7.2, 24.0], [7.3, 27.0], [7.4, 28.0], [7.5, 29.0], [7.6, 30.0], [7.7, 34.0], [7.8, 37.0], [7.9, 39.0], [8.0, 43.0], [8.1, 88.0], [8.2, 201.0], [8.3, 750.0], [8.4, 905.0], [8.5, 1007.0], [8.6, 1291.0], [8.7, 1327.0], [8.8, 1492.0], [8.9, 1616.0], [9.0, 1649.0], [9.1, 1750.0], [9.2, 1928.0], [9.3, 2094.0], [9.4, 2285.0], [9.5, 2733.0], [9.6, 2917.0], [9.7, 2968.0], [9.8, 2978.0], [9.9, 3020.0], [10.0, 3081.0], [10.1, 3169.0], [10.2, 3222.0], [10.3, 3318.0], [10.4, 3336.0], [10.5, 3411.0], [10.6, 3458.0], [10.7, 3665.0], [10.8, 3773.0], [10.9, 4094.0], [11.0, 4406.0], [11.1, 4617.0], [11.2, 4807.0], [11.3, 4886.0], [11.4, 5016.0], [11.5, 5111.0], [11.6, 5168.0], [11.7, 5273.0], [11.8, 5534.0], [11.9, 5712.0], [12.0, 5835.0], [12.1, 5853.0], [12.2, 5857.0], [12.3, 5936.0], [12.4, 5971.0], [12.5, 6020.0], [12.6, 6028.0], [12.7, 6102.0], [12.8, 6379.0], [12.9, 6508.0], [13.0, 6590.0], [13.1, 6886.0], [13.2, 6971.0], [13.3, 7111.0], [13.4, 7141.0], [13.5, 7164.0], [13.6, 7164.0], [13.7, 7166.0], [13.8, 7166.0], [13.9, 7166.0], [14.0, 7167.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7169.0], [16.2, 7169.0], [16.3, 7169.0], [16.4, 7170.0], [16.5, 7172.0], [16.6, 7172.0], [16.7, 7172.0], [16.8, 7184.0], [16.9, 7204.0], [17.0, 7315.0], [17.1, 7336.0], [17.2, 7414.0], [17.3, 7415.0], [17.4, 7420.0], [17.5, 7422.0], [17.6, 7422.0], [17.7, 7422.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7423.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7425.0], [18.7, 7425.0], [18.8, 7426.0], [18.9, 7428.0], [19.0, 7445.0], [19.1, 7479.0], [19.2, 7504.0], [19.3, 7575.0], [19.4, 7628.0], [19.5, 7677.0], [19.6, 7678.0], [19.7, 7678.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7679.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7681.0], [21.2, 7681.0], [21.3, 7684.0], [21.4, 7708.0], [21.5, 7751.0], [21.6, 7764.0], [21.7, 7827.0], [21.8, 7875.0], [21.9, 7909.0], [22.0, 7934.0], [22.1, 7934.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7935.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7937.0], [22.9, 7937.0], [23.0, 7994.0], [23.1, 8188.0], [23.2, 8189.0], [23.3, 8191.0], [23.4, 8191.0], [23.5, 8191.0], [23.6, 8192.0], [23.7, 8192.0], [23.8, 8192.0], [23.9, 8192.0], [24.0, 8193.0], [24.1, 8195.0], [24.2, 8195.0], [24.3, 8254.0], [24.4, 8315.0], [24.5, 8382.0], [24.6, 8407.0], [24.7, 8444.0], [24.8, 8446.0], [24.9, 8448.0], [25.0, 8448.0], [25.1, 8448.0], [25.2, 8448.0], [25.3, 8449.0], [25.4, 8477.0], [25.5, 8530.0], [25.6, 8589.0], [25.7, 8607.0], [25.8, 8640.0], [25.9, 8651.0], [26.0, 8661.0], [26.1, 8679.0], [26.2, 8700.0], [26.3, 8700.0], [26.4, 8702.0], [26.5, 8702.0], [26.6, 8702.0], [26.7, 8703.0], [26.8, 8703.0], [26.9, 8703.0], [27.0, 8703.0], [27.1, 8703.0], [27.2, 8703.0], [27.3, 8704.0], [27.4, 8704.0], [27.5, 8704.0], [27.6, 8704.0], [27.7, 8704.0], [27.8, 8704.0], [27.9, 8704.0], [28.0, 8704.0], [28.1, 8704.0], [28.2, 8705.0], [28.3, 8705.0], [28.4, 8705.0], [28.5, 8705.0], [28.6, 8707.0], [28.7, 8709.0], [28.8, 8735.0], [28.9, 8749.0], [29.0, 8813.0], [29.1, 8859.0], [29.2, 8928.0], [29.3, 8959.0], [29.4, 8959.0], [29.5, 8959.0], [29.6, 8960.0], [29.7, 8983.0], [29.8, 8991.0], [29.9, 9029.0], [30.0, 9078.0], [30.1, 9096.0], [30.2, 9108.0], [30.3, 9119.0], [30.4, 9127.0], [30.5, 9151.0], [30.6, 9161.0], [30.7, 9179.0], [30.8, 9187.0], [30.9, 9192.0], [31.0, 9210.0], [31.1, 9211.0], [31.2, 9214.0], [31.3, 9215.0], [31.4, 9215.0], [31.5, 9215.0], [31.6, 9215.0], [31.7, 9215.0], [31.8, 9215.0], [31.9, 9215.0], [32.0, 9216.0], [32.1, 9216.0], [32.2, 9216.0], [32.3, 9216.0], [32.4, 9216.0], [32.5, 9217.0], [32.6, 9217.0], [32.7, 9220.0], [32.8, 9225.0], [32.9, 9244.0], [33.0, 9251.0], [33.1, 9267.0], [33.2, 9300.0], [33.3, 9315.0], [33.4, 9332.0], [33.5, 9338.0], [33.6, 9399.0], [33.7, 9415.0], [33.8, 9468.0], [33.9, 9470.0], [34.0, 9471.0], [34.1, 9471.0], [34.2, 9471.0], [34.3, 9473.0], [34.4, 9474.0], [34.5, 9482.0], [34.6, 9496.0], [34.7, 9505.0], [34.8, 9536.0], [34.9, 9566.0], [35.0, 9594.0], [35.1, 9607.0], [35.2, 9618.0], [35.3, 9637.0], [35.4, 9642.0], [35.5, 9657.0], [35.6, 9678.0], [35.7, 9707.0], [35.8, 9719.0], [35.9, 9724.0], [36.0, 9725.0], [36.1, 9726.0], [36.2, 9727.0], [36.3, 9727.0], [36.4, 9727.0], [36.5, 9727.0], [36.6, 9727.0], [36.7, 9727.0], [36.8, 9727.0], [36.9, 9727.0], [37.0, 9728.0], [37.1, 9728.0], [37.2, 9728.0], [37.3, 9728.0], [37.4, 9728.0], [37.5, 9728.0], [37.6, 9728.0], [37.7, 9728.0], [37.8, 9729.0], [37.9, 9730.0], [38.0, 9731.0], [38.1, 9731.0], [38.2, 9741.0], [38.3, 9765.0], [38.4, 9776.0], [38.5, 9822.0], [38.6, 9853.0], [38.7, 9863.0], [38.8, 9930.0], [38.9, 9966.0], [39.0, 9978.0], [39.1, 9979.0], [39.2, 9982.0], [39.3, 9982.0], [39.4, 9984.0], [39.5, 9984.0], [39.6, 9984.0], [39.7, 9984.0], [39.8, 9984.0], [39.9, 10008.0], [40.0, 10040.0], [40.1, 10052.0], [40.2, 10063.0], [40.3, 10078.0], [40.4, 10104.0], [40.5, 10127.0], [40.6, 10155.0], [40.7, 10175.0], [40.8, 10196.0], [40.9, 10203.0], [41.0, 10222.0], [41.1, 10235.0], [41.2, 10239.0], [41.3, 10239.0], [41.4, 10240.0], [41.5, 10240.0], [41.6, 10241.0], [41.7, 10244.0], [41.8, 10244.0], [41.9, 10260.0], [42.0, 10262.0], [42.1, 10275.0], [42.2, 10290.0], [42.3, 10337.0], [42.4, 10344.0], [42.5, 10371.0], [42.6, 10494.0], [42.7, 10495.0], [42.8, 10495.0], [42.9, 10495.0], [43.0, 10496.0], [43.1, 10496.0], [43.2, 10500.0], [43.3, 10502.0], [43.4, 10519.0], [43.5, 10526.0], [43.6, 10529.0], [43.7, 10569.0], [43.8, 10632.0], [43.9, 10638.0], [44.0, 10703.0], [44.1, 10734.0], [44.2, 10750.0], [44.3, 10751.0], [44.4, 10751.0], [44.5, 10751.0], [44.6, 10751.0], [44.7, 10752.0], [44.8, 10752.0], [44.9, 10752.0], [45.0, 10752.0], [45.1, 10755.0], [45.2, 10766.0], [45.3, 10776.0], [45.4, 10797.0], [45.5, 10829.0], [45.6, 10837.0], [45.7, 10880.0], [45.8, 10903.0], [45.9, 10928.0], [46.0, 10990.0], [46.1, 10998.0], [46.2, 11005.0], [46.3, 11005.0], [46.4, 11006.0], [46.5, 11007.0], [46.6, 11007.0], [46.7, 11007.0], [46.8, 11007.0], [46.9, 11007.0], [47.0, 11008.0], [47.1, 11008.0], [47.2, 11008.0], [47.3, 11008.0], [47.4, 11009.0], [47.5, 11009.0], [47.6, 11009.0], [47.7, 11040.0], [47.8, 11083.0], [47.9, 11119.0], [48.0, 11134.0], [48.1, 11151.0], [48.2, 11234.0], [48.3, 11245.0], [48.4, 11261.0], [48.5, 11263.0], [48.6, 11263.0], [48.7, 11263.0], [48.8, 11263.0], [48.9, 11263.0], [49.0, 11264.0], [49.1, 11264.0], [49.2, 11265.0], [49.3, 11296.0], [49.4, 11329.0], [49.5, 11330.0], [49.6, 11399.0], [49.7, 11463.0], [49.8, 11498.0], [49.9, 11518.0], [50.0, 11519.0], [50.1, 11519.0], [50.2, 11519.0], [50.3, 11519.0], [50.4, 11520.0], [50.5, 11520.0], [50.6, 11523.0], [50.7, 11539.0], [50.8, 11547.0], [50.9, 11564.0], [51.0, 11592.0], [51.1, 11611.0], [51.2, 11648.0], [51.3, 11678.0], [51.4, 11726.0], [51.5, 11761.0], [51.6, 11772.0], [51.7, 11774.0], [51.8, 11775.0], [51.9, 11775.0], [52.0, 11775.0], [52.1, 11775.0], [52.2, 11775.0], [52.3, 11776.0], [52.4, 11776.0], [52.5, 11776.0], [52.6, 11776.0], [52.7, 11776.0], [52.8, 11778.0], [52.9, 11969.0], [53.0, 12031.0], [53.1, 12032.0], [53.2, 12140.0], [53.3, 12221.0], [53.4, 12283.0], [53.5, 12286.0], [53.6, 12287.0], [53.7, 12287.0], [53.8, 12287.0], [53.9, 12288.0], [54.0, 12288.0], [54.1, 12288.0], [54.2, 12289.0], [54.3, 12289.0], [54.4, 12356.0], [54.5, 12360.0], [54.6, 12438.0], [54.7, 12495.0], [54.8, 12543.0], [54.9, 12560.0], [55.0, 12732.0], [55.1, 12796.0], [55.2, 12798.0], [55.3, 12799.0], [55.4, 12799.0], [55.5, 12799.0], [55.6, 12800.0], [55.7, 12803.0], [55.8, 12804.0], [55.9, 12860.0], [56.0, 12964.0], [56.1, 12989.0], [56.2, 13037.0], [56.3, 13056.0], [56.4, 13056.0], [56.5, 13092.0], [56.6, 13167.0], [56.7, 13168.0], [56.8, 13179.0], [56.9, 13184.0], [57.0, 13193.0], [57.1, 13198.0], [57.2, 13212.0], [57.3, 13213.0], [57.4, 13226.0], [57.5, 13233.0], [57.6, 13237.0], [57.7, 13238.0], [57.8, 13243.0], [57.9, 13254.0], [58.0, 13256.0], [58.1, 13263.0], [58.2, 13267.0], [58.3, 13277.0], [58.4, 13280.0], [58.5, 13286.0], [58.6, 13294.0], [58.7, 13302.0], [58.8, 13306.0], [58.9, 13306.0], [59.0, 13307.0], [59.1, 13308.0], [59.2, 13308.0], [59.3, 13308.0], [59.4, 13308.0], [59.5, 13308.0], [59.6, 13308.0], [59.7, 13309.0], [59.8, 13309.0], [59.9, 13310.0], [60.0, 13310.0], [60.1, 13310.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13313.0], [71.0, 13313.0], [71.1, 13313.0], [71.2, 13313.0], [71.3, 13313.0], [71.4, 13313.0], [71.5, 13313.0], [71.6, 13313.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13314.0], [73.8, 13314.0], [73.9, 13315.0], [74.0, 13315.0], [74.1, 13315.0], [74.2, 13315.0], [74.3, 13316.0], [74.4, 13316.0], [74.5, 13316.0], [74.6, 13316.0], [74.7, 13316.0], [74.8, 13317.0], [74.9, 13319.0], [75.0, 13320.0], [75.1, 13325.0], [75.2, 13334.0], [75.3, 13337.0], [75.4, 13350.0], [75.5, 13359.0], [75.6, 13362.0], [75.7, 13381.0], [75.8, 13393.0], [75.9, 13394.0], [76.0, 13402.0], [76.1, 13407.0], [76.2, 13410.0], [76.3, 13412.0], [76.4, 13419.0], [76.5, 13464.0], [76.6, 13468.0], [76.7, 13512.0], [76.8, 13567.0], [76.9, 13567.0], [77.0, 13567.0], [77.1, 13567.0], [77.2, 13567.0], [77.3, 13568.0], [77.4, 13568.0], [77.5, 13578.0], [77.6, 13605.0], [77.7, 13665.0], [77.8, 13702.0], [77.9, 13745.0], [78.0, 13790.0], [78.1, 13820.0], [78.2, 13821.0], [78.3, 13823.0], [78.4, 13823.0], [78.5, 13823.0], [78.6, 13823.0], [78.7, 13823.0], [78.8, 13823.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13824.0], [79.5, 13824.0], [79.6, 13824.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13824.0], [80.8, 13824.0], [80.9, 13824.0], [81.0, 13825.0], [81.1, 13825.0], [81.2, 13825.0], [81.3, 13827.0], [81.4, 13827.0], [81.5, 13840.0], [81.6, 13869.0], [81.7, 13879.0], [81.8, 13898.0], [81.9, 13924.0], [82.0, 13934.0], [82.1, 13945.0], [82.2, 14077.0], [82.3, 14080.0], [82.4, 14080.0], [82.5, 14080.0], [82.6, 14172.0], [82.7, 14205.0], [82.8, 14239.0], [82.9, 14320.0], [83.0, 14331.0], [83.1, 14332.0], [83.2, 14332.0], [83.3, 14334.0], [83.4, 14335.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14335.0], [85.1, 14335.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14337.0], [86.3, 14337.0], [86.4, 14337.0], [86.5, 14337.0], [86.6, 14338.0], [86.7, 14350.0], [86.8, 14574.0], [86.9, 14590.0], [87.0, 14591.0], [87.1, 14591.0], [87.2, 14592.0], [87.3, 14592.0], [87.4, 14593.0], [87.5, 14597.0], [87.6, 14661.0], [87.7, 14847.0], [87.8, 14847.0], [87.9, 14847.0], [88.0, 14909.0], [88.1, 15061.0], [88.2, 15102.0], [88.3, 15102.0], [88.4, 15104.0], [88.5, 15104.0], [88.6, 15104.0], [88.7, 15106.0], [88.8, 15258.0], [88.9, 15411.0], [89.0, 15512.0], [89.1, 15614.0], [89.2, 15614.0], [89.3, 15615.0], [89.4, 15619.0], [89.5, 15731.0], [89.6, 15871.0], [89.7, 15995.0], [89.8, 16136.0], [89.9, 16368.0], [90.0, 16382.0], [90.1, 16383.0], [90.2, 16383.0], [90.3, 16384.0], [90.4, 16384.0], [90.5, 16385.0], [90.6, 16419.0], [90.7, 16538.0], [90.8, 16807.0], [90.9, 17200.0], [91.0, 17412.0], [91.1, 18406.0], [91.2, 19221.0], [91.3, 19244.0], [91.4, 20478.0], [91.5, 20479.0], [91.6, 23024.0], [91.7, 23255.0], [91.8, 24715.0], [91.9, 26224.0], [92.0, 26366.0], [92.1, 26367.0], [92.2, 26367.0], [92.3, 26738.0], [92.4, 28992.0], [92.5, 31015.0], [92.6, 32767.0], [92.7, 34559.0], [92.8, 35200.0], [92.9, 36863.0], [93.0, 36864.0], [93.1, 42574.0], [93.2, 48006.0], [93.3, 53271.0], [93.4, 53838.0], [93.5, 58392.0], [93.6, 58400.0], [93.7, 59433.0], [93.8, 60680.0], [93.9, 65960.0], [94.0, 69201.0], [94.1, 70062.0], [94.2, 70877.0], [94.3, 73436.0], [94.4, 76624.0], [94.5, 77590.0], [94.6, 78630.0], [94.7, 84057.0], [94.8, 90336.0], [94.9, 90364.0], [95.0, 90634.0], [95.1, 97024.0], [95.2, 97024.0], [95.3, 97024.0], [95.4, 98048.0], [95.5, 101633.0], [95.6, 103633.0], [95.7, 105216.0], [95.8, 105538.0], [95.9, 105915.0], [96.0, 105970.0], [96.1, 106014.0], [96.2, 106095.0], [96.3, 106156.0], [96.4, 106240.0], [96.5, 106248.0], [96.6, 106393.0], [96.7, 106494.0], [96.8, 106495.0], [96.9, 106752.0], [97.0, 106752.0], [97.1, 106874.0], [97.2, 107008.0], [97.3, 107155.0], [97.4, 107258.0], [97.5, 107520.0], [97.6, 108031.0], [97.7, 108799.0], [97.8, 109004.0], [97.9, 111615.0], [98.0, 111616.0], [98.1, 112127.0], [98.2, 114686.0], [98.3, 114709.0], [98.4, 119040.0], [98.5, 119806.0], [98.6, 120320.0], [98.7, 122872.0], [98.8, 123905.0], [98.9, 125184.0], [99.0, 126347.0], [99.1, 135423.0], [99.2, 139776.0], [99.3, 155390.0], [99.4, 155392.0], [99.5, 200705.0], [99.6, 200706.0], [99.7, 211455.0], [99.8, 211457.0], [99.9, 229630.0], [100.0, 229631.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 634.0, "series": [{"data": [[0.0, 131.0], [140000.0, 2.0], [155300.0, 5.0], [227300.0, 2.0], [105900.0, 1.0], [107500.0, 2.0], [106700.0, 2.0], [120300.0, 1.0], [125100.0, 2.0], [32900.0, 1.0], [43700.0, 2.0], [46900.0, 1.0], [60100.0, 1.0], [97000.0, 1.0], [108200.0, 2.0], [114600.0, 1.0], [122600.0, 1.0], [500.0, 3.0], [600.0, 1.0], [700.0, 3.0], [900.0, 1.0], [1300.0, 11.0], [1500.0, 1.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 6.0], [139700.0, 1.0], [2400.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [3100.0, 1.0], [3300.0, 2.0], [3400.0, 2.0], [3500.0, 2.0], [3700.0, 5.0], [3600.0, 2.0], [3800.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4200.0, 3.0], [4100.0, 1.0], [4500.0, 2.0], [4600.0, 2.0], [4700.0, 1.0], [4900.0, 2.0], [5000.0, 1.0], [80100.0, 1.0], [5200.0, 2.0], [5500.0, 2.0], [87300.0, 1.0], [5700.0, 3.0], [5800.0, 2.0], [5900.0, 1.0], [6000.0, 2.0], [97700.0, 1.0], [6200.0, 3.0], [6300.0, 4.0], [6400.0, 2.0], [6500.0, 5.0], [6600.0, 2.0], [6700.0, 2.0], [6900.0, 1.0], [106500.0, 1.0], [110500.0, 2.0], [108900.0, 1.0], [7100.0, 70.0], [7000.0, 1.0], [112100.0, 1.0], [7300.0, 4.0], [7400.0, 43.0], [7500.0, 1.0], [7600.0, 23.0], [7900.0, 25.0], [7800.0, 3.0], [8000.0, 3.0], [8100.0, 34.0], [8300.0, 1.0], [8200.0, 1.0], [8400.0, 12.0], [8700.0, 36.0], [8600.0, 1.0], [9200.0, 56.0], [9100.0, 2.0], [8900.0, 5.0], [8800.0, 1.0], [9400.0, 19.0], [9600.0, 14.0], [9700.0, 73.0], [9500.0, 10.0], [9300.0, 5.0], [10000.0, 8.0], [10100.0, 14.0], [9900.0, 34.0], [10200.0, 34.0], [9800.0, 12.0], [10300.0, 16.0], [10600.0, 12.0], [10500.0, 7.0], [10400.0, 18.0], [10700.0, 26.0], [11000.0, 43.0], [10800.0, 11.0], [11100.0, 9.0], [10900.0, 5.0], [11200.0, 26.0], [11500.0, 21.0], [11600.0, 7.0], [11300.0, 10.0], [11700.0, 35.0], [11400.0, 8.0], [11900.0, 5.0], [12100.0, 7.0], [12200.0, 22.0], [11800.0, 5.0], [12000.0, 9.0], [12400.0, 5.0], [12500.0, 5.0], [12700.0, 5.0], [12300.0, 1.0], [12800.0, 5.0], [12900.0, 3.0], [13300.0, 364.0], [13200.0, 4.0], [13000.0, 3.0], [13800.0, 77.0], [13400.0, 2.0], [13700.0, 1.0], [13500.0, 12.0], [214200.0, 1.0], [14300.0, 84.0], [14000.0, 7.0], [13900.0, 1.0], [14500.0, 11.0], [14600.0, 2.0], [14800.0, 10.0], [14700.0, 2.0], [15100.0, 7.0], [15300.0, 1.0], [15000.0, 1.0], [14900.0, 1.0], [15800.0, 2.0], [15600.0, 9.0], [16300.0, 10.0], [15900.0, 1.0], [16800.0, 1.0], [17400.0, 1.0], [18400.0, 1.0], [18600.0, 6.0], [19200.0, 1.0], [20400.0, 5.0], [20200.0, 1.0], [22400.0, 1.0], [23400.0, 1.0], [23000.0, 1.0], [23200.0, 1.0], [23800.0, 1.0], [31400.0, 2.0], [36800.0, 4.0], [200700.0, 1.0], [53200.0, 1.0], [64800.0, 1.0], [69600.0, 1.0], [75200.0, 4.0], [81600.0, 3.0], [93600.0, 1.0], [106400.0, 2.0], [107200.0, 3.0], [108000.0, 3.0], [109600.0, 1.0], [77500.0, 1.0], [90300.0, 1.0], [98300.0, 1.0], [109500.0, 1.0], [108700.0, 1.0], [122300.0, 2.0], [123900.0, 2.0], [211400.0, 2.0], [49100.0, 1.0], [58300.0, 1.0], [64700.0, 1.0], [65100.0, 1.0], [105400.0, 1.0], [106200.0, 3.0], [107000.0, 1.0], [119000.0, 3.0], [17100.0, 2.0], [18100.0, 1.0], [20900.0, 1.0], [21700.0, 1.0], [23100.0, 1.0], [24500.0, 1.0], [26300.0, 13.0], [27300.0, 1.0], [26700.0, 1.0], [27100.0, 1.0], [28100.0, 1.0], [30700.0, 2.0], [38600.0, 1.0], [45000.0, 1.0], [47000.0, 2.0], [54200.0, 1.0], [59400.0, 3.0], [63400.0, 1.0], [85200.0, 1.0], [98000.0, 3.0], [105200.0, 1.0], [111600.0, 4.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 322.0], [140000.0, 6.0], [229600.0, 3.0], [155300.0, 3.0], [227300.0, 4.0], [68300.0, 4.0], [105900.0, 2.0], [106700.0, 10.0], [107500.0, 4.0], [120300.0, 6.0], [43700.0, 4.0], [54500.0, 1.0], [57300.0, 1.0], [60500.0, 2.0], [62900.0, 1.0], [64500.0, 1.0], [68200.0, 3.0], [71400.0, 1.0], [97000.0, 4.0], [105800.0, 2.0], [106600.0, 2.0], [108200.0, 2.0], [109000.0, 1.0], [114600.0, 1.0], [1100.0, 18.0], [1200.0, 86.0], [1300.0, 24.0], [1400.0, 16.0], [1500.0, 18.0], [1600.0, 10.0], [1700.0, 16.0], [1800.0, 5.0], [1900.0, 6.0], [2000.0, 5.0], [2100.0, 7.0], [2200.0, 7.0], [2300.0, 10.0], [2400.0, 16.0], [154100.0, 1.0], [2500.0, 25.0], [2600.0, 24.0], [2700.0, 20.0], [2800.0, 21.0], [2900.0, 15.0], [3000.0, 13.0], [3100.0, 10.0], [3200.0, 14.0], [3300.0, 12.0], [3400.0, 10.0], [3500.0, 8.0], [3600.0, 6.0], [3700.0, 7.0], [3800.0, 13.0], [3900.0, 22.0], [4000.0, 21.0], [4100.0, 34.0], [4200.0, 42.0], [4300.0, 42.0], [4500.0, 18.0], [4400.0, 37.0], [4600.0, 30.0], [4700.0, 25.0], [4800.0, 10.0], [5000.0, 12.0], [4900.0, 18.0], [5100.0, 7.0], [80100.0, 1.0], [5300.0, 12.0], [5200.0, 9.0], [5400.0, 8.0], [5500.0, 13.0], [5600.0, 14.0], [5700.0, 17.0], [5800.0, 5.0], [5900.0, 9.0], [6100.0, 30.0], [6000.0, 16.0], [6200.0, 29.0], [6300.0, 22.0], [6400.0, 10.0], [6500.0, 13.0], [6600.0, 8.0], [6800.0, 28.0], [6700.0, 18.0], [6900.0, 22.0], [110500.0, 3.0], [106500.0, 1.0], [7100.0, 164.0], [7000.0, 41.0], [7200.0, 68.0], [7300.0, 31.0], [7400.0, 109.0], [7600.0, 68.0], [7500.0, 20.0], [7700.0, 14.0], [7900.0, 60.0], [7800.0, 11.0], [8000.0, 29.0], [8100.0, 89.0], [8200.0, 23.0], [8300.0, 14.0], [8400.0, 52.0], [8700.0, 81.0], [8500.0, 15.0], [8600.0, 17.0], [137400.0, 3.0], [9000.0, 12.0], [8900.0, 28.0], [9100.0, 8.0], [9200.0, 80.0], [8800.0, 9.0], [9500.0, 7.0], [9700.0, 143.0], [9300.0, 7.0], [9400.0, 25.0], [9600.0, 7.0], [9900.0, 139.0], [9800.0, 64.0], [10000.0, 153.0], [10100.0, 231.0], [10200.0, 364.0], [10600.0, 256.0], [10700.0, 336.0], [10500.0, 279.0], [10400.0, 333.0], [10300.0, 322.0], [10800.0, 236.0], [11000.0, 260.0], [10900.0, 239.0], [11100.0, 243.0], [11200.0, 276.0], [11300.0, 250.0], [11400.0, 224.0], [11600.0, 124.0], [11700.0, 252.0], [11500.0, 187.0], [11900.0, 109.0], [11800.0, 153.0], [12000.0, 144.0], [12100.0, 123.0], [12200.0, 144.0], [12700.0, 55.0], [12300.0, 133.0], [12600.0, 51.0], [12500.0, 43.0], [12400.0, 86.0], [12800.0, 44.0], [12900.0, 12.0], [13300.0, 634.0], [13100.0, 9.0], [13000.0, 19.0], [13200.0, 24.0], [13800.0, 150.0], [13600.0, 7.0], [13400.0, 16.0], [13700.0, 12.0], [13500.0, 21.0], [13900.0, 6.0], [14300.0, 145.0], [14100.0, 6.0], [14000.0, 28.0], [14200.0, 2.0], [14500.0, 23.0], [14700.0, 3.0], [14600.0, 2.0], [14800.0, 22.0], [14400.0, 2.0], [15000.0, 6.0], [15200.0, 7.0], [15100.0, 19.0], [15300.0, 8.0], [14900.0, 3.0], [15800.0, 1.0], [15700.0, 4.0], [15500.0, 6.0], [15600.0, 22.0], [15400.0, 3.0], [15900.0, 5.0], [16100.0, 5.0], [16300.0, 18.0], [16200.0, 3.0], [16400.0, 6.0], [16600.0, 3.0], [16800.0, 2.0], [17200.0, 1.0], [17400.0, 5.0], [18400.0, 2.0], [18000.0, 2.0], [17600.0, 1.0], [18600.0, 6.0], [18800.0, 1.0], [19400.0, 1.0], [20400.0, 15.0], [20200.0, 2.0], [22200.0, 1.0], [23200.0, 1.0], [24000.0, 1.0], [23600.0, 1.0], [24400.0, 2.0], [24200.0, 1.0], [26600.0, 2.0], [26200.0, 2.0], [26400.0, 1.0], [28600.0, 2.0], [28400.0, 1.0], [29400.0, 1.0], [29600.0, 1.0], [36800.0, 4.0], [38000.0, 1.0], [48400.0, 1.0], [200700.0, 9.0], [52400.0, 1.0], [54400.0, 4.0], [59600.0, 2.0], [62000.0, 1.0], [75200.0, 5.0], [81600.0, 4.0], [101600.0, 1.0], [106400.0, 5.0], [107200.0, 3.0], [108000.0, 2.0], [66300.0, 1.0], [76700.0, 1.0], [90300.0, 3.0], [106300.0, 2.0], [105500.0, 1.0], [108700.0, 1.0], [110300.0, 1.0], [117500.0, 1.0], [122300.0, 1.0], [123900.0, 5.0], [211400.0, 3.0], [34300.0, 2.0], [59500.0, 4.0], [79000.0, 1.0], [106200.0, 6.0], [107000.0, 7.0], [110200.0, 2.0], [119000.0, 1.0], [119800.0, 1.0], [66100.0, 1.0], [81300.0, 1.0], [78900.0, 1.0], [88500.0, 2.0], [106900.0, 1.0], [107700.0, 2.0], [110100.0, 1.0], [110900.0, 1.0], [114900.0, 1.0], [17100.0, 3.0], [16500.0, 1.0], [16900.0, 2.0], [16700.0, 1.0], [17900.0, 4.0], [17700.0, 2.0], [18100.0, 3.0], [17500.0, 3.0], [19100.0, 1.0], [18700.0, 1.0], [18500.0, 1.0], [19500.0, 1.0], [20300.0, 1.0], [20500.0, 1.0], [21700.0, 1.0], [24700.0, 2.0], [26300.0, 11.0], [25900.0, 1.0], [27100.0, 2.0], [28300.0, 1.0], [28900.0, 1.0], [34200.0, 2.0], [37000.0, 1.0], [39800.0, 1.0], [48200.0, 2.0], [52200.0, 1.0], [53800.0, 1.0], [53400.0, 1.0], [54200.0, 1.0], [58600.0, 1.0], [60600.0, 1.0], [61800.0, 3.0], [66000.0, 3.0], [78800.0, 1.0], [88400.0, 2.0], [98000.0, 3.0], [106000.0, 1.0], [106800.0, 1.0], [111600.0, 7.0], [114800.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 159.0], [229600.0, 2.0], [155300.0, 4.0], [65900.0, 1.0], [69900.0, 1.0], [82700.0, 1.0], [105900.0, 4.0], [106700.0, 4.0], [107500.0, 1.0], [114700.0, 1.0], [120300.0, 2.0], [125100.0, 3.0], [135400.0, 3.0], [34500.0, 1.0], [41700.0, 1.0], [42500.0, 1.0], [200.0, 2.0], [53300.0, 1.0], [221100.0, 1.0], [64900.0, 1.0], [70600.0, 1.0], [78600.0, 1.0], [90600.0, 1.0], [97000.0, 6.0], [106600.0, 1.0], [109000.0, 1.0], [114600.0, 1.0], [115400.0, 1.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1200.0, 2.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 3.0], [1700.0, 3.0], [1900.0, 1.0], [2000.0, 3.0], [2200.0, 1.0], [139700.0, 1.0], [158900.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 3.0], [3200.0, 2.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4500.0, 1.0], [4400.0, 1.0], [4600.0, 2.0], [4800.0, 4.0], [76900.0, 1.0], [5100.0, 3.0], [5000.0, 2.0], [5200.0, 2.0], [5500.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [87300.0, 1.0], [5700.0, 2.0], [5800.0, 4.0], [5900.0, 4.0], [6000.0, 5.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 1.0], [6500.0, 3.0], [103300.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [6900.0, 2.0], [108900.0, 1.0], [7100.0, 71.0], [114500.0, 1.0], [112100.0, 1.0], [7200.0, 2.0], [7400.0, 38.0], [7300.0, 4.0], [7600.0, 39.0], [7500.0, 4.0], [7900.0, 22.0], [7700.0, 5.0], [7800.0, 5.0], [8100.0, 23.0], [8300.0, 4.0], [8600.0, 8.0], [8700.0, 56.0], [8500.0, 5.0], [8200.0, 3.0], [8400.0, 17.0], [8900.0, 13.0], [8800.0, 3.0], [9000.0, 6.0], [9100.0, 16.0], [9200.0, 43.0], [9300.0, 9.0], [9500.0, 7.0], [9700.0, 53.0], [9600.0, 13.0], [9400.0, 20.0], [9800.0, 6.0], [9900.0, 22.0], [10200.0, 27.0], [10000.0, 9.0], [10100.0, 11.0], [10700.0, 28.0], [10500.0, 11.0], [10300.0, 5.0], [10400.0, 12.0], [10600.0, 5.0], [11200.0, 22.0], [11100.0, 6.0], [11000.0, 34.0], [10800.0, 7.0], [10900.0, 7.0], [11500.0, 23.0], [11300.0, 6.0], [11400.0, 4.0], [11600.0, 7.0], [11700.0, 28.0], [12000.0, 3.0], [12200.0, 21.0], [11900.0, 3.0], [12100.0, 3.0], [12400.0, 3.0], [12700.0, 10.0], [12300.0, 4.0], [12500.0, 4.0], [12600.0, 1.0], [12800.0, 9.0], [13000.0, 8.0], [13200.0, 30.0], [13300.0, 336.0], [12900.0, 3.0], [13100.0, 11.0], [13400.0, 14.0], [13600.0, 4.0], [13500.0, 17.0], [13800.0, 74.0], [13700.0, 5.0], [13900.0, 7.0], [14300.0, 75.0], [14000.0, 8.0], [14200.0, 3.0], [14100.0, 2.0], [14800.0, 5.0], [14500.0, 16.0], [14600.0, 2.0], [14700.0, 1.0], [15100.0, 12.0], [15200.0, 2.0], [14900.0, 2.0], [15000.0, 2.0], [15400.0, 2.0], [15600.0, 9.0], [15800.0, 1.0], [15700.0, 2.0], [15500.0, 1.0], [16000.0, 1.0], [16300.0, 15.0], [16100.0, 1.0], [15900.0, 1.0], [16800.0, 2.0], [16400.0, 2.0], [17400.0, 1.0], [17200.0, 1.0], [18400.0, 2.0], [17600.0, 1.0], [19200.0, 3.0], [20400.0, 4.0], [23200.0, 2.0], [23000.0, 1.0], [26200.0, 1.0], [28600.0, 1.0], [30800.0, 1.0], [31000.0, 1.0], [35200.0, 1.0], [36800.0, 4.0], [48000.0, 1.0], [200700.0, 3.0], [52800.0, 1.0], [53200.0, 1.0], [58400.0, 2.0], [71200.0, 1.0], [75200.0, 1.0], [84000.0, 1.0], [101600.0, 1.0], [106400.0, 4.0], [107200.0, 2.0], [108000.0, 2.0], [109600.0, 1.0], [77500.0, 2.0], [90300.0, 3.0], [106300.0, 1.0], [105500.0, 2.0], [107100.0, 2.0], [108700.0, 1.0], [126300.0, 1.0], [123900.0, 2.0], [211400.0, 4.0], [58300.0, 2.0], [59500.0, 1.0], [67000.0, 1.0], [73400.0, 1.0], [76600.0, 1.0], [106200.0, 3.0], [107000.0, 2.0], [119000.0, 2.0], [119800.0, 1.0], [106100.0, 3.0], [105300.0, 1.0], [106900.0, 1.0], [107700.0, 1.0], [17300.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [24300.0, 1.0], [24700.0, 1.0], [25700.0, 1.0], [26300.0, 7.0], [26700.0, 1.0], [28900.0, 1.0], [32700.0, 3.0], [34600.0, 1.0], [54600.0, 1.0], [53800.0, 1.0], [60600.0, 1.0], [59400.0, 1.0], [69200.0, 1.0], [70800.0, 1.0], [70000.0, 1.0], [98000.0, 3.0], [103600.0, 1.0], [106000.0, 3.0], [105200.0, 2.0], [106800.0, 1.0], [111600.0, 4.0], [122800.0, 1.0], [122000.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 229600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7858.0, "series": [{"data": [[1.0, 173.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5776.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 22.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7858.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.695652173913047, "minX": 1.53939558E12, "maxY": 499.77789874795866, "series": [{"data": [[1.53939588E12, 287.50118203309705], [1.53939558E12, 9.695652173913047], [1.53939618E12, 468.48690205011377], [1.53939564E12, 45.21085858585859], [1.5393963E12, 11.538461538461538], [1.53939624E12, 91.79084967320257], [1.53939594E12, 345.13541106931774], [1.53939606E12, 464.74986945169695], [1.539396E12, 403.498535442297], [1.5393957E12, 105.05058823529404], [1.53939612E12, 499.77789874795866], [1.53939582E12, 225.602657004831], [1.53939576E12, 164.36904761904768]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5393963E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 155391.0, "series": [{"data": [[3.0, 950.0], [5.0, 1331.0], [6.0, 2573.666666666667], [7.0, 310.0], [8.0, 695.0], [10.0, 1385.0], [11.0, 78181.75], [12.0, 155391.0], [13.0, 1028.0], [15.0, 56746.5], [16.0, 1319.0], [17.0, 1340.0], [18.0, 26553.333333333332], [20.0, 1752.0], [21.0, 1731.0], [22.0, 1567.0], [23.0, 986.0], [25.0, 1377.0], [26.0, 1922.0], [27.0, 62983.0], [29.0, 42616.0], [31.0, 1995.0], [33.0, 2562.5], [35.0, 3324.0], [36.0, 2448.0], [38.0, 2135.5], [39.0, 2289.0], [40.0, 2228.0], [42.0, 2263.0], [43.0, 2296.0], [44.0, 2232.0], [45.0, 41976.0], [46.0, 55408.0], [48.0, 3736.0], [49.0, 3672.0], [51.0, 3378.0], [52.0, 3545.0], [53.0, 3437.0], [54.0, 4354.0], [55.0, 3562.0], [57.0, 3792.0], [58.0, 4703.0], [59.0, 4149.0], [60.0, 3410.0], [62.0, 4016.5], [64.0, 4647.0], [65.0, 4583.0], [66.0, 3433.5], [67.0, 3799.0], [69.0, 4112.0], [71.0, 83598.14285714286], [73.0, 4469.0], [74.0, 5022.0], [76.0, 5222.0], [77.0, 4696.0], [78.0, 4354.0], [79.0, 5392.5], [80.0, 4952.0], [82.0, 32470.0], [81.0, 60106.0], [85.0, 6275.0], [86.0, 5710.0], [87.0, 6316.0], [88.0, 41743.666666666664], [89.0, 5879.5], [90.0, 32053.5], [92.0, 6422.0], [93.0, 6305.0], [94.0, 5893.0], [96.0, 46769.5], [97.0, 6032.0], [98.0, 18540.5], [99.0, 18722.5], [100.0, 6329.0], [101.0, 6273.0], [102.0, 6574.0], [104.0, 7372.0], [105.0, 6577.0], [107.0, 7112.0], [108.0, 30214.5], [109.0, 7024.0], [110.0, 6555.0], [111.0, 6445.0], [112.0, 6740.0], [113.0, 6661.0], [114.0, 6595.0], [116.0, 7268.0], [117.0, 6936.0], [119.0, 7148.0], [120.0, 7962.0], [121.0, 7894.0], [123.0, 8092.0], [124.0, 7581.5], [125.0, 13298.0], [128.0, 8037.5], [129.0, 7886.0], [130.0, 36573.5], [131.0, 8087.0], [134.0, 37056.0], [135.0, 8849.0], [137.0, 9296.0], [138.0, 9184.0], [139.0, 9273.0], [141.0, 9427.5], [142.0, 9229.0], [136.0, 64783.0], [144.0, 10067.0], [146.0, 10304.0], [147.0, 10115.0], [148.0, 10149.0], [150.0, 9993.0], [151.0, 10648.0], [153.0, 10515.5], [154.0, 11099.0], [155.0, 59797.0], [156.0, 10868.0], [159.0, 109677.0], [160.0, 11742.5], [161.0, 11682.0], [162.0, 11039.0], [164.0, 11397.0], [166.0, 11764.0], [167.0, 22330.5], [172.0, 11650.0], [173.0, 12144.0], [174.0, 13807.5], [170.0, 23192.0], [169.0, 23209.0], [168.0, 24506.0], [176.0, 12141.0], [177.0, 12912.0], [180.0, 12454.0], [184.0, 11196.0], [188.0, 11163.0], [186.0, 16340.0], [195.0, 12054.666666666666], [197.0, 14773.666666666668], [198.0, 15835.0], [200.0, 10054.0], [205.0, 16986.0], [206.0, 11431.0], [207.0, 22409.0], [209.0, 10804.0], [214.0, 15156.0], [217.0, 12013.5], [218.0, 10583.0], [219.0, 10486.0], [222.0, 11546.0], [223.0, 11708.5], [228.0, 10062.0], [231.0, 11091.0], [230.0, 12333.0], [229.0, 46978.0], [227.0, 47026.0], [226.0, 47040.0], [233.0, 10621.0], [234.0, 10161.0], [237.0, 10276.0], [239.0, 12543.0], [232.0, 11877.0], [241.0, 10036.0], [242.0, 154826.33333333334], [243.0, 9842.0], [246.0, 9934.0], [247.0, 11381.0], [248.0, 11792.0], [251.0, 10405.0], [252.0, 9872.0], [253.0, 107205.0], [254.0, 10825.5], [255.0, 1.0], [263.0, 8799.5], [259.0, 11922.0], [257.0, 11741.0], [260.0, 46847.5], [261.0, 9822.0], [262.0, 11847.5], [264.0, 11217.0], [266.0, 15871.0], [268.0, 14880.5], [269.0, 18046.5], [270.0, 4224.0], [271.0, 11521.0], [273.0, 16132.666666666666], [272.0, 9580.333333333334], [274.0, 17253.0], [275.0, 31487.5], [276.0, 9727.333333333334], [277.0, 14591.5], [278.0, 18584.6], [279.0, 14429.8], [280.0, 10490.0], [286.0, 6399.25], [287.0, 12429.0], [284.0, 8244.75], [285.0, 9444.0], [282.0, 8703.5], [283.0, 13823.0], [289.0, 4.0], [288.0, 20650.666666666668], [290.0, 49151.0], [300.0, 14938.666666666666], [301.0, 16809.0], [302.0, 10779.0], [303.0, 13311.0], [292.0, 12883.666666666666], [293.0, 11003.0], [294.0, 15137.5], [295.0, 14895.0], [296.0, 15871.0], [297.0, 13106.833333333334], [298.0, 8901.333333333334], [299.0, 10650.0], [305.0, 19723.6], [304.0, 13280.5], [306.0, 12750.166666666668], [307.0, 21759.0], [308.0, 9210.0], [309.0, 10239.25], [310.0, 10854.0], [311.0, 8910.8], [312.0, 11648.681818181818], [318.0, 8908.166666666666], [319.0, 11736.000000000002], [316.0, 8011.666666666667], [317.0, 7983.0], [313.0, 33894.66666666667], [314.0, 18211.5], [315.0, 14299.375000000002], [322.0, 10375.666666666666], [321.0, 10193.444444444445], [323.0, 7679.0], [332.0, 10781.444444444443], [333.0, 8395.8], [334.0, 9058.5], [335.0, 7798.5], [324.0, 13822.0], [325.0, 9190.545454545454], [326.0, 11033.78947368421], [327.0, 44885.0], [328.0, 9593.0], [330.0, 9971.0], [331.0, 9037.5], [337.0, 12512.0], [336.0, 11333.666666666666], [338.0, 8247.714285714286], [339.0, 19192.923076923074], [340.0, 12654.125], [341.0, 9728.0], [342.0, 11063.222222222223], [343.0, 10579.666666666666], [344.0, 11322.0], [350.0, 1.0], [351.0, 14335.0], [348.0, 11091.0], [349.0, 10496.249999999998], [345.0, 11554.285714285714], [346.0, 8681.333333333334], [347.0, 9209.333333333334], [353.0, 12201.666666666666], [352.0, 3925.666666666667], [354.0, 9478.374999999998], [355.0, 12025.666666666666], [356.0, 8036.8], [357.0, 11018.222222222223], [358.0, 10390.142857142857], [359.0, 9214.0], [360.0, 4856.5], [366.0, 6143.666666666666], [367.0, 11520.0], [364.0, 9215.666666666668], [365.0, 8372.375000000002], [361.0, 11370.0], [362.0, 8863.375], [363.0, 11353.8], [369.0, 8687.0], [368.0, 9933.142857142857], [370.0, 7680.0], [371.0, 11592.375], [372.0, 9812.833333333332], [373.0, 8412.5], [374.0, 10108.142857142857], [375.0, 9311.5], [376.0, 13517.666666666666], [382.0, 27135.0], [383.0, 9790.0], [380.0, 11690.166666666666], [381.0, 8378.625], [377.0, 7640.0], [378.0, 13312.0], [379.0, 9943.0], [385.0, 8194.0], [384.0, 12510.75], [386.0, 8106.0], [387.0, 10880.0], [388.0, 12970.333333333332], [389.0, 11092.333333333334], [390.0, 12829.0], [391.0, 14851.0], [392.0, 9255.0], [398.0, 9942.0], [396.0, 9770.333333333334], [397.0, 9728.0], [393.0, 10456.7], [394.0, 10171.6], [395.0, 13464.583333333336], [401.0, 11264.2], [400.0, 10368.0], [402.0, 12345.222222222223], [403.0, 9727.5], [404.0, 11067.0], [405.0, 13014.799999999997], [407.0, 13311.363636363636], [408.0, 13842.571428571428], [415.0, 11475.666666666666], [412.0, 7166.75], [413.0, 10480.666666666666], [409.0, 12763.000000000002], [411.0, 8785.714285714284], [417.0, 12033.0], [416.0, 11007.909090909092], [418.0, 1.0], [419.0, 15028.0], [420.0, 13566.000000000002], [421.0, 13909.333333333332], [422.0, 9884.0], [423.0, 14206.75], [424.0, 8601.8], [430.0, 9246.166666666666], [431.0, 14335.0], [428.0, 7168.0], [429.0, 11536.666666666666], [425.0, 10102.2], [426.0, 8874.333333333332], [427.0, 7011.500000000001], [432.0, 11007.0], [435.0, 1.0], [434.0, 12982.0], [444.0, 12495.0], [445.0, 11928.0], [446.0, 9620.2], [447.0, 8841.799999999997], [436.0, 10575.0], [437.0, 9122.999999999998], [438.0, 48044.75], [439.0, 12567.199999999999], [440.0, 5376.5], [441.0, 11735.0], [442.0, 13311.0], [443.0, 12171.0], [449.0, 10580.0], [448.0, 11684.5], [450.0, 10184.0], [451.0, 11364.333333333334], [452.0, 12713.777777777777], [453.0, 10763.333333333334], [454.0, 12548.5], [455.0, 7314.428571428572], [456.0, 9113.0], [462.0, 9639.0], [460.0, 26258.428571428572], [461.0, 13519.0], [457.0, 8191.6], [458.0, 13249.384615384617], [459.0, 12736.6], [465.0, 12201.833333333334], [464.0, 57371.88888888889], [466.0, 69873.875], [467.0, 13311.333333333334], [476.0, 12116.666666666666], [477.0, 10166.357142857141], [478.0, 10202.0], [479.0, 11467.4], [468.0, 17979.5], [469.0, 12029.666666666666], [470.0, 4484.0], [471.0, 10602.5], [472.0, 12650.5], [473.0, 11556.714285714284], [474.0, 11289.714285714286], [475.0, 11360.0], [481.0, 6489.0], [480.0, 9002.571428571428], [483.0, 8974.5], [493.0, 9267.166666666666], [494.0, 12523.333333333334], [495.0, 12314.666666666668], [484.0, 12543.0], [485.0, 23441.6], [486.0, 3307.0], [487.0, 9263.181818181818], [488.0, 10183.111111111111], [489.0, 12179.2], [490.0, 7168.0], [491.0, 11777.5], [496.0, 12594.2], [497.0, 9803.0], [498.0, 9715.0], [499.0, 11547.5], [500.0, 18642.123711340177]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[383.20192822710203, 15451.315479378667]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[4.0, 1270.5], [5.0, 1198.0], [6.0, 1228.0], [7.0, 1223.6666666666667], [8.0, 20571.625], [9.0, 1274.0], [10.0, 1248.0], [11.0, 1222.8749999999998], [12.0, 32104.4], [13.0, 1204.888888888889], [14.0, 1234.9090909090908], [15.0, 1221.2222222222222], [16.0, 8230.818181818182], [17.0, 6713.428571428571], [18.0, 1219.5454545454545], [19.0, 1299.5833333333333], [20.0, 1689.3636363636363], [21.0, 1750.0909090909092], [22.0, 1361.4666666666667], [23.0, 9738.266666666666], [24.0, 10411.071428571428], [25.0, 1776.1111111111113], [26.0, 1788.090909090909], [27.0, 2071.916666666667], [28.0, 2240.1666666666665], [29.0, 32724.416666666664], [30.0, 13758.333333333334], [31.0, 8782.545454545456], [32.0, 7608.0], [33.0, 8078.083333333333], [34.0, 10024.0], [35.0, 11420.625], [36.0, 8334.666666666668], [37.0, 7238.466666666666], [38.0, 9075.272727272728], [39.0, 2850.7999999999997], [40.0, 3181.5], [41.0, 2869.222222222222], [42.0, 2998.7692307692305], [43.0, 3306.9285714285706], [44.0, 3150.3076923076924], [45.0, 20110.64285714286], [46.0, 12006.666666666666], [47.0, 9313.4], [48.0, 8514.5], [49.0, 8296.538461538461], [50.0, 9031.0], [51.0, 4059.75], [52.0, 3958.2727272727275], [53.0, 4013.5454545454545], [54.0, 4454.400000000001], [55.0, 4308.777777777777], [56.0, 4326.333333333333], [57.0, 4988.8], [58.0, 4384.75], [59.0, 4343.25], [60.0, 4374.5], [61.0, 4198.666666666666], [62.0, 4545.307692307692], [63.0, 4275.083333333333], [64.0, 4459.000000000001], [65.0, 5091.571428571429], [66.0, 4436.846153846154], [67.0, 4475.428571428572], [68.0, 4397.6875], [69.0, 4454.846153846154], [70.0, 4469.571428571428], [71.0, 72537.21739130435], [72.0, 7635.277777777778], [73.0, 8945.692307692307], [74.0, 9356.25], [75.0, 8377.8125], [76.0, 12825.0], [77.0, 5102.714285714285], [78.0, 11359.0], [79.0, 9673.307692307691], [80.0, 9775.0], [81.0, 5747.25], [82.0, 5645.615384615386], [83.0, 5772.307692307692], [84.0, 5893.923076923077], [85.0, 5978.6], [86.0, 6360.099999999999], [87.0, 6137.357142857143], [88.0, 6193.818181818182], [89.0, 6187.416666666667], [90.0, 6133.636363636363], [91.0, 11961.866666666667], [92.0, 13821.0], [93.0, 10292.384615384615], [94.0, 5976.0], [95.0, 21447.909090909092], [96.0, 6708.692307692308], [97.0, 6768.909090909091], [98.0, 6830.692307692308], [99.0, 6905.333333333333], [100.0, 9502.666666666666], [101.0, 10497.666666666666], [102.0, 10234.846153846152], [103.0, 6561.571428571428], [104.0, 13446.133333333333], [105.0, 10551.4], [106.0, 8066.714285714284], [107.0, 7159.363636363637], [108.0, 7123.692307692308], [109.0, 7960.857142857143], [110.0, 8092.133333333334], [111.0, 7986.923076923076], [112.0, 7924.294117647059], [113.0, 8145.083333333333], [114.0, 8284.5], [115.0, 11228.933333333332], [116.0, 11854.384615384615], [117.0, 10464.0], [118.0, 11473.533333333335], [119.0, 14073.444444444445], [120.0, 8357.812500000002], [121.0, 7764.923076923077], [122.0, 7910.999999999999], [123.0, 7981.692307692308], [124.0, 8063.888888888889], [125.0, 8045.357142857143], [126.0, 14990.933333333334], [127.0, 16141.692307692309], [128.0, 14128.375], [129.0, 16170.999999999998], [130.0, 8481.615384615385], [131.0, 16562.53846153846], [132.0, 10477.625], [133.0, 10291.176470588236], [134.0, 9004.615384615385], [135.0, 11326.818181818182], [136.0, 9234.727272727272], [137.0, 9300.777777777777], [138.0, 9539.933333333332], [139.0, 9917.0], [140.0, 9849.333333333334], [141.0, 9785.166666666666], [142.0, 9934.416666666666], [143.0, 53813.4], [144.0, 11779.461538461537], [145.0, 11810.307692307691], [146.0, 10988.666666666666], [147.0, 11836.818181818182], [148.0, 15505.461538461539], [149.0, 10808.916666666668], [150.0, 10908.846153846154], [151.0, 11054.583333333334], [152.0, 10631.166666666666], [153.0, 11653.5], [154.0, 11469.692307692309], [155.0, 11117.9], [156.0, 11775.0], [157.0, 11793.272727272728], [158.0, 11654.142857142857], [159.0, 11888.692307692307], [160.0, 12069.928571428572], [161.0, 12186.153846153848], [162.0, 12536.214285714284], [163.0, 13067.333333333334], [164.0, 12250.818181818182], [165.0, 12200.57142857143], [166.0, 12010.416666666666], [167.0, 12095.800000000001], [168.0, 11857.599999999999], [169.0, 11757.2], [170.0, 11858.454545454546], [171.0, 13518.222222222223], [172.0, 13031.75], [173.0, 12876.0], [174.0, 12614.142857142857], [175.0, 12818.615384615385], [176.0, 12567.9], [177.0, 12625.0], [178.0, 13333.117647058823], [179.0, 12877.357142857143], [180.0, 12728.076923076924], [181.0, 12674.0], [182.0, 12571.545454545456], [183.0, 12273.533333333335], [184.0, 11944.333333333332], [185.0, 11836.363636363634], [186.0, 11749.6], [187.0, 12004.583333333332], [188.0, 11671.571428571428], [189.0, 11589.461538461537], [190.0, 12957.538461538463], [191.0, 11590.416666666666], [192.0, 11787.499999999998], [193.0, 11661.133333333331], [194.0, 11442.6], [195.0, 11304.5], [196.0, 11266.400000000001], [197.0, 10859.416666666666], [198.0, 10214.6875], [199.0, 11360.615384615385], [200.0, 10751.0], [201.0, 10950.06666666667], [202.0, 10700.166666666668], [203.0, 13211.666666666666], [204.0, 10825.923076923076], [205.0, 10993.0], [206.0, 14270.333333333332], [207.0, 11277.499999999998], [208.0, 14399.0], [209.0, 11710.076923076924], [210.0, 11630.384615384615], [211.0, 11625.833333333334], [212.0, 11545.999999999998], [213.0, 11527.066666666666], [214.0, 11714.538461538461], [215.0, 11546.833333333334], [216.0, 11862.307692307691], [217.0, 11581.583333333334], [218.0, 11573.411764705883], [219.0, 11334.692307692307], [220.0, 11299.357142857143], [221.0, 11714.083333333334], [222.0, 11427.636363636364], [223.0, 11292.076923076924], [224.0, 11855.642857142857], [225.0, 11415.0], [226.0, 11400.222222222223], [227.0, 11328.90909090909], [228.0, 11407.312499999998], [229.0, 11482.4], [230.0, 11537.916666666668], [231.0, 15064.999999999998], [232.0, 11403.916666666666], [233.0, 11402.933333333332], [234.0, 11662.533333333333], [235.0, 10909.538461538463], [236.0, 11063.785714285714], [237.0, 11218.916666666668], [238.0, 10151.0], [239.0, 11946.466666666667], [240.0, 11849.076923076922], [241.0, 10576.222222222223], [242.0, 58715.55555555556], [243.0, 10620.357142857141], [244.0, 10746.625], [245.0, 11823.000000000002], [246.0, 10558.666666666666], [247.0, 10548.692307692309], [248.0, 10749.615384615383], [249.0, 13071.176470588236], [250.0, 10902.500000000002], [251.0, 10998.636363636364], [252.0, 11185.636363636362], [253.0, 17170.466666666667], [254.0, 10720.071428571428], [255.0, 17263.300000000003], [257.0, 18645.416666666664], [256.0, 10695.199999999999], [258.0, 10592.583333333334], [259.0, 10803.1875], [260.0, 14791.888888888892], [261.0, 10912.538461538461], [262.0, 22076.10526315789], [263.0, 10007.153846153848], [264.0, 13746.631578947368], [270.0, 10066.285714285714], [271.0, 12952.142857142857], [268.0, 11364.714285714286], [269.0, 11199.35294117647], [265.0, 10247.642857142857], [266.0, 11196.07142857143], [267.0, 11571.333333333334], [273.0, 11937.624999999998], [272.0, 11545.764705882355], [274.0, 10732.29411764706], [275.0, 11216.642857142857], [276.0, 13614.368421052628], [277.0, 10621.818181818182], [278.0, 16094.875], [279.0, 10325.588235294119], [280.0, 13750.000000000002], [286.0, 28221.352941176476], [287.0, 11083.692307692307], [284.0, 11222.625], [285.0, 12425.0625], [281.0, 11655.09090909091], [282.0, 26546.461538461535], [283.0, 11146.166666666668], [289.0, 12766.76923076923], [288.0, 15509.933333333334], [290.0, 13104.199999999999], [291.0, 14255.666666666668], [292.0, 14429.705882352942], [293.0, 12577.833333333334], [294.0, 12908.0], [295.0, 12704.466666666669], [296.0, 19688.714285714286], [302.0, 11524.6], [303.0, 11817.823529411764], [300.0, 14064.055555555555], [301.0, 11336.999999999998], [297.0, 12213.384615384617], [298.0, 11933.0], [299.0, 12133.526315789475], [305.0, 15503.66666666667], [304.0, 11031.0], [306.0, 11064.684210526315], [307.0, 13818.521739130436], [308.0, 11064.583333333334], [309.0, 10918.466666666667], [310.0, 10131.333333333332], [311.0, 17332.86666666667], [312.0, 11888.300000000001], [318.0, 11210.857142857143], [319.0, 11072.916666666666], [316.0, 10610.625], [317.0, 10969.850000000002], [313.0, 17212.624999999996], [314.0, 11737.199999999997], [315.0, 11938.947368421053], [321.0, 18029.384615384613], [320.0, 10593.352941176472], [322.0, 11691.75], [323.0, 9449.86363636364], [324.0, 11022.269230769232], [325.0, 9091.166666666666], [326.0, 11583.21875], [327.0, 11467.722222222223], [328.0, 10320.923076923078], [334.0, 9344.25], [335.0, 10442.5], [332.0, 9476.583333333336], [333.0, 11157.470588235296], [329.0, 10129.533333333333], [330.0, 9861.800000000001], [331.0, 13248.222222222223], [337.0, 11283.470588235292], [336.0, 10416.454545454546], [338.0, 10184.105263157893], [339.0, 10099.695652173914], [340.0, 10921.857142857143], [341.0, 10936.449999999999], [342.0, 11170.57692307692], [343.0, 9842.999999999998], [344.0, 10804.312500000002], [350.0, 9909.500000000002], [351.0, 9768.285714285716], [348.0, 10724.775000000001], [349.0, 10053.21052631579], [345.0, 10158.545454545452], [346.0, 10561.000000000002], [347.0, 9946.916666666666], [353.0, 10157.666666666668], [352.0, 10551.85], [354.0, 8519.192307692309], [355.0, 10366.545454545452], [356.0, 9836.187500000002], [357.0, 10122.862068965514], [358.0, 10376.428571428572], [359.0, 10052.25], [360.0, 10303.4375], [366.0, 9769.9375], [367.0, 15241.478260869564], [364.0, 9843.65], [365.0, 10740.214285714284], [361.0, 8668.949999999999], [362.0, 8233.733333333335], [363.0, 9933.458333333336], [369.0, 10253.235294117647], [368.0, 10437.04545454545], [370.0, 9857.722222222223], [371.0, 10362.827586206899], [372.0, 9889.466666666667], [373.0, 10466.947368421053], [374.0, 10921.29411764706], [375.0, 10341.785714285714], [376.0, 11334.269230769229], [382.0, 11609.947368421053], [383.0, 10276.333333333336], [380.0, 10489.166666666666], [381.0, 9744.208333333334], [377.0, 10124.785714285716], [378.0, 10048.565217391304], [379.0, 11521.136363636364], [385.0, 10917.0], [384.0, 11489.47826086957], [386.0, 10505.473684210527], [387.0, 9472.724137931034], [388.0, 11461.076923076924], [389.0, 9828.61111111111], [390.0, 10428.583333333334], [391.0, 10387.923076923076], [392.0, 9532.57575757576], [398.0, 10715.333333333334], [399.0, 10200.833333333332], [396.0, 12592.142857142859], [397.0, 10423.16666666667], [393.0, 9553.961538461539], [394.0, 12080.374999999998], [395.0, 10829.56], [401.0, 11673.521739130436], [400.0, 10720.45], [402.0, 10794.823529411766], [403.0, 11059.533333333335], [404.0, 10838.833333333334], [405.0, 11290.407407407407], [406.0, 11570.0], [407.0, 11891.666666666666], [408.0, 12067.46153846154], [414.0, 12097.57142857143], [415.0, 12475.0], [412.0, 9809.92857142857], [413.0, 11181.952380952378], [409.0, 11990.291666666668], [410.0, 11671.0], [411.0, 11452.039999999997], [417.0, 12354.666666666666], [416.0, 12002.709677419354], [418.0, 11870.461538461539], [419.0, 13383.8], [420.0, 12025.814814814814], [421.0, 11423.000000000002], [422.0, 12408.684210526315], [423.0, 12270.684210526315], [424.0, 11430.708333333332], [430.0, 8975.904761904763], [431.0, 12547.176470588236], [428.0, 10237.499999999998], [429.0, 12390.0], [425.0, 12570.111111111111], [426.0, 12687.333333333336], [427.0, 10037.230769230768], [433.0, 11933.92857142857], [432.0, 11521.791666666666], [434.0, 11938.1], [435.0, 11433.133333333333], [436.0, 12896.176470588236], [437.0, 10084.114285714284], [438.0, 14944.310344827585], [439.0, 11771.88888888889], [440.0, 11081.2], [446.0, 10658.933333333332], [447.0, 10378.76], [444.0, 11708.5], [445.0, 10156.499999999998], [441.0, 10163.999999999998], [442.0, 11863.0], [443.0, 11868.5], [449.0, 11371.166666666668], [448.0, 11268.85], [450.0, 10839.866666666667], [451.0, 11235.85], [452.0, 12180.75], [453.0, 11277.650000000001], [454.0, 10841.105263157893], [455.0, 9247.222222222223], [456.0, 15966.647058823532], [462.0, 10396.307692307691], [463.0, 9615.153846153848], [460.0, 14074.333333333332], [461.0, 10752.2], [457.0, 11103.526315789471], [458.0, 12963.25], [459.0, 11109.6], [465.0, 11039.341463414632], [464.0, 15653.363636363638], [466.0, 30331.42105263158], [467.0, 11215.764705882351], [468.0, 11790.833333333334], [469.0, 10629.2], [470.0, 9311.823529411766], [471.0, 11448.736842105265], [472.0, 11867.77777777778], [478.0, 11492.538461538463], [479.0, 12384.761904761903], [476.0, 10629.70588235294], [477.0, 11485.545454545452], [473.0, 9186.709677419354], [474.0, 11103.9375], [475.0, 24201.0], [481.0, 10291.388888888889], [480.0, 10751.133333333333], [482.0, 11284.666666666664], [483.0, 11200.458333333334], [484.0, 11520.625], [485.0, 10557.370370370372], [486.0, 9315.035714285716], [487.0, 9380.045454545454], [488.0, 10823.076923076922], [494.0, 10912.136363636366], [495.0, 11163.857142857141], [492.0, 10362.058823529413], [493.0, 9542.578947368422], [489.0, 13403.785714285716], [490.0, 8538.857142857143], [491.0, 10634.210526315788], [496.0, 10417.894736842107], [497.0, 11086.499999999998], [498.0, 10761.57142857143], [499.0, 10136.838709677417], [500.0, 14757.399999999985]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[331.843612774452, 11986.265369261475]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 24.0], [3.0, 29.0], [4.0, 35.0], [5.0, 29.0], [6.0, 28.0], [7.0, 14.5], [8.0, 38.0], [9.0, 29.0], [10.0, 33.0], [11.0, 77716.0], [12.0, 116552.5], [13.0, 79499.5], [14.0, 34.0], [15.0, 56092.0], [16.0, 27.0], [17.0, 30.0], [18.0, 43.0], [19.0, 38813.5], [20.0, 38843.5], [21.0, 201.0], [22.0, 280.0], [23.0, 799.0], [24.0, 750.0], [25.0, 62415.0], [26.0, 905.0], [28.0, 1007.0], [29.0, 62581.0], [30.0, 1327.0], [31.0, 1291.0], [32.0, 1616.0], [33.0, 1492.0], [34.0, 1719.0], [36.0, 1873.5], [37.0, 1475.0], [38.0, 1616.0], [39.0, 34440.5], [40.0, 1928.0], [42.0, 2022.0], [43.0, 1824.0], [44.0, 1750.0], [46.0, 2285.0], [47.0, 2842.0], [48.0, 2978.0], [49.0, 2733.0], [50.0, 2646.0], [51.0, 2917.0], [53.0, 3773.0], [54.0, 3081.0], [55.0, 3020.0], [56.0, 3175.0], [57.0, 3411.0], [58.0, 3222.0], [59.0, 3063.0], [61.0, 3071.0], [62.0, 3318.0], [63.0, 1669.0], [64.0, 3070.0], [67.0, 3254.0], [68.0, 3204.5], [69.0, 3210.0], [71.0, 39301.5], [72.0, 3598.0], [73.0, 3730.0], [74.0, 1833.0], [75.0, 3806.0], [77.0, 4094.0], [79.0, 4571.0], [80.0, 4807.0], [81.0, 4152.0], [82.0, 4406.0], [83.0, 22983.666666666668], [84.0, 31645.5], [86.0, 22709.0], [87.0, 4827.0], [85.0, 58400.0], [89.0, 5028.0], [90.0, 31780.0], [91.0, 5141.0], [92.0, 5016.0], [93.0, 5272.0], [94.0, 5273.0], [95.0, 5534.0], [96.0, 5408.0], [97.0, 46459.5], [98.0, 5712.0], [99.0, 5945.0], [101.0, 5938.5], [103.0, 5941.0], [105.0, 5999.5], [106.0, 5795.0], [107.0, 53271.0], [108.0, 5972.0], [109.0, 5853.0], [110.0, 5855.0], [112.0, 6019.0], [114.0, 6013.0], [115.0, 6202.0], [116.0, 6413.0], [117.0, 6590.0], [118.0, 6379.0], [119.0, 6886.0], [120.0, 6539.0], [121.0, 12876.0], [122.0, 12973.5], [123.0, 13065.5], [125.0, 7111.0], [126.0, 7085.0], [124.0, 17200.0], [128.0, 7220.0], [129.0, 7470.0], [130.0, 7699.0], [131.0, 7909.0], [132.0, 7479.0], [133.0, 7708.0], [134.0, 7875.0], [135.0, 7827.0], [137.0, 8391.0], [138.0, 8651.0], [139.0, 8748.0], [140.0, 8975.0], [141.0, 8323.0], [142.0, 8590.0], [143.0, 122426.2], [144.0, 4407.5], [145.0, 8607.0], [146.0, 8661.0], [148.0, 9078.0], [149.0, 9305.0], [150.0, 9125.0], [151.0, 9529.0], [152.0, 59428.5], [154.0, 9978.0], [156.0, 10260.0], [159.0, 109677.0], [157.0, 108927.0], [160.0, 13467.0], [161.0, 12194.0], [164.0, 10522.0], [166.0, 17317.0], [168.0, 11296.0], [172.0, 12860.0], [175.0, 14734.0], [177.0, 20605.5], [183.0, 16368.0], [182.0, 16385.0], [176.0, 14649.0], [184.0, 14307.0], [186.0, 20424.0], [187.0, 11145.0], [190.0, 11564.0], [191.0, 15512.0], [195.0, 12038.5], [198.0, 10529.0], [193.0, 15731.0], [192.0, 15495.0], [206.0, 13498.0], [207.0, 41775.0], [204.0, 23255.0], [202.0, 13898.0], [200.0, 13924.0], [208.0, 52830.0], [211.0, 24342.0], [212.0, 11177.0], [217.0, 13254.0], [218.0, 13277.0], [220.0, 10040.0], [222.0, 9119.0], [223.0, 23216.0], [224.0, 10806.0], [227.0, 12121.5], [231.0, 11123.0], [232.0, 13945.0], [233.0, 15638.0], [234.0, 13524.0], [235.0, 43657.5], [236.0, 9725.0], [238.0, 9765.0], [239.0, 1.0], [241.0, 8883.0], [242.0, 13345.0], [243.0, 44809.5], [244.0, 9399.0], [245.0, 70673.0], [247.0, 82720.0], [246.0, 11399.0], [249.0, 13256.0], [250.0, 12000.25], [251.0, 33409.0], [252.0, 7844.0], [253.0, 10191.666666666666], [255.0, 85413.5], [257.0, 85961.5], [259.0, 11238.5], [268.0, 31327.75], [269.0, 19739.0], [270.0, 34285.5], [271.0, 13277.0], [260.0, 30634.5], [261.0, 11496.5], [262.0, 49275.0], [263.0, 8836.5], [264.0, 59234.0], [266.0, 107155.0], [267.0, 13311.0], [274.0, 9689.0], [273.0, 9470.0], [275.0, 11859.333333333334], [284.0, 17679.166666666668], [285.0, 14561.333333333334], [286.0, 70852.57142857143], [287.0, 12431.5], [276.0, 64640.66666666667], [278.0, 28793.0], [279.0, 10735.5], [280.0, 22584.5], [282.0, 110036.5], [283.0, 12309.0], [289.0, 12031.0], [288.0, 21733.2], [290.0, 10310.0], [291.0, 14886.5], [292.0, 26912.1], [293.0, 15315.0], [294.0, 11587.0], [296.0, 75156.0], [302.0, 10062.0], [303.0, 49030.42857142857], [300.0, 76660.75], [301.0, 13237.0], [297.0, 8874.0], [298.0, 12945.6], [299.0, 10655.333333333334], [305.0, 35859.5], [304.0, 12328.333333333334], [306.0, 9493.285714285714], [307.0, 10969.6], [308.0, 9718.0], [309.0, 38422.857142857145], [310.0, 10301.666666666666], [311.0, 17106.0], [312.0, 9445.78947368421], [318.0, 8959.5], [319.0, 9819.0], [316.0, 9353.5], [317.0, 11825.6], [313.0, 45921.8], [314.0, 9216.0], [315.0, 13964.875], [321.0, 31480.8], [320.0, 10788.0], [322.0, 9966.0], [323.0, 8187.5], [324.0, 8703.5], [325.0, 10299.333333333332], [326.0, 12321.65], [327.0, 24928.125], [328.0, 9402.0], [334.0, 6974.6], [335.0, 10587.833333333334], [332.0, 8835.411764705883], [333.0, 9416.2], [329.0, 7628.0], [330.0, 10324.0], [331.0, 8914.999999999998], [337.0, 10311.4], [336.0, 11647.0], [338.0, 10448.333333333334], [339.0, 8938.6], [340.0, 9929.4], [341.0, 15619.0], [342.0, 13743.625], [343.0, 13461.0], [344.0, 11004.75], [350.0, 9963.25], [351.0, 11657.0], [348.0, 11505.846153846154], [349.0, 9402.0], [345.0, 9784.222222222223], [346.0, 10063.999999999998], [347.0, 10146.5], [353.0, 9870.2], [352.0, 12486.5], [354.0, 9459.25], [355.0, 16947.857142857145], [356.0, 7253.0], [357.0, 11159.125], [358.0, 11534.714285714284], [359.0, 11178.5], [360.0, 13213.0], [366.0, 12326.375], [367.0, 62081.333333333336], [364.0, 8682.5], [365.0, 11626.625], [361.0, 10434.0], [362.0, 9180.0], [363.0, 12349.8], [370.0, 7679.0], [368.0, 8819.6], [371.0, 10963.222222222223], [380.0, 7110.666666666666], [381.0, 12125.5], [382.0, 11689.333333333334], [383.0, 11854.0], [372.0, 9724.0], [373.0, 8705.0], [374.0, 12843.75], [375.0, 10645.0], [376.0, 13951.5], [377.0, 7302.0], [378.0, 13790.0], [379.0, 13478.666666666666], [387.0, 11263.857142857143], [385.0, 11872.333333333334], [384.0, 9576.699999999999], [386.0, 9727.0], [388.0, 10896.499999999998], [389.0, 10409.333333333334], [392.0, 9817.0], [399.0, 9617.0], [396.0, 11867.0], [397.0, 9728.0], [393.0, 9021.6], [394.0, 11525.333333333334], [395.0, 16708.000000000004], [403.0, 11694.5], [401.0, 11313.714285714284], [400.0, 8414.75], [402.0, 13166.285714285716], [405.0, 9166.363636363636], [407.0, 12159.166666666666], [408.0, 13006.333333333334], [415.0, 14405.0], [412.0, 7999.6], [413.0, 7295.75], [409.0, 9151.5], [410.0, 8235.5], [411.0, 12030.4], [418.0, 13215.0], [416.0, 12218.64705882353], [419.0, 12199.5], [428.0, 13702.0], [429.0, 11683.46153846154], [430.0, 8880.0], [431.0, 12613.75], [420.0, 11093.166666666666], [421.0, 14064.0], [422.0, 13824.0], [423.0, 8834.875], [424.0, 12291.285714285716], [425.0, 13311.5], [426.0, 6656.0], [427.0, 9429.375], [433.0, 11263.333333333334], [432.0, 8763.0], [435.0, 11680.0], [444.0, 11603.666666666666], [445.0, 12553.333333333334], [446.0, 9627.5], [447.0, 7720.846153846153], [436.0, 12507.714285714284], [437.0, 9979.357142857145], [438.0, 38603.166666666664], [439.0, 12875.0], [440.0, 11074.0], [441.0, 13233.0], [442.0, 13302.5], [449.0, 11597.0], [448.0, 11010.5], [450.0, 8959.0], [460.0, 39023.0], [461.0, 11129.0], [462.0, 9170.0], [452.0, 14442.307692307691], [453.0, 13310.8], [454.0, 9728.666666666668], [455.0, 5935.090909090909], [456.0, 6437.0], [457.0, 8080.0], [458.0, 14819.199999999999], [459.0, 11390.0], [465.0, 9319.7], [464.0, 48862.2], [466.0, 107263.0], [467.0, 13311.0], [476.0, 10404.666666666666], [477.0, 8478.70588235294], [479.0, 9327.285714285716], [468.0, 11276.166666666668], [469.0, 9507.2], [470.0, 9189.0], [471.0, 12520.0], [472.0, 14387.333333333334], [473.0, 12321.666666666668], [474.0, 8109.0], [475.0, 10344.0], [481.0, 12697.8], [480.0, 10700.8], [483.0, 13014.0], [482.0, 10632.0], [492.0, 10624.0], [493.0, 8361.6], [494.0, 8215.0], [495.0, 11625.75], [484.0, 12621.5], [485.0, 48506.07692307692], [486.0, 9530.5], [487.0, 12415.25], [488.0, 10948.666666666666], [489.0, 9734.583333333334], [490.0, 6489.833333333334], [491.0, 10056.2], [496.0, 12080.166666666666], [497.0, 12356.0], [498.0, 9133.0], [499.0, 13823.5], [500.0, 20101.599589322414], [1.0, 88.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[379.7090628218334, 17132.853759011337]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 48.88333333333333, "minX": 1.53939558E12, "maxY": 1079708.7166666666, "series": [{"data": [[1.53939588E12, 1024834.0833333334], [1.53939558E12, 93441.06666666667], [1.53939618E12, 1079708.7166666666], [1.53939564E12, 978733.7166666667], [1.5393963E12, 71.5], [1.53939624E12, 107761.75], [1.53939594E12, 1072845.6], [1.53939606E12, 1058138.75], [1.539396E12, 1032030.2166666667], [1.5393957E12, 1068416.05], [1.53939612E12, 1043418.1166666667], [1.53939582E12, 1075015.9], [1.53939576E12, 991600.9166666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939588E12, 5168.333333333333], [1.53939558E12, 408.26666666666665], [1.53939618E12, 7212.7], [1.53939564E12, 3470.95], [1.5393963E12, 48.88333333333333], [1.53939624E12, 618.2833333333333], [1.53939594E12, 7618.183333333333], [1.53939606E12, 7781.116666666667], [1.539396E12, 6959.3], [1.5393957E12, 3717.866666666667], [1.53939612E12, 7504.816666666667], [1.53939582E12, 3560.2], [1.53939576E12, 3303.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5393963E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 33.46666666666667, "minX": 1.53939558E12, "maxY": 156107.0, "series": [{"data": [[1.53939588E12, 14828.439759036148], [1.53939558E12, 1260.7857142857142], [1.53939618E12, 21397.389513108625], [1.53939564E12, 2941.10909090909], [1.5393963E12, 155391.4], [1.53939624E12, 78395.10714285714], [1.53939594E12, 10636.4], [1.53939606E12, 15168.529761904752], [1.539396E12, 11184.343283582093], [1.5393957E12, 6669.884615384613], [1.53939612E12, 16754.05802047782], [1.53939582E12, 14131.148148148148], [1.53939576E12, 10737.722222222223]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939588E12, 13442.429208472697], [1.53939558E12, 1248.4285714285716], [1.53939618E12, 16571.55797101449], [1.53939564E12, 3280.6548672566355], [1.5393963E12, 155391.66666666666], [1.53939624E12, 71370.85000000003], [1.53939594E12, 10309.317957166384], [1.53939606E12, 11672.602263540826], [1.539396E12, 11108.540190146938], [1.5393957E12, 6972.566037735851], [1.53939612E12, 13018.065969428797], [1.53939582E12, 11368.177865612653], [1.53939576E12, 11336.935766423361]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939588E12, 28597.49514563107], [1.53939558E12, 33.46666666666667], [1.53939618E12, 21270.753036437258], [1.53939564E12, 2039.4237288135594], [1.5393963E12, 156107.0], [1.53939624E12, 83874.43999999999], [1.53939594E12, 11118.629969418962], [1.53939606E12, 14967.254385964901], [1.539396E12, 10886.184397163113], [1.5393957E12, 5909.642857142857], [1.53939612E12, 18788.79401993356], [1.53939582E12, 22163.476190476194], [1.53939576E12, 11059.657142857142]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5393963E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 33.46666666666667, "minX": 1.53939558E12, "maxY": 156107.0, "series": [{"data": [[1.53939588E12, 14828.433734939761], [1.53939558E12, 1260.7857142857142], [1.53939618E12, 21397.382022471906], [1.53939564E12, 2941.10909090909], [1.5393963E12, 155391.4], [1.53939624E12, 78395.07142857142], [1.53939594E12, 10636.393750000001], [1.53939606E12, 15168.526785714288], [1.539396E12, 11184.33582089553], [1.5393957E12, 6669.884615384613], [1.53939612E12, 16754.054607508544], [1.53939582E12, 14131.148148148148], [1.53939576E12, 10737.722222222223]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939588E12, 13441.975473801549], [1.53939558E12, 1247.9365079365077], [1.53939618E12, 16571.26086956524], [1.53939564E12, 3280.1946902654877], [1.5393963E12, 155391.66666666666], [1.53939624E12, 71370.57000000004], [1.53939594E12, 10308.948105436559], [1.53939606E12, 11672.274050121285], [1.539396E12, 11108.246326707012], [1.5393957E12, 6972.029649595691], [1.53939612E12, 13017.737731295265], [1.53939582E12, 11367.699604743071], [1.53939576E12, 11336.505109489035]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939588E12, 28597.49514563107], [1.53939558E12, 33.46666666666667], [1.53939618E12, 21270.74493927127], [1.53939564E12, 2039.4067796610168], [1.5393963E12, 156107.0], [1.53939624E12, 83874.39999999998], [1.53939594E12, 11118.620795107034], [1.53939606E12, 14967.251461988302], [1.539396E12, 10886.177304964545], [1.5393957E12, 5909.642857142857], [1.53939612E12, 18788.79401993356], [1.53939582E12, 22163.476190476194], [1.53939576E12, 11059.628571428573]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5393963E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.53939558E12, "maxY": 3.6666666666666665, "series": [{"data": [[1.53939588E12, 0.632530120481928], [1.53939558E12, 0.0], [1.53939618E12, 0.8464419475655428], [1.53939564E12, 0.43636363636363634], [1.5393963E12, 0.2], [1.53939624E12, 0.5], [1.53939594E12, 0.49687500000000023], [1.53939606E12, 0.42857142857142855], [1.539396E12, 0.5783582089552245], [1.5393957E12, 0.903846153846154], [1.53939612E12, 0.45051194539249123], [1.53939582E12, 0.8888888888888888], [1.53939576E12, 0.6944444444444444]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939588E12, 0.5128205128205128], [1.53939558E12, 0.253968253968254], [1.53939618E12, 0.5861513687600646], [1.53939564E12, 0.6755162241887909], [1.5393963E12, 0.6666666666666666], [1.53939624E12, 2.1100000000000008], [1.53939594E12, 0.5024711696869849], [1.53939606E12, 0.398544866612773], [1.539396E12, 0.43733794295591977], [1.5393957E12, 0.5727762803234511], [1.53939612E12, 0.43604183427192267], [1.53939582E12, 0.5270092226613964], [1.53939576E12, 0.5065693430656939]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939588E12, 0.5776699029126217], [1.53939558E12, 3.6666666666666665], [1.53939618E12, 1.2348178137651822], [1.53939564E12, 1.3389830508474583], [1.5393963E12, 0.2], [1.53939624E12, 3.32], [1.53939594E12, 0.46483180428134563], [1.53939606E12, 0.48245614035087725], [1.539396E12, 0.5815602836879434], [1.5393957E12, 1.0714285714285714], [1.53939612E12, 0.544850498338871], [1.53939582E12, 0.9523809523809522], [1.53939576E12, 1.6857142857142862]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5393963E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 24.0, "minX": 1.53939558E12, "maxY": 110908.0, "series": [{"data": [[1.53939588E12, 39877.0], [1.53939558E12, 5702.0], [1.53939606E12, 23687.0], [1.539396E12, 38099.0], [1.5393957E12, 10755.0], [1.53939618E12, 48427.0], [1.53939564E12, 8274.0], [1.53939612E12, 18695.0], [1.53939582E12, 53838.0], [1.53939576E12, 28906.0], [1.53939624E12, 110908.0], [1.53939594E12, 42574.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.53939588E12, 9689.0], [1.53939558E12, 24.0], [1.53939606E12, 9096.0], [1.539396E12, 8988.0], [1.5393957E12, 3806.0], [1.53939618E12, 9863.0], [1.53939564E12, 27.0], [1.53939612E12, 8796.0], [1.53939582E12, 9399.0], [1.53939576E12, 7827.0], [1.53939624E12, 15113.0], [1.53939594E12, 8679.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.53939588E12, 11884.5], [1.53939558E12, 1329.7], [1.53939606E12, 11997.600000000002], [1.539396E12, 12012.0], [1.5393957E12, 7906.6], [1.53939618E12, 12164.7], [1.53939564E12, 4580.5], [1.53939612E12, 12086.1], [1.53939582E12, 11707.4], [1.53939576E12, 11778.2], [1.53939624E12, 12228.0], [1.53939594E12, 11774.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.53939588E12, 15241.049999999996], [1.53939558E12, 5702.0], [1.53939606E12, 15308.119999999999], [1.539396E12, 15265.250000000007], [1.5393957E12, 9017.38], [1.53939618E12, 15687.249999999996], [1.53939564E12, 6782.75], [1.53939612E12, 15352.31], [1.53939582E12, 14151.20000000002], [1.53939576E12, 12913.68], [1.53939624E12, 24716.84], [1.53939594E12, 15101.69]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.53939588E12, 12492.0], [1.53939558E12, 1395.8000000000002], [1.53939606E12, 12458.0], [1.539396E12, 12476.0], [1.5393957E12, 8314.3], [1.53939618E12, 12517.849999999999], [1.53939564E12, 4736.0], [1.53939612E12, 12455.55], [1.53939582E12, 12125.8], [1.53939576E12, 12204.0], [1.53939624E12, 12708.199999999997], [1.53939594E12, 12425.749999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939624E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155391.0, "series": [{"data": [[1.0, 1218.0], [2.0, 59433.0], [21.0, 11110.0], [12.0, 11485.5], [13.0, 8836.5], [14.0, 7068.0], [28.0, 10782.5], [29.0, 11227.0], [30.0, 10537.0], [31.0, 10541.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 12.5], [2.0, 96909.0], [0.0, 155391.0], [21.0, 13308.0], [12.0, 4988.5], [13.0, 11519.0], [14.0, 1.0], [28.0, 13311.0], [29.0, 13310.0], [30.0, 13056.0], [31.0, 10755.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 155391.0, "series": [{"data": [[1.0, 1218.0], [2.0, 59433.0], [21.0, 11110.0], [12.0, 11485.5], [13.0, 8836.5], [14.0, 7068.0], [28.0, 10782.0], [29.0, 11227.0], [30.0, 10537.0], [31.0, 10539.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 12.5], [2.0, 96909.0], [0.0, 155391.0], [21.0, 13308.0], [12.0, 4988.5], [13.0, 11519.0], [14.0, 1.0], [28.0, 13311.0], [29.0, 13310.0], [30.0, 13056.0], [31.0, 10755.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.7833333333333334, "minX": 1.53939558E12, "maxY": 32.916666666666664, "series": [{"data": [[1.53939588E12, 22.116666666666667], [1.53939558E12, 1.7833333333333334], [1.53939606E12, 32.916666666666664], [1.539396E12, 29.45], [1.5393957E12, 15.166666666666666], [1.53939618E12, 23.7], [1.53939564E12, 14.2], [1.53939612E12, 30.7], [1.53939582E12, 14.8], [1.53939576E12, 13.6], [1.53939594E12, 32.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939618E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939558E12, "maxY": 18.4, "series": [{"data": [[1.53939588E12, 12.216666666666667], [1.53939558E12, 1.2833333333333334], [1.53939606E12, 12.75], [1.539396E12, 12.3], [1.5393957E12, 13.2], [1.53939618E12, 12.983333333333333], [1.53939564E12, 12.166666666666666], [1.53939612E12, 12.4], [1.53939582E12, 12.716666666666667], [1.53939576E12, 11.983333333333333], [1.53939624E12, 1.5166666666666666], [1.53939594E12, 13.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.53939588E12, 0.26666666666666666], [1.53939558E12, 0.21666666666666667], [1.53939606E12, 0.6], [1.539396E12, 0.4], [1.5393957E12, 0.85], [1.53939618E12, 0.25], [1.53939564E12, 0.9], [1.53939612E12, 0.48333333333333334], [1.53939582E12, 0.35], [1.53939576E12, 0.5833333333333334], [1.53939594E12, 0.8]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.53939588E12, 8.416666666666666], [1.53939558E12, 0.016666666666666666], [1.53939618E12, 15.533333333333333], [1.53939564E12, 0.11666666666666667], [1.5393963E12, 0.21666666666666667], [1.53939624E12, 0.7666666666666667], [1.53939594E12, 16.916666666666668], [1.53939606E12, 18.4], [1.539396E12, 15.566666666666666], [1.5393957E12, 0.1], [1.53939612E12, 17.533333333333335], [1.53939582E12, 0.6666666666666666], [1.53939576E12, 0.016666666666666666]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.53939588E12, 0.25], [1.53939558E12, 0.016666666666666666], [1.53939606E12, 0.16666666666666666], [1.539396E12, 0.18333333333333332], [1.5393957E12, 0.016666666666666666], [1.53939618E12, 0.5], [1.53939564E12, 0.016666666666666666], [1.53939612E12, 0.2], [1.53939582E12, 0.06666666666666667], [1.53939576E12, 0.016666666666666666], [1.53939624E12, 0.26666666666666666], [1.53939594E12, 0.3]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5393963E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.53939558E12, "maxY": 12.416666666666666, "series": [{"data": [[1.53939588E12, 0.4666666666666667], [1.53939558E12, 0.23333333333333334], [1.53939606E12, 0.6166666666666667], [1.539396E12, 0.4666666666666667], [1.5393957E12, 0.9333333333333333], [1.53939618E12, 0.6166666666666667], [1.53939564E12, 0.95], [1.53939612E12, 0.43333333333333335], [1.53939582E12, 0.3], [1.53939576E12, 0.5666666666666667], [1.53939624E12, 0.3], [1.53939594E12, 0.75]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.53939588E12, 0.26666666666666666], [1.53939558E12, 0.21666666666666667], [1.53939606E12, 0.6], [1.539396E12, 0.4], [1.5393957E12, 0.85], [1.53939618E12, 0.25], [1.53939564E12, 0.9], [1.53939612E12, 0.48333333333333334], [1.53939582E12, 0.35], [1.53939576E12, 0.5833333333333334], [1.53939594E12, 0.8]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.53939588E12, 2.966666666666667], [1.53939558E12, 0.016666666666666666], [1.53939606E12, 5.083333333333333], [1.539396E12, 4.233333333333333], [1.53939618E12, 3.5], [1.53939564E12, 0.03333333333333333], [1.53939612E12, 4.583333333333333], [1.53939582E12, 0.4], [1.5393963E12, 0.08333333333333333], [1.53939576E12, 0.016666666666666666], [1.53939624E12, 0.11666666666666667], [1.53939594E12, 4.7]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.53939588E12, 3.2], [1.53939606E12, 8.483333333333333], [1.539396E12, 7.45], [1.5393957E12, 0.1], [1.53939618E12, 8.333333333333334], [1.53939564E12, 0.08333333333333333], [1.53939612E12, 8.75], [1.53939582E12, 0.23333333333333334], [1.5393963E12, 0.05], [1.53939624E12, 0.45], [1.53939594E12, 7.983333333333333]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.53939588E12, 2.5], [1.53939558E12, 0.016666666666666666], [1.53939618E12, 4.2], [1.53939564E12, 0.016666666666666666], [1.5393963E12, 0.08333333333333333], [1.53939624E12, 0.4666666666666667], [1.53939594E12, 4.533333333333333], [1.53939606E12, 5.0], [1.539396E12, 4.066666666666666], [1.5393957E12, 0.016666666666666666], [1.53939612E12, 4.4], [1.53939582E12, 0.1], [1.53939576E12, 0.016666666666666666]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.53939588E12, 11.75], [1.53939558E12, 1.05], [1.53939606E12, 12.133333333333333], [1.539396E12, 11.833333333333334], [1.5393957E12, 12.266666666666667], [1.53939618E12, 12.366666666666667], [1.53939564E12, 11.216666666666667], [1.53939612E12, 11.966666666666667], [1.53939582E12, 12.416666666666666], [1.53939576E12, 11.416666666666666], [1.53939624E12, 1.2166666666666666], [1.53939594E12, 12.25]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5393963E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
