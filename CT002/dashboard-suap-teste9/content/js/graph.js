/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -10800000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -10800000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 211716.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 5.0], [8.5, 29.0], [8.6, 581.0], [8.7, 586.0], [8.8, 590.0], [8.9, 609.0], [9.0, 664.0], [9.1, 732.0], [9.2, 861.0], [9.3, 1003.0], [9.4, 1360.0], [9.5, 1370.0], [9.6, 1472.0], [9.7, 1663.0], [9.8, 1774.0], [9.9, 1967.0], [10.0, 2006.0], [10.1, 2130.0], [10.2, 2215.0], [10.3, 2307.0], [10.4, 2430.0], [10.5, 2545.0], [10.6, 2666.0], [10.7, 2793.0], [10.8, 2904.0], [10.9, 3038.0], [11.0, 3329.0], [11.1, 3519.0], [11.2, 3565.0], [11.3, 3936.0], [11.4, 4126.0], [11.5, 4224.0], [11.6, 4358.0], [11.7, 4514.0], [11.8, 4773.0], [11.9, 4896.0], [12.0, 4938.0], [12.1, 5056.0], [12.2, 5159.0], [12.3, 5174.0], [12.4, 5308.0], [12.5, 5382.0], [12.6, 5494.0], [12.7, 5565.0], [12.8, 5694.0], [12.9, 5730.0], [13.0, 5733.0], [13.1, 5855.0], [13.2, 5888.0], [13.3, 5932.0], [13.4, 6114.0], [13.5, 6414.0], [13.6, 6528.0], [13.7, 6969.0], [13.8, 7140.0], [13.9, 7166.0], [14.0, 7166.0], [14.1, 7167.0], [14.2, 7167.0], [14.3, 7167.0], [14.4, 7167.0], [14.5, 7167.0], [14.6, 7167.0], [14.7, 7167.0], [14.8, 7167.0], [14.9, 7167.0], [15.0, 7167.0], [15.1, 7167.0], [15.2, 7167.0], [15.3, 7167.0], [15.4, 7167.0], [15.5, 7168.0], [15.6, 7168.0], [15.7, 7168.0], [15.8, 7168.0], [15.9, 7168.0], [16.0, 7168.0], [16.1, 7168.0], [16.2, 7168.0], [16.3, 7168.0], [16.4, 7169.0], [16.5, 7169.0], [16.6, 7420.0], [16.7, 7422.0], [16.8, 7422.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7423.0], [17.3, 7423.0], [17.4, 7423.0], [17.5, 7423.0], [17.6, 7423.0], [17.7, 7423.0], [17.8, 7423.0], [17.9, 7423.0], [18.0, 7424.0], [18.1, 7424.0], [18.2, 7424.0], [18.3, 7424.0], [18.4, 7424.0], [18.5, 7424.0], [18.6, 7424.0], [18.7, 7424.0], [18.8, 7424.0], [18.9, 7424.0], [19.0, 7424.0], [19.1, 7425.0], [19.2, 7634.0], [19.3, 7678.0], [19.4, 7678.0], [19.5, 7678.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7679.0], [20.0, 7679.0], [20.1, 7679.0], [20.2, 7679.0], [20.3, 7679.0], [20.4, 7679.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7680.0], [20.8, 7680.0], [20.9, 7680.0], [21.0, 7680.0], [21.1, 7680.0], [21.2, 7680.0], [21.3, 7680.0], [21.4, 7681.0], [21.5, 7683.0], [21.6, 7770.0], [21.7, 7842.0], [21.8, 7932.0], [21.9, 7932.0], [22.0, 7933.0], [22.1, 7934.0], [22.2, 7934.0], [22.3, 7935.0], [22.4, 7935.0], [22.5, 7935.0], [22.6, 7935.0], [22.7, 7935.0], [22.8, 7935.0], [22.9, 7936.0], [23.0, 7936.0], [23.1, 7936.0], [23.2, 7936.0], [23.3, 7936.0], [23.4, 7937.0], [23.5, 7939.0], [23.6, 7940.0], [23.7, 8004.0], [23.8, 8064.0], [23.9, 8100.0], [24.0, 8187.0], [24.1, 8187.0], [24.2, 8187.0], [24.3, 8188.0], [24.4, 8190.0], [24.5, 8190.0], [24.6, 8191.0], [24.7, 8191.0], [24.8, 8191.0], [24.9, 8191.0], [25.0, 8191.0], [25.1, 8191.0], [25.2, 8191.0], [25.3, 8191.0], [25.4, 8191.0], [25.5, 8191.0], [25.6, 8191.0], [25.7, 8192.0], [25.8, 8192.0], [25.9, 8192.0], [26.0, 8192.0], [26.1, 8192.0], [26.2, 8192.0], [26.3, 8193.0], [26.4, 8254.0], [26.5, 8436.0], [26.6, 8444.0], [26.7, 8445.0], [26.8, 8445.0], [26.9, 8446.0], [27.0, 8446.0], [27.1, 8446.0], [27.2, 8447.0], [27.3, 8447.0], [27.4, 8447.0], [27.5, 8447.0], [27.6, 8447.0], [27.7, 8447.0], [27.8, 8447.0], [27.9, 8448.0], [28.0, 8448.0], [28.1, 8448.0], [28.2, 8449.0], [28.3, 8449.0], [28.4, 8462.0], [28.5, 8634.0], [28.6, 8700.0], [28.7, 8700.0], [28.8, 8701.0], [28.9, 8702.0], [29.0, 8702.0], [29.1, 8702.0], [29.2, 8702.0], [29.3, 8703.0], [29.4, 8703.0], [29.5, 8703.0], [29.6, 8703.0], [29.7, 8703.0], [29.8, 8703.0], [29.9, 8703.0], [30.0, 8703.0], [30.1, 8703.0], [30.2, 8703.0], [30.3, 8703.0], [30.4, 8703.0], [30.5, 8703.0], [30.6, 8703.0], [30.7, 8703.0], [30.8, 8704.0], [30.9, 8704.0], [31.0, 8704.0], [31.1, 8704.0], [31.2, 8704.0], [31.3, 8704.0], [31.4, 8704.0], [31.5, 8704.0], [31.6, 8705.0], [31.7, 8705.0], [31.8, 8705.0], [31.9, 8705.0], [32.0, 8707.0], [32.1, 8708.0], [32.2, 8733.0], [32.3, 8860.0], [32.4, 8913.0], [32.5, 8958.0], [32.6, 8958.0], [32.7, 8959.0], [32.8, 8959.0], [32.9, 8959.0], [33.0, 8960.0], [33.1, 8960.0], [33.2, 8960.0], [33.3, 8985.0], [33.4, 9056.0], [33.5, 9128.0], [33.6, 9147.0], [33.7, 9207.0], [33.8, 9212.0], [33.9, 9214.0], [34.0, 9215.0], [34.1, 9215.0], [34.2, 9215.0], [34.3, 9215.0], [34.4, 9215.0], [34.5, 9215.0], [34.6, 9215.0], [34.7, 9215.0], [34.8, 9215.0], [34.9, 9215.0], [35.0, 9216.0], [35.1, 9216.0], [35.2, 9216.0], [35.3, 9216.0], [35.4, 9216.0], [35.5, 9216.0], [35.6, 9216.0], [35.7, 9216.0], [35.8, 9216.0], [35.9, 9216.0], [36.0, 9216.0], [36.1, 9219.0], [36.2, 9271.0], [36.3, 9297.0], [36.4, 9389.0], [36.5, 9436.0], [36.6, 9445.0], [36.7, 9445.0], [36.8, 9464.0], [36.9, 9466.0], [37.0, 9472.0], [37.1, 9485.0], [37.2, 9521.0], [37.3, 9555.0], [37.4, 9579.0], [37.5, 9590.0], [37.6, 9609.0], [37.7, 9644.0], [37.8, 9649.0], [37.9, 9675.0], [38.0, 9704.0], [38.1, 9712.0], [38.2, 9721.0], [38.3, 9724.0], [38.4, 9726.0], [38.5, 9726.0], [38.6, 9727.0], [38.7, 9727.0], [38.8, 9727.0], [38.9, 9727.0], [39.0, 9727.0], [39.1, 9727.0], [39.2, 9727.0], [39.3, 9727.0], [39.4, 9727.0], [39.5, 9727.0], [39.6, 9728.0], [39.7, 9728.0], [39.8, 9728.0], [39.9, 9728.0], [40.0, 9728.0], [40.1, 9728.0], [40.2, 9728.0], [40.3, 9728.0], [40.4, 9729.0], [40.5, 9730.0], [40.6, 9732.0], [40.7, 9744.0], [40.8, 9749.0], [40.9, 9803.0], [41.0, 9807.0], [41.1, 9848.0], [41.2, 9854.0], [41.3, 9866.0], [41.4, 9902.0], [41.5, 9933.0], [41.6, 9942.0], [41.7, 9970.0], [41.8, 9982.0], [41.9, 9982.0], [42.0, 9982.0], [42.1, 9983.0], [42.2, 9983.0], [42.3, 9984.0], [42.4, 9984.0], [42.5, 9985.0], [42.6, 10028.0], [42.7, 10063.0], [42.8, 10077.0], [42.9, 10122.0], [43.0, 10161.0], [43.1, 10169.0], [43.2, 10190.0], [43.3, 10196.0], [43.4, 10208.0], [43.5, 10227.0], [43.6, 10232.0], [43.7, 10238.0], [43.8, 10239.0], [43.9, 10239.0], [44.0, 10239.0], [44.1, 10239.0], [44.2, 10239.0], [44.3, 10239.0], [44.4, 10240.0], [44.5, 10240.0], [44.6, 10240.0], [44.7, 10240.0], [44.8, 10240.0], [44.9, 10240.0], [45.0, 10243.0], [45.1, 10266.0], [45.2, 10280.0], [45.3, 10319.0], [45.4, 10374.0], [45.5, 10388.0], [45.6, 10398.0], [45.7, 10432.0], [45.8, 10454.0], [45.9, 10456.0], [46.0, 10470.0], [46.1, 10474.0], [46.2, 10484.0], [46.3, 10494.0], [46.4, 10494.0], [46.5, 10495.0], [46.6, 10495.0], [46.7, 10495.0], [46.8, 10496.0], [46.9, 10515.0], [47.0, 10516.0], [47.1, 10544.0], [47.2, 10557.0], [47.3, 10568.0], [47.4, 10581.0], [47.5, 10586.0], [47.6, 10592.0], [47.7, 10600.0], [47.8, 10607.0], [47.9, 10613.0], [48.0, 10618.0], [48.1, 10619.0], [48.2, 10644.0], [48.3, 10681.0], [48.4, 10706.0], [48.5, 10719.0], [48.6, 10722.0], [48.7, 10750.0], [48.8, 10751.0], [48.9, 10751.0], [49.0, 10751.0], [49.1, 10751.0], [49.2, 10752.0], [49.3, 10752.0], [49.4, 10756.0], [49.5, 10844.0], [49.6, 10871.0], [49.7, 10878.0], [49.8, 10896.0], [49.9, 10918.0], [50.0, 10945.0], [50.1, 10962.0], [50.2, 10980.0], [50.3, 10999.0], [50.4, 10999.0], [50.5, 11007.0], [50.6, 11007.0], [50.7, 11007.0], [50.8, 11008.0], [50.9, 11008.0], [51.0, 11008.0], [51.1, 11011.0], [51.2, 11013.0], [51.3, 11022.0], [51.4, 11031.0], [51.5, 11068.0], [51.6, 11107.0], [51.7, 11124.0], [51.8, 11131.0], [51.9, 11142.0], [52.0, 11146.0], [52.1, 11157.0], [52.2, 11191.0], [52.3, 11208.0], [52.4, 11212.0], [52.5, 11242.0], [52.6, 11262.0], [52.7, 11262.0], [52.8, 11263.0], [52.9, 11263.0], [53.0, 11263.0], [53.1, 11264.0], [53.2, 11264.0], [53.3, 11264.0], [53.4, 11264.0], [53.5, 11265.0], [53.6, 11303.0], [53.7, 11317.0], [53.8, 11324.0], [53.9, 11337.0], [54.0, 11378.0], [54.1, 11405.0], [54.2, 11406.0], [54.3, 11429.0], [54.4, 11485.0], [54.5, 11507.0], [54.6, 11517.0], [54.7, 11518.0], [54.8, 11519.0], [54.9, 11519.0], [55.0, 11519.0], [55.1, 11520.0], [55.2, 11520.0], [55.3, 11520.0], [55.4, 11545.0], [55.5, 11564.0], [55.6, 11582.0], [55.7, 11598.0], [55.8, 11610.0], [55.9, 11620.0], [56.0, 11637.0], [56.1, 11678.0], [56.2, 11701.0], [56.3, 11738.0], [56.4, 11763.0], [56.5, 11774.0], [56.6, 11774.0], [56.7, 11775.0], [56.8, 11775.0], [56.9, 11775.0], [57.0, 11775.0], [57.1, 11775.0], [57.2, 11775.0], [57.3, 11775.0], [57.4, 11776.0], [57.5, 11776.0], [57.6, 11776.0], [57.7, 11777.0], [57.8, 11782.0], [57.9, 11801.0], [58.0, 11840.0], [58.1, 11843.0], [58.2, 11967.0], [58.3, 11978.0], [58.4, 12031.0], [58.5, 12031.0], [58.6, 12209.0], [58.7, 12287.0], [58.8, 12287.0], [58.9, 12292.0], [59.0, 12315.0], [59.1, 12394.0], [59.2, 12433.0], [59.3, 12543.0], [59.4, 12543.0], [59.5, 12616.0], [59.6, 12664.0], [59.7, 12797.0], [59.8, 12798.0], [59.9, 12798.0], [60.0, 12799.0], [60.1, 12799.0], [60.2, 12799.0], [60.3, 12799.0], [60.4, 12799.0], [60.5, 12799.0], [60.6, 12799.0], [60.7, 12799.0], [60.8, 12800.0], [60.9, 12800.0], [61.0, 12800.0], [61.1, 12800.0], [61.2, 12803.0], [61.3, 12803.0], [61.4, 13034.0], [61.5, 13055.0], [61.6, 13094.0], [61.7, 13282.0], [61.8, 13305.0], [61.9, 13305.0], [62.0, 13307.0], [62.1, 13307.0], [62.2, 13308.0], [62.3, 13308.0], [62.4, 13308.0], [62.5, 13309.0], [62.6, 13310.0], [62.7, 13310.0], [62.8, 13310.0], [62.9, 13310.0], [63.0, 13310.0], [63.1, 13310.0], [63.2, 13310.0], [63.3, 13310.0], [63.4, 13310.0], [63.5, 13310.0], [63.6, 13310.0], [63.7, 13310.0], [63.8, 13310.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13311.0], [64.8, 13311.0], [64.9, 13311.0], [65.0, 13311.0], [65.1, 13311.0], [65.2, 13311.0], [65.3, 13311.0], [65.4, 13311.0], [65.5, 13311.0], [65.6, 13311.0], [65.7, 13311.0], [65.8, 13311.0], [65.9, 13311.0], [66.0, 13311.0], [66.1, 13311.0], [66.2, 13311.0], [66.3, 13311.0], [66.4, 13311.0], [66.5, 13311.0], [66.6, 13311.0], [66.7, 13311.0], [66.8, 13311.0], [66.9, 13311.0], [67.0, 13311.0], [67.1, 13311.0], [67.2, 13311.0], [67.3, 13311.0], [67.4, 13311.0], [67.5, 13311.0], [67.6, 13311.0], [67.7, 13311.0], [67.8, 13311.0], [67.9, 13311.0], [68.0, 13311.0], [68.1, 13311.0], [68.2, 13311.0], [68.3, 13311.0], [68.4, 13311.0], [68.5, 13311.0], [68.6, 13311.0], [68.7, 13311.0], [68.8, 13311.0], [68.9, 13311.0], [69.0, 13311.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13311.0], [69.4, 13311.0], [69.5, 13311.0], [69.6, 13311.0], [69.7, 13311.0], [69.8, 13311.0], [69.9, 13311.0], [70.0, 13311.0], [70.1, 13311.0], [70.2, 13311.0], [70.3, 13311.0], [70.4, 13311.0], [70.5, 13311.0], [70.6, 13311.0], [70.7, 13311.0], [70.8, 13311.0], [70.9, 13311.0], [71.0, 13311.0], [71.1, 13311.0], [71.2, 13311.0], [71.3, 13311.0], [71.4, 13311.0], [71.5, 13311.0], [71.6, 13311.0], [71.7, 13311.0], [71.8, 13311.0], [71.9, 13311.0], [72.0, 13311.0], [72.1, 13311.0], [72.2, 13311.0], [72.3, 13311.0], [72.4, 13311.0], [72.5, 13311.0], [72.6, 13311.0], [72.7, 13311.0], [72.8, 13311.0], [72.9, 13311.0], [73.0, 13311.0], [73.1, 13311.0], [73.2, 13311.0], [73.3, 13312.0], [73.4, 13312.0], [73.5, 13312.0], [73.6, 13312.0], [73.7, 13312.0], [73.8, 13312.0], [73.9, 13312.0], [74.0, 13312.0], [74.1, 13312.0], [74.2, 13312.0], [74.3, 13312.0], [74.4, 13312.0], [74.5, 13312.0], [74.6, 13312.0], [74.7, 13312.0], [74.8, 13312.0], [74.9, 13312.0], [75.0, 13312.0], [75.1, 13312.0], [75.2, 13312.0], [75.3, 13312.0], [75.4, 13312.0], [75.5, 13312.0], [75.6, 13312.0], [75.7, 13312.0], [75.8, 13312.0], [75.9, 13312.0], [76.0, 13312.0], [76.1, 13312.0], [76.2, 13312.0], [76.3, 13312.0], [76.4, 13312.0], [76.5, 13312.0], [76.6, 13312.0], [76.7, 13312.0], [76.8, 13312.0], [76.9, 13312.0], [77.0, 13312.0], [77.1, 13312.0], [77.2, 13312.0], [77.3, 13312.0], [77.4, 13312.0], [77.5, 13312.0], [77.6, 13312.0], [77.7, 13312.0], [77.8, 13312.0], [77.9, 13312.0], [78.0, 13312.0], [78.1, 13312.0], [78.2, 13312.0], [78.3, 13312.0], [78.4, 13312.0], [78.5, 13312.0], [78.6, 13312.0], [78.7, 13312.0], [78.8, 13313.0], [78.9, 13313.0], [79.0, 13313.0], [79.1, 13313.0], [79.2, 13313.0], [79.3, 13315.0], [79.4, 13315.0], [79.5, 13315.0], [79.6, 13315.0], [79.7, 13315.0], [79.8, 13315.0], [79.9, 13315.0], [80.0, 13315.0], [80.1, 13316.0], [80.2, 13316.0], [80.3, 13316.0], [80.4, 13316.0], [80.5, 13317.0], [80.6, 13318.0], [80.7, 13409.0], [80.8, 13463.0], [80.9, 13567.0], [81.0, 13567.0], [81.1, 13568.0], [81.2, 13568.0], [81.3, 13568.0], [81.4, 13738.0], [81.5, 13819.0], [81.6, 13819.0], [81.7, 13820.0], [81.8, 13820.0], [81.9, 13823.0], [82.0, 13823.0], [82.1, 13823.0], [82.2, 13823.0], [82.3, 13823.0], [82.4, 13823.0], [82.5, 13823.0], [82.6, 13823.0], [82.7, 13823.0], [82.8, 13823.0], [82.9, 13823.0], [83.0, 13823.0], [83.1, 13823.0], [83.2, 13824.0], [83.3, 13824.0], [83.4, 13824.0], [83.5, 13824.0], [83.6, 13824.0], [83.7, 13824.0], [83.8, 13824.0], [83.9, 13824.0], [84.0, 13824.0], [84.1, 13824.0], [84.2, 13824.0], [84.3, 13824.0], [84.4, 13824.0], [84.5, 13824.0], [84.6, 13824.0], [84.7, 13825.0], [84.8, 13825.0], [84.9, 13825.0], [85.0, 13827.0], [85.1, 13828.0], [85.2, 13956.0], [85.3, 14079.0], [85.4, 14240.0], [85.5, 14275.0], [85.6, 14329.0], [85.7, 14329.0], [85.8, 14331.0], [85.9, 14332.0], [86.0, 14333.0], [86.1, 14333.0], [86.2, 14334.0], [86.3, 14334.0], [86.4, 14334.0], [86.5, 14334.0], [86.6, 14334.0], [86.7, 14335.0], [86.8, 14335.0], [86.9, 14335.0], [87.0, 14335.0], [87.1, 14335.0], [87.2, 14335.0], [87.3, 14335.0], [87.4, 14335.0], [87.5, 14335.0], [87.6, 14335.0], [87.7, 14335.0], [87.8, 14335.0], [87.9, 14335.0], [88.0, 14335.0], [88.1, 14335.0], [88.2, 14335.0], [88.3, 14335.0], [88.4, 14335.0], [88.5, 14335.0], [88.6, 14335.0], [88.7, 14335.0], [88.8, 14336.0], [88.9, 14336.0], [89.0, 14336.0], [89.1, 14336.0], [89.2, 14336.0], [89.3, 14336.0], [89.4, 14336.0], [89.5, 14336.0], [89.6, 14339.0], [89.7, 14339.0], [89.8, 14339.0], [89.9, 14504.0], [90.0, 14587.0], [90.1, 14590.0], [90.2, 14591.0], [90.3, 14591.0], [90.4, 14591.0], [90.5, 14591.0], [90.6, 14592.0], [90.7, 14592.0], [90.8, 14847.0], [90.9, 14848.0], [91.0, 15102.0], [91.1, 15103.0], [91.2, 15103.0], [91.3, 15105.0], [91.4, 15359.0], [91.5, 15444.0], [91.6, 15615.0], [91.7, 15615.0], [91.8, 15617.0], [91.9, 16383.0], [92.0, 16383.0], [92.1, 16894.0], [92.2, 17151.0], [92.3, 17157.0], [92.4, 17184.0], [92.5, 17663.0], [92.6, 18280.0], [92.7, 18431.0], [92.8, 18629.0], [92.9, 18859.0], [93.0, 19374.0], [93.1, 19497.0], [93.2, 19609.0], [93.3, 19668.0], [93.4, 19857.0], [93.5, 20479.0], [93.6, 20479.0], [93.7, 20480.0], [93.8, 21732.0], [93.9, 22015.0], [94.0, 26367.0], [94.1, 26368.0], [94.2, 27385.0], [94.3, 27948.0], [94.4, 28458.0], [94.5, 29604.0], [94.6, 29690.0], [94.7, 29702.0], [94.8, 29951.0], [94.9, 30143.0], [95.0, 30278.0], [95.1, 30719.0], [95.2, 52223.0], [95.3, 52991.0], [95.4, 53272.0], [95.5, 53274.0], [95.6, 54042.0], [95.7, 54043.0], [95.8, 54044.0], [95.9, 55295.0], [96.0, 74495.0], [96.1, 92159.0], [96.2, 92159.0], [96.3, 92161.0], [96.4, 92161.0], [96.5, 97540.0], [96.6, 105470.0], [96.7, 105984.0], [96.8, 106239.0], [96.9, 106239.0], [97.0, 106752.0], [97.1, 107007.0], [97.2, 109567.0], [97.3, 109824.0], [97.4, 110080.0], [97.5, 110081.0], [97.6, 114944.0], [97.7, 114944.0], [97.8, 115204.0], [97.9, 115596.0], [98.0, 126460.0], [98.1, 126721.0], [98.2, 126721.0], [98.3, 129023.0], [98.4, 136191.0], [98.5, 136191.0], [98.6, 136192.0], [98.7, 148479.0], [98.8, 149248.0], [98.9, 153599.0], [99.0, 153600.0], [99.1, 155391.0], [99.2, 178682.0], [99.3, 178683.0], [99.4, 196093.0], [99.5, 209919.0], [99.6, 210432.0], [99.7, 210687.0], [99.8, 210688.0], [99.9, 211711.0], [100.0, 211715.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 1155.0], [3.1, 1186.0], [3.2, 1201.0], [3.3, 1208.0], [3.4, 1224.0], [3.5, 1238.0], [3.6, 1247.0], [3.7, 1282.0], [3.8, 1324.0], [3.9, 1386.0], [4.0, 1462.0], [4.1, 1534.0], [4.2, 1608.0], [4.3, 1652.0], [4.4, 1702.0], [4.5, 1737.0], [4.6, 1817.0], [4.7, 1871.0], [4.8, 1926.0], [4.9, 1997.0], [5.0, 2071.0], [5.1, 2142.0], [5.2, 2277.0], [5.3, 2348.0], [5.4, 2394.0], [5.5, 2433.0], [5.6, 2464.0], [5.7, 2498.0], [5.8, 2528.0], [5.9, 2597.0], [6.0, 2624.0], [6.1, 2665.0], [6.2, 2686.0], [6.3, 2725.0], [6.4, 2752.0], [6.5, 2798.0], [6.6, 2822.0], [6.7, 2870.0], [6.8, 2920.0], [6.9, 2949.0], [7.0, 2999.0], [7.1, 3031.0], [7.2, 3070.0], [7.3, 3117.0], [7.4, 3205.0], [7.5, 3292.0], [7.6, 3329.0], [7.7, 3372.0], [7.8, 3460.0], [7.9, 3596.0], [8.0, 3659.0], [8.1, 3754.0], [8.2, 3883.0], [8.3, 4004.0], [8.4, 4045.0], [8.5, 4096.0], [8.6, 4114.0], [8.7, 4137.0], [8.8, 4175.0], [8.9, 4212.0], [9.0, 4274.0], [9.1, 4314.0], [9.2, 4364.0], [9.3, 4417.0], [9.4, 4458.0], [9.5, 4493.0], [9.6, 4558.0], [9.7, 4607.0], [9.8, 4690.0], [9.9, 4746.0], [10.0, 4889.0], [10.1, 5106.0], [10.2, 5196.0], [10.3, 5232.0], [10.4, 5269.0], [10.5, 5298.0], [10.6, 5321.0], [10.7, 5345.0], [10.8, 5381.0], [10.9, 5418.0], [11.0, 5445.0], [11.1, 5454.0], [11.2, 5465.0], [11.3, 5487.0], [11.4, 5520.0], [11.5, 5533.0], [11.6, 5560.0], [11.7, 5618.0], [11.8, 5643.0], [11.9, 5661.0], [12.0, 5697.0], [12.1, 5720.0], [12.2, 5739.0], [12.3, 5785.0], [12.4, 5820.0], [12.5, 5859.0], [12.6, 5898.0], [12.7, 5949.0], [12.8, 6009.0], [12.9, 6049.0], [13.0, 6095.0], [13.1, 6121.0], [13.2, 6138.0], [13.3, 6178.0], [13.4, 6230.0], [13.5, 6264.0], [13.6, 6307.0], [13.7, 6385.0], [13.8, 6424.0], [13.9, 6464.0], [14.0, 6503.0], [14.1, 6537.0], [14.2, 6586.0], [14.3, 6671.0], [14.4, 6768.0], [14.5, 6821.0], [14.6, 6849.0], [14.7, 6930.0], [14.8, 6997.0], [14.9, 7050.0], [15.0, 7113.0], [15.1, 7166.0], [15.2, 7167.0], [15.3, 7168.0], [15.4, 7168.0], [15.5, 7168.0], [15.6, 7169.0], [15.7, 7172.0], [15.8, 7236.0], [15.9, 7345.0], [16.0, 7422.0], [16.1, 7423.0], [16.2, 7423.0], [16.3, 7424.0], [16.4, 7424.0], [16.5, 7424.0], [16.6, 7426.0], [16.7, 7550.0], [16.8, 7677.0], [16.9, 7679.0], [17.0, 7679.0], [17.1, 7680.0], [17.2, 7680.0], [17.3, 7701.0], [17.4, 7769.0], [17.5, 7931.0], [17.6, 7935.0], [17.7, 7935.0], [17.8, 7935.0], [17.9, 7936.0], [18.0, 7936.0], [18.1, 7939.0], [18.2, 7977.0], [18.3, 8029.0], [18.4, 8138.0], [18.5, 8185.0], [18.6, 8190.0], [18.7, 8191.0], [18.8, 8191.0], [18.9, 8192.0], [19.0, 8192.0], [19.1, 8192.0], [19.2, 8196.0], [19.3, 8237.0], [19.4, 8274.0], [19.5, 8294.0], [19.6, 8321.0], [19.7, 8347.0], [19.8, 8390.0], [19.9, 8419.0], [20.0, 8443.0], [20.1, 8447.0], [20.2, 8448.0], [20.3, 8449.0], [20.4, 8461.0], [20.5, 8505.0], [20.6, 8562.0], [20.7, 8577.0], [20.8, 8614.0], [20.9, 8642.0], [21.0, 8668.0], [21.1, 8698.0], [21.2, 8702.0], [21.3, 8703.0], [21.4, 8703.0], [21.5, 8703.0], [21.6, 8704.0], [21.7, 8704.0], [21.8, 8704.0], [21.9, 8705.0], [22.0, 8705.0], [22.1, 8707.0], [22.2, 8715.0], [22.3, 8739.0], [22.4, 8757.0], [22.5, 8801.0], [22.6, 8851.0], [22.7, 8870.0], [22.8, 8954.0], [22.9, 8959.0], [23.0, 8960.0], [23.1, 8964.0], [23.2, 9124.0], [23.3, 9185.0], [23.4, 9214.0], [23.5, 9215.0], [23.6, 9216.0], [23.7, 9216.0], [23.8, 9216.0], [23.9, 9217.0], [24.0, 9220.0], [24.1, 9251.0], [24.2, 9344.0], [24.3, 9470.0], [24.4, 9474.0], [24.5, 9605.0], [24.6, 9713.0], [24.7, 9727.0], [24.8, 9727.0], [24.9, 9728.0], [25.0, 9728.0], [25.1, 9728.0], [25.2, 9728.0], [25.3, 9732.0], [25.4, 9773.0], [25.5, 9785.0], [25.6, 9801.0], [25.7, 9819.0], [25.8, 9835.0], [25.9, 9844.0], [26.0, 9851.0], [26.1, 9865.0], [26.2, 9879.0], [26.3, 9892.0], [26.4, 9904.0], [26.5, 9916.0], [26.6, 9926.0], [26.7, 9935.0], [26.8, 9939.0], [26.9, 9951.0], [27.0, 9955.0], [27.1, 9960.0], [27.2, 9965.0], [27.3, 9971.0], [27.4, 9975.0], [27.5, 9982.0], [27.6, 9984.0], [27.7, 9990.0], [27.8, 9995.0], [27.9, 10004.0], [28.0, 10009.0], [28.1, 10015.0], [28.2, 10018.0], [28.3, 10024.0], [28.4, 10027.0], [28.5, 10035.0], [28.6, 10039.0], [28.7, 10043.0], [28.8, 10045.0], [28.9, 10051.0], [29.0, 10053.0], [29.1, 10055.0], [29.2, 10058.0], [29.3, 10060.0], [29.4, 10062.0], [29.5, 10068.0], [29.6, 10071.0], [29.7, 10073.0], [29.8, 10077.0], [29.9, 10083.0], [30.0, 10087.0], [30.1, 10090.0], [30.2, 10093.0], [30.3, 10098.0], [30.4, 10102.0], [30.5, 10106.0], [30.6, 10109.0], [30.7, 10113.0], [30.8, 10116.0], [30.9, 10121.0], [31.0, 10124.0], [31.1, 10130.0], [31.2, 10132.0], [31.3, 10139.0], [31.4, 10142.0], [31.5, 10145.0], [31.6, 10149.0], [31.7, 10152.0], [31.8, 10155.0], [31.9, 10160.0], [32.0, 10164.0], [32.1, 10166.0], [32.2, 10170.0], [32.3, 10174.0], [32.4, 10179.0], [32.5, 10182.0], [32.6, 10187.0], [32.7, 10194.0], [32.8, 10196.0], [32.9, 10202.0], [33.0, 10206.0], [33.1, 10210.0], [33.2, 10214.0], [33.3, 10222.0], [33.4, 10228.0], [33.5, 10232.0], [33.6, 10235.0], [33.7, 10238.0], [33.8, 10240.0], [33.9, 10240.0], [34.0, 10241.0], [34.1, 10243.0], [34.2, 10248.0], [34.3, 10253.0], [34.4, 10258.0], [34.5, 10260.0], [34.6, 10263.0], [34.7, 10268.0], [34.8, 10273.0], [34.9, 10279.0], [35.0, 10284.0], [35.1, 10287.0], [35.2, 10290.0], [35.3, 10295.0], [35.4, 10300.0], [35.5, 10303.0], [35.6, 10306.0], [35.7, 10310.0], [35.8, 10314.0], [35.9, 10318.0], [36.0, 10322.0], [36.1, 10327.0], [36.2, 10332.0], [36.3, 10335.0], [36.4, 10339.0], [36.5, 10341.0], [36.6, 10345.0], [36.7, 10349.0], [36.8, 10352.0], [36.9, 10354.0], [37.0, 10357.0], [37.1, 10360.0], [37.2, 10361.0], [37.3, 10364.0], [37.4, 10368.0], [37.5, 10371.0], [37.6, 10374.0], [37.7, 10377.0], [37.8, 10381.0], [37.9, 10382.0], [38.0, 10387.0], [38.1, 10392.0], [38.2, 10395.0], [38.3, 10399.0], [38.4, 10402.0], [38.5, 10406.0], [38.6, 10409.0], [38.7, 10412.0], [38.8, 10414.0], [38.9, 10418.0], [39.0, 10423.0], [39.1, 10426.0], [39.2, 10431.0], [39.3, 10435.0], [39.4, 10437.0], [39.5, 10439.0], [39.6, 10442.0], [39.7, 10444.0], [39.8, 10447.0], [39.9, 10449.0], [40.0, 10452.0], [40.1, 10456.0], [40.2, 10460.0], [40.3, 10463.0], [40.4, 10466.0], [40.5, 10469.0], [40.6, 10472.0], [40.7, 10476.0], [40.8, 10479.0], [40.9, 10483.0], [41.0, 10485.0], [41.1, 10491.0], [41.2, 10494.0], [41.3, 10495.0], [41.4, 10496.0], [41.5, 10496.0], [41.6, 10499.0], [41.7, 10502.0], [41.8, 10507.0], [41.9, 10512.0], [42.0, 10514.0], [42.1, 10516.0], [42.2, 10518.0], [42.3, 10521.0], [42.4, 10524.0], [42.5, 10531.0], [42.6, 10534.0], [42.7, 10539.0], [42.8, 10541.0], [42.9, 10544.0], [43.0, 10547.0], [43.1, 10555.0], [43.2, 10559.0], [43.3, 10562.0], [43.4, 10569.0], [43.5, 10573.0], [43.6, 10577.0], [43.7, 10582.0], [43.8, 10584.0], [43.9, 10589.0], [44.0, 10592.0], [44.1, 10594.0], [44.2, 10596.0], [44.3, 10599.0], [44.4, 10602.0], [44.5, 10605.0], [44.6, 10607.0], [44.7, 10610.0], [44.8, 10613.0], [44.9, 10619.0], [45.0, 10622.0], [45.1, 10624.0], [45.2, 10627.0], [45.3, 10632.0], [45.4, 10636.0], [45.5, 10640.0], [45.6, 10646.0], [45.7, 10650.0], [45.8, 10653.0], [45.9, 10659.0], [46.0, 10664.0], [46.1, 10667.0], [46.2, 10669.0], [46.3, 10674.0], [46.4, 10677.0], [46.5, 10680.0], [46.6, 10684.0], [46.7, 10690.0], [46.8, 10696.0], [46.9, 10700.0], [47.0, 10707.0], [47.1, 10712.0], [47.2, 10717.0], [47.3, 10723.0], [47.4, 10725.0], [47.5, 10727.0], [47.6, 10733.0], [47.7, 10738.0], [47.8, 10742.0], [47.9, 10746.0], [48.0, 10750.0], [48.1, 10752.0], [48.2, 10752.0], [48.3, 10754.0], [48.4, 10758.0], [48.5, 10761.0], [48.6, 10764.0], [48.7, 10768.0], [48.8, 10773.0], [48.9, 10779.0], [49.0, 10782.0], [49.1, 10788.0], [49.2, 10792.0], [49.3, 10797.0], [49.4, 10803.0], [49.5, 10807.0], [49.6, 10811.0], [49.7, 10814.0], [49.8, 10819.0], [49.9, 10821.0], [50.0, 10825.0], [50.1, 10829.0], [50.2, 10833.0], [50.3, 10836.0], [50.4, 10842.0], [50.5, 10844.0], [50.6, 10847.0], [50.7, 10849.0], [50.8, 10852.0], [50.9, 10853.0], [51.0, 10858.0], [51.1, 10863.0], [51.2, 10868.0], [51.3, 10871.0], [51.4, 10875.0], [51.5, 10878.0], [51.6, 10882.0], [51.7, 10884.0], [51.8, 10892.0], [51.9, 10897.0], [52.0, 10900.0], [52.1, 10904.0], [52.2, 10908.0], [52.3, 10912.0], [52.4, 10916.0], [52.5, 10920.0], [52.6, 10923.0], [52.7, 10927.0], [52.8, 10930.0], [52.9, 10932.0], [53.0, 10934.0], [53.1, 10936.0], [53.2, 10939.0], [53.3, 10942.0], [53.4, 10945.0], [53.5, 10948.0], [53.6, 10952.0], [53.7, 10956.0], [53.8, 10959.0], [53.9, 10962.0], [54.0, 10966.0], [54.1, 10969.0], [54.2, 10972.0], [54.3, 10974.0], [54.4, 10977.0], [54.5, 10980.0], [54.6, 10982.0], [54.7, 10983.0], [54.8, 10987.0], [54.9, 10992.0], [55.0, 10994.0], [55.1, 10998.0], [55.2, 11000.0], [55.3, 11003.0], [55.4, 11005.0], [55.5, 11007.0], [55.6, 11008.0], [55.7, 11009.0], [55.8, 11011.0], [55.9, 11014.0], [56.0, 11018.0], [56.1, 11022.0], [56.2, 11024.0], [56.3, 11027.0], [56.4, 11029.0], [56.5, 11032.0], [56.6, 11035.0], [56.7, 11038.0], [56.8, 11040.0], [56.9, 11044.0], [57.0, 11047.0], [57.1, 11051.0], [57.2, 11054.0], [57.3, 11060.0], [57.4, 11063.0], [57.5, 11065.0], [57.6, 11067.0], [57.7, 11070.0], [57.8, 11074.0], [57.9, 11079.0], [58.0, 11082.0], [58.1, 11085.0], [58.2, 11088.0], [58.3, 11092.0], [58.4, 11095.0], [58.5, 11097.0], [58.6, 11100.0], [58.7, 11104.0], [58.8, 11106.0], [58.9, 11108.0], [59.0, 11111.0], [59.1, 11114.0], [59.2, 11118.0], [59.3, 11121.0], [59.4, 11124.0], [59.5, 11126.0], [59.6, 11131.0], [59.7, 11134.0], [59.8, 11137.0], [59.9, 11139.0], [60.0, 11142.0], [60.1, 11146.0], [60.2, 11150.0], [60.3, 11155.0], [60.4, 11158.0], [60.5, 11163.0], [60.6, 11165.0], [60.7, 11168.0], [60.8, 11172.0], [60.9, 11177.0], [61.0, 11179.0], [61.1, 11181.0], [61.2, 11185.0], [61.3, 11188.0], [61.4, 11192.0], [61.5, 11198.0], [61.6, 11202.0], [61.7, 11206.0], [61.8, 11210.0], [61.9, 11213.0], [62.0, 11215.0], [62.1, 11217.0], [62.2, 11222.0], [62.3, 11224.0], [62.4, 11230.0], [62.5, 11232.0], [62.6, 11235.0], [62.7, 11239.0], [62.8, 11241.0], [62.9, 11245.0], [63.0, 11248.0], [63.1, 11250.0], [63.2, 11253.0], [63.3, 11258.0], [63.4, 11262.0], [63.5, 11264.0], [63.6, 11265.0], [63.7, 11267.0], [63.8, 11273.0], [63.9, 11276.0], [64.0, 11280.0], [64.1, 11284.0], [64.2, 11289.0], [64.3, 11293.0], [64.4, 11299.0], [64.5, 11302.0], [64.6, 11307.0], [64.7, 11312.0], [64.8, 11316.0], [64.9, 11321.0], [65.0, 11324.0], [65.1, 11327.0], [65.2, 11333.0], [65.3, 11335.0], [65.4, 11339.0], [65.5, 11342.0], [65.6, 11345.0], [65.7, 11348.0], [65.8, 11351.0], [65.9, 11355.0], [66.0, 11359.0], [66.1, 11363.0], [66.2, 11368.0], [66.3, 11371.0], [66.4, 11379.0], [66.5, 11381.0], [66.6, 11385.0], [66.7, 11387.0], [66.8, 11391.0], [66.9, 11395.0], [67.0, 11397.0], [67.1, 11401.0], [67.2, 11404.0], [67.3, 11407.0], [67.4, 11410.0], [67.5, 11412.0], [67.6, 11418.0], [67.7, 11422.0], [67.8, 11427.0], [67.9, 11432.0], [68.0, 11437.0], [68.1, 11442.0], [68.2, 11447.0], [68.3, 11452.0], [68.4, 11457.0], [68.5, 11460.0], [68.6, 11464.0], [68.7, 11470.0], [68.8, 11473.0], [68.9, 11476.0], [69.0, 11479.0], [69.1, 11482.0], [69.2, 11486.0], [69.3, 11491.0], [69.4, 11495.0], [69.5, 11497.0], [69.6, 11502.0], [69.7, 11508.0], [69.8, 11510.0], [69.9, 11517.0], [70.0, 11519.0], [70.1, 11520.0], [70.2, 11524.0], [70.3, 11528.0], [70.4, 11531.0], [70.5, 11537.0], [70.6, 11540.0], [70.7, 11546.0], [70.8, 11548.0], [70.9, 11553.0], [71.0, 11558.0], [71.1, 11562.0], [71.2, 11566.0], [71.3, 11571.0], [71.4, 11575.0], [71.5, 11584.0], [71.6, 11588.0], [71.7, 11592.0], [71.8, 11597.0], [71.9, 11601.0], [72.0, 11606.0], [72.1, 11608.0], [72.2, 11613.0], [72.3, 11618.0], [72.4, 11622.0], [72.5, 11632.0], [72.6, 11636.0], [72.7, 11644.0], [72.8, 11652.0], [72.9, 11658.0], [73.0, 11663.0], [73.1, 11672.0], [73.2, 11678.0], [73.3, 11691.0], [73.4, 11704.0], [73.5, 11710.0], [73.6, 11720.0], [73.7, 11722.0], [73.8, 11727.0], [73.9, 11736.0], [74.0, 11741.0], [74.1, 11747.0], [74.2, 11754.0], [74.3, 11762.0], [74.4, 11770.0], [74.5, 11775.0], [74.6, 11775.0], [74.7, 11776.0], [74.8, 11777.0], [74.9, 11782.0], [75.0, 11795.0], [75.1, 11804.0], [75.2, 11813.0], [75.3, 11817.0], [75.4, 11833.0], [75.5, 11839.0], [75.6, 11845.0], [75.7, 11852.0], [75.8, 11860.0], [75.9, 11869.0], [76.0, 11874.0], [76.1, 11884.0], [76.2, 11891.0], [76.3, 11896.0], [76.4, 11907.0], [76.5, 11916.0], [76.6, 11921.0], [76.7, 11928.0], [76.8, 11939.0], [76.9, 11947.0], [77.0, 11951.0], [77.1, 11956.0], [77.2, 11961.0], [77.3, 11973.0], [77.4, 11984.0], [77.5, 11993.0], [77.6, 12000.0], [77.7, 12005.0], [77.8, 12011.0], [77.9, 12024.0], [78.0, 12030.0], [78.1, 12033.0], [78.2, 12039.0], [78.3, 12051.0], [78.4, 12059.0], [78.5, 12068.0], [78.6, 12076.0], [78.7, 12082.0], [78.8, 12096.0], [78.9, 12104.0], [79.0, 12119.0], [79.1, 12130.0], [79.2, 12137.0], [79.3, 12143.0], [79.4, 12154.0], [79.5, 12159.0], [79.6, 12165.0], [79.7, 12170.0], [79.8, 12176.0], [79.9, 12181.0], [80.0, 12195.0], [80.1, 12202.0], [80.2, 12212.0], [80.3, 12220.0], [80.4, 12226.0], [80.5, 12233.0], [80.6, 12236.0], [80.7, 12242.0], [80.8, 12252.0], [80.9, 12257.0], [81.0, 12260.0], [81.1, 12264.0], [81.2, 12270.0], [81.3, 12280.0], [81.4, 12287.0], [81.5, 12289.0], [81.6, 12294.0], [81.7, 12301.0], [81.8, 12309.0], [81.9, 12315.0], [82.0, 12320.0], [82.1, 12327.0], [82.2, 12339.0], [82.3, 12344.0], [82.4, 12348.0], [82.5, 12353.0], [82.6, 12373.0], [82.7, 12384.0], [82.8, 12392.0], [82.9, 12415.0], [83.0, 12427.0], [83.1, 12443.0], [83.2, 12456.0], [83.3, 12470.0], [83.4, 12478.0], [83.5, 12488.0], [83.6, 12504.0], [83.7, 12527.0], [83.8, 12544.0], [83.9, 12562.0], [84.0, 12581.0], [84.1, 12605.0], [84.2, 12634.0], [84.3, 12652.0], [84.4, 12672.0], [84.5, 12695.0], [84.6, 12717.0], [84.7, 12735.0], [84.8, 12748.0], [84.9, 12779.0], [85.0, 12796.0], [85.1, 12799.0], [85.2, 12799.0], [85.3, 12800.0], [85.4, 12800.0], [85.5, 12804.0], [85.6, 12844.0], [85.7, 12864.0], [85.8, 12905.0], [85.9, 13001.0], [86.0, 13055.0], [86.1, 13057.0], [86.2, 13182.0], [86.3, 13249.0], [86.4, 13307.0], [86.5, 13308.0], [86.6, 13310.0], [86.7, 13310.0], [86.8, 13310.0], [86.9, 13310.0], [87.0, 13311.0], [87.1, 13311.0], [87.2, 13311.0], [87.3, 13311.0], [87.4, 13311.0], [87.5, 13311.0], [87.6, 13311.0], [87.7, 13311.0], [87.8, 13311.0], [87.9, 13311.0], [88.0, 13311.0], [88.1, 13311.0], [88.2, 13311.0], [88.3, 13311.0], [88.4, 13311.0], [88.5, 13311.0], [88.6, 13311.0], [88.7, 13312.0], [88.8, 13312.0], [88.9, 13312.0], [89.0, 13312.0], [89.1, 13312.0], [89.2, 13312.0], [89.3, 13312.0], [89.4, 13312.0], [89.5, 13312.0], [89.6, 13312.0], [89.7, 13312.0], [89.8, 13312.0], [89.9, 13312.0], [90.0, 13312.0], [90.1, 13312.0], [90.2, 13312.0], [90.3, 13312.0], [90.4, 13312.0], [90.5, 13312.0], [90.6, 13312.0], [90.7, 13312.0], [90.8, 13312.0], [90.9, 13312.0], [91.0, 13313.0], [91.1, 13313.0], [91.2, 13313.0], [91.3, 13313.0], [91.4, 13313.0], [91.5, 13313.0], [91.6, 13313.0], [91.7, 13313.0], [91.8, 13314.0], [91.9, 13316.0], [92.0, 13316.0], [92.1, 13345.0], [92.2, 13364.0], [92.3, 13400.0], [92.4, 13415.0], [92.5, 13473.0], [92.6, 13568.0], [92.7, 13754.0], [92.8, 13820.0], [92.9, 13823.0], [93.0, 13823.0], [93.1, 13824.0], [93.2, 13824.0], [93.3, 13824.0], [93.4, 13824.0], [93.5, 13824.0], [93.6, 13825.0], [93.7, 13825.0], [93.8, 13827.0], [93.9, 13889.0], [94.0, 14030.0], [94.1, 14107.0], [94.2, 14324.0], [94.3, 14333.0], [94.4, 14334.0], [94.5, 14334.0], [94.6, 14335.0], [94.7, 14335.0], [94.8, 14335.0], [94.9, 14335.0], [95.0, 14335.0], [95.1, 14335.0], [95.2, 14336.0], [95.3, 14336.0], [95.4, 14336.0], [95.5, 14336.0], [95.6, 14339.0], [95.7, 14497.0], [95.8, 14589.0], [95.9, 14591.0], [96.0, 14692.0], [96.1, 14813.0], [96.2, 14847.0], [96.3, 14919.0], [96.4, 15101.0], [96.5, 15105.0], [96.6, 15360.0], [96.7, 15392.0], [96.8, 15615.0], [96.9, 15781.0], [97.0, 16128.0], [97.1, 16318.0], [97.2, 16385.0], [97.3, 17157.0], [97.4, 18035.0], [97.5, 18689.0], [97.6, 20062.0], [97.7, 20853.0], [97.8, 22913.0], [97.9, 23648.0], [98.0, 26368.0], [98.1, 27392.0], [98.2, 30582.0], [98.3, 30889.0], [98.4, 36461.0], [98.5, 54002.0], [98.6, 54521.0], [98.7, 83455.0], [98.8, 99584.0], [98.9, 105984.0], [99.0, 106366.0], [99.1, 107008.0], [99.2, 107320.0], [99.3, 111871.0], [99.4, 121599.0], [99.5, 136191.0], [99.6, 148990.0], [99.7, 164097.0], [99.8, 209921.0], [99.9, 210689.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 3.0], [6.8, 20.0], [6.9, 24.0], [7.0, 28.0], [7.1, 32.0], [7.2, 35.0], [7.3, 37.0], [7.4, 37.0], [7.5, 48.0], [7.6, 104.0], [7.7, 183.0], [7.8, 555.0], [7.9, 584.0], [8.0, 657.0], [8.1, 686.0], [8.2, 897.0], [8.3, 1206.0], [8.4, 1316.0], [8.5, 1362.0], [8.6, 1460.0], [8.7, 1496.0], [8.8, 1657.0], [8.9, 1754.0], [9.0, 1909.0], [9.1, 1946.0], [9.2, 2161.0], [9.3, 2461.0], [9.4, 2805.0], [9.5, 2915.0], [9.6, 3018.0], [9.7, 3035.0], [9.8, 3156.0], [9.9, 3299.0], [10.0, 3458.0], [10.1, 3525.0], [10.2, 3914.0], [10.3, 4140.0], [10.4, 4161.0], [10.5, 4212.0], [10.6, 4265.0], [10.7, 4296.0], [10.8, 4369.0], [10.9, 4432.0], [11.0, 4483.0], [11.1, 4598.0], [11.2, 4682.0], [11.3, 4891.0], [11.4, 5019.0], [11.5, 5134.0], [11.6, 5241.0], [11.7, 5319.0], [11.8, 5508.0], [11.9, 5695.0], [12.0, 5820.0], [12.1, 6649.0], [12.2, 6674.0], [12.3, 7007.0], [12.4, 7097.0], [12.5, 7127.0], [12.6, 7152.0], [12.7, 7164.0], [12.8, 7165.0], [12.9, 7166.0], [13.0, 7166.0], [13.1, 7167.0], [13.2, 7167.0], [13.3, 7167.0], [13.4, 7167.0], [13.5, 7167.0], [13.6, 7167.0], [13.7, 7167.0], [13.8, 7167.0], [13.9, 7168.0], [14.0, 7168.0], [14.1, 7168.0], [14.2, 7168.0], [14.3, 7168.0], [14.4, 7168.0], [14.5, 7168.0], [14.6, 7168.0], [14.7, 7168.0], [14.8, 7168.0], [14.9, 7168.0], [15.0, 7168.0], [15.1, 7168.0], [15.2, 7168.0], [15.3, 7169.0], [15.4, 7169.0], [15.5, 7169.0], [15.6, 7170.0], [15.7, 7213.0], [15.8, 7286.0], [15.9, 7327.0], [16.0, 7353.0], [16.1, 7364.0], [16.2, 7390.0], [16.3, 7422.0], [16.4, 7422.0], [16.5, 7423.0], [16.6, 7423.0], [16.7, 7423.0], [16.8, 7423.0], [16.9, 7423.0], [17.0, 7423.0], [17.1, 7423.0], [17.2, 7424.0], [17.3, 7424.0], [17.4, 7424.0], [17.5, 7424.0], [17.6, 7424.0], [17.7, 7424.0], [17.8, 7424.0], [17.9, 7424.0], [18.0, 7425.0], [18.1, 7425.0], [18.2, 7425.0], [18.3, 7431.0], [18.4, 7489.0], [18.5, 7502.0], [18.6, 7543.0], [18.7, 7568.0], [18.8, 7611.0], [18.9, 7650.0], [19.0, 7676.0], [19.1, 7678.0], [19.2, 7678.0], [19.3, 7679.0], [19.4, 7679.0], [19.5, 7679.0], [19.6, 7679.0], [19.7, 7679.0], [19.8, 7679.0], [19.9, 7680.0], [20.0, 7680.0], [20.1, 7680.0], [20.2, 7680.0], [20.3, 7680.0], [20.4, 7680.0], [20.5, 7680.0], [20.6, 7680.0], [20.7, 7681.0], [20.8, 7681.0], [20.9, 7681.0], [21.0, 7682.0], [21.1, 7709.0], [21.2, 7754.0], [21.3, 7814.0], [21.4, 7851.0], [21.5, 7931.0], [21.6, 7932.0], [21.7, 7934.0], [21.8, 7935.0], [21.9, 7935.0], [22.0, 7935.0], [22.1, 7935.0], [22.2, 7935.0], [22.3, 7935.0], [22.4, 7936.0], [22.5, 7936.0], [22.6, 7936.0], [22.7, 7936.0], [22.8, 7937.0], [22.9, 7940.0], [23.0, 7940.0], [23.1, 7996.0], [23.2, 8016.0], [23.3, 8179.0], [23.4, 8186.0], [23.5, 8187.0], [23.6, 8188.0], [23.7, 8188.0], [23.8, 8190.0], [23.9, 8191.0], [24.0, 8191.0], [24.1, 8191.0], [24.2, 8191.0], [24.3, 8191.0], [24.4, 8191.0], [24.5, 8191.0], [24.6, 8192.0], [24.7, 8192.0], [24.8, 8192.0], [24.9, 8192.0], [25.0, 8192.0], [25.1, 8192.0], [25.2, 8193.0], [25.3, 8193.0], [25.4, 8250.0], [25.5, 8390.0], [25.6, 8400.0], [25.7, 8437.0], [25.8, 8444.0], [25.9, 8446.0], [26.0, 8447.0], [26.1, 8447.0], [26.2, 8447.0], [26.3, 8447.0], [26.4, 8448.0], [26.5, 8448.0], [26.6, 8448.0], [26.7, 8449.0], [26.8, 8449.0], [26.9, 8449.0], [27.0, 8452.0], [27.1, 8520.0], [27.2, 8621.0], [27.3, 8665.0], [27.4, 8700.0], [27.5, 8701.0], [27.6, 8702.0], [27.7, 8702.0], [27.8, 8703.0], [27.9, 8703.0], [28.0, 8703.0], [28.1, 8703.0], [28.2, 8703.0], [28.3, 8703.0], [28.4, 8703.0], [28.5, 8703.0], [28.6, 8704.0], [28.7, 8704.0], [28.8, 8704.0], [28.9, 8704.0], [29.0, 8704.0], [29.1, 8705.0], [29.2, 8705.0], [29.3, 8705.0], [29.4, 8707.0], [29.5, 8707.0], [29.6, 8707.0], [29.7, 8708.0], [29.8, 8736.0], [29.9, 8777.0], [30.0, 8807.0], [30.1, 8854.0], [30.2, 8869.0], [30.3, 8882.0], [30.4, 8951.0], [30.5, 8954.0], [30.6, 8959.0], [30.7, 8959.0], [30.8, 8959.0], [30.9, 8960.0], [31.0, 8960.0], [31.1, 8961.0], [31.2, 8971.0], [31.3, 8999.0], [31.4, 9060.0], [31.5, 9074.0], [31.6, 9096.0], [31.7, 9100.0], [31.8, 9130.0], [31.9, 9138.0], [32.0, 9147.0], [32.1, 9153.0], [32.2, 9156.0], [32.3, 9181.0], [32.4, 9193.0], [32.5, 9201.0], [32.6, 9202.0], [32.7, 9212.0], [32.8, 9213.0], [32.9, 9214.0], [33.0, 9214.0], [33.1, 9215.0], [33.2, 9215.0], [33.3, 9215.0], [33.4, 9215.0], [33.5, 9216.0], [33.6, 9216.0], [33.7, 9216.0], [33.8, 9216.0], [33.9, 9216.0], [34.0, 9216.0], [34.1, 9216.0], [34.2, 9216.0], [34.3, 9216.0], [34.4, 9217.0], [34.5, 9221.0], [34.6, 9224.0], [34.7, 9233.0], [34.8, 9245.0], [34.9, 9268.0], [35.0, 9274.0], [35.1, 9292.0], [35.2, 9329.0], [35.3, 9335.0], [35.4, 9342.0], [35.5, 9379.0], [35.6, 9421.0], [35.7, 9431.0], [35.8, 9468.0], [35.9, 9472.0], [36.0, 9490.0], [36.1, 9507.0], [36.2, 9548.0], [36.3, 9572.0], [36.4, 9605.0], [36.5, 9613.0], [36.6, 9620.0], [36.7, 9633.0], [36.8, 9652.0], [36.9, 9667.0], [37.0, 9699.0], [37.1, 9724.0], [37.2, 9725.0], [37.3, 9727.0], [37.4, 9727.0], [37.5, 9727.0], [37.6, 9727.0], [37.7, 9727.0], [37.8, 9727.0], [37.9, 9727.0], [38.0, 9727.0], [38.1, 9728.0], [38.2, 9728.0], [38.3, 9728.0], [38.4, 9728.0], [38.5, 9728.0], [38.6, 9728.0], [38.7, 9729.0], [38.8, 9731.0], [38.9, 9737.0], [39.0, 9779.0], [39.1, 9782.0], [39.2, 9798.0], [39.3, 9834.0], [39.4, 9887.0], [39.5, 9903.0], [39.6, 9929.0], [39.7, 9981.0], [39.8, 9982.0], [39.9, 9983.0], [40.0, 9983.0], [40.1, 9983.0], [40.2, 9984.0], [40.3, 9993.0], [40.4, 10001.0], [40.5, 10028.0], [40.6, 10058.0], [40.7, 10089.0], [40.8, 10140.0], [40.9, 10142.0], [41.0, 10152.0], [41.1, 10160.0], [41.2, 10187.0], [41.3, 10201.0], [41.4, 10219.0], [41.5, 10236.0], [41.6, 10238.0], [41.7, 10239.0], [41.8, 10239.0], [41.9, 10239.0], [42.0, 10239.0], [42.1, 10239.0], [42.2, 10240.0], [42.3, 10240.0], [42.4, 10240.0], [42.5, 10240.0], [42.6, 10240.0], [42.7, 10240.0], [42.8, 10240.0], [42.9, 10240.0], [43.0, 10240.0], [43.1, 10241.0], [43.2, 10241.0], [43.3, 10248.0], [43.4, 10253.0], [43.5, 10313.0], [43.6, 10339.0], [43.7, 10357.0], [43.8, 10371.0], [43.9, 10383.0], [44.0, 10391.0], [44.1, 10474.0], [44.2, 10495.0], [44.3, 10496.0], [44.4, 10574.0], [44.5, 10629.0], [44.6, 10646.0], [44.7, 10710.0], [44.8, 10748.0], [44.9, 10751.0], [45.0, 10752.0], [45.1, 10752.0], [45.2, 10752.0], [45.3, 10752.0], [45.4, 10752.0], [45.5, 10752.0], [45.6, 10752.0], [45.7, 10752.0], [45.8, 10766.0], [45.9, 10780.0], [46.0, 10843.0], [46.1, 10902.0], [46.2, 10932.0], [46.3, 10951.0], [46.4, 10972.0], [46.5, 11007.0], [46.6, 11008.0], [46.7, 11008.0], [46.8, 11010.0], [46.9, 11011.0], [47.0, 11015.0], [47.1, 11036.0], [47.2, 11047.0], [47.3, 11057.0], [47.4, 11084.0], [47.5, 11101.0], [47.6, 11128.0], [47.7, 11179.0], [47.8, 11199.0], [47.9, 11251.0], [48.0, 11263.0], [48.1, 11263.0], [48.2, 11264.0], [48.3, 11264.0], [48.4, 11264.0], [48.5, 11264.0], [48.6, 11265.0], [48.7, 11265.0], [48.8, 11333.0], [48.9, 11365.0], [49.0, 11373.0], [49.1, 11400.0], [49.2, 11408.0], [49.3, 11419.0], [49.4, 11492.0], [49.5, 11519.0], [49.6, 11519.0], [49.7, 11520.0], [49.8, 11547.0], [49.9, 11654.0], [50.0, 11721.0], [50.1, 11774.0], [50.2, 11774.0], [50.3, 11774.0], [50.4, 11775.0], [50.5, 11775.0], [50.6, 11775.0], [50.7, 11775.0], [50.8, 11775.0], [50.9, 11776.0], [51.0, 11776.0], [51.1, 11776.0], [51.2, 11776.0], [51.3, 11776.0], [51.4, 11776.0], [51.5, 11776.0], [51.6, 11776.0], [51.7, 11776.0], [51.8, 11777.0], [51.9, 11778.0], [52.0, 11929.0], [52.1, 11935.0], [52.2, 12017.0], [52.3, 12031.0], [52.4, 12051.0], [52.5, 12081.0], [52.6, 12146.0], [52.7, 12157.0], [52.8, 12241.0], [52.9, 12286.0], [53.0, 12287.0], [53.1, 12287.0], [53.2, 12288.0], [53.3, 12302.0], [53.4, 12339.0], [53.5, 12417.0], [53.6, 12511.0], [53.7, 12527.0], [53.8, 12543.0], [53.9, 12543.0], [54.0, 12544.0], [54.1, 12545.0], [54.2, 12639.0], [54.3, 12658.0], [54.4, 12676.0], [54.5, 12702.0], [54.6, 12796.0], [54.7, 12799.0], [54.8, 12799.0], [54.9, 12800.0], [55.0, 12800.0], [55.1, 12800.0], [55.2, 12801.0], [55.3, 12803.0], [55.4, 12825.0], [55.5, 12912.0], [55.6, 12939.0], [55.7, 12984.0], [55.8, 13054.0], [55.9, 13055.0], [56.0, 13056.0], [56.1, 13057.0], [56.2, 13150.0], [56.3, 13178.0], [56.4, 13184.0], [56.5, 13196.0], [56.6, 13200.0], [56.7, 13206.0], [56.8, 13212.0], [56.9, 13216.0], [57.0, 13223.0], [57.1, 13230.0], [57.2, 13242.0], [57.3, 13246.0], [57.4, 13265.0], [57.5, 13267.0], [57.6, 13282.0], [57.7, 13286.0], [57.8, 13291.0], [57.9, 13297.0], [58.0, 13306.0], [58.1, 13307.0], [58.2, 13308.0], [58.3, 13308.0], [58.4, 13309.0], [58.5, 13310.0], [58.6, 13310.0], [58.7, 13310.0], [58.8, 13310.0], [58.9, 13310.0], [59.0, 13310.0], [59.1, 13310.0], [59.2, 13310.0], [59.3, 13310.0], [59.4, 13310.0], [59.5, 13310.0], [59.6, 13311.0], [59.7, 13311.0], [59.8, 13311.0], [59.9, 13311.0], [60.0, 13311.0], [60.1, 13311.0], [60.2, 13311.0], [60.3, 13311.0], [60.4, 13311.0], [60.5, 13311.0], [60.6, 13311.0], [60.7, 13311.0], [60.8, 13311.0], [60.9, 13311.0], [61.0, 13311.0], [61.1, 13311.0], [61.2, 13311.0], [61.3, 13311.0], [61.4, 13311.0], [61.5, 13311.0], [61.6, 13311.0], [61.7, 13311.0], [61.8, 13311.0], [61.9, 13311.0], [62.0, 13311.0], [62.1, 13311.0], [62.2, 13311.0], [62.3, 13311.0], [62.4, 13311.0], [62.5, 13311.0], [62.6, 13311.0], [62.7, 13311.0], [62.8, 13311.0], [62.9, 13311.0], [63.0, 13311.0], [63.1, 13311.0], [63.2, 13311.0], [63.3, 13311.0], [63.4, 13311.0], [63.5, 13311.0], [63.6, 13311.0], [63.7, 13311.0], [63.8, 13311.0], [63.9, 13311.0], [64.0, 13311.0], [64.1, 13311.0], [64.2, 13311.0], [64.3, 13311.0], [64.4, 13311.0], [64.5, 13311.0], [64.6, 13311.0], [64.7, 13312.0], [64.8, 13312.0], [64.9, 13312.0], [65.0, 13312.0], [65.1, 13312.0], [65.2, 13312.0], [65.3, 13312.0], [65.4, 13312.0], [65.5, 13312.0], [65.6, 13312.0], [65.7, 13312.0], [65.8, 13312.0], [65.9, 13312.0], [66.0, 13312.0], [66.1, 13312.0], [66.2, 13312.0], [66.3, 13312.0], [66.4, 13312.0], [66.5, 13312.0], [66.6, 13312.0], [66.7, 13312.0], [66.8, 13312.0], [66.9, 13312.0], [67.0, 13312.0], [67.1, 13312.0], [67.2, 13312.0], [67.3, 13312.0], [67.4, 13312.0], [67.5, 13312.0], [67.6, 13312.0], [67.7, 13312.0], [67.8, 13312.0], [67.9, 13312.0], [68.0, 13312.0], [68.1, 13312.0], [68.2, 13312.0], [68.3, 13312.0], [68.4, 13312.0], [68.5, 13312.0], [68.6, 13312.0], [68.7, 13312.0], [68.8, 13312.0], [68.9, 13312.0], [69.0, 13312.0], [69.1, 13312.0], [69.2, 13312.0], [69.3, 13312.0], [69.4, 13312.0], [69.5, 13312.0], [69.6, 13312.0], [69.7, 13312.0], [69.8, 13312.0], [69.9, 13312.0], [70.0, 13312.0], [70.1, 13312.0], [70.2, 13312.0], [70.3, 13312.0], [70.4, 13312.0], [70.5, 13312.0], [70.6, 13312.0], [70.7, 13312.0], [70.8, 13312.0], [70.9, 13312.0], [71.0, 13312.0], [71.1, 13312.0], [71.2, 13312.0], [71.3, 13312.0], [71.4, 13312.0], [71.5, 13312.0], [71.6, 13312.0], [71.7, 13313.0], [71.8, 13313.0], [71.9, 13313.0], [72.0, 13313.0], [72.1, 13313.0], [72.2, 13313.0], [72.3, 13313.0], [72.4, 13313.0], [72.5, 13313.0], [72.6, 13313.0], [72.7, 13313.0], [72.8, 13313.0], [72.9, 13313.0], [73.0, 13313.0], [73.1, 13313.0], [73.2, 13313.0], [73.3, 13313.0], [73.4, 13313.0], [73.5, 13313.0], [73.6, 13313.0], [73.7, 13313.0], [73.8, 13313.0], [73.9, 13313.0], [74.0, 13313.0], [74.1, 13313.0], [74.2, 13313.0], [74.3, 13313.0], [74.4, 13313.0], [74.5, 13313.0], [74.6, 13315.0], [74.7, 13315.0], [74.8, 13315.0], [74.9, 13315.0], [75.0, 13316.0], [75.1, 13316.0], [75.2, 13317.0], [75.3, 13318.0], [75.4, 13319.0], [75.5, 13319.0], [75.6, 13321.0], [75.7, 13323.0], [75.8, 13334.0], [75.9, 13338.0], [76.0, 13343.0], [76.1, 13361.0], [76.2, 13363.0], [76.3, 13372.0], [76.4, 13389.0], [76.5, 13405.0], [76.6, 13409.0], [76.7, 13425.0], [76.8, 13432.0], [76.9, 13489.0], [77.0, 13511.0], [77.1, 13565.0], [77.2, 13567.0], [77.3, 13568.0], [77.4, 13569.0], [77.5, 13572.0], [77.6, 13591.0], [77.7, 13697.0], [77.8, 13746.0], [77.9, 13780.0], [78.0, 13800.0], [78.1, 13814.0], [78.2, 13819.0], [78.3, 13820.0], [78.4, 13820.0], [78.5, 13821.0], [78.6, 13821.0], [78.7, 13822.0], [78.8, 13822.0], [78.9, 13823.0], [79.0, 13823.0], [79.1, 13823.0], [79.2, 13823.0], [79.3, 13823.0], [79.4, 13823.0], [79.5, 13823.0], [79.6, 13823.0], [79.7, 13824.0], [79.8, 13824.0], [79.9, 13824.0], [80.0, 13824.0], [80.1, 13824.0], [80.2, 13824.0], [80.3, 13824.0], [80.4, 13824.0], [80.5, 13824.0], [80.6, 13824.0], [80.7, 13825.0], [80.8, 13825.0], [80.9, 13825.0], [81.0, 13825.0], [81.1, 13825.0], [81.2, 13825.0], [81.3, 13825.0], [81.4, 13826.0], [81.5, 13826.0], [81.6, 13826.0], [81.7, 13851.0], [81.8, 13881.0], [81.9, 13907.0], [82.0, 13913.0], [82.1, 13918.0], [82.2, 13939.0], [82.3, 14076.0], [82.4, 14080.0], [82.5, 14114.0], [82.6, 14185.0], [82.7, 14200.0], [82.8, 14247.0], [82.9, 14331.0], [83.0, 14332.0], [83.1, 14333.0], [83.2, 14334.0], [83.3, 14334.0], [83.4, 14334.0], [83.5, 14335.0], [83.6, 14335.0], [83.7, 14335.0], [83.8, 14335.0], [83.9, 14335.0], [84.0, 14335.0], [84.1, 14335.0], [84.2, 14335.0], [84.3, 14335.0], [84.4, 14335.0], [84.5, 14335.0], [84.6, 14335.0], [84.7, 14335.0], [84.8, 14335.0], [84.9, 14335.0], [85.0, 14336.0], [85.1, 14336.0], [85.2, 14336.0], [85.3, 14336.0], [85.4, 14336.0], [85.5, 14336.0], [85.6, 14336.0], [85.7, 14336.0], [85.8, 14336.0], [85.9, 14336.0], [86.0, 14336.0], [86.1, 14336.0], [86.2, 14336.0], [86.3, 14337.0], [86.4, 14337.0], [86.5, 14338.0], [86.6, 14338.0], [86.7, 14339.0], [86.8, 14387.0], [86.9, 14438.0], [87.0, 14506.0], [87.1, 14589.0], [87.2, 14590.0], [87.3, 14590.0], [87.4, 14591.0], [87.5, 14593.0], [87.6, 14648.0], [87.7, 14848.0], [87.8, 14851.0], [87.9, 15083.0], [88.0, 15102.0], [88.1, 15104.0], [88.2, 15104.0], [88.3, 15105.0], [88.4, 15358.0], [88.5, 15361.0], [88.6, 15452.0], [88.7, 15615.0], [88.8, 15617.0], [88.9, 15617.0], [89.0, 15872.0], [89.1, 16125.0], [89.2, 16128.0], [89.3, 16213.0], [89.4, 16382.0], [89.5, 16384.0], [89.6, 16384.0], [89.7, 16476.0], [89.8, 17157.0], [89.9, 18431.0], [90.0, 19000.0], [90.1, 19079.0], [90.2, 19200.0], [90.3, 19201.0], [90.4, 19588.0], [90.5, 19876.0], [90.6, 20222.0], [90.7, 20583.0], [90.8, 21710.0], [90.9, 23974.0], [91.0, 24597.0], [91.1, 26230.0], [91.2, 26254.0], [91.3, 26358.0], [91.4, 26368.0], [91.5, 26407.0], [91.6, 27392.0], [91.7, 29346.0], [91.8, 30462.0], [91.9, 30671.0], [92.0, 30719.0], [92.1, 51738.0], [92.2, 52554.0], [92.3, 52779.0], [92.4, 52883.0], [92.5, 53272.0], [92.6, 53277.0], [92.7, 53284.0], [92.8, 54038.0], [92.9, 54045.0], [93.0, 57763.0], [93.1, 63829.0], [93.2, 78544.0], [93.3, 83454.0], [93.4, 92044.0], [93.5, 92160.0], [93.6, 97540.0], [93.7, 105326.0], [93.8, 105468.0], [93.9, 105518.0], [94.0, 105668.0], [94.1, 105797.0], [94.2, 105838.0], [94.3, 105897.0], [94.4, 105983.0], [94.5, 105984.0], [94.6, 105984.0], [94.7, 105991.0], [94.8, 106036.0], [94.9, 106124.0], [95.0, 106173.0], [95.1, 106239.0], [95.2, 106239.0], [95.3, 106269.0], [95.4, 106412.0], [95.5, 106476.0], [95.6, 106654.0], [95.7, 106700.0], [95.8, 106751.0], [95.9, 106752.0], [96.0, 106798.0], [96.1, 106886.0], [96.2, 106986.0], [96.3, 107007.0], [96.4, 107007.0], [96.5, 107077.0], [96.6, 107277.0], [96.7, 107351.0], [96.8, 109566.0], [96.9, 109837.0], [97.0, 113954.0], [97.1, 114701.0], [97.2, 115593.0], [97.3, 118519.0], [97.4, 121598.0], [97.5, 123610.0], [97.6, 123942.0], [97.7, 127515.0], [97.8, 129023.0], [97.9, 131394.0], [98.0, 136191.0], [98.1, 136192.0], [98.2, 149247.0], [98.3, 151556.0], [98.4, 153600.0], [98.5, 153601.0], [98.6, 155291.0], [98.7, 164862.0], [98.8, 168444.0], [98.9, 178682.0], [99.0, 178683.0], [99.1, 178683.0], [99.2, 178683.0], [99.3, 196093.0], [99.4, 210688.0], [99.5, 210689.0], [99.6, 211666.0], [99.7, 211711.0], [99.8, 211712.0], [99.9, 211712.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 577.0, "series": [{"data": [[0.0, 160.0], [196000.0, 2.0], [210400.0, 3.0], [136100.0, 5.0], [148900.0, 1.0], [155300.0, 1.0], [105900.0, 2.0], [106700.0, 1.0], [107500.0, 1.0], [115500.0, 2.0], [126700.0, 4.0], [178600.0, 2.0], [186600.0, 1.0], [210600.0, 4.0], [52900.0, 2.0], [209900.0, 1.0], [109800.0, 3.0], [500.0, 6.0], [129000.0, 2.0], [137200.0, 1.0], [600.0, 3.0], [148400.0, 1.0], [700.0, 2.0], [800.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1300.0, 4.0], [1400.0, 2.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 2.0], [3300.0, 1.0], [211700.0, 2.0], [3400.0, 1.0], [3500.0, 3.0], [3700.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4100.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4500.0, 2.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 3.0], [5000.0, 2.0], [5100.0, 2.0], [5300.0, 3.0], [5200.0, 1.0], [5500.0, 2.0], [5400.0, 2.0], [5600.0, 2.0], [5700.0, 4.0], [5800.0, 3.0], [92100.0, 7.0], [5900.0, 3.0], [6100.0, 2.0], [6400.0, 1.0], [6500.0, 2.0], [6900.0, 1.0], [6800.0, 1.0], [110500.0, 1.0], [7100.0, 53.0], [7400.0, 47.0], [7600.0, 45.0], [7500.0, 1.0], [7800.0, 1.0], [7700.0, 2.0], [7900.0, 36.0], [8000.0, 4.0], [8100.0, 46.0], [8200.0, 3.0], [8400.0, 36.0], [8600.0, 2.0], [8700.0, 68.0], [8500.0, 1.0], [8900.0, 18.0], [8800.0, 3.0], [9000.0, 3.0], [9200.0, 51.0], [9100.0, 2.0], [9400.0, 13.0], [9700.0, 54.0], [9600.0, 8.0], [9500.0, 8.0], [9300.0, 2.0], [9900.0, 23.0], [10100.0, 11.0], [10200.0, 35.0], [9800.0, 9.0], [10000.0, 4.0], [10600.0, 12.0], [10500.0, 15.0], [10400.0, 23.0], [10300.0, 7.0], [10700.0, 22.0], [11100.0, 12.0], [11200.0, 25.0], [10900.0, 11.0], [11000.0, 22.0], [10800.0, 6.0], [11700.0, 32.0], [11300.0, 10.0], [11600.0, 8.0], [11500.0, 24.0], [11400.0, 7.0], [12200.0, 6.0], [11900.0, 4.0], [11800.0, 4.0], [12000.0, 5.0], [12400.0, 2.0], [12300.0, 4.0], [12700.0, 21.0], [12500.0, 5.0], [12600.0, 2.0], [13300.0, 354.0], [12800.0, 12.0], [13200.0, 2.0], [13000.0, 5.0], [13800.0, 70.0], [13500.0, 10.0], [13400.0, 3.0], [13700.0, 1.0], [14300.0, 81.0], [14200.0, 2.0], [14000.0, 3.0], [13900.0, 1.0], [14500.0, 16.0], [14600.0, 1.0], [14800.0, 3.0], [14400.0, 1.0], [15300.0, 3.0], [15100.0, 7.0], [15600.0, 4.0], [15400.0, 1.0], [15500.0, 1.0], [16200.0, 1.0], [16300.0, 4.0], [16800.0, 1.0], [18400.0, 3.0], [17600.0, 1.0], [18200.0, 1.0], [18800.0, 1.0], [18600.0, 2.0], [19400.0, 1.0], [20400.0, 5.0], [19600.0, 3.0], [19800.0, 3.0], [22000.0, 1.0], [28400.0, 1.0], [28200.0, 1.0], [29600.0, 3.0], [29800.0, 1.0], [30200.0, 2.0], [53200.0, 3.0], [55200.0, 2.0], [54000.0, 7.0], [74400.0, 1.0], [115200.0, 1.0], [126400.0, 1.0], [153600.0, 3.0], [97500.0, 2.0], [109500.0, 1.0], [105400.0, 2.0], [106200.0, 4.0], [107000.0, 2.0], [149200.0, 1.0], [114900.0, 3.0], [122100.0, 1.0], [170200.0, 1.0], [17100.0, 6.0], [18100.0, 1.0], [19100.0, 1.0], [19300.0, 2.0], [20900.0, 1.0], [21700.0, 1.0], [25300.0, 1.0], [26300.0, 4.0], [27300.0, 2.0], [27900.0, 1.0], [29300.0, 1.0], [30700.0, 2.0], [29900.0, 1.0], [29700.0, 1.0], [30100.0, 2.0], [37800.0, 1.0], [153500.0, 2.0], [52200.0, 1.0], [110000.0, 3.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[0.0, 291.0], [164000.0, 3.0], [196000.0, 2.0], [210400.0, 6.0], [136100.0, 6.0], [148900.0, 2.0], [99500.0, 1.0], [105900.0, 6.0], [106700.0, 2.0], [107500.0, 3.0], [109900.0, 1.0], [116300.0, 1.0], [178600.0, 1.0], [210600.0, 6.0], [163500.0, 1.0], [52500.0, 1.0], [52900.0, 2.0], [209900.0, 5.0], [54500.0, 2.0], [83400.0, 1.0], [105800.0, 1.0], [109800.0, 1.0], [129000.0, 1.0], [137200.0, 2.0], [177200.0, 1.0], [1100.0, 19.0], [1200.0, 56.0], [1300.0, 16.0], [1400.0, 14.0], [1500.0, 14.0], [1600.0, 19.0], [1700.0, 18.0], [1800.0, 19.0], [1900.0, 13.0], [2000.0, 17.0], [2100.0, 3.0], [2200.0, 12.0], [2300.0, 18.0], [2400.0, 28.0], [2500.0, 20.0], [2600.0, 31.0], [2700.0, 28.0], [2800.0, 22.0], [2900.0, 26.0], [3000.0, 26.0], [3100.0, 11.0], [3200.0, 14.0], [3300.0, 18.0], [211700.0, 6.0], [3400.0, 13.0], [3500.0, 6.0], [3600.0, 15.0], [3700.0, 7.0], [3800.0, 7.0], [3900.0, 9.0], [4000.0, 21.0], [4100.0, 36.0], [4200.0, 16.0], [4300.0, 23.0], [4500.0, 17.0], [4400.0, 22.0], [4600.0, 13.0], [4800.0, 5.0], [4700.0, 14.0], [5000.0, 5.0], [5100.0, 11.0], [4900.0, 4.0], [5200.0, 30.0], [5300.0, 31.0], [5600.0, 33.0], [5400.0, 51.0], [5500.0, 30.0], [5700.0, 36.0], [5800.0, 24.0], [92100.0, 6.0], [5900.0, 16.0], [6100.0, 36.0], [6000.0, 22.0], [6200.0, 17.0], [6300.0, 17.0], [6500.0, 25.0], [6400.0, 25.0], [6600.0, 11.0], [6700.0, 11.0], [6800.0, 21.0], [6900.0, 13.0], [107300.0, 2.0], [7000.0, 17.0], [7100.0, 72.0], [7200.0, 14.0], [7300.0, 8.0], [7400.0, 69.0], [7500.0, 8.0], [7600.0, 55.0], [7700.0, 12.0], [7900.0, 75.0], [7800.0, 3.0], [124100.0, 1.0], [8000.0, 14.0], [8100.0, 83.0], [8200.0, 29.0], [8300.0, 33.0], [8400.0, 60.0], [8600.0, 36.0], [8500.0, 30.0], [8700.0, 132.0], [8800.0, 24.0], [8900.0, 39.0], [9200.0, 80.0], [9000.0, 5.0], [9100.0, 14.0], [9300.0, 8.0], [9400.0, 18.0], [9600.0, 11.0], [9500.0, 6.0], [9700.0, 95.0], [10000.0, 246.0], [9800.0, 77.0], [9900.0, 145.0], [10100.0, 244.0], [10200.0, 248.0], [10400.0, 322.0], [10300.0, 284.0], [10600.0, 252.0], [10500.0, 264.0], [10700.0, 242.0], [10800.0, 257.0], [10900.0, 310.0], [11000.0, 333.0], [11100.0, 286.0], [11200.0, 284.0], [11300.0, 259.0], [11400.0, 240.0], [11500.0, 227.0], [11600.0, 147.0], [11700.0, 163.0], [12200.0, 158.0], [11800.0, 126.0], [11900.0, 122.0], [12100.0, 118.0], [12000.0, 125.0], [12300.0, 112.0], [12400.0, 73.0], [12700.0, 68.0], [12500.0, 48.0], [12600.0, 44.0], [13000.0, 22.0], [12900.0, 12.0], [13300.0, 577.0], [13200.0, 16.0], [12800.0, 55.0], [13100.0, 10.0], [13500.0, 16.0], [13400.0, 21.0], [13800.0, 114.0], [13700.0, 4.0], [13600.0, 2.0], [14200.0, 3.0], [13900.0, 9.0], [14100.0, 6.0], [14300.0, 146.0], [14000.0, 8.0], [14800.0, 20.0], [14700.0, 7.0], [14500.0, 27.0], [14400.0, 4.0], [14600.0, 2.0], [15000.0, 7.0], [15300.0, 14.0], [15200.0, 3.0], [15100.0, 13.0], [14900.0, 4.0], [15500.0, 3.0], [15600.0, 6.0], [15400.0, 6.0], [15700.0, 5.0], [15800.0, 5.0], [16200.0, 4.0], [16100.0, 6.0], [15900.0, 1.0], [16300.0, 14.0], [16000.0, 1.0], [16600.0, 1.0], [16800.0, 1.0], [18000.0, 1.0], [17600.0, 2.0], [18200.0, 2.0], [18400.0, 1.0], [17800.0, 2.0], [19200.0, 3.0], [18600.0, 3.0], [20200.0, 2.0], [20400.0, 3.0], [19800.0, 2.0], [19600.0, 1.0], [20000.0, 3.0], [20800.0, 3.0], [20600.0, 1.0], [21000.0, 2.0], [23000.0, 1.0], [23200.0, 1.0], [23800.0, 2.0], [23600.0, 2.0], [26200.0, 1.0], [25800.0, 1.0], [27600.0, 1.0], [29200.0, 2.0], [29400.0, 1.0], [30400.0, 1.0], [30600.0, 2.0], [30800.0, 2.0], [31000.0, 1.0], [31200.0, 2.0], [36400.0, 1.0], [52000.0, 1.0], [53200.0, 1.0], [52800.0, 1.0], [53600.0, 1.0], [55200.0, 4.0], [54000.0, 2.0], [54400.0, 6.0], [95200.0, 1.0], [105600.0, 1.0], [102400.0, 1.0], [106400.0, 2.0], [107200.0, 2.0], [114400.0, 1.0], [116000.0, 1.0], [116800.0, 2.0], [153600.0, 4.0], [164800.0, 1.0], [97500.0, 1.0], [105500.0, 1.0], [106300.0, 1.0], [110300.0, 1.0], [107100.0, 1.0], [109500.0, 1.0], [115900.0, 1.0], [121500.0, 1.0], [143500.0, 1.0], [52700.0, 1.0], [54300.0, 1.0], [55100.0, 2.0], [105400.0, 2.0], [106200.0, 5.0], [107000.0, 10.0], [111800.0, 1.0], [116600.0, 1.0], [155600.0, 2.0], [70100.0, 1.0], [105300.0, 1.0], [106100.0, 1.0], [106900.0, 1.0], [114900.0, 2.0], [122100.0, 2.0], [128500.0, 4.0], [157400.0, 1.0], [16500.0, 2.0], [16700.0, 2.0], [17100.0, 3.0], [17700.0, 4.0], [18100.0, 2.0], [18700.0, 1.0], [18500.0, 1.0], [20100.0, 1.0], [20500.0, 1.0], [21500.0, 1.0], [20900.0, 1.0], [21100.0, 2.0], [22300.0, 2.0], [22900.0, 5.0], [23100.0, 1.0], [24300.0, 2.0], [23900.0, 1.0], [26300.0, 10.0], [27100.0, 1.0], [27300.0, 2.0], [29300.0, 1.0], [29100.0, 1.0], [30100.0, 1.0], [30500.0, 4.0], [30700.0, 4.0], [30900.0, 2.0], [31100.0, 3.0], [52200.0, 1.0], [58200.0, 1.0], [65400.0, 1.0], [110000.0, 1.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[0.0, 148.0], [167200.0, 1.0], [196000.0, 2.0], [210400.0, 1.0], [131300.0, 1.0], [136100.0, 3.0], [95500.0, 1.0], [105900.0, 8.0], [106700.0, 7.0], [107500.0, 1.0], [113900.0, 1.0], [114700.0, 1.0], [115500.0, 1.0], [126700.0, 1.0], [127500.0, 1.0], [178600.0, 7.0], [210600.0, 4.0], [100.0, 3.0], [160300.0, 1.0], [52900.0, 1.0], [52500.0, 2.0], [51700.0, 1.0], [57700.0, 1.0], [300.0, 1.0], [83400.0, 1.0], [105800.0, 4.0], [106600.0, 2.0], [109800.0, 2.0], [114600.0, 1.0], [115400.0, 1.0], [500.0, 3.0], [129000.0, 3.0], [137200.0, 1.0], [600.0, 4.0], [700.0, 1.0], [800.0, 1.0], [900.0, 1.0], [1200.0, 2.0], [1300.0, 3.0], [1400.0, 4.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 4.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [176500.0, 1.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 1.0], [3200.0, 2.0], [3300.0, 1.0], [211700.0, 7.0], [3400.0, 1.0], [3500.0, 3.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 4.0], [4200.0, 5.0], [4300.0, 3.0], [4400.0, 3.0], [4600.0, 2.0], [4500.0, 2.0], [4800.0, 2.0], [5000.0, 2.0], [4900.0, 1.0], [5100.0, 1.0], [78500.0, 1.0], [80100.0, 1.0], [5200.0, 3.0], [5300.0, 2.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [92100.0, 2.0], [6200.0, 1.0], [6600.0, 2.0], [105700.0, 2.0], [103300.0, 1.0], [6900.0, 1.0], [107300.0, 2.0], [106500.0, 1.0], [7100.0, 64.0], [7000.0, 3.0], [7400.0, 44.0], [7200.0, 4.0], [7300.0, 7.0], [118500.0, 1.0], [7500.0, 6.0], [7600.0, 45.0], [120100.0, 1.0], [7700.0, 3.0], [7900.0, 33.0], [7800.0, 4.0], [8000.0, 2.0], [8100.0, 42.0], [8400.0, 29.0], [8700.0, 51.0], [8300.0, 2.0], [8600.0, 4.0], [8200.0, 2.0], [8500.0, 2.0], [8900.0, 19.0], [9200.0, 53.0], [9100.0, 15.0], [9000.0, 7.0], [8800.0, 8.0], [9300.0, 8.0], [9600.0, 12.0], [9400.0, 10.0], [9700.0, 43.0], [9500.0, 6.0], [9800.0, 5.0], [10100.0, 11.0], [10200.0, 42.0], [10000.0, 8.0], [9900.0, 17.0], [10300.0, 11.0], [10400.0, 7.0], [10700.0, 25.0], [10600.0, 4.0], [10500.0, 2.0], [11000.0, 21.0], [10900.0, 6.0], [11200.0, 18.0], [10800.0, 3.0], [11100.0, 7.0], [11400.0, 7.0], [11600.0, 2.0], [11500.0, 9.0], [11300.0, 6.0], [11700.0, 38.0], [11900.0, 4.0], [12000.0, 7.0], [12200.0, 10.0], [12100.0, 5.0], [11800.0, 1.0], [12500.0, 12.0], [12300.0, 4.0], [12700.0, 8.0], [12600.0, 6.0], [12400.0, 1.0], [13100.0, 9.0], [13200.0, 27.0], [13300.0, 362.0], [12900.0, 6.0], [13000.0, 7.0], [12800.0, 11.0], [13400.0, 11.0], [13600.0, 2.0], [13700.0, 5.0], [13800.0, 76.0], [13500.0, 13.0], [13900.0, 8.0], [14100.0, 4.0], [14300.0, 78.0], [14200.0, 3.0], [14000.0, 4.0], [14400.0, 3.0], [14600.0, 2.0], [14500.0, 11.0], [14800.0, 4.0], [15300.0, 4.0], [15100.0, 8.0], [15200.0, 1.0], [15000.0, 1.0], [15800.0, 2.0], [15400.0, 1.0], [15600.0, 6.0], [16100.0, 4.0], [16200.0, 2.0], [16300.0, 6.0], [16000.0, 1.0], [17000.0, 1.0], [16400.0, 1.0], [18400.0, 1.0], [18200.0, 1.0], [19200.0, 2.0], [19000.0, 3.0], [18600.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [19600.0, 1.0], [19800.0, 1.0], [22600.0, 1.0], [24000.0, 1.0], [24800.0, 1.0], [26200.0, 4.0], [26400.0, 2.0], [30400.0, 2.0], [30600.0, 2.0], [52800.0, 2.0], [53200.0, 4.0], [54000.0, 3.0], [72800.0, 1.0], [92000.0, 1.0], [106400.0, 3.0], [105600.0, 1.0], [107200.0, 1.0], [153600.0, 4.0], [155200.0, 1.0], [164800.0, 1.0], [97500.0, 1.0], [106300.0, 1.0], [105500.0, 2.0], [107100.0, 1.0], [109500.0, 1.0], [121500.0, 2.0], [123900.0, 1.0], [132300.0, 1.0], [151500.0, 3.0], [41100.0, 1.0], [52700.0, 2.0], [53500.0, 1.0], [105400.0, 2.0], [106200.0, 5.0], [107000.0, 6.0], [115800.0, 1.0], [149200.0, 1.0], [168400.0, 1.0], [211600.0, 1.0], [106100.0, 3.0], [105300.0, 2.0], [106900.0, 2.0], [17100.0, 1.0], [19100.0, 1.0], [19500.0, 2.0], [19900.0, 1.0], [20500.0, 1.0], [21100.0, 1.0], [21700.0, 1.0], [24500.0, 1.0], [23900.0, 1.0], [26300.0, 4.0], [27300.0, 2.0], [29300.0, 1.0], [30700.0, 1.0], [29900.0, 1.0], [55800.0, 1.0], [61800.0, 1.0], [63800.0, 1.0], [89200.0, 1.0], [106000.0, 3.0], [106800.0, 2.0], [110000.0, 1.0], [123600.0, 1.0]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 211700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 18.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7880.0, "series": [{"data": [[1.0, 144.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 5550.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 18.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 7880.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.75, "minX": 1.5393948E12, "maxY": 497.8750740082891, "series": [{"data": [[1.53939492E12, 94.34163701067614], [1.53939522E12, 394.69235259778156], [1.53939552E12, 9.909090909090908], [1.53939534E12, 497.8750740082891], [1.53939498E12, 154.51837270341215], [1.53939528E12, 455.1822529224227], [1.5393951E12, 278.39999999999964], [1.5393954E12, 496.4529025191674], [1.53939504E12, 214.3786764705881], [1.53939486E12, 36.769436997319055], [1.53939516E12, 335.68275488069423], [1.53939546E12, 198.755376344086], [1.5393948E12, 2.75]], "isOverall": false, "label": "Thread Group-Testes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939552E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 144332.0, "series": [{"data": [[2.0, 586.0], [3.0, 708.0], [4.0, 598.0], [5.0, 610.0], [6.0, 3079.5], [8.0, 106016.0], [9.0, 590.0], [10.0, 1581.0], [11.0, 126485.0], [13.0, 583.0], [14.0, 581.0], [15.0, 3038.0], [16.0, 706.3333333333334], [18.0, 1472.0], [19.0, 912.0], [21.0, 1262.0], [23.0, 1331.0], [24.0, 144332.0], [25.0, 2124.0], [26.0, 1370.0], [27.0, 1453.0], [28.0, 1370.0], [29.0, 114944.0], [30.0, 1736.0], [32.0, 2666.0], [34.0, 2793.0], [35.0, 2308.5], [36.0, 2580.0], [38.0, 2449.0], [39.0, 119790.33333333333], [40.0, 2259.0], [41.0, 2130.0], [42.0, 2215.0], [43.0, 2151.0], [45.0, 2307.0], [46.0, 2372.0], [48.0, 2816.0], [49.0, 54047.0], [50.0, 3565.0], [51.0, 28516.5], [52.0, 2904.0], [53.0, 37138.333333333336], [55.0, 54042.0], [54.0, 54044.0], [56.0, 4047.0], [57.0, 3936.0], [58.0, 4071.5], [61.0, 4820.0], [63.0, 4300.5], [64.0, 3828.0], [66.0, 28415.5], [67.0, 4514.0], [68.0, 4594.0], [70.0, 4968.0], [71.0, 4997.0], [74.0, 29384.0], [75.0, 5694.0], [76.0, 80431.5], [77.0, 5070.0], [78.0, 5308.0], [79.0, 4930.0], [80.0, 5382.0], [81.0, 4773.0], [82.0, 5733.0], [83.0, 5888.0], [84.0, 5274.0], [85.0, 4896.0], [86.0, 4835.0], [88.0, 5512.0], [89.0, 5174.0], [91.0, 5932.0], [92.0, 6179.0], [93.0, 5972.0], [94.0, 5707.0], [95.0, 5620.0], [97.0, 6414.0], [98.0, 6046.5], [99.0, 17567.5], [100.0, 5730.0], [102.0, 5919.0], [103.0, 5855.0], [104.0, 6114.0], [106.0, 6736.5], [108.0, 7140.0], [109.0, 6816.0], [110.0, 7167.0], [111.0, 19896.0], [112.0, 8259.0], [113.0, 7634.0], [114.0, 13849.5], [115.0, 19843.0], [118.0, 10063.5], [119.0, 14052.0], [120.0, 14254.0], [121.0, 8064.0], [123.0, 8634.0], [122.0, 19609.0], [124.0, 8121.0], [125.0, 7770.0], [126.0, 7782.0], [127.0, 19497.0], [128.0, 8018.5], [129.0, 14066.0], [130.0, 13689.0], [131.0, 13598.0], [132.0, 8160.0], [133.0, 8634.0], [135.0, 9436.0], [136.0, 9056.0], [137.0, 9712.0], [139.0, 9933.0], [140.0, 15466.0], [142.0, 11242.0], [144.0, 14517.666666666666], [147.0, 11785.0], [148.0, 11378.0], [150.0, 12289.0], [151.0, 11782.0], [152.0, 11678.0], [153.0, 11564.0], [155.0, 12419.0], [156.0, 12306.0], [157.0, 11978.0], [158.0, 11277.5], [160.0, 11158.5], [162.0, 11625.0], [163.0, 11708.0], [164.0, 11637.0], [165.0, 10910.0], [167.0, 74340.33333333333], [168.0, 11683.0], [171.0, 11157.5], [178.0, 20340.0], [179.0, 10600.0], [182.0, 11324.0], [183.0, 14556.5], [180.0, 30132.0], [177.0, 18489.0], [176.0, 30278.0], [187.0, 115584.0], [185.0, 115596.0], [192.0, 10164.0], [195.0, 10234.0], [197.0, 30143.0], [200.0, 10431.5], [201.0, 20152.5], [204.0, 20476.0], [207.0, 11512.0], [206.0, 29604.0], [203.0, 29702.0], [208.0, 11490.0], [211.0, 10516.0], [220.0, 104578.5], [221.0, 136191.0], [224.0, 10594.0], [227.0, 9850.0], [229.0, 9749.0], [228.0, 28252.0], [234.0, 11415.0], [236.0, 9922.0], [238.0, 14455.0], [233.0, 27948.0], [240.0, 14700.5], [242.0, 11588.0], [243.0, 15591.0], [255.0, 1.0], [269.0, 14079.333333333334], [259.0, 11405.0], [260.0, 10568.0], [256.0, 11396.0], [264.0, 12189.5], [265.0, 8350.0], [267.0, 8212.75], [266.0, 18629.0], [268.0, 11107.0], [270.0, 37886.0], [271.0, 11801.0], [273.0, 18853.2], [272.0, 12941.0], [274.0, 12714.0], [275.0, 13307.0], [277.0, 12394.0], [278.0, 11378.0], [279.0, 13311.0], [280.0, 8683.666666666666], [286.0, 21844.666666666664], [287.0, 8044.571428571428], [284.0, 22101.5], [285.0, 13749.0], [281.0, 12577.5], [282.0, 4438.0], [289.0, 14111.5], [288.0, 32346.0], [290.0, 12800.0], [291.0, 11910.0], [292.0, 15376.5], [293.0, 11034.0], [294.0, 6516.75], [295.0, 6656.0], [296.0, 14092.2], [302.0, 10672.0], [303.0, 9816.0], [300.0, 8136.6], [301.0, 12795.857142857143], [297.0, 11593.5], [298.0, 9695.0], [299.0, 9727.0], [305.0, 11710.666666666666], [304.0, 12905.636363636366], [306.0, 13930.4], [307.0, 9876.25], [308.0, 9802.875], [309.0, 9727.0], [310.0, 10585.0], [311.0, 6144.0], [312.0, 10120.0], [318.0, 8292.09090909091], [319.0, 31343.75], [316.0, 10216.428571428572], [317.0, 7327.285714285715], [313.0, 22613.166666666668], [314.0, 8393.333333333334], [315.0, 7936.4], [321.0, 8540.636363636362], [320.0, 9164.4], [322.0, 10523.5], [323.0, 9199.0], [325.0, 9940.75], [326.0, 9873.285714285714], [327.0, 7677.4], [328.0, 7722.666666666667], [335.0, 24411.555555555555], [332.0, 11566.214285714284], [333.0, 11178.166666666666], [329.0, 10481.0], [330.0, 10370.0], [331.0, 13999.333333333334], [337.0, 8559.666666666666], [336.0, 7935.0], [338.0, 10416.083333333334], [339.0, 17760.727272727272], [340.0, 9631.0], [341.0, 9216.0], [342.0, 9503.375], [343.0, 35582.75], [344.0, 10921.5], [350.0, 10675.066666666668], [351.0, 11280.0], [348.0, 8214.5], [349.0, 10243.0], [345.0, 11859.666666666666], [346.0, 13457.749999999998], [347.0, 14062.666666666666], [353.0, 7563.4], [352.0, 10863.285714285716], [354.0, 7082.75], [355.0, 9608.833333333332], [356.0, 11006.923076923076], [357.0, 8873.666666666666], [358.0, 12416.666666666666], [359.0, 10681.0], [360.0, 9207.0], [366.0, 10873.0], [367.0, 4693.5], [364.0, 12008.133333333333], [365.0, 13208.8], [361.0, 7923.222222222223], [362.0, 9419.25], [363.0, 12329.750000000002], [369.0, 12159.0], [368.0, 7241.000000000001], [370.0, 10333.666666666666], [371.0, 11404.083333333334], [373.0, 13461.75], [372.0, 13411.0], [374.0, 14275.0], [375.0, 11711.75], [376.0, 11410.714285714286], [382.0, 12882.166666666666], [383.0, 11570.8], [380.0, 8064.25], [381.0, 13397.0], [377.0, 12031.25], [378.0, 13719.0], [379.0, 10406.78947368421], [385.0, 6682.666666666666], [384.0, 9895.333333333334], [386.0, 7338.333333333333], [387.0, 10795.0], [388.0, 9385.888888888889], [389.0, 11786.0], [390.0, 9526.157894736843], [391.0, 1.0], [392.0, 10279.25], [398.0, 12289.333333333334], [399.0, 13312.0], [396.0, 7494.333333333334], [397.0, 11266.0], [393.0, 10940.0], [394.0, 5773.714285714285], [395.0, 8893.285714285716], [401.0, 8703.0], [400.0, 7168.0], [402.0, 13294.2], [403.0, 10178.083333333334], [404.0, 9675.8], [405.0, 10233.333333333332], [406.0, 11821.0], [407.0, 17448.666666666668], [408.0, 4862.0], [414.0, 9249.214285714286], [415.0, 8703.6], [412.0, 11622.90909090909], [413.0, 9311.75], [409.0, 7782.2], [411.0, 8149.500000000001], [417.0, 8447.25], [416.0, 9432.375], [418.0, 7808.25], [419.0, 3711.5], [420.0, 9663.666666666666], [421.0, 9033.25], [422.0, 7764.333333333334], [423.0, 6726.0], [424.0, 10183.749999999998], [430.0, 6486.333333333333], [431.0, 10945.0], [428.0, 9889.777777777777], [429.0, 9556.333333333334], [425.0, 54783.666666666664], [426.0, 5696.0], [433.0, 7705.000000000001], [432.0, 8162.444444444444], [434.0, 10240.0], [435.0, 12657.222222222223], [436.0, 8703.0], [437.0, 7533.142857142857], [438.0, 10456.0], [439.0, 5120.0], [440.0, 7191.181818181817], [446.0, 11263.0], [447.0, 18688.0], [444.0, 13956.23076923077], [445.0, 13458.111111111111], [441.0, 12799.0], [442.0, 7481.666666666666], [449.0, 9762.5], [448.0, 27815.727272727272], [450.0, 60073.83333333333], [451.0, 8046.333333333333], [452.0, 10641.125], [453.0, 11793.357142857145], [454.0, 5312.25], [455.0, 6485.666666666666], [456.0, 12554.222222222223], [462.0, 11769.6], [463.0, 6951.6], [460.0, 9982.75], [461.0, 11279.8125], [457.0, 5227.5], [458.0, 9919.833333333334], [459.0, 9707.0], [465.0, 13310.6], [464.0, 9748.0], [466.0, 10313.142857142857], [467.0, 13567.5], [468.0, 6220.0], [469.0, 9573.0], [470.0, 32166.166666666664], [471.0, 11511.545454545454], [472.0, 10151.75], [478.0, 31589.4], [479.0, 8293.0], [476.0, 109567.0], [477.0, 6194.2], [473.0, 7838.375], [474.0, 23718.14285714286], [475.0, 10368.454545454544], [481.0, 9216.0], [480.0, 8575.0], [482.0, 11063.57142857143], [483.0, 9464.0], [484.0, 8447.333333333334], [485.0, 67071.5], [486.0, 12874.666666666666], [487.0, 13248.875], [488.0, 9728.0], [494.0, 10154.333333333332], [495.0, 8806.300000000001], [492.0, 11092.5], [493.0, 7797.625], [489.0, 10538.5], [490.0, 11528.0], [491.0, 8944.0], [497.0, 11008.0], [499.0, 12095.25], [500.0, 20577.485587583167]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[380.01658640984476, 15542.341894060994]], "isOverall": false, "label": "Login-Submit-Aggregated", "isController": false}, {"data": [[3.0, 1218.0], [5.0, 1253.0], [6.0, 1228.3333333333333], [7.0, 1234.5], [8.0, 36147.166666666664], [9.0, 27390.625], [10.0, 1245.3333333333333], [11.0, 47829.444444444445], [12.0, 1231.4285714285713], [13.0, 1234.75], [14.0, 1437.0], [15.0, 1230.3], [16.0, 1231.7142857142858], [17.0, 1698.6666666666667], [18.0, 1464.090909090909], [19.0, 1638.6923076923076], [20.0, 1640.909090909091], [21.0, 1622.6363636363635], [22.0, 1678.875], [23.0, 1689.0000000000002], [24.0, 42358.86666666667], [25.0, 2177.3846153846152], [26.0, 1966.5555555555557], [27.0, 1882.1818181818182], [28.0, 1998.4166666666672], [29.0, 15570.70588235294], [30.0, 2263.2999999999997], [31.0, 2067.375], [32.0, 2583.333333333333], [33.0, 2482.727272727273], [34.0, 2492.6666666666665], [35.0, 2551.333333333333], [36.0, 2619.1], [37.0, 2694.0], [38.0, 2762.8181818181815], [39.0, 16502.23076923077], [40.0, 2698.4666666666662], [41.0, 2777.545454545455], [42.0, 3208.0000000000005], [43.0, 33135.875], [44.0, 7243.0], [45.0, 6405.466666666667], [46.0, 6297.8125], [47.0, 6571.666666666666], [48.0, 3237.0], [49.0, 3117.0000000000005], [50.0, 3236.4999999999995], [51.0, 3405.666666666667], [52.0, 3585.0], [53.0, 3659.538461538462], [54.0, 3874.076923076923], [55.0, 3983.7500000000005], [56.0, 4040.4166666666665], [57.0, 4156.6], [58.0, 8081.846153846152], [59.0, 10000.666666666668], [60.0, 8234.307692307691], [61.0, 4632.333333333334], [62.0, 10648.75], [63.0, 4578.285714285715], [64.0, 4029.214285714286], [65.0, 4218.7692307692305], [66.0, 4284.4], [67.0, 4419.166666666667], [68.0, 18382.818181818184], [69.0, 8211.0], [70.0, 10414.555555555555], [71.0, 8659.642857142857], [72.0, 9414.666666666668], [73.0, 5358.888888888889], [74.0, 5421.076923076924], [75.0, 5442.583333333334], [76.0, 5342.2307692307695], [77.0, 7832.272727272726], [78.0, 7886.666666666666], [79.0, 9217.0], [80.0, 8502.25], [81.0, 8729.384615384615], [82.0, 6318.2307692307695], [83.0, 7194.666666666666], [84.0, 6829.076923076923], [85.0, 6605.294117647059], [86.0, 6316.5625], [87.0, 6944.25], [88.0, 6654.466666666667], [89.0, 6973.090909090909], [90.0, 6617.117647058823], [91.0, 7075.428571428572], [92.0, 6741.615384615385], [93.0, 6019.307692307693], [94.0, 18320.153846153844], [95.0, 6180.153846153846], [96.0, 6193.071428571428], [97.0, 6273.714285714285], [98.0, 7564.857142857144], [99.0, 6413.25], [100.0, 7947.454545454546], [101.0, 6001.615384615385], [102.0, 6191.705882352941], [103.0, 7718.8], [104.0, 6707.307692307692], [105.0, 7948.142857142859], [106.0, 6833.454545454545], [107.0, 6902.083333333333], [108.0, 8265.153846153846], [109.0, 7198.636363636364], [110.0, 8562.07142857143], [111.0, 7813.363636363637], [112.0, 9716.25], [113.0, 8042.363636363636], [114.0, 8349.416666666666], [115.0, 8577.000000000002], [116.0, 10051.2], [117.0, 10551.625000000002], [118.0, 10038.199999999999], [119.0, 9122.214285714286], [120.0, 8762.916666666668], [121.0, 8852.416666666666], [122.0, 8688.818181818182], [123.0, 8527.000000000002], [124.0, 8438.461538461537], [125.0, 9409.92857142857], [126.0, 9237.000000000002], [127.0, 8222.615384615385], [128.0, 9225.500000000002], [129.0, 8365.0], [130.0, 8471.81818181818], [131.0, 8674.357142857143], [132.0, 9883.833333333332], [133.0, 9111.2], [134.0, 9250.1], [135.0, 9553.583333333334], [136.0, 10640.727272727274], [137.0, 10685.307692307693], [138.0, 11370.444444444445], [139.0, 12522.5], [140.0, 10499.545454545454], [141.0, 12111.714285714288], [142.0, 18905.23076923077], [143.0, 24197.625], [144.0, 11470.285714285714], [145.0, 12974.25], [146.0, 11741.666666666668], [147.0, 21219.909090909092], [148.0, 14557.142857142857], [149.0, 11680.1], [150.0, 12079.666666666666], [151.0, 13182.92857142857], [152.0, 13719.909090909088], [153.0, 12017.111111111111], [154.0, 12883.81818181818], [155.0, 12142.692307692307], [156.0, 11963.333333333332], [157.0, 11886.454545454548], [158.0, 11815.222222222223], [159.0, 11573.90909090909], [160.0, 11373.0], [161.0, 12295.25], [162.0, 19399.583333333332], [163.0, 11843.714285714284], [164.0, 11512.555555555555], [165.0, 11302.333333333334], [166.0, 11254.416666666668], [167.0, 46975.041666666664], [168.0, 12822.266666666666], [169.0, 11242.0], [170.0, 12323.800000000001], [171.0, 11044.153846153846], [172.0, 12426.307692307691], [173.0, 11840.666666666668], [174.0, 12363.166666666666], [175.0, 12204.615384615385], [176.0, 10665.0], [177.0, 10717.545454545454], [178.0, 10766.5], [179.0, 12404.384615384615], [180.0, 11051.166666666668], [181.0, 12543.214285714286], [182.0, 13223.4], [183.0, 11285.545454545452], [184.0, 13009.133333333335], [185.0, 11504.07142857143], [186.0, 11456.583333333334], [187.0, 11408.333333333334], [188.0, 12909.25], [189.0, 12746.937500000002], [190.0, 11248.066666666668], [191.0, 12615.416666666666], [192.0, 11218.125000000002], [193.0, 11222.076923076922], [194.0, 11978.400000000001], [195.0, 12031.785714285714], [196.0, 12164.307692307691], [197.0, 10822.0], [198.0, 10913.0625], [199.0, 10989.785714285716], [200.0, 22413.88888888889], [201.0, 10925.846153846154], [202.0, 11409.250000000002], [203.0, 11011.23076923077], [204.0, 11125.090909090908], [205.0, 11566.142857142857], [206.0, 11499.272727272728], [207.0, 11757.285714285714], [208.0, 11647.384615384615], [209.0, 11345.2], [210.0, 11224.416666666668], [211.0, 11140.25], [212.0, 11114.235294117647], [213.0, 11010.09090909091], [214.0, 10880.214285714288], [215.0, 10785.214285714284], [216.0, 9806.384615384613], [217.0, 9948.529411764708], [218.0, 10534.666666666666], [219.0, 10518.23076923077], [220.0, 46387.52380952381], [221.0, 10338.199999999999], [222.0, 10584.777777777776], [223.0, 10478.57142857143], [224.0, 11242.2], [225.0, 10471.923076923076], [226.0, 19938.90909090909], [227.0, 10410.6], [228.0, 10307.733333333334], [229.0, 10457.333333333332], [230.0, 12062.874999999998], [231.0, 10270.363636363638], [232.0, 10290.428571428572], [233.0, 10236.3125], [234.0, 9574.92857142857], [235.0, 17437.73333333333], [236.0, 11351.400000000001], [237.0, 11039.615384615385], [238.0, 10588.666666666664], [239.0, 10728.583333333334], [240.0, 10825.083333333332], [241.0, 12788.0], [242.0, 12116.375], [243.0, 12555.142857142855], [244.0, 11659.923076923076], [245.0, 12095.222222222223], [246.0, 12047.090909090908], [247.0, 12687.0], [248.0, 12367.615384615383], [249.0, 12656.461538461537], [250.0, 13219.666666666666], [251.0, 16553.0], [252.0, 12979.571428571428], [253.0, 12487.583333333336], [254.0, 12518.333333333332], [255.0, 18510.2], [257.0, 18437.92857142857], [256.0, 11983.384615384613], [258.0, 12337.374999999998], [259.0, 11314.583333333334], [260.0, 11233.600000000002], [261.0, 17915.714285714286], [262.0, 10131.785714285714], [263.0, 19150.727272727276], [264.0, 11113.666666666668], [270.0, 10547.812500000002], [271.0, 11695.000000000002], [268.0, 11056.727272727272], [269.0, 11533.083333333334], [265.0, 17913.928571428572], [266.0, 10286.0], [267.0, 10437.076923076924], [273.0, 13516.666666666668], [272.0, 11845.9], [274.0, 11926.333333333332], [275.0, 11834.375000000002], [276.0, 12341.333333333334], [277.0, 12430.692307692307], [278.0, 12703.000000000002], [279.0, 12006.2], [280.0, 12664.538461538461], [286.0, 17558.058823529413], [287.0, 12151.142857142859], [284.0, 28108.3125], [285.0, 12156.153846153846], [281.0, 12589.23076923077], [282.0, 24266.684210526313], [283.0, 12904.153846153846], [289.0, 12725.312499999998], [288.0, 15211.857142857143], [290.0, 14245.875], [291.0, 11550.500000000002], [292.0, 12664.944444444443], [293.0, 11265.09090909091], [294.0, 17517.75], [295.0, 10080.666666666666], [296.0, 16646.5], [302.0, 15375.937499999996], [303.0, 10514.625], [300.0, 10046.142857142857], [301.0, 9300.052631578947], [297.0, 10149.4], [298.0, 17108.9], [299.0, 11623.692307692309], [305.0, 9481.842105263158], [304.0, 10157.647058823532], [306.0, 10773.750000000002], [307.0, 10600.0], [308.0, 10247.916666666666], [309.0, 9428.066666666668], [310.0, 10480.736842105265], [311.0, 10429.214285714286], [312.0, 10015.125], [318.0, 10840.478260869566], [319.0, 17001.888888888894], [316.0, 8970.08695652174], [317.0, 15971.39130434783], [313.0, 14194.199999999995], [314.0, 8629.555555555555], [315.0, 16782.533333333333], [321.0, 13259.076923076926], [320.0, 11090.35294117647], [322.0, 9958.461538461539], [323.0, 11235.764705882351], [324.0, 9886.642857142857], [325.0, 10328.550000000001], [326.0, 9865.952380952378], [327.0, 20439.66666666667], [328.0, 10215.411764705881], [334.0, 11683.999999999998], [335.0, 11300.291666666668], [332.0, 10416.41935483871], [333.0, 11008.952380952382], [329.0, 17098.25], [330.0, 11285.692307692309], [331.0, 11737.125], [337.0, 11193.133333333333], [336.0, 10696.291666666668], [338.0, 12250.95238095238], [339.0, 10624.608695652174], [340.0, 10410.375000000002], [341.0, 9315.631578947368], [342.0, 10335.666666666664], [343.0, 9414.999999999998], [344.0, 10119.526315789473], [350.0, 11382.451612903225], [351.0, 10323.125], [348.0, 10105.999999999998], [349.0, 10354.285714285717], [345.0, 18390.47619047619], [346.0, 9174.708333333336], [347.0, 11810.0], [353.0, 10100.555555555557], [352.0, 11327.619047619048], [354.0, 8649.066666666668], [355.0, 10769.000000000002], [356.0, 11403.6], [357.0, 10720.0], [358.0, 11139.500000000002], [359.0, 9899.684210526313], [360.0, 7817.611111111111], [366.0, 9660.423076923073], [367.0, 10571.736842105263], [364.0, 10911.000000000002], [365.0, 10743.25], [361.0, 9590.434782608696], [362.0, 9269.764705882353], [363.0, 10218.033333333335], [369.0, 10395.8], [368.0, 10122.055555555555], [370.0, 10108.70588235294], [371.0, 10581.214285714286], [372.0, 11450.071428571428], [373.0, 11038.090909090908], [374.0, 11275.357142857143], [375.0, 9852.05263157895], [376.0, 11686.79166666667], [382.0, 11612.733333333332], [383.0, 10352.56], [380.0, 11021.894736842101], [381.0, 10825.620689655174], [377.0, 11283.592592592595], [378.0, 11697.94117647059], [379.0, 11127.5625], [385.0, 10401.18181818182], [384.0, 11180.842105263158], [386.0, 10793.076923076922], [387.0, 10586.53846153846], [388.0, 10173.136363636364], [389.0, 11473.70588235294], [390.0, 11443.875], [391.0, 10807.230769230768], [392.0, 10640.9375], [398.0, 12676.650000000001], [399.0, 12131.076923076922], [396.0, 9590.368421052632], [397.0, 12250.999999999998], [393.0, 10616.814814814818], [394.0, 11434.666666666668], [395.0, 11216.1875], [401.0, 11021.866666666667], [400.0, 11473.833333333332], [402.0, 12250.666666666666], [403.0, 10538.535714285712], [404.0, 11673.263157894737], [405.0, 11669.900000000001], [406.0, 11471.249999999998], [407.0, 14442.8], [408.0, 12103.875], [414.0, 10243.48275862069], [415.0, 11023.29411764706], [412.0, 12186.095238095239], [413.0, 12148.25], [409.0, 10367.4], [410.0, 10676.533333333335], [411.0, 10072.960000000001], [417.0, 10880.157894736842], [416.0, 10717.888888888889], [418.0, 10146.318181818182], [419.0, 10942.666666666666], [420.0, 9882.058823529413], [421.0, 9391.08], [422.0, 9190.11111111111], [423.0, 11003.444444444445], [424.0, 10414.266666666668], [430.0, 10669.947368421053], [431.0, 10289.578947368422], [428.0, 10482.972222222223], [429.0, 11687.176470588236], [425.0, 20690.239999999998], [426.0, 10741.77777777778], [427.0, 11095.333333333334], [433.0, 10121.133333333333], [432.0, 9549.833333333336], [434.0, 10650.909090909092], [435.0, 9825.17857142857], [436.0, 10018.666666666666], [437.0, 10059.962962962962], [438.0, 10767.636363636364], [439.0, 10475.333333333334], [440.0, 9457.545454545454], [446.0, 9965.944444444445], [447.0, 11138.4375], [444.0, 12336.09090909091], [445.0, 11253.0], [441.0, 11066.450000000003], [442.0, 10924.1875], [443.0, 10879.846153846154], [449.0, 10136.4375], [448.0, 9586.038461538465], [450.0, 32412.60714285713], [451.0, 9466.0], [452.0, 14825.307692307693], [453.0, 11952.166666666666], [454.0, 10374.052631578947], [455.0, 9831.374999999998], [456.0, 11923.777777777777], [462.0, 11200.727272727274], [463.0, 9729.736842105263], [460.0, 10914.882352941178], [461.0, 10800.783783783785], [457.0, 10824.437500000002], [458.0, 10899.923076923078], [459.0, 10764.235294117647], [465.0, 11756.230769230768], [464.0, 10720.6], [466.0, 17743.181818181816], [467.0, 10350.699999999999], [468.0, 8786.35483870968], [469.0, 9380.294117647058], [470.0, 20912.58333333333], [471.0, 10257.066666666666], [472.0, 10223.882352941175], [478.0, 16461.407407407405], [479.0, 10283.4375], [476.0, 15319.470588235296], [477.0, 8361.111111111113], [473.0, 8832.931034482759], [474.0, 13292.384615384615], [475.0, 11802.10344827586], [481.0, 10554.999999999998], [480.0, 9282.541666666666], [482.0, 10582.51515151515], [483.0, 16938.9375], [484.0, 9284.727272727274], [485.0, 16174.21052631579], [486.0, 10382.647058823528], [487.0, 10827.718750000002], [488.0, 10104.222222222223], [494.0, 10037.916666666668], [495.0, 11668.718750000002], [492.0, 10430.07142857143], [493.0, 10209.655172413793], [489.0, 10212.125000000002], [490.0, 10424.4], [491.0, 10031.571428571426], [496.0, 10183.529411764706], [497.0, 9914.222222222223], [498.0, 10387.333333333332], [499.0, 10309.47619047619], [500.0, 14665.392405063298]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[330.3946128635811, 11855.84104875047]], "isOverall": false, "label": "Visualizar-Alunos-Aggregated", "isController": false}, {"data": [[2.0, 35.0], [3.0, 36.0], [4.0, 44.0], [5.0, 26.0], [6.0, 35.0], [7.0, 105361.0], [8.0, 28.0], [9.0, 30.0], [10.0, 37.0], [11.0, 105285.75], [12.0, 83974.5], [13.0, 22.0], [14.0, 37.0], [15.0, 48.0], [16.0, 89.0], [17.0, 104.0], [18.0, 183.0], [19.0, 390.0], [20.0, 584.0], [21.0, 616.0], [22.0, 897.0], [23.0, 559.0], [24.0, 125649.25], [25.0, 686.0], [26.0, 948.0], [28.0, 988.5], [29.0, 799.0], [31.0, 1206.0], [32.0, 1351.0], [33.0, 1316.0], [34.0, 1362.0], [35.0, 1217.0], [36.0, 1487.0], [37.0, 90218.5], [38.0, 119608.66666666667], [39.0, 143245.2], [40.0, 1623.0], [41.0, 1657.0], [42.0, 1879.0], [43.0, 89226.0], [44.0, 1909.0], [45.0, 1953.0], [46.0, 1661.0], [47.0, 1946.0], [49.0, 1081.5], [48.0, 54045.0], [50.0, 2298.0], [52.0, 2461.0], [53.0, 2633.0], [54.0, 2887.5], [56.0, 3035.0], [57.0, 37115.666666666664], [58.0, 3359.5], [60.0, 3156.0], [61.0, 3307.0], [62.0, 3225.0], [63.0, 53284.0], [64.0, 28147.5], [65.0, 3299.0], [66.0, 28365.0], [67.0, 3030.0], [68.0, 81927.5], [69.0, 3562.0], [71.0, 4189.0], [72.0, 4140.0], [73.0, 4161.0], [74.0, 28774.0], [75.0, 4265.0], [76.0, 79887.0], [77.0, 4237.0], [78.0, 4074.0], [79.0, 4154.0], [80.0, 4369.0], [81.0, 4471.0], [82.0, 4212.0], [83.0, 4329.0], [84.0, 4432.0], [85.0, 4635.0], [86.0, 4559.0], [87.0, 4598.0], [88.0, 4296.0], [89.0, 4392.0], [90.0, 4682.0], [91.0, 4891.0], [92.0, 4865.0], [94.0, 5019.0], [95.0, 84927.0], [93.0, 52503.0], [96.0, 17964.0], [97.0, 18005.0], [98.0, 5205.0], [99.0, 5047.0], [100.0, 5134.0], [101.0, 17301.0], [102.0, 29101.0], [103.0, 5508.0], [104.0, 29263.0], [105.0, 5820.0], [106.0, 29246.5], [107.0, 28644.5], [109.0, 13093.0], [110.0, 6649.0], [111.0, 6943.0], [113.0, 13501.5], [114.0, 7463.0], [116.0, 7859.5], [117.0, 7502.0], [118.0, 7754.0], [119.0, 7557.0], [120.0, 7543.0], [121.0, 13420.0], [122.0, 7364.0], [123.0, 13438.0], [124.0, 11137.666666666668], [126.0, 7007.0], [127.0, 7032.0], [128.0, 7097.0], [129.0, 7286.0], [130.0, 7331.0], [131.0, 7611.0], [132.0, 7996.0], [134.0, 14645.5], [135.0, 8470.0], [133.0, 19079.0], [136.0, 8723.0], [137.0, 8954.0], [139.0, 9233.0], [140.0, 9342.0], [141.0, 9685.0], [142.0, 9887.0], [144.0, 10158.0], [145.0, 10357.0], [146.0, 16099.5], [147.0, 10741.0], [149.0, 14692.0], [150.0, 15528.5], [151.0, 10646.0], [152.0, 10950.0], [154.0, 11207.0], [156.0, 11606.5], [160.0, 10632.0], [167.0, 106409.33333333333], [168.0, 11125.5], [171.0, 14611.0], [172.0, 9441.0], [169.0, 19102.0], [182.0, 10193.0], [185.0, 11654.0], [189.0, 10629.0], [190.0, 62761.0], [191.0, 26258.0], [186.0, 115593.0], [193.0, 9490.0], [195.0, 9779.0], [197.0, 10025.0], [201.0, 10089.0], [211.0, 10253.0], [213.0, 11492.0], [217.0, 9294.0], [219.0, 9737.0], [220.0, 105494.75], [223.0, 24597.0], [224.0, 10932.0], [226.0, 9155.0], [227.0, 62541.0], [229.0, 61838.0], [231.0, 9028.0], [225.0, 12699.0], [232.0, 10816.5], [233.0, 13223.0], [234.0, 7230.0], [235.0, 7510.0], [242.0, 13166.0], [244.0, 26234.0], [247.0, 29710.5], [245.0, 15101.0], [240.0, 18280.0], [249.0, 12953.5], [251.0, 41861.0], [253.0, 75633.0], [254.0, 11299.0], [255.0, 40638.0], [258.0, 10550.0], [257.0, 62204.75], [259.0, 72459.0], [268.0, 106036.0], [269.0, 10562.0], [270.0, 58796.5], [260.0, 11916.333333333334], [261.0, 109135.66666666667], [262.0, 43890.0], [265.0, 50521.833333333336], [266.0, 19730.0], [267.0, 18343.5], [273.0, 6955.5], [272.0, 56846.5], [274.0, 30221.5], [275.0, 11537.0], [284.0, 66413.5], [285.0, 13804.0], [286.0, 36237.0], [287.0, 5471.666666666666], [276.0, 11511.333333333334], [277.0, 12628.5], [278.0, 40196.33333333333], [279.0, 8866.333333333332], [280.0, 34782.625], [281.0, 12339.0], [282.0, 52956.6], [283.0, 7935.0], [289.0, 10900.0], [288.0, 70380.8], [290.0, 42871.666666666664], [291.0, 13087.0], [292.0, 13735.5], [293.0, 8880.0], [294.0, 41976.33333333333], [295.0, 14888.5], [296.0, 37184.4], [302.0, 74464.75], [303.0, 8768.0], [300.0, 48980.0], [301.0, 11160.142857142857], [297.0, 12224.0], [298.0, 9351.4], [299.0, 9324.714285714284], [305.0, 13462.0], [304.0, 21371.833333333332], [306.0, 24471.428571428572], [307.0, 9656.0], [308.0, 9616.714285714286], [309.0, 7397.5], [310.0, 11087.0], [311.0, 106529.0], [312.0, 9564.333333333334], [318.0, 12297.266666666666], [319.0, 9534.333333333334], [316.0, 8123.0], [317.0, 27555.5], [313.0, 21206.0], [314.0, 7743.2], [315.0, 27154.666666666668], [321.0, 19982.533333333333], [320.0, 8903.0], [322.0, 9271.0], [323.0, 12199.75], [325.0, 10306.400000000001], [326.0, 9973.0], [327.0, 26287.333333333332], [328.0, 10250.428571428572], [335.0, 23899.444444444445], [332.0, 11320.22222222222], [333.0, 10667.666666666666], [329.0, 30438.8], [330.0, 11733.0], [331.0, 1.0], [338.0, 13182.57142857143], [337.0, 9750.0], [339.0, 19739.750000000004], [348.0, 8702.666666666666], [349.0, 67092.0], [350.0, 11080.105263157895], [340.0, 9894.727272727272], [341.0, 10766.0], [342.0, 9736.833333333332], [343.0, 7641.25], [344.0, 10920.2], [345.0, 9776.75], [346.0, 10465.2], [347.0, 7167.0], [353.0, 9669.2], [352.0, 10304.571428571428], [354.0, 8448.75], [355.0, 13009.25], [356.0, 13644.199999999999], [357.0, 12401.6], [358.0, 8654.666666666668], [359.0, 7676.0], [360.0, 8175.000000000001], [366.0, 6734.0], [367.0, 11774.666666666666], [364.0, 10872.23076923077], [365.0, 13229.333333333332], [361.0, 9432.888888888889], [362.0, 10819.666666666666], [363.0, 11129.625], [369.0, 8365.0], [368.0, 9977.857142857141], [370.0, 9340.75], [371.0, 11200.42857142857], [372.0, 16476.0], [374.0, 10951.0], [375.0, 6655.5], [376.0, 13313.09090909091], [382.0, 9511.166666666668], [383.0, 12057.833333333334], [380.0, 11314.0], [381.0, 9166.8], [377.0, 12253.500000000002], [378.0, 10646.0], [379.0, 9672.1875], [385.0, 9534.5], [384.0, 6053.333333333333], [386.0, 6560.0], [387.0, 8575.0], [388.0, 10276.714285714284], [389.0, 10275.714285714286], [390.0, 11978.4], [391.0, 9213.0], [392.0, 10068.333333333334], [398.0, 10841.833333333334], [399.0, 13357.0], [396.0, 8391.333333333334], [397.0, 12122.5], [393.0, 11806.0], [394.0, 9946.999999999998], [395.0, 13312.0], [401.0, 13150.0], [400.0, 8435.666666666666], [402.0, 9883.333333333334], [403.0, 12916.5], [404.0, 11347.222222222223], [405.0, 11320.555555555555], [406.0, 10523.5], [407.0, 15616.636363636364], [408.0, 10493.5], [414.0, 10604.999999999998], [415.0, 8449.0], [412.0, 8412.833333333332], [413.0, 8843.461538461539], [409.0, 10915.4], [410.0, 9686.666666666666], [411.0, 10922.5], [417.0, 8136.25], [416.0, 11273.75], [418.0, 8533.666666666666], [419.0, 7375.0], [420.0, 7078.25], [421.0, 7551.5], [422.0, 10613.285714285716], [423.0, 9718.0], [424.0, 7737.0], [430.0, 11135.5], [431.0, 10882.0], [428.0, 9616.07142857143], [429.0, 13311.0], [425.0, 25876.444444444445], [426.0, 7550.75], [427.0, 9211.5], [433.0, 9400.18181818182], [432.0, 5374.5], [434.0, 10238.0], [435.0, 11647.090909090908], [436.0, 8702.5], [437.0, 7801.4], [438.0, 9791.0], [439.0, 8281.833333333334], [440.0, 7710.357142857143], [446.0, 10720.666666666666], [447.0, 13642.0], [444.0, 9874.166666666666], [445.0, 11322.636363636364], [441.0, 9132.0], [442.0, 9090.0], [443.0, 9140.0], [449.0, 13753.0], [448.0, 7670.5], [450.0, 39167.35294117646], [451.0, 7168.0], [452.0, 22631.14285714286], [453.0, 9939.333333333336], [454.0, 30906.92307692307], [455.0, 9447.0], [456.0, 7988.0], [462.0, 12415.75], [463.0, 8363.0], [460.0, 11900.4], [461.0, 10319.07142857143], [457.0, 7680.0], [458.0, 13361.0], [459.0, 11314.0], [465.0, 11238.1], [464.0, 12128.0], [466.0, 11816.666666666666], [467.0, 12445.666666666666], [468.0, 9325.714285714286], [469.0, 9286.0], [470.0, 7059.2], [471.0, 12195.09090909091], [472.0, 5995.0], [478.0, 8404.0], [479.0, 9354.6], [476.0, 59903.0], [477.0, 7807.0], [473.0, 7297.0], [474.0, 44600.81818181818], [475.0, 12031.833333333332], [481.0, 13553.0], [480.0, 8537.0], [482.0, 9010.400000000001], [492.0, 12431.142857142857], [493.0, 9716.0], [494.0, 8386.666666666666], [495.0, 9845.000000000002], [484.0, 8289.166666666666], [485.0, 129023.33333333333], [486.0, 14588.666666666666], [487.0, 28960.571428571424], [488.0, 6485.333333333334], [490.0, 12014.25], [491.0, 11114.1], [496.0, 9652.0], [497.0, 10842.0], [498.0, 9325.5], [499.0, 13823.0], [500.0, 22782.16404494381], [1.0, 92.0]], "isOverall": false, "label": "Login-Open", "isController": false}, {"data": [[376.3889739663096, 18901.010209290453]], "isOverall": false, "label": "Login-Open-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 35.95, "minX": 1.5393948E12, "maxY": 1109015.4, "series": [{"data": [[1.53939492E12, 1058438.45], [1.53939522E12, 1003900.4], [1.53939552E12, 60.5], [1.53939534E12, 1031902.1833333333], [1.53939498E12, 992918.6333333333], [1.53939528E12, 1102964.5333333334], [1.5393951E12, 1012238.3333333334], [1.5393954E12, 1100562.55], [1.53939504E12, 1109015.4], [1.53939486E12, 912266.2333333333], [1.53939516E12, 1103609.6333333333], [1.53939546E12, 264182.6666666667], [1.5393948E12, 1828.9833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.53939492E12, 3685.35], [1.53939522E12, 6922.483333333334], [1.53939552E12, 42.516666666666666], [1.53939534E12, 6893.016666666666], [1.53939498E12, 3353.75], [1.53939528E12, 7647.016666666666], [1.5393951E12, 4407.466666666666], [1.5393954E12, 7452.45], [1.53939504E12, 3530.0], [1.53939486E12, 3274.0833333333335], [1.53939516E12, 7474.716666666666], [1.53939546E12, 1496.0333333333333], [1.5393948E12, 35.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939552E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 51.75, "minX": 1.5393948E12, "maxY": 210624.75, "series": [{"data": [[1.53939492E12, 6246.098039215686], [1.53939522E12, 9976.205787781355], [1.53939552E12, 210624.0], [1.53939534E12, 14744.611320754722], [1.53939498E12, 10479.95238095238], [1.53939528E12, 12837.710691823904], [1.5393951E12, 12485.965217391307], [1.5393954E12, 24744.8984962406], [1.53939504E12, 10492.947368421052], [1.53939486E12, 2286.034482758621], [1.53939516E12, 11515.856304985331], [1.53939546E12, 53635.973684210534], [1.5393948E12, 630.6666666666666]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939492E12, 6381.706122448976], [1.53939522E12, 10911.236380424742], [1.53939552E12, 210624.75], [1.53939534E12, 11936.14112554113], [1.53939498E12, 10762.266763848398], [1.53939528E12, 11647.379170056947], [1.5393951E12, 13705.265917602994], [1.5393954E12, 16150.435857805243], [1.53939504E12, 10850.243839169889], [1.53939486E12, 2732.7484076433093], [1.53939516E12, 11194.66232638889], [1.53939546E12, 35870.96888888888], [1.5393948E12, 1218.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939492E12, 5344.754385964914], [1.53939522E12, 10357.137931034486], [1.53939552E12, 210603.66666666666], [1.53939534E12, 17435.840148698888], [1.53939498E12, 9613.588235294119], [1.53939528E12, 13832.913432835812], [1.5393951E12, 34190.46341463415], [1.5393954E12, 26471.488721804504], [1.53939504E12, 14146.884615384612], [1.53939486E12, 1350.7999999999997], [1.53939516E12, 14115.920227920238], [1.53939546E12, 71593.61971830986], [1.5393948E12, 51.75]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939552E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 51.5, "minX": 1.5393948E12, "maxY": 210624.75, "series": [{"data": [[1.53939492E12, 6246.098039215686], [1.53939522E12, 9976.202572347269], [1.53939552E12, 210624.0], [1.53939534E12, 14744.611320754722], [1.53939498E12, 10479.95238095238], [1.53939528E12, 12837.704402515721], [1.5393951E12, 12485.965217391307], [1.5393954E12, 24744.879699248137], [1.53939504E12, 10492.947368421052], [1.53939486E12, 2286.034482758621], [1.53939516E12, 11515.856304985331], [1.53939546E12, 53635.973684210534], [1.5393948E12, 630.6666666666666]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939492E12, 6381.191836734691], [1.53939522E12, 10910.926131117263], [1.53939552E12, 210624.75], [1.53939534E12, 11935.793073593073], [1.53939498E12, 10761.817784256553], [1.53939528E12, 11647.048006509363], [1.5393951E12, 13704.82646691638], [1.5393954E12, 16150.057959814543], [1.53939504E12, 10849.699092088194], [1.53939486E12, 2732.2691082802517], [1.53939516E12, 11194.228298611113], [1.53939546E12, 35870.52444444444], [1.5393948E12, 1217.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939492E12, 5344.754385964914], [1.53939522E12, 10357.134796238239], [1.53939552E12, 210603.66666666666], [1.53939534E12, 17435.840148698888], [1.53939498E12, 9613.588235294119], [1.53939528E12, 13832.913432835812], [1.5393951E12, 34190.457317073175], [1.5393954E12, 26471.48496240601], [1.53939504E12, 14146.884615384612], [1.53939486E12, 1350.7], [1.53939516E12, 14115.917378917376], [1.53939546E12, 71593.59154929576], [1.5393948E12, 51.5]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939552E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5393948E12, "maxY": 12.25, "series": [{"data": [[1.53939492E12, 0.7647058823529412], [1.53939522E12, 0.5755627009646304], [1.53939552E12, 0.0], [1.53939534E12, 0.5207547169811327], [1.53939498E12, 0.8095238095238095], [1.53939528E12, 0.5345911949685538], [1.5393951E12, 0.5999999999999999], [1.5393954E12, 0.44736842105263147], [1.53939504E12, 1.2105263157894737], [1.53939486E12, 0.17241379310344826], [1.53939516E12, 0.6099706744868033], [1.53939546E12, 0.5394736842105264], [1.5393948E12, 0.0]], "isOverall": false, "label": "Login-Submit", "isController": false}, {"data": [[1.53939492E12, 0.7034013605442181], [1.53939522E12, 0.43859649122807004], [1.53939552E12, 0.5], [1.53939534E12, 0.44155844155844165], [1.53939498E12, 0.5072886297376094], [1.53939528E12, 0.40276647681041533], [1.5393951E12, 0.48064918851435723], [1.5393954E12, 0.43663060278207094], [1.53939504E12, 0.551232166018158], [1.53939486E12, 0.70859872611465], [1.53939516E12, 0.5355902777777773], [1.53939546E12, 0.4177777777777778], [1.5393948E12, 0.0]], "isOverall": false, "label": "Visualizar-Alunos", "isController": false}, {"data": [[1.53939492E12, 0.894736842105263], [1.53939522E12, 0.5799373040752352], [1.53939552E12, 0.6666666666666666], [1.53939534E12, 0.475836431226766], [1.53939498E12, 1.3823529411764706], [1.53939528E12, 0.525373134328358], [1.5393951E12, 0.7500000000000001], [1.5393954E12, 0.5112781954887217], [1.53939504E12, 1.1153846153846154], [1.53939486E12, 1.2833333333333332], [1.53939516E12, 0.5327635327635328], [1.53939546E12, 0.33802816901408467], [1.5393948E12, 12.25]], "isOverall": false, "label": "Login-Open", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939552E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.5393948E12, "maxY": 116832.0, "series": [{"data": [[1.5393951E12, 57763.0], [1.53939492E12, 12263.0], [1.5393954E12, 17642.0], [1.53939522E12, 20896.0], [1.53939504E12, 61838.0], [1.53939486E12, 7760.0], [1.53939534E12, 18543.0], [1.53939516E12, 17760.0], [1.53939498E12, 18035.0], [1.53939546E12, 116832.0], [1.5393948E12, 1218.0], [1.53939528E12, 17703.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5393951E12, 9268.0], [1.53939492E12, 3030.0], [1.5393954E12, 9138.0], [1.53939522E12, 9193.0], [1.53939504E12, 9028.0], [1.53939486E12, 20.0], [1.53939534E12, 9221.0], [1.53939516E12, 8621.0], [1.53939498E12, 7007.0], [1.53939546E12, 9386.0], [1.5393948E12, 35.0], [1.53939528E12, 8854.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5393951E12, 12140.7], [1.53939492E12, 7895.600000000002], [1.5393954E12, 12113.599999999999], [1.53939522E12, 12131.1], [1.53939504E12, 11396.0], [1.53939486E12, 4240.700000000001], [1.53939534E12, 12104.3], [1.53939516E12, 11948.4], [1.53939498E12, 11392.0], [1.53939546E12, 12198.7], [1.5393948E12, 1218.0], [1.53939528E12, 12038.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5393951E12, 14556.940000000006], [1.53939492E12, 8893.640000000003], [1.5393954E12, 14828.099999999999], [1.53939522E12, 14766.0], [1.53939504E12, 12370.129999999994], [1.53939486E12, 5288.339999999998], [1.53939534E12, 14827.150000000001], [1.53939516E12, 14487.199999999983], [1.53939498E12, 12311.650000000001], [1.53939546E12, 23458.68999999988], [1.5393948E12, 1218.0], [1.53939528E12, 14748.15]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5393951E12, 12528.85], [1.53939492E12, 8648.8], [1.5393954E12, 12427.0], [1.53939522E12, 12488.05], [1.53939504E12, 11644.65], [1.53939486E12, 4452.65], [1.53939534E12, 12439.599999999999], [1.53939516E12, 12484.099999999999], [1.53939498E12, 11707.75], [1.53939546E12, 12647.699999999999], [1.5393948E12, 1218.0], [1.53939528E12, 12454.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939546E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.5, "minX": 0.0, "maxY": 210688.0, "series": [{"data": [[0.0, 339.0], [18.0, 11920.5], [12.0, 7996.0], [6.0, 17756.0], [13.0, 10765.5], [14.0, 6058.0], [28.0, 11464.0], [30.0, 10726.5], [31.0, 10631.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 210688.0], [18.0, 13311.0], [12.0, 2.0], [6.0, 54043.0], [13.0, 7973.5], [14.0, 1.5], [28.0, 11777.0], [30.0, 12800.0], [31.0, 10240.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 210688.0, "series": [{"data": [[0.0, 339.0], [18.0, 11920.0], [12.0, 7996.0], [6.0, 17756.0], [13.0, 10765.5], [14.0, 6057.0], [28.0, 11463.0], [30.0, 10725.5], [31.0, 10630.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[0.0, 210688.0], [18.0, 13311.0], [12.0, 2.0], [6.0, 54043.0], [13.0, 7973.5], [14.0, 1.0], [28.0, 11777.0], [30.0, 12800.0], [31.0, 10240.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 31.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.5393948E12, "maxY": 32.36666666666667, "series": [{"data": [[1.5393951E12, 19.0], [1.53939492E12, 15.05], [1.5393954E12, 28.483333333333334], [1.53939522E12, 29.55], [1.53939504E12, 14.6], [1.53939486E12, 13.433333333333334], [1.53939534E12, 28.416666666666668], [1.53939516E12, 31.733333333333334], [1.53939498E12, 13.7], [1.5393948E12, 0.2], [1.53939528E12, 32.36666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5393954E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5393948E12, "maxY": 17.383333333333333, "series": [{"data": [[1.5393951E12, 12.016666666666667], [1.53939492E12, 13.1], [1.5393954E12, 12.85], [1.53939522E12, 11.95], [1.53939504E12, 13.05], [1.53939486E12, 11.383333333333333], [1.53939534E12, 12.15], [1.53939516E12, 13.266666666666667], [1.53939498E12, 11.983333333333333], [1.53939546E12, 3.7], [1.5393948E12, 0.08333333333333333], [1.53939528E12, 13.166666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5393951E12, 0.25], [1.53939492E12, 0.85], [1.5393954E12, 0.16666666666666666], [1.53939522E12, 0.4], [1.53939504E12, 0.31666666666666665], [1.53939486E12, 0.9166666666666666], [1.53939534E12, 0.38333333333333336], [1.53939516E12, 0.65], [1.53939498E12, 0.7], [1.53939546E12, 0.05], [1.5393948E12, 0.05], [1.53939528E12, 0.6]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.5393951E12, 5.55], [1.53939492E12, 0.1], [1.5393954E12, 17.233333333333334], [1.53939522E12, 16.066666666666666], [1.53939504E12, 0.23333333333333334], [1.53939552E12, 0.18333333333333332], [1.53939486E12, 0.08333333333333333], [1.53939534E12, 15.516666666666667], [1.53939516E12, 16.5], [1.53939498E12, 0.016666666666666666], [1.53939546E12, 1.6833333333333333], [1.53939528E12, 17.383333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.5393951E12, 0.18333333333333332], [1.5393954E12, 0.18333333333333332], [1.53939522E12, 0.13333333333333333], [1.53939486E12, 0.05], [1.53939534E12, 0.1], [1.53939516E12, 0.31666666666666665], [1.53939546E12, 0.7666666666666667], [1.53939528E12, 0.21666666666666667]], "isOverall": false, "label": "403", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.53939552E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5393948E12, "maxY": 12.75, "series": [{"data": [[1.5393951E12, 0.4166666666666667], [1.53939492E12, 0.95], [1.5393954E12, 0.23333333333333334], [1.53939522E12, 0.48333333333333334], [1.53939504E12, 0.3], [1.53939486E12, 0.95], [1.53939534E12, 0.3333333333333333], [1.53939516E12, 0.6666666666666666], [1.53939498E12, 0.5666666666666667], [1.53939546E12, 0.7333333333333333], [1.5393948E12, 0.06666666666666667], [1.53939528E12, 0.5666666666666667]], "isOverall": false, "label": "Login-Open-success", "isController": false}, {"data": [[1.5393951E12, 0.25], [1.53939492E12, 0.85], [1.5393954E12, 0.16666666666666666], [1.53939522E12, 0.4], [1.53939504E12, 0.31666666666666665], [1.53939486E12, 0.9166666666666666], [1.53939534E12, 0.38333333333333336], [1.53939516E12, 0.65], [1.53939498E12, 0.7], [1.53939546E12, 0.05], [1.5393948E12, 0.05], [1.53939528E12, 0.6]], "isOverall": false, "label": "Login-Submit-success", "isController": false}, {"data": [[1.5393951E12, 2.316666666666667], [1.5393954E12, 4.2], [1.53939522E12, 4.833333333333333], [1.53939504E12, 0.13333333333333333], [1.53939552E12, 0.05], [1.53939486E12, 0.05], [1.53939534E12, 4.15], [1.53939516E12, 5.183333333333334], [1.53939546E12, 0.45], [1.53939528E12, 5.016666666666667]], "isOverall": false, "label": "Login-Open-failure", "isController": false}, {"data": [[1.5393951E12, 1.75], [1.53939492E12, 0.1], [1.5393954E12, 8.95], [1.53939522E12, 6.583333333333333], [1.53939504E12, 0.1], [1.53939552E12, 0.06666666666666667], [1.53939486E12, 0.03333333333333333], [1.53939534E12, 7.433333333333334], [1.53939516E12, 6.6], [1.53939498E12, 0.016666666666666666], [1.53939546E12, 0.7833333333333333], [1.53939528E12, 7.883333333333334]], "isOverall": false, "label": "Visualizar-Alunos-failure", "isController": false}, {"data": [[1.5393951E12, 1.6666666666666667], [1.5393954E12, 4.266666666666667], [1.53939522E12, 4.783333333333333], [1.53939552E12, 0.06666666666666667], [1.53939486E12, 0.05], [1.53939534E12, 4.033333333333333], [1.53939516E12, 5.033333333333333], [1.53939546E12, 1.2166666666666666], [1.53939528E12, 4.7]], "isOverall": false, "label": "Login-Submit-failure", "isController": false}, {"data": [[1.5393951E12, 11.6], [1.53939492E12, 12.15], [1.5393954E12, 12.616666666666667], [1.53939522E12, 11.466666666666667], [1.53939504E12, 12.75], [1.53939486E12, 10.433333333333334], [1.53939534E12, 11.816666666666666], [1.53939516E12, 12.6], [1.53939498E12, 11.416666666666666], [1.53939546E12, 2.966666666666667], [1.5393948E12, 0.016666666666666666], [1.53939528E12, 12.6]], "isOverall": false, "label": "Visualizar-Alunos-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.53939552E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
